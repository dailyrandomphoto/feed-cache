<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How and when to override Android Activity's Lifecycle methods?</title>
      <author>Gourav Khunger</author>
      <pubDate>Mon, 06 Sep 2021 08:23:50 +0000</pubDate>
      <link>https://dev.to/gouravkhunger/how-and-when-to-override-android-activity-s-lifecycle-methods-28b</link>
      <guid>https://dev.to/gouravkhunger/how-and-when-to-override-android-activity-s-lifecycle-methods-28b</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Read this article on &lt;a href="https://genicsblog.com/how-and-when-to-override-android-activity-lifecycle-methods"&gt;my blog&lt;/a&gt; for a better experience :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yesterday, I came across a &lt;a href="https://stackoverflow.com/questions/69064102/how-can-i-stop-the-progressdialog-after-returning-to-the-activity"&gt;StackOverflow question&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The OP(original poster) of the article had a scenario like this:&lt;/p&gt;

&lt;p&gt;He made a &lt;code&gt;ProgressDialog&lt;/code&gt; in an activity. After pressing a &lt;code&gt;CardView&lt;/code&gt; in that activity corresponding to a meditation session, a &lt;code&gt;ProgressDialog&lt;/code&gt; should appear for 3 seconds, and then the other activity would open - the &lt;code&gt;m1&lt;/code&gt; activity. &lt;/p&gt;

&lt;p&gt;The problem he faced was - After returning to &lt;code&gt;MeditationActivity&lt;/code&gt;, the &lt;code&gt;ProgressDialog&lt;/code&gt; continued to show up and never stopped.&lt;/p&gt;

&lt;p&gt;He wanted that the progress dialog is closed once the user comes back from the &lt;code&gt;m1&lt;/code&gt; activity to the &lt;code&gt;MeditationActivity&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Just after reading the question, it should strike to the mind that one can override the default methods present in an Activity's Lifecycle and dismiss the dialog from there!&lt;/p&gt;

&lt;p&gt;Here's how the lifecycle of an Android Activity looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yxje01ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630915330208/6F9zSmseW2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yxje01ct--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630915330208/6F9zSmseW2.png" alt="activity_lifecycle.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is an image from the official &lt;a href="https://developer.android.com/guide/components/activities/activity-lifecycle"&gt;android documentation&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;From the flowchart, we can see that it is the &lt;code&gt;onResume()&lt;/code&gt; method that is called whenever a person comes back to the activity from another screen. So it seems to be the place where we should place the logic for dismissing the dialog!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b0zdsn9N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630915509631/Eq9kO4b_9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b0zdsn9N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630915509631/Eq9kO4b_9.png" alt="activity_lifecycle.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's how we can do that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;onResume&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;onResume&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;progressDialog&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="n"&gt;progressDialog&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dismiss&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The null check is placed because the &lt;code&gt;progressDialog&lt;/code&gt; was initialized only when the person presses the &lt;code&gt;CardView&lt;/code&gt;. And if it is initialized earlier, then there would be redundant dismissals of the &lt;code&gt;progressDialog&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This was a perfect example where we could override the default lifecycle methods provided by an Android &lt;code&gt;Activity&lt;/code&gt; to perform actions pertaining to lifecycle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackoverflow.com/a/69064294/9819031"&gt;Here's my answer&lt;/a&gt; to the original question on StackOverflow! I'll be writing more explanations to StackOverflow Questions, so consider following me on hashnode.&lt;/p&gt;

&lt;p&gt;I hope you find this article helpful :)&lt;/p&gt;

</description>
      <category>android</category>
    </item>
    <item>
      <title>Introducing Medusa: Your building blocks for amazing digital commerce experiences</title>
      <author>Sebastian Rindom</author>
      <pubDate>Mon, 06 Sep 2021 08:02:18 +0000</pubDate>
      <link>https://dev.to/medusajs/introducing-medusa-your-building-blocks-for-amazing-digital-commerce-experiences-4nhp</link>
      <guid>https://dev.to/medusajs/introducing-medusa-your-building-blocks-for-amazing-digital-commerce-experiences-4nhp</guid>
      <description>&lt;p&gt;Over the past couple of years we have developed Medusa in close collaboration with customers that needed a headless solution that could support their growth for years to come. We are so excited to finally open up about what it is we have built, why we have built it, and how you can succeed with Medusa. Medusa is an open-source headless commerce engine that can power amazing digital commerce experiences and it is a great choice for any new headless ecommerce project out there.&lt;/p&gt;

&lt;p&gt;Headless ecommere has gained plenty of interest recently and more and more businesses are looking towards making the shift to a headless solution to leverage a more modular setup and all the benefits it brings, such as: better page performance, greater flexibility, better support for unique customer experiences, support for best-in-breed tech stacks, etc. When we first started working on Medusa we had no idea what headless ecommerce meant, and initially, we set out to build a fully-fledged platform, but more on this later!&lt;/p&gt;

&lt;p&gt;This is the first blog post we are publishing and it will stand as an important milestone for our work going forward. We have found that through modularity and simplicity our merchants end up being able to do much more with much less, which is why we will keep pursuing this approach when building out our product further. We want to provide a foundational set of building blocks that can be used to create unique, interesting, and powerful digital commerce experiences and we are so excited to see what amazing work we can help create.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-we-built%C2%A0medusa"&gt;
  &lt;/a&gt;
  Why we built Medusa
&lt;/h3&gt;

&lt;p&gt;We didn’t wake up one morning thinking to ourselves that we wanted to build a headless commerce engine, but rather we got to build Medusa through experience with the limitations of existing platforms. Before transitioning to working full-time on Medusa, we operated as an agency, building all kinds of tools for our customers. We built everything from portfolio websites to custom integrations to ecommerce websites, but quickly started specializing in the latter; as we found new customers we also experienced that many of them were hitting limitations with the platforms available at the time.&lt;/p&gt;

&lt;p&gt;This became evident when a client of ours expressed interest in switching platforms. We started looking for good alternatives but it quickly became clear that none of them would support the expansion across markets and brand ownership that they required so we decided with them that we should try to build a bespoke solution that would cater to their exact needs and so we began building a fully-fledged ecommerce platform with a CMS system, fulfilment system, etc. It was not soon after that we realized that we couldn’t do everything well at once so we started removing parts of what we’d built and replacing them with integrations to better tools. In the end, we were left with a core that was capable of processing and managing orders, ensuring payments were going through, and handling basic product and customer data. What was even more important was that this core was extremely good at integrating other tools and as such able to function as the glue between all the tools and services in your ecommerce stack. Essentially we had built a headless ecommerce engine, simply by following what was easiest for us as developers and most cost-efficient and scalable for our customers.&lt;/p&gt;

&lt;p&gt;Our customers were really happy with the solution as they were able to expand to multiple markets while picking and choosing from any services they found interesting without having to worry about the cost of integration. Furthermore, our customers got a high degree of ownership when using our custom-built solution, as they could ask us to build features that they needed and have them released typically within a couple of days. When contemplating how we could ensure the same level of ownership going forward it became clear that we had to open-source the solution so that no central organization would ever be in control of what was possible for the merchant. Open-sourcing Medusa would also bring a bunch of other benefits such as leveraging the community for feedback and contributions which further strengthens the product.&lt;/p&gt;

&lt;p&gt;After experiencing the issues with the existing platforms we were confident that our product would be a good alternative for many new ecommerce projects and shortly after we decided to open-source the product we started pulling out the generic parts of the implementations we had done, gave it the name Medusa and made it available through GitHub. &lt;a href="https://github.com/medusajs/medusa"&gt;Go to Github to view the open source project&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#headless-the-next-generation-of%C2%A0commerce"&gt;
  &lt;/a&gt;
  Headless: The next generation of commerce
&lt;/h3&gt;

&lt;p&gt;In the early days of the internet operating ecommerce required big budgets and with customers still being new to the digital purchasing experience, only a small group of large enterprises set up online commerce channels by either building them from scratch or using solutions like Hybris. As more customers moved online, new platforms as Magento, Shopify, and WooCommerce emerged — these were easy to use and enabled merchants to make digital commerce available as a secondary sales channel.&lt;/p&gt;

&lt;p&gt;In recent years, ecommerce has become a primary channel for many businesses leading to fierce competition in the space, increasing the need for custom solutions to give unique buying experiences. In the quest for customization, many businesses have been left frustrated with the lack of flexibility that existing platforms provide. While optimizing for ease of use, most traditional platforms is putting their focus on templated “out-of-the-box” solutions neglecting the constraints this inevitably put on the development flexibility. In many cases, businesses have been forced to converge towards compromised solutions, or even make entire platform shifts, as their needs grow beyond what a templated solution can offer. Simultaneously, a much wider variety of businesses (e.g. service providers, B2B companies etc.) requiring fully custom solutions from the beginning have started moving online.&lt;/p&gt;

&lt;p&gt;The increasing demand for customization and flexibility has spurred an interest in headless commerce among performance-focused merchants that want differentiated and fully optimized customer experiences. Yet, many of them are still to make the move. One of the main reasons, why headless has yet to become the dominant type of ecommerce is that it can be expensive to operate a headless ecommerce stack as you need developers that can maintain the infrastructure that powers the integrations between systems in your stack and a high up-front investment for making the initial setup. This is something we are solving with Medusa by providing infrastructure that is preconfigured and optimized to run your projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#putting-the-developer-first-in-your-commerce%C2%A0setup"&gt;
  &lt;/a&gt;
  Putting the developer first in your commerce setup
&lt;/h3&gt;

&lt;p&gt;The modularity and ownership that Medusa can offer is capable of powering incredibly diverse applications ranging from ecommerce websites to more niche cases like in-restaurant experiences and will with high probability be suitable for whatever digital commerce experience you can think of. Many businesses postpone the transition to headless as it can seem daunting and complex when you need developers to maintain your infrastructure and operations; we will make it possible to take out these concerns completely by providing the infrastructure that is configured and optimized to run Medusa projects, thereby making it much cheaper and more accessible for businesses to make the transition to headless early on.&lt;/p&gt;

&lt;p&gt;In more general terms we will be focusing on enabling the developer to do much more with less; this is in line with making sure that merchants can take ownership of their commerce setup as developers can help steer the direction and roadmap for your project without relying on us to create the features you need. By creating powerful tools for the developer we enable them to be more efficient and focused in their work. Examples of tools that we are building are; an infrastructure platform so developers don’t have to configure servers and databases, a powerful CLI that automates the redundant tasks developers face, a React component library to make it easy to build storefronts for Medusa, rich documentation that makes it easy to find what you are looking for and much more.&lt;/p&gt;

&lt;p&gt;With the core project being open-source we will also be open for contributions from the community making sure that we always have a product that is loved by developers so that they can do more!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What’s next?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We are working hard on completing our infrastructure product so that projects can easily be deployed to the cloud. In the meantime, if you are a developer we encourage you to try out Medusa, you can get up and running within 5 minutes and get a quick overview of what features our platform will bring. &lt;a href="https://docs.medusa-commerce.com/tutorial/set-up-your-development-environment"&gt;Check out the tutorial to get started now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you are a merchant looking for a new solution we would love to get in touch and discuss what challenges we can help solve and guide you through our process.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>opensource</category>
      <category>showdev</category>
    </item>
    <item>
      <title>🤷‍♂️ 🤷‍♀️ Vue 3 error with using TypeScript: property X does not exist on type 'EventTarget'</title>
      <author>Vic Shóstak</author>
      <pubDate>Mon, 06 Sep 2021 07:45:45 +0000</pubDate>
      <link>https://dev.to/koddr/vue-3-error-with-using-typescript-property-x-does-not-exist-on-type-eventtarget-5cpl</link>
      <guid>https://dev.to/koddr/vue-3-error-with-using-typescript-property-x-does-not-exist-on-type-eventtarget-5cpl</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Hey, DEV people! 👋 It's time to continue the &lt;strong&gt;Simple Errors&lt;/strong&gt; series with an article about the &lt;strong&gt;TypeScript&lt;/strong&gt; error I encountered when I first decided to convert my &lt;a href="https://v3.vuejs.org/guide/introduction.html"&gt;Vue.js&lt;/a&gt; &lt;code&gt;v3.x&lt;/code&gt; project from regular &lt;strong&gt;JavaScript&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;As always, don't judge too harshly, write what you think of such articles, suggest your own topics for parsing in the comments... Here we go! 🚀&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  📝 Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#explanation-of-the-error"&gt;Explanation of the error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#input-data-when-an-error-occurs"&gt;Input data when an error occurs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#resolving-the-error"&gt;Resolving the error&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusions"&gt;Conclusions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#explanation-of-the-error"&gt;
  &lt;/a&gt;
  Explanation of the error
&lt;/h2&gt;

&lt;p&gt;When I run &lt;code&gt;vue-tsc --noEmit&lt;/code&gt; to check TypeScript, I get errors:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;src/components/forms/Input.vue:4:40 - error TS2531: 
Object is possibly 'null'.

&lt;/span&gt;&lt;span class="gp"&gt;4     @input="$&lt;/span&gt;emit&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'update:modelValue'&lt;/span&gt;, &lt;span class="nv"&gt;$event&lt;/span&gt;.target.value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"
&lt;/span&gt;&lt;span class="go"&gt;                                         ~~~~~~~~~~~~~

src/components/forms/Input.vue:4:54 - error TS2339: 
Property 'value' does not exist on type 'EventTarget'.

&lt;/span&gt;&lt;span class="gp"&gt;4     @input="$&lt;/span&gt;emit&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'update:modelValue'&lt;/span&gt;, &lt;span class="nv"&gt;$event&lt;/span&gt;.target.value&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"
&lt;/span&gt;&lt;span class="go"&gt;                                                       ~~~~~

Found 2 errors.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While I knew what was wrong with error &lt;code&gt;Object is possibly 'null'&lt;/code&gt;, I had to dig deep into the documentation to find the reason for error &lt;code&gt;Property 'value' does not exist on type 'EventTarget'&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#input-data-when-an-error-occurs"&gt;
  &lt;/a&gt;
  Input data when an error occurs
&lt;/h2&gt;

&lt;p&gt;My Vue component (&lt;code&gt;src/components/forms/Input.vue&lt;/code&gt;) looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"px-3 py-2 border-2 rounded-lg"&lt;/span&gt;
    &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;input=&lt;/span&gt;&lt;span class="s"&gt;"$emit('update:modelValue', $event.target.value)"&lt;/span&gt;
    &lt;span class="na"&gt;:type=&lt;/span&gt;&lt;span class="s"&gt;"inputType"&lt;/span&gt;
    &lt;span class="na"&gt;:tabindex=&lt;/span&gt;&lt;span class="s"&gt;"tabIndex"&lt;/span&gt;
    &lt;span class="na"&gt;:placeholder=&lt;/span&gt;&lt;span class="s"&gt;"placeholder"&lt;/span&gt;
    &lt;span class="na"&gt;:value=&lt;/span&gt;&lt;span class="s"&gt;"modelValue"&lt;/span&gt;
    &lt;span class="na"&gt;:required=&lt;/span&gt;&lt;span class="s"&gt;"isRequired"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Input&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;inputType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;tabIndex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;modelValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;isRequired&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you've already noticed, in the &lt;code&gt;@input&lt;/code&gt; attribute of the template, I refer to &lt;code&gt;$event.target.value&lt;/code&gt; as I would do in regular JavaScript. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;🤔 &lt;strong&gt;Note:&lt;/strong&gt; Even if &lt;code&gt;$event.target&lt;/code&gt; return &lt;code&gt;null&lt;/code&gt;, which has no &lt;code&gt;value&lt;/code&gt; property, this is not &lt;em&gt;a big problem&lt;/em&gt; for regular JavaScript! It will give a run-time error on the client and this web application will crash. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But that's not how TypeScript works. It checks all possible problematic places in the code at the time of building the project and points them out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That's why we love and use it!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G_Ue6BQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z11642wyh1kar7n8vtfy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G_Ue6BQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z11642wyh1kar7n8vtfy.jpg" alt="solve the problem"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resolving-the-error"&gt;
  &lt;/a&gt;
  Resolving the error
&lt;/h2&gt;

&lt;p&gt;First, write a new method called &lt;code&gt;handleInputChange(event)&lt;/code&gt; in &lt;a href="https://v3.vuejs.org/guide/composition-api-setup.html"&gt;setup&lt;/a&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;// ...

&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;defineComponent&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="na"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Define event handler for input changes in TypeScript.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleInputChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; 
      &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;HTMLInputElement&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;handleInputChange&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In TypeScript, we need to explicitly point to the object we want to work with. In this case, it is the &lt;code&gt;input&lt;/code&gt; field, so its object will be called &lt;code&gt;HTMLInputElement&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;☝️ &lt;strong&gt;Note:&lt;/strong&gt; The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement"&gt;HTMLInputElement&lt;/a&gt; interface provides special properties and methods for manipulating the options, layout, and presentation of &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, let's add this method to the &lt;code&gt;@input&lt;/code&gt; in our template, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"px-3 py-2 border-2 rounded-lg"&lt;/span&gt;
    &lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="na"&gt;input=&lt;/span&gt;&lt;span class="s"&gt;"$emit('update:modelValue', handleInputChange($event))"&lt;/span&gt;
    &lt;span class="na"&gt;:type=&lt;/span&gt;&lt;span class="s"&gt;"inputType"&lt;/span&gt;
    &lt;span class="na"&gt;:tabindex=&lt;/span&gt;&lt;span class="s"&gt;"tabIndex"&lt;/span&gt;
    &lt;span class="na"&gt;:placeholder=&lt;/span&gt;&lt;span class="s"&gt;"placeholder"&lt;/span&gt;
    &lt;span class="na"&gt;:value=&lt;/span&gt;&lt;span class="s"&gt;"modelValue"&lt;/span&gt;
    &lt;span class="na"&gt;:required=&lt;/span&gt;&lt;span class="s"&gt;"isRequired"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

// ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run &lt;code&gt;vue-tsc&lt;/code&gt; once again... and boom! 💥 All errors disappeared.&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h2&gt;

&lt;p&gt;I know how difficult it is to retrain to a new paradigm of interaction with the same objects and properties! But this simple error showed me just how powerful and useful &lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt; is in the real world.&lt;/p&gt;

&lt;p&gt;Have a successful work and let simple errors &lt;strong&gt;never stop you&lt;/strong&gt; on the way to realizing your projects! 😉&lt;/p&gt;

&lt;p&gt;&lt;a href="#toc"&gt;↑ Table of contents&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#photos-and-videos-by"&gt;
  &lt;/a&gt;
  Photos and videos by
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Sascha Bosshard &lt;a href="https://unsplash.com/photos/qhhp1LwvPSI"&gt;https://unsplash.com/photos/qhhp1LwvPSI&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Lucrezia Carnelos &lt;a href="https://unsplash.com/photos/yGv-pvgRuiI"&gt;https://unsplash.com/photos/yGv-pvgRuiI&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S.
&lt;/h2&gt;

&lt;p&gt;If you want more articles like this on this blog, then post a comment below and subscribe to me. Thanks! 😘&lt;/p&gt;

</description>
      <category>vue</category>
      <category>typescript</category>
      <category>showdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Dev tool: A project built to boost your Skills and Productivity 💫</title>
      <author>Anthony Lagrede</author>
      <pubDate>Mon, 06 Sep 2021 07:45:11 +0000</pubDate>
      <link>https://dev.to/alagrede/dev-tool-a-project-built-to-boost-your-skills-and-productivity-29j8</link>
      <guid>https://dev.to/alagrede/dev-tool-a-project-built-to-boost-your-skills-and-productivity-29j8</guid>
      <description>&lt;p&gt;Today I'm pleased to announce the Znote 1.0 💫, a super versatile Markdown code editor!&lt;/p&gt;

&lt;p&gt;Shared with the Dev.to community in 2020, the positive  &lt;a href="https://dev.to/alagrede/dev-tool-a-markdown-editor-for-developers-1j13"&gt;feedback&lt;/a&gt; I received since then motivates me to push forward (many thanks again 🙏). I'm coming after months of HARD WORK, with a robust version dedicated to all your daily code usage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reminder-what-is-znote"&gt;
  &lt;/a&gt;
  Reminder: What is Znote
&lt;/h2&gt;

&lt;p&gt;Znote is a Markdown editor, designed to be your best companion 🫂 for prototyping and making scripts. The missing piece for JS developers in data exploration, offering a solid alternative to &lt;strong&gt;Jupyter&lt;/strong&gt; in the Python ecosystem.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-approach"&gt;
  &lt;/a&gt;
  The approach
&lt;/h2&gt;

&lt;p&gt;Promulgate an innovative and empirical approach that consists to &lt;strong&gt;write code and documentation in the same place&lt;/strong&gt;. In this app, you can quickly play code block, exploiting results, and put around all the necessary information in Markdown.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Easier to read and share than a raw code script, you will take pleasure to organize and share your work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1oE5pTQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa6hlrr49870ebclplb0.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1oE5pTQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa6hlrr49870ebclplb0.gif" alt="Znote demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-new"&gt;
  &lt;/a&gt;
  What's new?
&lt;/h2&gt;

&lt;p&gt;For this new version, I come with advanced features to cover intensive and professional usages. I use Znote advantageously as a replacement for various software such as SQL client, Postman or Notepad++, but also as a main tool to create and test Node scripts.&lt;/p&gt;

&lt;p&gt;To correctly achieve this:&lt;/p&gt;

&lt;p&gt;✓ I entirely &lt;strong&gt;reviewed the backend code and the UI&lt;/strong&gt; to be more cleaner, usable and robust&lt;br&gt;
✓ Add a dynamic customizable &lt;strong&gt;code completion&lt;/strong&gt;&lt;br&gt;
✓ Also, add &lt;strong&gt;Markdown shortcuts&lt;/strong&gt; and completion&lt;br&gt;
✓ A new &lt;strong&gt;Right context menu&lt;/strong&gt; with commands to transform selected text &lt;em&gt;(will be dynamic in the future)&lt;/em&gt;&lt;br&gt;
✓ A builder to create &lt;strong&gt;shortcut functions&lt;/strong&gt; callable in code&lt;br&gt;
✓ Add the possibility to add and use external &lt;strong&gt;NPM packages&lt;/strong&gt;&lt;br&gt;
✓ Run code with an &lt;strong&gt;external Node installation&lt;/strong&gt;&lt;br&gt;
✓ &lt;strong&gt;Export code&lt;/strong&gt; as scripts and Diagram as SVG&lt;br&gt;
✓ Export the entire note as &lt;strong&gt;PDF, HTML&lt;/strong&gt;...&lt;br&gt;
✓ Add various &lt;em&gt;Magic comments&lt;/em&gt;&lt;br&gt;
✓ A new horizontal layout for the preview (useful for some code use cases like SQL)&lt;br&gt;
✓ More &lt;strong&gt;themes&lt;/strong&gt; to customize the app&lt;br&gt;
✓ A more &lt;strong&gt;performant search&lt;/strong&gt; box&lt;br&gt;
✓ An internal database to &lt;strong&gt;optimize memory&lt;/strong&gt;&lt;br&gt;
And so many things...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ℹ &lt;em&gt;I am also including in this list some features developed in the very latest preview versions&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#screenshots"&gt;
  &lt;/a&gt;
  Screenshots
&lt;/h2&gt;

&lt;p&gt;Create easily a powerful SQL client, Postman... &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5OrWigAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1d3a90t569r9z7jui8w.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5OrWigAs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1d3a90t569r9z7jui8w.gif" alt="SQL functions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add your NPM packages and create shortcut functions to create your perfect dedicated tool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cr6DEFmY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/je1f5dkwalvjw8t86c4m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cr6DEFmY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/je1f5dkwalvjw8t86c4m.png" alt="NPM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;More themes are available to enhance the experience&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hAMysySM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h34w5ox8o2g20w0nv4dw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hAMysySM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h34w5ox8o2g20w0nv4dw.png" alt="theme"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#and-now"&gt;
  &lt;/a&gt;
  And Now?
&lt;/h2&gt;

&lt;p&gt;I now plan to integrate &lt;strong&gt;recipes&lt;/strong&gt; to load via an open marketplace, to safely add useful functions and commands to Znote. I'm also investigating to add automatic Jobs, tabs, a valid EV certificate... &lt;/p&gt;

&lt;p&gt;Because a software is never finished 😅, I finally decided to introduce some paid features, through a perpetual license, like themes or NPM packages &lt;em&gt;(mainly to cover advanced use cases)&lt;/em&gt; to help me to push Znote even further.&lt;/p&gt;

&lt;p&gt;This will also get you a more consistent Cloud space to save and share your works between all your devices. Along the &lt;strong&gt;perpetual license&lt;/strong&gt; you will also get a year of updates.&lt;/p&gt;

&lt;p&gt;More details about features on the &lt;a href="https://znote.io/checkout.html"&gt;Znote website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;❤️ I really enjoy sharing this app with you from the start, hope to see you soon in my &lt;a href="https://znote.io#newsletter"&gt;newsletter&lt;/a&gt; to share tips and tutorials.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>AWS open source news and updates #80</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Mon, 06 Sep 2021 07:36:57 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-80-477e</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-80-477e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#september-6th-2021-instalment-80"&gt;
  &lt;/a&gt;
  September 6th, 2021 - Instalment #80
&lt;/h2&gt;

&lt;p&gt;Newsletter #80.&lt;/p&gt;

&lt;p&gt;So what delights does #80 of this newsletter offer this week? We have plenty of new open source projects, such as aws-o11y-recipes (observability recipes), dassana-io (contextual alerts), sgCheckup (security), aws-lambda-scheduler (developer tool to simplify scheduling of AWS Lambda functions), aacli (AWS cli authentication/SSO) as well as Terraform modules and AWS open source solutions covering Hugging Face, reporting on your AWS accounts and more. If you are more interesting in blog posts covering open source topics, we have posts from the AWS and community covering OpenSearch, GraphQL, Flutter, Apache Airflow, Debezium, Apache Kafka, Kubernetes, Packer, OpenTelemetry and many more. We also have a round up of posts covering last weeks GA announcement of Grafana. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Job of the week&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ur"&gt;Principal Developer Advocate - Java Specialist&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A new opening in my team has come up, for anyone in the Cambridge/Boston area in the US. As a Principal Developer Advocate in the AWS Developer Relations organisation, you will work to earn trust with Enterprise developers and the broader Java community through your technical leadership and expertise. This is a high-impact role that's well-suited to someone with domain-specific technical experience that enjoys sharing what they have learned in order to help users solve their technical issues and overcome any challenges they face. You will have the ability to influence and educate customers at every stage of their experience with technologies such as OpenJDK, Serverless, Containers, DevOps tools and more.&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href="https://aws-oss.beachgeek.co.uk/ur"&gt;job description&lt;/a&gt; for more details, and please feel free to DM or email me with any questions you might have. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Oğuzhan Yılmaz, Michael Walmsley, Bhuvanesh R, Derek Bingham, Ankit Anand, Gold Fig Labs, Arkady Titenko, Oren Leung, Francesco Canessa, Eddie Pick, Dhawalkumar Patel, Kapil Shardha, Aravind Singirikonda, Juan Lamadrid, Andrew Hopp, Nicholas Knize, Pavan Kumar Sunder, Jon Slominski, Roy Kincaid, Eric Robertson, Ali Spittel, Aaron Todd, Ian Botsford, Ken Gilmer, Nicki Stone, John Woo, Gopalakrishnan Subramanian, Satheesh Kumar, Alolita Sharma, Nizar Tyrewall, Imaya Kumar Jagannathan, Michael Hausenblas, Danilo Poccia, Julia Hu, Matthieu Fuzellier, Srikanth Kodali, Yuxin Yang, Sheetal Joshi, Mike Stefaniak, Jayanth Varavani, Vimal Bagmar, Waleed Sarwari, and Santosh Vallurupalli.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-open-source-projects"&gt;
  &lt;/a&gt;
  Latest open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;aws-o11y-recipes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/up"&gt;aws-o11y-recipes&lt;/a&gt; this was the project I spent most time on last week, a new initiative/home to share recipes for observability (o11y) solutions at AWS. Currently this is covering six areas: &lt;strong&gt;destinations&lt;/strong&gt; (Prometheus, Grafana, OpenSearch, CloudWatch and Jaeger), &lt;strong&gt;agents&lt;/strong&gt; (AWS Distro for OpenTelemetry, Fluent Bit, CloudWatch agent and AWS X-Ray agent), &lt;strong&gt;languages&lt;/strong&gt; (Java and Javascript currently, Python, .NET, Go and Rust to come), &lt;strong&gt;infrastructure and databases&lt;/strong&gt; (Amazon RDS, DynamoDB and Managed Streaming for Apache Kafka), &lt;strong&gt;compute&lt;/strong&gt; (AWS Batch, Amazon ECS and EKS, Amazon ElasticBeanstalk and AWS Lambda) and &lt;strong&gt;compute engine&lt;/strong&gt; (AWS Fargate, Amazon EC2 and Amazon Lightsail). This repository will grow over time, so make sure to check it out, bookmark it and even better, why not contribute your own recipes. If you are using Python, .NET, Go or Rust, would be great to start adding those to the repo. To find out more and check out these recipes, head over to &lt;a href="https://aws-oss.beachgeek.co.uk/uq"&gt;AWS Observability Recipes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;dassana-io&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/vl"&gt;dassana-io&lt;/a&gt; this is a new open source project from Dassana that looks interesting. From the &lt;a href="https://aws-oss.beachgeek.co.uk/vm"&gt;docs&lt;/a&gt; &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dassana is on a mission to solve the alert fatigue problem. Now, more than ever before, it is easy to "scan" your environment for security issues and deploy threat detection tools. But as soon as you deploy these tools, you will find that they start generating too many alerts. Although most of the alerts are accurate, they still lack the necessary context to be of great help. For example, if you get an alert that an s3 bucket has been found public in your environment, you might drop everything and start investigating it. But what if you find that there is a website associated with the bucket? What if the bucket has a word public or static in it? Wouldn't it be great if the alert already had this context to begin with? That's what Dassana does. Dassana adds context to security alerts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I am going to try and get this project up and running this week to find out more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;sgCheckup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/uj"&gt;sgCheckup&lt;/a&gt; another project from the folks at Gold Fig Labs, sgCheckup is a tool to scan your AWS Security Groups for a combination of open ports and attached Network Interfaces. The goal is to find anything listening on a port that you wouldn't consider safe. In addition to generating reports for security groups, sgCheckup can generate and run nmap to get specifics. Really loving the 80's demo scene logo/graphics on the README - I would love to know how you did that. More please!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WJ0DCzQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/291215/131582460-4a581540-2f11-4c96-af54-a1e39961e69d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WJ0DCzQo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/291215/131582460-4a581540-2f11-4c96-af54-a1e39961e69d.png" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-lambda-scheduler&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/vh"&gt;aws-lambda-scheduler&lt;/a&gt; it would be nice if you could quickly configure any existing functions you have in AWS Lambda to work on a schedule. I know this has been something I have had to do. Whilst it is not a problem to do this, this handy open source project from &lt;br&gt;
Oğuzhan Yılmaz makes this painless. Deploy this function, and then to run your functions on a schedule, all you need to do is trigger this function with some configuration data. Example/docs will get you up and running in no time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aacli&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/uk"&gt;aacli&lt;/a&gt; Arkady Titenko has created this nice open source CLI tool allows you to programmatically authenticate into AWS accounts through IAM roles in a multi-account AWS Organizations setup, and requires MFA enabled for your account. This project was born from an effort to figure out a simple yet reasonably secure way of programmatic authentication into AWS environments with support for MFA authentication. Read more about this project in the notes, plenty of examples of how to use it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-perspective&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ul"&gt;aws-perspective&lt;/a&gt; I have shared details about this project before, but &lt;a href="https://twitter.com/toksvaeth/status/1431232907834765314"&gt;this tweet&lt;/a&gt; make me think that I should share it again incase anyone missed it the first time. AWS Perspective is a tool that quickly visualizes AWS Cloud workloads as architecture diagrams. You can use the solution to build, customize, and share detailed workload visualizations based on live data from AWS. The latest update to this project focuses heavily on cost related features that allow you to better understand your cloud billing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tVzQrRkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/awslabs/aws-perspective/blob/master/docs/screenshots/cost-dialog.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tVzQrRkr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/awslabs/aws-perspective/blob/master/docs/screenshots/cost-dialog.png%3Fraw%3Dtrue" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWSTagsAsADatabase&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/um"&gt;AWSTagsAsADatabase&lt;/a&gt; Whilst I absolutely do not recommend anyone does this, this project from Oren Leung did make me smile this week. Following on from an ongoing joke of Amazon Route53 being a "database", now comes using AWS tags as a "database". Growing up in tech in the 80s and the demo scene, this kind of reminds me of the kinds of things that folks tried to do to show what was possible. Nice effort Oren.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;web-client-for-aws-transfer-family&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/v2"&gt;web-client-for-aws-transfer-family&lt;/a&gt; is an open source project that provides a web-based interface to consumers of your existing Transfer Family SFTP endpoints. You can read more details, including how to deploy this project, in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/v3"&gt;Announcing the open-source release of Web Client for AWS Transfer Family&lt;/a&gt; from Kapil Shardha, Aravind Singirikonda, and Juan Lamadrid.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QEakpfwJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2021/08/26/The-Web-Client-for-AWS-Transfer-Family-solution-deploys-multiple-AWS-resources-example-architecture-1-1024x600.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QEakpfwJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/e1822db470e60d090affd0956d743cb0e7cdf113/2021/08/26/The-Web-Client-for-AWS-Transfer-Family-solution-deploys-multiple-AWS-resources-example-architecture-1-1024x600.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;terraform-ec2-docker-swarm&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/un"&gt;terraform-ec2-docker-swarm&lt;/a&gt; this project from Francesco Canessa helps you to deploy Docker Swarm terraform infrastructure on AWS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;terraform-aws-dms&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/vk"&gt;terraform-aws-dms&lt;/a&gt; if you are looking for a way to provision your Database Migration Service via Infrastructure as Code using Terraform, then clowd.haus has you covered.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;amazon-sagemaker-huggingface-benchmark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/uo"&gt;amazon-sagemaker-huggingface-benchmark&lt;/a&gt; this project will be of interesting if you are working on building NLP models with HuggingFace. It provides code to help you benchmark the trade-offs between cost, train time, and performance for fine-tuning HuggingFace models with distributed training on Amazon SageMaker. Detailed README to get you going.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;finetune-deploy-bert-with-amazon-sagemaker-for-hugging-face&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/uw"&gt;finetune-deploy-bert-with-amazon-sagemaker-for-hugging-face&lt;/a&gt; this project uses the Hugging Faces transformers and datasets library with Amazon SageMaker to fine-tune a pre-trained transformer on binary text classification. It uses the pre-trained DistilBERT model with the Amazon Reviews Polarity dataset. Eddie Pick and Dhawalkumar Patel have put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/ux"&gt;Fine-tune and host Hugging Face BERT models on Amazon SageMaker&lt;/a&gt; to help walk you through the code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QRAkQiOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/08/31/ML3931-image005.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QRAkQiOo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/08/31/ML3931-image005.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;greengrass-v2-sagemaker-edge-manager-python&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ut"&gt;greengrass-v2-sagemaker-edge-manager-python&lt;/a&gt; this project uses two open source projects, AWS Greengrass v2 and NEO to demonstrate how to integrate them via components. At the end of the sample, you will have a Python-based component running inference at the edge with the SageMaker Edge Manager binary agent, and a YOLOv3 Darknet model. To help you get started with this project, check out the blog post &lt;a href="https://aws-oss.beachgeek.co.uk/uu"&gt;Build machine learning at the edge applications using Amazon SageMaker Edge Manager and AWS IoT Greengrass V2&lt;/a&gt; from Pavan Kumar Sunder and Jon Slominski.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tt3BNdYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/08/31/ml2780-image001.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tt3BNdYE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/08/31/ml2780-image001.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hot-topics"&gt;
  &lt;/a&gt;
  Hot topics
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Grafana&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Announced during re:Invent 2020 in preview, last week saw the general availability announcement for Amazon Managed Grafana, a fully managed service developed in collaboration with Grafana Labs that makes it easy to use the open-source and the enterprise versions of Grafana to visualize and analyze your data from multiple sources. &lt;/p&gt;

&lt;p&gt;We had several posts covering this, with my colleague Danilo Poccia's sharing the news in &lt;a href="https://aws-oss.beachgeek.co.uk/v6"&gt;Amazon Managed Grafana Is Now Generally Available with Many New Features&lt;/a&gt;. The GA announcement saw plenty of additional new features, and in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/v7"&gt;Amazon Managed Grafana is now Generally Available&lt;/a&gt;, Imaya Kumar Jagannathan and Michael Hausenblas dive a little deeper into the launch, including the new features that have been added.&lt;/p&gt;

&lt;p&gt;Sunil Ramachandra and Roy Rodan walk you through the steps required to integrate your identity provider with Amazon Managed Grafana, in the post &lt;a href="https://aws-oss.beachgeek.co.uk/v8"&gt;Amazon Managed Grafana supports direct SAML integration with identity providers&lt;/a&gt;. They show you how you can assign users and appropriate roles through your identity provider so that your users can seamlessly authenticate into the Amazon Managed Grafana environment to visualise and monitor your workloads and log.&lt;/p&gt;

&lt;p&gt;Finally, we had Julia Hu, Matthieu Fuzellier, Srikanth Kodali, and Yuxin Yang collaborate on this post, &lt;a href="https://aws-oss.beachgeek.co.uk/v9"&gt;How to use InfluxDB and Grafana to visualize ML output with AWS IoT Greengrass&lt;/a&gt; where they show how to build an end-to-end workflow using open source tools with AWS IoT Greengrass version 2 to visualise ML inference results in near real-time on an edge device. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K8iCIJWX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/30/juliahu_influxdb-grafana-greengrass_f1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K8iCIJWX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/30/juliahu_influxdb-grafana-greengrass_f1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-community-blog-posts"&gt;
  &lt;/a&gt;
  AWS and Community blog posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mikaela Pisani has put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/va"&gt;How to run Airflow, Spark, &amp;amp; Apache Livy in AWS EKS&lt;/a&gt;, where she walks you through each of these open source components and then how you can run them on Amazon EKS to address some specific results such as scalability, traceability, isolation and speed of processing. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Debezium / Apache Kafka&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Debezium is an open source distributed platform for change data capture. Bhuvanesh R shares his experiences (and helps you avoid the issues he came across) as he walks you through how to integrate Debezium with AWS Managed Streaming for Kafka IAM authentication, in his post &lt;a href="https://aws-oss.beachgeek.co.uk/vb"&gt;Debezium With AWS MSK IAM Authentication&lt;/a&gt;. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zGSR8RmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thedataguy.in/assets/aws/Debezium%2520With%2520AWS%2520MSK%2520IAM%2520Authentication.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zGSR8RmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://thedataguy.in/assets/aws/Debezium%2520With%2520AWS%2520MSK%2520IAM%2520Authentication.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gopalakrishnan Subramanian and Satheesh Kumar explain how to combine HAProxy with a lightweight connection pool handler PgBouncer as a sidecar to load balance the connections to Aurora reader nodes in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/v5"&gt;Set up highly available PgBouncer and HAProxy with Amazon Aurora PostgreSQL readers&lt;/a&gt; [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ecWwNLJv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/08/09/DBBLOG-1153-image005_v2-1024x680.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ecWwNLJv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/08/09/DBBLOG-1153-image005_v2-1024x680.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon ECS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;John Preston is back with more blogging goodness, this time helping you to get Traefik up and running within your Amazon ECS environments in, &lt;a href="https://aws-oss.beachgeek.co.uk/vc"&gt;Traefik Proxy in AWS with AWS ECS - Part 1&lt;/a&gt;. When I asked John what Traefik was, he pointed me to the project page but did say that this project "makes network boring" - anything that makes anything boring, also makes my life easier, so make sure you check this post out. John's post are always great to read. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WK6RCk58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://labs.compose-x.io/_images/TraefikPart1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WK6RCk58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://labs.compose-x.io/_images/TraefikPart1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The VPC Container Networking Interface (CNI) Plugin is the open source component that provides a networking plugin for pod networking in Kubernetes using Elastic Network Interfaces on AWS. In the post, &lt;a href="https://aws-oss.beachgeek.co.uk/vj"&gt;Amazon VPC CNI plugin increases pods per node limits&lt;/a&gt;, Sheetal Joshi, Mike Stefaniak, and Jayanth Varavani walk you through some recent enhancements that improve capacity and dive deep into the details of the implementation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o_7wYCIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/09/03/image-8-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o_7wYCIX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/09/03/image-8-1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Packer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Packer is an open-source tool developed by HashiCorp for creating identical machine images for multiple platforms from a single source configuration. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/vi"&gt;Migrating from HashiCorp Packer to EC2 Image Builder&lt;/a&gt;, Vimal Bagmar, Waleed Sarwari, and Santosh Vallurupalli walk you through how to migrate Packer template build components specifically for commonly used Packer Provisioners, such as Ansible, Chef, Shell, and Files to their corresponding EC2 Image Builder components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PkkNGbp7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/09/02/Picture2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PkkNGbp7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/09/02/Picture2.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Lambda Powertools&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Michael Walmsley provides a great primer on Idempotency in hist post, &lt;a href="https://aws-oss.beachgeek.co.uk/ve"&gt;Making All Your APIs Idempotent&lt;/a&gt;. From what it is to why you should care, he also shares how you can use AWS Lambda Powertools for Python to make it easy when creating an idempotent API. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SeML2TNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1022/1%2Auw-EGaoznpKe25eaQqKYcg.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SeML2TNb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1022/1%2Auw-EGaoznpKe25eaQqKYcg.jpeg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Flutter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Want to know what a BLoc pattern is? I was certainly curious, and in this post, &lt;a href="https://aws-oss.beachgeek.co.uk/vf"&gt;Using the Flutter BLoC Pattern with AWS Amplify Datastore&lt;/a&gt; my good friend Derek Bingham walks you through an example of the BLoC pattern, how you can use it to improve your use of AWS Amplify Datastore API calls, to be a lot cleaner and so easier to maintain. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MSLJ_t8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--X02BneBS--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkrotfsyacotuof5uf2h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSLJ_t8---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--X02BneBS--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pkrotfsyacotuof5uf2h.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of my favourite posts in recent weeks, Ali Spittel has put together &lt;a href="https://aws-oss.beachgeek.co.uk/uz"&gt;A Complete Beginner's Guide to GraphQL&lt;/a&gt; which will get you up and running quickly on this topic.&lt;/p&gt;

&lt;p&gt;Now that you know more about GraphQL, Eric Robertson has put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/uy"&gt;Implementing caching for pipeline resolvers in AWS AppSync GraphQL APIs&lt;/a&gt; that shows how to use caching for pipeline resolvers to unlock lower latency with less requests to backend data sources, and can help reduce costs when using pipeline resolvers in AppSync to orchestrate and connect data from multiple data sources with a single GraphQL API call. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenTelemetry&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ankit Anand has put together this post, &lt;a href="https://aws-oss.beachgeek.co.uk/vg"&gt;Everything you need to know about OpenTelemetry Collector&lt;/a&gt; that provides a clean and simple guide to understanding more about what OpenTelemetry is, the architecture, why you should care and then how to get started. Worth 5 minutes of your time. &lt;/p&gt;

&lt;p&gt;In this weeks winner of longest blog title competition, Alolita Sharma and Nizar Tyrewall share the release highlights from version 0.12 of AWS Distro for OpenTelemetry in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/v4"&gt;AWS Distro for OpenTelemetry 0.12 adds metrics support for AWS Lambda, Amazon ECS on EC2 metrics, and Amazon EKS metrics in Amazon Managed Prometheus (Preview)&lt;/a&gt;. Amazon Elastic Kubernetes Service (Amazon EKS) Infrastructure metrics and trace collection, AWS Lambda layers supporting metrics collection for Amazon Managed Service for Prometheus (AMP) and Amazon Elastic Container Service (Amazon ECS) running on Amazon Elastic Cloud Compute (Amazon EC2) container metrics are the three covered, so click on the link to find out more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;How many times have you wondered how a piece of technology or software you use works, from end to end? In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/us"&gt;A query, or There and Back Again&lt;/a&gt; Andrew Hopp and Nicholas Knize tell the story of how a query works in OpenSearch by following a query through OpenSearch&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS SDKs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We had a couple of alpha release announcements this week.&lt;/p&gt;

&lt;p&gt;Start off with this post from Aaron Todd, Ian Botsford, and Ken Gilmer, in &lt;a href="https://aws-oss.beachgeek.co.uk/v0"&gt;Announcing new AWS SDK for Kotlin alpha release&lt;/a&gt; they cover how the AWS SDK for Kotlin makes it easy to call AWS services using idiomatic Kotlin APIs. You can use the native Kotlin language constructs you are used to, have mobile support without compromises, and target multiple platforms and execution environments in a single language.&lt;/p&gt;

&lt;p&gt;Following that we had Nicki Stone and John Woo with &lt;a href="https://aws-oss.beachgeek.co.uk/v1"&gt;Announcing new AWS SDK for Swift alpha release&lt;/a&gt;. This helps customers developing in Swift that have asked for a native Swift SDK so they can use the language constructs they are used to, and provides an SDK that behaves similarly to SDKs they have used in other language environments. &lt;/p&gt;

&lt;p&gt;With post of these announcements, the SDK's are still in the early stages of development. This is a great time to influence the roadmap by sharing your thoughts on the SDK design, as well as features and services that are the most important to you. Make sure you use the links in the post to provide your ideas or feedback.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MQTT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We recently announced the general availability of MQTT retained messages for AWS IoT Core. This feature allows you to store a single message per a given MQTT topic for delivery to any current and future topic subscribers. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/uv"&gt;Getting started with MQTT retained messages for AWS IoT Core&lt;/a&gt; Roy Kincaid provides an overview of this feature, share some use cases to keep in mind when designing your next IoT project, and provide a guide on how to get started. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tTpqj8Ki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f6e1126cedebf23e1463aee73f9df08783640400/2021/09/01/getting-started-with-retained-messages-01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tTpqj8Ki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f6e1126cedebf23e1463aee73f9df08783640400/2021/09/01/getting-started-with-retained-messages-01.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ROS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Whilst this post, &lt;a href="https://aws-oss.beachgeek.co.uk/vd"&gt;Introduction to ROS: The Robot Operating System&lt;/a&gt; is not AWS specific, AWS RoboMaker and Amazon have been working with this open source project/foundation for some time, and this tutorial/course is a great primer/introduction if you are interested in open source robotics. You will need to register (I did mine via LinkedIn) and the course covers the basics you need to get started. The course also links to various pieces of hardware that you will need.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;MariaDB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Relational Database Service (Amazon RDS) for MariaDB now supports MariaDB minor versions 10.5.12, 10.4.21, 10.3.31, and 10.2.40. We recommend that you upgrade to the latest minor versions to fix known security vulnerabilities in prior versions of MariaDB, and to benefit from the numerous bug fixes, performance improvements, and new functionality added by the MariaDB community.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Aurora PostgreSQL-Compatible Edition now supports PostgreSQL major version 13. PostgreSQL 13 includes improved functionality and performance from enhancements such as de-duplication of B-tree index entries, improved performance for queries that use partitioned tables, incremental sorting to accelerate data sorts, parallel processing of indexes with the VACUUM command, more ways to monitor activity within a PostgreSQL database, new security capabilities, and more. This release also adds support for bool_plperl, which simplifies writing Perl procedures.&lt;/p&gt;

&lt;p&gt;With PostgreSQL 13 on Aurora PostgreSQL-Compatible Edition you can create time series data tables with improved data ingestion rates of several hundred thousands of metrics per second for use cases such as storing DevOps metrics or tracking business metrics (e.g., daily sales).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Copilot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Version 1.10 of AWS Copilot was released with support for publish/subscribe architectures that customers can use to decouple microservices and consume events asynchronously. Customers can now use AWS Copilot to build event-driven architectures or to decouple services in order to increase performance, reliability, and scalability.&lt;/p&gt;

&lt;p&gt;All existing AWS Copilot services and jobs can use the new publish field to broadcast events to Amazon Simple Notification Service (Amazon SNS) topics. These events can then be received via Amazon Simple Queue Service (Amazon SQS) queues with the new "Worker Service" pattern in AWS Copilot for Amazon Elastic Container Service (Amazon ECS) services running on AWS Fargate.&lt;/p&gt;

&lt;p&gt;AWS Copilot v1.10 also adds a new field taskdef_overrides in the manifest file to allow customers to add all fields supported by Amazon ECS task definitions that are not surfaced in the manifest. This enables customers to use configurations available for Amazon ECS (such as the ulimit parameter which allows customers to change default resource limit values) for their AWS Copilot jobs and services which are not supported in AWS Copilot directly. Additionally, the alias field for request and load balanced services has been augmented to accept a list of friendly domain names instead of a single entry.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Cloud DevSecOps with Bridgecrew and Terraform&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;8th September, 9am PST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;From scanning infrastructure as code (IaC) for security misconfigurations to implementing automated DevSecOps workflows, this workshop will provide a hands-on experience to automate your cloud security. Find out more and &lt;a href="https://aws-oss.beachgeek.co.uk/ud"&gt;register via this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud Native Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;23rd September, Bern Switzerland&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is this, an in person event returning? A stellar line up including our own Michael Hausenblas, an event looking at CNCF projects and the future of IT. Find out more and to view prices/register, by clicking &lt;a href="https://cloudnativeday.ch/en/#speakers"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GraphQL API security best practices with AWS AppSync and AWS Amplify&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;14th October, 11am AEST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As a developer, the most important parts of managing your applications should always include enhancing performance while strengthening security. In this webinar, we take you through security best practices for your GraphQL API’s with AWS AppSync and AWS Amplify, providing you with an understanding of how these can be applied to your applications. In this session, you will learn about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GraphQL Protocol and how to configure a schema&lt;/li&gt;
&lt;li&gt;Possible ways to authenticate and authorise access to GraphQL APIs&lt;/li&gt;
&lt;li&gt;How to configure network security for your API&lt;/li&gt;
&lt;li&gt;How to enable observability for your API with logging, tracing or auditing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To &lt;a href="https://aws-oss.beachgeek.co.uk/ue"&gt;register for this event, use this link&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>AWS SQS Workbench - A Simple &amp; Non-Technical Way To Access AWS SQS</title>
      <author>Harinder Seera 🇭🇲</author>
      <pubDate>Mon, 06 Sep 2021 07:33:00 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-sqs-workbench-a-simple-non-technical-way-to-access-aws-sqs-10ec</link>
      <guid>https://dev.to/aws-builders/aws-sqs-workbench-a-simple-non-technical-way-to-access-aws-sqs-10ec</guid>
      <description>&lt;p&gt;AWS offers several methods for accessing its services. These services can be accessed via CLI, SDK, and console. If you are a technical (i.e developer), CLI and SDK are most likely your most frequently used approaches. When it comes to a newcomer, or someone who is not overly technical, using a console is preferable. However, this has its own disadvantages. To do any work, you must log in on a regular basis. Which can be annoying if all you are trying to do is access a single service such as SQS.&lt;/p&gt;

&lt;p&gt;To help with this matter, I developed a Windows-based AWS SQS workbench that allows anyone to use SQS without having to know the CLI/SDK or going to the console on a regular basis. This is a great tool for QA testers/BA/Novice who wish to test putting or viewing messages in a queue. This tool is also useful for someone who isn't extremely technical yet wants to access SQS services. Especially if you're working on a Windows computer. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; It can be used by both technical and non-technical people. It was, however, created with non-technical users in mind. &lt;/p&gt;

&lt;p&gt;Rest of the post will walk you through how to use AWS SQS Workbench.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#download"&gt;
  &lt;/a&gt;
  Download
&lt;/h2&gt;

&lt;p&gt;The AWS SQS workbench executable can be found at &lt;a href="https://github.com/hseera/aws-python-utilities/blob/main/sqs%20workbench.zip"&gt;this link&lt;/a&gt;. When you start the &lt;strong&gt;sqs workbench&lt;/strong&gt; exe after unzipping, you will be presented with the Config screen.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Gfp5CTma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kv3pxtjg78ptaxxlq40c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Gfp5CTma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kv3pxtjg78ptaxxlq40c.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#workbench-configuration"&gt;
  &lt;/a&gt;
  Workbench Configuration
&lt;/h2&gt;

&lt;p&gt;In the workbench, you have two options for connecting to AWS services using credentials. The first step is to enter credentials on the configuration tab. Another option is to keep your credentials in the following location on your Windows PC.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/Users/[username]/.aws&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Example:&lt;/em&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uUrarmAy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69jrs5337x8ym9mzrp2q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uUrarmAy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/69jrs5337x8ym9mzrp2q.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the article, we'll enter our credentials into the text box and connect. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KbOZg8CF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8btkn71f0l9ksgcs91k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KbOZg8CF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8btkn71f0l9ksgcs91k.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the connection has been established, select the SQS tab. This is where all of the magic takes place. The following are the various components that comprise the SQS screen. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dl3UAVGH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa3suo8b9reqkuz9uwm3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dl3UAVGH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fa3suo8b9reqkuz9uwm3.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-region-name"&gt;
  &lt;/a&gt;
  1. Region Name
&lt;/h1&gt;

&lt;p&gt;The region name displays a list of all accessible AWS regions throughout the world. Click the &lt;strong&gt;"List Regions"&lt;/strong&gt; button to see the list.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yAA06dwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxdluo9nacpkiwewtktv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yAA06dwc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uxdluo9nacpkiwewtktv.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-queue-list"&gt;
  &lt;/a&gt;
  2. Queue List
&lt;/h1&gt;

&lt;p&gt;The queue list displays all available queues in that region to which you have access. If the region does not have a queue, a message will be displayed on the console. To view the queues, select the region from the region list and then click &lt;strong&gt;"List Queues"&lt;/strong&gt;. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fbIvBg4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wc7p2a8xzz4ktc6uzsyu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fbIvBg4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wc7p2a8xzz4ktc6uzsyu.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-messages-in-the-queue"&gt;
  &lt;/a&gt;
  3. Messages In The Queue
&lt;/h1&gt;

&lt;p&gt;Click on the queue name in the list to see how many messages are in the queue, not visible, or delayed. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RAgZAG1_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0l591swe28xoov2fq47m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RAgZAG1_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0l591swe28xoov2fq47m.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-send-message"&gt;
  &lt;/a&gt;
  4. Send Message
&lt;/h1&gt;

&lt;p&gt;You can send or view SQS messages in the current version of the workbench. Once you have selected the queue, you have two options for sending a message.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can type the payload into the provided textbox section.&lt;/li&gt;
&lt;li&gt;Open a file and load the payload. Use the &lt;strong&gt;Browse&lt;/strong&gt; button to locate the file containing the payload and the &lt;strong&gt;Load&lt;/strong&gt; button to display it on the screen.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y4m6FZbz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l0kk6dg6460oxydw17nt.png" alt="alt text"&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#5-send-once-or-multiple-sends"&gt;
  &lt;/a&gt;
  5. Send Once OR Multiple Sends
&lt;/h1&gt;

&lt;p&gt;Again, you have two options for how many messages to send to the queue.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the &lt;strong&gt;"Send Once"&lt;/strong&gt; option if you only want to send one message to the queue.&lt;/li&gt;
&lt;li&gt;If you want to send numerous messages to the Queue, select &lt;strong&gt;"Send Multi Msgs"&lt;/strong&gt;. Enter the number of messages to send in the &lt;strong&gt;"# of Msg To Send"&lt;/strong&gt; field and the delay between each message in the &lt;strong&gt;"Delay Btw Msgs (sec)"&lt;/strong&gt; field for this option. 
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O2PuK-Pf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eje89861fiio0dg0oi8j.png" alt="alt text"&gt;
When sending or receiving messages, the console screen displays the time it took. This is useful if you want to examine the performance of putting and viewing messages. &lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#6-receiveview-message"&gt;
  &lt;/a&gt;
  6. Receive/View Message
&lt;/h1&gt;

&lt;p&gt;To view a message in the queue, choose the queue name and click the &lt;strong&gt;"Receive Msg"&lt;/strong&gt; button. It will display the message's payload. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ePtMUBjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kk1xztyssz063sn3qam.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ePtMUBjX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0kk1xztyssz063sn3qam.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-console"&gt;
  &lt;/a&gt;
  7. Console
&lt;/h1&gt;

&lt;p&gt;The console screen contains all errors, responses, and logs. The Workbench's &lt;strong&gt;"Save Output"&lt;/strong&gt; option allows you to save console data for further analysis. To clear the console message, use &lt;strong&gt;"Clear Output"&lt;/strong&gt;. In the current version, the output is saved in the same folder as the executable. "output.txt" is the name of the output file.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9u5o7MV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f07kyynzzyx629mxbrhx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9u5o7MV---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f07kyynzzyx629mxbrhx.png" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all there is to it when it comes to using the workbench. Hopefully, SQS workbench will come in handy to you in the aforementioned case.&lt;/p&gt;

&lt;p&gt;Keep an eye out for updates as I add new features and improvements. If you find a bug in the workbench, please post a &lt;a href="https://github.com/hseera/aws-python-utilities/issues"&gt;bug report&lt;/a&gt; so I can fix and further improve it. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you want to help with the code, please contact me. Also, if you find it useful, &lt;strong&gt;please leave a comment or a star on the github repo&lt;/strong&gt;. Alternatively, &lt;strong&gt;share it on your social channels&lt;/strong&gt; so that anyone who may require it is aware of the existence of sqs workbench.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;If you enjoyed this article feel free to share it on social media 🙂&lt;/p&gt;

&lt;p&gt;Say Hello on: &lt;a href="https://www.linkedin.com/in/harinderseera/"&gt;Linkedin&lt;/a&gt; | &lt;a href="https://twitter.com/harinderseera"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.polywork.com/harinderseera"&gt;Polywork&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Blogging: &lt;a href="https://dev.to/harinderseera"&gt;Dev&lt;/a&gt; | &lt;a href="https://harinderseera.hashnode.dev/"&gt;Hashnode&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github: &lt;a href="https://github.com/hseera"&gt;hseera&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>beginners</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Enable Together Mode in Microsoft Teams</title>
      <author>Stacksjar</author>
      <pubDate>Mon, 06 Sep 2021 07:10:02 +0000</pubDate>
      <link>https://dev.to/stacksjar/enable-together-mode-in-microsoft-teams-1c4n</link>
      <guid>https://dev.to/stacksjar/enable-together-mode-in-microsoft-teams-1c4n</guid>
      <description>&lt;p&gt;Microsoft has launched a new feature for their teams application. Together mode is one of the feature of new meeting experience in Teams app. The together mode uses AI segmentation technology to digitally place participants in a shared background. This makes you feel like you’re sitting in the same room with everyone else in the meeting or class as shown in image above. Below is the difference between the normal meeting experience and together mode meeting experience.&lt;/p&gt;

&lt;p&gt;Who Can Use Together Mode in Teams?&lt;br&gt;
The Together Mode feature is available to all users. As of now, it is available for the desktop version only but will be extended to the Android/iOS Teams application soon mentioned by Microsoft Teams. As seen in the picture above, the Together Mode feature will be launched with an auditorium view. This view provides a semblance to people gathered in an auditorium, while you watch the audience as a speaker. More views are expected to be launched as the feature evolves.&lt;/p&gt;

&lt;p&gt;How do you get team mode together?&lt;br&gt;
Open Microsoft Teams, Click on profile icon &amp;gt; About &amp;gt; Version – Now you can see the current version of MS-Teams make sure you are updated to latest version.&lt;/p&gt;

&lt;p&gt;Now Click on profile icon &amp;gt; Settings &amp;gt; Put a check mark in “Turn on New Meeting Experience” &lt;/p&gt;

&lt;p&gt;Then In Teams Go-to your calendar, Click on Meet Now &amp;gt; if the new meeting experience is enabled, user find the meeting controls at top of the window.&lt;/p&gt;

&lt;p&gt;Microsoft ensures that the Teams app will now segment the faces using Artificial Intelligense (AI) and bring everyone together. This feature requires at least need 4 participants from same tenant to enable Together Mode in Microsoft Teams. Together mode stays greyed out until the 4th participant joins the call. Microsoft states that the gallery view can fit up to 49 users max at present.&lt;/p&gt;

&lt;p&gt;In addition - Dynamic View, Large gallery view, Live reactions, video filters are also features of new meeting experience &lt;/p&gt;

&lt;p&gt;Advantages of Together Mode&lt;br&gt;
The primary benefit of Together Mode in Microsoft Teams is being able to see all the members of the meeting together as if they are one room or class and sitting together. It can discard the old classic video call feature where you can see one people at a time with a boxed view which nullifies to see just a restricted number of people at a time is eased. When you make a normal Teams video conference, the person who is talking frequently appears on the meeting screen with the boxed view. The rest of the persons in the meeting are in the background and are virtually ignored until they start talking in the meeting. This new feature ‘Together Mode’ acknowledges this issue. You can easily view all the people present on the call as well as read their body language and reactions during the meeting, just like we do can in physically with ease of our homes. Also this advantage is otherwise very difficult in their home environments or different backgrounds.&lt;/p&gt;

&lt;p&gt;Read Complete Article Here:- &lt;a href="https://stacksjar.com/post/enable-together-mode-in-microsoft-teams"&gt;Enable Together Mode in Microsoft Teams&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>tooling</category>
    </item>
    <item>
      <title>JavaScript Library and Resources</title>
      <author>ZigRazor</author>
      <pubDate>Mon, 06 Sep 2021 07:00:41 +0000</pubDate>
      <link>https://dev.to/zigrazor/javascript-library-and-resources-202k</link>
      <guid>https://dev.to/zigrazor/javascript-library-and-resources-202k</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLiuGO1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ng6yfq7x72vxhhpylr5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZLiuGO1s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ng6yfq7x72vxhhpylr5.png" alt="JavaScript"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A collection of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript"&gt;JavaScript&lt;/a&gt; libraries, resources and shiny things.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#package-managers"&gt;
  &lt;/a&gt;
  Package Managers
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Host the JavaScript libraries and provide tools for fetching and packaging them.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/"&gt;npm&lt;/a&gt; - npm is the package manager for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bower/bower"&gt;Bower&lt;/a&gt; - A package manager for the web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/componentjs/component"&gt;component&lt;/a&gt; - Client package management for building better web applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/spmjs/spm"&gt;spm&lt;/a&gt; - Brand new static package manager.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/caolan/jam"&gt;jam&lt;/a&gt; - A package manager using a browser-focused and RequireJS compatible repository.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jspm/jspm-cli"&gt;jspm&lt;/a&gt; - Frictionless browser package management.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ender-js/Ender"&gt;Ender&lt;/a&gt; - The no-library library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/volojs/volo"&gt;volo&lt;/a&gt; - Create front end projects from templates, add dependencies, and automate the resulting projects.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/duojs/duo"&gt;Duo&lt;/a&gt; - Next-generation package manager that blends the best ideas from Component, Browserify and Go to make organizing and writing front-end code quick and painless.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://yarnpkg.com/"&gt;yarn&lt;/a&gt; - Fast, reliable, and secure dependency management.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://pnpm.js.org/"&gt;pnpm&lt;/a&gt; - Fast, disk space efficient package manager.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#component-management"&gt;
  &lt;/a&gt;
  Component Management
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/teambit/bit"&gt;Bit&lt;/a&gt; - Create, find and reuse components (React, Angular, Node etc.) across applications.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#loaders"&gt;
  &lt;/a&gt;
  Loaders
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Module or loading system for JavaScript.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/requirejs/requirejs"&gt;RequireJS&lt;/a&gt; - A file and module loader for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/substack/node-browserify"&gt;browserify&lt;/a&gt; - Browser-side require() the node.js way.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/seajs/seajs"&gt;SeaJS&lt;/a&gt; - A Module Loader for the Web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/headjs/headjs"&gt;HeadJS&lt;/a&gt; - The only script in your HEAD.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cujojs/curl"&gt;curl&lt;/a&gt; - A small, fast, extensible module loader that handles AMD, CommonJS Modules/1.1, CSS, HTML/text, and legacy scripts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rgrove/lazyload/"&gt;lazyload&lt;/a&gt; - Tiny, dependency-free async JavaScript and CSS loader.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ded/script.js"&gt;script.js&lt;/a&gt; - Asynchronous JavaScript loader and dependency manager.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/systemjs/systemjs"&gt;systemjs&lt;/a&gt; - AMD, CJS &amp;amp; ES6 spec-compliant module loader.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/yanhaijing/lodjs"&gt;LodJS&lt;/a&gt; - Module loader based on AMD.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ecomfe/esl"&gt;ESL&lt;/a&gt; - Module loader browser first, support lazy define and AMD.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lrsjng/modulejs"&gt;modulejs&lt;/a&gt; - Lightweight JavaScript module system.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#bundlers"&gt;
  &lt;/a&gt;
  Bundlers
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/webpack/webpack"&gt;webpack&lt;/a&gt; - Packs CommonJs/AMD modules for the browser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rollup/rollup"&gt;Rollup&lt;/a&gt; - Next-generation ES6 module bundler.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/brunch/brunch"&gt;Brunch&lt;/a&gt; - Fast front-end web app build tool with simple declarative config.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/parcel-bundler/parcel"&gt;Parcel&lt;/a&gt; - Blazing fast, zero configuration web application bundler.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/developit/microbundle"&gt;Microbundle&lt;/a&gt; - Zero-configuration bundler for tiny modules.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fuse-box/fuse-box"&gt;FuseBox&lt;/a&gt; - A bundler that does it right&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.snowpack.dev/"&gt;Snowpack&lt;/a&gt; - A lightning-fast frontend build tool, designed for the modern web.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#type-checkers"&gt;
  &lt;/a&gt;
  Type Checkers
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt; - A typed superset of JavaScript that compiles to plain JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://flow.org/en/"&gt;Flow.js&lt;/a&gt; - A static type checker for JavaScript from Facebook.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://jsmonk.github.io/hegel/"&gt;Hegel&lt;/a&gt; -  A static type checker for JavaScript with a bias on type inference an strong type system.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/getify/TypL"&gt;TypL&lt;/a&gt; - the JavaScript Type Linter with a bias on type inference.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/xodio/hm-def"&gt;Hindley Milner Definitions&lt;/a&gt; - runtime type checking for JavaScript functions using Haskell-alike Hindley Milner type signatures.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#testing-frameworks"&gt;
  &lt;/a&gt;
  Testing Frameworks
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#frameworks"&gt;
  &lt;/a&gt;
  Frameworks
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/mochajs/mocha"&gt;mocha&lt;/a&gt; - Simple, flexible, fun JavaScript test framework for node.js &amp;amp; the browser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jasmine/jasmine"&gt;jasmine&lt;/a&gt; - DOM-less simple JavaScript testing framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jquery/qunit"&gt;qunit&lt;/a&gt; - An easy-to-use JavaScript Unit Testing framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/facebook/jest"&gt;jest&lt;/a&gt; - Painless JavaScript Unit Testing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/azer/prova"&gt;prova&lt;/a&gt; - Node &amp;amp; Browser test runner based on Tape and Browserify&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dalekjs/dalek"&gt;DalekJS&lt;/a&gt; - Automated cross browser functional testing with JavaScript&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/angular/protractor"&gt;Protractor&lt;/a&gt; - Protractor is an end-to-end test framework for AngularJS applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/substack/tape"&gt;tape&lt;/a&gt; - Tap-producing test harness for node and browsers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/DevExpress/testcafe"&gt;TestCafe&lt;/a&gt; - Automated browser testing for the modern web development stack.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/avajs/ava"&gt;ava&lt;/a&gt; - 🚀 Futuristic JavaScript test runner&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.cypress.io/"&gt;Cypress&lt;/a&gt; - Complete end-to-end testing framework for anything that runs in a browser and beyond.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#assertion"&gt;
  &lt;/a&gt;
  Assertion
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/chaijs/chai"&gt;chai&lt;/a&gt; - BDD / TDD assertion framework for node.js and the browser that can be paired with any testing framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://airbnb.io/enzyme/index.html"&gt;Enzyme&lt;/a&gt; - Enzyme is a JavaScript Testing utility for React that makes it easier to assert, manipulate, and traverse your React Components' output.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kentcdodds/react-testing-library"&gt;react testing library&lt;/a&gt; - Simple and complete React DOM testing utilities that encourage good testing practices.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sinonjs/sinon"&gt;Sinon.JS&lt;/a&gt; - Test spies, stubs, and mocks for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Automattic/expect.js"&gt;expect.js&lt;/a&gt; - Minimalistic BDD-style assertions for Node.JS and the browser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/thlorenz/proxyquire"&gt;proxyquire&lt;/a&gt; - Stub nodejs's require.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#coverage"&gt;
  &lt;/a&gt;
  Coverage
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/gotwarlost/istanbul"&gt;istanbul&lt;/a&gt; - Yet another JS code coverage tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alex-seville/blanket"&gt;blanket&lt;/a&gt; - A simple code coverage library for JavaScript. Designed to be easy to install and use, for both browser and nodejs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tntim96/JSCover"&gt;JSCover&lt;/a&gt; - JSCover is a tool that measures code coverage for JavaScript programs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#runner"&gt;
  &lt;/a&gt;
  Runner
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ariya/phantomjs"&gt;phantomjs&lt;/a&gt; - Scriptable Headless WebKit.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/laurentj/slimerjs"&gt;slimerjs&lt;/a&gt; - A PhantomJS-like tool running Gecko.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/casperjs/casperjs"&gt;casperjs&lt;/a&gt; - Navigation scripting &amp;amp; testing utility for PhantomJS and SlimerJS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/assaf/zombie"&gt;zombie&lt;/a&gt; - Insanely fast, full-stack, headless browser testing using node.js.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/totorojs/totoro"&gt;totoro&lt;/a&gt; - A simple and stable cross-browser testing tool.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/karma-runner/karma"&gt;karma&lt;/a&gt; - Spectacular Test Runner for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nightwatchjs/nightwatch"&gt;nightwatch&lt;/a&gt; - UI automated testing framework based on node.js and selenium webdriver.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/theintern/intern"&gt;intern&lt;/a&gt; - A next-generation code testing stack for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.yolpo.com"&gt;yolpo&lt;/a&gt; - A statement-by-statement JavaScript interpreter in the browser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/GoogleChrome/puppeteer"&gt;puppeteer&lt;/a&gt; - Headless Chrome Node.js API by official Google Chrome team.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/webdriverio/webdriverio"&gt;webdriverio&lt;/a&gt; - Next-gen WebDriver test automation framework for Node.js.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/getgauge/taiko"&gt;taiko&lt;/a&gt; - A Node.js library with a simple API to automate Chromium based browsers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#qa-tools"&gt;
  &lt;/a&gt;
  QA Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/prettier/prettier"&gt;prettier&lt;/a&gt; - Prettier is an opinionated code formatter.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jshint/jshint/"&gt;JSHint&lt;/a&gt; - JSHint is a tool that helps to detect errors and potential problems in your JavaScript code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jscs-dev/node-jscs"&gt;jscs&lt;/a&gt; - JavaScript Code Style checker.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rdio/jsfmt"&gt;jsfmt&lt;/a&gt; - For formatting, searching, and rewriting JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/danielstjules/jsinspect"&gt;jsinspect&lt;/a&gt; - Detect copy-pasted and structurally similar code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/danielstjules/buddy.js"&gt;buddy.js&lt;/a&gt; - Magic number detection for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/eslint/eslint"&gt;ESLint&lt;/a&gt; - A fully pluggable tool for identifying and reporting on patterns in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/douglascrockford/JSLint"&gt;JSLint&lt;/a&gt; - High-standards, strict &amp;amp; opinionated code quality tool, aiming to keep only good parts of the language.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/feross/standard"&gt;JavaScript Standard Style&lt;/a&gt; - Opinionated, no-configuration style guide, style checker, and formatter&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kentcdodds/preval.macro"&gt;Pre-evaluate code at buildtime&lt;/a&gt; - Pre-evaluate your front end javascript code at build-time&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/beautify-web/js-beautify"&gt;JS-Beautifier&lt;/a&gt; - Npm cli and library to format JS code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/typicode/husky"&gt;husky&lt;/a&gt; - Prevents bad git commit, git push and more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#mvc-frameworks-and-libraries"&gt;
  &lt;/a&gt;
  MVC Frameworks and Libraries
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/angular/angular.js"&gt;angular.js&lt;/a&gt; - HTML enhanced for web apps. (deprecated)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/angular/angular"&gt;angular&lt;/a&gt; - Angular is a development platform for building mobile and desktop web applications using Typescript/JavaScript and other languages.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://aurelia.io"&gt;aurelia&lt;/a&gt; - A JavaScript client framework for mobile, desktop and web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jashkenas/backbone"&gt;backbone&lt;/a&gt; - Give your JS App some Backbone with Models, Views, Collections, and Events.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/emberjs/ember.js"&gt;ember.js&lt;/a&gt; - A JavaScript framework for creating ambitious web applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/meteor/meteor"&gt;meteor&lt;/a&gt; - An ultra-simple, database-everywhere, data-on-the-wire, pure-javascript web framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ractivejs/ractive"&gt;ractive&lt;/a&gt; - Next-generation DOM manipulation.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vuejs/vue"&gt;vue&lt;/a&gt; - Intuitive, fast &amp;amp; composable MVVM for building interactive interfaces.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sveltejs/svelte"&gt;svelte&lt;/a&gt; - Svelte is a new way to build web applications. It's a compiler that takes your declarative components and converts them into efficient JavaScript that surgically updates the DOM.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/knockout/knockout"&gt;knockout&lt;/a&gt; - Knockout makes it easier to create rich, responsive UIs with JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/spine/spine"&gt;spine&lt;/a&gt; - Lightweight MVC library for building JavaScript applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/techlayer/espresso.js"&gt;espresso.js&lt;/a&gt; - A minimal JavaScript library for crafting user interfaces.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/canjs/canjs"&gt;canjs&lt;/a&gt; - Can do JS, better, faster, easier.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://facebook.github.io/react/"&gt;react&lt;/a&gt; - A library for building user interfaces. It's declarative, efficient, and extremely flexible. Works with a Virtual DOM.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hyperapp/hyperapp"&gt;hyperapp&lt;/a&gt; - 1kb JavaScript library for building frontend applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/developit/preact"&gt;preact&lt;/a&gt; - Fast 3kb React alternative with the same ES6 API. Components &amp;amp; Virtual DOM.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NativeScript/NativeScript"&gt;nativescript&lt;/a&gt; - Build truly native cross-platform iOS and Android apps with JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/facebook/react-native"&gt;react-native&lt;/a&gt; - A framework for building native apps with React.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/riot/riot"&gt;riot&lt;/a&gt; - React-like library, but with very small size.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/walmartlabs/thorax"&gt;thorax&lt;/a&gt; - Strengthening your Backbone.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/chaplinjs/chaplin"&gt;chaplin&lt;/a&gt; - An architecture for JavaScript applications using the Backbone.js library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/marionettejs/backbone.marionette"&gt;marionette&lt;/a&gt; - A composite application library for Backbone.js that aims to simplify the construction of large scale JavaScript applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ripplejs/ripple"&gt;ripple&lt;/a&gt; - A tiny foundation for building reactive views.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mikeric/rivets"&gt;rivets&lt;/a&gt; - Lightweight and powerful data binding + templating solution.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/derbyjs/derby"&gt;derby&lt;/a&gt; - MVC framework making it easy to write realtime, collaborative applications that run in both Node.js and browsers.

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/russll/awesome-derby"&gt;derby-awesome&lt;/a&gt; - A collection of awesome derby components&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gwendall/way.js"&gt;way.js&lt;/a&gt; - Simple, lightweight, persistent two-way databinding.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lhorie/mithril.js"&gt;mithril.js&lt;/a&gt; - Mithril is a client-side MVC framework (Light-weight, Robust, Fast).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/astoilkov/jsblocks"&gt;jsblocks&lt;/a&gt; - jsblocks is better MV-ish framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.lava-framework.com/"&gt;LiquidLava&lt;/a&gt; - Transparent MVC framework for building user interfaces.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/feathersjs/feathers"&gt;feathers&lt;/a&gt; - A minimalist real-time JavaScript framework for tomorrow's apps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Wildhoney/Keo"&gt;Keo&lt;/a&gt; - Functional stateless React components with Shadow DOM support.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/emadalam/atvjs"&gt;atvjs&lt;/a&gt; - Blazing fast Apple TV application development using pure JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alpinejs/alpine"&gt;Alpine.js&lt;/a&gt; - offers you the reactive and declarative nature of big frameworks like Vue or React at a much lower cost.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/infernojs/inferno"&gt;inferno&lt;/a&gt; - 🔥 An extremely fast, React-like JavaScript library for building modern user interfaces.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://foalts.org"&gt;FoalTS&lt;/a&gt; - Elegant and all-inclusive Node.JS framework for building web applications (TypeScript).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/aidenybai/lucia"&gt;Lucia&lt;/a&gt; - 3kb library for tiny web apps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/adonisjs/core"&gt;Adonis&lt;/a&gt; - The Node.js Framework highly focused on developer ergonomics, stability and confidence&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#nodepowered-cms-frameworks"&gt;
  &lt;/a&gt;
  Node-Powered CMS Frameworks
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/keystonejs/keystone"&gt;KeystoneJS&lt;/a&gt; - powerful CMS and web app framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/reactioncommerce/reaction"&gt;Reaction Commerce&lt;/a&gt; - reactive CMS, real-time architecture and design.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tryghost/Ghost"&gt;Ghost&lt;/a&gt; - simple, powerful publishing platform.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/punkave/apostrophe"&gt;Apostrophe&lt;/a&gt; - CMS with content editing and essential services.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wejs/we/"&gt;We.js&lt;/a&gt; - framework for real time apps, sites or blogs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/inventures/hatchjs"&gt;Hatch.js&lt;/a&gt; - CMS platform with social features.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/xtremespb/taracotjs-generator/"&gt;TaracotJS&lt;/a&gt; - fast and minimalist CMS based on Node.js.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nodize/nodizecms"&gt;Nodizecms&lt;/a&gt; - CMS for CoffeeScript lovers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jcoppieters/cody"&gt;Cody&lt;/a&gt; - CMS with WSYWYG editor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pencilblue/pencilblue/"&gt;PencilBlue&lt;/a&gt; - CMS and blogging platform.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/strapi/strapi"&gt;Strapi&lt;/a&gt; - Open source Node.js Headless CMS to easily build customisable APIs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fiction-com/factor"&gt;Factor&lt;/a&gt; - The Javascript CMS&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#templating-engines"&gt;
  &lt;/a&gt;
  Templating Engines
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Templating engines allow you to perform string interpolation.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/janl/mustache.js"&gt;mustache.js&lt;/a&gt; - Minimal templating with mustaches in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wycats/handlebars.js/"&gt;handlebars.js&lt;/a&gt; - An extension to the Mustache templating language.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mozilla.github.io/nunjucks/"&gt;nunjucks&lt;/a&gt; - A rich and powerful templating language for JavaScript from Mozilla.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/twitter/hogan.js"&gt;hogan.js&lt;/a&gt; - A compiler for the Mustache templating language.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/olado/doT"&gt;doT&lt;/a&gt; - The fastest + concise JavaScript template engine for nodejs and browsers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/linkedin/dustjs/"&gt;dustjs&lt;/a&gt; - Asynchronous templates for the browser and node.js.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sstephenson/eco/"&gt;eco&lt;/a&gt; - Embedded CoffeeScript templates.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/blueimp/JavaScript-Templates"&gt;JavaScript-Templates&lt;/a&gt; - &amp;lt; 1KB lightweight, fast &amp;amp; powerful JavaScript templating engine with zero dependencies.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jasonmoo/t.js"&gt;t.js&lt;/a&gt; - A tiny JavaScript templating framework in ~400 bytes gzipped.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pugjs/pug"&gt;Pug&lt;/a&gt; - Robust, elegant, feature rich template engine for nodejs. (formerly known as Jade)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mde/ejs"&gt;EJS&lt;/a&gt; - Effective JavaScript templating.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/xtemplate/xtemplate"&gt;xtemplate&lt;/a&gt; - eXtensible Template Engine lib for node and the browser&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/marko-js/marko"&gt;marko&lt;/a&gt; - A fast, lightweight, HTML-based templating engine for Node.js and the browser with async, streaming, custom tags and CommonJS modules as compiled output.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/paularmstrong/swig"&gt;swig&lt;/a&gt; - (Archived) A simple, powerful, and extendable Node.js and browser-based JavaScript template engine.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#articles-and-posts"&gt;
  &lt;/a&gt;
  Articles and Posts
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://medium.com/@pedropolisenso/o-javasscript-que-voc%C3%AA-deveria-conhecer-b70e94d1d706"&gt;The JavaScript that you should know&lt;/a&gt; - Article about concepts of JavaScript Functional.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.sessionstack.com/tagged/tutorial"&gt;How JavaScript works&lt;/a&gt; - A series of articles about the building blocks of JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.loginradius.com/engineering/blog/adding-multi-threading-to-javascript-using-web-workers/"&gt;Multi-threading using web-workers&lt;/a&gt; - Web Workers: Adding Multi-threading to JavaScript&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.loginradius.com/engineering/blog/breaking-down-this-keyword-in-javascript/"&gt;this keyword in JavaScript&lt;/a&gt; - Breaking down the 'this' keyword in JavaScript&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#data-visualization"&gt;
  &lt;/a&gt;
  Data Visualization
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Data visualization tools for the web.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/d3/d3"&gt;d3&lt;/a&gt; - A JavaScript visualization library for HTML and SVG.

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/mozilla/metrics-graphics"&gt;metrics-graphics&lt;/a&gt; - A library optimized for concise, principled data graphics and layouts.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mrdoob/three.js"&gt;three.js&lt;/a&gt; - JavaScript 3D library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/chartjs/Chart.js"&gt;Chart.js&lt;/a&gt; - Simple HTML5 Charts using the &amp;lt;canvas&amp;gt; tag.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/paperjs/paper.js"&gt;paper.js&lt;/a&gt; - The Swiss Army Knife of Vector Graphics Scripting – Scriptographer ported to JavaScript and the browser, using HTML5 Canvas.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kangax/fabric.js"&gt;fabric.js&lt;/a&gt; - JavaScript Canvas Library, SVG-to-Canvas (&amp;amp; canvas-to-SVG) Parser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/benpickles/peity"&gt;peity&lt;/a&gt; - Progressive  bar, line and pie charts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/DmitryBaranovskiy/raphael"&gt;raphael&lt;/a&gt; - JavaScript Vector Library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/apache/echarts"&gt;echarts&lt;/a&gt; - Enterprise Charts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/almende/vis"&gt;vis&lt;/a&gt; - Dynamic, browser-based visualization library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jonobr1/two.js"&gt;two.js&lt;/a&gt; - A renderer agnostic two-dimensional drawing api for the web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/DmitryBaranovskiy/g.raphael"&gt;g.raphael&lt;/a&gt; - Charts for Raphaël.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jacomyal/sigma.js"&gt;sigma.js&lt;/a&gt; - A JavaScript library dedicated to graph drawing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/samizdatco/arbor"&gt;arbor&lt;/a&gt; - A graph visualization library using web workers and jQuery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/square/cubism"&gt;cubism&lt;/a&gt; - A D3 plugin for visualizing time series.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dc-js/dc.js"&gt;dc.js&lt;/a&gt; - Multi-Dimensional charting built to work natively with crossfilter rendered with d3.js&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trifacta/vega"&gt;vega&lt;/a&gt; - A visualization grammar.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://processingjs.org/"&gt;processing.js&lt;/a&gt; - Processing.js makes your data visualizations work using web standards and without any plug-ins.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/HumbleSoftware/envisionjs"&gt;envisionjs&lt;/a&gt; - Dynamic HTML5 visualization.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/shutterstock/rickshaw"&gt;rickshaw&lt;/a&gt; - JavaScript toolkit for creating interactive real-time graphs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/flot/flot"&gt;flot&lt;/a&gt; - Attractive JavaScript charts for jQuery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/morrisjs/morris.js"&gt;morris.js&lt;/a&gt; - Pretty time-series line graphs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/novus/nvd3"&gt;nvd3&lt;/a&gt; - Build re-usable charts and chart components for d3.js.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wout/svg.js"&gt;svg.js&lt;/a&gt; - A lightweight library for manipulating and animating SVG.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pa7/heatmap.js"&gt;heatmap.js&lt;/a&gt; - JavaScript Library for HTML5 canvas based heatmaps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gwatts/jquery.sparkline"&gt;jquery.sparkline&lt;/a&gt; - A plugin for the jQuery JavaScript library to generate small sparkline charts directly in the browser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/qrohlf/trianglify"&gt;trianglify&lt;/a&gt; - Low poly style background generator with d3.js.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jasondavies/d3-cloud"&gt;d3-cloud&lt;/a&gt; - Create word clouds in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/heavysixer/d4"&gt;d4&lt;/a&gt; - A friendly reusable charts DSL for D3.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://dimplejs.org"&gt;dimple.js&lt;/a&gt; - Easy charts for business analytics powered by d3.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gionkunz/chartist-js"&gt;chartist-js&lt;/a&gt; - Simple responsive charts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/epochjs/epoch"&gt;epoch&lt;/a&gt; - A general purpose real-time charting library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/c3js/c3"&gt;c3&lt;/a&gt; - D3-based reusable chart library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/BabylonJS/Babylon.js"&gt;BabylonJS&lt;/a&gt; - A framework for building 3D games with HTML 5 and WebGL.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/recharts/recharts"&gt;recharts&lt;/a&gt; - Redefined chart library built with React and D3.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/AnyChart/GraphicsJS"&gt;GraphicsJS&lt;/a&gt; - A lightweight JavaScript graphics library with the intuitive API, based on SVG/VML technology.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jgraph/mxgraph"&gt;mxGraph&lt;/a&gt; - Diagramming library that enables interactive graph and charting applications to be quickly created that run natively in any major browser that is supported by its vendor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/frappe/charts"&gt;Frappe Charts&lt;/a&gt; - GitHub-inspired simple and modern SVG charts for the web with zero dependencies.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/frappe/gantt"&gt;Frappe Gantt&lt;/a&gt; - A simple, interactive, modern gantt chart library for the web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/antvis/G2"&gt;G2&lt;/a&gt; - A highly interactive data-driven visualization grammar for statistical charts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/antvis/G2Plot"&gt;G2Plot&lt;/a&gt; - An interactive and responsive charting library. Based on the grammar of graphics.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There're also some great commercial libraries, like &lt;a href="https://www.amcharts.com/"&gt;amchart&lt;/a&gt;, &lt;a href="http://www.anychart.com"&gt;anychart&lt;/a&gt;, &lt;a href="https://plot.ly/"&gt;plotly&lt;/a&gt;, &lt;a href="http://www.highcharts.com/"&gt;highchart&lt;/a&gt;, and &lt;a href="https://www.arction.com/lightningchart-js/"&gt;lightning chart&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeline"&gt;
  &lt;/a&gt;
  Timeline
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/NUKnightLab/TimelineJS3"&gt;TimelineJS v3&lt;/a&gt; - A Storytelling Timeline built in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sbstjn/timesheet.js"&gt;timesheet.js&lt;/a&gt; - JavaScript library for simple HTML5 &amp;amp; CSS3 time sheets.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#spreadsheet"&gt;
  &lt;/a&gt;
  Spreadsheet
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/handsontable/handsontable"&gt;HANDSONTABLE&lt;/a&gt; - Handsontable is a JavaScript/HTML5 Spreadsheet Library for Developers&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/frappe/datatable"&gt;Frappe Datatable&lt;/a&gt; - Frappe DataTable is a simple, modern and interactive datatable library for displaying tabular data. &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mengshukeji/Luckysheet"&gt;Luckysheet&lt;/a&gt; - Luckysheet is an online spreadsheet like excel that is powerful, simple to configure, and completely open source.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#editors"&gt;
  &lt;/a&gt;
  Editors
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ajaxorg/ace"&gt;ace&lt;/a&gt; - Ace (Ajax.org Cloud9 Editor).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/codemirror/CodeMirror"&gt;CodeMirror&lt;/a&gt; - In-browser code editor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ariya/esprima"&gt;esprima&lt;/a&gt; - ECMAScript parsing infrastructure for multipurpose analysis.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/quilljs/quill"&gt;quill&lt;/a&gt; - A cross browser rich text editor with an API.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/yabwe/medium-editor"&gt;medium-editor&lt;/a&gt; - Medium.com WYSIWYG editor clone.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sofish/pen"&gt;pen&lt;/a&gt; - enjoy live editing (+markdown).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/raphaelcruzeiro/jquery-notebook"&gt;jquery-notebook&lt;/a&gt; - A simple, clean and elegant text editor. Inspired by the awesomeness of Medium.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mindmup/bootstrap-wysiwyg"&gt;bootstrap-wysiwyg&lt;/a&gt; - Tiny bootstrap-compatible WYSIWYG rich text editor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ckeditor/ckeditor-releases"&gt;ckeditor-releases&lt;/a&gt; - The best web text editor for everyone.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lepture/editor"&gt;editor&lt;/a&gt; - A markdown editor. still on development.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/OscarGodson/EpicEditor"&gt;EpicEditor&lt;/a&gt; - An embeddable JavaScript Markdown editor with split fullscreen editing, live previewing, automatic draft saving, offline support, and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/josdejong/jsoneditor"&gt;jsoneditor&lt;/a&gt; - A web-based tool to view, edit and format JSON.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/coolwanglu/vim.js"&gt;vim.js&lt;/a&gt; - JavaScript port of Vim with a persistent &lt;code&gt;~/.vimrc&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/neilj/Squire"&gt;Squire&lt;/a&gt; - HTML5 rich text editor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tinymce/tinymce"&gt;TinyMCE&lt;/a&gt; - The JavaScript Rich Text editor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/basecamp/trix"&gt;trix&lt;/a&gt; - A rich text editor for everyday writing. By Basecamp.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Alex-D/Trumbowyg"&gt;Trumbowyg&lt;/a&gt; - A lightweight and amazing WYSIWYG JavaScript editor.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/facebook/draft-js"&gt;Draft.js&lt;/a&gt; - A React framework for building text editors.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jhollingworth/bootstrap-wysihtml5"&gt;bootstrap-wysihtml5&lt;/a&gt; - Simple, beautiful wysiwyg editor&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/xing/wysihtml5"&gt;wysihtml5&lt;/a&gt; - Open source rich text editor based on HTML5 and the progressive-enhancement approach. Uses a sophisticated security concept and aims to generate fully valid HTML5 markup by preventing unmaintainable tag soups and inline styles.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/PANmedia/raptor-editor"&gt;raptor-editor&lt;/a&gt; - Raptor, an HTML5 WYSIWYG content editor!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kenshin54/popline"&gt;popline&lt;/a&gt; - Popline is an HTML5 Rich-Text-Editor Toolbar.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/summernote/summernote"&gt;Summernote&lt;/a&gt; - Super simple WYSIWYG editor.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#documentation"&gt;
  &lt;/a&gt;
  Documentation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://devdocs.io/"&gt;DevDocs&lt;/a&gt; is an all-in-one API documentation reader with a fast, organized, and consistent interface.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.dexy.it/"&gt;dexy&lt;/a&gt; is a free-form literate documentation tool for writing any kind of technical document incorporating code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://jashkenas.github.io/docco/"&gt;docco&lt;/a&gt; is a quick-and-dirty, hundred-line-long, literate-programming-style documentation generator.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://jacobrask.github.io/styledocco/"&gt;styledocco&lt;/a&gt; generates documentation and style guide documents from your stylesheets.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rtomayko/ronn"&gt;Ronn&lt;/a&gt; builds manuals. It converts simple, human readable textfiles to roff for terminal display, and also to HTML for the web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tj/dox"&gt;dox&lt;/a&gt; is a JavaScript documentation generator written with node. Dox no longer generates an opinionated structure or style for your docs, it simply gives you a JSON representation, allowing you to use markdown and JSDoc-style tags.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sutoiku/jsdox"&gt;jsdox&lt;/a&gt; is a JSDoc3 to Markdown documentation generator.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/esdoc/esdoc"&gt;ESDoc&lt;/a&gt; is a good documentation generator for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://yui.github.io/yuidoc/"&gt;YUIDoc&lt;/a&gt; is a Node.js application that generates API documentation from comments in source, using a syntax similar to tools like Javadoc and Doxygen.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://doug-martin.github.io/coddoc/"&gt;coddoc&lt;/a&gt; is a jsdoc parsing library. Coddoc is different in that it is easily extensible by allowing users to add tag and code parsers through the use of coddoc.addTagHandler and coddoc.addCodeHandler. coddoc also parses source code to be used in APIs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.sphinx-doc.org/"&gt;sphinx&lt;/a&gt; a tool that makes it easy to create intelligent and beautiful documentation&lt;/li&gt;
&lt;li&gt;&lt;a href="http://usejsdoc.org/"&gt;Using JSDoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://beautifuldocs.com/"&gt;Beautiful docs&lt;/a&gt; is a documentation viewer based on markdown files.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://documentation.js.org"&gt;documentation.js&lt;/a&gt; - API documentation generator with support for ES2015+ and flow annotation.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/senchalabs/jsduck"&gt;jsduck&lt;/a&gt; - API documentation generator made for Sencha JavaScript frameworks, but can be used for other frameworks too.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Bogdan-Lyashenko/codecrumbs"&gt;codecrumbs&lt;/a&gt; is a visual tool for learning and documenting a codebase by putting breadcrumbs in source code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#files"&gt;
  &lt;/a&gt;
  Files
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Libraries for working with files.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/mholt/PapaParse"&gt;Papa Parse&lt;/a&gt; - A powerful CSV library that supports parsing CSV files/strings and also exporting to CSV.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jDataView/jBinary"&gt;jBinary&lt;/a&gt; - High-level I/O (loading, parsing, manipulating, serializing, saving) for binary files with declarative syntax for describing file types and data structures.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rtfpessoa/diff2html"&gt;diff2html&lt;/a&gt; - Git diff output parser and pretty HTML generator.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/MrRio/jsPDF"&gt;jsPDF&lt;/a&gt; - JavaScript PDF generation.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mozilla/pdf.js"&gt;PDF.js&lt;/a&gt; - PDF Reader in JavaScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#functional-programming"&gt;
  &lt;/a&gt;
  Functional Programming
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Functional programming libraries to extend JavaScript’s capabilities.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/jashkenas/underscore"&gt;underscore&lt;/a&gt; - JavaScript's utility _ belt.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lodash/lodash"&gt;lodash&lt;/a&gt; - A utility library delivering consistency, customization, performance, &amp;amp; extras.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/andrewplummer/Sugar"&gt;Sugar&lt;/a&gt; - A JavaScript library for working with native objects.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dtao/lazy.js"&gt;lazy.js&lt;/a&gt; - Like Underscore, but lazier.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/CrossEye/ramda"&gt;ramda&lt;/a&gt; - A practical functional library for JavaScript programmers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mout/mout"&gt;mout&lt;/a&gt; - Modular JavaScript Utilities.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/crcn/mesh.js"&gt;mesh&lt;/a&gt; - Streamable data synchronization utility.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alanrsoares/prelude-js"&gt;preludejs&lt;/a&gt; - Hardcore Functional Programming for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/selfrefactor/rambda"&gt;rambda&lt;/a&gt; - Faster and smaller alternative to &lt;em&gt;Ramda&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#reactive-programming"&gt;
  &lt;/a&gt;
  Reactive Programming
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Reactive programming libraries to extend JavaScript’s capabilities.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ReactiveX/rxjs"&gt;RxJS&lt;/a&gt; - A reactive programming library for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/baconjs/bacon.js"&gt;Bacon&lt;/a&gt; - FRP (functional reactive programming) library for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pozadi/kefir"&gt;Kefir&lt;/a&gt; - FRP library for JavaScript inspired by Bacon.js and RxJS with focus on high performance and low memory consumption.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://highlandjs.org/"&gt;Highland&lt;/a&gt; - Re-thinking the JavaScript utility belt, Highland manages synchronous and asynchronous code easily, using nothing more than standard JavaScript and Node-like Streams.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cujojs/most"&gt;Most.js&lt;/a&gt; - high performance FRP library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mobxjs/mobx"&gt;MobX&lt;/a&gt; - TFRP library for simple, scalable state management.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cycle.js.org"&gt;Cycle.js&lt;/a&gt; - A functional and reactive JavaScript library for cleaner code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/concentjs/concent"&gt;concent&lt;/a&gt; - Definitely the ❤️ simplest but ⚡️ strongest state management for react, it is predictable、progressive and efficient.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#data-structure"&gt;
  &lt;/a&gt;
  Data Structure
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Data structure libraries to build a more sophisticated application.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/facebook/immutable-js"&gt;immutable-js&lt;/a&gt; - Immutable Data Collections including Sequence, Range, Repeat, Map, OrderedMap, Set and a sparse Vector.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/swannodette/mori"&gt;mori&lt;/a&gt; - A library for using ClojureScript's persistent data structures and supporting API from the comfort of vanilla JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mauriciosantos/Buckets-JS"&gt;buckets&lt;/a&gt; - A complete, fully tested and documented data structure library written in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/flesler/hashmap"&gt;hashmap&lt;/a&gt; - Simple hashmap implementation that supports any kind of keys.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#date"&gt;
  &lt;/a&gt;
  Date
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Date Libraries.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/moment/moment"&gt;moment&lt;/a&gt; - Parse, validate, manipulate, and display dates in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/moment/moment-timezone"&gt;moment-timezone&lt;/a&gt; - Timezone support for moment.js.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rmm5t/jquery-timeago"&gt;jquery-timeago&lt;/a&gt; - A jQuery plugin that makes it easy to support automatically updating fuzzy timestamps (e.g. "4 minutes ago").&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mde/timezone-js"&gt;timezone-js&lt;/a&gt; - Timezone-enabled JavaScript Date object. Uses Olson zoneinfo files for timezone data.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/MatthewMueller/date"&gt;date&lt;/a&gt; - Date() for humans.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rauchg/ms.js"&gt;ms.js&lt;/a&gt; - Tiny millisecond conversion utility.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gumroad/countdown.js"&gt;countdown.js&lt;/a&gt; - Super simple countdowns.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hustcc/timeago.js"&gt;timeago.js&lt;/a&gt; - Simple library (less then 2kb) used to format date with &lt;code&gt;*** time ago&lt;/code&gt; statement.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/taylorhakes/fecha"&gt;fecha&lt;/a&gt; - Lightweight date formatting and parsing (~2KB). Meant to replace parsing and formatting functionality of moment.js.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/date-fns/date-fns"&gt;date-fns&lt;/a&gt; - Modern JavaScript date utility library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dawidjaniga/map-countdown"&gt;map-countdown&lt;/a&gt; - A browser countdown built on top of the Google Maps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/iamkun/dayjs"&gt;dayjs&lt;/a&gt; - Day.js 2KB immutable date library alternative to Moment.js with the same modern API.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/moment/luxon"&gt;luxon&lt;/a&gt; - Luxon is a library for working with dates and times in JavaScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#string"&gt;
  &lt;/a&gt;
  String
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;String Libraries.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/panzerdp/voca"&gt;voca&lt;/a&gt; - The ultimate JavaScript string library&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EvandroLG/selecting"&gt;selecting&lt;/a&gt; - A library that allows you to access the text selected by the user.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/epeli/underscore.string"&gt;underscore.string&lt;/a&gt; - String manipulation extensions for Underscore.js JavaScript library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jprichardson/string.js"&gt;string.js&lt;/a&gt; - Extra JavaScript string methods.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mathiasbynens/he"&gt;he&lt;/a&gt; - A robust HTML entity encoder/decoder written in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/multiline"&gt;multiline&lt;/a&gt; - Multiline strings in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/query-string"&gt;query-string&lt;/a&gt; - Parse and stringify URL query strings.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/medialize/URI.js/"&gt;URI.js&lt;/a&gt; - JavaScript URL mutation library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Mikhus/domurl"&gt;jsurl&lt;/a&gt; - Lightweight URL manipulation with JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alexei/sprintf.js"&gt;sprintf.js&lt;/a&gt; - A sprintf implementation.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/snd/url-pattern"&gt;url-pattern&lt;/a&gt; - Easier than regex string matching patterns for urls and other strings. Turn strings into data or data into strings.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/plexis-js/plexis"&gt;plexis&lt;/a&gt; - Lo-fi, powerful, community-driven string manipulation library.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#number"&gt;
  &lt;/a&gt;
  Number
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/adamwdraper/Numeral-js"&gt;Numeral-js&lt;/a&gt; - A JavaScript library for formatting and manipulating numbers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/chancejs/chancejs"&gt;chance.js&lt;/a&gt; - Random generator helper in JavaScript. Can generate numbers, strings etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/HubSpot/odometer"&gt;odometer&lt;/a&gt; - Smoothly transitions numbers with ease.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/josscrowcroft/accounting.js"&gt;accounting.js&lt;/a&gt; - A lightweight JavaScript library for number, money and currency formatting - fully localisable, zero dependencies.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/josscrowcroft/money.js"&gt;money.js&lt;/a&gt; - A tiny (1kb) JavaScript currency conversion library, for web &amp;amp; nodeJS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/infusion/Fraction.js"&gt;Fraction.js&lt;/a&gt; - A rational number library for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/infusion/Complex.js"&gt;Complex.js&lt;/a&gt; - A complex number library for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/infusion/Polynomial.js"&gt;Polynomial.js&lt;/a&gt; - A polynomials library for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/infusion/Quaternion.js"&gt;Quaternion.js&lt;/a&gt; - A quaternion library for JavaScript&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#storage"&gt;
  &lt;/a&gt;
  Storage
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/marcuswestin/store.js"&gt;store.js&lt;/a&gt; - LocalStorage wrapper for all browsers without using cookies or flash. Uses localStorage, globalStorage, and userData behavior under the hood.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mozilla/localForage"&gt;localForage&lt;/a&gt; - Offline storage, improved. Wraps IndexedDB, WebSQL, or localStorage using a simple but powerful API.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/andris9/jStorage"&gt;jStorage&lt;/a&gt; - jStorage is a simple key/value database to store data on browser side.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/zendesk/cross-storage"&gt;cross-storage&lt;/a&gt; - Cross domain local storage, with permissions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/addyosmani/basket.js"&gt;basket.js&lt;/a&gt; - A script and resource loader for caching &amp;amp; loading scripts with localStorage.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nodeca/bag.js"&gt;bag.js&lt;/a&gt; - A caching script and resource loader, similar to basket.js, but with additional k/v interface and localStorage / websql / indexedDB support.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Wisembly/basil.js"&gt;basil.js&lt;/a&gt; - The missing JavaScript smart persistent layer.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/carhartl/jquery-cookie"&gt;jquery-cookie&lt;/a&gt; - A simple, lightweight jQuery plugin for reading, writing and deleting cookies.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/js-cookie/js-cookie"&gt;js-cookie&lt;/a&gt; - A simple, lightweight JavaScript API for handling browser cookies.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ScottHamper/Cookies"&gt;Cookies&lt;/a&gt; - JavaScript Client-Side Cookie Manipulation Library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/aaronpowell/db.js/"&gt;DB.js&lt;/a&gt; - Promise based IndexDB Wrapper library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/brianleroux/lawnchair/"&gt;lawnchair.js&lt;/a&gt; - Simple client-side JSON storage.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kripken/sql.js"&gt;sql.js&lt;/a&gt; - SQLite compiled to JavaScript through Emscripten.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nirtz89/crumbsjs"&gt;crumbsjs&lt;/a&gt; - A lightweight vanilla ES6 cookies and local storage JavaScript library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/softvar/awesome-web-storage"&gt;awesome-web-storage&lt;/a&gt; - Everything you need to know about client-side storage.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#color"&gt;
  &lt;/a&gt;
  Color
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidmerfield/randomColor"&gt;randomColor&lt;/a&gt; - A color generator for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gka/chroma.js"&gt;chroma.js&lt;/a&gt; - JavaScript library for all kinds of color manipulations.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Qix-/color"&gt;color&lt;/a&gt; - JavaScript color conversion and manipulation library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mrmrs/colors"&gt;colors&lt;/a&gt; - Smarter defaults for colors on the web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Fooidge/PleaseJS"&gt;PleaseJS&lt;/a&gt; - JavaScript Library for creating random pleasing colors and color schemes.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bgrins/TinyColor"&gt;TinyColor&lt;/a&gt; - Fast, small color manipulation and conversion for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jariz/vibrant.js/"&gt;Vibrant.js&lt;/a&gt; - Extract prominent colors from an image.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#i18n-and-l10n"&gt;
  &lt;/a&gt;
  I18n And L10n
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Localization (l10n) and internationalization (i18n) JavaScript libraries.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/i18next/i18next"&gt;i18next&lt;/a&gt; - internationalisation (i18n) with JavaScript the easy way.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/airbnb/polyglot.js"&gt;polyglot&lt;/a&gt; - tiny i18n helper library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nodeca/babelfish/"&gt;babelfish&lt;/a&gt; - i18n with human friendly API and built in plurals support.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ttag-org/ttag"&gt;ttag&lt;/a&gt; - Modern javascript i18n localization library based on ES6 tagged templates and the good old GNU gettext.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#control-flow"&gt;
  &lt;/a&gt;
  Control Flow
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/caolan/async"&gt;async&lt;/a&gt; - Async utilities for node and the browser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kriskowal/q"&gt;q&lt;/a&gt; - A tool for making and composing asynchronous promises in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/creationix/step/"&gt;step&lt;/a&gt; - An async control-flow library that makes stepping through logic easy.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bevacqua/contra/"&gt;contra&lt;/a&gt; - Asynchronous flow control with a functional taste to it.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/petkaantonov/bluebird/"&gt;Bluebird&lt;/a&gt; - fully featured promise library with focus on innovative features and performance.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cujojs/when"&gt;when&lt;/a&gt; - A solid, fast Promises/A+ and when() implementation, plus other async goodies.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gartz/ObjectEventTarget"&gt;ObjectEventTarget&lt;/a&gt; - Provide a prototype that add support to event listeners (with same behavior of EventTarget from DOMElements available on browsers).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/marcoonroad/sporadic"&gt;sporadic&lt;/a&gt; - Composable concurrency abstractions (such as streams, coroutines and Go-like channels) on top of promises, for Node and browser engines.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#routing"&gt;
  &lt;/a&gt;
  Routing
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/flatiron/director"&gt;director&lt;/a&gt; - A tiny and isomorphic URL router for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/visionmedia/page.js"&gt;page.js&lt;/a&gt; - Micro client-side router inspired by the Express router (~1200 bytes).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mtrpcic/pathjs"&gt;pathjs&lt;/a&gt; - Simple, lightweight routing for web browsers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/millermedeiros/crossroads.js"&gt;crossroads&lt;/a&gt; - JavaScript Routes.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/olivernn/davis.js"&gt;davis.js&lt;/a&gt; - RESTful degradable JavaScript routing using pushState.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lukeed/navaid"&gt;navaid&lt;/a&gt; - A navigation aid (aka, router) for the browser in 850 bytes~!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/cure53/DOMPurify"&gt;DOMPurify&lt;/a&gt; - A DOM-only, super-fast, uber-tolerant XSS sanitizer for HTML, MathML and SVG.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/leizongmin/js-xss"&gt;js-xss&lt;/a&gt; - Sanitize untrusted HTML (to prevent XSS) with a configuration specified by a Whitelist.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/yahoo/xss-filters"&gt;xss-filters&lt;/a&gt; - Secure XSS Filters by Yahoo.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/apostrophecms/sanitize-html"&gt;sanitize-html&lt;/a&gt; - sanitize-html provides a simple HTML sanitizer with a clear API.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#log"&gt;
  &lt;/a&gt;
  Log
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/adamschwartz/log"&gt;log&lt;/a&gt; - Console.log with style.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Oaxoa/Conzole"&gt;Conzole&lt;/a&gt; - A debug panel built in JavaScript that wraps JavaScript native console object methods and functionality in a panel displayed inside the page.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/patik/console.log-wrapper"&gt;console.log-wrapper&lt;/a&gt; - Log to the console in any browser with clarity.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pimterry/loglevel"&gt;loglevel&lt;/a&gt; - Minimal lightweight logging for JavaScript, adding reliable log level methods to wrap any available console.log methods.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://mixu.net/minilog/"&gt;minilog&lt;/a&gt; – Lightweight client &amp;amp; server-side logging with Stream-API backends.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://guigrpa.github.io/storyboard/"&gt;storyboard&lt;/a&gt; - Universal logging library + Chrome extension; it lets you see all client and server tasks triggered by a user action in a single place.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#regexp"&gt;
  &lt;/a&gt;
  RegExp
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://regex101.com/#javascript"&gt;RegEx101&lt;/a&gt; - Online regex tester and debugger for JavaScript. Also supports Python, PHP and PCRE.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://regexr.com"&gt;RegExr&lt;/a&gt; - HTML/JS based tool for creating, testing, and learning about Regular Expressions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#voice-command"&gt;
  &lt;/a&gt;
  Voice Command
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/TalAter/annyang"&gt;annyang&lt;/a&gt; - A JavaScript library for adding voice commands to your site, using speech recognition.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pazguille/voix"&gt;voix.js&lt;/a&gt; - A JavaScript library to add voice commands to your sites, apps or games.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#api"&gt;
  &lt;/a&gt;
  API
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/axios/axios"&gt;axios&lt;/a&gt; - Promise based HTTP client for the browser and node.js.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/SGrondin/bottleneck"&gt;bottleneck&lt;/a&gt; - A powerful rate limiter that makes throttling easy.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bettiolo/oauth-signature-js"&gt;oauth-signature-js&lt;/a&gt; - JavaScript OAuth 1.0a signature generator for node and the browser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lincolnloop/amygdala"&gt;amygdala&lt;/a&gt; - RESTful HTTP client for JavaScript powered web applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jpillora/jquery.rest"&gt;jquery.rest&lt;/a&gt; - A jQuery plugin for easy consumption of RESTful APIs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/victor-am/rails-ranger"&gt;Rails Ranger&lt;/a&gt; - An opinionated REST client for Ruby on Rails APIs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/elbywan/wretch"&gt;wretch&lt;/a&gt; - A tiny wrapper built around fetch with an intuitive syntax.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Bearer/bearer-js"&gt;Bearer.sh&lt;/a&gt; - Universal API client that supports OAuth / API Key / Basic / etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/WebsiteBeaver/far-fetch"&gt;FarFetch&lt;/a&gt; - Modern Fetch API wrapper for simplicity, with concise file uploading.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/opticdev/optic"&gt;Optic&lt;/a&gt; - Optic automatically documents and tests your APIs.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vercel/swr"&gt;SWR&lt;/a&gt; - React Hooks library for remote data fetching.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tannerlinsley/react-query"&gt;React Query&lt;/a&gt; - Hooks for fetching, caching and updating asynchronous data in React.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#streaming"&gt;
  &lt;/a&gt;
  Streaming
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/zalando/tailor"&gt;Tailor&lt;/a&gt; - Streaming layout service for front-end microservices, inspired by Facebook's BigPipe.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#vision-detection"&gt;
  &lt;/a&gt;
  Vision Detection
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/eduardolundgren/tracking.js"&gt;tracking.js&lt;/a&gt; - A modern approach for Computer Vision on the web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/antimatter15/ocrad.js"&gt;ocrad.js&lt;/a&gt; - OCR in JavaScript via Emscripten.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#machine-learning"&gt;
  &lt;/a&gt;
  Machine Learning
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/karpathy/convnetjs"&gt;ConvNetJS&lt;/a&gt; - Deep Learning in JavaScript. Train Convolutional Neural Networks (or ordinary ones) in your browser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dn2a/dn2a-javascript"&gt;DN2A&lt;/a&gt; - Digital Neural Networks Architecture.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/harthur/brain"&gt;Brain.js&lt;/a&gt; - Neural networks in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/stevenmiller888/mind"&gt;Mind.js&lt;/a&gt; - A flexible neural network library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cazala/synaptic"&gt;Synaptic.js&lt;/a&gt; - Architecture-free neural network library for node.js and the browser.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://js.tensorflow.org"&gt;TensorFlow.js&lt;/a&gt; - A JavaScript library for training and deploying ML models in the browser and on Node.js.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://ml5js.org"&gt;ml5.js&lt;/a&gt; - Friendly Machine Learning for the Web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mrdimosthenis/Synapses"&gt;Synapses&lt;/a&gt; - Lightweight cross-platform Neural Network library.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#browser-detection"&gt;
  &lt;/a&gt;
  Browser Detection
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ded/bowser"&gt;bowser&lt;/a&gt; - a browser detector.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#benchmark"&gt;
  &lt;/a&gt;
  Benchmark
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/bestiejs/benchmark.js"&gt;benchmark.js&lt;/a&gt; - A benchmarking library. As used on jsPerf.com.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/logicalparadox/matcha"&gt;matcha&lt;/a&gt; - A caffeine driven, simplistic approach to benchmarking.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#code-highlighting"&gt;
  &lt;/a&gt;
  Code highlighting
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/isagalaev/highlight.js"&gt;Highlight.js&lt;/a&gt; - JavaScript syntax highlighter.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/PrismJS/prism"&gt;PrismJS&lt;/a&gt; - Lightweight, robust, elegant syntax highlighting.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#loading-status"&gt;
  &lt;/a&gt;
  Loading Status
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Libraries for indicate load status.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/lightningtgc/MProgress.js"&gt;Mprogress.js&lt;/a&gt; - Create Google Material Design progress linear bars.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://ricostacruz.com/nprogress/"&gt;NProgress&lt;/a&gt; - Slim progress bars for Ajax'y applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fgnass/spin.js"&gt;Spin.js&lt;/a&gt; - A spinning activity indicator.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/usablica/progress.js"&gt;progress.js&lt;/a&gt; - Create and manage progress bar for every objects on the page.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kimmobrunfeldt/progressbar.js"&gt;progressbar.js&lt;/a&gt; - Beautiful and responsive progress bars with animated SVG paths.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/HubSpot/pace"&gt;pace&lt;/a&gt; - Automatically add a progress bar to your site.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/buunguyen/topbar"&gt;topbar&lt;/a&gt; - Tiny &amp;amp; beautiful site-wide progress indicator.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jacoborus/nanobar"&gt;nanobar&lt;/a&gt; - Very lightweight progress bars. No jQuery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/codrops/PageLoadingEffects"&gt;PageLoadingEffects&lt;/a&gt; - Modern ways of revealing new content using SVG animations.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tobiasahlin/SpinKit"&gt;SpinKit&lt;/a&gt; - A collection of loading indicators animated with CSS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hakimel/Ladda"&gt;Ladda&lt;/a&gt; - Buttons with built-in loading indicators.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lukehaas/css-loaders"&gt;css-loaders&lt;/a&gt; - A collection of loading spinners animated with CSS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Besides libraries, there're &lt;a href="http://codepen.io/collection/HtAne/"&gt;Collection on Codepen&lt;/a&gt;, and generators like &lt;a href="http://www.ajaxload.info/"&gt;Ajaxload&lt;/a&gt;, &lt;a href="http://preloaders.net/"&gt;Preloaders&lt;/a&gt; and &lt;a href="http://cssload.net/"&gt;CSSLoad&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#validation"&gt;
  &lt;/a&gt;
  Validation
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/guillaumepotier/Parsley.js"&gt;Parsley.js&lt;/a&gt; - Validate your forms, frontend, without writing a single line of JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jzaefferer/jquery-validation"&gt;jquery-validation&lt;/a&gt; - jQuery Validation Plugin.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/chriso/validator.js"&gt;validator.js&lt;/a&gt; - String validation and sanitization.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rickharrison/validate.js"&gt;validate.js&lt;/a&gt; - Lightweight JavaScript form validation library inspired by CodeIgniter.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jaymorrow/validatr/"&gt;validatr&lt;/a&gt; - Cross Browser HTML5 Form Validation.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://formvalidation.io/"&gt;FormValidation&lt;/a&gt; - The best jQuery plugin to validate form fields. Formerly BootstrapValidator.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/arasatasaygin/is.js"&gt;is.js&lt;/a&gt; - Check types, regexps, presence, time and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/FieldVal/fieldval-js"&gt;FieldVal&lt;/a&gt; - multipurpose validation library. Supports both sync and async validation.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/neuledge/funval"&gt;Funval&lt;/a&gt; - Data validation using functions interfaces (support TypeScript).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#keyboard-wrappers"&gt;
  &lt;/a&gt;
  Keyboard Wrappers
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ccampbell/mousetrap"&gt;mousetrap&lt;/a&gt; - Simple library for handling keyboard shortcuts in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/madrobby/keymaster"&gt;keymaster&lt;/a&gt; - A simple micro-library for defining and dispatching keyboard shortcuts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dmauro/Keypress"&gt;Keypress&lt;/a&gt; - A keyboard input capturing utility in which any key can be a modifier key.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/RobertWHurst/KeyboardJS"&gt;KeyboardJS&lt;/a&gt; - A JavaScript library for binding keyboard combos without the pain of key codes and key combo conflicts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jeresig/jquery.hotkeys"&gt;jquery.hotkeys&lt;/a&gt; - jQuery Hotkeys lets you watch for keyboard events anywhere in your code supporting almost any key combination.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/keithamus/jwerty"&gt;jwerty&lt;/a&gt; - Awesome handling of keyboard events.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tours-and-guides"&gt;
  &lt;/a&gt;
  Tours And Guides
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/usablica/intro.js"&gt;intro.js&lt;/a&gt; - A better way for new feature introduction and step-by-step users guide for your website and project.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/HubSpot/shepherd"&gt;shepherd&lt;/a&gt; - Guide your users through a tour of your app.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sorich87/bootstrap-tour"&gt;bootstrap-tour&lt;/a&gt; - Quick and easy product tours with Twitter Bootstrap Popovers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/easelinc/tourist"&gt;tourist&lt;/a&gt; - Simple, flexible tours for your app.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/heelhook/chardin.js"&gt;chardin.js&lt;/a&gt; - Simple overlay instructions for your apps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tracelytics/pageguide"&gt;pageguide&lt;/a&gt; - An interactive guide for web page elements using jQuery and CSS3.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/linkedin/hopscotch"&gt;hopscotch&lt;/a&gt; - A framework to make it easy for developers to add product tours to their pages.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/zurb/joyride"&gt;joyride&lt;/a&gt; - jQuery feature tour plugin.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/zzarcon/focusable"&gt;focusable&lt;/a&gt; - Set a spotlight focus on DOM element adding a overlay layer to the rest of the page.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/driver.js"&gt;driver.js&lt;/a&gt; - Powerful yet light-weight, vanilla JavaScript engine to drive the user's focus across the page&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#notifications"&gt;
  &lt;/a&gt;
  Notifications
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/dolce/iziToast"&gt;iziToast&lt;/a&gt; - Elegant, responsive, flexible and lightweight notification plugin with no dependencies.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/HubSpot/messenger"&gt;messenger&lt;/a&gt; - Growl-style alerts and messages for your app.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/needim/noty"&gt;noty&lt;/a&gt; - jQuery notification plugin.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sciactive/pnotify"&gt;pnotify&lt;/a&gt; - JavaScript notifications for Bootstrap, jQuery UI, and the Web Notifications Draft.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/CodeSeven/toastr"&gt;toastr&lt;/a&gt; - Simple JavaScript toast notifications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wavded/humane-js"&gt;humane-js&lt;/a&gt; - A simple, modern, browser notification system.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hxgf/smoke.js"&gt;smoke.js&lt;/a&gt; - Framework-agnostic styled alert system for JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jaredreich/notie"&gt;notie&lt;/a&gt; - Simple notifications and inputs with no dependencies.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#sliders"&gt;
  &lt;/a&gt;
  Sliders
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/nolimits4web/Swiper"&gt;Swiper&lt;/a&gt; - Mobile touch slider and framework with hardware accelerated transitions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kenwheeler/slick"&gt;slick&lt;/a&gt; - The last carousel you'll ever need.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.slidesjs.com"&gt;slidesJs&lt;/a&gt; - Is a responsive slideshow plug-in for JQuery(1.7.1+) with features like touch and CSS3 transitions&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/woothemes/FlexSlider"&gt;FlexSlider&lt;/a&gt; - An awesome, fully responsive jQuery slider plugin.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/darsain/sly"&gt;sly&lt;/a&gt; - JavaScript library for one-directional scrolling with item based navigation support.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jaysalvat/vegas"&gt;vegas&lt;/a&gt; - A jQuery plugin to add beautiful fullscreen backgrounds to your webpages. It even allows Slideshows.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/IanLunn/Sequence"&gt;Sequence&lt;/a&gt; - CSS animation framework for creating responsive sliders, presentations, banners, and other step-based applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hakimel/reveal.js"&gt;reveal.js&lt;/a&gt; - A framework for easily creating beautiful presentations using HTML.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/impress/impress.js"&gt;impress.js&lt;/a&gt; - It's a presentation framework based on the power of CSS3 transforms and transitions in modern browsers and inspired by the idea behind prezi.com.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bespokejs/bespoke"&gt;bespoke.js&lt;/a&gt; - DIY Presentation Micro-Framework&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tantaman/Strut"&gt;Strut&lt;/a&gt; - Strut - An Impress.js and Bespoke.js Presentation Editor&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dimsemenov/PhotoSwipe"&gt;PhotoSwipe&lt;/a&gt; - JavaScript image gallery for mobile and desktop, modular, framework independent.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/JoanClaret/jcSlider"&gt;jcSlider&lt;/a&gt; - A responsive slider jQuery plugin with CSS animations.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jcobb/basic-jquery-slider"&gt;basic-jquery-slider&lt;/a&gt; - Simple to use, simple to theme, simple to customise.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/creative-punch/jQuery.adaptive-slider/"&gt;jQuery.adaptive-slider&lt;/a&gt; - A jQuery plugin for a slider with adaptive colored figcaption and navigation.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bchanx/slidr"&gt;slidr&lt;/a&gt; - add some slide effects.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/metafizzy/flickity"&gt;Flickity&lt;/a&gt; - Touch, responsive, flickable galleries.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jedrzejchalubek/glidejs"&gt;Glide.js&lt;/a&gt; - Responsive and touch-friendly jQuery slider. It's simple, lightweight and fast.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidcetinkaya/embla-carousel"&gt;Embla Carousel&lt;/a&gt; - An extensible low level carousel for the web, written in TypeScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#range-sliders"&gt;
  &lt;/a&gt;
  Range Sliders
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/IonDen/ion.rangeSlider"&gt;Ion.RangeSlider&lt;/a&gt; - Powerful and easily customizable range slider with many options and skin support.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ghusse/jQRangeSlider"&gt;jQRangeSlider&lt;/a&gt; - A JavaScript slider selector that supports dates.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/leongersen/noUiSlider"&gt;noUiSlider&lt;/a&gt; - A lightweight, highly customizable range slider without bloat.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/andreruffert/rangeslider.js"&gt;rangeslider.js&lt;/a&gt; - HTML5 input range slider element polyfill.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#form-widgets"&gt;
  &lt;/a&gt;
  Form Widgets
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#input"&gt;
  &lt;/a&gt;
  Input
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/twitter/typeahead.js"&gt;typeahead.js&lt;/a&gt; - A fast and fully-featured autocomplete library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/aehlke/tag-it"&gt;tag-it&lt;/a&gt; - A jQuery UI plugin to handle multi-tag fields as well as tag suggestions/autocomplete.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ichord/At.js"&gt;At.js&lt;/a&gt; - Add GitHub like mentions autocomplete to your application.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jamesallardice/Placeholders.js"&gt;Placeholders.js&lt;/a&gt; - A JavaScript polyfill for the HTML5 placeholder attribute.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/yairEO/fancyInput"&gt;fancyInput&lt;/a&gt; - Makes typing in input fields fun with CSS3 effects.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/xoxco/jQuery-Tags-Input"&gt;jQuery-Tags-Input&lt;/a&gt; - Magically convert a simple text input into a cool tag list with this jQuery plugin.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/BankFacil/vanilla-masker"&gt;vanilla-masker&lt;/a&gt; - A pure JavaScript mask input.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/IonDen/ion.checkRadio"&gt;Ion.CheckRadio&lt;/a&gt; - jQuery plugin for styling checkboxes and radio-buttons. With skin support.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/LeaVerou/awesomplete"&gt;awesomplete&lt;/a&gt; - Ultra lightweight, usable, beautiful autocomplete with zero dependencies. - &lt;a href="http://leaverou.github.io/awesomplete"&gt;http://leaverou.github.io/awesomplete&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#calendar"&gt;
  &lt;/a&gt;
  Calendar
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/amsul/pickadate.js"&gt;pickadate.js&lt;/a&gt; - The mobile-friendly, responsive, and lightweight jQuery date &amp;amp; time input picker.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/eternicode/bootstrap-datepicker"&gt;bootstrap-datepicker&lt;/a&gt; - A datepicker for @twitter bootstrap forked from Stefan Petre's (of eyecon.ro), improvements by @eternicode.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dbushell/Pikaday"&gt;Pikaday&lt;/a&gt; - A refreshing JavaScript Datepicker — lightweight, no dependencies, modular CSS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fullcalendar/fullcalendar"&gt;fullcalendar&lt;/a&gt; - Full-sized drag &amp;amp; drop event calendar (jQuery plugin).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bevacqua/rome"&gt;rome&lt;/a&gt; - A customizable date (and time) picker. Dependency free, opt-in UI.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dangrossman/daterangepicker"&gt;Date Range Picker&lt;/a&gt; - creates a dropdown menu from which a user can select a range of dates.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/duetds/date-picker"&gt;Duet Date Picker&lt;/a&gt; - open source version of Duet Design System’s accessible date picker, WCAG 2.1 accessibility complaint&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#select"&gt;
  &lt;/a&gt;
  Select
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/selectize/selectize.js"&gt;selectize.js&lt;/a&gt; - Selectize is the hybrid of a textbox and &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; box. It's jQuery based and it has autocomplete and native-feeling keyboard navigation; useful for tagging, contact lists, etc.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/select2/select2"&gt;select2&lt;/a&gt; - a jQuery based replacement for select boxes. It supports searching, remote data sets, and infinite scrolling of results.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/harvesthq/chosen"&gt;chosen&lt;/a&gt; - A library for making long, unwieldy select boxes more friendly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#file-uploader"&gt;
  &lt;/a&gt;
  File Uploader
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/blueimp/jQuery-File-Upload"&gt;jQuery-File-Upload&lt;/a&gt; - File Upload widget with multiple file selection, drag&amp;amp;drop support, progress bar, validation and preview images, audio and video for jQuery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/enyo/dropzone"&gt;dropzone&lt;/a&gt; - Dropzone is an easy to use drag'n'drop library. It supports image previews and shows nice progress bars.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/flowjs/flow.js"&gt;flow.js&lt;/a&gt; - A JavaScript library providing multiple simultaneous, stable, fault-tolerant and resumable/restartable file uploads via the HTML5 File API.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/FineUploader/fine-uploader"&gt;fine-uploader&lt;/a&gt; - Multiple file upload plugin with progress-bar, drag-and-drop, direct-to-S3 uploading.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mailru/FileAPI"&gt;FileAPI&lt;/a&gt; - A set of JavaScript tools for working with files. Multiupload, drag'n'drop and chunked file upload. Images: crop, resize and auto orientation by EXIF.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/moxiecode/plupload"&gt;plupload&lt;/a&gt; - A JavaScript API for dealing with file uploads it supports features like multiple file selection, file type filtering, request chunking, client side image scaling and it uses different runtimes to achieve this such as HTML 5, Silverlight and Flash.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pqina/filepond"&gt;filepond&lt;/a&gt; - A JavaScript library that can upload anything you throw at it, optimizes images for faster uploads, and offers a great, accessible, silky smooth user experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#other"&gt;
  &lt;/a&gt;
  Other
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/malsup/form"&gt;form&lt;/a&gt; - jQuery Form Plugin.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/guillaumepotier/Garlic.js"&gt;Garlic.js&lt;/a&gt; - Automatically persist your forms' text and select field values locally, until the form is submitted.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/RadLikeWhoa/Countable"&gt;Countable&lt;/a&gt; - A JavaScript function to add live paragraph-, word- and character-counting to an HTML element.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jessepollak/card"&gt;card&lt;/a&gt; - Make your credit card form better in one line of code.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/LeaVerou/stretchy"&gt;stretchy&lt;/a&gt; - Form element autosizing, the way it should be.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidwells/analytics"&gt;analytics&lt;/a&gt; - A lightweight, extendable analytics library designed to work with any third-party analytics provider to track page views, custom events, &amp;amp; identify users.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tips"&gt;
  &lt;/a&gt;
  Tips
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/jaz303/tipsy"&gt;tipsy&lt;/a&gt; - Facebook-style tooltips plugin for jQuery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/enyo/opentip"&gt;opentip&lt;/a&gt; - An open source JavaScript tooltip based on the prototype framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/qTip2/qTip2"&gt;qTip2&lt;/a&gt; - Pretty powerful tooltips.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/iamceege/tooltipster"&gt;tooltipster&lt;/a&gt; - A jQuery tooltip plugin.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/arashmanteghi/simptip"&gt;simptip&lt;/a&gt; - A simple CSS tooltip made with Sass.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/paulkinzett/toolbar"&gt;toolbar&lt;/a&gt; - A tooltip style toolbar jQuery plugin&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/chinchang/hint.css"&gt;hint.css&lt;/a&gt; - A tooltip library in CSS for your lovely websites.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#modals-and-popups"&gt;
  &lt;/a&gt;
  Modals and Popups
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/dimsemenov/Magnific-Popup"&gt;Magnific-Popup&lt;/a&gt; - Light and responsive lightbox script with focus on performance.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gristmill/jquery-popbox"&gt;jquery-popbox&lt;/a&gt; - jQuery PopBox UI Element.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/voronianski/jquery.avgrund.js"&gt;jquery.avgrund.js&lt;/a&gt; - A jQuery plugin with new modal concept for popups.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/HubSpot/vex"&gt;vex&lt;/a&gt; - A modern dialog library which is highly configurable and easy to style.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jschr/bootstrap-modal"&gt;bootstrap-modal&lt;/a&gt; - Extends the default Bootstrap Modal class. Responsive, stackable, ajax and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/drublic/css-modal"&gt;css-modal&lt;/a&gt; - A modal built out of pure CSS.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/vast-engineering/jquery-popup-overlay"&gt;jquery-popup-overlay&lt;/a&gt; - jQuery plugin for responsive and accessible modal windows and tooltips.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/t4t5/sweetalert"&gt;SweetAlert&lt;/a&gt; - An awesome replacement for JavaScript's alert.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/feimosi/baguetteBox.js"&gt;baguetteBox.js&lt;/a&gt; - Simple and easy to use lightbox script written in pure JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jackmoore/colorbox"&gt;colorbox&lt;/a&gt; - A light-weight, customizable lightbox plugin for jQuery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fancyapps/fancyBox"&gt;fancyBox&lt;/a&gt; - A tool that offers a nice and elegant way to add zooming functionality for images, html content and multi-media on your webpages.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/brutaldesign/swipebox"&gt;swipebox&lt;/a&gt; - A touchable jQuery lightbox&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/StephanWagner/jBox"&gt;jBox&lt;/a&gt; - jBox is a powerful and flexible jQuery plugin, taking care of all your popup windows, tooltips, notices and more.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sachinchoolur/lightGallery"&gt;lightGallery&lt;/a&gt; - A customizable, modular, responsive, lightbox gallery plugin for jQuery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Alexandrshy/keukenhof"&gt;keukenhof&lt;/a&gt; - Lightweight, no dependencies, accessibility enabled TypeScript library for creating modal windows.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scroll"&gt;
  &lt;/a&gt;
  Scroll
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/stutrek/scrollMonitor"&gt;scrollMonitor&lt;/a&gt; - A simple and fast API to monitor elements as you scroll.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/WickyNilliams/headroom.js"&gt;headroom&lt;/a&gt; - Give your pages some headroom. Hide your header until you need it.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/peachananr/onepage-scroll"&gt;onepage-scroll&lt;/a&gt; - Create an Apple-like one page scroller website (iPhone 5S website) with One Page Scroll plugin.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cubiq/iscroll"&gt;iscroll&lt;/a&gt; - iScroll is a high performance, small footprint, dependency free, multi-platform JavaScript scroller.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Prinzhorn/skrollr"&gt;skrollr&lt;/a&gt; - Stand-alone parallax scrolling library for mobile (Android + iOS) and desktop. No jQuery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wagerfield/parallax"&gt;parallax&lt;/a&gt; - Parallax Engine that reacts to the orientation of a smart device.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/markdalgleish/stellar.js"&gt;stellar.js&lt;/a&gt; - Parallax scrolling made easy.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/cameronmcefee/plax"&gt;plax&lt;/a&gt; - jQuery powered parallaxing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/stephband/jparallax"&gt;jparallax&lt;/a&gt; - jQuery plugin for creating interactive parallax effect.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alvarotrigo/fullPage.js"&gt;fullPage&lt;/a&gt; - A simple and easy to use plugin to create fullscreen scrolling websites (also known as single page websites).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/s-yadav/ScrollMenu"&gt;ScrollMenu&lt;/a&gt; - A new interface to replace old boring scrollbar.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NeXTs/Clusterize.js"&gt;Clusterize.js&lt;/a&gt; - Tiny vanilla JS plugin to display large data sets easily.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/geosigno/simpleParallax"&gt;simpleParallax&lt;/a&gt; - Simple and tiny JavaScript library to add parallax animations on any images&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dixonandmoe/rellax"&gt;rellax&lt;/a&gt; - Buttery smooth, super lightweight, vanilla javascript parallax library.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#menu"&gt;
  &lt;/a&gt;
  Menu
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamens/jQuery-menu-aim"&gt;jQuery-menu-aim&lt;/a&gt; - jQuery plugin to fire events when user's cursor aims at particular dropdown menu items. For making responsive mega dropdowns like Amazon's.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/swisnl/jQuery-contextMenu"&gt;jQuery contextMenu&lt;/a&gt; - contextMenu manager.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mango/slideout"&gt;Slideout&lt;/a&gt; - A responsive touch slideout navigation menu for mobile web apps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/JoanClaret/slide-and-swipe-menu"&gt;Slide and swipe&lt;/a&gt; - A sliding swipe menu that works with touchSwipe library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/FrDH/jQuery.mmenu"&gt;mmenu&lt;/a&gt; - The best jQuery plugin for app look-alike on- and off-canvas menus with sliding submenus for your website and webapp.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tablegrid"&gt;
  &lt;/a&gt;
  Table/Grid
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/hikalkan/jtable"&gt;jTable&lt;/a&gt; - A jQuery plugin to create AJAX based CRUD tables.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.datatables.net/"&gt;DataTables&lt;/a&gt; - (jQuery plug-in) It is a highly flexible tool, based upon the foundations of progressive enhancement, and will add advanced interaction controls to any HTML table.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://olifolkerd.github.io/tabulator/"&gt;Tabulator&lt;/a&gt; - (jQuery plug-in) An extremely flexible library that create tables with a range of interactive features from any JSON data source or existing HTML table.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://bootstrap-table.wenzhixin.net.cn/"&gt;Bootstrap Table&lt;/a&gt; - An Extension to the popular Bootstrap framework for creating tables that fit the style of your site with no need for additional markup.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mkoryak/floatThead"&gt;floatThead&lt;/a&gt; - (jQuery plug-in) lock any table's header while scrolling within the body. Works on any table and requires no custom html or css.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://masonry.desandro.com/"&gt;Masonry&lt;/a&gt; - A cascading grid layout library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://packery.metafizzy.co/"&gt;Packery&lt;/a&gt; - A grid layout library that uses a bin-packing algorithm. Useable for draggable layouts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://isotope.metafizzy.co/"&gt;Isotope&lt;/a&gt; - A filterable, sortable, grid layout library. Can implement Masonry, Packery, and other layouts.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kristoferjoseph/flexboxgrid/"&gt;flexboxgrid&lt;/a&gt; - Grid based on CSS3 flexbox.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#frameworks"&gt;
  &lt;/a&gt;
  Frameworks
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://semantic-ui.com/"&gt;Semantic UI&lt;/a&gt; - UI Kit with lots of themes and elements.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://w2ui.com/"&gt;w2ui&lt;/a&gt; - A set of jQuery plugins for front-end development of data-driven web applications.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mrmrs/fluidity"&gt;fluidity&lt;/a&gt; - The worlds smallest fully-responsive css framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sapo/Ink"&gt;Ink&lt;/a&gt; - An HTML5/CSS3 framework used at SAPO for fast and efficient website design and prototyping.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/dataformsjs/dataformsjs"&gt;DataFormsJS&lt;/a&gt; - A minimal JavaScript Framework and standalone components for rapid development of sites and SPA's.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Guseyn/EHTML"&gt;EHTML&lt;/a&gt; - HTML Framework that allows you not to write JavaScript code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#boilerplates"&gt;
  &lt;/a&gt;
  Boilerplates
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/h5bp/html5-boilerplate"&gt;html5-boilerplate&lt;/a&gt; - A professional front-end template for building fast, robust, and adaptable web apps or sites.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/h5bp/mobile-boilerplate"&gt;mobile-boilerplate&lt;/a&gt; - A front-end template that helps you build fast, modern mobile web apps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/chrishumboldt/webplate"&gt;webplate&lt;/a&gt; - An awesome front-end framework that lets you stay focused on building your site or app while remaining really easy to use.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/TedGoas/Cerberus"&gt;Cerberus&lt;/a&gt; - A few simple, but solid patterns for responsive HTML emails. Even in Outlook.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/CodyHouse/full-page-intro-and-navigation"&gt;full-page-intro-and-navigation&lt;/a&gt; - An intro page with a full width background image, a bold animated menu and an iOS-like blurred effect behind the navigation.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/crozynski/Fluid-Squares"&gt;Fluid-Squares&lt;/a&gt; - A fluid grid of square units.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bradfrost/Mobile-First-RWD"&gt;Mobile-First-RWD&lt;/a&gt; - An example of a mobile-first responsive web design.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bradfrost/this-is-responsive"&gt;this-is-responsive&lt;/a&gt; - This Is Responsive.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://gist.github.com/addyosmani/9f10c555e32a8d06ddb0"&gt;npm run-scripts&lt;/a&gt; Task automation with NPM run-scripts.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#gesture"&gt;
  &lt;/a&gt;
  Gesture
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/hammerjs/hammer.js"&gt;hammer.js&lt;/a&gt; - A JavaScript library for multi-touch gestures.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hammerjs/touchemulator"&gt;touchemulator&lt;/a&gt; - Emulate touch input on your desktop.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bevacqua/dragula/"&gt;Dragula&lt;/a&gt; - Drag and drop so simple it hurts.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#maps"&gt;
  &lt;/a&gt;
  Maps
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/Leaflet/Leaflet"&gt;Leaflet&lt;/a&gt; - JavaScript library for mobile-friendly interactive maps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/AnalyticalGraphicsInc/cesium"&gt;Cesium&lt;/a&gt; - Open Source WebGL virtual globe and map engine.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/HPNeo/gmaps"&gt;gmaps&lt;/a&gt; - The easiest way to use Google Maps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/simplegeo/polymaps"&gt;polymaps&lt;/a&gt; - A free JavaScript library for making dynamic, interactive maps in modern web browsers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kartograph/kartograph.js"&gt;kartograph.js&lt;/a&gt; - Open source JavaScript renderer for Kartograph SVG maps.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mapbox/mapbox.js"&gt;mapbox.js&lt;/a&gt; - Mapbox JavaScript API, a Leaflet Plugin.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/manifestinteractive/jqvmap"&gt;jqvmap&lt;/a&gt; - jQuery Vector Map Library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://openlayers.org/"&gt;OpenLayers3&lt;/a&gt; - A high-performance, feature-packed library for all your mapping needs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#videoaudio"&gt;
  &lt;/a&gt;
  Video/Audio
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/mike-zarandona/prettyembed.js"&gt;prettyembed.js&lt;/a&gt; - Prettier embeds for your YouTubes - with nice options like high-res preview images, advanced customization of embed options, and optional FitVids support.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/etianen/html5media"&gt;html5media&lt;/a&gt; - Enables  and  tags in all major browsers. &lt;a href="https://html5media.info/"&gt;https://html5media.info/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/adrienjoly/playemjs"&gt;Play-em JS&lt;/a&gt; - Play'em is a JavaScript component that manages a music/video track queue and plays a sequence of songs by embedding several players in a HTML DIV including Youtube, Soundcloud and Vimeo.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Acconut/polyplayer"&gt;polyplayer&lt;/a&gt; - Rule YouTube, Soundcloud and Vimeo player with one API.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/flowplayer/flowplayer"&gt;flowplayer&lt;/a&gt; - The HTML5 video player for the web
&lt;a href="https://flowplayer.org/"&gt;https://flowplayer.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/johndyer/mediaelement"&gt;mediaelement&lt;/a&gt; - HTML5  or  player with Flash and Silverlight shims that mimics the HTML5 MediaElement API, enabling a consistent UI in all browsers. &lt;a href="http://mediaelementjs.com/"&gt;http://mediaelementjs.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/CreateJS/SoundJS"&gt;SoundJS&lt;/a&gt; - A library to make working with audio on the web easier. It provides a consistent API for playing audio in different browsers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/videojs/video.js"&gt;video.js&lt;/a&gt; - Video.js - open source HTML5 &amp;amp; Flash video player.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davatron5000/FitVids.js"&gt;FitVids.js&lt;/a&gt; - A lightweight, easy-to-use jQuery plugin for fluid width video embeds.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/IonDen/ion.sound"&gt;Ion.Sound&lt;/a&gt; - Simple sounds on any web page.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/WolframHempel/photobooth-js"&gt;photobooth-js&lt;/a&gt; - A widget that allows users to take their avatar pictures on your site.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/clappr/clappr"&gt;clappr&lt;/a&gt; - An extensible media player for the web &lt;a href="http://clappr.io"&gt;http://clappr.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/MikeKovarik/exifr"&gt;exifr&lt;/a&gt; - The fastest and most versatile EXIF reading library. &lt;a href="https://mutiny.cz/exifr/"&gt;https://mutiny.cz/exifr/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EvandroLG/ts-audio"&gt;ts-audio&lt;/a&gt; - an agnostic and easy-to-use library to work with the &lt;code&gt;AudioContext&lt;/code&gt; API&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://521dimensions.com/open-source/amplitudejs"&gt;AmplitudeJS&lt;/a&gt; - Open Source HTML5 Web Audio Library. Design your web audio player, the way you want. No dependencies required.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#typography"&gt;
  &lt;/a&gt;
  Typography
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/simplefocus/FlowType.JS"&gt;FlowType.JS&lt;/a&gt; - Web typography at its finest: font-size and line-height based on element width.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/zachleat/BigText"&gt;BigText&lt;/a&gt; - jQuery plugin, calculates the font-size and word-spacing needed to match a line of text to a specific width.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/peterhry/circletype"&gt;circletype&lt;/a&gt; - A jQuery plugin that lets you curve type on the web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/freqDec/slabText/"&gt;slabText&lt;/a&gt; - A jQuery plugin for producing big, bold &amp;amp; responsive headlines.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/peachananr/simple-text-rotator"&gt;simple-text-rotator&lt;/a&gt; - Add a super simple rotating text to your website with little to no markup.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/chuckyglitch/novacancy.js"&gt;novacancy.js&lt;/a&gt; - Text Neon Golden effect jQuery plug-in.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ghepting/jquery-responsive-text"&gt;jquery-responsive-text&lt;/a&gt; - Make your text sizing responsive!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davatron5000/FitText.js"&gt;FitText.js&lt;/a&gt; - A jQuery plugin for inflating web type.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/davatron5000/Lettering.js"&gt;Lettering.js&lt;/a&gt; - A lightweight, easy to use JavaScript &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; injector for radical Web Typography.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#animations"&gt;
  &lt;/a&gt;
  Animations
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/julianshapiro/velocity"&gt;velocity&lt;/a&gt; - Accelerated JavaScript animation.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rstacruz/jquery.transit"&gt;jquery.transit&lt;/a&gt; - Super-smooth CSS3 transformations and transitions for jQuery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/tictail/bounce.js"&gt;bounce.js&lt;/a&gt; - Create tasty CSS3 powered animations in no time.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/greensock/GreenSock-JS"&gt;GreenSock-JS&lt;/a&gt; - High-performance HTML5 animations that work in all major browsers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EvandroLG/transitionEnd"&gt;TransitionEnd&lt;/a&gt; - TransitionEnd is an agnostic and cross-browser library to work with transitioned event.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/michaelvillar/dynamics.js"&gt;Dynamic.js&lt;/a&gt; - JavaScript library to create physics-based CSS animations.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/pstadler/the-cube"&gt;the-cube&lt;/a&gt; - The Cube is an experiment with CSS3 transitions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/h5bp/Effeckt.css"&gt;Effeckt.css&lt;/a&gt; - A Performant Transitions and Animations Library&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/daneden/animate.css"&gt;animate.css&lt;/a&gt; - A cross-browser library of CSS animations. As easy to use as an easy thing.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jschr/textillate"&gt;textillate&lt;/a&gt; - A simple plugin for CSS3 text animations.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/visionmedia/move.js"&gt;move.js&lt;/a&gt; - CSS3 backed JavaScript animation framework.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/LeaVerou/animatable"&gt;animatable&lt;/a&gt; - One property, two values, endless possibilities.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/peachananr/shuffle-images"&gt;shuffle-images&lt;/a&gt; - The Simplest Way to shuffle through images in a Creative Way&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/miguel-perez/smoothState.js"&gt;smoothState.js&lt;/a&gt; - Unobtrusive page transitions with jQuery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://animejs.com"&gt;Anime.js&lt;/a&gt; - A JavaScript animation engine.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://mojs.io"&gt;Mo.js&lt;/a&gt; - Motion graphics toolbelt for the web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/VincentGarreau/particles.js"&gt;particles.js&lt;/a&gt; - A lightweight JavaScript library for creating particles.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/matteobruni/tsparticles"&gt;tsParticles&lt;/a&gt; - A new and improved version of particles.js with bug fixes and many new features&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/lindelof/particles-bg"&gt;particles-bg&lt;/a&gt; - A lightweight React particles animation background component.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#image-processing"&gt;
  &lt;/a&gt;
  Image Processing
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/davidsonfellipe/lena.js"&gt;lena.js&lt;/a&gt; - A Library for image processing with filters and util functions.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nodeca/pica"&gt;pica&lt;/a&gt; - High quality image resize (with fast Lanczos filter, implemented in pure JS).&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fengyuanchen/cropper"&gt;cropper&lt;/a&gt; - A simple jQuery image cropping plugin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#es6"&gt;
  &lt;/a&gt;
  ES6
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/lukehoban/es6features"&gt;es6features&lt;/a&gt; - Overview of ECMAScript 6 features.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rse/es6-features"&gt;es6-features&lt;/a&gt; - ECMAScript 6: Feature Overview &amp;amp; Comparison.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/DrkSephy/es6-cheatsheet"&gt;es6-cheatsheet&lt;/a&gt; - ES2015 [ES6] cheatsheet containing tips, tricks, best practices and code snippets.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://kangax.github.io/compat-table/es6/"&gt;ECMAScript 6 compatibility table&lt;/a&gt; - Compatibility tables for all ECMAScript 6 features on a variety of environments.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/babel/babel"&gt;Babel (Formerly 6to5)&lt;/a&gt; - Turn ES6+ code into vanilla ES5 with no runtime.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/google/traceur-compiler"&gt;Traceur compiler&lt;/a&gt; - ES6 features &amp;gt; ES5. Includes classes, generators, promises, destructuring patterns, default parameters &amp;amp; more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#generators"&gt;
  &lt;/a&gt;
  Generators
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/gatsbyjs/gatsby"&gt;Gatsby.js&lt;/a&gt; - React-based static site generator.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/gridsome/gridsome"&gt;Gridsome&lt;/a&gt; - Vue-powered static site generator.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/facebook/docusaurus"&gt;Docusaurus&lt;/a&gt; - React-based static site generator by Facebook, ideal for content-centric websites.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#sdk"&gt;
  &lt;/a&gt;
  SDK
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/huei90/javascript-sdk-design"&gt;javascript-sdk-design&lt;/a&gt; - JavaScript SDK design guide extracted from work and personal experience&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/loverajoel/spotify-sdk"&gt;Spotify SDK&lt;/a&gt; - Entity oriented SDK to work with the Spotify Web API.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/square/connect-nodejs-sdk/"&gt;Square Node.js SDK&lt;/a&gt; - JavaScript client library for payments and other Square APIs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#misc"&gt;
  &lt;/a&gt;
  Misc
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/toddmotto/echo"&gt;echo&lt;/a&gt; - Lazy-loading images with data-* attributes.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/scottjehl/picturefill"&gt;picturefill&lt;/a&gt; - A responsive image polyfill for &amp;lt;picture&amp;gt;, srcset, sizes.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bestiejs/platform.js"&gt;platform.js&lt;/a&gt; - A platform detection library that works on nearly all JavaScript platforms.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/bestiejs/json3"&gt;json3&lt;/a&gt; - A modern JSON implementation compatible with nearly all JavaScript platforms.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://gabinaureche.com/logicalornot/"&gt;Logical Or Not&lt;/a&gt; - A game about JavaScript specificities.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/infusion/BitSet.js"&gt;BitSet.js&lt;/a&gt; - A JavaScript Bit-Vector implementation&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/joshbuddy/spoiler-alert"&gt;spoiler-alert&lt;/a&gt; - SPOILER ALERT! A happy little jquery plugin to hide spoilers on your site.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/illyism/jquery.vibrate.js"&gt;jquery.vibrate.js&lt;/a&gt; - Vibration API Wrappers&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/javve/list.js"&gt;list.js&lt;/a&gt; - Adds search, sort, filters and flexibility to tables, lists and various HTML elements. Built to be invisible and work on existing HTML.
&lt;a href="http://www.listjs.com"&gt;http://www.listjs.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/patrickkunka/mixitup"&gt;mixitup&lt;/a&gt; - MixItUp - A Filter &amp;amp; Sort Plugin.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/hootsuite/grid"&gt;grid&lt;/a&gt; - Drag and drop library for two-dimensional, resizable and responsive lists.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/liabru/jquery-match-height"&gt;jquery-match-height&lt;/a&gt; - a responsive equal heights plugin for jQuery.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/surveyjs/surveyjs"&gt;survey.js&lt;/a&gt; - JavaScript Survey Engine. It uses JSON for survey metadata and results. &lt;a href="http://surveyjs.org/"&gt;http://surveyjs.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sdras/array-explorer"&gt;Array Explorer&lt;/a&gt; and &lt;a href="https://objectexplorer.netlify.app/"&gt;Object Explorer&lt;/a&gt; - Resources to help figure out what native JavaScript method would be best to use at any given time&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://clipboardjs.com/"&gt;Clipboard.js&lt;/a&gt; - "Copy to clipboard" without Flash or use of Frameworks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/ky"&gt;ky&lt;/a&gt; - Tiny and elegant HTTP client based on the browser Fetch API.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/5anthosh/fcal"&gt;Fcal&lt;/a&gt; -  Math expression evaluator&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/joeattardi/emoji-button"&gt;emoji-button&lt;/a&gt; - Vanilla JavaScript emoji picker component&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/iooxa/article"&gt;iooxa&lt;/a&gt; - Components for interactive scientific writing, reactive documents and explorable explanations.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/idyll-lang/idyll"&gt;Idyll&lt;/a&gt; - Create explorable explanations and interactive storytelling essays. Can be &lt;a href="https://github.com/idyll-lang/idyll-embed"&gt;embedded in HTML&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;javascript-algorithms&lt;/a&gt; - Algorithms and data structures implemented in JavaScript with explanations and links to further readings.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/fingerprintjs/fingerprintjs"&gt;FingerprintJS&lt;/a&gt; - Makes a visitor identifier from a browser fingerprint that stays the same in incognito mode and when browser data is purged.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#podcasts"&gt;
  &lt;/a&gt;
  Podcasts
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://javascriptair.com/"&gt;JavaScript Air&lt;/a&gt; - The live video broadcast podcast all about JavaScript and the Web platform.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.weboftomorrowpodcast.com/"&gt;Web of Tomorrow&lt;/a&gt; - Podcast about JavaScript for beginners.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://devchat.tv/js-jabber"&gt;JavaScript Jabber&lt;/a&gt; - A weekly podcast about JavaScript, including Node.js, Front-End Technologies, Careers, Teams and more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#worth-reading"&gt;
  &lt;/a&gt;
  Worth Reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You Don't Know JS&lt;/a&gt; - Possibly the best book written on modern JavaScript, completely readable online for free, or can be bought to support the author.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/braziljs/js-the-right-way/"&gt;braziljs/js-the-right-way&lt;/a&gt; - An easy-to-read, quick reference for JS best practices, accepted coding standards, and links around the Web.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/revolunet/JSbooks"&gt;JSbooks&lt;/a&gt; - Directory of free JavaScript ebooks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://superherojs.com"&gt;Superhero.js&lt;/a&gt; - A collection of resources about creating, testing and maintaining a large JavaScript code base.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/HugoGiraudel/SJSJ"&gt;SJSJ&lt;/a&gt; - Simplified JavaScript Jargon is a community-driven attempt at explaining the loads of buzzwords making the current JavaScript ecosystem in a few simple words.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sarbbottam/write-an-open-source-js-lib"&gt;How to Write an Open Source JavaScript Library&lt;/a&gt; - A comprehensive guide through a set of steps to publish a JavaScript open source library.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hackr.io/tutorials/learn-javascript"&gt;JavaScript Tutorials&lt;/a&gt; - Learn Javascript online from a diverse range of user ranked online tutorials.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/getify/Functional-Light-JS"&gt;Functional-Light JavaScript&lt;/a&gt; - Pragmatic, balanced FP in JavaScript.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;Clean Code JavaScript&lt;/a&gt; - Clean Code concepts adapted for JavaScript.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#others"&gt;
  &lt;/a&gt;
  Others
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sotayamashita/awesome-css"&gt;sotayamashita/awesome-css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/emijrp/awesome-awesome"&gt;emijrp/awesome-awesome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bayandin/awesome-awesomeness"&gt;bayandin/awesome-awesomeness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/awesome"&gt;sindresorhus/awesome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jnv/lists"&gt;jnv/list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gianarb/awesome-angularjs"&gt;gianarb/angularjs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peterkokot/awesome-dojo"&gt;peterkokot/awesome-dojo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/addyosmani/es6-tools"&gt;addyosmani/es6-tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ericdouglas/ES6-Learning"&gt;ericdouglas/ES6-Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/obetomuniz/awesome-webcomponents"&gt;obetomuniz/awesome-webcomponents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/willianjusten/awesome-svg"&gt;willianjusten/awesome-svg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davidsonfellipe/awesome-wpo"&gt;davidsonfellipe/awesome-wpo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sadcitizen/awesome-backbone"&gt;instanceofpro/awesome-backbone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/enaqx/awesome-react"&gt;enaqx/awesome-react&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bolshchikov/js-must-watch"&gt;bolshchikov/js-must-watch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/peterkokot/awesome-jquery"&gt;peterkokot/awesome-jquery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/davidyezsetz/you-might-not-need-jquery-plugins"&gt;davidyezsetz/you-might-not-need-jquery-plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MaximAbramchuck/awesome-interview-questions"&gt;MaximAbramchuck/awesome-interviews&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/denolib/awesome-deno"&gt;denolib/awesome-deno&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This Content is distributed under the &lt;a href="http://creativecommons.org/publicdomain/zero/1.0/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B4_3ZEhI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://i.creativecommons.org/p/zero/1.0/88x31.png" alt="CC0"&gt;&lt;/a&gt; license.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>Bind Azure Functions to SAP Event Mesh … What?</title>
      <author>Christian Lechner</author>
      <pubDate>Mon, 06 Sep 2021 06:37:06 +0000</pubDate>
      <link>https://dev.to/lechnerc77/bind-azure-functions-to-sap-event-mesh-what-2n8j</link>
      <guid>https://dev.to/lechnerc77/bind-azure-functions-to-sap-event-mesh-what-2n8j</guid>
      <description>&lt;h3&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h3&gt;

&lt;p&gt;In a lot of business processes in some point in time we must touch SAP system as the ERP backbone of many companies. There are tons of use-cases with their specific requirements to feed data into SAP and there are also a lot of options to achieve this with corresponding pros and cons.&lt;/p&gt;

&lt;p&gt;For sure we can directly call exposed APIs of the SAP systems or connect via integration services like &lt;a href="https://help.sap.com/viewer/368c481cd6954bdfa5d0435479fd4eaf/Cloud/en-US/e12c09cc8e9b4574b092d8964b049ce6.html"&gt;SAP Cloud Integration&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;In addition, there is a (quite) new player in the game called &lt;a href="https://help.sap.com/viewer/bf82e6b26456494cbdd197057c09979f/Cloud/en-US/df532e8735eb4322b00bfc7e42f84e8d.html"&gt;SAP Event Mesh&lt;/a&gt; that allows us to send messages and events to via different channels. That sounds like a nice building block to setup a resilient and extensible way to communicate with SAP solutions with the big advantage that we do not have to care about which systems to call exactly. We send a message in a queue and the relevant subscribers can get the access to the needed information.  &lt;/p&gt;

&lt;p&gt;Let us assume the starting point of our process is outside of SAP as we have developed a serverless app using Azure Functions and at some point in the process we want to send a message to the SAP system making use of the SAP Event Mesh to trigger follow-up processes in the ERP.&lt;/p&gt;

&lt;p&gt;This picture gives you a rough overview of an example flow (some components on BTP side might be missing depending on how to consume and process the messages):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tk9vdsGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5m397ci1qmaunfnsymc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tk9vdsGV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k5m397ci1qmaunfnsymc.png" alt="Overview Message Flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How can we do that? There is a REST API that allows us to interact with the SAP Event Mesh. But before calling the REST API we must do the OAuth dance and fetch the bearer token to authenticate our call. Okay we can do that in our Azure Function. Problem solved.&lt;/p&gt;

&lt;p&gt;Wait a second: in a real-world scenario, there will be not only one business process or one Azure Function app that communicates with the SAP Event Mesh but there will be several. One solution would be the brute force one – every app implements the flow (OAuth + call of the REST API) by themselves. It’s not rocket-science but cumbersome and in case of changes e. g. in the API every app must adopt its code. This is for several reasons like maintainability not the best approach.&lt;/p&gt;

&lt;p&gt;Is there a better way to centralize the steps to send a message to the SAP Event Mesh and make the consumption of this functionality in an Azure Function as smooth as possible? And indeed, there is: Azure Functions allow the implementation of &lt;a href="https://github.com/Azure/azure-webjobs-sdk/wiki/Creating-custom-input-and-output-bindings"&gt;custom bindings&lt;/a&gt; to exactly achieve such a flow (or to be more precise this functionality is delivered by the underlying &lt;em&gt;WebJobsSDK&lt;/em&gt;). &lt;/p&gt;

&lt;p&gt;Let’s explore how we can do that and how complicated it is to achieve a first working setup.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h3&gt;

&lt;p&gt;To test the scenario, we need an SAP Event Mesh. Luckily this service is part of the &lt;a href="https://account.hanatrial.ondemand.com/"&gt;SAP Business Technology Platform trial&lt;/a&gt; and available for free. &lt;/p&gt;

&lt;p&gt;However, the quality of the documentation as well as the one of the management UI has room for improvement. The trial account offers a (deprecated) version of the SAP Event Mesh in the so called &lt;em&gt;dev plan&lt;/em&gt;. For the inital setup follow along the description for the &lt;em&gt;&lt;a href="https://help.sap.com/viewer/bf82e6b26456494cbdd197057c09979f/Cloud/en-US/7e504322652d4791ade0ca2bbc5a6443.html"&gt;deprecated lite service plan&lt;/a&gt;&lt;/em&gt; (you get the fun, I guess: looking for the setup of the dev plan will not guide you to the correct documentation). &lt;/p&gt;

&lt;p&gt;This version might be discontinued in the future, but this is the easiest setup and with respect to the implementation of the binding there are no differences.  &lt;/p&gt;

&lt;p&gt;After we have executed the initial setup according to the documentation and created an instance of the SAP Event Mesh we must create so called &lt;em&gt;service keys&lt;/em&gt; to get access to the to it e. g. via the REST APIs:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AS0nmLp_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h30i96uwlyfqcfdo1as6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AS0nmLp_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h30i96uwlyfqcfdo1as6.png" alt="SAP Event Mesh Create Service Keys"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The service key contains the relevant REST endpoints for the OAuth token, credentials and the base URL of the SAP Event Mesh:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jcsb9SSl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ltdgen77opq64a6iesr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jcsb9SSl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3ltdgen77opq64a6iesr.png" alt="SAP Event Mesh - Service Key"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As last step of the setup we must navigate to the dashboard of the SAP Event Mesh from the service instance:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m3QWko0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/flylc1zwms9zeyi9snfj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m3QWko0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/flylc1zwms9zeyi9snfj.png" alt="Navigation to SAP Event Mesh Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and create a queue to put our messages into:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--olSnVLIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6s3seiz05czd0074nun7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--olSnVLIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6s3seiz05czd0074nun7.png" alt="SAP Event Mesh Queue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the SAP Event Mesh side everything is put in place to start the implementation of the custom binding.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;💡 &lt;em&gt;Additional Info&lt;/em&gt;: If you want to dive deeper into the topic of the SAP Event Mesh I highly recommend the &lt;a href="https://www.youtube.com/playlist?list=PL6RpkC85SLQCf--P9o7DtfjEcucimapUf"&gt;YouTube playlist&lt;/a&gt; of DJ Adams that provides a  lot more details and brings in some CLI magic on top – this helped me a lot!&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#the-custom-binding"&gt;
  &lt;/a&gt;
  The Custom Binding
&lt;/h3&gt;

&lt;p&gt;Azure Functions come along with the concept of &lt;a href="https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings?tabs=csharp"&gt;bindings&lt;/a&gt; which allows us to connect to resources outside of the function in a declarative way. &lt;br&gt;
There are three types of bindings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Trigger&lt;/em&gt;: connection to a resource that triggers the execution of the function&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Input&lt;/em&gt;: fetching data from a resource as input for the function&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Output&lt;/em&gt;: sending data to a resource as output of the function&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Azure Functions come with some bindings out of the box, but of course not for the SAP Event Mesh. Luckily bindings can be extended via own implementations that can be consumed from an Azure Function via the standard binding mechanisms.&lt;/p&gt;

&lt;p&gt;For our scenario we need an output binding that we use to propagate a message to a queue in the SAP Event Mesh. The binding must take a message from the function, do the authentication and then propagate the message to the SAP Event Mesh via the REST endpoint.&lt;/p&gt;

&lt;p&gt;What do we have to do to make this reality? Let’s walk through it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Remark&lt;/em&gt;: These are my first steps into the .NET and C# area, so bear with me with respect to the quality of the code. Happy for any input on improving in that area.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h4&gt;
  &lt;a href="#step-1-project-setup"&gt;
  &lt;/a&gt;
  Step 1 – Project Setup
&lt;/h4&gt;

&lt;p&gt;We create a directory (e.g. &lt;code&gt;EventMeshCustomBinding&lt;/code&gt;) and in it we setup the basic skeleton of the custom binding via the dotnet CLI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;dotnet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;classlib&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure that the target framework in the project properties  is set to .NET Core 3.1.&lt;/p&gt;

&lt;p&gt;Next we add a &lt;code&gt;.gitignore&lt;/code&gt; file via CLI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight powershell"&gt;&lt;code&gt;&lt;span class="n"&gt;dotnet&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nx"&gt;gitignore&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Scaffolding done, let's move on to the code.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2-definition-of-binding-data"&gt;
  &lt;/a&gt;
  Step 2 – Definition of Binding Data
&lt;/h4&gt;

&lt;p&gt;Now we create the classes needed for the declarative definition of the binding parameters (like credentials and endpoint) as well as the data we expect from the Azure Function to be handed to the SAP Event Mesh.&lt;/p&gt;

&lt;p&gt;We define a class &lt;code&gt;EventMeshMessage.cs&lt;/code&gt; that represents our message that we receive from the Azure Function. We assume that just the message is handed over, so the class looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;EventMeshCustomBinding&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EventMeshMessage&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We do the same for the declarative definition of the binding parameters by creating the class &lt;code&gt;EventMeshAttribute&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;The class contains the parameters that we expect from the configuration of the binding as property. It inherits from the &lt;code&gt;Attribute&lt;/code&gt; base class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.Azure.WebJobs.Description&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;EventMeshCustomBinding&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Binding&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;AttributeUsage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AttributeTargets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Parameter&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;AttributeTargets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ReturnValue&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EventMeshAttribute&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Attribute&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AutoResolve&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;EventMeshTokenEndpoint&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AutoResolve&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;EventMeshClientId&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AutoResolve&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;EventMeshClientSecret&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AutoResolve&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;EventMeshGrantType&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AutoResolve&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;EventMeshRestBaseEndpoint&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;

        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;AutoResolve&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;EventMeshQueueName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We added some attributes to the class namely the &lt;code&gt;[Binding]&lt;/code&gt; attribute to mark it as a binding for the WebJobSDK as well as the usage of the defined attributes via &lt;code&gt;[AttributeUsage]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In addition, we annotate every property of the class with the &lt;code&gt;[AutoResolve]&lt;/code&gt; attribute to wire it up with the function i. e. with the parameters defined in the function.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3-the-async-collector-aka-the-core-part"&gt;
  &lt;/a&gt;
  Step 3 – The Async Collector aka the Core Part
&lt;/h4&gt;

&lt;p&gt;The application logic behind the binding is implemented using the interface  &lt;code&gt;IAsyncCollector&lt;/code&gt;. Here is the complete code of the class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.Azure.WebJobs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Newtonsoft.Json&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;RestSharp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Text.Json&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Threading&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;System.Web&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;EventMeshCustomBinding&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;internal&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EventMeshAsyncCollector&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IAsyncCollector&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;EventMeshMessage&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;_eventMeshTokenEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;_eventMeshClientId&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;_eventMeshClientSecret&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;_eventMeshGrantType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;_eventMeshRestBaseEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;_eventMeshQueueName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;EventMeshAsyncCollector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EventMeshBinding&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EventMeshAttribute&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshTokenEndpoint&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshTokenEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshClientId&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshClientId&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshClientSecret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshClientSecret&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshGrantType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshGrantType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshRestBaseEndpoint&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshRestBaseEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshQueueName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshQueueName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;AddAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EventMeshMessage&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CancellationToken&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;

                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nf"&gt;GetOauthToken&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;restEndPointWithQueue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;_eventMeshRestBaseEndpoint&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/messagingrest/v1/queues/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;HttpUtility&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UrlEncode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_eventMeshQueueName&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s"&gt;/messages"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RestClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restEndPointWithQueue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RestRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x-qos"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"0"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Content-Type"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"application/json"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Authorization"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TokenType&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessToken&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JsonConvert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SerializeObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Formatting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Indented&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddParameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"application/json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ParameterType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestBody&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;IRestResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ExecuteAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;

                &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;FlushAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CancellationToken&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CompletedTask&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;


        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Token&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetOauthToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;tokenUrl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;_eventMeshTokenEndpoint&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;?grant_type=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;_eventMeshGrantType&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;response_type=token"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RestClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tokenUrl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RestRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;base64EncodedCredentials&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToBase64String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Encoding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UTF8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;_eventMeshClientId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;_eventMeshClientSecret&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

            &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Authorization"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;$"Basic &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;base64EncodedCredentials&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;@""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddParameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"text/plain"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ParameterType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestBody&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;IRestResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ExecuteAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;Token&lt;/span&gt; &lt;span class="n"&gt;bearerToken&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JsonConvert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeserializeObject&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Token&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bearerToken&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="k"&gt;internal&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Token&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"access_token"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;AccessToken&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;

            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"token_type"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;TokenType&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;

            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"expires_in"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ExpiresIn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;

            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"refresh_token"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;RefreshToken&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s walk through it step by step. The class consists of three main parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The constructor&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;AddAsync&lt;/code&gt; method&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;FlushAsync&lt;/code&gt; method&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;constructor&lt;/code&gt; receives the attribute values of the binding i. e. the configuration parameters that we store in private properties of the class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;EventMeshAsyncCollector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EventMeshBinding&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EventMeshAttribute&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshTokenEndpoint&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshTokenEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshClientId&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshClientId&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshClientSecret&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshClientSecret&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshGrantType&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshGrantType&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshRestBaseEndpoint&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshRestBaseEndpoint&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="n"&gt;_eventMeshQueueName&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventMeshQueueName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;FlushAsync&lt;/code&gt; method returns the successful completed task and needs to be implemented as part of the &lt;code&gt;IAsyncCollector&lt;/code&gt; interface, no real magic in there:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;FlushAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CancellationToken&lt;/span&gt; &lt;span class="n"&gt;cancellationToken&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CompletedTask&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main logic is located   in the method &lt;code&gt;AddAsync&lt;/code&gt;. In our case it contains the logic to get the OAuth token via the private method &lt;code&gt;GetOauthToken&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Token&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;GetOauthToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;tokenUrl&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;_eventMeshTokenEndpoint&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;?grant_type=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;_eventMeshGrantType&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;amp;response_type=token"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RestClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tokenUrl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RestRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;base64EncodedCredentials&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToBase64String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Encoding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;UTF8&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetBytes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;_eventMeshClientId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;:&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;_eventMeshClientSecret&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

            &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Authorization"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;$"Basic &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;base64EncodedCredentials&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;@""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

            &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddParameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"text/plain"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ParameterType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestBody&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;IRestResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ExecuteAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="n"&gt;Token&lt;/span&gt; &lt;span class="n"&gt;bearerToken&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JsonConvert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DeserializeObject&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Token&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bearerToken&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and the call of the SAP Event Mesh REST endpoint to transfer the message to authenticating via the Bearer token.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;try&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;

                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nf"&gt;GetOauthToken&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;restEndPointWithQueue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;_eventMeshRestBaseEndpoint&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/messagingrest/v1/queues/&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;HttpUtility&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;UrlEncode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_eventMeshQueueName&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s"&gt;/messages"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RestClient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;restEndPointWithQueue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;RestRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Method&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;POST&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"x-qos"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"0"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Content-Type"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"application/json"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Authorization"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TokenType&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AccessToken&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JsonConvert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;SerializeObject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Formatting&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Indented&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddParameter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"application/json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ParameterType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;RequestBody&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

                &lt;span class="n"&gt;IRestResponse&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ExecuteAsync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;

                &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use an internal class &lt;code&gt;Token&lt;/code&gt; to map the token data from the REST call to an object. In this class we use the attribute &lt;code&gt;JsonProperty&lt;/code&gt; on the properties to "automagically" transfer the right data to the properties when serializing the JSON string from the REST call of the OAuth endpoint:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;internal&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Token&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"access_token"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;AccessToken&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;

            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"token_type"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;TokenType&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;

            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"expires_in"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ExpiresIn&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;

            &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;JsonProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"refresh_token"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
            &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;RefreshToken&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;!;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Some points to put attention to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For the OAuth token we need to transfer the &lt;code&gt;clientid&lt;/code&gt; and the &lt;code&gt;clientsecret&lt;/code&gt; &lt;em&gt;base64&lt;/em&gt; encoded.&lt;/li&gt;
&lt;li&gt;The queue name is part of the URL of the SAP Event Mesh. We must therefore &lt;em&gt;URL encode&lt;/em&gt; the string.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now it is time to wire things up.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;💡 &lt;em&gt;Additional Info&lt;/em&gt;: When implementing the binding I first made sure that the REST calls are working properly. For that I executed the calls via Postman. Postman offers an option to create the code for different languages and libraries which made the transfer to the C# world much easier for me 😊&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;h4&gt;
  &lt;a href="#step-4-connecting-the-pieces"&gt;
  &lt;/a&gt;
  Step 4 – Connecting the Pieces
&lt;/h4&gt;

&lt;p&gt;To integrate the logic into the binding mechanism of Azure Functions we need to implement two more classes:&lt;/p&gt;

&lt;p&gt;First we need a config provider class to wire the message and the configuration together with the async collector. We achieve this with few lines of code implementing the interface &lt;code&gt;IExtensionConfigProvider&lt;/code&gt; in the class &lt;code&gt;EventMeshBinding&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.Azure.WebJobs.Description&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.Azure.WebJobs.Host.Config&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;EventMeshCustomBinding&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Extension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"EventMeshBinding"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;


&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EventMeshBinding&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IExtensionConfigProvider&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;


        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ExtensionConfigContext&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddConverter&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EventMeshMessage&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;EventMeshMessage&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddBindingRule&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;EventMeshAttribute&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;().&lt;/span&gt;&lt;span class="nf"&gt;BindToCollector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;EventMeshAsyncCollector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We mark the class as an extension using the corresponding attribute and we use the &lt;code&gt;Initialize&lt;/code&gt; method:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;to convert the input delivered as a string to the EventMessage object. &lt;/li&gt;
&lt;li&gt;to bind the async collector and the configuration attributes together&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;💡 &lt;em&gt;Additional Info&lt;/em&gt;: There is much more that you can do there like validating the input, but let’s start with this setup.&lt;/p&gt;
&lt;/blockquote&gt;


&lt;/blockquote&gt;

&lt;p&gt;Having this glue code in place we need to make the runtime aware of the extension. This is done via a startup class that we call &lt;code&gt;EventMeshBindingStartup&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.Azure.WebJobs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;Microsoft.Azure.WebJobs.Hosting&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;EventMeshCustomBinding&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;assembly&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;WebJobsStartup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EventMeshBindingStartup&lt;/span&gt;&lt;span class="p"&gt;))]&lt;/span&gt;

&lt;span class="k"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;EventMeshCustomBinding&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;EventMeshBindingStartup&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;IWebJobsStartup&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;Configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IWebJobsBuilder&lt;/span&gt; &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AddExtension&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;EventMeshBinding&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we published our newly created SAP Event Mesh binding to the WebJob builder. &lt;/p&gt;

&lt;p&gt;Code-wise everything is in place, so let's build the &lt;code&gt;dll&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-5-building-the-dll"&gt;
  &lt;/a&gt;
  Step 5 – Building the DLL
&lt;/h4&gt;

&lt;p&gt;As we have the code in place, we must build the project via&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dotnet build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This creates the necessary &lt;code&gt;*.dll&lt;/code&gt; file for our Azure Function binding.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#usage-of-the-custom-binding-in-an-azure-function"&gt;
  &lt;/a&gt;
  Usage of the Custom Binding in an Azure Function
&lt;/h3&gt;

&lt;p&gt;We create an HTTP triggered Azure Function in TypeScript in order to wire this one up with our new custom binding. &lt;/p&gt;

&lt;p&gt;Azure Functions in non-.NET languages use the so called &lt;em&gt;extension bundle&lt;/em&gt; mechanism to install the needed bindings. As we want to install our own binding we need to bypass this mechanism and bring in our dll. Here are the steps to achieve this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We add a folder &lt;code&gt;extension&lt;/code&gt; to your Azure Functions project.&lt;/li&gt;
&lt;li&gt;We copy the &lt;code&gt;dll&lt;/code&gt; file of the custom binding into the folder.&lt;/li&gt;
&lt;li&gt;We remove the &lt;code&gt;extensionbundle&lt;/code&gt; section from the &lt;code&gt;host.json&lt;/code&gt; file. This switches off the extension bundle mechanism&lt;/li&gt;
&lt;li&gt;We initialize the Azure Functions project with a &lt;code&gt;extensions.csproj&lt;/code&gt; file via the CLI command &lt;code&gt;func extensions sync&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;We add the needed dependencies of our custom binding to the &lt;code&gt;extensions.csproj&lt;/code&gt; file namely for our extension namely:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;PackageReference&lt;/span&gt; &lt;span class="na"&gt;Include=&lt;/span&gt;&lt;span class="s"&gt;"Microsoft.Azure.WebJobs"&lt;/span&gt; &lt;span class="na"&gt;Version=&lt;/span&gt;&lt;span class="s"&gt;"3.0.27"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;PackageReference&lt;/span&gt; &lt;span class="na"&gt;Include=&lt;/span&gt;&lt;span class="s"&gt;"RestSharp"&lt;/span&gt; &lt;span class="na"&gt;Version=&lt;/span&gt;&lt;span class="s"&gt;"106.12.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;We execute &lt;code&gt;func extensions install&lt;/code&gt; to install our binding extension. To check if this was successful we take a look into the file &lt;code&gt;extension.json&lt;/code&gt; in the &lt;code&gt;bin&lt;/code&gt; directory. There should be an entry for the SAP Event Mesh binding in there.&lt;/li&gt;
&lt;li&gt;We add the output binding to the function in its &lt;code&gt;function.json&lt;/code&gt; file:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"EventMesh"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"direction"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"out"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"EventMeshMessage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshTokenEndpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"%EventMeshTokenEndpoint%"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshClientId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"%EventMeshClientId%"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshClientSecret"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"%EventMeshClientSecret%"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshGrantType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"%EventMeshGrantType%"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshRestBaseEndpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"%EventMeshRestBaseEndpoint%"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshQueueName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"%EventMeshQueueName%"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;We add the connection values for the SAP Event Mesh into the &lt;code&gt;local settings.json&lt;/code&gt; like:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"IsEncrypted"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="nl"&gt;"Values"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"AzureWebJobsStorage"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"FUNCTIONS_WORKER_RUNTIME"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshTokenEndpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;YOUR EVENT MESH TOKEN ENDPOINT&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshClientId"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;YOUR EVENT MESH CLIENT ID&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshClientSecret"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;YOUR EVENT MESH CLIENT SECRET&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshGrantType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"client_credentials"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshRestBaseEndpoint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;YOUR EVENT MESH REST ENDPOINT&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="nl"&gt;"EventMeshQueueName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;YOUR EVENT MESH QUEUE NAME&amp;gt;"&lt;/span&gt;&lt;span class="w"&gt;
   &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This setup is due to the &lt;code&gt;[AutoResolve]&lt;/code&gt; attribute in our binding. &lt;/p&gt;

&lt;p&gt;We adjust the functions code to send a simple message to the queue:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;AzureFunction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;HttpRequest&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@azure/functions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;httpTrigger&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AzureFunction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;HttpRequest&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;HTTP trigger function processed a request.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="na"&gt;responseMessage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bindings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;EventMeshMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;

         &lt;span class="nx"&gt;responseMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`This HTTP triggered function executed successfully. Message was: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;responseMessage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;No message to be sent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;responseMessage&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;httpTrigger&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can start the function and in &lt;code&gt;verbose&lt;/code&gt; mode we see that the extension gets picked up:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BDk2QGMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bl1k3nicqdtrdpuoyht2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BDk2QGMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bl1k3nicqdtrdpuoyht2.png" alt="Azure Function Startup"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us send a message to the function that will then be propagated to the SAP Event Mesh:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FHqrumYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxdg85d3iiyqk9d3rur6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FHqrumYG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vxdg85d3iiyqk9d3rur6.png" alt="Send Message to SAP Event Mesh"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and it will wait there to get consumed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RxHeOsdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ig015n4mun1kmu2hsgdj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RxHeOsdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ig015n4mun1kmu2hsgdj.png" alt="SAP Event Mesh - Message in Queue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By consuming it via a Postman we see that this was the one we sent before: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NkfBP4fA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w117rjgeh8nzhqgjtdbw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NkfBP4fA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w117rjgeh8nzhqgjtdbw.png" alt="Consume message via Postman"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cool, our first custom output binding is up and running!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;Talking to an SAP system is usually inevitable when developing business applications. There have been and there will be a lot of options to do that. &lt;/p&gt;

&lt;p&gt;One cloud-native approach is available via the SAP Event Mesh. In this blog post we walked through the setup to combine Azure Functions with the SAP Event Mesh. To make this combination convenient for a developer we developed a custom binding to keep the code (and the mind of the developer) of the Azure Function free of any burden from authenticating against the SAP Event Mesh as well as the details on how to send a message to it.&lt;/p&gt;

&lt;p&gt;Although this is only a first little step it shows that bridging the gap between the two worlds is not that complicated and custom applications implemented via Azure Functions can be combined with the SAP sphere without breaking your hands. &lt;/p&gt;

&lt;p&gt;As an outlook: if we look at the code, we see that it still has some room for improvement (like error handling, unit testing and validations), so some more .NET to learn for me 😉.&lt;/p&gt;

&lt;p&gt;In addition, it is certainly also interesting to have a custom trigger binding for the SAP Event Mesh. That levels up the difficulty at least for me, but something I will certainly have a closer look at. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#addendum-1-the-code"&gt;
  &lt;/a&gt;
  Addendum 1 - The Code
&lt;/h3&gt;

&lt;p&gt;All the code is available on GitHub:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom Binding to SAP Event Mesh: &lt;a href="https://github.com/lechnerc77/SAPEventMeshCustomBinding"&gt;https://github.com/lechnerc77/SAPEventMeshCustomBinding&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Azure Function using the Custom Binding: &lt;a href="https://github.com/lechnerc77/SAPEventMeshCustomBindingSampleFunction"&gt;https://github.com/lechnerc77/SAPEventMeshCustomBindingSampleFunction&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#addendum-2-extension-bundles"&gt;
  &lt;/a&gt;
  Addendum 2 - Extension Bundles
&lt;/h3&gt;

&lt;p&gt;Extensions are the way Azure Functions delivers the different bindings and keeps them out of the Azure Functions Core (keeping the core (c)lean - does that ring a bell reader from the SAP world?). &lt;/p&gt;

&lt;p&gt;There are only two extensions backed into the core (HTTP and CRON). For all other ones like Kafka the extension needs to be installed in addition.&lt;/p&gt;

&lt;p&gt;For non-.NET languages there is a mechanism that makes the live as developer easier when it comes to install the right extension, called &lt;em&gt;extension bundle&lt;/em&gt;. This mechanism automatically installs the right extension in the version that is also used in the hosted environment of Azure. The mechanism is configured in the &lt;code&gt;host.json&lt;/code&gt; file of the Azure Function and tells the runtime to install what is necessary (details which version needs to be installed are available here: &lt;a href="https://github.com/Azure/azure-functions-extension-bundles/blob/v2.x/src/Microsoft.Azure.Functions.ExtensionBundle/extensions.json"&gt;https://github.com/Azure/azure-functions-extension-bundles/blob/v2.x/src/Microsoft.Azure.Functions.ExtensionBundle/extensions.json&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Technically the Azure Function host reaches out to a CDN and installs the function based on some constants hidden in the Azure Functions Host (see &lt;a href="https://github.com/Azure/azure-functions-host/blob/9bdb40b2d517f32c5052956ba8c9cf662ea36a9e/src/WebJobs.Script/ScriptConstants.cs"&gt;https://github.com/Azure/azure-functions-host/blob/9bdb40b2d517f32c5052956ba8c9cf662ea36a9e/src/WebJobs.Script/ScriptConstants.cs&lt;/a&gt; =&amp;gt; search for &lt;code&gt;ExtensionBundleDefaultSourceUri&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;We maybe do not want to reach out to the CDN, use our own CDN or we want to pin a specific version or maybe want to switch to a later version than the CDN provides (updates of the versions in the ExtensionBundles do not occur as regularly as updates of extensions). How can we achieve that?&lt;/p&gt;

&lt;p&gt;In the blog post we used a kind of brute-force approach to get our extension installed, which is okay for development purposes. But in a professional setup we may provide our own NuGet feed.&lt;/p&gt;

</description>
      <category>serverless</category>
      <category>azure</category>
      <category>sap</category>
      <category>azurefunctions</category>
    </item>
    <item>
      <title>What to expect in Python 3.10 🤯</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Mon, 06 Sep 2021 06:36:58 +0000</pubDate>
      <link>https://dev.to/unitybuddy/what-to-expect-in-python-3-10-20c2</link>
      <guid>https://dev.to/unitybuddy/what-to-expect-in-python-3-10-20c2</guid>
      <description>&lt;p&gt;Hello, buddies! What sets Python apart is its intuitive features like libraries, high productivity, ease of learning, etc. According to a recent study, almost 27% of the advertised jobs require Python as a core skill — up from 18.5% at the beginning of the year😮😮&lt;/p&gt;

&lt;p&gt;Last October, Python released version 3.9. The updates included improvements in Python internals, performance boosts, dictionary union operators, handy new string functions, new type operations, consistent and stable internal APIs, and more.&lt;/p&gt;

&lt;p&gt;So on this 4th of October, Python is going to release 3.10, which has awesome features 👏👏&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#better-error-messages"&gt;
  &lt;/a&gt;
  Better Error Messages
&lt;/h2&gt;

&lt;p&gt;In general, Python error messages can be misleading and confusing. That is why this feature is here to help us. This feels like an important topic that is going to make our day-to-day job a lot easier and I am really looking forward to it.&lt;/p&gt;

&lt;p&gt;So first let's take a look at how Python 3.9 gives error messages.&lt;/p&gt;

&lt;p&gt;There are several types of errors where the current Python incarnation doesn’t provide enough information. For example, observe SytaxError for the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="n"&gt;newArticle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Article&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"C# 10 - Top 5 new features"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;Category&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;".NET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;ReleaseDate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;File "&lt;span class="nt"&gt;&amp;lt;ipython-input-5-e9aa07ca09db&amp;gt;&lt;/span&gt;", line 2
processed_data = process_data(data)
^
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, the square bracket is missing at the end of the first line. However, SyntaxError reports a problem in the second line. A similar situation can happen if we forget to close string quotes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"BirdIsThe
processed_data = process_data(data)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;ile "&lt;span class="nt"&gt;&amp;lt;ipython-input-6-44253c1ee7d8&amp;gt;&lt;/span&gt;", line 1
word = "BirdIsThe
            ^
SyntaxError: EOL while scanning string literal
SyntaxError: invalid syntax
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case, it can be even more misleading because EOL or EOF is reported 😑😑&lt;/p&gt;

&lt;p&gt;Now let's see how Python 3.10 is going to treat this.&lt;/p&gt;

&lt;p&gt;There are several areas where we will get better messages from Python 3.10. Let’s start with the problems displayed in the chapter above. If you forget to close the bracket like in the example above you will get this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;data = [2, 9, 11, 33, 56, 93, 111,
   ^
SyntaxError: '[' was never closed
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or if you forget to close the string:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;word = "BirdIsThe
       ^
SyntaxError: unterminated string literal (detected at line 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or if you messed up your generator expression:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;some_function(x, y for y in range(11))
         ^^^^^^^^^^^^^^^^^^^^
SyntaxError: Generator expression must be parenthesized
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All these messages are more specific and concrete. All the Pythonistas going to love it 😍😍&lt;/p&gt;

&lt;p&gt;However, that is not all. Python 3.10 improved other messages as well. If you forget to put two dots after a statement, now you will know that more explicitly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (2 &amp;gt; 9)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;if (2 &amp;gt; 9)
          ^
SyntaxError: expected ':'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or if you used &lt;code&gt;=&lt;/code&gt; insted of &lt;code&gt;==&lt;/code&gt;&lt;br&gt;
 in the mentioned statement:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;if (2 = 9)
        ^
SyntaxError: cannot assign to literal here. Maybe you meant '==' instead of '='?
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Wow, error messages are clear as in Unity 🥰🥰&lt;/p&gt;

&lt;p&gt;Also, if you forget comma in the collection, Python 3.10 has got your back:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt; &lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;93&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;File "&lt;span class="nt"&gt;&amp;lt;stdin&amp;gt;&lt;/span&gt;", line 1
list = [2, 9, 11, 33 56, 93]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Talking about collections, if you forgot to assign value to a dictionary key, Python 3.10 will let you know:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="nb"&gt;dict&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'a'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'b'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'c'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'d'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;File "&lt;span class="nt"&gt;&amp;lt;stdin&amp;gt;&lt;/span&gt;", line 1
dict = { 'a' : 2, 'b' : 9, 'c' : , 'd' : 33 }
                                   ^
SyntaxError: expression expected after dictionary key and ':'
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are other improved messages as well, however, I found these the most useful, especially if you are a beginner. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#structural-pattern-matching"&gt;
  &lt;/a&gt;
  Structural Pattern Matching
&lt;/h2&gt;

&lt;p&gt;This feature is definitely going to have the biggest impact. If you are familiar with a &lt;code&gt;switch-case&lt;/code&gt; statement from any other language, this one is that, but on steroids. Wait, there was not switch-case mechanism in Python until now? Why is it called pattern matching? What is the difference? Let’s see.&lt;/p&gt;

&lt;p&gt;Yes, Python was not supporting switch-case statements, or simillar concepts until now. Weird, I know. There were several attempts to include this concept in the language, however, they were always rejected. Nobody has been able to suggest an implementation that can be integrated properly with Python’s syntax and the overall spirit of the language. This means that if you wanted to check multiple values, you need to do something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;http_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Bad request"&lt;/span&gt;
  &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Not found"&lt;/span&gt;
  &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="mi"&gt;418&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"I am not joking"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;http_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;return_value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Bad request"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Not found"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="mi"&gt;418&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"I am not joking"&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;return_value&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To be honest, I was OK with it. In general, I am not a big fan of the switch-case statement in other languages as well. It usually means that architecture could be done better or that you could use concepts like polymorphism and dictionaries. &lt;/p&gt;

&lt;p&gt;That being said, there are certain situations in which a switch-case statement is useful. So Python 3.10 gonna treat it 👏👏&lt;/p&gt;

&lt;p&gt;The easiest way to use this Python feature is to compare a variable with several values. There are two new keywords match and case. The example from above then can be written down like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;http_error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Bad request"&lt;/span&gt;
        &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Not found"&lt;/span&gt;
        &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="mi"&gt;418&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"I am not joking"&lt;/span&gt;
        &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Well, I am joking"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, you know, a regular switch-case statement. The last one &lt;code&gt;case _&lt;/code&gt; is the default value – wildcard, so if the status has a value that is not &lt;code&gt;400&lt;/code&gt;, &lt;code&gt;404&lt;/code&gt;, or &lt;code&gt;418&lt;/code&gt;, it will return “Well, I am joking” as a result. This is optional, so if you don’t include it and some out-of-the-scope value appears, the behavior is a no-op. This wildcard is very powerful and can help us with more complex pattern matching, as we will see in a bit.&lt;/p&gt;

&lt;p&gt;You can also chain values if you want to do the same thing for a certain case. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ide_full_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;short_name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;match&lt;/span&gt; &lt;span class="n"&gt;short_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="s"&gt;"PyC"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"PyCharm"&lt;/span&gt;
    &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="s"&gt;"VSC"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Visual Studio Code"&lt;/span&gt;
    &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="s"&gt;"VS2017"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;"VS2019"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s"&gt;"VS2022"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Visual Studio"&lt;/span&gt;
    &lt;span class="n"&gt;case&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Not Supported"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cool, right! This is going to be the biggest change in 3.10. And I bet most of you don't know Python was not supporting switch-case statements 😝😝&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-type-union-operator"&gt;
  &lt;/a&gt;
  New Type Union Operator
&lt;/h2&gt;

&lt;p&gt;This is a new feature that will simplify the code. Every Python release comes with a set of type hints features. From our perspective, this one is the most important of such features.&lt;/p&gt;

&lt;p&gt;With the current Python version, if you want to use type hints for function that has a parameter that can receive values of different types, you had to use Union type. Something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;some_funcion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexible_parameter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Union&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;flexible_parameter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Therefore, Python 3.10 introduces new union operand – &lt;code&gt;|&lt;/code&gt;. What this operand says is that certain parameters can be either &lt;code&gt;Type 1&lt;/code&gt; either &lt;code&gt;Type 2&lt;/code&gt;. Now, the previous function can be written like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;some_funcion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;flexible_parameter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;flexible_parameter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#precise-line-numbers-for-debugging"&gt;
  &lt;/a&gt;
  Precise Line Numbers for Debugging
&lt;/h2&gt;

&lt;p&gt;Have you noticed that sometimes the debugger doesn’t show the real number of the line where the code has a mistake? It does work well most of the time, but it was not always the most reliable tool 🙄🙄&lt;/p&gt;

&lt;p&gt;If you use &lt;code&gt;sys.settrace&lt;/code&gt; and associated tools you may notice that tracing doesn’t work 100% of the time. Sometimes the line is not correct. Reliability here is not as you would expect from such a mature programming language. The problem in its essence is that the &lt;code&gt;f_lineno&lt;/code&gt; attribute of frame objects that are part of event objects should always contain the expected line number&lt;/p&gt;

&lt;p&gt;So Python 3.10, brings more precise and reliable line numbers for debugging, profiling, and coverage tools. Python 3.10 guarantees that tracing events, with the associated and correct line numbers, are generated for all lines of code executed and only for lines of code that are executed. &lt;/p&gt;

&lt;p&gt;In order to do this, Python 3.10 doesn’t rely on the current form of  &lt;code&gt;co_lnotab&lt;/code&gt; attribute of the events. This version of Python uses new method &lt;code&gt;co_lines()&lt;/code&gt;, which returns an iterator over bytecode offsets and source code lines. The change is done in a way that the &lt;code&gt;f_lineno&lt;/code&gt; attribute of frame objects will always contain the expected line number.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#and-some-other-language-changes"&gt;
  &lt;/a&gt;
  And some other language changes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;int&lt;/code&gt; type has a new method &lt;code&gt;int.bit_count()&lt;/code&gt;, returning the number of ones in the binary expansion of a given integer, also known as the population count. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The views returned by &lt;code&gt;dict.keys()&lt;/code&gt;, &lt;code&gt;dict.values()&lt;/code&gt; and &lt;code&gt;dict.items()&lt;/code&gt; now all have a mapping attribute that gives a &lt;code&gt;types.MappingProxyType&lt;/code&gt; object wrapping the original dictionary. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;zip()&lt;/code&gt; function now has an optional strict flag, used to require that all the iterables have an equal length.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Assignment expressions can now be used unparenthesized within set literals and set comprehensions, as well as in sequence indexes (but not slices).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are many other but I found these are the useful ones.&lt;/p&gt;

&lt;p&gt;So, buddies, these are the major and useful features that make Python more beautiful! For me, error messages are the best things. Happy Coding!&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>upcoming</category>
    </item>
    <item>
      <title>Class Static Initialization Blocks in JavaScript</title>
      <author>Alex Devero</author>
      <pubDate>Mon, 06 Sep 2021 05:56:14 +0000</pubDate>
      <link>https://dev.to/alexdevero/class-static-initialization-blocks-in-javascript-1d1h</link>
      <guid>https://dev.to/alexdevero/class-static-initialization-blocks-in-javascript-1d1h</guid>
      <description>&lt;p&gt;Class static initialization blocks are one feature that will be part of the ECMAScript 2022 proposal. This is one of those features you may not use as often. Yet, it can still be useful from time to time. This tutorial will help you learn about what class static initialization blocks are and how to use them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#classes-fields-and-field-initialization-in-a-brief"&gt;
  &lt;/a&gt;
  Classes, fields and field initialization in a brief
&lt;/h2&gt;

&lt;p&gt;When you create a JavaScript class, you can add public, static and private fields and methods. Which type of a property or method you choose will depend on current situation and your intent. &lt;a href="https://blog.alexdevero.com/get-started-with-javascript-classes/#public-class-fields-and-methods"&gt;Public fields and methods&lt;/a&gt; are better for some situation while &lt;a href="https://blog.alexdevero.com/get-started-with-javascript-classes/#private-class-fields-and-methods"&gt;private&lt;/a&gt; are better for another. You can initialize these fields or not.&lt;/p&gt;

&lt;p&gt;You can also define and initialize class properties inside the &lt;code&gt;constructor&lt;/code&gt; method. This is becomes especially useful when you want to create class properties based on class parameters. The &lt;code&gt;constructor&lt;/code&gt; method allows you to initialize also public as well as private fields.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a class:&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Define public field:&lt;/span&gt;
  &lt;span class="nx"&gt;isAlive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
  &lt;span class="nx"&gt;numberOfLegs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
  &lt;span class="nx"&gt;numberOfArms&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

  &lt;span class="c1"&gt;// Define private field:&lt;/span&gt;
  &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;iq&lt;/span&gt;

  &lt;span class="c1"&gt;// Define custom properties in constructor:&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;iq&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;

    &lt;span class="c1"&gt;// Initialize private field "iq":&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;iq&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;iq&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Add private method:&lt;/span&gt;
  &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;decreaseIq&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;iq&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Add public methods:&lt;/span&gt;
  &lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Hello, my name is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;watchSitcom&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Call private method "decreaseIq()":&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;decreaseIq&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;tellYourIq&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Return value of private field "iq":&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;iq&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Create instance of Person class:&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;josh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Josh&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;125&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Log "josh":&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;josh&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output:&lt;/span&gt;
&lt;span class="c1"&gt;// Person {&lt;/span&gt;
&lt;span class="c1"&gt;//   isAlive: true,&lt;/span&gt;
&lt;span class="c1"&gt;//   numberOfLegs: 2,&lt;/span&gt;
&lt;span class="c1"&gt;//   numberOfArms: 2,&lt;/span&gt;
&lt;span class="c1"&gt;//   name: 'Josh',&lt;/span&gt;
&lt;span class="c1"&gt;//   age: 31,&lt;/span&gt;
&lt;span class="c1"&gt;//   __proto__: {&lt;/span&gt;
&lt;span class="c1"&gt;//     constructor: ƒ Person(),&lt;/span&gt;
&lt;span class="c1"&gt;//     sayHello: ƒ sayHello(),&lt;/span&gt;
&lt;span class="c1"&gt;//     watchSitcom: ƒ watchSitcom(),&lt;/span&gt;
&lt;span class="c1"&gt;//     tellYourIq: ƒ tellYourIq()&lt;/span&gt;
&lt;span class="c1"&gt;//   }&lt;/span&gt;
&lt;span class="c1"&gt;// }&lt;/span&gt;

&lt;span class="c1"&gt;// Call the "sayHello()" method:&lt;/span&gt;
&lt;span class="nx"&gt;josh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// Output:&lt;/span&gt;
&lt;span class="c1"&gt;// 'Hello, my name is Josh.'&lt;/span&gt;

&lt;span class="c1"&gt;// Watch some tv show:&lt;/span&gt;
&lt;span class="nx"&gt;josh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;watchSitcom&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// Tell me your IQ:&lt;/span&gt;
&lt;span class="nx"&gt;josh&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tellYourIq&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;// Output:&lt;/span&gt;
&lt;span class="c1"&gt;// 124&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-problem-with-static-fields-hint-initialization"&gt;
  &lt;/a&gt;
  The problem with static fields (hint: initialization)
&lt;/h2&gt;

&lt;p&gt;So far, everything looks good. Here comes the problem. The &lt;code&gt;constructor&lt;/code&gt; method will not allow you to initialize static fields. This may not be a real problem if all static fields you need can be initialized when you define them. You can achieve this the usual way. You create new static class field and assign it some value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create class:&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Library&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Add and initialize static field for books:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean UX&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean Customer Development&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Four Steps to the Epiphany&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean Analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="c1"&gt;// Add second static field:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;booksToReadCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Log value of "booksToReadCount" field:&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;booksToReadCount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output:&lt;/span&gt;
&lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The question is, what if you want to initialize the static field more dynamically? Take the &lt;code&gt;Library&lt;/code&gt; class for example. At this moment, it requires manual update of both fields, &lt;code&gt;books&lt;/code&gt; and &lt;code&gt;booksToReadCount&lt;/code&gt;, to keep them in sync. This might be okay from time to time, but it can quickly become annoying chore.&lt;/p&gt;

&lt;p&gt;One could think that this can be solved with the &lt;code&gt;constructor&lt;/code&gt; method. You define a static field without initializing it, or initialize it with some placeholder value. Then, you add &lt;code&gt;constructor&lt;/code&gt; and use it to update the value of that static field. The problem is that this doesn't work. That field will remain &lt;code&gt;undefined&lt;/code&gt; or keep the placeholder value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Library&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Add and initialize static field for books:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean UX&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean Customer Development&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Four Steps to the Epiphany&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean Analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="c1"&gt;// Add static field, but don't initialize it:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;booksToReadCount&lt;/span&gt;

  &lt;span class="c1"&gt;// Try to initialize static&lt;/span&gt;
  &lt;span class="c1"&gt;// "booksToReadCount" in constructor:&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;booksToReadCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Try to log the value of "booksToReadCount" field:&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;booksToReadCount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output:&lt;/span&gt;
&lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#solution-with-external-resources"&gt;
  &lt;/a&gt;
  Solution with external resources
&lt;/h2&gt;

&lt;p&gt;One way to solve this problem is to use external resources. You can create new function outside the class that will do what you need. Then, you can assign call to that function to the static field. The value returned by the function will become the value of the static field.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create class:&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Library&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Add and initialize static field for books:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean UX&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean Customer Development&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Four Steps to the Epiphany&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean Analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="c1"&gt;// Add second static field&lt;/span&gt;
  &lt;span class="c1"&gt;// and assign it the returned value of&lt;/span&gt;
  &lt;span class="c1"&gt;// "getBooksToReadCount()" function:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;booksToReadCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getBooksToReadCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Create function to get booksToRead count:&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getBooksToReadCount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Log value of "version" field:&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;booksToReadCount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output:&lt;/span&gt;
&lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This solution will do the job. The downside is that it requires that external function. If you use this approach multiple times your code can quickly become less clear.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solution-with-static-initialization-blocks"&gt;
  &lt;/a&gt;
  Solution with static initialization blocks
&lt;/h2&gt;

&lt;p&gt;There is an alternative solution. This solution are static initialization blocks coming in ES2022. These static initialization blocks allow you to create code blocks inside the class. You can use these blocks to execute any operation you need. Let's take the &lt;code&gt;Library&lt;/code&gt; class as an example again.&lt;/p&gt;

&lt;p&gt;You define the class and define the first static field &lt;code&gt;books&lt;/code&gt; and assign it with the array of books. Next, you define the second field &lt;code&gt;booksToReadCount&lt;/code&gt;, but you don't initialize it. After this, you add the static initialization block. Inside this block, you execute any necessary operation and initialize the &lt;code&gt;booksToReadCount&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Library&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Add and initialize static field for books:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean UX&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean Customer Development&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;The Four Steps to the Epiphany&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lean Analytics&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;read&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="c1"&gt;// Define static field for count,&lt;/span&gt;
  &lt;span class="c1"&gt;// but don't initialize it:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;booksToReadCount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Add static initialization block:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Initialize the "booksToReadCount" field:&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;booksToReadCount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Log value of "version" field:&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Library&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;booksToReadCount&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// Output:&lt;/span&gt;
&lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#syntax-and-rules-for-static-initialization-blocks"&gt;
  &lt;/a&gt;
  Syntax and rules for static initialization blocks
&lt;/h2&gt;

&lt;p&gt;A few important things about static initialization blocks you should know. First, the syntax. The syntax is very simple. There is the &lt;code&gt;static&lt;/code&gt; keyword and code block defined with curly braces (&lt;code&gt;{}&lt;/code&gt;). Code you want to execute, including the initialization of static fields, goes inside the code block.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a class:&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Add some static field:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt;

  &lt;span class="c1"&gt;// Create static initialization block:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Initialize "foo"&lt;/span&gt;
    &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Fizz&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="c1"&gt;// And do something more...&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One interesting thing to mention. Every code block also creates new block scope. So, you can also use these blocks to create temporary variables you may need. These variables will exist only inside the block. Note that this applies only to block-scoped variables &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/const"&gt;const&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/let"&gt;let&lt;/a&gt;. It doesn't apply to &lt;code&gt;var&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a class:&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;MyClass&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Create static initialization block:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Create some temporary variable:&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;randomNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;

    &lt;span class="c1"&gt;// And do something...&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The second thing is that you can have as many static initialization blocks in a class as you need.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a class:&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Dragon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Add static field:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;trunkVolume&lt;/span&gt;

  &lt;span class="c1"&gt;// Create static initialization block:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Initialize "trunkVolume" field:&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trunkVolume&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="nx"&gt;_000&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Add another static field:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;diameter&lt;/span&gt;

  &lt;span class="c1"&gt;// Create static initialization block:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Initialize "diameter" field:&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;diameter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Add another static field:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;thrust&lt;/span&gt;

  &lt;span class="c1"&gt;// Create static initialization block:&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Initialize "thrust" field:&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;thrust&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;400&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Third, static blocks are executed when during the execution of initializers of static fields. Fourth and last, if you extend classes, static fields of a superclass will be executed before the static fields of its subclasses.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create superclass:&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Vehicle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Vehicle initialization block.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Create first subclass:&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Vehicle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Car initialization block.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Create second subclass:&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Plane&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Vehicle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Plane initialization block.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Output:&lt;/span&gt;
&lt;span class="c1"&gt;// 'Vehicle initialization block.'&lt;/span&gt;
&lt;span class="c1"&gt;// 'Car initialization block.'&lt;/span&gt;
&lt;span class="c1"&gt;// 'Plane initialization block.'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion-class-static-initialization-blocks-in-javascript"&gt;
  &lt;/a&gt;
  Conclusion: Class static initialization blocks in JavaScript
&lt;/h2&gt;

&lt;p&gt;If you often find yourself working with static fields you may find static initialization blocks to be a useful feature. They can help make static initialization easier. I hope that this post helped you understand what class static initialization blocks in JavaScript are and how to use them. If you want to learn more about this feature, you can take a look at the proposal available on &lt;a href="https://github.com/tc39/proposal-class-static-block"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Run Docker without Docker Desktop on macOS</title>
      <author>Dhwaneet Bhatt</author>
      <pubDate>Mon, 06 Sep 2021 05:47:08 +0000</pubDate>
      <link>https://dev.to/dhwaneetbhatt/run-docker-without-docker-desktop-on-macos-306h</link>
      <guid>https://dev.to/dhwaneetbhatt/run-docker-without-docker-desktop-on-macos-306h</guid>
      <description>&lt;p&gt;Docker Inc. &lt;a href="https://www.docker.com/blog/updating-product-subscriptions/"&gt;recently announced&lt;/a&gt; that Docker Desktop would no longer remain a free product for large organizations. It will remain free for personal and open-source projects and for organizations smaller than a certain size. Usually this is not a cause for concern as a company with revenue greater than $10 million would be able to afford Docker Desktop's $5 per user/month starter pricing. This post does in no way discourages organizations in paying and I believe that Docker Inc. has all the rights to monetize their product.&lt;/p&gt;

&lt;p&gt;With the disclaimer out of the way, let us deep dive into explaining a little around what is free, what is paid and how exactly can we continue to use "containers", the core technology, without having to pay for Docker Desktop.&lt;/p&gt;




&lt;p&gt;This digression explains terminology around Docker. Experts who know Docker can skip this part.&lt;/p&gt;

&lt;p&gt;Docker can mean a lot of things. I'll try to break down and explain each term. This is by no means a full conceptual architectural explanation of how Docker works and I would recommend exploring other resources on the web for that purpose. This digression is just meant to ease the rest of the discussion.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://en.wikipedia.org/wiki/Docker%2C_Inc."&gt;Docker Inc&lt;/a&gt; - It is a USA based company that produces some open-source and not-open source software that makes it easier to develop, test and run applications in containers.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/docker/engine"&gt;Docker Engine&lt;/a&gt; - The core technology behind Docker. It is an open source software that runs on linux as a daemon that makes it possible to run containers on top of Linux kernel. It is responsible for the container lifecycle and isolation of physical resources (compute, memory, storage) that containers can access. The engine can run on a physical or a virtual machine, but it can only run on top of a Linux kernel i.e. any OS that is flavour of Linux. This is important to understand. &lt;strong&gt;Docker engine only runs on Linux.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/docker/cli"&gt;Docker CLI&lt;/a&gt; - This is the CLI that developers usually use to interact with the docker engine. This consists both of &lt;code&gt;docker&lt;/code&gt; and &lt;code&gt;docker-compose&lt;/code&gt; commands. Again, this is open source software.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.docker.com/products/docker-desktop"&gt;Docker Desktop&lt;/a&gt; - Since Docker Engine only runs on Linux, developers who use Windows and macOS for software development cannot run the engine until they spin up a virtual machine (VM) that runs linux. That is where Docker Desktop comes in. Docker Desktop is a closed-source software that allows developers working on Windows/macOS to use container technology seamlessly on their development environment without needing to manage the complexity of operating a VM and all the nitty-gritty that comes along with it (networking, virtualization, knowledge of linux etc.). Docker Desktop is meant to be used during software development, it does not play a part in containers that run on production-like environments, where only Docker Engine is mostly involved.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Docker Desktop is not the core technology that runs containers, it only aims to make it easier to develop software on Windows/macOS that runs in containers. Thus Docker Inc. is only trying to get large companies to pay for the convenience that Docker Desktop offers when developing applications. So, I completely sympathise with the move for trying to earn revenue from a product that their software developers have worked so hard to develop. Company's other revenue comes from &lt;a href="https://hub.docker.com/"&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;The way to continue to run and build applications for containers on macOS would be run Docker Engine on a Linux VM. I discussed two approaches that I've tried on my development environment (Macbook Pro 13" 2020 Intel Chip). This list is not exhaustive and they maybe more ways to do this. This post does assume some working knowledge of Docker.&lt;/p&gt;

&lt;p&gt;Before doing this, uninstall Docker Desktop by removing &lt;code&gt;/Applications/Docker.app&lt;/code&gt;. Sometimes this is not enough and it leaves certain things so I recommend searching for "uninstall docker desktop on macos" and follow a guide for full cleanup.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#minikube"&gt;
  &lt;/a&gt;
  minikube
&lt;/h2&gt;

&lt;p&gt;So far, &lt;a href="https://minikube.sigs.k8s.io/docs/"&gt;minikube&lt;/a&gt; has emerged the easiest drop-in replacement for Docker Desktop. minikube is used to run a Kubernetes cluster on local environment. But it also runs a docker daemon that can be used to run containers. On macOS, minikube runs on a lot of virtualization technologies, but &lt;a href="https://minikube.sigs.k8s.io/docs/drivers/hyperkit/"&gt;hyperkit&lt;/a&gt; is the easiest to use.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install hyperkit and minikube&lt;/span&gt;
brew &lt;span class="nb"&gt;install &lt;/span&gt;hyperkit
brew &lt;span class="nb"&gt;install &lt;/span&gt;minikube

&lt;span class="c"&gt;# Install Docker CLI&lt;/span&gt;
brew &lt;span class="nb"&gt;install &lt;/span&gt;docker
brew &lt;span class="nb"&gt;install &lt;/span&gt;docker-compose

&lt;span class="c"&gt;# Start minikube&lt;/span&gt;
minikube start

&lt;span class="c"&gt;# Tell Docker CLI to talk to minikube's VM&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;minikube docker-env&lt;span class="si"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Save IP to a hostname&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;minikube ip&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="s2"&gt; docker.local"&lt;/span&gt; | &lt;span class="nb"&gt;sudo tee&lt;/span&gt; &lt;span class="nt"&gt;-a&lt;/span&gt; /etc/hosts &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /dev/null

&lt;span class="c"&gt;# Test&lt;/span&gt;
docker run hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#minikube-cheatsheet"&gt;
  &lt;/a&gt;
  minikube Cheatsheet
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;minikube stop&lt;/code&gt; - stop the VM and k8s cluster. This does not delete any data. Just run &lt;code&gt;minikube start&lt;/code&gt; to spin up the cluster.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;minikube delete&lt;/code&gt; - This &lt;strong&gt;deletes&lt;/strong&gt; the cluster with all the data. All mapped volumes will be lost. Know what you're doing before running this. If you just want to stop the cluster use &lt;code&gt;minikube stop&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;minikube ip&lt;/code&gt; - IP address of the VM where the cluster and docker engine run.&lt;/p&gt;

&lt;p&gt;minikube runs a k8s setup and thus runs a lot of containers that are not required if not using k8s. We can run &lt;code&gt;minikube pause&lt;/code&gt; to pause k8s related containers so they do not end up consuming system resources.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#manually-managing-the-vm"&gt;
  &lt;/a&gt;
  Manually managing the VM
&lt;/h2&gt;

&lt;p&gt;If you already use a Linux VM locally for some other purposes or want more control over the setup, then this can be a good option. For this purpose we'll use &lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt; to run the Linux VM and use &lt;a href="https://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt; to make provisioning the VM easy and codified. We will use Ubuntu 20.04 LTS as the base OS for the VM.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Install VirtualBox&lt;/span&gt;
brew &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--cask&lt;/span&gt; virtualbox
brew &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--cask&lt;/span&gt; virtualbox-extension-pack

&lt;span class="c"&gt;# Install Vagrant and the vbguest plugin to manage VirtualBox Guest Additions on the VM&lt;/span&gt;
brew &lt;span class="nb"&gt;install &lt;/span&gt;vagrant
vagrant plugin &lt;span class="nb"&gt;install &lt;/span&gt;vagrant-vbguest

&lt;span class="c"&gt;# Install Docker CLI&lt;/span&gt;
brew &lt;span class="nb"&gt;install &lt;/span&gt;docker
brew &lt;span class="nb"&gt;install &lt;/span&gt;docker-compose

&lt;span class="c"&gt;# Create a Vagrantfile and a provisioning script&lt;/span&gt;
&lt;span class="nb"&gt;mkdir &lt;/span&gt;vagrant-docker-engine
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s2"&gt;"Vagrant.configure('2') do |config|
  config.vm.box = 'ubuntu/focal64'
  config.vm.hostname = 'docker.local'
    config.vm.network 'private_network', ip: '192.168.66.4'
  config.vm.network 'forwarded_port', guest: 2375, host: 2999, id: 'dockerd'
  config.vm.provider 'virtualbox' do |vb|
    vb.name = 'ubuntu-docker'
    vb.memory = '2048'
    vb.cpus = '2'
  end
  config.vm.provision 'shell', path: 'provision.sh'

  # Configuration for Port Forwarding
  # Uncomment or add new ones here as required
  # config.vm.network 'forwarded_port', guest: 6379, host: 6379, id: 'redis'
  # config.vm.network 'forwarded_port', guest: 3306, host: 3306, id: 'mysql'
end"&lt;/span&gt; | &lt;span class="nb"&gt;tee &lt;/span&gt;Vagrantfile &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /dev/null
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s2"&gt;"# Install Docker
apt-get remove docker docker-engine docker.io containerd runc
apt-get update
apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release net-tools software-properties-common
curl -fsSL &amp;lt;https://download.docker.com/linux/ubuntu/gpg&amp;gt; | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] &amp;lt;https://download.docker.com/linux/ubuntu&amp;gt; focal stable' | tee /etc/apt/sources.list.d/docker.list &amp;gt; /dev/null
apt-get update
apt-get install -y docker-ce docker-ce-cli containerd.io

# Configure Docker to listen on a TCP socket
mkdir /etc/systemd/system/docker.service.d
echo &lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;
'[Service]
ExecStart=
ExecStart=/usr/bin/dockerd --containerd=/run/containerd/containerd.sock' | tee /etc/systemd/system/docker.service.d/docker.conf &amp;gt; /dev/null
echo &lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;
'{
  &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;hosts&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: [&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;fd://&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;tcp://0.0.0.0:2375&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;]
}' | tee /etc/docker/daemon.json &amp;gt; /dev/null
systemctl daemon-reload
systemctl restart docker.service"&lt;/span&gt; | &lt;span class="nb"&gt;tee &lt;/span&gt;provision.sh &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /dev/null
&lt;span class="nb"&gt;chmod&lt;/span&gt; +x provision.sh

&lt;span class="c"&gt;# Spin up the machine&lt;/span&gt;
vagrant up

&lt;span class="c"&gt;# Save IP to a hostname&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"192.168.66.4 docker.local"&lt;/span&gt; | &lt;span class="nb"&gt;sudo tee&lt;/span&gt; &lt;span class="nt"&gt;-a&lt;/span&gt; /etc/hosts &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; /dev/null

&lt;span class="c"&gt;# Tell Docker CLI to talk to the VM&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;DOCKER_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;http://docker.local:2375

&lt;span class="c"&gt;# Optionally add it to your shell so don't need to repeat everytime&lt;/span&gt;
&lt;span class="c"&gt;# echo "export DOCKER_HOST=http://docker.local:2375" | tee -a ~/.zshrc &amp;gt; /dev/null&lt;/span&gt;

&lt;span class="c"&gt;# Test&lt;/span&gt;
docker run hello-world
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#vagrant-cheatsheet"&gt;
  &lt;/a&gt;
  Vagrant Cheatsheet
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;vagrant suspend&lt;/code&gt; - stop the VM for saving system resources. This does not delete any data. Just run &lt;code&gt;vagrant up&lt;/code&gt; to spin up the VM.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vagrant reload&lt;/code&gt; - for reloading the VM for any changes made to the config e.g. adding a new port mapping.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;vagrant delete&lt;/code&gt; - This &lt;strong&gt;deletes&lt;/strong&gt; the VM with all the data. All mapped volumes will be lost. Know what you're doing before running this. If you just want to stop the VM use &lt;code&gt;vagrant suspend&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For every port that we want to natively access on macOS host, we need to modify the &lt;code&gt;Vagrantfile&lt;/code&gt; to add port forwarding. Use &lt;code&gt;vagrant reload&lt;/code&gt; after changing the file. Some examples have already been provided in the &lt;code&gt;Vagrantfile&lt;/code&gt; for reference.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#caveats"&gt;
  &lt;/a&gt;
  Caveats
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#accessing-ports"&gt;
  &lt;/a&gt;
  Accessing Ports
&lt;/h3&gt;

&lt;p&gt;Docker Desktop makes it very convenient to access services/apps running on containers by making everything available on localhost. How they exactly do it is unknown, although it must involve some port mapping via hyperkit, but we must do this manually.&lt;/p&gt;

&lt;p&gt;Both in the minikube and virtualbox guides above, we make the IP address of the VM available under &lt;code&gt;docker.local&lt;/code&gt; hostname so to access any services we must use that hostname instead of using localhost.&lt;/p&gt;

&lt;p&gt;Using Vagrant we can actually do double port mapping (between container ↔  linux and linux ↔  host) to access stuff on localhost. That can be done my adding &lt;code&gt;forwarded_port&lt;/code&gt; entries in &lt;code&gt;Vagrantfile&lt;/code&gt; as mentioned above.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#volumes-and-data-persistence"&gt;
  &lt;/a&gt;
  Volumes and Data Persistence
&lt;/h3&gt;

&lt;p&gt;Since the Docker Engine is running on the VM, any volumes created or mapped will be present on the Linux VM, not on the macOS (host). &lt;strong&gt;This is very important to remember.&lt;/strong&gt; This means that by destroying the VM we will lose access to the data in the volumes. Volumes are generally used for persistent databases like MySQL, PostgreSQL etc.&lt;/p&gt;

&lt;p&gt;There are ways in which &lt;code&gt;vagrant&lt;/code&gt; allows you to map folders to the VM, that would again be 3 layer-mapping like ports mentioned above, but becomes very complicated because or permission issues in the way Docker works. I tried a lot and could not make it work for MySQL. I could if I put in some extra hours, but the point is that it is cumbersome.&lt;/p&gt;

&lt;p&gt;My advice would be to backup volumes to a location on the VM and pull that backup to the host either via &lt;code&gt;scp&lt;/code&gt; if you're using &lt;code&gt;minikube&lt;/code&gt; or &lt;code&gt;vagrant&lt;/code&gt; has a default drive mapped at &lt;code&gt;/vagrant&lt;/code&gt; which can be used for backup. Thankfully, &lt;a href="https://docs.docker.com/storage/volumes/#backup-restore-or-migrate-data-volumes"&gt;backing up volumes is easy&lt;/a&gt; and it can be put in a cronjob on the VM/host if needed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h3&gt;

&lt;p&gt;If you're using &lt;code&gt;minikube&lt;/code&gt;, performance more or less remains the same because same underlying virtualization technology (hyperkit) is being employed. But for some strange reasons, I saw a huge jump in performance in read/write performance on MySQL when using &lt;code&gt;vagrant + virtualbox&lt;/code&gt; combination. I have not delved into the reasons of it, but that has made to stick to it. I am yet to try &lt;code&gt;minikube + virtualbox&lt;/code&gt; combination.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;minikube&lt;/code&gt; actually runs a kubernetes cluster on the VM so if that is not needed, doing a &lt;code&gt;minikube pause&lt;/code&gt; will make sure k8s cluster related containers are suspended so they do not consume any system resources.&lt;/p&gt;

</description>
      <category>docker</category>
      <category>macos</category>
    </item>
  </channel>
</rss>
