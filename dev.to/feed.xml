<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Creating an NFT on Solana with Metaplex Candy Machine. </title>
      <author>Devind Dev</author>
      <pubDate>Sun, 31 Oct 2021 14:16:53 +0000</pubDate>
      <link>https://dev.to/devindxdeveloper/creating-an-nft-on-solana-with-metaplex-candy-machine-4agp</link>
      <guid>https://dev.to/devindxdeveloper/creating-an-nft-on-solana-with-metaplex-candy-machine-4agp</guid>
      <description>&lt;h2&gt;
  &lt;a href="#guide-overiew"&gt;
  &lt;/a&gt;
  Guide Overiew
&lt;/h2&gt;

&lt;p&gt;After what felt like walking through a mine field trying to figure out how to create my own NFT on Solana with the current guides, I decided to put together a guide myself in a very beginner friendly fashion.&lt;/p&gt;

&lt;p&gt;I won't be taking a deeper dive into the specifics of how everything works, but rather help people with zero knowledge of rust obtain a general understanding on how to create their very own NFT on Solana with the help of Metaplex candy machine and a web starter kit.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I used &lt;strong&gt;Ubuntu 21.10 - Wayland&lt;/strong&gt; for it. Some things may vary depending on the operating system you are running.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-metaplex-candy-machine"&gt;
  &lt;/a&gt;
  What is a Metaplex Candy Machine?
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Metaplex&lt;/code&gt; is a command line tool that interacts with the candy-machine program. In this guide, we will use it to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;em&gt;Upload&lt;/em&gt; your images along with their metadata to &lt;em&gt;arweave&lt;/em&gt;, then register them on the Solana blockchain.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Verify&lt;/em&gt; that the state of your candy machine is valid and complete.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Mint&lt;/em&gt; individual tokens.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code&gt;Candy Machine&lt;/code&gt; is a system that manages fair mints.&lt;br&gt;
• The minting process starts and finishes at the same time for everyone.&lt;br&gt;
• It won't accept your funds if there are no more NFTs to sell.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://nodejs.org/en/"&gt;NodeJS&lt;/a&gt; &lt;em&gt;(version 14.17.6)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.solana.com/cli/install-solana-cli-tools"&gt;SolanaCLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/metaplex-foundation/metaplex.git"&gt;Metaplex CLI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://phantom.app/"&gt;Phantom Wallet&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you have a different version of Node installed on your system, you can use &lt;a href="https://github.com/nvm-sh/nvm"&gt;nvm&lt;/a&gt; which allows you to quickly install and use different versions of node via the command line.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#installing-the-solanacli"&gt;
  &lt;/a&gt;
  Installing The SolanaCLI
&lt;/h3&gt;

&lt;p&gt;Solana already has really well made guides on installing and using the Solana command line.&lt;br&gt;
• &lt;a href="https://docs.solana.com/cli/install-solana-cli-tools"&gt;Install Solana Command Line Tools&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#using-devnet"&gt;
  &lt;/a&gt;
  Using Devnet
&lt;/h4&gt;

&lt;p&gt;Devnet is really useful for developers to test out their programs and applications.&lt;/p&gt;

&lt;p&gt;You can set your default Solana url to devnet using:&lt;br&gt;
&lt;code&gt;$ solana config set --url https://api.devnet.solana.com&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, let's create a devnet wallet:&lt;br&gt;
&lt;code&gt;$ solana-keygen new --outfile ~/.config/solana/devnet.json&lt;/code&gt;&lt;br&gt;
Remember to store your seed phrase somewhere safe.&lt;/p&gt;

&lt;p&gt;I highly recommend making devnet your default &lt;em&gt;keypair&lt;/em&gt;&lt;br&gt;
&lt;code&gt;$ solana config set --keypair ~/.config/solana/devnet.json&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#funding-the-devnet-wallet"&gt;
  &lt;/a&gt;
  Funding The Devnet Wallet
&lt;/h4&gt;

&lt;p&gt;Firstly, let’s make sure that we’re on devnet by checking the configuration.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ solana config get
//Output:
Config File: /Users/dev/.config/solana/cli/config.yml
RPC URL: https://api.devnet.solana.com
WebSocket URL: wss://api.devnet.solana.com/ (computed)
Keypair Path: /Users/dev/.config/solana/devnet.json
Commitment: confirmed
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let’s fund that wallet:&lt;br&gt;
Firstly, We check the balance of our current wallet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ solana balance 
//Output:
0 SOL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we airdrop the amount of SOL to our wallet. Remember, the amount is capped to 5 SOL.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ solana airdrop 4
//Output
Requesting airdrop of 4

Signature: Transaction Signature

4 SOL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, Let’s check our balance to confirm the airdrop was successful.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ solana balance
//Output:
4 SOL //This can vary depending on the balance you initially had.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;In case you’re confused by any of the above steps, you can check the manuals to get a better understanding by running:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ solana help config
$ solana help balance
$ solana help airdrop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#configuring-phantom-wallet"&gt;
  &lt;/a&gt;
  Configuring Phantom Wallet
&lt;/h4&gt;

&lt;p&gt;After setting up your phantom wallet, we can link our newly created devnet wallet above to phantom.&lt;br&gt;
To do so, first we need to open its settings, click on &lt;code&gt;Change Network&lt;/code&gt; and select &lt;code&gt;Devnet&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, we need to obtain the devnet wallet private key. To obtain that, open your terminal and &lt;code&gt;cat&lt;/code&gt; to view the contents of the &lt;code&gt;keypair.json&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cat .config/solana/devnet.json
//Output:
[12,22,.....]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now copy the output you received and open phantom wallet. Click on the top left navigation menu and click on &lt;code&gt;Add/Connect Wallet&lt;/code&gt; and then click on &lt;code&gt;Import Private Key&lt;/code&gt; and give it a suitable name and paste the contents we copied before in the Private Key field.&lt;/p&gt;

&lt;p&gt;You should be able to see 4 SOL in your wallet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#running-candy-machine-cli"&gt;
  &lt;/a&gt;
  Running Candy Machine CLI
&lt;/h3&gt;

&lt;p&gt;Please ensure that you have &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;yarn&lt;/code&gt; installed before proceeding.&lt;/p&gt;

&lt;p&gt;Also install &lt;code&gt;ts-node&lt;/code&gt; by running:&lt;br&gt;
&lt;code&gt;$ npm install -g ts-node&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, let’s clone the metaplex project into the location of your choice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git clone https://github.com/metaplex-foundation/metaplex.git
$ cd metaplex/js
$ yarn install &amp;amp;&amp;amp; yarn bootstrap &amp;amp;&amp;amp; yarn build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To run the command line utility,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts help
Usage: candy-machine-cli [options] [command]

Options:
  -V, --version                          output the version number
  -h, --help                             display help for command

Commands:
  upload [options] &amp;lt;directory&amp;gt;
  verify [options]
  verify_price [options]
  create_candy_machine [options]
  update_candy_machine [options]
  mint_one_token [options]
  sign [options]
  sign_candy_machine_metadata [options]
  help [command]                         display help for command
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#organizing-amp-uploading-your-assets"&gt;
  &lt;/a&gt;
  Organizing &amp;amp; Uploading Your Assets
&lt;/h3&gt;

&lt;p&gt;For this guide, we will be using pre-made assets which you can download by &lt;a href="https://drive.google.com/drive/folders/1DoV44eED8PrgmMeAL-i-ceJ3NAx1ND5L?usp=sharing"&gt;clicking here.&lt;/a&gt; courtesy of &lt;a href="https://github.com/kevinfaveri/solana-candy-factory"&gt;solana-candy-factory&lt;/a&gt;&lt;br&gt;
Place this &lt;code&gt;assets&lt;/code&gt; folder in a suitable location.&lt;br&gt;
Here is how you should organize your NFT files to upload:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ls assets | sort -n
0.json
0.png
1.json
1.png
2.json
2.png
3.json
3.png
....
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can notice that these files come in numerical pairs, that is &lt;code&gt;1.png&lt;/code&gt; and &lt;code&gt;1.json&lt;/code&gt; are the two halves of the NFT. The &lt;code&gt;png&lt;/code&gt; file is the art work and the &lt;code&gt;json&lt;/code&gt; file contains the metadata.&lt;/p&gt;

&lt;p&gt;The directory name &lt;code&gt;assets&lt;/code&gt; does not matter. You can go with anything you like.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#validating-your-assets"&gt;
  &lt;/a&gt;
  Validating Your Assets
&lt;/h4&gt;

&lt;p&gt;This may feel tedious but it's just as important. Checkout the the manual on carrying this out at&lt;br&gt;
&lt;a href="https://docs.metaplex.com/nft-standard"&gt;https://docs.metaplex.com/nft-standard&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#uploading-your-project-assets"&gt;
  &lt;/a&gt;
  Uploading Your Project Assets
&lt;/h3&gt;

&lt;p&gt;Now that we have the funds, assets all organized and vaidated, we can proceed with the fun stuff!&lt;/p&gt;

&lt;p&gt;We will proceed with uploading our assets with the CLI. Remember, our assets are located at &lt;code&gt;metaplex\js\packages\cli\example-assets&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts upload assets --env devnet --keypair ~/.config/solana/devnet.json

//Output
Processing file: 0
Processing file: 1
Processing file: 2
Processing file: 3
Done
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By uploading, it sends the files to Arweave and also registers those files with your candy machine. Both Arweave and Solana are initialized after a successful run.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#validating-your-candy-machine"&gt;
  &lt;/a&gt;
  Validating Your Candy Machine
&lt;/h4&gt;

&lt;p&gt;You can confirm the health and status of your on-chain assets using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts verify --env devnet --keypair ~/.config/solana/devnet.json
//Output:
Looking at key  0
Name {redacted-name} 0 with https://arweave.net/{redacted-tx-id} checked out
Looking at key  1
Name {redacted-name} 1 with https://arweave.net/{redacted-tx-id} checked out
Looking at key  2
Name {redacted-name} 2 with https://arweave.net/{redacted-tx-id} checked out
Looking at key  3
Name {redacted-name} 3 with https://arweave.net/{redacted-tx-id} checked out
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#starting-your-candy-machine"&gt;
  &lt;/a&gt;
  Starting Your Candy Machine
&lt;/h4&gt;

&lt;p&gt;After verifying that our assets are good to go, we can finally start the candy machine.&lt;br&gt;
&lt;code&gt;$ ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts create_candy_machine --env devnet --keypair ~/.config/solana/devnet.json&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#updating-your-candy-machine"&gt;
  &lt;/a&gt;
  Updating Your Candy Machine
&lt;/h4&gt;

&lt;p&gt;We can modify our candy machine details to include a start date and/or price etc.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts update_candy_machine --env devnet --keypair ~/.config/solana/devnet.json --price 1 --date "29 Oct 2021 00:12:00 GMT"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#minting-our-nft"&gt;
  &lt;/a&gt;
  Minting Our NFT
&lt;/h2&gt;

&lt;p&gt;To mint our NFT, we can use &lt;code&gt;mint_one_token&lt;/code&gt; like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ts-node metaplex/js/packages/cli/src/candy-machine-cli.ts mint_one_token --env devnet --keypair ~/.config/solana/devnet.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If all goes well, you can now open your phantom wallet, open the collectibles page (It's beside the $ symbol on the bottom) and voila! Your newly minted NFT will be there!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-web-starter-kit"&gt;
  &lt;/a&gt;
  Setting Up The Web Starter Kit
&lt;/h2&gt;

&lt;p&gt;Now that we've successfully minted an NFT into our wallet, let's make a web application to carry out the mint instead! &lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; This project is very new and could cause some issues, if it does then please report it on github.&lt;/p&gt;

&lt;p&gt;The goal of the project is for you to be able to configure it and customize it to your liking.&lt;/p&gt;

&lt;p&gt;Fork the project and then clone it to your desired location.&lt;br&gt;
Link: &lt;a href="https://github.com/exiled-apes/candy-machine-mint"&gt;https://github.com/exiled-apes/candy-machine-mint&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we need to build the project,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd candy-machine-mint
yarn install
yarn build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is where things get a little bit complicated. When we uploaded our NFTs, a cache file was created in the &lt;strong&gt;same&lt;/strong&gt; directory as our assets directory. However, this &lt;code&gt;.cache&lt;/code&gt; folder is hidden! If you're on ubuntu, use &lt;code&gt;ctrl+h&lt;/code&gt; to display hidden files.&lt;/p&gt;

&lt;p&gt;Once you have discovered that folder, open it and you'll find &lt;code&gt;devnet-temp&lt;/code&gt; file. Open it in your IDE and you'll see the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"program"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"uuid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Ch3ps8"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"config"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Ch3ps8QDLUEa2C1VfbjVCGny86kU7fU2mMUU6r2VAY3c"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"items"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"0"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/_z2OeYH3Wom1y-MyRExVzejA2f1KQls9yV0hx8HeF6c"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/L1XD2LZmpLDYX8CQZbhlLpLUpq9zwa5UdAfnL1FnHVM"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"2"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/1Mf8jqdXDkqJXK-dis7Lo5mTWPcmY2XV4sBoTdrkwVY"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"3"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/g3FY_hre1WRzq2U7Yo7qy0bw6ko5lcjoOfnHuEsokDs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"4"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/osvMsQGCbr4sQ6d_gsh67Hz59JNesngMicRlD4kMPzs"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"link"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://arweave.net/bKwtXFt05BMIw5tMuqi6Q9U0VOtIfIJH9xCRzvqYZlY"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"onChain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"env"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"devnet"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cacheName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"temp"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"authority"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"9xJwcnBLEuH9uuM6dJ939oHpjGFwHUroVJyCherdHxGD"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"candyMachineAddress"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"3WmzqKPPhFrenFs9md7ZoSi96aWUeKtLFu18mtjPBht5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"startDate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1632615120&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're going to need all this data when we run our web application to mint.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configuring-candymachinemint"&gt;
  &lt;/a&gt;
  Configuring Candy-Machine-Mint
&lt;/h3&gt;

&lt;p&gt;Open up the candy-machine-mint folder, where you will find a file called &lt;code&gt;.env.example&lt;/code&gt; &lt;br&gt;
(The file is usually hidden, use &lt;code&gt;ctrl+h&lt;/code&gt; to display hidden files)&lt;br&gt;
Rename it to &lt;code&gt;.env&lt;/code&gt; and then open it to edit the following details:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_CANDY_MACHINE_CONFIG=__PLACEHOLDER__
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the &lt;code&gt;program.config&lt;/code&gt; key from our &lt;code&gt;.cache/devnet-temp&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_CANDY_MACHINE_ID=__PLACEHOLDER__
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the &lt;code&gt;candyMachineAddress&lt;/code&gt; from our &lt;code&gt;.cache/devnet-temp&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_TREASURY_ADDRESS=__PLACEHOLDER__
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This the Solana address that receives the funds gathered during the minting process. You can set this to your devnet wallet address.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_CANDY_START_DATE=__PLACEHOLDER__
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the &lt;code&gt;startDate&lt;/code&gt; key from our &lt;code&gt;.cache/devnet-temp&lt;/code&gt; file. &lt;br&gt;
Note: If you cannot find it, use &lt;code&gt;update_candy_machine&lt;/code&gt; as mentioned above as you may have missed out on mentioning the date.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_SOLANA_NETWORK=devnet
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This identifies the Solana network you want to connect to. Options are devnet, testnet, and mainnet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;REACT_APP_SOLANA_RPC_HOST=https://explorer-api.devnet.solana.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This identifies the RPC server your web app will access the Solana network through.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#starting-the-web-application"&gt;
  &lt;/a&gt;
  Starting The Web Application
&lt;/h3&gt;

&lt;p&gt;Open your terminal and navigate to the &lt;code&gt;candy-machine-mint&lt;/code&gt; directory and start the react app by using &lt;code&gt;yarn start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Once you see &lt;em&gt;Compiled Successfully&lt;/em&gt; in your terminal, Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to view it in the browser.&lt;/p&gt;

&lt;p&gt;You can now proceed with connecting your wallet, and clicking on the &lt;strong&gt;mint&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;After clicking on the &lt;strong&gt;mint&lt;/strong&gt; button, you can check the collectibles page on your phantom wallet and you'll see your newly minted NFT!&lt;/p&gt;

&lt;p&gt;That’s all I will be covering in this guide. If you encounter any issues, comment down below and I’ll try to help!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-resources"&gt;
  &lt;/a&gt;
  Other Resources
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://hackmd.io/@levicook/HJcDneEWF"&gt;https://hackmd.io/@levicook/HJcDneEWF&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.metaplex.com/"&gt;https://docs.metaplex.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Follow &lt;a href="https://twitter.com/aeyakovenko?s=21"&gt;Anatoly&lt;/a&gt; and &lt;a href="https://twitter.com/rajgokal?s=21"&gt;Raj Gokal&lt;/a&gt; for good vibes.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>blockchain</category>
      <category>nft</category>
      <category>solana</category>
      <category>beginners</category>
    </item>
    <item>
      <title>🚄 ScrollTriggering Through a Tube GSAP - ScrollTrigger Demo</title>
      <author>Jayant Goel</author>
      <pubDate>Sun, 31 Oct 2021 14:13:47 +0000</pubDate>
      <link>https://dev.to/jayantgoel001/scrolltriggering-through-a-tube-gsap-scrolltrigger-demo-59c0</link>
      <guid>https://dev.to/jayantgoel001/scrolltriggering-through-a-tube-gsap-scrolltrigger-demo-59c0</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/motionharvest/embed/WNQYJyM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>Dominos with Physijs and ScrollTrigger</title>
      <author>Jayant Goel</author>
      <pubDate>Sun, 31 Oct 2021 14:10:40 +0000</pubDate>
      <link>https://dev.to/jayantgoel001/dominos-with-physijs-and-scrolltrigger-3n7a</link>
      <guid>https://dev.to/jayantgoel001/dominos-with-physijs-and-scrolltrigger-3n7a</guid>
      <description>&lt;p&gt;Dominos wrapped with Physijs and a  ball controlled with GSAP ScrollTrigger&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/motionharvest/embed/KKdrezJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
    </item>
    <item>
      <title>HOW TO LEARN TO CODE AS A BEGINNER</title>
      <author>webcodespace</author>
      <pubDate>Sun, 31 Oct 2021 13:57:07 +0000</pubDate>
      <link>https://dev.to/webcodespace/how-to-learn-to-code-as-a-beginner-j28</link>
      <guid>https://dev.to/webcodespace/how-to-learn-to-code-as-a-beginner-j28</guid>
      <description>&lt;p&gt;So you want to learn a new technical skill, and you've heard a lot about programming and you've decided this is the new skill you want to learn. &lt;/p&gt;

&lt;p&gt;You keep wondering how you are going to acquire this new skill of programming and as a result you start googling a lot of things about programming. &lt;/p&gt;

&lt;p&gt;The only problem is that, the internet is full with a lot of information about what you should and shouldn't do. &lt;/p&gt;

&lt;p&gt;You will have a lot of people presenting you with a lot of technology to learn and by the end of the day, you're going to get confused. &lt;/p&gt;

&lt;p&gt;In this post, I'm going to be talking about four steps you can take if you want to learn how to code. &lt;/p&gt;

&lt;p&gt;These steps are:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-set-a-goal"&gt;
  &lt;/a&gt;
  1. Set a goal
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EcOQkFSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jf8vp54yrk4ymdwevwia.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EcOQkFSi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jf8vp54yrk4ymdwevwia.jpg" alt="how to learn programming" width="880" height="517"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is really important. Not just in programming but everything else. What do you want to achieve? What do you want to be able to build? Which area of programming do you want to go into? You need to have answers to these questions. Without a set goal, you're going to spend more time trying to learn how to code and nothing will ever really satisfy you&lt;/p&gt;

&lt;p&gt;This step can actually take you quite some time, but it is definitely worth it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-choose-a-programming-language"&gt;
  &lt;/a&gt;
  2. Choose a programming language:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j9EMLMXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvsf9lflw7rcffpsctno.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j9EMLMXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvsf9lflw7rcffpsctno.jpg" alt="learn to code" width="880" height="473"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you've completed the first step, you'll be ready to &lt;a href="https://www.webcodespace.com/best-programming-languages-for-beginners"&gt;choose your first programming language&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Choosing your first programming language can sometimes be a hassle for a lot of beginners. &lt;/p&gt;

&lt;p&gt;There are a lot of amazing options out there and sometimes you just wish you can learn them all, all at once. &lt;/p&gt;

&lt;p&gt;Well, before picking up a new programming language, you need to consider the following:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-the-popularity-of-that-language"&gt;
  &lt;/a&gt;
  a. The popularity of that language
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dTOy0AJp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhgskcv5521b43lkc4ms.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dTOy0AJp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fhgskcv5521b43lkc4ms.jpg" alt="how to choose a programming language" width="880" height="622"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reason why this is so important is because you need to a language that is already used by a lot of programmers. &lt;/p&gt;

&lt;p&gt;If there are a lot of programmers using this particular language, it will be easier to find tutorials or code examples to learn from. &lt;/p&gt;

&lt;p&gt;As a beginner, it wouldn't be very nice to start switching between different programming languages in order to learn new concepts. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#b-the-job-market"&gt;
  &lt;/a&gt;
  b. The job market
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f8aoQfq1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i7g36ycz5ouibx86c3j6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f8aoQfq1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i7g36ycz5ouibx86c3j6.jpg" alt="beginner programmer" width="880" height="530"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some people actually go into programming because they believe they can find a promising job. &lt;/p&gt;

&lt;p&gt;If you are one of those people, then it will be really important to check out the job opportunities available to you both locally and remotely. &lt;/p&gt;

&lt;p&gt;If you are learning how to program because of job opportunities and there are a lot of javascript jobs available around you, it wouldn't really be advisable to learn something else like java or ruby.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#c-your-interest"&gt;
  &lt;/a&gt;
  c. Your interest
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R69T82x0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iob42b4p4y9u0sm3nit9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R69T82x0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iob42b4p4y9u0sm3nit9.jpg" alt="learn code" width="880" height="586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is all about what really excites you about programming. &lt;/p&gt;

&lt;p&gt;Do you love to play and build games? You can become a game developer. Do you think you will enjoy coding out web applications? You can consider web development.&lt;/p&gt;

&lt;p&gt;Doing the things that really excite you, can really help you learn faster. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#d-learning-curve"&gt;
  &lt;/a&gt;
  d. Learning curve
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QGg-g3ln--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcp3vccdq3dewnxgaq2i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QGg-g3ln--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zcp3vccdq3dewnxgaq2i.jpg" alt="coding tutorial" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose something easy, you're just starting out. &lt;/p&gt;

&lt;p&gt;Having a good understanding of the basics of programming can really help you to become a very good programmer.&lt;/p&gt;

&lt;p&gt;The best programmers know their basics very well. &lt;/p&gt;

&lt;p&gt;If you choose an easy language, it will be easier for you to learn those basic programming concepts. &lt;/p&gt;

&lt;p&gt;It wouldn't be very nice that while you are trying to learn those new concepts, you also struggle to understand the syntax of a new programming language.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-look-for-a-course"&gt;
  &lt;/a&gt;
  3. Look for a course:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yX6bjEwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xb2uahif0jiafmj4e7qi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yX6bjEwl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xb2uahif0jiafmj4e7qi.jpg" alt="programmer guide" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These days there are a lot of resources online to help you learn code. There are both free and paid ones. &lt;/p&gt;

&lt;p&gt;You can go through YouTube and find cool videos that can help you learn or you can also buy a course on udemy. It's totally up to you. &lt;/p&gt;

&lt;p&gt;You need to find content that you can easily understand. If you come across anything you don't understand, you can google them.&lt;/p&gt;

&lt;p&gt;However, I would advise that you find a course that has a good structure and gradually follow it step by step.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-practice"&gt;
  &lt;/a&gt;
  4. Practice
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iwv1bo-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yln6a00nao85a4gvo9i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iwv1bo-_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2yln6a00nao85a4gvo9i.jpg" alt="webcodespace" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Programming is a skill, and just like every other skill, you need to practice in order to become proficient. &lt;/p&gt;

&lt;p&gt;Once you are done with your courses and you have a good understanding of the basics, you can move on to practicing and building out projects. &lt;/p&gt;

&lt;p&gt;Start building out your dream projects. This is where the real fun begins. This is really important because once you successfully complete one project, it will prompt you to build another. And by the time you successfully complete a lot of projects, your skill and experience will develop. &lt;/p&gt;

&lt;p&gt;Learning how to code still remains one of the most valuable skill anyone can learn. &lt;/p&gt;

&lt;p&gt;Be patient with the learning process and soon you'll begin to notice progress. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Happy coding!!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>tutorial</category>
      <category>python</category>
    </item>
    <item>
      <title>Hawk Open Source Project</title>
      <author>Paulo Medeiros</author>
      <pubDate>Sun, 31 Oct 2021 13:25:51 +0000</pubDate>
      <link>https://dev.to/medpaf/hawk-open-source-project-4okk</link>
      <guid>https://dev.to/medpaf/hawk-open-source-project-4okk</guid>
      <description>&lt;p&gt;Hawk is a network and pentest utility that I developed so that I could perform different kinds of task using the same suite, instead of jumping from one tool to another.&lt;br&gt;
Currently, this script can perform a good variety of tasks such as: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ifconfig, &lt;/li&gt;
&lt;li&gt;ping, &lt;/li&gt;
&lt;li&gt;traceroute, &lt;/li&gt;
&lt;li&gt;port scans (including SYN, TCP, UDP, ACK, comprehensive scan), 
host discovery (scan for up devices on a local network), &lt;/li&gt;
&lt;li&gt;MAC address detection (get MAC address of a host IP on a local network), &lt;/li&gt;
&lt;li&gt;banner grabbing, &lt;/li&gt;
&lt;li&gt;DNS checks (with geolocation information), &lt;/li&gt;
&lt;li&gt;WHOIS, &lt;/li&gt;
&lt;li&gt;subdomain enumeration, &lt;/li&gt;
&lt;li&gt;vulnerability reconnaissance, - &lt;/li&gt;
&lt;li&gt;packet sniffing, &lt;/li&gt;
&lt;li&gt;MAC spoofing, &lt;/li&gt;
&lt;li&gt;IP spoofing, &lt;/li&gt;
&lt;li&gt;SYN flooding, &lt;/li&gt;
&lt;li&gt;deauth attack, &lt;/li&gt;
&lt;li&gt;brute-force attack (beta).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Other features are still being implemented. Future implementations may include WAF detection, DNS enumeration, traffic analysis, XSS vulnerability scanner, ARP cache poisoning, DNS cache poisoning, MAC flooding, ping of death, network disassociation attack (not deauth attack), OSINT, exploits, some automated tasks and others.&lt;br&gt;
If you want to become a contributor, make a pull request or issue.&lt;br&gt;
Waiting for your feedback. Kudos&lt;/p&gt;

&lt;p&gt;Link to the repository: &lt;br&gt;
&lt;a href="https://github.com/medpaf/hawk"&gt;https://github.com/medpaf/hawk&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>showdev</category>
      <category>github</category>
      <category>security</category>
    </item>
    <item>
      <title>What are the things that scare you as a Developer?</title>
      <author>Rammina</author>
      <pubDate>Sun, 31 Oct 2021 12:47:18 +0000</pubDate>
      <link>https://dev.to/rammina/what-are-the-things-that-scare-you-as-a-developer-3gkd</link>
      <guid>https://dev.to/rammina/what-are-the-things-that-scare-you-as-a-developer-3gkd</guid>
      <description>&lt;p&gt;Happy Halloween, everyone!&lt;/p&gt;

&lt;p&gt;I think the question fits the theme, so I'd like to ask everyone: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are your fears as a developer?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here are the things I'm scared of (reasonable or not aside):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;not being able to find my next freelance client.&lt;/li&gt;
&lt;li&gt;production bugs.&lt;/li&gt;
&lt;li&gt;performance anxiety when showing interviewers and clients my work output.&lt;/li&gt;
&lt;li&gt;Imposter Syndrome (fear of being a fake or being too dumb)&lt;/li&gt;
&lt;li&gt;&lt;p&gt;that my Imposter Syndrome isn't even real, and that I actually suck.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;running into a bug that has no StackOverflow, Github issues, and/or online solutions (which means I need to figure it out on my own).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;posting a question online (especially on SO) where others might judge me.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;the feeling of I'm not improving enough (lack of visible progress).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Almost forgot to add:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;not understanding what I'm reading &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'd like to know what you all are afraid of as fellow developers!    &lt;/p&gt;

</description>
      <category>discuss</category>
      <category>beginners</category>
      <category>programming</category>
      <category>career</category>
    </item>
    <item>
      <title>31 single DIV illustration — the DIVtober collection </title>
      <author>Temani Afif</author>
      <pubDate>Sun, 31 Oct 2021 12:21:42 +0000</pubDate>
      <link>https://dev.to/afif/31-single-div-illustration-the-divtober-collection-aik</link>
      <guid>https://dev.to/afif/31-single-div-illustration-the-divtober-collection-aik</guid>
      <description>&lt;p&gt;After &lt;a href="https://dev.to/afif/rate-my-first-css-drawing-51m5"&gt;my first CSS drawing&lt;/a&gt; here I am with more CSS art. This time I spent 31 days with the CSS master &lt;a href="https://twitter.com/lynnandtonic"&gt;Lynn Fisher&lt;/a&gt; in order to acquire some ancestral powers around the single DIV.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/109epNnxnLTMha/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/109epNnxnLTMha/giphy-downsized.gif" alt="san goku" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The challenge was to follow a prompt and create a CSS illustration each day during the whole month of October. Say hello to &lt;strong&gt;#divtober&lt;/strong&gt;&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VtPMmW31--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FAYwc-VVQAgNCNo.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--y5hMq5Se--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1429641617850339333/mow6F24g_normal.jpg" alt="Lynn Fisher profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Lynn Fisher
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @lynnandtonic
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      October is already going to be busy busy, but let’s do this! 😅&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/divtober"&gt;#divtober&lt;/a&gt; 2021: &lt;a href="https://t.co/LjXN92wxoZ"&gt;a.singlediv.com/divtober2021/&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:52 PM - 28 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1442895061000155136" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1442895061000155136" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1442895061000155136" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;PS: click on &lt;strong&gt;rerun&lt;/strong&gt; at the bottom right to run the pen again. Not all of the demos have an infinite animation.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-fan"&gt;
  &lt;/a&gt;
  1. Fan
&lt;/h2&gt;

&lt;p&gt;Let's start with a Japan style hand fan&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/JjJVrPj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-watch"&gt;
  &lt;/a&gt;
  2. Watch
&lt;/h2&gt;

&lt;p&gt;You missed the last keynote of Apple? Don't worry, find below the full replay:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/xxreJGd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-quick"&gt;
  &lt;/a&gt;
  3. Quick
&lt;/h2&gt;

&lt;p&gt;A quick sword slash! 👀👀&lt;br&gt;
Roronoa is preparing for the next fight.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/gORyyPO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-loop"&gt;
  &lt;/a&gt;
  4. Loop
&lt;/h2&gt;

&lt;p&gt;An infinite loop animation. Will they touch each other?&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/gORJbyL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-tired"&gt;
  &lt;/a&gt;
  5. Tired
&lt;/h2&gt;

&lt;p&gt;I am already tired after only 4 days...&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/xxrowbV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-hungry"&gt;
  &lt;/a&gt;
  6. Hungry
&lt;/h2&gt;

&lt;p&gt;Hurry up and grab a slice!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/MWoMLGP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-toxic"&gt;
  &lt;/a&gt;
  7. Toxic
&lt;/h2&gt;

&lt;p&gt;Warning!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/zYzgbYQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-growing"&gt;
  &lt;/a&gt;
  8. Growing
&lt;/h2&gt;

&lt;p&gt;Let's take care of the nature&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/JjyPXoB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-homonym"&gt;
  &lt;/a&gt;
  9. Homonym
&lt;/h2&gt;

&lt;p&gt;I choose the word "bat" so here is a bat with a bat&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/RwZbLeP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-organized"&gt;
  &lt;/a&gt;
  10. Organized
&lt;/h2&gt;

&lt;p&gt;We are already at day 10. Let's take a look at the calendar. &lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/wvqvJgY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Still 21 to go 🥵🥵&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-slice"&gt;
  &lt;/a&gt;
  11. Slice
&lt;/h2&gt;

&lt;p&gt;You like cheese, don't you?&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/vYJYVrM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-squeak"&gt;
  &lt;/a&gt;
  12. Squeak
&lt;/h2&gt;

&lt;p&gt;I don't know the word "squeak" but it's seems to be the sound produced by a mouse.&lt;/p&gt;

&lt;p&gt;It's not the case of mine 🤔 (🤭)&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/GRvgExq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-camouflage"&gt;
  &lt;/a&gt;
  13. Camouflage
&lt;/h2&gt;

&lt;p&gt;Someone is hidden here. Find him!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/wvqapzr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-fancy"&gt;
  &lt;/a&gt;
  14. Fancy
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/qBXOroE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-float"&gt;
  &lt;/a&gt;
  15. Float
&lt;/h2&gt;

&lt;p&gt;Oh! a letter from my parents. Yes, I am doing this challenge on a lost island.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/XWamQQL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-snow"&gt;
  &lt;/a&gt;
  16. Snow
&lt;/h2&gt;

&lt;p&gt;An island where there is no snow...&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/BadjOJQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#17-stack"&gt;
  &lt;/a&gt;
  17. Stack
&lt;/h2&gt;

&lt;p&gt;When the stack overflow.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/rNzxgjE?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#18-shine"&gt;
  &lt;/a&gt;
  18. Shine
&lt;/h2&gt;

&lt;p&gt;Say hello to my friend Sunny.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/ExvKQqP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-nostalgia"&gt;
  &lt;/a&gt;
  19. Nostalgia
&lt;/h2&gt;

&lt;p&gt;Some nostalgia with Mario. Hover the box to earn coins! Sorry Firefox users, you cannot play the game.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/gOxMwXY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-journey"&gt;
  &lt;/a&gt;
  20. Journey
&lt;/h2&gt;

&lt;p&gt;The road to success is hard, long and — responsive 😛 (yes, yes! Adjust your screen size and see the result)&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/gOxwOLo?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#21-magic"&gt;
  &lt;/a&gt;
  21. Magic
&lt;/h2&gt;

&lt;p&gt;Hover the hat and TADA!!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/wvqzLMp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Oops, where did the rabbit go again?! And what the hell is that animal 😩&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#22-critter"&gt;
  &lt;/a&gt;
  22. Critter
&lt;/h2&gt;

&lt;p&gt;Hey, Duo here! Let’s learn some Japanese?&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/oNeYBJB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;Duolingo will not pay me for this ad&lt;/sup&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#23-loud"&gt;
  &lt;/a&gt;
  23. Loud
&lt;/h2&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/WNERGbY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#24-smelly"&gt;
  &lt;/a&gt;
  24. Smelly
&lt;/h2&gt;

&lt;p&gt;A wild Koffing appeared!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/RwZKYqJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-dip"&gt;
  &lt;/a&gt;
  25. Dip
&lt;/h2&gt;

&lt;p&gt;A deep friendship. I meant, a "dip" friendship 😜&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/LYjWbLm?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#26-spice"&gt;
  &lt;/a&gt;
  26. Spice
&lt;/h2&gt;

&lt;p&gt;I don't think the below are friends...&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/ExvmgWY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#27-film"&gt;
  &lt;/a&gt;
  27. Film
&lt;/h2&gt;

&lt;p&gt;The Star Wars famous scene like you have never seen!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/OJjmqZM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;sup&gt;For this one I picked one of my old illustration from here: &lt;a href="https://dev.to/afif/still-100-css-loaders-for-your-next-project-57hp#the-famous"&gt;https://dev.to/afif/still-100-css-loaders-for-your-next-project-57hp#the-famous&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#28-dots"&gt;
  &lt;/a&gt;
  28. Dots
&lt;/h2&gt;

&lt;p&gt;Meet the Daldots! the new CSS villains&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/abyWEBe?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you don't know the original cartoon, &lt;a href="https://www.google.com/search?q=the+daltons&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;sa=X&amp;amp;ved=2ahUKEwiC9Pmsp-3zAhWPkhQKHX-YDdgQ_AUoAXoECAEQAw&amp;amp;biw=1600&amp;amp;bih=747&amp;amp;dpr=1"&gt;click here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#29-fruit"&gt;
  &lt;/a&gt;
  29. Fruit
&lt;/h2&gt;

&lt;p&gt;What smoothie are you? select your fruit!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/ZEJJxgX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#30-contrast"&gt;
  &lt;/a&gt;
  30. Contrast
&lt;/h2&gt;

&lt;p&gt;Tailwind developer VS CSS developer. Choose your road!&lt;br&gt;
Both lead to the same destination but ...&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/rNzzraL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I won't tell which one is which because I am pretty sure not everyone will see it the same way 😜&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#31-spooky"&gt;
  &lt;/a&gt;
  31. Spooky
&lt;/h2&gt;

&lt;p&gt;It's finally over! it was fun but exhausting 😵&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/ExvvJPR?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;




&lt;p&gt;Don't forget to tell me your favorite one 👇. Follow this link if you want to see what the others have made: &lt;a href="https://twitter.com/hashtag/divtober?src=hashtag_click&amp;amp;f=live"&gt;https://twitter.com/hashtag/divtober?src=hashtag_click&amp;amp;f=live&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wait for more crazier and funny CSS art! I will get back with more superpowers!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/LdzYJipCrdJqU/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/LdzYJipCrdJqU/giphy-downsized.gif" alt="" width="512" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow me on twitter if you don't want to miss some cool stuff I share there: &lt;a href="https://twitter.com/ChallengesCss"&gt;https://twitter.com/ChallengesCss&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#you-want-to-support-me"&gt;
  &lt;/a&gt;
  &lt;center&gt;You want to support me?&lt;/center&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/afif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQj764Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-orange.png" alt="buy me a coffee" width="434" height="100"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;&lt;strong&gt;OR&lt;/strong&gt;&lt;/center&gt;

&lt;p&gt;&lt;a href="https://www.patreon.com/temani"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4kAQAgAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/db3jtgy2i5l4w8slkps5.png" alt="Become a patron" width="499" height="125"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>css</category>
      <category>webdev</category>
      <category>codepen</category>
    </item>
    <item>
      <title>Day 23 of 100 Days of Code &amp; Scrum: Rammina's Happy Halloween Scheming</title>
      <author>Rammina</author>
      <pubDate>Sun, 31 Oct 2021 12:14:52 +0000</pubDate>
      <link>https://dev.to/rammina/day-23-of-100-days-of-code-scrum-ramminas-happy-halloween-scheming-2ni8</link>
      <guid>https://dev.to/rammina/day-23-of-100-days-of-code-scrum-ramminas-happy-halloween-scheming-2ni8</guid>
      <description>&lt;p&gt;Happy Halloween, everyone!&lt;/p&gt;

&lt;p&gt;Today's a special occasion, so I didn't code that much. I only did like 2-3 hours of productive work to respect the challenge, then the rest was pretty chill. Glad to finally have a chance to unwind from constant daily routine!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#halloween-not-for-me"&gt;
  &lt;/a&gt;
  Halloween? Not for me.
&lt;/h3&gt;

&lt;p&gt;We don't really do trick or treat where I live, and I'm not too interested in going out to celebrate. Instead, I just chilled and watched anime, gaming streams, and played FF14. I'm such a geek, I know. It's what makes me happy so I don't really feel pressured to go to horror houses or put on costumes.&lt;/p&gt;

&lt;p&gt;That said, I do hope that everyone had a fun Halloween!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wSnX7FH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgu5hztbqmvv1pfsnne1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wSnX7FH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgu5hztbqmvv1pfsnne1.jpg" alt="Halloween Corgi" width="880" height="585"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;Like I usually do every week. I did my Weekly Sprint Review and Retrospective, in which I went over what I've managed to do well, what my shortcomings were, and what I could do better in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Just as like every new week, I planned out what I should be doing and established my new &lt;strong&gt;Sprint Goals&lt;/strong&gt;. My focus for this week will be &lt;strong&gt;Next.js&lt;/strong&gt; as I would like to build my company's website soon. I will still be studying &lt;strong&gt;Scrum&lt;/strong&gt; and continue writing my guides!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;learn and review Next.js.&lt;/li&gt;
&lt;li&gt;lay out my plans for my company's website.&lt;/li&gt;
&lt;li&gt;write user stories for my website, so I can plan ahead and prioritize what features I will really need right away and what might be desirable in the future.&lt;/li&gt;
&lt;li&gt;finish my beginner Scrum guide.&lt;/li&gt;
&lt;li&gt;finish reading &lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;continue studying for Professional Scrum Master I (PSM I) certification.&lt;/li&gt;
&lt;li&gt;finish my guides about Scrum.&lt;/li&gt;
&lt;li&gt;continue networking, but allocate less time to this (coding is more important).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Trick or treat! Have fun, everyone!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QTUETMOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9dd6zelfb0pagv2n55m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QTUETMOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w9dd6zelfb0pagv2n55m.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.infoq.com/minibooks/scrum-xp-from-the-trenches-2/"&gt;Scrum and XP from the Trenches&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#my-super-secret-scheme"&gt;
  &lt;/a&gt;
  My Super Secret Scheme
&lt;/h3&gt;

&lt;p&gt;Some of you already know what I'm planning in secret... It will be interesting and hilarious once we see what happens. I can't wait for the reaction of "that man."&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KzxFEwPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pd8tlnf7oi89exhmpi86.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KzxFEwPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pd8tlnf7oi89exhmpi86.png" alt="Bernkastel" width="355" height="355"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Create a custom video player in React 📽️</title>
      <author>Avneesh Agarwal</author>
      <pubDate>Sun, 31 Oct 2021 11:41:48 +0000</pubDate>
      <link>https://dev.to/avneesh0612/create-a-custom-video-player-in-react-4bbo</link>
      <guid>https://dev.to/avneesh0612/create-a-custom-video-player-in-react-4bbo</guid>
      <description>&lt;p&gt;Wassup guys, in this tutorial we are going to see how to build a custom video player in React. Let's jump straight into it!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GMCPeKtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/ZuUyAjVssKoAAAAC/so-lets-just-get-right-into-it-hannah-fawcett.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GMCPeKtX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://c.tenor.com/ZuUyAjVssKoAAAAC/so-lets-just-get-right-into-it-hannah-fawcett.gif" alt="jump right in" width="498" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#create-a-new-react-app"&gt;
  &lt;/a&gt;
  Create a new react app
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-video-app custom-video-player
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#cleanup"&gt;
  &lt;/a&gt;
  Cleanup
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Delete everything in the app div in &lt;code&gt;App.js&lt;/code&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import "./App.css";

function App() {
  return &amp;lt;div className="app"&amp;gt;&amp;lt;/div&amp;gt;;
}

export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Delete everything in &lt;code&gt;App.css&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;in &lt;code&gt;index.css&lt;/code&gt; add-&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* {
  margin: 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#create-the-ui-for-our-video-player"&gt;
  &lt;/a&gt;
  Create the UI for our Video player
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#adding-the-video"&gt;
  &lt;/a&gt;
  Adding the Video
&lt;/h3&gt;

&lt;p&gt;Inside the app div add a video tag with the src of your video, I am also going to add a className for styling-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;video
    className="video"
    src="https://res.cloudinary.com/dssvrf9oz/video/upload/v1635662987/pexels-pavel-danilyuk-5359634_1_gmixla.mp4"
 &amp;gt;&amp;lt;/video&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-the-controls-of-the-videos"&gt;
  &lt;/a&gt;
  Adding the controls of the videos
&lt;/h3&gt;

&lt;p&gt;Below the video component, I will add this div which has some Svgs as icons. You can use direct Svgs like me or use an icon library for the icons :).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;div className="controlsContainer"&amp;gt;
        &amp;lt;div className="controls"&amp;gt;
          &amp;lt;img className="controlsIcon" alt="" src="/backward-5.svg" /&amp;gt;
          &amp;lt;img className="controlsIcon--small" alt="" src="/play.svg" /&amp;gt;
          &amp;lt;img className="controlsIcon" alt="" src="/forward-5.svg" /&amp;gt;
        &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-the-progress-bar-for-time"&gt;
  &lt;/a&gt;
  Adding the progress bar for time
&lt;/h3&gt;

&lt;p&gt;We are also going to create a progress bar that shows the current time and total time of the video.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;div className="timecontrols"&amp;gt;
        &amp;lt;p className="controlsTime"&amp;gt;1:02&amp;lt;/p&amp;gt;
        &amp;lt;div className="time_progressbarContainer"&amp;gt;
          &amp;lt;div style={{ width: "40%" }} className="time_progressBar"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;p className="controlsTime"&amp;gt;2:05&amp;lt;/p&amp;gt;
   &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Forgive me for not having very good naming conventions in classes. &lt;em&gt;I have forgotten how to name my classes because of Tailwind :P&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#styling-the-ui"&gt;
  &lt;/a&gt;
  Styling the UI
&lt;/h2&gt;

&lt;p&gt;The video player looks very ugly right now, so let's style it. In &lt;em&gt;App.css&lt;/em&gt; I am going to add some stylings-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/* Main Container */

.app {
  display: flex;
  flex-direction: column;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

/* Video */

.video {
  width: 100vw;
  height: 100vh;
}

/* Controls */

.controlsContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100vw;
  background-color: transparent;
  margin-top: -50vw;
  padding: 0 40px;
  z-index: 20;
}

.controls {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  padding-top: 18rem;
  margin: auto;
}

.controlsIcon {
  width: 40px;
  height: 40px;
  cursor: pointer;
  margin-left: 10rem;
  margin-right: 10rem;
}

.controlsIcon--small {
  width: 32px;
  height: 32px;
  cursor: pointer;
  margin-left: 10rem;
  margin-right: 10rem;
}

/* The time controls section */

.timecontrols {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  position: absolute;
  bottom: 4rem;
  margin-left: 10vw;
}

.time_progressbarContainer {
  background-color: gray;
  border-radius: 15px;
  width: 75vw;
  height: 5px;
  z-index: 30;
  position: relative;
  margin: 0 20px;
}

.time_progressBar {
  border-radius: 15px;
  background-color: indigo;
  height: 100%;
}

.controlsTime {
  color: white;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now our video player would look like this-&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--egNcuVcz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635672034793/swelNl_sp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--egNcuVcz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1635672034793/swelNl_sp.png" alt="image.png" width="880" height="457"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-logic-to-the-player"&gt;
  &lt;/a&gt;
  Adding the logic to the player
&lt;/h2&gt;

&lt;p&gt;To work on the functionalities we first need to attach a ref to the video with the useRef hook. So follow the steps given below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a ref like this-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const videoRef = useRef(null);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Import the useRef hook from react
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useRef } from "react";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Attach it to the video
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;video
    ref={videoRef}
    className="video"
    src="https://res.cloudinary.com/dssvrf9oz/video/upload/v1635662987/pexels-pavel-danilyuk-5359634_1_gmixla.mp4"
 &amp;gt;&amp;lt;/video&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#play-and-pause-functionality"&gt;
  &lt;/a&gt;
  Play and Pause functionality
&lt;/h3&gt;

&lt;p&gt;For play and pause create a simple function, which takes an argument of control and based on the control it will play or pause the video-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; const videoHandler = (control) =&amp;gt; {
    if (control === "play") {
      videoRef.current.play();
    } else if (control === "pause") {
      videoRef.current.pause();
    }
  };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in the play.svg image, we will add an onClick function to start the video.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;img
     onClick={() =&amp;gt; videoHandler("play")}
     className="controlsIcon--small"
     alt=""
     src="/play.svg"
     /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you click on the icon the video will play!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Changing the icon based on the playing/paused state&lt;/strong&gt;&lt;br&gt;
To achieve this I am going to use the useState hook. Create a playing state like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [playing, setPlaying] = useState(false);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the const video handler function, we need to change the value onClick of them like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const videoHandler = (control) =&amp;gt; {
    if (control === "play") {
      videoRef.current.play();
      setPlaying(true);
    } else if (control === "pause") {
      videoRef.current.pause();
      setPlaying(false);
    }
  };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Changing the icon&lt;/strong&gt;&lt;br&gt;
Where we have the play icon, now we will render it based on a condition with the help of a ternary operator -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  {playing ? (
            &amp;lt;img
              onClick={() =&amp;gt; videoHandler("pause")}
              className="controlsIcon--small"
              alt=""
              src="/pause.svg"
            /&amp;gt;
          ) : (
            &amp;lt;img
              onClick={() =&amp;gt; videoHandler("play")}
              className="controlsIcon--small"
              alt=""
              src="/play.svg"
            /&amp;gt;
          )}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we can play and pause the video 🥳&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#forwarding-and-reverting-the-video"&gt;
  &lt;/a&gt;
  Forwarding and reverting the video
&lt;/h3&gt;

&lt;p&gt;I am going to create very simple functions for this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; const fastForward = () =&amp;gt; {
    videoRef.current.currentTime += 5;
  };

  const revert = () =&amp;gt; {
    videoRef.current.currentTime -= 5;
  };
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we will add these functions as onClick of the respective buttons.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Forward&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img
  onClick={fastForward}
  className="controlsIcon"
  alt=""
  src="/forward-5.svg"
     /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Revert&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img
  onClick={revert}
  className="controlsIcon"
  alt=""
  src="/backward-5.svg"
     /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#time-progress-bar"&gt;
  &lt;/a&gt;
  Time progress bar
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Get the length of the video&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To get the length of the video, follow the following steps&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Give an id to the video component
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;video
    id="video1"
    ref={videoRef}
    className="video"
    src="https://res.cloudinary.com/dssvrf9oz/video/upload/v1635662987/pexels-pavel-danilyuk-5359634_1_gmixla.mp4"
 &amp;gt;&amp;lt;/video&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Create a state to store the video length
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [videoTime, setVideoTime] = useState(0);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Set the video time like this on the play of the video
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (control === "play") {
      videoRef.current.play();
      setPlaying(true);
      var vid = document.getElementById("video1");
      setVideoTime(vid.duration);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can use the videoTime variable instead of hardcoded time. This string manipulation will make the time in a format like- 1:05&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  &amp;lt;p className="controlsTime"&amp;gt;
    {Math.floor(videoTime / 60) + ":" + ("0" + Math.floor(videoTime % 60)).slice(-2)}
 &amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Getting the current time of the video&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To get the current time of video we will need to use a function that runs every second, so I am going to use window.setInterval for the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window.setInterval(function () {
    setCurrentTime(videoRef.current?.currentTime);
  }, 1000);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now as always, we need to create a state to store the value-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [currentTime, setCurrentTime] = useState(0);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of the hard code value, we will use the variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;p className="controlsTime"&amp;gt;
    {Math.floor(currentTime / 60) + ":" + ("0" + Math.floor(currentTime % 60)).slice(-2)}
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Getting the progress and setting it to the progress bar&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create another state for progress-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [progress, setProgress] = useState(0);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now inside the window.setInterval function that we created, add another line-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;setProgress((videoRef.current?.currentTime / videoTime) * 100);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The function would look like this now-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window.setInterval(function () {
    setCurrentTime(videoRef.current?.currentTime);
    setProgress((videoRef.current?.currentTime / videoTime) * 100);
  }, 1000);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Our custom video player is now ready 🎉🎊&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Useful links-&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/avneesh0612/custom-video-player"&gt;GitHub repository&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/"&gt;ReactJS docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://avneesh-links.vercel.app/"&gt;All socials&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>video</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to get the first job</title>
      <author>Thiago Marinho</author>
      <pubDate>Sun, 31 Oct 2021 11:38:34 +0000</pubDate>
      <link>https://dev.to/tgmarinhodev/how-to-get-the-first-job-18ib</link>
      <guid>https://dev.to/tgmarinhodev/how-to-get-the-first-job-18ib</guid>
      <description>

&lt;p&gt;What I tell to my mentees - Tips to getting a Job&lt;/p&gt;

&lt;p&gt;tags: first job, software developer, junior developer&lt;/p&gt;

&lt;p&gt;All you need to do is expose yourself. Alert cliche sentence: Who is not seen is not remembered.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a blog on &lt;a href="http://dev.to/"&gt;dev.to&lt;/a&gt; and create content;&lt;/li&gt;
&lt;li&gt;Keep your Github active and with information;&lt;/li&gt;
&lt;li&gt;Learn how to use Google effectively, and search for: GitHub roadmap "some technology here";&lt;/li&gt;
&lt;li&gt;LinkedIn - create posts, talk with people;&lt;/li&gt;
&lt;li&gt;Participe of communities - slack, discord, telegram;&lt;/li&gt;
&lt;li&gt;Use well Twitter and social networks to follow the right people and consume good content.&lt;/li&gt;
&lt;li&gt;Apply for the jobs, get indications, find mentors.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Go to well explain version:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#who-is-not-seen-is-not-remembered-how-to-be-seen"&gt;
  &lt;/a&gt;
  Who is not seen is not remembered - How to be seen?
&lt;/h3&gt;

&lt;p&gt;The answer is SEO (Search Engine Optimization), what happens when you type on Google: "React Software Engineer Thiago Marinho" I hope that you will see some references for myself, my LinkedIn, Twitter, personal website, old pictures also 💁‍♂️&lt;/p&gt;

&lt;p&gt;So my tip for someone that needs the first job or relocate, is to create some portfolio and show yourself for the world. Don't be shy.&lt;/p&gt;

&lt;p&gt;You can do it using &lt;a href="https://dev.to/"&gt;dev.to&lt;/a&gt;, &lt;a href="https://medium.com/@tgmarinho/"&gt;medium&lt;/a&gt;, &lt;a href="https://sibelius.substack.com/"&gt;substack&lt;/a&gt;, or code your own &lt;a href="https://tgmarinho.com/"&gt;website&lt;/a&gt;. It's better to use the first alternative for now.&lt;/p&gt;

&lt;p&gt;Your Github should contain information and links to your LinkedIn, professional email, and the bio should have info about what are you doing right now.&lt;/p&gt;

&lt;p&gt;e.g: "Passionate Software Developer 💻 React · React Native · Node.js 🚀 GraphQL and Relay enthusiast"&lt;/p&gt;

&lt;p&gt;Those who see my GitHub will understand that I'm coding and what I'm interested in.&lt;/p&gt;

&lt;p&gt;You should have a portfolio in your GitHub profile, with a Good readme explaining the project:&lt;/p&gt;

&lt;p&gt;eg:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/tgmarinho/README-ecoleta"&gt;https://github.com/tgmarinho/README-ecoleta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/tgmarinho/members"&gt;https://github.com/tgmarinho/members&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This way you can get experience without experience.&lt;/p&gt;

&lt;p&gt;Show this project to someone that is hiring you is a great way to impress, it's very nice when you're trying to get a job and the company uses the same stack of your portfolio, it's already happened with me.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-keep-updated-with-technologies-and-how-to-know-what-i-should-learn"&gt;
  &lt;/a&gt;
  How to keep updated with technologies and how to know what I should learn?
&lt;/h3&gt;

&lt;p&gt;Both are great questions, the first one, the Seniors developers go to the information source: If you want to see how to create a good application with React, then you need to see what Facebook developers are doing with this technology and read about their experiences and see others players like: Airbnb, Netflix, Uber, Nubank, and the list is long.&lt;/p&gt;

&lt;p&gt;Read their tech blogs, GitHub repositories, etc.&lt;/p&gt;

&lt;p&gt;If you are beginning, so your questions already were answered in some place like StackOverflow or GitHub issues of the npm package that you are using.&lt;/p&gt;

&lt;p&gt;And the second question the answer is, search for: GitHub react roadmap, GitHub data science roadmap, GitHub javascript roadmap, search also for GitHub awesome react, GitHub awesome python, GitHub awesome blockchain, you will find great resources created by the community.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learn-how-to-search-things"&gt;
  &lt;/a&gt;
  Learn how to search things:
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.pcmag.com/how-to/23-google-search-tips-youll-want-to-learn"&gt;Learning how to search&lt;/a&gt; is a great way to fix issues and get the best content. Use How to ...., and the magic happens.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#use-the-linkedin"&gt;
  &lt;/a&gt;
  use the LinkedIn
&lt;/h3&gt;

&lt;p&gt;If you don't know anybody, it's nice to have a LinkedIn.&lt;/p&gt;

&lt;p&gt;Create some posts, use nice keywords, be honest but be confident positioning for getting your first job, create your authority in your stack, telling for the world what you are doing, learning, reading, etc, be proactive.&lt;br&gt;
You don't want a job, you want to work, to make your best, to do something great. Give value to receive value.&lt;/p&gt;

&lt;p&gt;Do not use LinkedIn superficially, try to make two or three direct contacts, search for who is working with React, and try to talk with them, asking some tips, jobs, feedbacks in your portfolio, there is a bunch of nice people that like to help others.&lt;/p&gt;

&lt;p&gt;I suggest reading my &lt;a href="https://www.tgmarinho.com/posts/2020-09-14-expansion_week_na_rocketseat"&gt;blog post pt-br&lt;/a&gt; here you will find some other insights for your career.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#join-community"&gt;
  &lt;/a&gt;
  Join Community
&lt;/h3&gt;

&lt;p&gt;You will work with people, you'll need them. Today you need help, tomorrow you'll help others.&lt;/p&gt;

&lt;p&gt;Use discord, telegram, slack, WhatsApp, forums. You should participate in at least one community and be active, asking and answering, be direct with your doubts.&lt;/p&gt;

&lt;p&gt;never ask: Someone already worked with React useCallback?&lt;/p&gt;

&lt;p&gt;Instead, ask: I'm working with React useCallback, and I'm facing an issue with rerender, look the code below, look the log, someone can help with that?&lt;/p&gt;

&lt;p&gt;If you do this question: Someone already worked with React useCallback?&lt;br&gt;
The people will answer: yes | no, and you will type your problem, that's waste of time, you need to improve your async communication.&lt;br&gt;
In a community, there are a lot of people trying to help others just for free and friendly.&lt;br&gt;
You don't need to participate in a lot of community, you can't follow all topics. It's better to participate of one or three in the maximum than participate of 20 and not talk, ask, answer.&lt;br&gt;
Leave from the community that you are not interacting with.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#twitter-social-networking"&gt;
  &lt;/a&gt;
  Twitter, Social networking
&lt;/h3&gt;

&lt;p&gt;I recommend following some nice guys that tweet about what you want to work with, this way you will update about technology, market jobs.&lt;br&gt;
Sometimes will appear some cutties cats in your timeline, but make the part.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.swyx.io/learn-in-public/"&gt;Learn in public&lt;/a&gt;. You don't know anything!&lt;br&gt;
Share what you are doing, learning... on Twitter, and receive feedback about it. Process what matters, ignore the bullshits.&lt;/p&gt;

&lt;p&gt;If you don't like Twitter, LinkedIn, ok do it just until you get your first job, then, you can leave, but I recommend interacting with people always you can do.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Never stop learning, you always will have things to learn and apply. Learn on-demand, when you have a new project then you can learn and code about it instead of doing a course without goals or evident opportunity.&lt;br&gt;
use social media Twitter/LinkedIn with wisdom.&lt;br&gt;
Make friends on this platform, find mentors to grow fast.&lt;br&gt;
Take your time, enjoy and learn with the process.&lt;/p&gt;

&lt;p&gt;Good luck, see you at the next level 🚀&lt;/p&gt;

</description>
      <category>job</category>
      <category>software</category>
      <category>developer</category>
      <category>junior</category>
    </item>
    <item>
      <title>SQL Basics for Beginners</title>
      <author>Vadim Kolobanov</author>
      <pubDate>Sun, 31 Oct 2021 10:56:33 +0000</pubDate>
      <link>https://dev.to/vadimkolobanov/sql-basics-for-beginners-4n74</link>
      <guid>https://dev.to/vadimkolobanov/sql-basics-for-beginners-4n74</guid>
      <description>&lt;p&gt;Hello everyone Let's take a brief look at the basics of SQL. Let's find out what SQL is, what commands, methods and features there are.&lt;/p&gt;

&lt;p&gt;Let's start!&lt;/p&gt;




&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#basic-terminology"&gt;
  &lt;/a&gt;
  Basic terminology
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Database&lt;/strong&gt; - is some organized set of information.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relational database&lt;/strong&gt; - is a database built on a relational data model (according to the mathematical theory of relations).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Database management system (DBMS)&lt;/strong&gt; - is a set of programs that allows you to manage the creation and use of a database.&lt;/p&gt;




&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#sql-language"&gt;
  &lt;/a&gt;
  SQL Language
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;SQL (structured query language)&lt;/strong&gt; - is a programming language designed to work with relational databases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The peculiarity of SQL&lt;/strong&gt; - is a declarative programming language, we describe what we want to get, not how&lt;/p&gt;




&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#types-of-sql-statements"&gt;
  &lt;/a&gt;
  Types of SQL statements
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;h5&gt;
  &lt;a href="#groups-of-sql-statements"&gt;
  &lt;/a&gt;
  Groups of SQL statements:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Operators for working with database objects.&lt;/li&gt;
&lt;li&gt;Data manipulation operators.&lt;/li&gt;
&lt;li&gt;Transaction Management Commands&lt;/li&gt;
&lt;li&gt;Data protection and management operators.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will consider only data manipulation operators, because it is with them that you will most often meet in the course of your work.&lt;/p&gt;




&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#select-request-basic-syntax"&gt;
  &lt;/a&gt;
  SELECT request. Basic syntax
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Minimum query:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;"Separate" and "order by" operators:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;DISTINCT&lt;/span&gt; &lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f2&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;f2&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Graph operator:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;QUANTITY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#subqueries"&gt;
  &lt;/a&gt;
  Subqueries
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; print the count of different values in the "f1" field of the table.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;DISTINCT&lt;/span&gt; &lt;span class="n"&gt;f1&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The subquery is written in parentheses, the result of its work is a table.&lt;/p&gt;




&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#the-exists-operator"&gt;
  &lt;/a&gt;
  The exists operator
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;A quick way to check if a query returns at least one value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;smth&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; 
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;EXISTS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table2&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;table2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;field1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Sometimes it is convenient to use aliases:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;field1&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;field2&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f2&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;first_table&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;EXISTS&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table2&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;second_table&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;second_table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;first_table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#group-by-operator"&gt;
  &lt;/a&gt;
  Group by operator
&lt;/h3&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; 
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt; &lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="k"&gt;HAVING&lt;/span&gt; &lt;span class="n"&gt;having_condition&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the HAVING operator, unlike where, aggregating functions can be used.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some aggregating functions:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SUM&lt;/li&gt;
&lt;li&gt;COUNT&lt;/li&gt;
&lt;li&gt;MIN&lt;/li&gt;
&lt;li&gt;MAX&lt;/li&gt;
&lt;/ul&gt;




&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#merging-tables"&gt;
  &lt;/a&gt;
  Merging tables
&lt;/h3&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;column_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table1&lt;/span&gt;
&lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;UNION&lt;/span&gt; &lt;span class="k"&gt;ALL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;column_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;table2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#keys"&gt;
  &lt;/a&gt;
  Keys
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Types of key relationships:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1 to 1&lt;/li&gt;
&lt;li&gt;1 to many&lt;/li&gt;
&lt;li&gt;many to 1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4gDTGU5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jurcwhfm9rol4lasui59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4gDTGU5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jurcwhfm9rol4lasui59.png" alt="Keys" width="396" height="218"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#many-to-many-relationship"&gt;
  &lt;/a&gt;
  Many to many relationship
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KQOR23yX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ry1buby71rb4x9s3i0mj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KQOR23yX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ry1buby71rb4x9s3i0mj.png" alt="ManyToMany" width="512" height="170"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#join-operator"&gt;
  &lt;/a&gt;
  JOIN operator
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FYHuM9jp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qluyhpjr7b903gonkk1u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FYHuM9jp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qluyhpjr7b903gonkk1u.png" alt="Join operator" width="880" height="692"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#changing-the-contents-of-tables"&gt;
  &lt;/a&gt;
  Changing the contents of tables
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Adding an element:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;values&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;…&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;col1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;v2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Updating an element:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;col1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;val2&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Deleting an element:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;I hope my efforts will help someone to deal with such a topic as SQL.&lt;/em&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#i-wish-you-good-luck"&gt;
  &lt;/a&gt;
  I wish you good luck!
&lt;/h4&gt;

</description>
      <category>sql</category>
      <category>database</category>
      <category>beginners</category>
    </item>
    <item>
      <title>EXP: Random Color Poster v.1</title>
      <author>sparklingman</author>
      <pubDate>Sun, 31 Oct 2021 10:42:15 +0000</pubDate>
      <link>https://dev.to/sparklingman/exp-random-color-poster-v1-4g4i</link>
      <guid>https://dev.to/sparklingman/exp-random-color-poster-v1-4g4i</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MSWlshAE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k12cco7oiahkm2inuke7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MSWlshAE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k12cco7oiahkm2inuke7.png" alt="Image description" width="880" height="507"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/sparklingman/embed/KKvXgyv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>animation</category>
      <category>css</category>
      <category>javascript</category>
    </item>
  </channel>
</rss>
