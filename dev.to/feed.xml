<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Create Prado Museum UI/UX + Demo üçø (React ‚öõÔ∏è)</title>
      <author>Roden</author>
      <pubDate>Fri, 06 Aug 2021 19:15:51 +0000</pubDate>
      <link>https://dev.to/kerthin/create-prado-museum-ui-ux-demo-react-1pg2</link>
      <guid>https://dev.to/kerthin/create-prado-museum-ui-ux-demo-react-1pg2</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://kerthin.github.io/pradoMuseum-templateSait/#"&gt;&lt;h1&gt;Full Prado Museum Demo&lt;/h1&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Kerthin"&gt;
        Kerthin
      &lt;/a&gt; / &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait"&gt;
        pradoMuseum-templateSait
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Site of the Prado Museum, for viewing paintings.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img width="100" src="https://res.cloudinary.com/practicaldev/image/fetch/s--XB84-geH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Kerthin/pradoMuseum-templateSaitREADMEimage/squirrelAppIcon.png" alt="Kerthin logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img src="https://camo.githubusercontent.com/3aaee52aea7e26ea020e0c2bac3ea70c011c1cc0507999c2c8b91c121b7fe9ba/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6275696c642d70617373696e672d627269676874677265656e2e737667" alt="Build Status"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img src="https://camo.githubusercontent.com/0ef94bb3d6bdf5fec0c3f5452111c9dd1b2d4c82518f871f6da0dd27fce5910d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e706d2d76362e31342e342d626c75652e737667" alt="Version"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img src="https://camo.githubusercontent.com/e2c7bcf456840ac212cd09701b26b6d86ed89b7780dde7ef35aa3d5c2312af9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e6f64652d7631302e31362e302d626c75652e737667" alt="Version"&gt;&lt;/a&gt; &lt;br&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img src="https://camo.githubusercontent.com/48f77fe8664a8ec9de43e0c8270fea0200eefc7e1776ad651eb83237fa93d64d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7265706f25323073697a652d3734322e352532304d422d677265656e2e737667" alt="Size"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img src="https://camo.githubusercontent.com/4dd77986971920e34ba97e1e158d20878f1cd18c7a581903ef4bca2e730e1e0d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70726f6a65637425323076657273696f6e2d76302e382d626c75652e737667" alt="Version"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;p&gt;The template is a site for viewing the works of great artists represented in the famous Prado Museum. You can also find out information about the painting and the artist himself.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To launch the app
&lt;ul&gt;
&lt;li&gt;download the repository;&lt;/li&gt;
&lt;li&gt;log in to the downloaded repository using the command line or terminal;&lt;/li&gt;
&lt;li&gt;enter the command line 'npm run start' or 'serve-s build' and go to the address specified in the terminal.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Note that the project was made using the CREATE REACT APP.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kerthin.github.io/pradoMuseum-templateSait/" rel="nofollow"&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
Use technology.&lt;/h4&gt;
&lt;p&gt;The following technologies were used to create this project:&lt;/p&gt;
&lt;h3&gt;
Software platform&lt;/h3&gt;
&lt;p&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;
    &lt;img width="260px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--gtGFTBEX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Kerthin/pradoMuseum-templateSaitREADMEimage/technology/nodejs-1.svg"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h3&gt;
Libraries&lt;/h3&gt;
&lt;p&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;
    &lt;img width="260px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vNAXIytz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Kerthin/pradoMuseum-templateSaitREADMEimage/technology/react.svg"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h3&gt;
Package manager&lt;/h3&gt;

&lt;p&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;
    &lt;img width="144px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--A76ceuua--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Kerthin/pradoMuseum-templateSaitREADMEimage/technology/npm.svg"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;h4&gt;
The repository of this project is divided into several sections:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;src&lt;/code&gt; - this repository is intended for files with the help of which the project is being developed. It is from this repository that all project files are compiled;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;docs&lt;/code&gt; - a repository that stores all compiled code with all media‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Kerthin/pradoMuseum-templateSait"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/blockquote&gt;

&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;p&gt;2 years ago, wandering through the expanses of Behance, I saw an interesting work, which was a redesign for the website of the Spanish Prado Museum. The work was called &lt;a href="https://www.behance.net/gallery/73878699/Prado-Museum-Website-with-Virtual-Reality-Experience"&gt;Prado Museum Website with Virtual Reality Experience&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Of course, I didn't want to implement the entire project, because I didn't understand the UI and UX logic very well in the work that I saw on Behance.&lt;/p&gt;

&lt;p&gt;Moreover, I just wanted to create a small one-page project. Considering that this was supposed to be my first project on React. Therefore, I want to immediately note that the code here is very lousy, and this post is not a tutorial of any kind. And I was too lazy to break the code into components, so it is written entirely in one file. I'm not going to teach anyone anything, but I just want to tell you about how I implemented this project.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/LweK4Ma6Chp8k/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/LweK4Ma6Chp8k/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Concept&lt;/h1&gt;

&lt;p&gt;The idea was simple, I want to implement a one-page website where I can use the menu to select the artist I am interested in and view his works, as well as information about him, which will be displayed on the main page and in a specially side menu.&lt;/p&gt;

&lt;p&gt;All information is stored in a special object, which you can see at &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait/blob/master/src/App.js"&gt;this link&lt;/a&gt;. The object itself consists of three stages.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt; The Country üëâ The Artist üëâ His Paintings&lt;/strong&gt;&lt;br&gt;
There are &lt;code&gt;7&lt;/code&gt; countries in our array, and the total number of artists is &lt;code&gt;27&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are &lt;code&gt;2 menus&lt;/code&gt; on the website. &lt;code&gt;One menu&lt;/code&gt; is the main one, it presents artists who are in sections with countries. The &lt;code&gt;second menu&lt;/code&gt; is auxiliary, it displays information about the selected artist (the menu is located on the side, you can open it by &lt;code&gt;clicking on the portrait&lt;/code&gt; of the artist that is located on the main screen).&lt;/p&gt;

&lt;h1&gt;Realization&lt;/h1&gt;

&lt;h3&gt;01. Main Page&lt;/h3&gt;

&lt;p&gt;To begin with, I decided to create a main page that will display brief information about the artist.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DYxLK54u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fia1fufy8ndq1rlukszv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DYxLK54u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fia1fufy8ndq1rlukszv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; At the very top I have a button to open the menu.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GvKF_LXb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3jipf6zsquke18dewts.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GvKF_LXb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j3jipf6zsquke18dewts.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; In the center there is a very brief information about the artist (&lt;code&gt;years of life&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;country of birth&lt;/code&gt;).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qNueURp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jczfaysdj0cxdviqmvq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qNueURp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7jczfaysdj0cxdviqmvq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Just below is a portrait of the selected artist, which is located in a round block. When you &lt;code&gt;click&lt;/code&gt; on it, a side menu should &lt;code&gt;open&lt;/code&gt;, where the artist's paintings will be presented, as well as broader information about the artist (&lt;code&gt;early life&lt;/code&gt;, &lt;code&gt;synopsis&lt;/code&gt;).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cS8Wtb7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5n0evr1qz5uqvmoaaqns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cS8Wtb7f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5n0evr1qz5uqvmoaaqns.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; At the very bottom there is information about the picture, which is displayed on the main screen (&lt;code&gt;name&lt;/code&gt;, &lt;code&gt;year of creation&lt;/code&gt;, &lt;code&gt;artist's name&lt;/code&gt;).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ckr6GKVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0z44l4sawez7z42lbv2k.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ckr6GKVb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0z44l4sawez7z42lbv2k.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;02. Artists Menu&lt;/h3&gt;

&lt;p&gt;The menu was planned to be made full-screen. Therefore, before I output information to it, I need to work out the animation of opening this menu.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Animation&lt;/strong&gt;&lt;br&gt;
The animation of opening the menu should look as if it shifts the main page down when opening it. This was implemented as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/mx4XGr7XKInZMaURbm/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/mx4XGr7XKInZMaURbm/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The burger menu itself was made in the form of two closing lines that form a cross.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/cACoiAP0PTSMqdvZBJ/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/cACoiAP0PTSMqdvZBJ/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Artists&lt;/strong&gt;&lt;br&gt;
Now it's time to draw lists of artists. To do this, we need to break the information about artists into components and display them in the form of columns, which are divided by country categories.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ----- Picture Components&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;PictureInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;picture__textWrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;picture__text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;picture__date&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateWritten&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;picture__name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;PictureImg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;picture__imgWrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;picture__img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`picture__imgBg &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;imgBook&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Picture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;picture&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;picture__info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PictureInfo&lt;/span&gt; &lt;span class="nx"&gt;dateWritten&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dateWritten&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PictureImg&lt;/span&gt; &lt;span class="nx"&gt;imgBook&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;imgBook&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Pictures&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fragment&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pictures&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;{}).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(([&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Picture&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;))}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/React.Fragment&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// ----- END Picture Components&lt;/span&gt;


&lt;span class="c1"&gt;// ----- Painter Components&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;PainterInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__textWrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__years&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;died&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;PainterImg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__imgWrap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`painter__imgBg &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Painter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onClickLink&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`painter &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;active&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;active&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;painter__info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PainterInfo&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;born&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;died&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;died&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;PainterImg&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// ----- END Painter Components&lt;/span&gt;


&lt;span class="c1"&gt;// ----- –°ountries Components&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;CountryTitle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;countryTitle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;countryTitle__name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;–°ountries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;swiper-slide&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CountryTitle&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;painters&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(([&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Painter&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onClickLink&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onSelectLink&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onSelectWriter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;active&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selected&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;))}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// ----- END –°ountries Components&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And now we need to bring it all to our menu.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KReoudvI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yxqlv6s9kq3rm7o8llf7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KReoudvI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yxqlv6s9kq3rm7o8llf7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But here we have a problem. The fact is that we have 7 countries in our array, and a maximum of 4 fall into our field of view in the menu. To do this, we need to implement the slider function in our menu so that we can scroll through our list of countries.&lt;/p&gt;

&lt;p&gt;To do this, I decided to use the &lt;a href="https://swiperjs.com/"&gt;Swiper.js&lt;/a&gt;. It was possible to simply implement this using &lt;code&gt;CSS&lt;/code&gt; and &lt;code&gt;FLEX&lt;/code&gt;, but I wanted the slider to be scrollable with gestures.&lt;/p&gt;

&lt;p&gt;And here's what happened:&lt;br&gt;
&lt;a href="https://i.giphy.com/media/Tc65wdG9L9WkQDFewb/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/Tc65wdG9L9WkQDFewb/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Choosing a artist&lt;/strong&gt;&lt;br&gt;
The last thing left for us is to implement the artist selection function. To do this, we need that when we &lt;code&gt;click&lt;/code&gt; on the artist we need, the information stored in the &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait/blob/master/src/App.js"&gt;object&lt;/a&gt; about the artist is transferred to our side menu, where paintings and more detailed information about the artist are displayed. It is important that the number of paintings is the same as it is prescribed in the &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait/blob/master/src/App.js"&gt;object&lt;/a&gt;. It is also necessary that the &lt;code&gt;menu closes&lt;/code&gt; independently when choosing the artist we need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/sVFwRufEGSe3lcQnwW/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/sVFwRufEGSe3lcQnwW/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;03. Side Menu&lt;/h3&gt;

&lt;p&gt;It remains to implement the side menu. It will be executed in the form of three columns. The &lt;code&gt;first&lt;/code&gt; column will display brief information about the artist, the &lt;code&gt;second&lt;/code&gt; will display paintings, and the &lt;code&gt;third&lt;/code&gt; column will display more detailed information from the artist's life.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l0qy4T9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl0kya4agmf1r842dief.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l0qy4T9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nl0kya4agmf1r842dief.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you need to display information about the artist who was selected in the top menu in these columns.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/0tI1AF0JgbQma1IBoH/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/0tI1AF0JgbQma1IBoH/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;THE END&lt;/h1&gt;

&lt;p&gt;Well, that's it. I apologize in advance for the fact that the information was submitted very crumpled. But on the other hand, as I wrote earlier, I was not going to teach anyone anything in this article. In this post, I just wanted to demonstrate my old work and nothing more special.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://kerthin.github.io/pradoMuseum-templateSait/#"&gt;&lt;h1&gt;Full Prado Museum Demo&lt;/h1&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Kerthin"&gt;
        Kerthin
      &lt;/a&gt; / &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait"&gt;
        pradoMuseum-templateSait
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Site of the Prado Museum, for viewing paintings.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img width="100" src="https://res.cloudinary.com/practicaldev/image/fetch/s--XB84-geH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Kerthin/pradoMuseum-templateSaitREADMEimage/squirrelAppIcon.png" alt="Kerthin logo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img src="https://camo.githubusercontent.com/3aaee52aea7e26ea020e0c2bac3ea70c011c1cc0507999c2c8b91c121b7fe9ba/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6275696c642d70617373696e672d627269676874677265656e2e737667" alt="Build Status"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img src="https://camo.githubusercontent.com/0ef94bb3d6bdf5fec0c3f5452111c9dd1b2d4c82518f871f6da0dd27fce5910d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e706d2d76362e31342e342d626c75652e737667" alt="Version"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img src="https://camo.githubusercontent.com/e2c7bcf456840ac212cd09701b26b6d86ed89b7780dde7ef35aa3d5c2312af9b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e6f64652d7631302e31362e302d626c75652e737667" alt="Version"&gt;&lt;/a&gt; &lt;br&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img src="https://camo.githubusercontent.com/48f77fe8664a8ec9de43e0c8270fea0200eefc7e1776ad651eb83237fa93d64d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7265706f25323073697a652d3734322e352532304d422d677265656e2e737667" alt="Size"&gt;&lt;/a&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;&lt;img src="https://camo.githubusercontent.com/4dd77986971920e34ba97e1e158d20878f1cd18c7a581903ef4bca2e730e1e0d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f70726f6a65637425323076657273696f6e2d76302e382d626c75652e737667" alt="Version"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;p&gt;The template is a site for viewing the works of great artists represented in the famous Prado Museum. You can also find out information about the painting and the artist himself.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To launch the app
&lt;ul&gt;
&lt;li&gt;download the repository;&lt;/li&gt;
&lt;li&gt;log in to the downloaded repository using the command line or terminal;&lt;/li&gt;
&lt;li&gt;enter the command line 'npm run start' or 'serve-s build' and go to the address specified in the terminal.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Note that the project was made using the CREATE REACT APP.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://kerthin.github.io/pradoMuseum-templateSait/" rel="nofollow"&gt;Demo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
Use technology.&lt;/h4&gt;
&lt;p&gt;The following technologies were used to create this project:&lt;/p&gt;
&lt;h3&gt;
Software platform&lt;/h3&gt;
&lt;p&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;
    &lt;img width="260px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--gtGFTBEX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Kerthin/pradoMuseum-templateSaitREADMEimage/technology/nodejs-1.svg"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h3&gt;
Libraries&lt;/h3&gt;
&lt;p&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;
    &lt;img width="260px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vNAXIytz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Kerthin/pradoMuseum-templateSaitREADMEimage/technology/react.svg"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h3&gt;
Package manager&lt;/h3&gt;

&lt;p&gt;
  &lt;a href="https://github.com/Kerthin/pradoMuseum-templateSait#"&gt;
    &lt;img width="144px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--A76ceuua--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/Kerthin/pradoMuseum-templateSaitREADMEimage/technology/npm.svg"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;h4&gt;
The repository of this project is divided into several sections:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;src&lt;/code&gt; - this repository is intended for files with the help of which the project is being developed. It is from this repository that all project files are compiled;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;docs&lt;/code&gt; - a repository that stores all compiled code with all media‚Ä¶&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/Kerthin/pradoMuseum-templateSait"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;br&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thank you for your attention. I hope that each of you has your favorite artist, whose works you can endlessly admire.&lt;/p&gt;

&lt;p&gt;See you all later.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/HAhv0X86V7nzi/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/HAhv0X86V7nzi/giphy.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>css</category>
    </item>
    <item>
      <title>Rails application boilerplate for fast MVP development</title>
      <author>Alexey Poimtsev (lord/emperor)</author>
      <pubDate>Fri, 06 Aug 2021 18:47:42 +0000</pubDate>
      <link>https://dev.to/alec/rails-application-boilerplate-for-fast-mvp-development-1ccb</link>
      <guid>https://dev.to/alec/rails-application-boilerplate-for-fast-mvp-development-1ccb</guid>
      <description>&lt;p&gt;Hey, Everyone!&lt;br&gt;
I'd like to share with you my ruby on rails templates, which i've created to speedup MVP development for &lt;a href="https://progress-engine.com/en"&gt;my company&lt;/a&gt; clients. I've tried to create a template with most useful features and best app development practices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-inside"&gt;
  &lt;/a&gt;
  What's inside
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;ruby on rails application template &lt;/li&gt;
&lt;li&gt;bootstrap or tailwind.css frontend frameworks with scaffold templates &lt;/li&gt;
&lt;li&gt;.gitignore file&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://code.visualstudio.com/"&gt;VSCode&lt;/a&gt; configuration files&lt;/li&gt;
&lt;li&gt;postgresql database connector&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://purgecss.com/"&gt;purge.css&lt;/a&gt; to cleanup stylesheets&lt;/li&gt;
&lt;li&gt;timezone detection with &lt;a href="https://github.com/iansinnott/jstz"&gt;jstz&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;typescript for frontend&lt;/li&gt;
&lt;li&gt;Procfile to run app, webpacker and sidekiq&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mperham/sidekiq"&gt;Sidekiq&lt;/a&gt; for background jobs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ankane/strong_migrations"&gt;strong_migrations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;authentication with &lt;a href="https://github.com/heartcombo/devise"&gt;devise&lt;/a&gt; and &lt;a href="https://github.com/michaelbanfield/devise-pwned_password"&gt;devise-pwned_password&lt;/a&gt; + google auth&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ankane/pretender"&gt;pretender&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;authorization with &lt;a href="https://github.com/varvet/pundit"&gt;pundit&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;role management with &lt;a href="https://github.com/RolifyCommunity/rolify"&gt;rolify&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;ability to ban user account&lt;/li&gt;
&lt;li&gt;pre-configured generators&lt;/li&gt;
&lt;li&gt;SEO tools - &lt;a href="https://github.com/kpumuk/meta-tags"&gt;meta-tags&lt;/a&gt;, &lt;a href="http://github.com/kjvarga/sitemap_generator"&gt;sitemap_generator&lt;/a&gt; and &lt;a href="https://github.com/norman/friendly_id"&gt;friendly_id&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;I18n tools - &lt;a href="http://github.com/svenfuchs/rails-i18n"&gt;rails-i18n&lt;/a&gt; and &lt;a href="https://github.com/glebm/i18n-tasks"&gt;i18n-tasks&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;rspec and cucumber for testing&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://mailgun.com"&gt;Mailgun&lt;/a&gt; integration for email notifications&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rubocop/rubocop/"&gt;rubocop&lt;/a&gt; for code style validations&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Shopify/better-html"&gt;better_html&lt;/a&gt; and &lt;a href="https://github.com/Shopify/erb-lint"&gt;erb-lint&lt;/a&gt; for erb linting&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/flyerhzm/bullet"&gt;bullet&lt;/a&gt; to prevent N+1 problems&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/presidentbeef/brakeman"&gt;brakeman&lt;/a&gt; and &lt;a href="https://github.com/postmodern/bundler-audit"&gt;bundler-audit&lt;/a&gt; as security scanners&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/DamirSvrtan/fasterer"&gt;fasterer&lt;/a&gt; for performance optimization&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rweng/pry-rails"&gt;pry-rails&lt;/a&gt; and &lt;a href="https://github.com/amazing-print/amazing_print"&gt;amazing_print&lt;/a&gt; for better rails console&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/AaronLasseigne/active_interaction"&gt;active_interaction&lt;/a&gt; to make controllers thin&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://viewcomponent.org/"&gt;view_component&lt;/a&gt; as a replacement for partials&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jnunemaker/flipper"&gt;flipper&lt;/a&gt; with Flipper UI to enable &lt;a href="https://boringrails.com/articles/feature-flags-simplest-thing-that-could-work/"&gt;flag management&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ankane/ahoy"&gt;ahoy&lt;/a&gt;, &lt;a href="https://github.com/ankane/ahoy_email"&gt;ahoy_email&lt;/a&gt; and &lt;a href="https://github.com/ankane/blazer"&gt;blazer&lt;/a&gt; for business intelligence&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/excid3/noticed"&gt;noticed&lt;/a&gt; for notifications&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ctran/annotate_models"&gt;annotate&lt;/a&gt; for annotations&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/plentz/lol_dba"&gt;lol_dba&lt;/a&gt; for indexing&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ankane/lockbox"&gt;lockbox&lt;/a&gt; and &lt;a href="https://github.com/ankane/blind_index"&gt;blind_index&lt;/a&gt; for email fields encryption&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/rack/rack-attack"&gt;rack-attack&lt;/a&gt; to prevent bruteforce and DDoS attacks &lt;/li&gt;
&lt;li&gt;
&lt;a href="http://www.capistranorb.com"&gt;capistrano&lt;/a&gt; with plugins for deployment&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ankane/authtrail"&gt;authrail&lt;/a&gt; to track login attempts&lt;/li&gt;
&lt;li&gt;announcements (new/fix/update) for all users&lt;/li&gt;
&lt;li&gt;flash helper&lt;/li&gt;
&lt;li&gt;referral system&lt;/li&gt;
&lt;li&gt;landing page&lt;/li&gt;
&lt;li&gt;custom error pages&lt;/li&gt;
&lt;li&gt;profiles controller&lt;/li&gt;
&lt;li&gt;admin and customer dashboards&lt;/li&gt;
&lt;li&gt;users administration with search&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-possible-will-be-added-later"&gt;
  &lt;/a&gt;
  What (possible) will be added later
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;add API-only template&lt;/li&gt;
&lt;li&gt;update with rails &lt;a href="https://github.com/ankane/production_rails"&gt;production best practices&lt;/a&gt;, &lt;a href="https://github.com/ankane/secure_rails"&gt;security best practices&lt;/a&gt; and &lt;a href="https://github.com/eliotsykes/rails-security-checklist"&gt;rails-security-checklist&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add tools from &lt;a href="https://github.com/evilmartians/terraforming-rails"&gt;evil martians tollbox&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;test and add &lt;a href="https://github.com/thesp0nge/dawnscanner"&gt;dawnscanner&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/flyerhzm/rails_best_practices"&gt;rails_best_practices&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/github/secure_headers"&gt;secure_headers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/arkadiyt/ssrf_filter"&gt;ssrf_filter&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/devise-security/devise-security"&gt;devise-security&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://hotwire.dev/"&gt;hotwire&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/ankane/mailkick"&gt;mailkick&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/jhawthorn/discard"&gt;discard&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/markets/invisible_captcha"&gt;invisible_captcha&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/roidrage/lograge"&gt;lograge&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/ankane/hypershield"&gt;hypershield&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/jenseng/hair_trigger"&gt;hairtrigger&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/brianhempel/active_record_union"&gt;active_record_union&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/scenic-views/scenic"&gt;scenic&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/Shopify/identity_cache"&gt;identity_cache&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;move to &lt;a href="https://github.com/huacnlee/rails-settings-cached"&gt;rails-settings-cached&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;move to &lt;a href="https://github.com/jnicklas/turnip"&gt;turnip&lt;/a&gt; from cucumber&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/ankane/searchjoy"&gt;searchjoy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/djezzzl/database_consistency"&gt;database_consistency&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/toptal/database_validations"&gt;database_validations&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/amatsuda/traceroute"&gt;traceroute&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/palkan/isolator"&gt;isolator&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/evilmartians/lefthook"&gt;lefthook&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;a href="https://github.com/prontolabs/pronto"&gt;pronto&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;add clicks and registrations stats to referral system&lt;/li&gt;
&lt;li&gt;add feedback feature&lt;/li&gt;
&lt;li&gt;add monitoring and analytics tools&lt;/li&gt;
&lt;li&gt;add A11y&lt;/li&gt;
&lt;li&gt;add deployments tools&lt;/li&gt;
&lt;li&gt;add documentation (howto's, best practices, curated list of libraries)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can check it here - &lt;a href="https://github.com/alec-c4/kickstart"&gt;https://github.com/alec-c4/kickstart&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And i'll be happy for your feedback and PR's.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>tailwindcss</category>
      <category>bootstrap</category>
      <category>template</category>
    </item>
    <item>
      <title>JavaScript Fundamentals</title>
      <author>Dani Schuhman</author>
      <pubDate>Fri, 06 Aug 2021 18:06:55 +0000</pubDate>
      <link>https://dev.to/dani8439/javascript-fundamentals-1875</link>
      <guid>https://dev.to/dani8439/javascript-fundamentals-1875</guid>
      <description>&lt;p&gt;Learning to code is hard. But it can also be incredibly rewarding. Creating access to that learning is something that I am incredibly passionate about. Everyone should learn to code, even just a little, in order to have a basic understanding of how the web works. Although, I should point out that I am convinced that the internet is probably held together by three gorilla's in a trench coat, who use only a roll of duct tape, having a basic understanding of the fundamentals of a language like JavaScript is incredibly important. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-javascript"&gt;
  &lt;/a&gt;
  What is JavaScript?
&lt;/h2&gt;

&lt;p&gt;MDN defines JavaScript as a &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript"&gt;"a scripting language that enables you to create dynamically updating content, control multimedia, animate images, and pretty much everything else. (Okay, not everything, but it is amazing what you can achieve with a few lines of JavaScript code.)"&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Okay, but what does that mean? And how can we use it? Well, in order to dive right into the world of JavaScript, you don't need to have a code editor running on your computer. The easiest way is to open up the JavaScript console in your chrome browser. You can do that by pressing Command + Option + J on a Mac, or Ctrl + Shift + J on a Windows/Linux system. &lt;/p&gt;

&lt;p&gt;JavaScript allows us to store values inside of variables, perform operations, run code that responds to events on a web page (such as clicking or scrolling, etc), and so much more! &lt;/p&gt;

&lt;p&gt;As we go through the definitions, try playing around in the console, entering the information as we go along. One of the first things to learn about learning to code, is how important repetition is. You will learn so much more by coding along with this, rather than reading it alone. Your fingers and your brain will develop muscle memory and know what to type before you type it as it becomes more familiar, and very soon you'll turn into a coding genius! Okay, maybe not a genius, but certainly someone who isn't as initially baffled by what the heck all this stuff means then you were initially. Trust me. &lt;/p&gt;

&lt;p&gt;I'm certainly not going to cover everything, I hope to write multiple articles on this, but think of this as the first foray of many into the world of JavaScript. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-value"&gt;
  &lt;/a&gt;
  What is a Value?
&lt;/h2&gt;

&lt;p&gt;A value is one of the most basic and important units of information in programming. A value is a piece of data. One reason why it's important, is because we can store data/a value inside of a variable, and then access it later. &lt;/p&gt;

&lt;p&gt;Think of a variable like the old school card catalogues at the library. Long before the days of computers, the easiest way to go and find a book, was to research in a card catalogue a reference number, which would then go and allow us to find the book wherever it lived within the vast library shelves. So long as we know the reference number of the book, we can always find it. If we always know the name of a variable, we can always find its value.&lt;/p&gt;

&lt;p&gt;Conventions in JavaScript mean when naming a variable, we use something called camelCase. Rather than write out a value as &lt;code&gt;this_is_my_very_long_and_non_descriptive_value_name&lt;/code&gt;, we would write it out as &lt;code&gt;myHopefullyDescriptiveName&lt;/code&gt;. camelCase is written without spaces, and looks like the humps of a camel.&lt;/p&gt;

&lt;p&gt;Variables are so important, because rather than go through and manually change wherever our variable exists, we can just change it once, where it's declared, and with the magic of programming, every other place a variable is referenced in our code will then update the variable's value. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-types"&gt;
  &lt;/a&gt;
  Data Types
&lt;/h2&gt;

&lt;p&gt;Everything in JavaScript is either an object, or a primitive. &lt;/p&gt;

&lt;p&gt;And there are seven different primitive Data types which include:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Number - floating point numbers. Every number has decimal points, even if we write it as &lt;code&gt;23&lt;/code&gt; it's actually &lt;code&gt;23.00&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Strings - a sequence of characters, used for text, always put between quotations. &lt;code&gt;"this is a string!"&lt;/code&gt; &lt;code&gt;'this is also a string!'&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Boolean - Logical type, that can only be &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Undefined - value taken by a variable that has not yet been assigned, is empty, therefore is &lt;code&gt;undefined&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;Null - Also means an empty value. &lt;/li&gt;
&lt;li&gt;Symbol - value that is unique and cannot be changed. &lt;/li&gt;
&lt;li&gt;BigInt - Larger integers than numbers can hold.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Because JavaScript has dynamic typing, when we declare a variable using either &lt;code&gt;const&lt;/code&gt; or &lt;code&gt;let&lt;/code&gt;, JavaScript will identify the data type for you. Now that certainly comes in handy, doesn't it? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#declaring-variables-with-raw-const-endraw-and-raw-let-endraw-"&gt;
  &lt;/a&gt;
  Declaring Variables with &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; were introduced in ES6. If you look at code written before 2015, you will see variables declared with &lt;code&gt;var&lt;/code&gt;. That's now considered bad practice, so don't do it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-let-endraw-keyword"&gt;
  &lt;/a&gt;
  &lt;code&gt;let&lt;/code&gt; keyword
&lt;/h3&gt;

&lt;p&gt;We use the &lt;code&gt;let&lt;/code&gt; keyword to define variables, whose value will change later. &lt;/p&gt;

&lt;p&gt;There's nothing wrong with declaring a variable with &lt;code&gt;let&lt;/code&gt;, and to reassign its value later on. Things change, data changes, like people. Your favorite band might've been Pink Floyd or Led Zeppelin when you were in elementary school and going through a serious stage, but now that you are an adult and much more serious, it's obviously BTS. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;let myFavoriteBand = "BTS"&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-const-endraw-keyword"&gt;
  &lt;/a&gt;
  &lt;code&gt;const&lt;/code&gt; keyword
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;const&lt;/code&gt; or constant, is a variable whose value we do not wish to change, or mutate. It is why &lt;code&gt;const&lt;/code&gt; is referred to as immutable. Once it is defined, that's it. Because &lt;code&gt;const&lt;/code&gt; is immutable, we cannot define it with an empty value. It has to have something. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;const myEyeColor = "Brown"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Try declaring &lt;code&gt;const myEyeColor&lt;/code&gt; in the console, but without a value. You will get back an error, &lt;code&gt;Uncaught SyntaxError: Missing initializer in const declaration&lt;/code&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-operators"&gt;
  &lt;/a&gt;
  Basic Operators
&lt;/h2&gt;

&lt;p&gt;Operators allow us to transform values, or combine multiple values. &lt;/p&gt;

&lt;p&gt;There are a lot of categories of operators: mathematical, comparison, logical etc... &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mathematical-operators"&gt;
  &lt;/a&gt;
  Mathematical Operators
&lt;/h3&gt;

&lt;p&gt;We have the addition, subtraction, division, remainder and multiplication. &lt;br&gt;
&lt;code&gt;+ - / % *&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typeof-operator"&gt;
  &lt;/a&gt;
  Typeof Operator
&lt;/h3&gt;

&lt;p&gt;The Typeof Operator is pretty self explanatory, in that it tells you what type of information your variable is. &lt;/p&gt;

&lt;p&gt;Let's try it out. Try declaring a variable in the console. Let's say &lt;code&gt;number = 2&lt;/code&gt;. Then type, &lt;code&gt;typeof(number)&lt;/code&gt; into the console and see what happens. With the magic of JavaScript, you'll see that 2 is a &lt;code&gt;"number"&lt;/code&gt;. It will even change the color when it inputs that information back. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#assignment-operators"&gt;
  &lt;/a&gt;
  Assignment Operators
&lt;/h3&gt;

&lt;p&gt;We have equals, plus equals, minus equals, multiply equals, increment, and decrement. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;=, +=, -=, *=, ++, --&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;With the &lt;code&gt;+=&lt;/code&gt; operand, if you see something declared as &lt;code&gt;x += y&lt;/code&gt; it's shorthand for &lt;code&gt;x = x + y&lt;/code&gt;. This is applicable to all the &lt;code&gt;-= *=&lt;/code&gt; operators too. &lt;/p&gt;

&lt;p&gt;The increment and decrement operators either increase, or decrease our value. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comparison-operators"&gt;
  &lt;/a&gt;
  Comparison Operators
&lt;/h3&gt;

&lt;p&gt;We use these to produce boolean values of &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. Or as you'll hear in reference to JavaScript truthy or falsy values. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Comparison operators see if something is less than &lt;code&gt;&amp;lt;&lt;/code&gt;, greater than &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt; less than or equals, or greater than or equals &lt;code&gt;&amp;gt;=&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;And even though I am an adult, I still see those signs as an alligator eating the numbers. You're never too old not to. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#template-literals"&gt;
  &lt;/a&gt;
  Template Literals
&lt;/h2&gt;

&lt;p&gt;What is a template literal? If you've looked at JavaScript code, and felt a little confused, undoubtedly you've run into something that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;My favorite color is ${color}.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A template literal, or template string allows us to use a string, and something referred to as an embedded expression. &lt;/p&gt;

&lt;p&gt;You write template literals using the backtick key on your computer, &lt;code&gt;and anything that is found within the dollar sign and curly braces&lt;/code&gt;${}` is a variable that is being interpolated. &lt;/p&gt;

&lt;p&gt;So if we went into our console, and defined goingOn, say as: &lt;br&gt;
&lt;code&gt;const color = "Blue"&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;And then input our sentence, we get back: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;"My favorite color is Blue."&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;JavaScript is interpolating what we've already defined our variable as, and inserting it into the string for us. Isn't that amazing? &lt;/p&gt;

&lt;p&gt;You can also use backticks to write multiple lines of code as well. Just hit enter to write on multiple lines: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;This is &lt;br&gt;
${someCode}&lt;br&gt;
I wish to write.&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ifelse-statements"&gt;
  &lt;/a&gt;
  If/Else Statements
&lt;/h2&gt;

&lt;p&gt;An if/else statement is called a control structure, and allows us to have control over what code is being executed. &lt;/p&gt;

&lt;p&gt;As you'll learn as you dive deeper into the world of JavaScript, is that it doesn't execute linearly. In fact, it can do some pretty interesting stuff in terms of asynchronous and synchronous coding. But that's a little bit too complicated for a beginner. &lt;/p&gt;

&lt;p&gt;For now now that we can determine what runs, and when. &lt;/p&gt;

&lt;p&gt;The basic structure of an if/else statement is as follows: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;if (conditionWeAreChecking) {&lt;br&gt;
    if conditionWeAreChecking evaluates to true, then we run the block of code inside of the curly braces. &lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You don't need to have an else statement attached to an if statement. Although, it is typical that you will see if else statements like below: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;if (conditionWeAreChecking) {&lt;br&gt;
    some code we want to run if true&lt;br&gt;
} else {&lt;br&gt;
    run this code if the the condition evaluates to false. &lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Another important thing to remember, is that anything we define within the block, or curly braces, is not available outside of the block. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;code&gt;const hour = 18 &lt;br&gt;
let greeting;&lt;br&gt;
if (hour &amp;gt; 12) {&lt;br&gt;
greeting = "Good evening!"&lt;br&gt;
} else {&lt;br&gt;
greeting = "Good morning!" &lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;code&gt;&lt;/code&gt;&lt;br&gt;
If we input that into the console, we'll see `"Good evening!" outputted. Try playing around with and changing the hour, and see what happens. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This is only the tip of the iceberg in terms of JavaScript's capabilities. There is a lot more when it comes to learning the fundamentals. I hope for those who may have stumbled upon this article, it's helped to explain some of the very basic principles that has built such a powerful language as JavaScript. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Simple Multi-Vendor Website with Django [Download]</title>
      <author>Vijay Thapa</author>
      <pubDate>Fri, 06 Aug 2021 17:35:37 +0000</pubDate>
      <link>https://dev.to/vijaythapa/simple-multi-vendor-website-with-django-download-l67</link>
      <guid>https://dev.to/vijaythapa/simple-multi-vendor-website-with-django-download-l67</guid>
      <description>&lt;p&gt;This is a simple MultiVendor e-commerce website built with Django (Python) and Stripe is added as payment processor.&lt;/p&gt;

&lt;p&gt;In this website, Vendors (Stores) can register and add their products.&lt;/p&gt;

&lt;p&gt;And Users can visit the product and order by paying with Debit/Credit Card (Stripe is Used).&lt;/p&gt;

&lt;p&gt;Then Vendor gets the email notification about the order and should deliver the product to the customer based on the address details.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/vijaythapa"&gt;Free Software Development Courses&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-this-project"&gt;
  &lt;/a&gt;
  Features of this Project
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#a-admin-users-can"&gt;
  &lt;/a&gt;
  A. Admin Users Can
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Manage Category (Add, Update, Filter and Delete)&lt;/li&gt;
&lt;li&gt;Manage Products (Add, Update, Filter and Delete)&lt;/li&gt;
&lt;li&gt;Manage Users (Update, Filter and Delete)&lt;/li&gt;
&lt;li&gt;Manage Orders (View and Process)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#b-vendors-can"&gt;
  &lt;/a&gt;
  B. Vendors Can
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Add Products&lt;/li&gt;
&lt;li&gt;Update Profile&lt;/li&gt;
&lt;li&gt;Gets Notification When an Order is made by Users&lt;/li&gt;
&lt;li&gt;Get Orders and Manage Them&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#c-users-can-can"&gt;
  &lt;/a&gt;
  C.  Users Can Can
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Add to Cart&lt;/li&gt;
&lt;li&gt;Pay with Debit/Credit Card and Order&lt;/li&gt;
&lt;li&gt;While Checkout, User should give the address to deliver&lt;/li&gt;
&lt;li&gt;Get Email Notification about the confirmation of the order&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#donate"&gt;
  &lt;/a&gt;
  Donate
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://bit.ly/support-vijay-thapa"&gt;PayPal&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.buymeacoffee.com/vijaythapa"&gt;Buy me a Coffee  ‚òïÔ∏è&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Donate by wire transfer:&lt;/strong&gt; E-Mail at &lt;em&gt;&lt;a href="mailto:donate@vijaythapa.com"&gt;donate@vijaythapa.com&lt;/a&gt;&lt;/em&gt; for wire transfer details. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-install-and-run-this-project"&gt;
  &lt;/a&gt;
  How to Install and Run this project?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-Requisites:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install Git Version Control&lt;br&gt;
[ &lt;a href="https://git-scm.com/"&gt;https://git-scm.com/&lt;/a&gt; ]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install Python Latest Version&lt;br&gt;
[ &lt;a href="https://www.python.org/downloads/"&gt;https://www.python.org/downloads/&lt;/a&gt; ]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install Pip (Package Manager)&lt;br&gt;
[ &lt;a href="https://pip.pypa.io/en/stable/installing/"&gt;https://pip.pypa.io/en/stable/installing/&lt;/a&gt; ]&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Alternative to Pip is Homebrew&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. Create a Folder where you want to save the project&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Create a Virtual Environment and Activate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Install Virtual Environment First&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  pip install virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Create Virtual Environment&lt;/p&gt;

&lt;p&gt;For Windows&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  python -m venv venv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For Mac&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  python3 -m venv venv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Activate Virtual Environment&lt;/p&gt;

&lt;p&gt;For Windows&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  source venv/scripts/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For Mac&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  source venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;3. Clone this project&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  git clone https://github.com/vijaythapa333/simple-multivendor-site.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then, Enter the project&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  cd simple-multivendor-site
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;4. Install Requirements from 'requirements.txt'&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt;  &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;5. Add the hosts&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Got to settings.py file &lt;/li&gt;
&lt;li&gt;Then, On allowed hosts, Add [‚Äò*‚Äô].
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;ALLOWED_HOSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;No need to change on Mac.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Now Run Server&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Command for PC:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;runserver&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Command for Mac:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;python3&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;runserver&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;7. Login Credentials&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create Super User (Admin)&lt;/p&gt;

&lt;p&gt;Command for PC:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  python manage.py createsuperuser
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Command for MAC:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$  python3 manage.py createsuperuser
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then Add Email, Username and Password&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#for-sponsor-or-projects-enquiry"&gt;
  &lt;/a&gt;
  For Sponsor or Projects Enquiry
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Email - &lt;a href="mailto:hi@vijaythapa.com"&gt;hi@vijaythapa.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;LinkedIn - &lt;a href="https://www.linkedin.com/in/vijaythapa"&gt;vijaythapa&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#download-from-here"&gt;
  &lt;/a&gt;
  Download from Here
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vijaythapa333"&gt;
        vijaythapa333
      &lt;/a&gt; / &lt;a href="https://github.com/vijaythapa333/simple-multivendor-site"&gt;
        simple-multivendor-site
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Simple Multi Vendor E-Commerce Website using Python Django.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Also if you want "E-Commerce Project with Payment Integration", follow the article below&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/vijaythapa" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CoW4EAif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6WgiwKdk--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/294578/85d82f47-8baa-4903-bcf3-ecb2d1b9e878.jpeg" alt="vijaythapa"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/vijaythapa/django-ecommerce-website-jewelry-shop-download-3117" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Django eCommerce Website, Jewelry Shop (Download)&lt;/h2&gt;
      &lt;h3&gt;Vijay Thapa „Éª Jun 19 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#django&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


</description>
      <category>django</category>
      <category>python</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>July: Forem Twitch Events Roundup üëæ</title>
      <author>Christina Gorton</author>
      <pubDate>Fri, 06 Aug 2021 17:26:51 +0000</pubDate>
      <link>https://dev.to/devteam/july-forem-twitch-events-roundup-e5j</link>
      <guid>https://dev.to/devteam/july-forem-twitch-events-roundup-e5j</guid>
      <description>&lt;p&gt;In July, Nick Taylor and I were joined by 8 awesome guests! This is a round up of all the wonderful guests who joined us.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#walkthrough-wednesday-with-ben-hong"&gt;
  &lt;/a&gt;
  Walkthrough Wednesday with Ben Hong
&lt;/h2&gt;

&lt;p&gt;Ben, staff developer experience engineer at Netlfiy, joined us to talk about knowledge management systems and note taking with apps like Obsidian.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/omTggcS7k-g"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Places to follow Ben:&lt;br&gt;
&lt;a href="https://twitter.com/bencodezen"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.twitch.tv/bencodezen"&gt;Twitch&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#walkthrough-wednesday-with-james-q-quick"&gt;
  &lt;/a&gt;
  Walkthrough Wednesday with James Q. Quick
&lt;/h2&gt;

&lt;p&gt;James Quick joined Nick Taylor to discuss DevRel, authentication in the Jamstack, content creation and more!&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Cgp-5eWjO_8"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;Places to follow James:&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.jamesqquick.com"&gt;James' Website&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/jamesqquick"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/c/jamesqquick"&gt;YouTube&lt;/a&gt; channel&lt;br&gt;
&lt;a href="https://learnbuildteach.com"&gt;learnbuildteach Discord channel&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#devcode-school-mash-up"&gt;
  &lt;/a&gt;
  DEV/Code School Mash up
&lt;/h2&gt;

&lt;p&gt;We were joined by the Code School crew for a special DEV/Code School mash up on thePracticalDev Twitch stream with our guests Jonan Scheffler, Carmen Kolodziej, Randel Moore, and Danielle Thomspon. We answered questions on entering tech, navigating mentorships, being a junior on the team, connecting with folks in tech, and more. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ha691P-bA58"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;How to find Randel:&lt;br&gt;
&lt;a href="https://twitter.com/CodingMoore"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/randelmoore/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
Twitch: CodingMoore&lt;br&gt;
Github: CodingMoore&lt;/p&gt;

&lt;p&gt;How to Find Danielle: &lt;br&gt;
Twitter/Twitch:/GitHub:  &lt;a class="mentioned-user" href="https://dev.to/danitcodes"&gt;@danitcodes&lt;/a&gt;
&lt;br&gt;
&lt;a href="//www.linkedin.com/in/danielle-thompson74"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How to Find Carmen:&lt;br&gt;
&lt;a href="https://twitter.com/carmenkolohe"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/carmenkolohe"&gt;Github&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.twitch.tv/carmenkolohe"&gt;Twitch&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.polywork.com/carmenkolohe"&gt;Polywork&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/carmenkolohe/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How to Find Jonan:&lt;br&gt;
&lt;a href="https://twitter.com/thejonanshow"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.twitch.tv/thejonanshow"&gt;Twitch&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#walkthrough-wednesday-with-fernando-valverde-and-josh-puetz"&gt;
  &lt;/a&gt;
  Walkthrough Wednesday with Fernando Valverde and Josh Puetz
&lt;/h2&gt;

&lt;p&gt;Our coworkers Fernando Valverde and Josh Puetz joined us to discuss the Forem iOS app. We talked about why we have an app, the work that went into creating it, what features to expect in the future and more.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Q0LVviE5gB4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Places to follow Fernando:&lt;br&gt;
&lt;a href="https://dev.to/fdoxyz"&gt;DEV&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/fdoxyz"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Places to follow Josh:&lt;br&gt;
&lt;a href="https://dev.to/joshpuetz"&gt;DEV&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/joshpuetz"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks to all our viewers who joined the streams and chatted with us this month! &lt;/p&gt;

&lt;p&gt;Be sure to follow the &lt;a href="https://www.twitch.tv/thepracticaldev"&gt;ThePracticalDev Twitch&lt;/a&gt; channel to be notified when future streams begin and check out all the great guests we have joining us every Wednesday this month. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Our August guests are:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/CerchieLucia"&gt;Lucia Cerchie&lt;/a&gt;, Software Engineer at StepZen. We will talk about GraphQL and the challenges of creating a GraphQL API from aggregated data.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/khattakdev"&gt;Arsalan Khattak&lt;/a&gt;, Team Lead at &lt;a href="https://twitter.com/MLHacks"&gt;MLH Fellowship&lt;/a&gt;. We will talk about creating a back end with Fastify.io.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/laurieontech"&gt;Laurie Barth&lt;/a&gt;, Senior Software engineer at Netflix. We will talk about tech interviews from the perspective of those hiring and those looking for a new role. &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>opensource</category>
      <category>meta</category>
    </item>
    <item>
      <title>7 Pieces of Bad Advice for Women in Engineering Leadership </title>
      <author>Conor Bronsdon</author>
      <pubDate>Fri, 06 Aug 2021 17:03:13 +0000</pubDate>
      <link>https://dev.to/linearb/7-pieces-of-bad-advice-for-women-in-engineering-leadership-249l</link>
      <guid>https://dev.to/linearb/7-pieces-of-bad-advice-for-women-in-engineering-leadership-249l</guid>
      <description>&lt;p&gt;Judy Johnson, a software engineer with over 35 years of experience, wrote the following article for &lt;a href="https://devinterrupted.com/7-pieces-of-bad-advice-for-women-in-engineering-leadership/"&gt;Dev Interrupted&lt;/a&gt; so I thought share. Please enjoy!&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
Have you ever attended an event in which you were asked to give advice to someone starting something new (career, baby, wedding)? Whenever confronted with that question, my answer is ‚Äúdon‚Äôt take people‚Äôs advice.‚Äù Not because all advice is bad, but because all people are different. I am unique, and some advice applies to me, and some not. Here are some of the items people have advised me, and why they may, or may not work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. ‚ÄúDon‚Äôt be too technical‚Ä¶ or not technical enough.‚Äù&lt;/strong&gt; Both? Sure‚Ä¶ I cannot tell you how many times when functioning as a systems engineer, I was told, ‚ÄúYou know how developers are‚Ä¶‚Äù Well, yeah, I coded for many years. And how often do we hear that the stereotypical engineer should not be a manager because of social awkwardness or the inability to delegate? I feel that it helps a team to have someone with hands-on experience lead them ‚Äî somewhere in the middle is the best.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. ‚ÄúDon‚Äôt bring treats to the office.‚Äù&lt;/strong&gt; I can‚Äôt tell you how many articles say that if you bake cookies you‚Äôll never reach ‚Äúthe corner office.‚Äù Why not? I guess baking gives the impression of being a submissive woman. People play golf, collect baseball cards, even brew beer. It is a hobby. And I love to bake. I made the most amazing ginger molasses cookies for a birthday last year. (Recipe at the end of the article!) It is also a stress reduction technique for me. In a former job, we did a management simulation for a class. We found that one way to keep morale up was to feed your team. Overtime? Get pizzas! Celebrate birthdays and accomplishments! We did really well in that exercise (until we were confronted by a debilitating snowstorm). But if I‚Äôd listened to the bad advice of many people ‚Äî I wouldn‚Äôt bring treats to the office!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7HRxS5Lq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0es15sqefo31a2vzox3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7HRxS5Lq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0es15sqefo31a2vzox3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. ‚ÄúBe assertive.‚Äù&lt;/strong&gt; It is important to be assertive. And I am much more so than I was coming out of college. And maybe if I were better at saying no, I would not be writing this article‚Ä¶ However, as the adage goes, ‚Äúyou catch more flies with honey than you do with vinegar.‚Äù On another note, there is something to be said for allyships, or the ‚Äúgood cop/bad cop‚Äù method. If I can keep the team happy and engaged, and someone else in the management chain or my tech lead may sometimes need to help me get a point across, would that be a bad idea? It shows teamwork and trust. Don‚Äôt over-index on assertiveness at the expense of collaboration and learning.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. ‚ÄúShoot for the corner office.‚Äù&lt;/strong&gt; I have no desire to be in that space, figuratively or literally! I sit with my team and don‚Äôt mind interruptions (OK, maybe I need a ‚Äúusually‚Äù on the interruptions). The past few assignments, I have been lucky enough to have the ‚ÄúWal-Mart Greeter‚Äù desk, so I can be aware when people come by with issues, and I can experience the team banter. The idea of aiming at a corner office as a goal alienates you from team members.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. ‚ÄúWorking part-time hurts your career.‚Äù&lt;/strong&gt; I worked part-time for almost twenty years, and was home after every school day to make sure my daughters were fed, taken care of, and got their homework done. How did that affect my career? Well, I got fewer raises and fell behind my full-time colleagues. But I learned to multitask, I learned time management, and I ended up with two amazing strong daughters who followed in my footsteps to become engineers themselves. You get to decide what‚Äôs important for you ‚Äî and working long hours is not always the right thing for many people.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. ‚ÄúDon‚Äôt have interests outside of work.‚Äù&lt;/strong&gt; I am a big hockey fan, I read, I take nature walks and photos. I love live music, my favorite being metal. Again, how many stories do I have of people who think of me as a mellow music person (is it the cookies?) But, think about this, if you had a stressful day of work, and you are headed home in your car with the radio on, would it be more satisfying to hear, ‚ÄúYou Don‚Äôt Bring me Flowers‚Äù or ‚ÄúI Sleep with One Eye Open?‚Äù You can guess my answer! Focusing solely on work will not only detract from your ability to connect with colleagues, it‚Äôll create a life that you won‚Äôt fully enjoy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---PIqJQs2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5f1lgc5vpx3921893co.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---PIqJQs2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o5f1lgc5vpx3921893co.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. ‚ÄúLook like a manager.‚Äù&lt;/strong&gt; I will put it out there; not only am I female, but I am old, I am overweight, and I have blue hair. This is probably where I could go on a diversity rant. I‚Äôll just say that the more uniform your team is, the more likely you‚Äôre missing out on some important outside-the-box ideas and perspectives. It‚Äôs far more important to be good at what you do and a strong team leader than to look the part.&lt;/p&gt;

&lt;p&gt;So next time you give or take advice, or assume you know the job of someone you see in the office or the grocery store, think about what makes us, us; not what about us makes us who we or others think we should be. Appearances aren‚Äôt everything ‚Äî and listening to the wrong advice can be worse than not taking advice at all.&lt;br&gt;
 .&lt;br&gt;
 .&lt;br&gt;
 .&lt;br&gt;
&lt;strong&gt;As promised, the delicious cookie recipe:&lt;/strong&gt; &lt;a href="https://www.tasteofhome.com/recipes/lara-s-tender-gingersnaps/"&gt;Lara's Tender Gingersnaps&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ingredients:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1 cup packed brown sugar&lt;br&gt;
1‚Äì1/2 teaspoons ground ginger&lt;br&gt;
3/4 cup butter, melted&lt;br&gt;
1 teaspoon baking soda&lt;br&gt;
1 large egg, room temperature&lt;br&gt;
1 teaspoon ground cinnamon&lt;br&gt;
1/4 cup molasses&lt;br&gt;
1/2 teaspoon ground cloves&lt;br&gt;
2‚Äì1/4 cups all-purpose flour&lt;br&gt;
1/4 cup sugar&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Directions:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In a large bowl, beat brown sugar and butter until blended. Beat in egg and molasses. Combine the flour, ginger, baking soda, cinnamon and cloves; gradually add to brown sugar mixture and mix well (dough will be stiff). Cover and refrigerate for at least 2 hours.&lt;/p&gt;

&lt;p&gt;Preheat oven to 350¬∞. Shape dough into 1-in. balls. Roll in sugar. Place 2 in. apart on greased baking sheets.&lt;/p&gt;

&lt;p&gt;Bake until set, 9‚Äì11 minutes. Cool for 1 minute before removing from pans to wire racks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nutrition Facts:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1 cookie: 100 calories, 4g fat (2g saturated fat), 15mg cholesterol, 70mg sodium, 15g carbohydrate (9g sugars, 0 fiber), 1g protein.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;&lt;em&gt;This article was written exclusively for Dev Interrupted.com by Judy Johnson, an active member of the Dev Interrupted Discord community and participant on the Dev Interrupted podcast.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can listen to Judy‚Äôs awesome podcast episode here:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/5BVaEdZ3Cqrjd7nsyLL64p"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Or you can chat with Judy ‚Äî and 1500 other engineering leaders ‚Äî on the Dev Interrupted Discord. Come see for yourself why the Dev Interrupted Discord has emerged as the go-to community for developers, attracting the attention of CTOs and VPs of companies like Netflix, GitHub and Google. &lt;a href="https://discord.com/invite/devinterrupted"&gt;Join the community&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wtqVCfaB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AfShEHHU0HNmiQuw5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wtqVCfaB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2AfShEHHU0HNmiQuw5.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://devinterrupted.com/7-pieces-of-bad-advice-for-women-in-engineering-leadership/"&gt;https://devinterrupted.com&lt;/a&gt; on August 5, 2021.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>womenintech</category>
      <category>career</category>
      <category>leadership</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How to Level Up Your Engineering Skills with an AWS Certification</title>
      <author>Nicole Parisis</author>
      <pubDate>Fri, 06 Aug 2021 16:48:53 +0000</pubDate>
      <link>https://dev.to/giantmachines/how-to-level-up-your-engineering-skills-with-an-aws-certification-1n52</link>
      <guid>https://dev.to/giantmachines/how-to-level-up-your-engineering-skills-with-an-aws-certification-1n52</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0b3Y9Qsp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6donaovzsfes9is6tu85.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0b3Y9Qsp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6donaovzsfes9is6tu85.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This past winter, I took the AWS Developer Associate certification exam because I wanted to gain a deeper understanding of DevOps and the AWS platform. In this blog, I'll cover what the certification is and why a software engineer would want to get it, how I prepared, the most important topics to study, and some interesting things I learned.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-aws-developer-associate-certification"&gt;
  &lt;/a&gt;
  The AWS Developer Associate Certification
&lt;/h2&gt;

&lt;p&gt;For those who are not familiar with &lt;a href="https://aws.amazon.com/"&gt;Amazon Web Services&lt;/a&gt; (AWS), the simplest way to describe it is a cloud-based environment where you can host your website or application along with data and asset storage for things like photos, videos, and documents. And it extends beyond that to services for machine learning, video processing, analytics, and more.&lt;/p&gt;

&lt;p&gt;As of 2021, AWS is a very complex set of over 200 products and services. There are DevOps professionals who devote their entire careers just to AWS. But the certification I took is specifically geared towards software engineers who want to incorporate knowledge of AWS and DevOps principles into their everyday software-development work.&lt;/p&gt;

&lt;p&gt;So why would a software engineer want to get this certification? Because the paths of a DevOps professional and a software engineer cross when the application built by a software engineer is ready to be deployed. Having knowledge of AWS services allows you to build cloud-first applications and explore different deployment options, which can greatly impact the speed and efficiency of your application and the financial cost of hosting it. And decoupled service-based cloud applications are replacing monolith applications generally, so software developers need to have knowledge of these cloud-based services.&lt;/p&gt;

&lt;p&gt;So what is the certification exam? At the time of writing there are 6 general &lt;a href="https://aws.amazon.com/certification/"&gt;AWS certifications&lt;/a&gt; and 5 specialty AWS certifications for software engineers, DevOps professionals, Network security professionals, etc. Each certification has a suggested number of years of experience you should have before taking it. The Developer Associate exam was the best fit for me because I already had more than one year of experience using AWS, and I am a software engineer looking to incorporate the certification knowledge into my everyday work. Engineers with no prior knowledge of AWS could start with the Certified Cloud Practitioner certification and then move up to the Developer Associate certification.&lt;/p&gt;

&lt;p&gt;The exam has around 65 questions, all of which are multiple choice (some ask for one answer, and some ask you to select all that apply). The time limit was around 2 hours. You have the option to take the exam at home with a remote proctor who watches you through your camera or in-person at a local testing center. I took the exam during the COVID-19 pandemic, so I was glad they had an online version of the exam. At the time of writing, it costs $150 USD to take the exam (I used my Giant Machines education budget). The certification is valid for 3 years and then it will expire.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preparing-for-the-exam"&gt;
  &lt;/a&gt;
  Preparing for the Exam
&lt;/h2&gt;

&lt;p&gt;Hands-on experience is a must before taking any AWS certification exam. I had on-the-job training, but if your company is not using AWS there are many different courses and workshops available. One workshop a colleague of mine suggested was &lt;a href="https://www.udemy.com/course/aws-certified-associate-architect-developer-sysops-admin/"&gt;BackSpace Academy's AWS certification preparation course&lt;/a&gt; on Udemy.&lt;/p&gt;

&lt;p&gt;Reading the AWS documentation is also a must, but reading through all of it would probably take years and be painfully boring! A great way to know which parts of the documentation to study is to take practice exams on &lt;a href="https://www.whizlabs.com/aws-developer-associate/"&gt;WhizLabs&lt;/a&gt;. I purchased the practice exam package. I would take an exam, see which questions I got wrong, and then WhizLabs provided the correct answer and the link to specific areas of the AWS documentation that I needed to study. I also watched this &lt;a href="https://www.youtube.com/watch?v=RrKRN9zRBWs&amp;amp;t=39514s"&gt;YouTube video&lt;/a&gt; by &lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ"&gt;freeCodeCamp.org&lt;/a&gt;, but not all in one sitting because it is 12 hours long.&lt;/p&gt;

&lt;p&gt;As I mentioned earlier, AWS has over 200 services, but there are only 15 that you MUST know for the exam. These are &lt;a href="https://aws.amazon.com/dynamodb/"&gt;DynamoDB&lt;/a&gt;, &lt;a href="https://aws.amazon.com/lambda/"&gt;Lambda&lt;/a&gt;, &lt;a href="https://aws.amazon.com/api-gateway/"&gt;API Gateway&lt;/a&gt;, &lt;a href="https://aws.amazon.com/kms/"&gt;KMS&lt;/a&gt;, &lt;a href="https://aws.amazon.com/getting-started/projects/set-up-ci-cd-pipeline/"&gt;CI/CD&lt;/a&gt;, &lt;a href="https://aws.amazon.com/xray/"&gt;X-Ray&lt;/a&gt;, &lt;a href="https://aws.amazon.com/sqs/"&gt;SQS&lt;/a&gt; and &lt;a href="https://aws.amazon.com/sns"&gt;SNS&lt;/a&gt;, &lt;a href="https://aws.amazon.com/ecs"&gt;ECS&lt;/a&gt;, &lt;a href="https://aws.amazon.com/cognito/"&gt;Cognito&lt;/a&gt;, &lt;a href="https://aws.amazon.com/cloudwatch/"&gt;CloudWatch&lt;/a&gt;, &lt;a href="https://aws.amazon.com/elasticbeanstalk/"&gt;Elastic Beanstalk&lt;/a&gt;, &lt;a href="https://aws.amazon.com/iam/"&gt;IAM&lt;/a&gt;, &lt;a href="https://aws.amazon.com/vpc"&gt;VPC&lt;/a&gt;, &lt;a href="https://aws.amazon.com/ec2"&gt;EC2&lt;/a&gt;, &lt;a href="https://aws.amazon.com/s3/"&gt;S3&lt;/a&gt;, and R2D2. (Just kidding about the last one‚Äîthere are so many acronyms!) The service that has the most questions on the exam is DynamoDB, so make sure you are familiar with it inside and out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S63AaJjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/goaj0id61td1r8ped1yf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S63AaJjL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/goaj0id61td1r8ped1yf.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;em&gt;R2D2: Not the name of a real AWS service... yet.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-to-think-more-critically-about-architecture-and-pricing"&gt;
  &lt;/a&gt;
  Learning to Think More Critically About Architecture and Pricing
&lt;/h2&gt;

&lt;p&gt;The most interesting things I learned while studying for this certification were from the questions that start with the phrases "what is the most cost efficient way to..." and "what is the easiest way to..." Not only did I learn about an AWS service, I also learned about cost-saving techniques where you spin up and tear down services as needed, so you only pay for services that are being actively used. (Businesses love cost savings!) These types of questions also helped me learn to compare the different AWS services and choose those which best fit the needs of the business and the application.&lt;/p&gt;

&lt;p&gt;While studying, I also learned some very important application architecture design principles. For example, if you know that your application will need to process thousands of requests per minute, you should set up a &lt;a href="https://aws.amazon.com/sqs/"&gt;Simple Queue Service&lt;/a&gt; to hold incoming requests and have the application process a certain number of requests from the queue at a time. This will prevent your server from running out of CPU and crashing because it can't handle the load.&lt;/p&gt;

&lt;p&gt;I also learned about how AWS services can be used to support some interesting business models. Take, for example, a company that provides tier-based pricing for their service, meaning that if you want faster service you must pay more. The company set up two Simple Queue Service queues, and the lower-tier requests were sent to one queue and the higher-tier requests to the other queue. The application would then process the items in both queues, but when an item came into the higher-tier queue, it would take priority over the items in the lower-tier queue. As a result, the higher-tier items would be processed faster than the lower-tier items.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;My experience getting the AWS Developer Associate certification was a positive one. I feel like it helps me out in my current role as a senior software engineer at Giant Machines because it has given me the ability to make important application architecture decisions. I am also able to provide guidance to clients on how to obtain the best performing and most cost-effective architectural solutions. And having an AWS certification on your resume helps you become recognized as an expert in these sorts of complex architectural and deployment issues.&lt;/p&gt;

&lt;p&gt;I would love to hear from readers about your experience studying for and taking AWS (or other cloud providers') certification exams. Please leave a comment with the name of the certification exam you took. And it would be great if you could add a link to the study guide that you used, so others can research these options when they decide to take the exam. Feel free to ask questions regarding the exam as well.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>ü•≥Released v1.1 of my latest product - Focus Wall</title>
      <author>Ayan S</author>
      <pubDate>Fri, 06 Aug 2021 16:46:41 +0000</pubDate>
      <link>https://dev.to/madebyayan/release-v1-1-of-my-product-555k</link>
      <guid>https://dev.to/madebyayan/release-v1-1-of-my-product-555k</guid>
      <description>&lt;p&gt;Focus Wall is a tool that lets you keep all your todos right in your wallpaper.&lt;/p&gt;

&lt;p&gt;Since the initial release of Focus Wall, there have been a slew of changes made to it!&lt;/p&gt;

&lt;p&gt;The biggest of them being Notifications!&lt;/p&gt;

&lt;p&gt;You can now get notification for todos that have an upcoming deadline, so you never miss another deadline. Not only that, but you can also customize as to when you'd like to receive your notification, whether it be at the deadline, a few minutes prior or several days before it, it's all upto you!&lt;/p&gt;

&lt;p&gt;When  you're done with a task, you can now choose to hide it from the wallpaper so it doesn't distract you from the things that you need to do next.&lt;/p&gt;

&lt;p&gt;Along with these, a variety of new wallpaper backgrounds have been added so you can further customize the experience to your taste.&lt;/p&gt;

&lt;p&gt;You can also now see the number of number items in each lists with a glance so you know exactly how many things you need to focus on.&lt;/p&gt;

&lt;p&gt;Apart from these new features, several bugs that had been identified or reported have now been fixed to provide a better experience to you in your productivity journey.&lt;/p&gt;

&lt;p&gt;With these new changes to Focus Wall, a Lite version of the app has also been released for people who'd like to give it a try and dive into Focus Wall. You can check it out here: &lt;a href="https://madebyayan.itch.io/focuswall-lite"&gt;madebyayan.itch.io/focuswall-lite&lt;/a&gt;&lt;/p&gt;

</description>
      <category>update</category>
      <category>productivity</category>
      <category>todo</category>
      <category>wallpaper</category>
    </item>
    <item>
      <title>Deploy Strapi on AWS/GCP/Digital Ocean using Porter</title>
      <author>Trevor Shim</author>
      <pubDate>Fri, 06 Aug 2021 16:39:42 +0000</pubDate>
      <link>https://dev.to/porter/deploy-strapi-on-aws-gcp-digital-ocean-using-porter-185l</link>
      <guid>https://dev.to/porter/deploy-strapi-on-aws-gcp-digital-ocean-using-porter-185l</guid>
      <description>&lt;h1&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://porter.run"&gt;Porter&lt;/a&gt; is a Platform as a Service (PaaS) that runs in your own cloud provider. It brings the convenience of platforms like Heroku, Netlify, and Vercel into a cloud provider of your choice. Under the hood, Porter runs on top of a Kubernetes cluster but abstracts away its complexity to the extent that you don't even have to know that it's running on Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sl832hQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbk9cevvor7amkjygo05.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sl832hQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbk9cevvor7amkjygo05.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a quick guide on how to deploy &lt;a href="https://strapi.io"&gt;Strapi&lt;/a&gt; to a Kubernetes cluster in AWS/GCP/DO using Porter. This guide uses PostgresDB by default - to customize your database settings, modify the files in &lt;code&gt;/app/config/env/production&lt;/code&gt; in the &lt;a href="https://github.com/porter-dev/strapi"&gt;example repository&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#quick-deploy"&gt;
  &lt;/a&gt;
  Quick Deploy
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Create an account on &lt;a href="https://dashboard.getporter.dev"&gt;Porter&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.porter.run/docs/getting-started-with-porter-on-aws"&gt;One-click provision a Kubernetes cluster&lt;/a&gt; in a cloud provider of your choice, or &lt;a href="https://docs.porter.run/docs/cli-documentation#connecting-to-an-existing-cluster"&gt;connect an existing cluster&lt;/a&gt; if you have one already.&lt;/li&gt;
&lt;li&gt;Fork &lt;a href="https://github.com/porter-dev/strapi"&gt;this repository&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;From the &lt;a href="https://dashboard.getporter.dev/launch"&gt;Launch tab&lt;/a&gt;, navigate to &lt;strong&gt;Web Service &amp;gt; Deploy from Git Repository&lt;/strong&gt;. Then select the forked repository and &lt;code&gt;Dockerfile&lt;/code&gt; in the root directory.&lt;/li&gt;
&lt;li&gt;Configure the port to &lt;code&gt;1337&lt;/code&gt; and set environment variable to &lt;code&gt;NODE_ENV=production&lt;/code&gt;. Depending on your database settings, you might want to add more environment variables. More on this in the section below.&lt;/li&gt;
&lt;li&gt;Set the assigned resources to Strapi's &lt;a href="https://strapi.io/documentation/developer-docs/latest/setup-deployment-guides/deployment.html#general-guidelines"&gt;recommended settings&lt;/a&gt; (i.e. 2048Mi RAM, 1000 CPU), then hit deploy!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5-GYqXWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yem2y6d5gi4gik45on99.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5-GYqXWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yem2y6d5gi4gik45on99.png" alt="Screen Shot 2021-08-06 at 11.25.41 AM"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deploying-postgresdb"&gt;
  &lt;/a&gt;
  Deploying PostgresDB
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Strapi instance deployed through Porter connects to a PostgresDB by default. You can connect Strapi instance deployed on Porter to any external database, but it is also possible to connect to a database that is deployed on Porter. Follow &lt;a href="https://docs.getporter.dev/docs/postgresdb"&gt;this guide to deploy a PostgresDB instance to your cluster in one click&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;After the database has been deployed, navigate to the &lt;strong&gt;Environment Variables&lt;/strong&gt; tab of your deployed Strapi instance. Configure the following environment variables:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NODE_ENV=production
DATABASE_HOST=
DATABASE_PORT=5432
DATABASE_NAME=
DATABASE_USERNAME=
DATABASE_PASSWORD=
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To determine what the correct environment variables are in order to connect to the deployed database, &lt;a href="https://docs.getporter.dev/docs/postgresdb#connecting-to-the-database"&gt;see this guide&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#development"&gt;
  &lt;/a&gt;
  Development
&lt;/h1&gt;

&lt;p&gt;To develop, clone the &lt;a href="https://github.com/porter-dev/strapi"&gt;example repository&lt;/a&gt; to your local environment and run &lt;code&gt;npm install &amp;amp;&amp;amp; npm run develop;&lt;/code&gt; from the &lt;code&gt;app&lt;/code&gt; directory. Porter will automatically handle CI/CD and propagate your changes to production on every push to the repository.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#questions"&gt;
  &lt;/a&gt;
  Questions?
&lt;/h1&gt;

&lt;p&gt;Join the &lt;a href="https://discord.gg/FaaFjb6DXA"&gt;Porter Discord community&lt;/a&gt; if you have any questions or need help.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>cms</category>
      <category>strapi</category>
      <category>node</category>
    </item>
    <item>
      <title>Measuring Developers Isn‚Äôt Tyranny </title>
      <author>Nick Hodges</author>
      <pubDate>Fri, 06 Aug 2021 16:38:38 +0000</pubDate>
      <link>https://dev.to/linearb/measuring-developers-isn-t-tyranny-2nm5</link>
      <guid>https://dev.to/linearb/measuring-developers-isn-t-tyranny-2nm5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#measuring-developers-isnt-tyranny"&gt;
  &lt;/a&gt;
  Measuring Developers Isn‚Äôt Tyranny
&lt;/h2&gt;

&lt;p&gt;Informing someone that you want to ‚Äúmeasure‚Äù them is not a great way to start a conversation. Software developers, like all people, tend to look unfavorably upon having their performance closely measured. But measuring developers is one of the hottest trends for companies around the globe. So is it tyranny to measure people?&lt;/p&gt;

&lt;p&gt;People are quick to note that numbers don‚Äôt tell the whole story and can become defensive at the notion their productivity should be quantified somehow. This resistance can become even more entrenched when teams become stacked against each other.&lt;/p&gt;

&lt;p&gt;Many leaders ‚Äî &lt;a href="https://www.youtube.com/watch?v=mTYPIxG5Esc"&gt;like Netflix‚Äôs Kathryn Koehler &lt;/a&gt;‚Äî believe we should absolutely avoid stack ranking of individuals and teams. After all, the human elements of teams ‚Äî communication, coordination, leadership ‚Äî can all affect the speed or perceived productivity of a team or process, so how can you quantify that?&lt;/p&gt;

&lt;p&gt;Thankfully, plenty of tools exist to enable a data-driven approach to the development process. With the right approach, these tools can be used to enhance any individual‚Äôs or team‚Äôs performance. Beyond performance, when applied correctly, these tools can bring about more harmonious alignment between leadership and employees.&lt;/p&gt;

&lt;p&gt;But first, why do we measure?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-measure-at-all"&gt;
  &lt;/a&gt;
  Why measure at all?
&lt;/h2&gt;

&lt;p&gt;It‚Äôs important to remember that &lt;a href="https://refactoring.fm/p/why-you-should-measure-your-development"&gt;measuring is just a tool &lt;/a&gt;‚Äî it can be used for both good and for evil. An effective leadership team understands this basic fact. The cool thing about metrics is that they provide insight that might otherwise be difficult to obtain. Employees should note that good leadership will use metrics merely to inform their decisions, not solely drive them.&lt;/p&gt;

&lt;p&gt;As a basic rule, it is difficult to improve something that is not measured.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"I started with the really basic observation that I believe you cannot be sure that you‚Äôre improving something if you don‚Äôt measure it, right? I mean, think of trying to lose weight without weighing yourself."&lt;/em&gt; -Luca Rossi, from the &lt;a href="https://open.spotify.com/episode/3Rz970JfT6lYdAVNRZvRMz?si=wFgoIHxLTQWI6JBQJtZn9g&amp;amp;dl_branch=1"&gt;Dev Interrupted Podcast at 4:31&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/3Rz970JfT6lYdAVNRZvRMz"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Measuring creates a foundation ‚Äî a benchmark ‚Äî which can be built upon. Once this foundation is established, organizations can begin to set goals. If you can set goals, you can rally a team; and if you can rally a team, you can achieve your product goals. This all becomes easier when you adopt a quantitative approach to your process. Success flows from the foundational element that measuring provides.&lt;/p&gt;

&lt;p&gt;Lastly, there exists a psychological benefit to measuring: namely, that people implicitly understand that metrics which are measured are important. After all, no one measures something they don‚Äôt care about. That which leadership identifies as measurable naturally informs employees what metrics leadership thinks are important. The very act of deciding to measure something telegraphs your intentions. Inversely, the opposite is also true: people tend to believe what is not measured is not important.&lt;/p&gt;

&lt;p&gt;All of this means leadership should be careful to identify what metrics are important because they define your organization and its behavior.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-should-be-measured"&gt;
  &lt;/a&gt;
  What should be measured?
&lt;/h2&gt;

&lt;p&gt;First, an organization must decide what metrics are worthy and whether or not they are actionable. A lean approach is best here. Decide what does and does not matter to you, and then move confidently in that direction.&lt;/p&gt;

&lt;p&gt;So what metrics are worthy to an engineering team?&lt;/p&gt;

&lt;p&gt;There are many valid metrics which include things like &lt;em&gt;&lt;a href="https://linearb.io/blog/5-ways-to-deliver-and-accelerate-engineering-velocity/"&gt;Velocity&lt;/a&gt;&lt;/em&gt;, &lt;em&gt;&lt;a href="https://linearb.io/blog/what-is-branch-coverage/"&gt;Branch Coverage&lt;/a&gt;&lt;/em&gt;, and &lt;em&gt;&lt;a href="https://linearb.io/cycle-time/"&gt;Cycle Time&lt;/a&gt;&lt;/em&gt;, but one of the most interesting metrics we care about at LinearB is the Pull Request. In fact, &lt;a href="https://devinterrupted.com/pesky-pull-request-totally-worth-it/"&gt;it‚Äôs kind of our thing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A pull request has two major goals: the first is to improve the quality of code before you release it, while the second is to share knowledge between the team about the code base.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devinterrupted.com/pesky-pull-request-totally-worth-it/"&gt;Pull Requests are great&lt;/a&gt; because they let your team have control over what goes into git; they let people comment about what and why things were done a certain way; and they can serve as permanent documentation about a chunk of code that can be useful down the road.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hqXcpQj7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2Am32SNRAQP5f_WKIA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hqXcpQj7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/0%2Am32SNRAQP5f_WKIA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we at LinearB were to recommend one metric to start measuring, it would be Pull Request Size. Measuring PR Size ‚Äî and using that measurement to encourage smaller Pull Requests ‚Äî will help drastically lower Cycle Time. It will encourage all kinds of good behavior around code reviews, and it will prove that metrics can have a positive impact on business outcomes.&lt;/p&gt;

&lt;p&gt;Once you have identified the best metrics to track for your success, you will need to go about making sure they last. Here it is best to maintain a lean approach, avoiding large upfront investments of time or money.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-make-metrics-stick"&gt;
  &lt;/a&gt;
  How to make metrics stick
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yn3ZUVSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ma035yrvfkmlbjq1mapx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yn3ZUVSB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ma035yrvfkmlbjq1mapx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"And you should, as a leader, as a manager, you should make people feel that you care. There is no substitute for that."&lt;/em&gt; ‚Äî Luca Rossi, from the &lt;a href="https://open.spotify.com/episode/3Rz970JfT6lYdAVNRZvRMz?si=wFgoIHxLTQWI6JBQJtZn9g&amp;amp;dl_branch=1"&gt;Dev Interrupted Podcast at 21:10&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have all worked at a company where a change was decided, people were excited to see the change and then, after a couple of months, everyone has forgotten about it. Metrics are no different. Once a company makes the decision to align itself with a metric it must make the effort for it to last.&lt;/p&gt;

&lt;p&gt;It‚Äôs often best to start small. In the beginning, it is best to maintain a lean approach, avoiding large upfront investments of time or money. With small actionable change in mind, there are two ways to approach metrics adoption:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;In a &lt;strong&gt;top-down approach&lt;/strong&gt; you ‚Äòll want to speak with your senior developers early on. Give them strategic input to help them figure out the best way to implement metrics into your dev team. An engineering leader can then explain how the metrics fit into the company‚Äôs strategic direction and convey that message clearly to employees. It is important to get buy-in from your employees because they are the ones building value, and further discovering what can and should be measured. When done correctly, the top-down approach will have managers saying, ‚ÄúWow, I‚Äôve always wanted to measure this. Now I can.‚Äù&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In a &lt;strong&gt;bottom-up approach&lt;/strong&gt;, it‚Äôs all about making your team understand what you want to achieve. Provide them with the initiative to build value so they understand why and how they are being measured. For instance, most developers can relate to a bad pull request experience ‚Äî one that takes way too long or one that has a poor review and causes issues during production. People understand that a good code review should be both fast and accurate. So by starting small with a metric that is already understood, you will gain buy-in from your team. When done correctly, the bottom-up approach will have employees saying, ‚ÄúWow, we didn‚Äôt think we could measure this, and it‚Äôs actually valuable.‚Äù&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How you approach adjusting for change in the long-term is up to you. In an ideal world, both the top-down and bottom-up approaches would be utilized simultaneously.&lt;/p&gt;

&lt;p&gt;Most importantly, your people should know that you care and that you value their feedback.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bottom-line"&gt;
  &lt;/a&gt;
  Bottom Line
&lt;/h2&gt;

&lt;p&gt;To achieve future goals a development team should know where it started. Metrics provide that benchmark. They are a foundation on which future success and business alignment can be built.&lt;/p&gt;

&lt;p&gt;Furthermore, in engineering, just as in life, tiny improvements are staggering when tracked continuously over a period of months and years. These gains boost team confidence and collaboration.&lt;/p&gt;

&lt;p&gt;Because with continual improvement, people feel as if they are working within a team and working &lt;em&gt;as a team&lt;/em&gt;. When things go right, and everyone improves together, bonds are formed.&lt;/p&gt;

&lt;p&gt;And of course, if you want to learn more about &lt;a href="https://linearb.io/wp-content/uploads/2020/05/17-Metrics-for-Modern-Dev-Leaders.pdf"&gt;LinearB‚Äôs metrics &lt;/a&gt;or find out what our customers already know, you can &lt;a href="https://linearb.io/demo/?utm_source=Referrals&amp;amp;utm_medium=devinterrupted.com&amp;amp;utm_campaign=devinterrupted%20referrals"&gt;book a free demo of LinearB &lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I included a few quotes from Luca Rossi above. He has a great blog for those who are passionate about engineering. You can check it out here: &lt;a href="https://refactoring.fm/"&gt;https://refactoring.fm/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XxsGziL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0vtjbhh1fqf0binhjeu.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XxsGziL8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0vtjbhh1fqf0binhjeu.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you haven't already heard&lt;/strong&gt;, Dev Interrupted is hosting &lt;strong&gt;INTERACT&lt;/strong&gt;: An interactive, community-driven, digital conference on September 30th - by engineering leaders, for engineering leaders. 1 day, 10 speakers, 100s of engineers and engineering leaders, all free.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#register-now"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;Register Now&lt;/a&gt;
&lt;/h2&gt;

</description>
      <category>management</category>
      <category>motivation</category>
      <category>monitoring</category>
      <category>leadership</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 4, Summary of the week, Guidelines for Recursion and high-level questions.</title>
      <author>Aatmaj</author>
      <pubDate>Fri, 06 Aug 2021 16:36:35 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-4-summary-of-the-week-guidelines-for-recursion-and-high-level-questions-445</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-4-summary-of-the-week-guidelines-for-recursion-and-high-level-questions-445</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-study-principles-of-recursion-and-then-solve-questions-related-to-recursion-this-is-the-continuation-of-the-last-part-so-in-case-you-have-missed-that-one-make-sure-to-have-a-quick-check-here"&gt;
  &lt;/a&gt;
  Today we will study principles of recursion and then solve questions related to recursion. This is the continuation of the last part, so in case you have missed that one, make sure to have a quick check &lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-3-recursion-in-python-41ff"&gt;here&lt;/a&gt;
&lt;/h2&gt;




&lt;h3&gt;
  &lt;a href="#summary-of-the-week"&gt;
  &lt;/a&gt;
  Summary of the week-
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-1-user-defined-functions-1kg7"&gt;Day 1&lt;/a&gt; We learnt how to make user defined functions. User defined functions are custom  functions designed by the programmer. They provide code reusability and flexibility while solving complicated problems. All this was backed up with two sample questions and one conceptual exercise.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-2-returning-values-from-methods-4bhn"&gt;Day 2&lt;/a&gt; We learnt how to return values from functions. By breaking complicated operations into functions, we can make the code more compact and flexible. This is possible because we can return data-types back to the function call. Returning multiple values is invalid, but we can return a list which can hold the values. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/aatmaj/learning-python-intermediate-course-day-3-recursion-in-python-41ff"&gt;Day 3&lt;/a&gt; We studied recursion in Python. We implemented it by calling the function from inside it. We then solved some good questions related to recursion.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#guidelines-for-using-recursion"&gt;
  &lt;/a&gt;
  Guidelines for using recursion.
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Recursion is a tool to allow programmer to concentrate on the key step of an algorithm, without initially having to worry about how to couple that step with the others.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Recursion is basically breaking apart a problem into parts, solving a single part and the while problem gets solved magically. &lt;/p&gt;

&lt;p&gt;Consider an example. We want to find the shortest path to a city. So first, we find shortest paths to all it's neighboring cities, and then choose the route which is smallest. And how do we find the shortest path to the neighboring cities? Well in the same way! This is the beauty of recursion. We can address a complicated problem by making smaller replicas to the main problem on and forever! This is known as the travelling salesman problem, which we solved using recursion.&lt;/p&gt;

&lt;p&gt;We first start any problem by asking &lt;em&gt;"How can this problem be divided into parts?"&lt;/em&gt; Once we have a simple short step to solve a mini-problem of the same type, applying it to a larger problem is easy.&lt;/p&gt;

&lt;p&gt;Finally we need to decide a stopping rule to prevent the recursion from running indefinitely. For example in the above problem, we stop when we reach to the city from where we have to start.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#exercises"&gt;
  &lt;/a&gt;
  Exercises
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Greatest Common Divisor&lt;/em&gt; (GCD) of two positive integers is the largest integer that divides both of the two integers. Thus, the GCD of 8 and 12 is 4, the GCD of 9 and 18 is 9, and the GCD of 16 and 25 is 1. Write a recursive function namd &lt;code&gt;GCD (x,y)&lt;/code&gt; that implements this &lt;em&gt;division algorithm&lt;/em&gt;: if y=0, then the GCD of x and y is x; otherwise the GCD of x and y is the same as the GCD of y and x%y. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The binomial coefficients may be defined by the following recurrence relation, which is the idea of the pascal's triangle.&lt;br&gt;
&lt;code&gt;C(n,0)=1 and C(n,n)=1 for n&amp;gt;=0&lt;/code&gt;&lt;br&gt;
&lt;code&gt;C(n,k)=C(n-1,k)+C(n-1,k-1) for n&amp;gt;k&amp;gt;0&lt;/code&gt;&lt;br&gt;
Write a recursive function which will generate C(n,k) by using the above formula&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Ackermann's function&lt;/em&gt;, defined as follows, is a standered device to determine how well recursion is implemented in any device.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A(0,n)=n+1                for n&amp;gt;=0
A(m,0)=A(m-1,1)           for m&amp;gt;0
A(m,n)=A(m-1,A(m,n-1))    for m&amp;gt;0 and n&amp;gt;0 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Yes, the above exercises are a bit difficult. But the key is finding C(n,k) or A(m,n) and directly implementing it. The rest is just about when to stop the recursion conditions. All the best for solving them! Solving these exercises will make you all fluent with recursion and it's problem solving  principles.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#all-answers-here"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Aatmaj-Zephyr/Learning-Python"&gt;All Answers here&lt;/a&gt;
&lt;/h3&gt;




&lt;p&gt;&lt;em&gt;A bit about the course&lt;/em&gt;&lt;br&gt;
I know, I am going a bit slow for some of you.  But this is for the benifit of those who are here for the first time. This week was a gentle intro to user defined functions. In the coming weeks, I will cover all the details of the language. For those who already know coding basics, they can just skim through the blog and mull upon the exercises. The exercises provided will strengthen and reinforce the concepts. Moreover they are directly taken or similar to past coding tests from the interview panel...&lt;/p&gt;




&lt;p&gt;&lt;em&gt;Epilogue&lt;/em&gt;- We all know that neither me nor you have ever seen each other. Learning in remote environment is a difficult, and teaching is perhaps even more difficult. Teaching is never a one-way process. When a teacher teaches with pattern, he/she expects that the student must respond back. Either with doubts, remarks or nods of approval.&lt;br&gt;
But friends, being remote, we cannot interact with each other. The only way we can connect is through the comments below. So I urge everyone to comment on the posts. Currently I am in doubt whether you all are understanding me or not. Should I speed up the pace or maybe explain more clearly? I am not getting any feedback from you. Any doubts, discussions, remarks or even a simple hi from you is a great source of motivation for me. So I look forward to your comments below...üòä&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;For those who have not yet made account in Dev.to, you can have a free easy sign-up using your mail or GitHub accounts. I would suggest the budding developers to create your GitHub free account right away. You would require to register sooner or later anyways&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•&lt;br&gt;
Follow me on GitHub for updates.........&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 06 Aug 2021 16:36:16 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-2ek3</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-2ek3</guid>
      <description>&lt;p&gt;Hey there!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking back on your week, what was something you're proud of?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;All wins count ‚Äî big or small üéâ&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Trying out a fun new activity... or whatever else might spark joy ‚ù§Ô∏è &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Hope you have a fantastic weekend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/KEG5UtvXUD7WPIhhuy/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/KEG5UtvXUD7WPIhhuy/giphy.gif" alt="Astronaut striking a victory pose"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
  </channel>
</rss>
