<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Phaser.io Game Development  (Learning  Phaser.io in 2 weeks). Making a platformer game.</title>
      <author>FRADAR</author>
      <pubDate>Sun, 20 Jun 2021 15:51:43 +0000</pubDate>
      <link>https://dev.to/fradar/phaser-io-game-development-learning-phaser-io-in-2-weeks-making-a-platformer-game-ghn</link>
      <guid>https://dev.to/fradar/phaser-io-game-development-learning-phaser-io-in-2-weeks-making-a-platformer-game-ghn</guid>
      <description>&lt;p&gt;I have been learning phaser.io game development for the past 2 weeks. My goal is to make a full fledged platformer game in phaser only. &lt;/p&gt;

&lt;p&gt;Here is a sneak peek of how it will look like:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR/full/YzZaarP"&gt;https://codepen.io/FRADAR/full/YzZaarP&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the full collection of all my phaser.io games/tests.&lt;br&gt;
&lt;a href="https://codepen.io/collection/qOOQVr"&gt;https://codepen.io/collection/qOOQVr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any tips about phaser, please tell me about in the comments!&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>gamedev</category>
      <category>phaser</category>
      <category>showdev</category>
    </item>
    <item>
      <title>WASD knight | A 2d sidescroller rage game.</title>
      <author>FRADAR</author>
      <pubDate>Sun, 20 Jun 2021 15:33:06 +0000</pubDate>
      <link>https://dev.to/fradar/wasd-knight-a-2d-sidescroller-rage-game-12lo</link>
      <guid>https://dev.to/fradar/wasd-knight-a-2d-sidescroller-rage-game-12lo</guid>
      <description>&lt;p&gt;A 2D rage game.&lt;/p&gt;

&lt;p&gt;I dare you to take up the challenge to finish it.&lt;/p&gt;

&lt;p&gt;HOW TO PLAY:&lt;br&gt;
  Movement&lt;br&gt;
    W-Up&lt;br&gt;
    A-Left&lt;br&gt;
    D-Right&lt;br&gt;
    S-Down&lt;br&gt;
  Blocks&lt;br&gt;
    Walls(grey)-Walls are solid blocks that you cannot go through&lt;br&gt;
    Water(blue)-Water slows you down&lt;br&gt;
    Lava(red)-Lava will kill you if you touch it&lt;br&gt;
    Portal(blue-purple)-The portal will end the game if you touch it; you win!&lt;br&gt;
  Enemies&lt;br&gt;
    Green Slime-A green slime moves back and forth and will kill you if you touch it&lt;br&gt;
    Red Slime-A red slime does not kill you but it will stretch to push you&lt;br&gt;
    Summoned-A summoned will slowly move up and down many blocks and will kill you if you touch it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;P.S&lt;/em&gt; This is not my best work :)&lt;/p&gt;

&lt;p&gt;Try it here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR/full/WNpWvZN"&gt;https://codepen.io/FRADAR/full/WNpWvZN&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like my games? Wanna see more?&lt;br&gt;
Follow me here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR"&gt;https://codepen.io/FRADAR&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>gamedev</category>
      <category>javascript</category>
      <category>platformer</category>
    </item>
    <item>
      <title>Kubernetes Cluster Autoscaler With IRSA</title>
      <author>Vu Dao</author>
      <pubDate>Sun, 20 Jun 2021 15:23:14 +0000</pubDate>
      <link>https://dev.to/awscommunity-asean/kubernetes-cluster-autoscaler-with-irsa-3bg5</link>
      <guid>https://dev.to/awscommunity-asean/kubernetes-cluster-autoscaler-with-irsa-3bg5</guid>
      <description>&lt;p&gt;TL,DR&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#irsa-is-iam-role-for-service-account-this-post-shows-you-how-to-deploy-cluster-autoscaler-as-a-deployment-and-assign-irsa-for-it-to-provide-proper-permissions"&gt;
  &lt;/a&gt;
  &lt;strong&gt;IRSA is IAM Role for service account. This post shows you how to deploy Cluster Autoscaler as a deployment and assign IRSA for it to provide proper permissions.&lt;/strong&gt;
&lt;/h2&gt;



&lt;h2&gt;
  &lt;a href="#why-do-we-need-the-kubernetes-cluster-autoscaler"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why do we need The Kubernetes Cluster Autoscaler?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The Kubernetes Cluster Autoscaler (CA) is a popular Cluster Autoscaling solution maintained by SIG Autoscaling. While the HPA and VPA allow you to scale pods, CA is responsible for ensuring that your cluster has enough nodes to schedule your pods without wasting resources. It watches for pods that fail to schedule and for nodes that are underutilized. It then simulates the addition or removal of nodes before applying the change to your cluster. The AWS Cloud Provider implementation within Cluster Autoscaler controls the &lt;code&gt;.DesiredReplicas&lt;/code&gt; field of your EC2 Auto Scaling Groups.&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iPYcFXox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/autoscaling/img/architecture.png%3Fraw%3Dtrue"&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#whats-in-this-document"&gt;
  &lt;/a&gt;
  What’s In This Document
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#-What-is-Cluster-Autoscaler"&gt;What is Cluster Autoscaler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Apply-cluster-autoscaler-deployment-in-kube-system"&gt;Apply cluster autoscaler deployment in kube-system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Create-IAM-role-for-service-account"&gt;Create IAM role for service account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Annotate-the-EKS-service-account"&gt;Annotate the EKS service account)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Restart-the-cluster-autoscaler-pod-to-take-effect"&gt;Restart the cluster autoscaler pod to take effect&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Undestand-some-Parameters-in-Autoscaler"&gt;Undestand some Parameters in Autoscaler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Basic-Test-the-cluster-autoscaler"&gt;Basic Test the cluster-autoscaler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#what-is-cluster-autoscaler"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-What-is-Cluster-Autoscaler"&gt;What is Cluster Autoscaler&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Cluster Autoscaler is a tool that automatically adjusts the size of the Kubernetes cluster when one of the following conditions is true:

&lt;ul&gt;
&lt;li&gt;There are pods that failed to run in the cluster due to insufficient resources. Whenever this occurs, the Cluster Autoscaler will update the Amazon EC2 Auto Scaling group to increase the desired count, resulting in additional nodes in the cluster.&lt;/li&gt;
&lt;li&gt;There are nodes in the cluster that have been underutilized for an extended period of time and their pods can be placed on other existing nodes. Cluster Autoscaler will then decrease the desired count for the Auto Scaling group to scale in the number of nodes.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#apply-cluster-autoscaler-deployment-in-kubesystem"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Apply-cluster-autoscaler-deployment-in-kube-system"&gt;Apply cluster autoscaler deployment in kube-system&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;On AWS, Cluster Autoscaler utilizes Amazon EC2 Auto Scaling Groups to manage node groups. Cluster Autoscaler typically runs as a Deployment in your cluster.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Download &lt;code&gt;cluster-autoscaler-autodiscover.yaml&lt;/code&gt; file to update the command point to your EKS cluster and customize expected parameters such as Optimizing for Cost and Availability, Prevent Scale Down Eviction&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget https://raw.githubusercontent.com/kubernetes/autoscaler/master/cluster-autoscaler/cloudprovider/aws/examples/cluster-autoscaler-autodiscover.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Edit the cluster-autoscaler container command to replace  (including &amp;lt;&amp;gt;) with your cluster's name, and add the following options.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  --balance-similar-node-groups
  --skip-nodes-with-system-pods=false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How to run a cluster with nodes in multiples zones for HA. The flag &lt;code&gt;balance-similar-node-groups&lt;/code&gt; is intended to support this use case&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;skip-nodes-with-system-pods&lt;/code&gt; If true cluster autoscaler will never delete nodes with pods from kube-system (except for DaemonSet or mirror pods) we should avoid this for cost optimization.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;Check the files at some important fields

&lt;ul&gt;
&lt;li&gt;ServiceAccount&lt;/li&gt;
&lt;li&gt;Version of cluster autoscaler: &lt;code&gt;cluster-autoscaler:v1.17.3&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Command
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;            command:
            - ./cluster-autoscaler
            - --v=4
            - --stderrthreshold=info
            - --cloud-provider=aws
            - --skip-nodes-with-local-storage=false
            - --expander=least-waste
            - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,k8s.io/cluster-autoscaler/sel-eks-dev
            - --balance-similar-node-groups
            - --skip-nodes-with-system-pods=false
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Then we apply the yaml file and move to next step to create IRSA (IAM Role for service account) for the autoscaler deployment
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl get pod -n kube-system |grep autoscaler
cluster-autoscaler-68857f6759-cwd8b   1/1     Running   0          2d10h
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#create-iam-role-for-service-account"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Create-IAM-role-for-service-account"&gt;Create IAM role for service account&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Pre-requisite: EKS cluster with OpenID connect, IAM identity provider (Ref to &lt;a href="https://dev.to/vumdao/using-iam-service-account-instead-of-instance-profile-for-eks-pods-262p"&gt;Using IAM Service Account Instead Of Instance Profile For EKS Pods&lt;br&gt;
&lt;/a&gt; for how to)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Cluster Autoscaler requires the ability to examine and modify EC2 Auto Scaling Groups. We recommend using IAM roles for Service Accounts to associate the Service Account that the Cluster Autoscaler Deployment runs as with an IAM role that is able to perform these functions.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;First create the IAM role which is federated by IAM identiy provider and assumed by &lt;code&gt;sts:AssumeRoleWithWebIdentity&lt;/code&gt;, then attach policy to provide permission of autoscaling group for the role. Brief of CDK code in python3:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;iam_oic&lt;/code&gt; is the stack of creating IAM identity provider which is used OIDC as provider, &lt;code&gt;open_id_connect_provider_arn&lt;/code&gt; is its attribute from the stack.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br&gt;
  sel-eks-oic-autoscaler-sa&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    autoscaler_role = iam.Role(
        self, 'AutoScalerRole',
        role_name='sel-eks-oic-autoscaler-sa',
        assumed_by=iam.FederatedPrincipal(
            federated=f'{iam_oic.open_id_connect_provider_arn}',
            conditions={'StringEquals': string_like('kube-system', 'cluster-autoscaler')},
            assume_role_action='sts:AssumeRoleWithWebIdentity'
        )
    )

    asg_statement = iam.PolicyStatement(
        effect=iam.Effect.ALLOW,
        actions=[
            "autoscaling:DescribeAutoScalingGroups",
            "autoscaling:DescribeAutoScalingInstances",
            "autoscaling:DescribeLaunchConfigurations",
            "autoscaling:DescribeTags",
            "autoscaling:SetDesiredCapacity",
            "autoscaling:TerminateInstanceInAutoScalingGroup",
            "ec2:DescribeLaunchTemplateVersions"
        ],
        resources=['*'],
        conditions={'StringEquals': {"aws:RequestedRegion": "ap-northeast-2"}}
    )

    autoscaler_role.add_to_policy(asg_statement)
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;


Trust relationships looks like:


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "arn:aws:iam::123456789012:oidc-provider/oidc.eks.ap-northeast-2.amazonaws.com/id/&amp;lt;OIDC_PROVIDER_ID&amp;gt;"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "oidc.eks.ap-northeast-2.amazonaws.com/id/&amp;lt;OIDC_PROVIDER_ID&amp;gt;:sub": "system:serviceaccount:kube-system:cluster-autoscaler",
          "oidc.eks.ap-northeast-2.amazonaws.com/id/&amp;lt;OIDC_PROVIDER_ID&amp;gt;:aud": "sts.amazonaws.com"
        }
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;





&lt;ul&gt;
&lt;li&gt;Next step we annotate the EKS service account &lt;code&gt;cluster-autoscaler&lt;/code&gt; with this role&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;
  &lt;a href="#annotate-the-eks-service-account"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Annotate-the-EKS-service-account"&gt;Annotate the EKS service account&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Run the &lt;code&gt;kubectl&lt;/code&gt; command
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;kubectl annotate serviceaccounts -n kube-system cluster-autoscaler eks.amazonaws.com/role-arn=&amp;lt;IAM_role_arn_which_created_above&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Check the SA
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl describe sa cluster-autoscaler -n kube-system
Name:                cluster-autoscaler
Namespace:           kube-system
Labels:              k8s-addon=cluster-autoscaler.addons.k8s.io
                     k8s-app=cluster-autoscaler
Annotations:         eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/sel-eks-oic-autoscaler-sa
                     kubectl.kubernetes.io/last-applied-configuration:
                       {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"labels":{"k8s-addon":"cluster-autoscaler.addons.k8s.io","k8s-app"...
Image pull secrets:  &amp;lt;none&amp;gt;
Mountable secrets:   cluster-autoscaler-token-xxxxx
Tokens:              cluster-autoscaler-token-xxxxx
Events:              &amp;lt;none&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#restart-the-cluster-autoscaler-pod-to-take-effect"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Restart-the-cluster-autoscaler-pod-to-take-effect"&gt;Restart the cluster autoscaler pod to take effect&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl rollout restart deploy cluster-autoscaler -n kube-system
deployment.apps/cluster-autoscaler restarted
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#weve-done-setting-up-the-cluster-autoscaler-but-we-need-to-understand-some-parameters-in-autoscaler-for-better-choices-of-scalability-performance-availability-and-cost-optimization"&gt;
  &lt;/a&gt;
  We've done setting up the cluster autoscaler but we need to understand some parameters in autoscaler for better choices of Scalability, performance, availability and cost optimization.
&lt;/h2&gt;


&lt;h3&gt;
  &lt;a href="#undestand-some-parameters-in-autoscaler"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Undestand-some-Parameters-in-Autoscaler"&gt;Undestand some Parameters in Autoscaler&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;1. Spot instance:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Save up to 90% off the on-demand price, with the trade-off the Spot Instances can be interrupted at any time when EC2 needs the capacity back.&lt;/li&gt;
&lt;li&gt;To solve that we should select as many instance families as possible eg. M4, M5, M5a, and M5n instances all have similar amounts of CPU and Memory.&lt;/li&gt;
&lt;li&gt;The strategy --expander=least-waste is a good general purpose default, and if you're going to use multiple node groups for Spot Instance diversification (Read more &lt;a href="https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders"&gt;Expanders&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HdZ1t9lI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aws.github.io/aws-eks-best-practices/cluster-autoscaling/spot_mix_instance_policy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HdZ1t9lI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aws.github.io/aws-eks-best-practices/cluster-autoscaling/spot_mix_instance_policy.jpg"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Prevent Scale Down Eviction:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Some workloads are expensive to evict such as schedule running reports, cronjob to clear caches or doing backup. The Cluster Autoscaler will attempt to scale down any node under the scale-down-utilization-threshold, which will interrupt any remaining pods on the node. This can be prevented by ensuring that pods that are expensive to evict are protected by a label recognized by the Cluster Autoscaler.&lt;/li&gt;
&lt;li&gt;Ensure that: Expensive to evict pods have the annotation &lt;code&gt;cluster-autoscaler.kubernetes.io/safe-to-evict=false&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3. EBS Volumes:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;stateful applications such as database or cache which need high availability if sharded across multiple AZs using a separate EBS Volume for each AZ.&lt;/li&gt;
&lt;li&gt;Ensure that:

&lt;ul&gt;
&lt;li&gt;Node group balancing is enabled by setting balance-similar-node-groups=true.&lt;/li&gt;
&lt;li&gt;Node Groups are configured with identical settings except for different availability zones and EBS Volumes.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;



&lt;h3&gt;
  &lt;a href="#basic-test-the-clusterautoscaler"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Basic-Test-the-cluster-autoscaler"&gt;Basic Test the cluster-autoscaler&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;- Cluster Autoscaler will respect the minimum and maximum values of each Auto Scaling Group. It will only adjust the desired value.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- Cluster Autoscaler will attempt to determine the CPU, memory, and GPU resources provided by an Auto Scaling Group based on the instance type specified in its Launch Configuration or Launch Template. It will also examine any overrides provided in an ASG's Mixed Instances Policy. If any such overrides are found, only the first instance type found will be used&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- In my cluster, I setup the node groud capacity with max_size=2, min_size=1 and desized_size=1, combine with instance types (family type) which ensure the usage of CPU and MEM (r5a.xlarge and r5.xlarge)&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;


add_nodegroup_capacity


&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        eks_cluster.add_nodegroup_capacity(
            id="SelEksNodeGroup",
            capacity_type=eks.CapacityType.SPOT,
            desired_size=1,
            disk_size=20,
            instance_types=[ec2.InstanceType("r5a.xlarge"), ec2.InstanceType("r5.xlarge")],
            labels={'role': 'worker', 'type': 'stateless'},
            max_size=2,
            min_size=1,
            nodegroup_name='sel-eks-node-group',
            node_role=worker_role,
            subnets=ec2.SubnetSelection(subnet_type=ec2.SubnetType.PRIVATE)
        )
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ul&gt;





&lt;h3&gt;
  &lt;a href="#1-test-scaleup-node-when-scaling-out-all-services-by-setting-their-replicas-gt-0-the-clusterautoscaler-detects-the-need-of-more-node-to-add-more-worker"&gt;
  &lt;/a&gt;
  &lt;strong&gt;1. Test scaleup node: When scaling out all services by setting their replicas &amp;gt; 0 , the cluster-autoscaler detects the need of more node to add more worker.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;See its log&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  I0619 05:56:03.541547       1 scale_up.go:271] Pod dev/stream-58495b5bd6-xjnqk is unschedulable
  I0619 05:56:03.541564       1 scale_up.go:271] Pod dev/index-7b747bc884-7zgwh is unschedulable
  I0619 05:56:03.541570       1 scale_up.go:271] Pod dev/app-58565d7fbf-ptfpr is unschedulable
  I0619 05:56:03.541591       1 scale_up.go:271] Pod dev/nginx-5bbb4f5975-2tg2s is unschedulable
  I0619 05:56:03.541596       1 scale_up.go:271] Pod dev/react-index-sink-797f864767-d9tjg is unschedulable
  I0619 05:56:03.541643       1 scale_up.go:310] Upcoming 0 nodes
  I0619 05:56:03.547721       1 waste.go:57] Expanding Node Group eks-78bcedd4-7ade-c33a-yyyy-xxxxxxxx would waste 37.50% CPU, 79.46% Memory, 58.48% Blended
  I0619 05:56:03.547751       1 scale_up.go:431] Best option to resize: eks-78bcedd4-7ade-c33a-yyyy-xxxxxxxx
  I0619 05:56:03.547760       1 scale_up.go:435] Estimated 1 nodes needed in eks-78bcedd4-7ade-c33a-yyyy-xxxxxxxx
  I0619 05:56:03.550690       1 scale_up.go:539] Final scale-up plan: [{eks-78bcedd4-7ade-c33a-yyyy-xxxxxxxx 1-&amp;amp;gt;2 (max: 2)}]
  I0619 05:56:03.550716       1 scale_up.go:700] Scale-up: setting group eks-78bcedd4-7ade-c33a-yyyy-xxxxxxxx size to 2
  I0619 05:56:03.550746       1 auto_scaling_groups.go:219] Setting asg eks-78bcedd4-7ade-c33a-yyyy-xxxxxxxx size to 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;h3&gt;
  &lt;a href="#2-test-scale-down-node-by-scaling-down-all-services-ca-will-gradually-check-the-cluster-and-then-scaledown-the-node-by-set-the-node-to-raw-schedulingdisabled-endraw-and-update-auto-scaling-group"&gt;
  &lt;/a&gt;
  &lt;strong&gt;2. Test scale down node by scaling down all services. CA will gradually check the cluster and then scaledown the node by set the node to &lt;code&gt;SchedulingDisabled&lt;/code&gt; and update auto scaling group.&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;See the logs&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  I0619 07:11:46.774322       1 scale_down.go:462] Node ip-10-1-2-3.ap-northeast-2.compute.internal - cpu utilization 0.135204
  I0619 07:30:56.486073       1 static_autoscaler.go:428] ip-10-1-2-3.ap-northeast-2.compute.internal is unneeded since 2021-06-19 07:28:35.924053695 +0000 UTC m=+43.074848047 duration 2m20.561420527s
  I0619 07:38:38.637225       1 scale_down.go:716] ip-10-1-2-3.ap-northeast-2.compute.internal was unneeded for 10m2.712507047s
  I0619 07:38:38.637267       1 scale_down.go:944] Scale-down: removing empty node ip-10-1-2-3.ap-northeast-2.compute.internal
  I0619 07:38:38.637418       1 event.go:281] Event(v1.ObjectReference{Kind:"ConfigMap", Namespace:"kube-system", Name:"cluster-autoscaler-status", UID:"78191f9d-4d47-4caa-aa27-xxxxxxxx", APIVersion:"v1", ResourceVersion:"11189392", FieldPath:""}): type: 'Normal' reason: 'ScaleDownEmpty' Scale-down: removing empty node ip-10-1-2-3.ap-northeast-2.compute.internal
  I0619 07:38:38.648522       1 delete.go:102] Successfully added ToBeDeletedTaint on node ip-10-1-2-3.ap-northeast-2.compute.internal
  I0619 07:38:38.845888       1 auto_scaling_groups.go:277] Terminating EC2 instance: i-00744ddf549ac10f4
  I0619 07:38:38.845900       1 aws_manager.go:297] Some ASG instances might have been deleted, forcing ASG list refresh
  I0619 07:38:38.931723       1 auto_scaling_groups.go:351] Regenerating instance to ASG map for ASGs: [eks-78bcedd4-7ade-c33a-yyyy-xxxxxxxx]
  I0619 07:38:38.995577       1 event.go:281] Event(v1.ObjectReference{Kind:"ConfigMap", Namespace:"kube-system", Name:"cluster-autoscaler-status", UID:"78191f9d-4d47-4caa-aa27-xxxxxxxx", APIVersion:"v1", ResourceVersion:"11189433", FieldPath:""}): type: 'Normal' reason: 'ScaleDownEmpty' Scale-down: empty node ip-10-1-2-3.ap-northeast-2.compute.internal removed
  I0619 07:38:38.995605       1 event.go:281] Event(v1.ObjectReference{Kind:"Node", Namespace:"", Name:"ip-10-1-2-3.ap-northeast-2.compute.internal", UID:"e395f5bc-0dd0-4dac-825c-ae7cc5e6cd7e", APIVersion:"v1"
  , ResourceVersion:"11189391", FieldPath:""}): type: 'Normal' reason: 'ScaleDown' node removed by cluster autoscaler
  I0619 07:38:48.662382       1 pre_filtering_processor.go:66] Skipping ip-10-1-2-3.ap-northeast-2.compute.internal - node group min size reached
  I0619 07:38:48.662395       1 pre_filtering_processor.go:66] Skipping ip-10-3-153-87.ap-northeast-2.compute.internal - node group min size reached
  I0619 07:39:52.080232       1 node_tree.go:100] Removed node "ip-10-1-2-3.ap-northeast-2.compute.internal" in group "ap-northeast-2:\x00:ap-northeast-2b" from NodeTree
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Check the fleet for canceling the spot instance after scaling down&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KzGTdzcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/autoscaling/img/fleet.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KzGTdzcd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/autoscaling/img/fleet.png%3Fraw%3Dtrue" alt="Alt-Text"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#how-to-remove-spot-instance-from-cluster-manually"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;How to remove spot instance from cluster manually&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Some time cluster autoscaler cannot scale down the node due to eg.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;I0619 07:11:46.774431       1 cluster.go:107] Fast evaluation: node ip-10-1-2-3.ap-northeast-2.compute.internal cannot be removed: non-daemonset, non-mirrored, non-pdb-assigned kube-system pod present: aws-load-balancer-controller-597c675c8f-d79h5
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;To scaledown the node we can cordon the node and rollout restart all deployment/daemonset assign on the node, then let the cluster-autoscaler scaledonw the node.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you would like to replace a spot instance, flowing reference will help&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ec2spotworkshops.com/launching_ec2_spot_instances/cleanup.html"&gt;https://ec2spotworkshops.com/launching_ec2_spot_instances/cleanup.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ap-northeast-2.console.aws.amazon.com/ec2sp/v2/home?region=ap-northeast-2#/spot"&gt;https://ap-northeast-2.console.aws.amazon.com/ec2sp/v2/home?region=ap-northeast-2#/spot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;&lt;a href="#-Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Using Cluster Autoscaler is the best practice in your EKS cluster, one of the most benifit is COST.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
  &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7iMnjTiI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/autoscaling/img/reduce_bill.jpg%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7iMnjTiI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/autoscaling/img/reduce_bill.jpg%3Fraw%3Dtrue"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;- Refs:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.aws.amazon.com/eks/latest/userguide/cluster-autoscaler.html"&gt;https://docs.aws.amazon.com/eks/latest/userguide/cluster-autoscaler.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.github.io/aws-eks-best-practices/cluster-autoscaling/cluster-autoscaling/"&gt;https://aws.github.io/aws-eks-best-practices/cluster-autoscaling/cluster-autoscaling/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="https://dev.to/vumdao"&gt;🌠 Blog&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://github.com/vumdao/aws-eks-the-hard-way/blob/master/autoscaling"&gt;Github&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://stackoverflow.com/users/11430272/vumdao"&gt;stackoverflow&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/in/vu-dao-9280ab43/"&gt;Linkedin&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.linkedin.com/groups/12488649/"&gt;Group&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://www.facebook.com/CloudOpz-104917804863956"&gt;Page&lt;/a&gt;
  &lt;span&gt; · &lt;/span&gt;
  &lt;a href="https://twitter.com/VuDao81124667"&gt;Twitter 🌠&lt;/a&gt;
&lt;/h3&gt;

</description>
      <category>eks</category>
      <category>k8s</category>
      <category>cdk</category>
      <category>cdk8s</category>
    </item>
    <item>
      <title>Memory management using Smart Pointers in C++ - Part 1</title>
      <author>Pratik Parvati</author>
      <pubDate>Sun, 20 Jun 2021 15:22:24 +0000</pubDate>
      <link>https://dev.to/pratikparvati/memory-management-using-smart-pointers-in-c-part-1-4j2k</link>
      <guid>https://dev.to/pratikparvati/memory-management-using-smart-pointers-in-c-part-1-4j2k</guid>
      <description>&lt;h1&gt;
  &lt;a href="#memory-management-using-smart-pointers-in-c-part-1"&gt;
  &lt;/a&gt;
  Memory management using Smart Pointers in C++ - Part 1
&lt;/h1&gt;

&lt;p&gt;One of the major strengths and weaknesses of both C and C++ are pointers. C++ has many benefits of pointers but also several pitfalls if memory management is not performed correctly. Pointers require explicit management of the resources to which they refer.  For example, a pointer that holds the address of dynamically allocated memory retrieved using &lt;code&gt;new&lt;/code&gt; requires the programmer to release that memory using &lt;code&gt;delete&lt;/code&gt;; failing to do so results in dangling pointers or memory leaks which are difficult to find.&lt;/p&gt;

&lt;p&gt;A smart pointer provides a mechanism that automates the explicit management of a resource. A smart pointer, as opposed to a raw pointer, can manage the memory of the resource to which it points. It is a proxy for a raw pointer to the resource, and it looks and feels like a raw pointer. It supports the dereferencing &lt;code&gt;(*)&lt;/code&gt; and member by pointer &lt;code&gt;(-&amp;gt;)&lt;/code&gt; operators. A smart pointer resides on the stack; when it goes out of scope, its destructor deallocates the dynamic memory to which it points to. &lt;/p&gt;

&lt;p&gt;Smart pointers implement the object-oriented language idiom Resource Acquisition Is Initialization (&lt;a href="https://en.cppreference.com/w/cpp/language/raii"&gt;RAII&lt;/a&gt;). This idiom states that the resource is acquired at initialization time, i.e, when the memory for the pointer is created.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-should-we-use-smart-pointers"&gt;
  &lt;/a&gt;
  Why should we use Smart Pointers?
&lt;/h3&gt;

&lt;p&gt;Let’s look at this very simple piece of code that causes a memory leak.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ptr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;// Oops forgot to delete ptr&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When I use &lt;a href="https://valgrind.org/"&gt;Valgrind&lt;/a&gt; to check the binary for memory leaks; I got the following results.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;1562402&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; LEAK SUMMARY:
&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;1562402&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;    definitely lost: 80 bytes &lt;span class="k"&gt;in &lt;/span&gt;1 blocks
&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;1562402&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;    indirectly lost: 0 bytes &lt;span class="k"&gt;in &lt;/span&gt;0 blocks
&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;1562402&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;      possibly lost: 0 bytes &lt;span class="k"&gt;in &lt;/span&gt;0 blocks
&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;1562402&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;    still reachable: 0 bytes &lt;span class="k"&gt;in &lt;/span&gt;0 blocks
&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;1562402&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;         suppressed: 0 bytes &lt;span class="k"&gt;in &lt;/span&gt;0 blocks
&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;1562402&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;1562402&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; For lists of detected and suppressed errors, rerun with: &lt;span class="nt"&gt;-s&lt;/span&gt;
&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nv"&gt;1562402&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; ERROR SUMMARY: 1 errors from 1 contexts &lt;span class="o"&gt;(&lt;/span&gt;suppressed: 0 from 0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can clearly see that we leaked 80 bytes (4 bytes x 20) of memory because we did not run &lt;code&gt;delete&lt;/code&gt; on &lt;code&gt;ptr&lt;/code&gt; and it is quit difficult to manually keep track of all allocations and &lt;code&gt;delete&lt;/code&gt; them at the right time; especially when we have sufficiently large C++ project where objects are copied, moved and passed everywhere in the code.&lt;/p&gt;

&lt;p&gt;Let's look at another scenario of memory leak using raw pointers&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;someFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;MyClass&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;Validate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// memory leak&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;

     &lt;span class="c1"&gt;// ....&lt;/span&gt;

     &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;someOtherFunction&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
     &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Assuming the function &lt;code&gt;someFunction()&lt;/code&gt; is getting called infinite times and the &lt;code&gt;obj&lt;/code&gt; validation fails every time. This leads to the situations when programmers keep allocating new memory and do not lose any pointers to it, but keep pointers to objects that the program is not going to use anymore (dangling pointer). This is not formally a memory leak but leads to the same situation: &lt;em&gt;a program running out of memory&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Even if we use &lt;code&gt;new&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; pairs correctly we may encounter a scenario of memory leak. Lets look at the below example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;SomeMethod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="n"&gt;MyClass&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="n"&gt;SomeOtherMethod&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;      &lt;span class="c1"&gt;// it can throw an exception&lt;/span&gt;
   &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If an exception is thrown, the &lt;code&gt;obj&lt;/code&gt; object is never deleted. No matter how much we try, it is very difficult to free all dynamically allocated memory. Even if we can do that, it is often not safe from exceptions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deleting an Array With &lt;code&gt;delete&lt;/code&gt;&lt;/strong&gt; &lt;br&gt;
Creating temporary arrays of dynamic size is often necessary. After they are not required anymore, it is important to free the allocated memory. The C++ requires special &lt;code&gt;delete&lt;/code&gt; operator with &lt;code&gt;[]&lt;/code&gt; brackets, which is forgotten very easily. The &lt;code&gt;delete[]&lt;/code&gt; operator call destructors of all objects from an array along with deleting the memory allocated for an array. It is also incorrect to use the &lt;code&gt;delete&lt;/code&gt; operator without &lt;code&gt;[]&lt;/code&gt; brackets for an array, which results in undefined behaviour.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#we-should-avoid-using-heap-memory-as-much-as-possible"&gt;
  &lt;/a&gt;
  We should avoid using heap memory as much as possible
&lt;/h4&gt;

&lt;p&gt;And for these reasons, modern C++ avoids using heap memory as much as possible by declaring objects on the stack; when a resource-owning stack object goes out of scope, its destructor is automatically invoked.&lt;/p&gt;

&lt;p&gt;The following example shows a simple object &lt;code&gt;e&lt;/code&gt;. It is declared on the stack at function scope, and is destroyed at the end of the function block. The object &lt;code&gt;e&lt;/code&gt; owns no resources (such as heap-allocated memory) and hence no special code is needed in the &lt;code&gt;Entity&lt;/code&gt; destructor.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Entity&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;private:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="k"&gt;explicit&lt;/span&gt; &lt;span class="n"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// acquire&lt;/span&gt;
    &lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="n"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// release&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;functionUsingEntity&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Entity&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;// lifetime automatically tied to enclosing scope&lt;/span&gt;

    &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// automatic destruction and deallocation for e&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since C++11, there is a better way to write the previous example: by using a smart pointer from the standard library. The smart pointer manages the allocation and deletion of memory that it owns. The use of a smart pointer eliminates the need for an explicit destructor in the &lt;code&gt;Entity&lt;/code&gt; class.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#types-of-smart-pointers"&gt;
  &lt;/a&gt;
  Types of Smart Pointers
&lt;/h3&gt;

&lt;p&gt;There are 3 types of smart pointers:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Unique Pointer (&lt;code&gt;std::unique_ptr&amp;lt;&amp;gt;&lt;/code&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Exclusive ownership&lt;/li&gt;
&lt;li&gt;Lightweight pointers&lt;/li&gt;
&lt;li&gt;Destroys the object when goes out of scope&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Shared Pointer (&lt;code&gt;std::shared_ptr&amp;lt;&amp;gt;&lt;/code&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Shared ownership&lt;/li&gt;
&lt;li&gt;Destroys the object when last reference is released&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Weak Pointer (&lt;code&gt;std::weak_ptr&amp;lt;&amp;gt;&lt;/code&gt;)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Breaks cyclic references&lt;/li&gt;
&lt;li&gt;used with &lt;code&gt;shared_ptr&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt;  auto pointer (&lt;code&gt;std::auto_ptr&lt;/code&gt;) has been depreciated after the inclusion of move semantics in C++11. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#unique-pointers-raw-stduniqueptrltgt-endraw-"&gt;
  &lt;/a&gt;
  Unique Pointers (&lt;code&gt;std::unique_ptr&amp;lt;&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;

&lt;p&gt;With a &lt;code&gt;unique_ptr&lt;/code&gt;, you can point to an allocated object, and when the &lt;code&gt;unique_ptr&lt;/code&gt; goes out of scope, the pointed-to object gets deleted,and this happens regardless of how we leave the function, either by a return or an exception being thrown somewhere. &lt;br&gt;
For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;functionWithUniquePointer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ptr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;MyClass&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ptr owns the MyClass resource&lt;/span&gt;
    &lt;span class="n"&gt;ptr&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;               &lt;span class="c1"&gt;// tell the object to do something&lt;/span&gt;
    &lt;span class="n"&gt;do_somethingelse&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;                &lt;span class="c1"&gt;// might throw an exception&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// ptr gets destroyed; destructor deletes the MyClass object resource&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#using-raw-uniqueptr-endraw-like-a-raw-pointers"&gt;
  &lt;/a&gt;
  using &lt;code&gt;unique_ptr&lt;/code&gt; like a raw pointers
&lt;/h4&gt;

&lt;p&gt;Since the dereferencing &lt;code&gt;(*)&lt;/code&gt; and member by pointer &lt;code&gt;(-&amp;gt;)&lt;/code&gt; operators are overloaded in &lt;code&gt;unique_ptr&lt;/code&gt; class, we can use &lt;code&gt;unique_ptr&lt;/code&gt; as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// used arrow operator similar to raw pointers&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;do_something&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// used dereferencing operator similar to raw pointers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also check the null-ness of the pointer similar to raw pointers as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;nullptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Freeing the memory sets the &lt;code&gt;unique_ptr&lt;/code&gt; to &lt;code&gt;nullptr&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;nullptr&lt;/span&gt;
&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#exclusive-ownership-of-object-for-raw-uniqueptr-endraw-"&gt;
  &lt;/a&gt;
  Exclusive ownership of object for &lt;code&gt;unique_ptr&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;To be the only owner of a resource means that only the respective &lt;code&gt;unique_ptr&lt;/code&gt; pointers are responsible for deleting the object when it is no longer needed (i.e, responsible about the lifetime of the object). This implies that nobody else can use the object after its lifetime ended and for the same reason the &lt;code&gt;std::unique_ptr&lt;/code&gt; has practically no overhead and has very predictable behavior.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;unique_ptr&lt;/code&gt; maintains sole ownership of the resource, one can not make a copy of it and for the type safety reasons the copy constructor and copy assignment operators are deleted. Instead we can transfer/move ownership of the pointer from the one pointer object to another using &lt;strong&gt;move semantics&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// p1 owns the Thing&lt;/span&gt;
&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// error - copy construction is not allowed.&lt;/span&gt;
&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;p3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// an empty unique_ptr;&lt;/span&gt;
&lt;span class="n"&gt;p3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;p1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// error, copy assignment is not allowed.&lt;/span&gt;

&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;up1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;up2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Thing&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;up1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;up2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// ownership transfer using move semantics is allowed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#passing-raw-stduniqueptr-endraw-as-function-argument"&gt;
  &lt;/a&gt;
  Passing &lt;code&gt;std::unique_ptr&lt;/code&gt; as function argument
&lt;/h5&gt;

&lt;p&gt;A &lt;code&gt;unique_ptr&lt;/code&gt; has to be moved while passing it to a function that takes a &lt;code&gt;unique_ptr&lt;/code&gt; by value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;cp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="c1"&gt;//...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;//call foo&lt;/span&gt;

&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;up&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_unique&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"some string"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//!ERROR. No copy allowed.&lt;/span&gt;

&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;//OK. Explicit move&lt;/span&gt;

&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;make_unique&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"some string"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;//OK. Implicit move&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#using-raw-stduniqueptr-endraw-with-standard-containers"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;std::unique_ptr&lt;/code&gt; with Standard Containers
&lt;/h3&gt;

&lt;p&gt;We can fill a Standard Container with &lt;code&gt;unique_ptr&lt;/code&gt;s that own objects, and the ownership then effectively resides in the container.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You must fill the container by supplying &lt;em&gt;rvalue&lt;/em&gt; &lt;code&gt;unique_ptr&lt;/code&gt;s, so the ownership transfers into the&lt;br&gt;
&lt;code&gt;unique_ptr&lt;/code&gt; in the container&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you erase an item in the container, you are destroying the &lt;code&gt;unique_ptr&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you transfer ownership out of container items, the empty &lt;code&gt;unique_ptr&lt;/code&gt;s stay in the container.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#custom-deleters-for-raw-stduniqueptr-endraw-"&gt;
  &lt;/a&gt;
  Custom deleters for &lt;code&gt;std::unique_ptr&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The complete type of &lt;code&gt;std::unique_ptr&lt;/code&gt; has a second template parameter, its deleter that has a default type &lt;code&gt;std::default_delete&amp;lt;T&amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Deleter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;default_delete&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;unique_ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A &lt;code&gt;unique_ptr&lt;/code&gt; can be declared and initialized with a user-provided custom deleter that is called to destroy the object resource.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;template&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomDeleter&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="k"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;()(&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"freeing memory using 'delete'...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;template&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="nc"&gt;T&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;CustomDeleter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;T&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="k"&gt;template&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typename&lt;/span&gt; &lt;span class="nc"&gt;U&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="k"&gt;operator&lt;/span&gt;&lt;span class="p"&gt;()(&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"freeing memory using 'delete[]'...&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]{&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CustomDeleter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;upi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CustomDeleter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{});&lt;/span&gt; &lt;span class="c1"&gt;// using unique_ptr with raw pointer is discouraged&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="n"&gt;CustomDeleter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;upari&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CustomDeleter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{});&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CustomDeleter is passed as an argument to constructor and stored as a member of a &lt;code&gt;unique_ptr&lt;/code&gt; object. A deleter can be a function object, a function pointer, or a Lambda. The above example uses function object as second parameter.&lt;/p&gt;

&lt;p&gt;Very simple example for customer deleter using function pointer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;deleter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ptr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Function pointer deleter&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;ptr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;up_fptr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;deleter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;custom deleter using lambda&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="c1"&gt;// With a capture-less lambda. &lt;/span&gt;
     &lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;"Lambda deleter&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
     &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;unique_ptr&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;decltype&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;up_lambda&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;l&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The most common use of &lt;code&gt;unique_ptr&lt;/code&gt; is as a pretty fool-proof way of making sure an object allocated in function gets deleted. However, there are situations in which ownership of objects needs to be transferred around but always remains in one place at a time; &lt;code&gt;unique_ptr&lt;/code&gt; gives you way to represent this concept directly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's Next?
&lt;/h3&gt;

&lt;p&gt;In the next article, I will write about &lt;code&gt;std::shared_ptr&lt;/code&gt; and &lt;code&gt;std::weak_ptr&lt;/code&gt; in detail; also, I will talk about these smart pointers in terms of performance.&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>smartpointers</category>
    </item>
    <item>
      <title>7 Awesome GitHub Repositories for JavaScript developers.  A Thread 👇</title>
      <author>Manitej ⚡</author>
      <pubDate>Sun, 20 Jun 2021 15:13:51 +0000</pubDate>
      <link>https://dev.to/manitej/7-awesome-github-repositories-for-javascript-developers-a-thread-1nkk</link>
      <guid>https://dev.to/manitej/7-awesome-github-repositories-for-javascript-developers-a-thread-1nkk</guid>
      <description>&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7k_spQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1395959712168824833/Y8lcLyJZ_normal.jpg" alt="Insha profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Insha
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @insharamin
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      7 Awesome GitHub Repositories for JavaScript developers.&lt;br&gt;&lt;br&gt;A Thread 👇
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:23 PM - 20 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1406603632422707208" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1406603632422707208" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1406603632422707208" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sW7PhWZj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E4VCjghUcAgSpSE.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7k_spQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1395959712168824833/Y8lcLyJZ_normal.jpg" alt="Insha profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Insha
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @insharamin
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      1️⃣ JavaScript30&lt;br&gt;&lt;br&gt;This repository is a collection of 30 awesome JavaScript vanilla projects created by Wes Bos. Build 30 things in 30 days and enhance your JavaScript skills. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:23 PM - 20 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1406603638085091331" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1406603638085091331" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1406603638085091331" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XsbSVbo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E4VCj4PVoAEUM8V.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7k_spQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1395959712168824833/Y8lcLyJZ_normal.jpg" alt="Insha profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Insha
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @insharamin
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      2️⃣ wtfjs&lt;br&gt;&lt;br&gt;A list of funny and tricky JavaScript examples. If you are a beginner, you can use these notes to get a deeper dive into JavaScript. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:23 PM - 20 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1406603644732985345" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1406603644732985345" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1406603644732985345" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1iobgZ1b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E4VCkQDVUAQsAp5.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7k_spQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1395959712168824833/Y8lcLyJZ_normal.jpg" alt="Insha profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Insha
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @insharamin
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      3️⃣ front-end-interview-handbook&lt;br&gt;&lt;br&gt;Almost complete answers to "Front-end Job Interview Questions" which you can use to interview potential candidates, test yourself. Go from zero to front end interview hero with this handbook. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:23 PM - 20 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1406603651171295237" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1406603651171295237" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1406603651171295237" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jo2oUcqj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E4VCknfVEAsTGDd.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7k_spQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1395959712168824833/Y8lcLyJZ_normal.jpg" alt="Insha profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Insha
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @insharamin
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      4️⃣ javascript-questions&lt;br&gt;&lt;br&gt;A long list of (advanced) JavaScript questions, and their explanations. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:23 PM - 20 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1406603657844383746" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1406603657844383746" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1406603657844383746" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HmB8Cc_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E4VClAxVgAEKoxV.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7k_spQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1395959712168824833/Y8lcLyJZ_normal.jpg" alt="Insha profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Insha
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @insharamin
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      5️⃣ es6-cheatsheet&lt;br&gt;&lt;br&gt;This repository contains [ES6] cheat sheet containing tips, tricks, best practices and code snippets. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:23 PM - 20 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1406603664102330368" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1406603664102330368" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1406603664102330368" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hF59f3Eh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E4VClYaVUAYvXVR.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--t7k_spQB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1395959712168824833/Y8lcLyJZ_normal.jpg" alt="Insha profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Insha
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @insharamin
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      6️⃣ 33-js-concepts&lt;br&gt;&lt;br&gt;This repository was created with the intention of helping developers master their concepts in JavaScript. 33 JavaScript concepts every developer should know. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:23 PM - 20 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1406603670267985924" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1406603670267985924" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1406603670267985924" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;blockquote&gt;
&lt;p&gt;this article is generated using &lt;a href="https://github.com/Manitej66/twlog"&gt;https://github.com/Manitej66/twlog&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How To Build NGINX from Source Code on Ubuntu 20.04</title>
      <author>Arman ali</author>
      <pubDate>Sun, 20 Jun 2021 15:12:11 +0000</pubDate>
      <link>https://dev.to/armanism24/how-to-build-nginx-from-source-code-on-ubuntu-20-04-31e5</link>
      <guid>https://dev.to/armanism24/how-to-build-nginx-from-source-code-on-ubuntu-20-04-31e5</guid>
      <description>&lt;p&gt;By &lt;a href="https://www.armanism.com"&gt;Arman Ali&lt;/a&gt;&lt;br&gt;
NGINX was created in 2004 by Russian developer Igor Sysoev as he was frustrated with Apache and wanted to build a replacement capable of handling 10,000 concurrent connections with a focus on performance, high concurrency, and low memory usages.&lt;/p&gt;

&lt;p&gt;Today NGINX servers the majority of the world's top 1000 websites and while this growth is largely due to, it's also because NGINX is relatively easy to get started with.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;There are two methods of installing NGINX on Ubuntu 20.04.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Via the operating system's build-in packages manager.&lt;/li&gt;
&lt;li&gt;Via building NGINX from the source.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this guide, we’ll build NGINX from the source on Ubuntu 20.04.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;To complete this tutorial, you will need to have an Ubuntu 20.04 server. for the sake of simplicity, we'll be working as root during this guide.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#step-1-update-and-install-dependencies-for-nginx"&gt;
  &lt;/a&gt;
  Step 1 - Update and Install Dependencies for NGINX
&lt;/h3&gt;

&lt;p&gt;In order to build NGINX from the source first, we need to install a couple of dependencies for NGINX.&lt;/p&gt;

&lt;p&gt;Login to your server via SSH terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ssh username@you-IP-address
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Update the Ubuntu’s package manager&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get update 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, install development libraries along with source code compilers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install build-essential libpcre3 libpcre3-dev zlib1g zlib1g-dev libssl-dev libgd-dev libxml2 libxml2-dev uuid-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Press &lt;code&gt;Y&lt;/code&gt; for yes&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-download-nginx-source-code-and-configure"&gt;
  &lt;/a&gt;
  Step 2 - Download NGINX Source Code and Configure
&lt;/h3&gt;

&lt;p&gt;We Now have all the necessary tools to compile NGINX.&lt;/p&gt;

&lt;p&gt;Now, we need to download the NGINX source from their Official website.&lt;/p&gt;

&lt;p&gt;Run the following command to download the source code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget  http://nginx.org/download/nginx-1.20.0.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We have now NGINX source code in tarball format extract it by using this command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;tar -zxvf nginx-1.20.0.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Go to the extracted directory by using this command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd nginx-1.20.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have to use configure flag for configuring Nginx by using this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;./configure --prefix=/var/www/html --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --with-pcre  --lock-path=/var/lock/nginx.lock --pid-path=/var/run/nginx.pid --with-http_ssl_module --with-http_image_filter_module=dynamic --modules-path=/etc/nginx/modules --with-http_v2_module --with-stream=dynamic --with-http_addition_module --with-http_mp4_module
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above command, we configured our custom path for the NGINX configuration file, access, and Error Log path with some NGINX's module.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-build-nginx-amp-adding-modules"&gt;
  &lt;/a&gt;
  Step 3 - Build NGINX &amp;amp; Adding Modules
&lt;/h3&gt;

&lt;p&gt;There are many configuration options available in NGINX. you can use it as per your need. To find all the configuration options available in NGINX&lt;br&gt;
you can visit &lt;a href="http://nginx.org/en/download.html"&gt;nginx.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are some modules that come pre-installed in NGINX.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Modules Built by Default&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you do not need a module that is built by default, you can disable it by naming it with the &lt;code&gt;--without-&amp;lt;MODULE-NAME&amp;gt;&lt;/code&gt; option on the configure script, as in this example which disables the Empty GIF module (should be typed as a single line):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;./configure --without-http_empty_gif_module
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are two types of Modules in NGINX that you can use.&lt;br&gt;
Statically Linked Modules&lt;br&gt;
Dynamically Linked Modules&lt;/p&gt;

&lt;p&gt;1- Statically Linked Modules&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These modules load by default&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Most modules built into NGINX are statically linked: they are built into NGINX at compile time and are linked to the NGINX binary statically. These modules can be disabled only by recompiling NGINX.&lt;/p&gt;

&lt;p&gt;To compile NGINX with a statically linked third‑party module, include the &lt;code&gt;--add-module=&amp;lt;PATH&amp;gt;&lt;/code&gt; option on the configure command, where &lt;code&gt;&amp;lt;PATH&amp;gt;&lt;/code&gt; is the path to the source code (this example is for the RTMP module):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;./configure ... --add-module=/usr/build/nginx-rtmp-module 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2  - Dynamically Linked Modules&lt;/p&gt;

&lt;p&gt;These modules are not loaded by default you have to load them in the NGINX configuration file &lt;/p&gt;

&lt;p&gt;For example - &lt;code&gt;load_module modules/ngx_mail_module.so;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;NGINX modules can also be compiled as a shared object (*.so file) and then dynamically loaded into NGINX Open Source at runtime. This provides more flexibility, as the module can be loaded or unloaded at any time by adding or removing the associated load_module directive in the NGINX configuration file and reloading the configuration. Note that the module itself must support dynamic linking.&lt;/p&gt;

&lt;p&gt;To compile NGINX Open Source with a dynamically loaded third‑party module, include the &lt;code&gt;--add-dynamic-module=&amp;lt;PATH&amp;gt;&lt;/code&gt; option on the configure command, where &lt;code&gt;&amp;lt;PATH&amp;gt;&lt;/code&gt; is the path to the source code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;./configure ... --add-dynamic-module=&amp;lt;PATH&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Compiling the NGINX source&lt;/p&gt;

&lt;p&gt;After custom configuration complete we can now compile NGINX source code by using this command :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;make 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will be taking quite a bit of time and once that's done install the complied source code by using this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;make install

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Start NGINX by using this command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have successfully installed NGINX. To verify this check the NGINX version by using this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nginx -V
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or you can visit your IP to see the holding page NGINX.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;http://your-IP-address 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-4-adding-an-nginx-service"&gt;
  &lt;/a&gt;
  Step 4 - Adding an NGINX Service
&lt;/h3&gt;

&lt;p&gt;With our custom-built of NGINX working and listening on HTTP Port 80, the next step is configuring system service for NGINX.&lt;/p&gt;

&lt;p&gt;More specifically will be adding NGINX as a systemd service the newer and more popular standard for services.&lt;/p&gt;

&lt;p&gt;Now, before we continue to note that systemd is only available since Ubuntu 15.04.&lt;/p&gt;

&lt;p&gt;Creating an NGINX service will not only allow us to manage starting stopping and reloading NGINX in a more standardized way but also make starting NGINX on boot much simpler.&lt;/p&gt;

&lt;p&gt;Standard NGINX command-line tools&lt;/p&gt;

&lt;p&gt;Before we start, however, let's quickly see how to use the standard NGINX command-line tools to execute service signals.&lt;/p&gt;

&lt;p&gt;We can confirm that NGINX is running by checking for the process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ps aux | grep nginx 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can see here the master and worker process.&lt;/p&gt;

&lt;p&gt;So with NGINX running in the background, let's see how to send it a stop signal. Using the standard command-line tools.&lt;/p&gt;

&lt;p&gt;For example, with NGINX running, we can send the stop signal with NGINX by using this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nginx -s stop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check the NGINX status by visiting your IP address you will not see any holding page as NGINX is now stopped or more accurately terminated.&lt;/p&gt;

&lt;p&gt;You can again start NGINX by using&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nginx -s start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So next, let's add that systemd service.&lt;/p&gt;

&lt;p&gt;To enable the service, we're going to have to add a small script, which is the same across operating systems.&lt;/p&gt;

&lt;p&gt;Create an Nginx systemd unit file by using nano editor&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;nano /lib/systemd/system/nginx.service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and paste this script&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Unit]
Description=The NGINX HTTP and reverse proxy server
After=syslog.target network-online.target remote-fs.target nss-lookup.target
Wants=network-online.target

[Service]
Type=forking
PIDFile=/var/run/nginx.pid
ExecStartPre=/usr/sbin/nginx -t
ExecStart=/usr/sbin/nginx
ExecReload=/usr/sbin/nginx -s reload
ExecStop=/bin/kill -s QUIT $MAINPID
PrivateTmp=true

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can change the PIDfile location as per your custom configuration path.&lt;/p&gt;

&lt;p&gt;Now, save the file by pressing key &lt;code&gt;CLR+X, Y,&lt;/code&gt; and Enter to save this file.&lt;/p&gt;

&lt;p&gt;Now you can manage your NGINX by using Systemd for example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl restart nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also check the status of NGINX whether it is running or not by using this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl status nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This gives us a really informative printout of the NGINX server status.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-5-enable-nginx-on-boot"&gt;
  &lt;/a&gt;
  Step 5 - Enable NGINX on Boot
&lt;/h3&gt;

&lt;p&gt;Now, as we mentioned, the other very useful feature of a systemd service is enabling NGINX to start automatically when the system Boots at the moment, when this machine is shut down or rebooted NGINX will no longer be running.&lt;/p&gt;

&lt;p&gt;Obviously not good for a web server in particular.&lt;/p&gt;

&lt;p&gt;So to enable start-up on boot run this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;systemctl enable nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we get confirmation of a start-up, symlink being created for this service.&lt;/p&gt;

&lt;p&gt;We can test this by rebooting the machine reboot.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;In this guide, we have build NGINX from source on Ubuntu 20.04. if you have any question regarding this please let me know in the comment section.&lt;/p&gt;

</description>
      <category>nginx</category>
      <category>ubuntu</category>
      <category>linux</category>
    </item>
    <item>
      <title>Beginner JavaScript - 8 - Strings </title>
      <author>The Nerdy Dev</author>
      <pubDate>Sun, 20 Jun 2021 15:06:50 +0000</pubDate>
      <link>https://dev.to/thenerdydev/beginner-javascript-8-strings-2788</link>
      <guid>https://dev.to/thenerdydev/beginner-javascript-8-strings-2788</guid>
      <description>&lt;p&gt;Hey everyone 👋🏻,&lt;/p&gt;

&lt;p&gt;In this article, let us discuss about the Strings in JavaScript. This is the eighth part of my &lt;strong&gt;Beginner JavaScript Series&lt;/strong&gt; on Dev.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#strings-in-javascript-a-complete-picture"&gt;
  &lt;/a&gt;
  Strings in JavaScript - A complete picture
&lt;/h2&gt;

&lt;p&gt;In JavaScript, the textual data stored in form of a series of characters is known as a string. Here in JavaScript, we don't have a separate type for a single character. &lt;/p&gt;

&lt;p&gt;For example, if you have a sentence then that sentence is a series of characters so in the programming language, it is referred as a string of characters. A word itself is a string as well because it is composed of several characters like 'cricket', 'javascript' etc. &lt;/p&gt;

&lt;p&gt;Let us now see how we can define strings using different types of quotes. &lt;/p&gt;

&lt;p&gt;So we can use three types of quotes to define strings : &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Single Quotes &lt;/li&gt;
&lt;li&gt;Double Quotes &lt;/li&gt;
&lt;li&gt;Backticks &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So let us see an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// String in single quotes &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wordInSingleQuotes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;This is some string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// String in double quotes &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wordInDoubleQuotes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;This is string enclosed in double quotes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Alex&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// String in template strings (backticks)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wishMe&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Good morning, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  &lt;span class="c1"&gt;// interpolating name using template strings syntax. &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;wishMe&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// logs Good morning, Alex&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#getting-the-length-of-strings"&gt;
  &lt;/a&gt;
  Getting the length of strings
&lt;/h2&gt;

&lt;p&gt;In JavaScript, to get the length of the string we can make use of the length property. Let us see an example for same :&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;someVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JavaScript is my favorite programming language&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someVariable&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#accessing-characters"&gt;
  &lt;/a&gt;
  Accessing characters
&lt;/h2&gt;

&lt;p&gt;To extract a character at some position, say, position, use square brace notation like this :  [position]. &lt;br&gt;
As an alternative we can also call the &lt;strong&gt;charAt&lt;/strong&gt; method to extract a character sitting at some specific position. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; : The first character starts from the zero position. &lt;/p&gt;

&lt;p&gt;Let us see an example to understand how we can access characters in JavaScript.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// 1. Using the square brace notation (indexing)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`The first character of our string is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// H&lt;/span&gt;

&lt;span class="c1"&gt;// 2. Using the charAt method to get the first character of our string &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// H&lt;/span&gt;

&lt;span class="c1"&gt;// 3. Using the charAt method to get the last character of our string &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// t &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#iterating-over-characters-using-forof"&gt;
  &lt;/a&gt;
  Iterating over characters using for...of
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello JavaScript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;character&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#the-immutability-of-strings"&gt;
  &lt;/a&gt;
  The Immutability of Strings
&lt;/h3&gt;

&lt;p&gt;Strings can’t be changed/mutated in JavaScript. It is impossible to change a character though you can definitely access it but you cannot set it to some other value.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello JavaScript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// does not work&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hello&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; &lt;span class="c1"&gt;// H (does not work)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#let-us-see-a-couple-of-other-methods-in-action"&gt;
  &lt;/a&gt;
  Let us see a couple of other methods in action:
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;day&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Monday&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// 1. Change the string to lowercase completely. &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// monday&lt;/span&gt;

&lt;span class="c1"&gt;// 2. Change the string to uppercase completely. &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt; &lt;span class="c1"&gt;// MONDAY&lt;/span&gt;

&lt;span class="c1"&gt;// 2. To find the index of a character in the string, &lt;/span&gt;
&lt;span class="c1"&gt;// we can make use of the indexOf method. If the character that we&lt;/span&gt;
&lt;span class="c1"&gt;// looking for does exists in the string, then we get the index for it else we get -1. &lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;channelName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;the nerdy dev&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;channelName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;t&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;   &lt;span class="c1"&gt;// 0 &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;channelName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;indexOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;O&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;   &lt;span class="c1"&gt;// -1 &lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So this is it for this one. If you want to learn about Strings, check out my video where I talk about Strings : &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/tpWejTUdlpA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Apr 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;p&gt;Looking to learn React.js with one Full &lt;strong&gt;Project&lt;/strong&gt;, check this out : &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/learn-react-with-one-big-project-notes-included-demo-and-video-link-4fe5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Learn React with one BIG Project [NOTES included] - Demo and Video Link&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Jun 10 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#100daysofcode&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#react&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;👉🏻 Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;👉🏻 Check out my YouTube Channel : &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Monitoring Systems with Canaries</title>
      <author>memattchung</author>
      <pubDate>Sun, 20 Jun 2021 14:57:24 +0000</pubDate>
      <link>https://dev.to/memattchung/monitoring-systems-with-canaries-5fjh</link>
      <guid>https://dev.to/memattchung/monitoring-systems-with-canaries-5fjh</guid>
      <description>&lt;p&gt;You launched your service and rapidly onboarding customers. You're moving fast, repeatedly deploying one new feature after another. But with the uptick in releases, bugs are creeping in and you're finding yourself having to troubleshoot, rollback, squash bugs, and then redeploy changes. Moving fast but breaking things. What can you do to quickly detect issues — before your customers report them?&lt;/p&gt;

&lt;p&gt;Canaries.&lt;/p&gt;

&lt;p&gt;In this post, you'll learn about the concept of canaries, example code, best practices, and other considerations including both maintenance and financial implications with running them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-canary"&gt;
  &lt;/a&gt;
  What is a canary
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fib1soaM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdhi6m30jgb3ppx5zmec.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fib1soaM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bdhi6m30jgb3ppx5zmec.jpg" alt="Source: grass-lifeisgood/Shutterstock"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Back in early 1900s, canaries were used by miners for &lt;a href="https://www.smithsonianmag.com/smart-news/story-real-canary-coal-mine-180961570/"&gt;detecting carbon monoxide and other dangerous gases&lt;/a&gt;. Miners would bring their canaries down with them to the coalmine and when their canary stopped chirping, it was time for the everyone to immediately evacuate. &lt;/p&gt;

&lt;p&gt;In the context of computing systems, canaries perform end-to-end testing, aiming to exercise the entire software stack of your application: they behave like your end-users, emulating customer behavior. Canaries are just pieces of software that are always running and constantly monitoring the state of your system; they emit metrics into your monitoring system (more discussion on monitoring in a separate post), which then triggers an alarm when some defined threshold breaches.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-canaries-offer"&gt;
  &lt;/a&gt;
  What do canaries offer?
&lt;/h3&gt;

&lt;p&gt;Canaries answer the question: "Is my service running?" More sophisticated canaries can offer a deeper look into your service. Instead of canaries just emitting a binary 1 or 0 — up or down — they can be designed such that they emit more meaningful metrics that measure latency from the client's perspective.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-steps-with-building-your-canary"&gt;
  &lt;/a&gt;
  First steps with building your canary
&lt;/h2&gt;

&lt;p&gt;If you don't have any canaries running that monitor your system, you don't necessarily have to start with rolling your own. Your first canary can require little to no code. One way to gain immediate visibility into your system would be to use synthetic monitoring services such as &lt;a href="https://www.smithsonianmag.com/smart-news/story-real-canary-coal-mine-180961570/"&gt;BetterUptime&lt;/a&gt; or PingDom or StatusCake. These services offer a web interface, allowing you to configure HTTP(s) endpoints that their canaries will periodically poll. When their systems detect an issue (e.g. TCP connection failing, bad HTTP response), they can send you email or text notifications.&lt;/p&gt;

&lt;p&gt;Or if your systems are deployed in Amazon Web Services, you can write Python or Node scripts that integrate with CloudWatch (&lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Create.html"&gt;click here&lt;/a&gt; for Amazon CloudWatch documentation).&lt;/p&gt;

&lt;p&gt;But if you are interested in developing your own custom canaries that do more than a simple probe, read on.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#where-to-begin"&gt;
  &lt;/a&gt;
  Where to begin
&lt;/h3&gt;

&lt;p&gt;Remember, canaries should behave just like real customers. Your customer might be a real human being or another piece of software. Regardless of the type of customer, you'll want to start simple.&lt;/p&gt;

&lt;p&gt;Similar to the managed services describe above, your first canary should start with emitting a simple metric into your monitoring system, indicating whether the endpoint is up or down. For example, if you have a web service, perform a vanilla HTTP GET. When successful, the canary will emit &lt;code&gt;http_get_homepage_success=1&lt;/code&gt;  and under failure, &lt;code&gt;http_get_homepage_success=0&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-canary-monitoring-cache-layer"&gt;
  &lt;/a&gt;
  Example canary - monitoring cache layer
&lt;/h3&gt;

&lt;p&gt;Imagine you have a simple key/value store system that serves as a caching layer. To monitor this layer, every minute our canary will: 1) perform a write 2) perform a read 3) validate the response.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;successful_run&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;put_response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache_put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'bar'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;write_successful&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;put_response&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'OK'&lt;/span&gt;
        &lt;span class="n"&gt;Publish_metric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'cache_engine_successful_write'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;write_successful&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cache_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;successful_read&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'bar'&lt;/span&gt;
        &lt;span class="n"&gt;publish_metric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'cache_engine_successful_read'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;is_successful_read&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;canary_successful_run&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;

    &lt;span class="n"&gt;Except&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;log_exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Canary failed due to error: %s"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Finally&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;Publish_metric&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'cache_engine_canary_successful_run'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;successful_run&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="n"&gt;sleep_for_in_seconds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;
        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sleep_for_in_seconds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#cache-engine-failure-during-deployment"&gt;
  &lt;/a&gt;
  Cache Engine failure during deployment
&lt;/h4&gt;

&lt;p&gt;With this canary in place emitting metrics, we might then choose to integrate the canary with our code deployment pipeline. In the example below, I triggered a code deployment (riddled with bugs) and the canary detected an issue, triggering an automatic rollback:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lr893iwa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/953w7dxvwboqj8f6usve.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lr893iwa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/953w7dxvwboqj8f6usve.png" alt="Canary detecting failures"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-practices"&gt;
  &lt;/a&gt;
  Best Practices
&lt;/h2&gt;

&lt;p&gt;The above code example was very unsophisticated and you'll want to keep the following best practices in mind:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;The canaries should NOT interfere with real user experience&lt;/strong&gt;. Although a good canary should test different behaviors/states of your system, they should in no way interfere with the real user experience. That is, their side effects should be self contained.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;They should always be on, always running, and should be testing at a regular intervals&lt;/strong&gt;. Ideally, the canary runs frequently (e.g. every 15 seconds, every 1 minute).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The alarms that you create when your canary reports an issue should only trigger off more than one datapoint&lt;/strong&gt;. If your alarms fire off on a single data point, you increase the likelihood of false alarms, engaging your service teams unnecessarily. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Integrate the canary into your continuous integration/continuous deployment pipeline&lt;/strong&gt;. Essentially, the deployment system should monitor the metrics that the canary emits and if an error is detected for more then N minutes, the deployment should automatically roll back (more of safety of automated rollbacks in a separate post)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;When rolling your own canary, do more than just inspect the HTTP headers&lt;/strong&gt;. Success criteria should be more than verifying that the HTTP status code is a 200 OK. If your web services returns payload in the form of JSON, analyze the payload and verify that it's both syntactically and semantically correct.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#cost-of-canaries"&gt;
  &lt;/a&gt;
  Cost of canaries
&lt;/h2&gt;

&lt;p&gt;Of course, canaries are not free. Regardless of whether or not you rely on a third party service or roll your own, you'll need to be aware of the maintenance and financial costs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#maintenance"&gt;
  &lt;/a&gt;
  Maintenance
&lt;/h3&gt;

&lt;p&gt;A canary is just another piece of software. The underlying implementation may be just few bash scripts cobbled together or full blown client application. In either case, you need to maintain them just like any other code package.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#financial-costs"&gt;
  &lt;/a&gt;
  Financial Costs
&lt;/h3&gt;

&lt;p&gt;How often is the canary running? How many instances of the canary are running? Are they geographically distributed to test from different locations? These are some of the questions that you must ask since they impact the cost of running them. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#beyond-canaries"&gt;
  &lt;/a&gt;
  Beyond canaries
&lt;/h2&gt;

&lt;p&gt;When building systems, you want a canary that behaves like your customer, one that allows you to quickly detect issues as soon as your service(s) chokes. If you are vending an API, then your canary should exercise the different URIs. If you testing the front end, then your canary can be programmed mimic a customer using a browser using libraries such as selenium.&lt;/p&gt;

&lt;p&gt;Canaries are a great place to start if you are just launching a service. But there's a lot more work required to create an operationally robust service. You'll want to inject failures into your system. You'll want a crystal clear understanding of how your system should behave when its dependencies fail. These are some of the topics that I'll cover in the next series of blog posts.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's Connect
&lt;/h2&gt;

&lt;p&gt;Let's connect and talk more about software and devops. Follow me on Twitter: &lt;a href="https://twitter.com/memattchung"&gt;@memattchung&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>cloudskills</category>
      <category>devops</category>
    </item>
    <item>
      <title>LeetCode - Rotate Image</title>
      <author>Alkesh Ghorpade</author>
      <pubDate>Sun, 20 Jun 2021 14:43:45 +0000</pubDate>
      <link>https://dev.to/_alkesh26/leetcode-rotate-image-2b2o</link>
      <guid>https://dev.to/_alkesh26/leetcode-rotate-image-2b2o</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--99tIrCt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alkeshghorpade.me/rotate-image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--99tIrCt8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alkeshghorpade.me/rotate-image.png" alt="Container"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#problem-statement"&gt;
  &lt;/a&gt;
  Problem statement
&lt;/h3&gt;

&lt;p&gt;You are given an &lt;strong&gt;n x n&lt;/strong&gt; 2D &lt;strong&gt;matrix&lt;/strong&gt; representing an image,&lt;br&gt;
rotate the image by &lt;strong&gt;90&lt;/strong&gt; degrees (clockwise).&lt;/p&gt;

&lt;p&gt;You have to rotate the image &lt;strong&gt;in-place&lt;/strong&gt;, which means you have to modify the input 2D matrix directly.&lt;br&gt;
&lt;strong&gt;DO NOT&lt;/strong&gt; allocate another 2D matrix and do the rotation.&lt;/p&gt;

&lt;p&gt;Problem statement taken from: &lt;a href="https://leetcode.com/problems/rotate-image"&gt;&lt;/a&gt;&lt;a href="https://leetcode.com/problems/rotate-image"&gt;https://leetcode.com/problems/rotate-image&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
Output: [[7, 4, 1], [8, 5, 2], [9, 6, 3]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: matrix = [[5, 1, 9, 11], [2, 4, 8, 10], [13, 3, 6, 7], [15, 14, 12, 16]]
Output: [[15, 13, 2, 5], [14, 3, 4, 1], [12, 6, 8, 9], [16, 7, 10, 11]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 3:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: matrix = [[1]]
Output: [[1]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example 4:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input: matrix = [[1, 2], [3, 4]]
Output: [[3, 1], [4, 2]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Constraints:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- matrix.length == n
- matrix[i].length == n
- 1 &amp;lt;= n &amp;lt;= 20
- -1000 &amp;lt;= matrix[i][j] &amp;lt;= 1000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#explanation"&gt;
  &lt;/a&gt;
  Explanation
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#rotate-groups-of-four-cells"&gt;
  &lt;/a&gt;
  Rotate Groups of Four Cells
&lt;/h4&gt;

&lt;p&gt;The first solution we can think of is to rotate&lt;br&gt;
the four corners of the matrix.&lt;br&gt;
We repeat this of the subsequent cells too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s-qBBUlI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alkeshghorpade.me/rotate-cells.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s-qBBUlI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://alkeshghorpade.me/rotate-cells.png" alt="Container"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's check the algorithm.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- initialize m = matrix.size, tmp

- loop for i = 0; i &amp;lt; m / 2; i++
    - loop for j = i; j &amp;lt; m - 1 - i; j++
      - tmp = matrix[i][j]
      - matrix[i][j] = matrix[m - 1 - j][i]
      - matrix[m - 1 - j][i] = matrix[m - 1 - i][m - 1 - j]
      - matrix[m - 1 - i][m - 1 - j] = matrix[j][m - 1 - i]
      - matrix[j][m - 1 - i] = tmp
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The time complexity of the program is &lt;strong&gt;O(M)&lt;/strong&gt; as each cell is getting read once and written once.&lt;br&gt;
Space complexity is &lt;strong&gt;O(1)&lt;/strong&gt; because we do not use any other additional data structures.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#c-solution"&gt;
  &lt;/a&gt;
  C++ solution
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="n"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
                &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#golang-solution"&gt;
  &lt;/a&gt;
  Golang solution
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt; &lt;span class="p"&gt;[][]&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h5&gt;
  &lt;a href="#javascript-solution"&gt;
  &lt;/a&gt;
  Javascript solution
&lt;/h5&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;rotate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nx"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nx"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nx"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nx"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Let's dry-run our algorithm to see how the solution works.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Input:
matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

Step 1: m = matrix.length
        m = 3

Step 2: tmp = 0

Step 3: loop i = 0; i &amp;lt; 3/2
        0 &amp;lt; 3/2
        0 &amp;lt; 1
        true

        j = i; j &amp;lt; 3 - 1 - 0
        0 &amp;lt; 2
        true

        tmp = matrix[i][j]
        tmp = 1

        matrix[i][j] = matrix[m - 1 - j][i]
        matrix[0][0] = matrix[3 - 1 - 0][0]
        matrix[0][0] = matrix[2][0]
        matrix[0][0] = 7

        matrix[m - 1 - j][i] = matrix[m - 1 - i][m - 1 - j]
        matrix[3 - 1 - 0][0] = matrix[3 - 1 - 0][3 - 1 - 0]
        matrix[2][0] = matrix[2][2]
        matrix[2][0] = 9

        matrix[m - 1 - i][m - 1 - j] = matrix[j][m - 1 - i]
        matrix[3 - 1 - 0][3 - 1 - 0] = matrix[0][3 - 1 - 0]
        matrix[2][2] = matrix[0][2]
        matrix[2][2] = 3

        matrix[j][m - 1 - i] = tmp
        matrix[0][3 - 1 - 0] = 1
        matrix[0][2] = 1

        j++
        j = 1

Step 4: j &amp;lt; 2
        1 &amp;lt; 2
        true

        tmp = matrix[0][1]
        tmp = 2

        matrix[i][1] = matrix[m - 1 - j][i]
        matrix[0][1] = matrix[3 - 1 - 1][0]
        matrix[0][1] = matrix[1][0]
        matrix[0][1] = 4

        matrix[m - 1 - j][i] = matrix[m - 1 - i][m - 1 - 1]
        matrix[3 - 1 - 1][0] = matrix[3 - 1 - 0][3 - 1 - 1]
        matrix[1][0] = matrix[2][1]
        matrix[1][0] = 8

        matrix[m - 1 - i][m - 1 - j] = matrix[j][m - 1 - i]
        matrix[3 - 1 - 0][3 - 1 - 1] = matrix[1][3 - 1 - 0]
        matrix[2][1] = matrix[1][2]
        matrix[2][1] = 6

        matrix[1][m - 1 - i] = tmp
        matrix[1][3 - 1 - 0] = 1
        matrix[1][2] = 2

        j++
        j = 2

Step 5: j &amp;lt; 2
        2 &amp;lt; 2
        false

Step 6: i++
        i = 1

        1 &amp;lt; 3/2
        1 &amp;lt; 1
        false

Output:
[[7, 4, 1], [8, 5, 2], [9, 6, 3]]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>leetcode</category>
      <category>cpp</category>
      <category>go</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Pandas Add Row to DataFrame - Definitive Guide</title>
      <author>Vikram Aruchamy</author>
      <pubDate>Sun, 20 Jun 2021 14:34:07 +0000</pubDate>
      <link>https://dev.to/vikramaruchamy/pandas-add-row-to-dataframe-definitive-guide-54mh</link>
      <guid>https://dev.to/vikramaruchamy/pandas-add-row-to-dataframe-definitive-guide-54mh</guid>
      <description>&lt;p&gt;Pandas dataframe is a two dimensional data structure. When using the dataframe for data analysis, you may need to create a new dataframe and selectively add rows to dataframe for creating a dataframe with specific records. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You can add rows to pandas dataframe using&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;append()&lt;/li&gt;
&lt;li&gt;concat()&lt;/li&gt;
&lt;li&gt;iloc[]&lt;/li&gt;
&lt;li&gt;loc[]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;If You're in Hurry...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can use the below code snippet to add row to dataframe. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df2 = {'First Name': 'Vikram', 'Last Name': 'Aruchamy', 'Country': 'India'}

df = df.append(df2, ignore_index = True)

df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Dataframe Will Look Like&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;First Name&lt;/th&gt;
      &lt;th&gt;Last Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Vikram&lt;/td&gt;
      &lt;td&gt;Aruchamy&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;If You Want to Understand Details, Read on…&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this tutorial, you’ll learn the different methods available to add rows to dataframe. You'll also learn how to insert row to an &lt;strong&gt;empty&lt;/strong&gt; dataframe. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-an-empty-dataframe"&gt;
  &lt;/a&gt;
  Creating an Empty Dataframe
&lt;/h2&gt;

&lt;p&gt;First, you need to create an empty dataframe to add rows to it. You can do it by using &lt;code&gt;DataFrame()&lt;/code&gt; method as shown below. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pandas as pd

df = pd.DataFrame()

df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Empty dataframe is created as &lt;code&gt;df&lt;/code&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-row-to-dataframe"&gt;
  &lt;/a&gt;
  Add Row to Dataframe
&lt;/h2&gt;

&lt;p&gt;You can add rows to dataframe using four methods. &lt;code&gt;append()&lt;/code&gt;, &lt;code&gt;concat()&lt;/code&gt;, &lt;code&gt;iloc[]&lt;/code&gt; and &lt;code&gt;loc[]&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Let's have a look at it one by one. &lt;/p&gt;

&lt;p&gt;To create a new row, you need to know the columns already available in the dataframe. Read &lt;a href="https://www.stackvidhya.com/pandas-get-column-names/"&gt;How to Get Column Name in Pandas&lt;/a&gt; to know the columns in the dataframe. &lt;/p&gt;

&lt;p&gt;Alternatively, you can &lt;a href="https://www.stackvidhya.com/pretty-print-dataframe/"&gt;print the dataframe&lt;/a&gt; using &lt;code&gt;print(df)&lt;/code&gt; to know the dataframe columns.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-append"&gt;
  &lt;/a&gt;
  Using Append
&lt;/h3&gt;

&lt;p&gt;You can use the &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.append.html"&gt;append()&lt;/a&gt; method to append a row to an existing dataframe. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Parameters&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;dictionary&lt;/code&gt; or &lt;code&gt;Pandas Series&lt;/code&gt; or  &lt;code&gt;Dataframe&lt;/code&gt; - Object with values for new row&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ignore_index&lt;/code&gt; = True Means the index from the series or the source dataframe will be ignored. The index available in the target dataframe will be used, instead. False means otherwise. This is &lt;em&gt;optional&lt;/em&gt;. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A resultant dataframe which has the rows from the target dataframe and a new row appended. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;inplace&lt;/code&gt; append is &lt;strong&gt;not&lt;/strong&gt; possible. Hence, do not forget to assign the result to a dataframe object to access it later. &lt;/p&gt;

&lt;p&gt;In the below example, a dictionary is created with values for the columns which already exists in the target dataframe. Then it is appended to the target dataframe using the &lt;code&gt;append()&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;dict = {'First Name': 'Vikram', 'Last Name': 'Aruchamy', 'Country': 'India'}

df = df.append(dict, ignore_index = True)

df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, you've appended one row to dataframe. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dataframe Will Look Like&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;First Name&lt;/th&gt;
      &lt;th&gt;Last Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Vikram&lt;/td&gt;
      &lt;td&gt;Aruchamy&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This is how you can insert a row to dataframe using append. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-concat"&gt;
  &lt;/a&gt;
  Using Concat
&lt;/h3&gt;

&lt;p&gt;You can append a row to dataframe using &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.concat.html"&gt;concat()&lt;/a&gt; method. It concatenates two dataframe into one.  &lt;/p&gt;

&lt;p&gt;To add one row, create a dataframe with one row and concatenate it to the existing dataframe. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Parameters&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It accepts,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;List of dataframes&lt;/code&gt; - List of dataframes that needs to be concatenated &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ignore_index&lt;/code&gt; - Whether the index of the new dataframe should be ignored when concatenating to the target dataframe &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;axis = 0&lt;/code&gt; - To denote that rows of the dataframe needs to be converted. If you want to concatenate columns, you can use &lt;code&gt;axis=1&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Returns&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It returns a &lt;strong&gt;new dataframe object&lt;/strong&gt; which has the rows concatenated from two dataframes. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;inplace&lt;/code&gt; concatenation is &lt;strong&gt;not&lt;/strong&gt; supported. Hence, remember to assign the result to a variable for later use. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df2 = pd.DataFrame({'First Name': ['Kumar'],
                    'Last Name' : ['Ram'],
                    'Country' : ['India']})

df = pd.concat([df, df2], ignore_index = True, axis = 0)

df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, you're creating a new dataframe with one rows and it is named as &lt;code&gt;df2&lt;/code&gt;. You're concatenating this to dataframe &lt;code&gt;df&lt;/code&gt;  which already has one dataframe in it. &lt;/p&gt;

&lt;p&gt;Both &lt;code&gt;df&lt;/code&gt; and &lt;code&gt;df2&lt;/code&gt; will be concatenated and you'll see two rows in the resultant dataframe. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dataframe Will Look Like&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;First Name&lt;/th&gt;
      &lt;th&gt;Last Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Vikram&lt;/td&gt;
      &lt;td&gt;Aruchamy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Kumar&lt;/td&gt;
      &lt;td&gt;Ram&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This is how you can use the &lt;code&gt;concat()&lt;/code&gt; method to add rows to the dataframe. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-iloc"&gt;
  &lt;/a&gt;
  Using iLOC
&lt;/h3&gt;

&lt;p&gt;You can use the &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.iloc.html"&gt;iLoc[]&lt;/a&gt; attribute to add row at a specific position in the dataframe. iloc is an integer based indexing for selecting rows from the dataframe. You can also use it to &lt;strong&gt;assign new rows&lt;/strong&gt; at that position. &lt;/p&gt;

&lt;p&gt;Adding a row at a specific index position will &lt;strong&gt;replace&lt;/strong&gt; the existing row at that position. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When you're using &lt;code&gt;iLoc&lt;/code&gt; to add a row, the dataframe must already have a row in the position. Atleast an empty row. If a row is not available, you'll see an error &lt;code&gt;IndexError: iloc cannot enlarge its target object&lt;/code&gt;. iLoc will not expand the size of the dataframe automatically. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df.iloc[1] = ['Shivam', 'Pandey', 'India']

df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, you're directly adding a row at the index position &lt;code&gt;1&lt;/code&gt;. It replaced the values available in that position with the new values. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dataframe Will Look Like&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;First Name&lt;/th&gt;
      &lt;th&gt;Last Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Vikram&lt;/td&gt;
      &lt;td&gt;Aruchamy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This is how you can use the &lt;code&gt;iloc[]&lt;/code&gt; to insert a row to the existing dataframe. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-loc"&gt;
  &lt;/a&gt;
  Using LOC
&lt;/h3&gt;

&lt;p&gt;You can add row to dataframe using the &lt;a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.loc.html"&gt;loc&lt;/a&gt; parameter.  &lt;code&gt;loc[]&lt;/code&gt; is used to access set of rows from the dataframe using the &lt;strong&gt;index label&lt;/strong&gt;.  You can also assign rows with a specific index label using the &lt;code&gt;loc&lt;/code&gt; attribute. &lt;/p&gt;

&lt;p&gt;When using the &lt;code&gt;loc[]&lt;/code&gt; attribute, its &lt;strong&gt;not&lt;/strong&gt; mandatory that a &lt;strong&gt;row already exists&lt;/strong&gt; with specific label. It'll automatically extend the dataframe and add a row with that label, &lt;em&gt;unlike&lt;/em&gt; the &lt;code&gt;iloc[]&lt;/code&gt; method.  &lt;/p&gt;

&lt;p&gt;A full program is demonstrated for this  method because previous methods has the dataframe with the row indexes 1,2,3.. &lt;/p&gt;

&lt;p&gt;To demonstrate loc using the row indexes with names like &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, a new dataframe is created with labels &lt;code&gt;a&lt;/code&gt; and  &lt;code&gt;b&lt;/code&gt;. Then a new row is assigned with the row label &lt;code&gt;c&lt;/code&gt; using the &lt;code&gt;loc[]&lt;/code&gt; method. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import pandas as pd

# List of Tuples
users = [ ('Shivam', 'Pandey', 'India'),
             ('Kumar', 'Ram' , 'India' ),
              ]
#Create a DataFrame object
df3 = pd.DataFrame(  users, 
                    columns = ['First Name' , 'Last Name', 'Country'],
                    index=['a', 'b']) 


print('Dataframe before adding a new row:\n')
print('---------------------------------------\n')
print(df3)

df3.loc['c'] = ['Vikram', 'Aruchamy', 'India']

print('\nDataframe after adding a new row:\n')
print('---------------------------------------\n')

print(df3)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First a dataframe &lt;code&gt;df3&lt;/code&gt; is created with two rows with label &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.  Then a row is inserted with label &lt;code&gt;c&lt;/code&gt;  using the &lt;code&gt;loc[]&lt;/code&gt; method. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dataframe Will Look Like&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    Dataframe before adding a new row:

    ---------------------------------------

      First Name Last Name Country
    a     Shivam    Pandey   India
    b      Kumar       Ram   India

    Dataframe after adding a new row:

    ---------------------------------------

      First Name Last Name Country
    a     Shivam    Pandey   India
    b      Kumar       Ram   India
    c     Vikram  Aruchamy   India
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how you can use the &lt;code&gt;loc[]&lt;/code&gt; method to add rows to the dataframe. Either it is an empty dataframe or it already has values. &lt;/p&gt;

&lt;p&gt;Next, you'll see the different circumstances where you can use the &lt;code&gt;loc&lt;/code&gt;, &lt;code&gt;iloc&lt;/code&gt;, &lt;code&gt;append()&lt;/code&gt; or &lt;code&gt;concat()&lt;/code&gt; methods to add rows to the dataframe. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pandas-insert-row-at-specific-index"&gt;
  &lt;/a&gt;
  Pandas Insert Row at Specific Index
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;You can insert row at a specific index in a dataframe using the &lt;code&gt;loc&lt;/code&gt; method.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;This will be useful when you want to insert row between two rows in a dataframe. &lt;/p&gt;

&lt;p&gt;Alternatively, you can also use the &lt;code&gt;iloc[]&lt;/code&gt; method to add rows at a specific index. However, in that case, there must be a row already existing with specific index. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Points to Note&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When using &lt;code&gt;loc[]&lt;/code&gt;, If a row is already existing with that index label, it'll be &lt;strong&gt;replaced&lt;/strong&gt; with the new row. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df.loc[2] = ['Shivam', 'Pandey', 'India']

df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A row will be added with the index label &lt;code&gt;2&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dataframe Will Look Like&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;First Name&lt;/th&gt;
      &lt;th&gt;Last Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Vikram&lt;/td&gt;
      &lt;td&gt;Aruchamy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This is how you can append row at a specific index in a dataframe. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pandas-insert-row-at-top"&gt;
  &lt;/a&gt;
  Pandas Insert Row At top
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;You can insert a row at top in dataframe using the &lt;code&gt;df.loc[-1]&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After inserting the row with index &lt;code&gt;-1&lt;/code&gt;, you can increment all the indexes by &lt;code&gt;1&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Now indexes of the rows in the dataframe will be 0,1,2,..n-1. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To use this method, the &lt;strong&gt;index labels of the rows must be integers&lt;/strong&gt;. Otherwise, it won't work. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df.loc[-1] = ['Raj', 'Kumar', 'India']

df.index = df.index + 1

df = df.sort_index()

df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Row is first added at position &lt;code&gt;-1&lt;/code&gt; and then all the indexes will be incremented and sorted. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dataframe Will Look Like&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;First Name&lt;/th&gt;
      &lt;th&gt;Last Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Raj&lt;/td&gt;
      &lt;td&gt;Kumar&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Vikram&lt;/td&gt;
      &lt;td&gt;Aruchamy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This is how you can insert row at top of the dataframe. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pandas-insert-row-at-bottom"&gt;
  &lt;/a&gt;
  Pandas Insert Row at Bottom
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;You can insert a row at the bottom in dataframe using the &lt;code&gt;df.loc[df.shape[0]]&lt;/code&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;df.shape[0]&lt;/code&gt; returns the length of the dataframe. &lt;/p&gt;

&lt;p&gt;For example, if a dataframe already contains 3 rows, already existing rows will have the index 0,1,2,3. Shape[] method will return &lt;code&gt;4&lt;/code&gt;. Hence when you insert using &lt;code&gt;loc[4]&lt;/code&gt;, a row will be added at bottom of the dataframe which is index &lt;code&gt;4&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df.loc[df.shape[0]] = ['Krishna', 'Kumar', 'India']

df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A new row will be added at the index position 4 as you see below. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dataframe Will Look Like&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;First Name&lt;/th&gt;
      &lt;th&gt;Last Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Raj&lt;/td&gt;
      &lt;td&gt;Kumar&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Vikram&lt;/td&gt;
      &lt;td&gt;Aruchamy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Krishna&lt;/td&gt;
      &lt;td&gt;Kumar&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This is how you can append a row at the bottom of the dataframe using &lt;code&gt;loc[]&lt;/code&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pandas-insert-empty-row"&gt;
  &lt;/a&gt;
  Pandas Insert Empty Row
&lt;/h2&gt;

&lt;p&gt;You may need append an empty row to pandas dataframe for adding a row to it later. You can also fill value for specific columns in the dataframe after creating an empty row. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Empty rows can be appended by using the &lt;code&gt;df.loc[df.shape[0]]&lt;/code&gt; and assigning &lt;code&gt;None&lt;/code&gt; values for all the existing columns.&lt;/strong&gt;  &lt;/p&gt;

&lt;p&gt;For example, if your dataframe has three columns, you can create a series with 3 &lt;code&gt;None&lt;/code&gt; values and assign it at the last position of the dataframe. &lt;/p&gt;

&lt;p&gt;That is how you can insert an empty row to the dataframe. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df.loc[df.shape[0]] = [None, None, None]

df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An empty row is added at the end of the dataframe. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dataframe Will Look Like&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;First Name&lt;/th&gt;
      &lt;th&gt;Last Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Raj&lt;/td&gt;
      &lt;td&gt;Kumar&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Vikram&lt;/td&gt;
      &lt;td&gt;Aruchamy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Krishna&lt;/td&gt;
      &lt;td&gt;Kumar&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This is how you can add empty row to the end of the dataframe.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pandas-append-two-dataframe-pandas"&gt;
  &lt;/a&gt;
  Pandas Append Two Dataframe Pandas
&lt;/h2&gt;

&lt;p&gt;You can append a dataframe to another dataframe using the dataframe &lt;code&gt;append()&lt;/code&gt; method. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;append()&lt;/code&gt; method accepts a dataframe and appends it to the calling dataframe and returns a new dataframe object. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;inplace&lt;/code&gt; append is &lt;strong&gt;not&lt;/strong&gt; possible. hence you need to assign the result a dataframe object if you want to use it later. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;ignore_index&lt;/code&gt; can be used to ignore the index of the dataframe that is assigned to the target dataframe. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;df2 = {'First Name': 'Vikram', 'Last Name': 'Aruchamy', 'Country': 'India'}

df = df.append(df2, ignore_index = True)

df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, dataframe &lt;code&gt;df2&lt;/code&gt; is appended to &lt;code&gt;df&lt;/code&gt; and assigned it back to the &lt;code&gt;df&lt;/code&gt; object. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dataframe Will Look Like&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
      &lt;th&gt;First Name&lt;/th&gt;
      &lt;th&gt;Last Name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Raj&lt;/td&gt;
      &lt;td&gt;Kumar&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Vikram&lt;/td&gt;
      &lt;td&gt;Aruchamy&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;Krishna&lt;/td&gt;
      &lt;td&gt;Kumar&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
      &lt;td&gt;None&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;India&lt;/td&gt;
      &lt;td&gt;Vikram&lt;/td&gt;
      &lt;td&gt;Aruchamy&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This is how you can append two dataframe in pandas using the &lt;code&gt;append()&lt;/code&gt; method. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-you-should-not-add-rows-one-by-one-to-dataframe"&gt;
  &lt;/a&gt;
  Why You Should Not Add Rows One By One To Dataframe
&lt;/h2&gt;

&lt;p&gt;You may need to create a dataframe and append one row at a time in various scenarios. &lt;/p&gt;

&lt;p&gt;In that case, it is advisable to create a list first to hold all the records and create a dataframe with all the records in one shot using the &lt;code&gt;pd.DataFrame()&lt;/code&gt;method. &lt;/p&gt;

&lt;p&gt;Calling the &lt;code&gt;append()&lt;/code&gt; method for each row is a costlier operation. But adding the rows to the list is not costlier. Hence, you can add to list and create a dataframe using that list. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Snippet&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;data = []

data.append(['Krishna', 'Kumar', 'India'])

data.append(['Ram', 'Kumar', 'India'])

data.append(['Shivam', 'Pandey', 'India'])

df = pd.DataFrame(data, columns=['First Name', 'Last Name', 'Country'])

df
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For more details about this scenario, refer &lt;a href="https://stackoverflow.com/a/62734983"&gt;stackoverflow&lt;/a&gt; answer. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dataframe Will Look Like&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;First Name&lt;/th&gt;
      &lt;th&gt;Last Name&lt;/th&gt;
      &lt;th&gt;Country&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;Krishna&lt;/td&gt;
      &lt;td&gt;Kumar&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;Ram&lt;/td&gt;
      &lt;td&gt;Kumar&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;Shivam&lt;/td&gt;
      &lt;td&gt;Pandey&lt;/td&gt;
      &lt;td&gt;India&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This is how you can create pandas dataframe by appending one row at a time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;To summarize, you've learnt how to create empty dataframe in pandas and add rows to it using the &lt;code&gt;append()&lt;/code&gt;, &lt;code&gt;iloc[]&lt;/code&gt;, &lt;code&gt;loc[]&lt;/code&gt;, concatenating two dataframes using &lt;code&gt;concat()&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Also, how these methods can be used to insert row at specific index, add row to the top or bottom of the dataframe, how to add an empty row to the dataframe which can be used at later point. &lt;/p&gt;

&lt;p&gt;In addition to that, you've learnt why you should not create pandas dataframe by appending one row at a time and use a list in such scenarios and create a dataframe using the list. &lt;/p&gt;

&lt;p&gt;If you have any questions, comment below.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-may-also-like"&gt;
  &lt;/a&gt;
  You May Also Like
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.stackvidhya.com/add-column-to-dataframe/"&gt;How to Add Column to Dataframe in Pandas&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.stackvidhya.com/rename-column-in-pandas/"&gt;How to Rename Column in Pandas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stackvidhya.com/drop-column-in-pandas/"&gt;How to Drop Column In Pandas dataframe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stackvidhya.com/pandas-get-number-of-rows/"&gt;How to Get Number of Rows from Pandas Dataframe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>python</category>
      <category>datascience</category>
      <category>programming</category>
    </item>
    <item>
      <title>What's NOT new in React 18</title>
      <author>Benny Powers 🇮🇱🇨🇦</author>
      <pubDate>Sun, 20 Jun 2021 14:22:01 +0000</pubDate>
      <link>https://dev.to/bennypowers/what-s-not-new-in-react-18-45c7</link>
      <guid>https://dev.to/bennypowers/what-s-not-new-in-react-18-45c7</guid>
      <description>&lt;p&gt;After so much hype,&lt;/p&gt;

&lt;p&gt;After so much excitement,&lt;/p&gt;

&lt;p&gt;After so many buzzwords,&lt;/p&gt;

&lt;p&gt;After months and years of waiting for the next React major...&lt;/p&gt;


&lt;center&gt;&lt;strong&gt;It landed&lt;/strong&gt;&lt;/center&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1J5M5JRY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpg8jzdr4u4xlubq2u70.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1J5M5JRY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cpg8jzdr4u4xlubq2u70.jpg" alt="Cupid's foot landing (from Monty Python)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And congrats to React for delivering some much ballyhoo'd features...&lt;/p&gt;

&lt;p&gt;...But what they did &lt;em&gt;not&lt;/em&gt; deliver was HTML support.&lt;/p&gt;

&lt;p&gt;For &lt;a href="https://github.com/facebook/react/issues/11347"&gt;five years now&lt;/a&gt;, there's been a &lt;a href="https://github.com/facebook/react/issues/4751"&gt;concerted&lt;/a&gt;, multilateral push to &lt;a href="//custom-elements-everywhere.com/#react"&gt;bring React into line&lt;/a&gt; with &lt;a href="https://custom-elements-everywhere.com/#angular"&gt;every&lt;/a&gt; &lt;a href="https://custom-elements-everywhere.com/#vue"&gt;other&lt;/a&gt; &lt;a href="https://custom-elements-everywhere.com/#svelte"&gt;major&lt;/a&gt; &lt;a href="https://custom-elements-everywhere.com/#preact"&gt;framework&lt;/a&gt; on custom elements, enshrined in the HTML and DOM specs for years now. Much effort was spent both in public and behind the scenes to encourage the React core team to implement real support for the standards.&lt;/p&gt;

&lt;p&gt;But then the PRs were closed, or ignored without public comment. And the issues languished. And the hopeful indications of a willingness to play ball with the rest of the web community grew stale and limp. &lt;/p&gt;

&lt;p&gt;We, developers that want to write components that work in any frontend stack, were really hopeful that React &lt;em&gt;17&lt;/em&gt; would deliver, but React is still the mobile iOS of front-end frameworks.&lt;/p&gt;

&lt;p&gt;What's not new in React 18? What will probably not be new in React 19? A serious commitment to first-class support for the full range of the HTML and DOM specifications. It's not like the React engineers don't know how to do this. Preact's had it for years, and at smaller bundle sizes with better runtime performance, yet. No one wants to take away your functional API or your fantastic ecosystem, we can have it all while still playing nice with the broader industry.&lt;/p&gt;

&lt;p&gt;&lt;a href="#facebook-can-do-this"&gt;Skip code sample comparison&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Fragment&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;preact&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;preact/hooks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@apollo-elements/components/apollo-client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@apollo-elements-demos/spacex-launches&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LaunchesDemo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="nx"&gt;missionName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;setSelectedLaunch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;launches&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setLaunches&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Fragment&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;apollo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.spacex.land/graphql&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;spacex&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;launches&lt;/span&gt;
            &lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="nx"&gt;onselected&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;launch&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;changed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{({&lt;/span&gt; &lt;span class="nx"&gt;detail&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setSelectedLaunch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
            &lt;span class="nx"&gt;onlaunches&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;changed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{({&lt;/span&gt; &lt;span class="nx"&gt;detail&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setLaunches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/spacex-launches&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;From&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;launches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;launches&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;selected&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;missionName&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;nothing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/apollo-client&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Fragment&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Preact: Just Works&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@apollo-elements/components/apollo-client&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@apollo-elements-demos/spacex-launches&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LaunchesDemo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;launchesRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;launchRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="nx"&gt;missionName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;setSelectedLaunch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({});&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;launches&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setLaunches&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;launchesRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;launches-changed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;detail&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setLaunches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;launchesRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;selected-launch-changed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;detail&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setSelectedLaunch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;detail&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;launchesRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;launchesRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fragment&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;apollo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;client&lt;/span&gt; &lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.spacex.land/graphql&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;spacex&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;launches&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;launchesRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/spacex-launches&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;From&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;launches&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;launches&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;selected&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;missionName&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;nothing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/apollo-client&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/React.Fragment&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;React: y, tho?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#facebook-can-do-this"&gt;
  &lt;/a&gt;
  Facebook can do this
&lt;/h2&gt;

&lt;p&gt;Facebook's engineers are world-class; surely they have the skills to support the DOM standard. Enough of the excuses, come and &lt;a href="https://www.w3.org/community/webcomponents/"&gt;join us at the table&lt;/a&gt;. Facebook &lt;em&gt;can&lt;/em&gt; do this. But do they &lt;em&gt;want&lt;/em&gt; to do it?&lt;/p&gt;

&lt;p&gt;The broader open web community has, for their part, bent over backwards to pick up the React team's slack; writing &lt;a href="https://github.com/tomivirkki/react-vaadin-components"&gt;workaround&lt;/a&gt;, after &lt;a href="https://github.com/SAP/ui5-webcomponents-react"&gt;hack&lt;/a&gt;, after &lt;a href="https://www.npmjs.com/package/@lit-labs/react"&gt;bodge&lt;/a&gt;. The rest of the web has cut their losses, it seems. A shame for all of us, but especially for React users.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-future-of-the-web"&gt;
  &lt;/a&gt;
  The Future of the Web
&lt;/h2&gt;

&lt;p&gt;For the seemingly overwhelming crush of developers and recruiters who have convinced themselves that React and VDOM is The One True Component Model™️, I'm deeply concerned that the &lt;a href="https://www.wikiwand.com/en/Cruft"&gt;cruft&lt;/a&gt; crisis will hit your shores sooner than you think. I can still point to startups struggling with their legacy angularjs codebases, unable to move forward, and lacking the resources or will for The Big Rewrite.&lt;/p&gt;

&lt;p&gt;Compare that to web standards: HTML is 28 years old and still hasn't ever broken backwards. At the risk of invoking a meme, go load up the &lt;a href="https://www.spacejam.com/1996/"&gt;Space Jam homepage from 1996&lt;/a&gt; in your evergreen browser and bask in the glory of &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; layouts and image maps, still happily running three decades hence.&lt;/p&gt;

&lt;p&gt;HTML and the DOM are the bedrock foundations of the web. They're critical, non-negotiable, and even if not perfect (they aren't), they're not going anywhere. We, as web developers of all stripes, committed to any framework or none, should rally together to fight the real struggle: protecting and nurturing the open web that gave us our livelihoods, to keep it relevant and vibrant into the next decades.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://arewebcomponentsathingyet.com/"&gt;Meanwhile&lt;/a&gt;, on the &lt;a href="https://www.chromestatus.com/metrics/feature/timeline/popularity/1689"&gt;actual web&lt;/a&gt;, web components adoption is spreading like wildfire. Developers, don't get left behind! Build that design system using a web component base class or a functional web component library, and export React components automatically with &lt;a href="https://github.com/BBKolton/reactify-wc#readme"&gt;one of&lt;/a&gt; the &lt;a href="https://www.npmjs.com/package/@lit-labs/react"&gt;reactify-ing workarounds&lt;/a&gt;. Your users across all frameworks will thank you, and you'll be glad you did when it comes time to handle the next big hype cycle.&lt;/p&gt;

&lt;p&gt;We can't wait to welcome React back into the fold, but increasingly we've been asking ourselves if they even want to be there with us. My biggest hope in writing this is to be proven wrong by a meaningful commitment from Facebook.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webcomponents</category>
      <category>opensource</category>
      <category>opinion</category>
    </item>
    <item>
      <title>An alias to learn aliases</title>
      <author>Charles</author>
      <pubDate>Sun, 20 Jun 2021 13:46:56 +0000</pubDate>
      <link>https://dev.to/selrahcd/an-alias-to-learn-aliases-12m8</link>
      <guid>https://dev.to/selrahcd/an-alias-to-learn-aliases-12m8</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was previously posted on &lt;a href="https://blog.chorip.am/articles/an-alias-to-learn-aliases"&gt;chorip.am&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I’m trying to save some time by reducing the number of keystrokes I need to do something.&lt;/p&gt;

&lt;p&gt;I’m pretty efficient with my IDE’s shortcuts, but I have vast room for improvement in my console.&lt;/p&gt;

&lt;p&gt;The obvious solution there is relying on aliases.&lt;/p&gt;

&lt;p&gt;I’ve been using the git ssh plugin for several years, but I only use a handful of the provided aliases, mostly because I never took the time to memorize past the few main ones.&lt;/p&gt;

&lt;p&gt;Now that I’m trying to save some typing, I’m learning the other ones. I have an issue, though: I spend a lot of time looking at the documentation to know which alias shortens the command I want to enter. In that case, it means I switch to my browser, get the right tab, or go to the website, use the search to find the suitable alias by typing part of the command. I don’t save a lot of keystrokes, and I’m surely not gaining time.&lt;/p&gt;

&lt;p&gt;Please don’t take me wrong; time spend learning or practicing to improve in the long run is time well spent. Nevertheless, I decided to find a way to enhance my learning process.&lt;/p&gt;

&lt;p&gt;The best way to reduce the amount of time needed to find the proper alias for a command is to stay in the console and avoid looking at the documentation.&lt;/p&gt;

&lt;p&gt;After a quick search, I discovered that the &lt;code&gt;alias&lt;/code&gt; command lists all aliases set up. That’s a start.&lt;/p&gt;

&lt;p&gt;Combining &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;grep&lt;/code&gt; makes it efficient to find the correct alias for the job.&lt;/p&gt;

&lt;p&gt;That still requires some typing, if your shell doesn’t have some sort if autocomplete at least.&lt;/p&gt;

&lt;p&gt;As I’m in a quest for laziness and poking around with aliases, I decided to add a new one, &lt;code&gt;fa&lt;/code&gt;, for “find alias” defined as &lt;code&gt;alias fa='alias | grep'&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An example: searching for all aliases about stash&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XbhtMLto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a54b9m1mv8e9tktc3g9v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XbhtMLto--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a54b9m1mv8e9tktc3g9v.png" alt="Typing fa stash returns a list of aliases containing stash"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just two letters, no more windows switching, and a lot of time saved.&lt;/p&gt;

&lt;p&gt;Do you have some tips about productivity as well?&lt;/p&gt;

</description>
      <category>bash</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
