<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>`Proxy` all of the things! Part 1: Counters</title>
      <author>lionel-rowe</author>
      <pubDate>Thu, 26 Aug 2021 23:54:46 +0000</pubDate>
      <link>https://dev.to/lionelrowe/proxy-all-of-the-things-part-1-counters-4l92</link>
      <guid>https://dev.to/lionelrowe/proxy-all-of-the-things-part-1-counters-4l92</guid>
      <description>&lt;p&gt;To celebrate the &lt;a href="https://observer.com/2021/05/internet-explorer-is-officially-dead/"&gt;long-overdue death of Internet Explorer&lt;/a&gt;, I'm writing a series of articles on a massively useful and underused API that's &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#browser_compatibility"&gt;available in every other mainstream JavaScript environment&lt;/a&gt;: &lt;code&gt;Proxy&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With a &lt;code&gt;Proxy&lt;/code&gt;, you can "intercept and redefine fundamental operations" for an object, such as getters and setters.&lt;/p&gt;

&lt;p&gt;Let's start with a simple example: &lt;strong&gt;counters with a default value&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Let's say you're implementing a simple algorithm to count the number of occurrences of each word in a text. In a language like Ruby, you could do that easily like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;word_counts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;counters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/\W+/&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;counters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;counters&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="n"&gt;wc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;word_counts&lt;/span&gt; &lt;span class="s1"&gt;'a a a b b c'&lt;/span&gt; &lt;span class="c1"&gt;# {"a" =&amp;gt; 3, "b" =&amp;gt; 2, "c" =&amp;gt; 1}&lt;/span&gt;
&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# 3&lt;/span&gt;
&lt;span class="n"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'d'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;# 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That &lt;code&gt;Hash.new(0)&lt;/code&gt; is really neat: it gives us key-value pairs with a default value of &lt;code&gt;0&lt;/code&gt; that we can increment from.&lt;/p&gt;

&lt;p&gt;JavaScript objects, on the other hand, &lt;em&gt;can't&lt;/em&gt; be given a default value. Passing a parameter to an &lt;code&gt;Object&lt;/code&gt; constructor instead converts that value itself into an object: &lt;code&gt;new Object(0)&lt;/code&gt; returns &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/Number"&gt;&lt;code&gt;Number {0}&lt;/code&gt;&lt;/a&gt;, which isn't what we want at all.&lt;/p&gt;

&lt;p&gt;However, we can easily mimic Ruby's &lt;code&gt;Hash.new&lt;/code&gt; behavior with a proxy:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * @template T
 * @param {T} defaultVal
 * @returns {Record&amp;lt;string, T&amp;gt;}
 */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hashWithDefault&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;defaultVal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;({},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="nx"&gt;defaultVal&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;target&lt;/code&gt; parameter passed to the getter is the proxied object itself — the first argument passed to the &lt;code&gt;Proxy&lt;/code&gt; constructor. As we didn't override &lt;code&gt;set&lt;/code&gt;, setting simply works as normal — the property is set on that same &lt;code&gt;target&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Our JavaScript &lt;code&gt;hashWithDefault(0)&lt;/code&gt; now works very similarly to Ruby's &lt;code&gt;Hash.new(0)&lt;/code&gt;. We can now easily and ergonomically write our word count function like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/** @param {string} text */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wordCounts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;counters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;hashWithDefault&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;word&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\W&lt;/span&gt;&lt;span class="sr"&gt;+/&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;counters&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;word&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;counters&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;wc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;wordCounts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a a a b b c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Proxy {a: 3, b: 2, c: 1}&lt;/span&gt;
&lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;span class="nx"&gt;wc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt; &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Cool, no? In part 2, we'll look at using &lt;code&gt;Proxy&lt;/code&gt; with a setter function as well.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Game Programming Fundamentals</title>
      <author>Otmane Riad</author>
      <pubDate>Thu, 26 Aug 2021 23:11:36 +0000</pubDate>
      <link>https://dev.to/nexteventideas/game-programming-fundamentals-4nn4</link>
      <guid>https://dev.to/nexteventideas/game-programming-fundamentals-4nn4</guid>
      <description>&lt;p&gt;If you are looking for an answer to the question of “How to Develop a Game” , you have come to the right place. First of all, we are not going to talk about the need to learn a programming language or game engines to program video games, because developing a game is about much more than just coding and game engines. In fact, the game industry is a field that includes many different industries, including mathematics, art, psychology, and even cinema. In other words, it is never enough to just master game engines and learn a programming language. So what, exactly. do we need to know?&lt;/p&gt;

&lt;p&gt;This beginner’s guide to video game development will cover everything you need to know to get started creating your own gaming software and apps.&lt;/p&gt;

&lt;p&gt;Video Game Mechanics Explained&lt;br&gt;
One of the biggest reasons why games reach huge audiences today has to do with game mechanics. In order to better understand what game mechanics are, we have to think of a game system. Imagine there are various sub-parts that this system controls. To picture this better, you can examine the diagram below:&lt;/p&gt;

&lt;p&gt;Read More: &lt;a href="https://hitechnoloy.ca/game-programming-fundamentals/"&gt;https://hitechnoloy.ca/game-programming-fundamentals/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>gamedev</category>
      <category>programming</category>
      <category>java</category>
      <category>unity3d</category>
    </item>
    <item>
      <title>Tart up your terminal!</title>
      <author>skino</author>
      <pubDate>Thu, 26 Aug 2021 22:51:25 +0000</pubDate>
      <link>https://dev.to/skino2020/tart-up-your-terminal-16n7</link>
      <guid>https://dev.to/skino2020/tart-up-your-terminal-16n7</guid>
      <description>&lt;p&gt;In the last few blog entries i have about Ubuntu a lot. from building a dev environment from scratch all the way through to how it feels still using it a week on. As i'm getting more and more familiar with Linux again after so many years away from it i want to make my terminal look a little better :)&lt;/p&gt;

&lt;p&gt;Now there is a lot of people who will say this is a waste of time and blah blah blah but its something i like doing, with the PHP and Laravel stuff i do i have a terminal window open pretty much all the time (so i don't need to open the IDE one) so making my terminal look nicer is just a personal preference.&lt;/p&gt;

&lt;p&gt;Check out the full post: &lt;a href="https://raspada-blog.co.uk/blog/tart-up-that-terminal"&gt;Tart up that terminal&lt;/a&gt;&lt;/p&gt;

</description>
      <category>terminal</category>
      <category>linux</category>
      <category>macos</category>
    </item>
    <item>
      <title>Recursive Function: What Exactly Is Recursion?</title>
      <author>Oluwatobi Sofela</author>
      <pubDate>Thu, 26 Aug 2021 22:29:35 +0000</pubDate>
      <link>https://dev.to/oluwatobiss/recursive-function-what-exactly-is-recursion-ph6</link>
      <guid>https://dev.to/oluwatobiss/recursive-function-what-exactly-is-recursion-ph6</guid>
      <description>&lt;p&gt;&lt;strong&gt;Recursion&lt;/strong&gt; is a method by which a problem gets solved through iteration.&lt;/p&gt;

&lt;p&gt;In other words, a recursive function is a function that repetitively invokes itself infinitely (or until something stops it).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#important-stuff-to-know-about-recursive-function"&gt;
  &lt;/a&gt;
  Important stuff to know about recursive function
&lt;/h2&gt;

&lt;p&gt;Keep these two essential pieces of info in mind whenever you choose to use recursive functions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#info-1-recursion-is-not-an-iife"&gt;
  &lt;/a&gt;
  Info 1: Recursion is not an IIFE
&lt;/h3&gt;

&lt;p&gt;A recursive function is different from an &lt;em&gt;Immediately Invoking function Expression&lt;/em&gt; (IIFE).&lt;/p&gt;

&lt;p&gt;An IIFE automatically invokes itself once.&lt;/p&gt;

&lt;p&gt;However, a recursive function automatically invokes itself repeatedly for an unlimited amount of time or until something stops its re-invocation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#info-2-a-recursive-function-needs-a-base-case"&gt;
  &lt;/a&gt;
  Info 2: A recursive function needs a base case
&lt;/h3&gt;

&lt;p&gt;The code written to discontinue the re-invocation of a recursive function is called a base case.&lt;/p&gt;

&lt;p&gt;It is always important to define a base case when creating a recursive function — so that the function will not run endlessly, thereby crashing the browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-of-a-recursive-function"&gt;
  &lt;/a&gt;
  Example of a recursive function
&lt;/h2&gt;

&lt;p&gt;Below is a &lt;a href="https://www.codesweetly.com/html-css-javascript"&gt;JavaScript&lt;/a&gt; code that returns a &lt;a href="https://en.wikipedia.org/wiki/Concatenation"&gt;concatenation&lt;/a&gt; of all the values returned through the &lt;code&gt;countDown()&lt;/code&gt; function’s recursive invocation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create a recursive function:&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;// Define the base case of this recursive function:&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Recursion Stopped!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;

   &lt;span class="c1"&gt;// Define the recursive case:&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Invoke the countDown() recursive function:&lt;/span&gt;
&lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// The invocation above will return:&lt;/span&gt;
&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2, 1, 0, Recursion Stopped!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the recursive algorithm above, the &lt;code&gt;countDown(num - 1)&lt;/code&gt; code makes the whole function a recursion because it is the &lt;a href="https://www.codesweetly.com/document-vs-data-vs-code#h-what-is-a-code"&gt;code&lt;/a&gt; that makes &lt;code&gt;countDown()&lt;/code&gt; recall itself repeatedly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#a-look-at-the-events-behind-the-scenes"&gt;
  &lt;/a&gt;
  A look at the events behind the scenes
&lt;/h2&gt;

&lt;p&gt;When we invoked the &lt;code&gt;countDown&lt;/code&gt; function and passed in the value &lt;code&gt;2&lt;/code&gt; (that is, &lt;code&gt;countDown(2)&lt;/code&gt;), the algorithm started running as follows:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-check-if-raw-2-endraw-is-less-than-raw-0-endraw-"&gt;
  &lt;/a&gt;
  Step 1: Check if &lt;code&gt;2&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;The computer checked if the value &lt;code&gt;2&lt;/code&gt; — that we passed to the &lt;code&gt;num&lt;/code&gt; parameter of the &lt;code&gt;countDown&lt;/code&gt; function — is less than &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;2&lt;/code&gt; is not less than &lt;code&gt;0&lt;/code&gt;, the computer didn’t execute the &lt;code&gt;if&lt;/code&gt; statement’s code. Instead, it skipped to the next code after the &lt;code&gt;if&lt;/code&gt; statement — which is the recursion code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-execute-the-return-statement"&gt;
  &lt;/a&gt;
  Step 2: Execute the return statement
&lt;/h3&gt;

&lt;p&gt;After skipping the &lt;code&gt;if&lt;/code&gt; statement, the computer executed the &lt;code&gt;return num + " " + countDown(num - 1)&lt;/code&gt; code — but substituted the &lt;code&gt;num&lt;/code&gt; parameter with the parameter’s value (that is, &lt;code&gt;2&lt;/code&gt;) like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-3-execute-only-the-recursive-statement"&gt;
  &lt;/a&gt;
  Step 3: Execute only the recursive statement
&lt;/h3&gt;

&lt;p&gt;In step 2’s code above, notice that the &lt;code&gt;return&lt;/code&gt; command can’t return any value because the &lt;code&gt;return&lt;/code&gt; statement includes a recursive code (&lt;code&gt;countDown(1)&lt;/code&gt;) recalling the &lt;code&gt;countDown&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Therefore, while retaining the other parts of the &lt;code&gt;return&lt;/code&gt; statement (that is, &lt;code&gt;2 + ", " +&lt;/code&gt;), the computer will execute only the recursion code (&lt;code&gt;countDown(1)&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;In other words, the &lt;code&gt;countDown(1)&lt;/code&gt; code will automatically invoke the &lt;code&gt;countDown&lt;/code&gt; function while passing in the value &lt;code&gt;1&lt;/code&gt;. Then, the algorithm will start running again by checking if &lt;code&gt;1&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;1&lt;/code&gt; is not less than &lt;code&gt;0&lt;/code&gt;, the computer skipped to the recursion code like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-4-invoke-only-the-recursion-code"&gt;
  &lt;/a&gt;
  Step 4: Invoke only the recursion code
&lt;/h3&gt;

&lt;p&gt;Again, notice that the &lt;code&gt;return&lt;/code&gt; command (in step 3) cannot return any value because the &lt;code&gt;return&lt;/code&gt; statement includes a recursion code (&lt;code&gt;countDown(0)&lt;/code&gt;) that recalls the &lt;code&gt;countDown&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Therefore, while retaining the other parts of the &lt;code&gt;return&lt;/code&gt; statement (that is, &lt;code&gt;2 + ", " + 1 + ", " +&lt;/code&gt;), the computer will execute only the recursion code (&lt;code&gt;countDown(0)&lt;/code&gt;). So, the &lt;code&gt;countDown(0)&lt;/code&gt; code will automatically invoke the &lt;code&gt;countDown&lt;/code&gt; function while passing in the value &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, the function will start running again by checking if &lt;code&gt;0&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;0&lt;/code&gt; is not less than &lt;code&gt;0&lt;/code&gt;, the computer skipped to the recursion code like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;countDown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-5-execute-only-the-recursion-code"&gt;
  &lt;/a&gt;
  Step 5: Execute only the recursion code
&lt;/h3&gt;

&lt;p&gt;Yet again, the &lt;code&gt;return&lt;/code&gt; command (in step 4) can’t return any value because the &lt;code&gt;return&lt;/code&gt; statement includes a recursion code (&lt;code&gt;countDown(-1)&lt;/code&gt;) recalling the &lt;code&gt;countDown&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Therefore, while retaining the other parts of the &lt;code&gt;return&lt;/code&gt; statement (that is, &lt;code&gt;2 + ", " + 1 + ", " + 0 + ", " +&lt;/code&gt;), the computer will execute only the recursion code (&lt;code&gt;countDown(-1)&lt;/code&gt;). So, the &lt;code&gt;countDown(-1)&lt;/code&gt; code will automatically invoke the &lt;code&gt;countDown&lt;/code&gt; function while passing in the value &lt;code&gt;-1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, the function will start running again by checking if &lt;code&gt;-1&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;At this point, &lt;code&gt;-1&lt;/code&gt; is less than &lt;code&gt;0&lt;/code&gt;. Therefore, the computer will execute the code of the &lt;code&gt;if&lt;/code&gt; statement by returning the value &lt;code&gt;“Recursion Stopped!”&lt;/code&gt; like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Recursion Stopped!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At last, the &lt;code&gt;return&lt;/code&gt; statement now has values it can validly concatenate and return. Therefore, the returned value from &lt;code&gt;countDown&lt;/code&gt; will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2, 1, 0, Recursion Stopped!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#wrapping-it-up"&gt;
  &lt;/a&gt;
  Wrapping it up
&lt;/h2&gt;

&lt;p&gt;In this article, we learned that a recursive function is a function that repeatedly recalls itself until something stops the recall.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>functional</category>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Networking as a WebDev with Polywork</title>
      <author>LUKE知る</author>
      <pubDate>Thu, 26 Aug 2021 22:00:56 +0000</pubDate>
      <link>https://dev.to/lukeshiru/networking-as-a-webdev-with-polywork-3402</link>
      <guid>https://dev.to/lukeshiru/networking-as-a-webdev-with-polywork-3402</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Let me be upfront and maybe save you some time: &lt;strong&gt;I'll be absolutely honest about what I think&lt;/strong&gt;, but for the sake of transparency &lt;strong&gt;this post is sponsored by &lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt;. That being said...&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#networking-usually-sucks"&gt;
  &lt;/a&gt;
  Networking usually sucks
&lt;/h2&gt;

&lt;p&gt;Internet is full of different social platforms, but every time we talk about professional networking, generally there is only a bunch that come to mind. Said platforms have been the "de facto" for networking, talent hunting/hiring, and so on for a long time. The thing is, we all know they have a bunch of issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The UI is extremely dated.&lt;/li&gt;
&lt;li&gt;The interaction with other users is always awkward.&lt;/li&gt;
&lt;li&gt;We get a bunch of unwanted messages and invitations.&lt;/li&gt;
&lt;li&gt;Sharing stuff in those networks feels fruitless, and generally, the things shared by other users are just looking for engagement (pointless polls, inspirational quotes, and so on).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The list goes on, but the main issue with them is that &lt;strong&gt;none of them actually work for networking&lt;/strong&gt;. When you want to meet people professionally, you only care about stuff like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;What do they do?&lt;/strong&gt; And generally the response is not only one thing.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Are they open to collaborating?&lt;/strong&gt; Some folks might be open for some activities, but not for others.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Do they share some passions with you?&lt;/strong&gt; Is great to be able to talk with your anime lover co-workers about the last episode of a show, or about mechanical keyboard customizations, or cats, or memes!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#networking-can-be-better"&gt;
  &lt;/a&gt;
  Networking can be better
&lt;/h2&gt;

&lt;p&gt;The solution so far was to create a custom website/portfolio to show up this kind of thing, and share the link everywhere so folks can find you. Luckily, we have a new player in town and is called &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt;. First and foremost, as you might imagine, &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; allows us to do networking answering the questions mentioned in the previous section:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-you-do"&gt;
  &lt;/a&gt;
  What do you do?
&lt;/h3&gt;

&lt;p&gt;You can create "highlights" about what you do, not only your professional updates like job position changes but actual highlights like a YouTube video you created, a Twitch stream you did, a blog post you wrote, a talk you gave, and so on. In your highlights, you can use tags to identify the activity and add participants if you did that activity with others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iTqCrXIT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im9pb4a06icofch5z8ys.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iTqCrXIT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/im9pb4a06icofch5z8ys.gif" alt="Highlights"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#are-you-open-to-collaborating"&gt;
  &lt;/a&gt;
  Are you open to collaborating?
&lt;/h3&gt;

&lt;p&gt;You can specify what are the things you're open to do with others: Beta testing, open-source contributions, live streaming, mentoring... even resume feedback! You get your own "personal bot" who will deal with the folks wanting to collaborate with you and will take your preferences as a base for that dialog.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MIWn9gnv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u30vydir3u21044lxgmo.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MIWn9gnv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u30vydir3u21044lxgmo.gif" alt="Opportunity preferences"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-your-passions"&gt;
  &lt;/a&gt;
  What are your passions?
&lt;/h3&gt;

&lt;p&gt;In your profile customization, you can add tags to yourself, so you can find likeminded professionals: Software developers, designers, cat dad/mom, streamers, dark mode enthusiasts, anime fans, gamers, animal rights defenders, star wars fans, dancers, introverts, and so on!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fEZzYSf6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4w9mn54jm96vngpcgofm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fEZzYSf6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4w9mn54jm96vngpcgofm.png" alt="Profile tags screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-not-only-networking"&gt;
  &lt;/a&gt;
  Is not only networking
&lt;/h2&gt;

&lt;p&gt;Besides the fact that it is an amazing networking experience, the UI is beautiful and simple (it has dark mode ❤️)...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vuK_M9XE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3baon1lx99kyqbu5pxm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vuK_M9XE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3baon1lx99kyqbu5pxm.png" alt="Profile screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It has DNS support so you can have your profile in your domain (mine is &lt;a href="//polywork.lukeshiru.me"&gt;polywork.lukeshiru.me&lt;/a&gt;), it has amazing features for finding and sharing new work opportunities such as the "Space Station", which allows you to search based on tags, collaboration openness and so on...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dWls2Bmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wue8cjuk86ws47am6efe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dWls2Bmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wue8cjuk86ws47am6efe.png" alt="Space station screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;... and the Multiverse, just to see what everyone is doing...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kWtNHQ7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5gmr2jhyob9wjxq6ylu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kWtNHQ7L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b5gmr2jhyob9wjxq6ylu.png" alt="Multiverse screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-i-use-polywork"&gt;
  &lt;/a&gt;
  How do I use Polywork
&lt;/h2&gt;

&lt;p&gt;Besides doing web development professionally, I also have open-source projects, a stream in Spanish called &lt;a href="https://hablemos.dev"&gt;hablemos.dev&lt;/a&gt;, and previously had a stream called "&lt;a href="https://lshi.ru/uwsyt"&gt;Untitled WebDev Stream&lt;/a&gt;", all my streams are on &lt;a href="https://lshi.ru/yt"&gt;my YouTube&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Instead of spamming in places like DEV creating posts every time I upload a new video to YouTube, or when I create a new open source project, I just create &lt;strong&gt;highlights&lt;/strong&gt; in &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; about those &lt;a href="https://polywork.lukeshiru.me/lukeshiru/highlights/da5614db-5f0c-4e40-9e19-c8c8026fbd55"&gt;videos&lt;/a&gt;, &lt;a href="https://polywork.lukeshiru.me/lukeshiru/highlights/f5b7c2d7-20dd-4df0-81f5-4492e227ff2b"&gt;repos&lt;/a&gt;, and even &lt;a href="https://polywork.lukeshiru.me/lukeshiru/highlights/e5be6648-4ed5-47f6-b812-e8e4d94014a6"&gt;my posts&lt;/a&gt; here in DEV. Because &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; is designed to self-promote and answer the question "What do you do?", people actually expect to see that in your profile. In there I don't feel I'm being annoying if I spam the things I do, and the best thing is that it's even encouraged because your profile will be even better with highlights on it.&lt;/p&gt;

&lt;p&gt;Because of this, I added &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; to my &lt;a href="https://lshi.ru"&gt;personal site&lt;/a&gt; a &lt;a href="https://twitter.com/lukeshiru/status/1417174170845126660"&gt;few weeks back&lt;/a&gt;, and I might get rid of &lt;a href="https://lshi.ru/lin"&gt;other links&lt;/a&gt; in there in the near future 😈&lt;/p&gt;

&lt;p&gt;Now, every time I create something new (a stream, a package, an app, and so on) I just update my &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; profile by adding a new highlight. In the near future I plan to use this great platform to find folks willing to work with me in some personal projects of mine, or to collaborate in live streams about WebDev 😄&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts
&lt;/h2&gt;

&lt;p&gt;When the folks at &lt;strong&gt;&lt;a href="https://www.polywork.com/"&gt;Polywork&lt;/a&gt;&lt;/strong&gt; asked me if I was interested in writing an article about my experience using the platform, I was on board pretty much instantly mainly because I love the work they have done and I honestly believe that's how you do networking on the web. If you want to take a look I have a bunch of &lt;a href="https://www.polywork.com/invite/lukeshiruvip"&gt;VIP invites left&lt;/a&gt; so you can skip the line.&lt;/p&gt;

&lt;p&gt;Go and give it a try, and if you did already, leave a comment with your opinion about it so folks have more to read about it.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>webdev</category>
      <category>promotion</category>
    </item>
    <item>
      <title>React-toastify v8 is live</title>
      <author>Fadi Khadra</author>
      <pubDate>Thu, 26 Aug 2021 21:16:33 +0000</pubDate>
      <link>https://dev.to/fkhadra/react-toastify-v8-is-live-4bal</link>
      <guid>https://dev.to/fkhadra/react-toastify-v8-is-live-4bal</guid>
      <description>&lt;p&gt;Never heard of react-toastify before? Go check the &lt;a href="https://fkhadra.github.io/react-toastify/introduction"&gt;demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React-toastify has been around for 5 years(will turn five the 8 November 🎂). Since the beginning, one of the goals was to provide a library that is highly customizable and also able to work out of the box. Every major release introduces breaking changes but this is for the best 👌.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-new-in-v8"&gt;
  &lt;/a&gt;
  What is new in v8
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yibF8rRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/5574267/130804494-a9d2d69c-f170-4576-b2e1-0bb7f13dd92d.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yibF8rRL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/5574267/130804494-a9d2d69c-f170-4576-b2e1-0bb7f13dd92d.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#who-doesnt-like-icons"&gt;
  &lt;/a&gt;
  Who doesn't like icons
&lt;/h3&gt;

&lt;p&gt;Let's break down what is happening in the gif above. Notifications of different types (&lt;code&gt;toast.info&lt;/code&gt;, &lt;code&gt;toast.error&lt;/code&gt;, &lt;code&gt;toast.success&lt;/code&gt;, &lt;code&gt;toast.warning&lt;/code&gt;) display an icon associated with the selected type. You can also notice that the progress bar color matches the type color.&lt;/p&gt;

&lt;p&gt;Don't be afraid 😱, if you don't like those icons you can use your own or remove them. This is what it looks like in practice.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Default toast behavior is untouched, no icon to display&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// same as toast(message, {type: "info"});&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;warn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Without icon&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You can provide any string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;🚀&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// custom icons have access to the theme and the toast type&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;And of course a component of your choice&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MyIcon&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Even a function, given you return something that can be rendered&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;  &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;//Disable icons&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ToastContainer&lt;/span&gt; &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#clear-separation-between-type-and-theme"&gt;
  &lt;/a&gt;
  Clear separation between type and theme
&lt;/h3&gt;

&lt;p&gt;Prior to v8, &lt;code&gt;toast.info&lt;/code&gt;, &lt;code&gt;toast.error&lt;/code&gt;, etc... Would display respectively a blue notification, a red notification, etc... This is not the case anymore. There are 3 distinct themes: &lt;code&gt;light&lt;/code&gt;, &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;colored&lt;/code&gt;. The theme can be applied globally or per notification.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Set the theme globally &lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ToastContainer&lt;/span&gt; &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"dark"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// define per toast&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Display a dark notification of type info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Display a light notification of type info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;light&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Display a blue notification of type info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;colored&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This separation will benefit theming in the future.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-promise-this-is-new-ill-tell-you-if-you-await"&gt;
  &lt;/a&gt;
  I promise this is new, I'll tell you if you await
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ObjOojPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5574267/130862557-8d13ddf0-c6bf-4f52-968a-1d91c62b6016.png" class="article-body-image-wrapper"&gt;&lt;img alt="v8-promise" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ObjOojPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5574267/130862557-8d13ddf0-c6bf-4f52-968a-1d91c62b6016.png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yt95t6cs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5574267/130862554-652397ed-1b1e-40d4-a250-c38734ec8e5d.png" class="article-body-image-wrapper"&gt;&lt;img alt="v8-promise-resolved" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yt95t6cs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/5574267/130862554-652397ed-1b1e-40d4-a250-c38734ec8e5d.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The library exposes a &lt;code&gt;toast.promise&lt;/code&gt; function. Supply a promise and the notification will be updated if it resolves or fails. When the promise is pending a spinner is displayed. Again you hide it, I bet you already know how to😆.&lt;/p&gt;

&lt;p&gt;Let's start with a simple example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resolveAfter3Sec&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;resolveAfter3Sec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;pending&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise is pending&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise resolved 👌&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise rejected 🤯&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Displaying a simple message is what you would want to do in 90% of cases. But what if the message you want to display depends on the promise response, what if you want to change some options for the error notification? Rest assured, under the hood, the library uses &lt;code&gt;toast.update&lt;/code&gt;. Thanks to this, you have full control over each notification.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resolveWithSomeData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;resolveAfter3Sec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;pending&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Promise is pending&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}){&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="c1"&gt;// other options&lt;/span&gt;
        &lt;span class="na"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;🟢&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}){&lt;/span&gt;
          &lt;span class="c1"&gt;// When the promise reject, data will contains the error&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MyErrorComponent&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because you have the full power of &lt;code&gt;toast.update&lt;/code&gt;, you can even supply a custom transition if you want 🤯&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--id716aap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/5574267/130869645-586777a3-3326-4664-917e-a13aee367c43.gif" class="article-body-image-wrapper"&gt;&lt;img alt="v8-promise-resolved" src="https://res.cloudinary.com/practicaldev/image/fetch/s--id716aap--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/5574267/130869645-586777a3-3326-4664-917e-a13aee367c43.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to take care of each step yourself you can use &lt;code&gt;toast.loading&lt;/code&gt; and update the notification yourself.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loading&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Please wait...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;//do something else&lt;/span&gt;
&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;All is good&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pass-data-even-when-you-are-not-rendering-a-react-component"&gt;
  &lt;/a&gt;
  Pass data even when you are not rendering a react component
&lt;/h3&gt;

&lt;p&gt;One way to pass data to the notification was to use the context api or provide your own component. Starting v8 a &lt;code&gt;data&lt;/code&gt; option is now available to make it easier.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;toast&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#i-just-want-to-change-few-colors"&gt;
  &lt;/a&gt;
  I just want to change few colors
&lt;/h3&gt;

&lt;p&gt;Most of the time, users are ok with the default style, they just want to change some colors to match their brand. I think one way to improve the DX for all of us is to embrace CSS variables. That's why the library has switched to css variables! &lt;br&gt;
All you want is to change the color of the progress bar? No problem&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;this&lt;/span&gt; &lt;span class="err"&gt;is&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;default&lt;/span&gt; &lt;span class="err"&gt;value&lt;/span&gt; &lt;span class="err"&gt;below&lt;/span&gt;
  &lt;span class="py"&gt;--toastify-color-progress-light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#4cd964&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#5ac8fa&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#007aff&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#34aadc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#5856d6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="m"&gt;#ff2d55&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can find the list of all exposed variables &lt;a href="//./how-to-style.md#override-css-variables"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading. You can access the full release note &lt;a href="https://fkhadra.github.io/react-toastify/migration-v8"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>library</category>
    </item>
    <item>
      <title>Walmart Store Sales Forecasting</title>
      <author>Phylis Jepchumba</author>
      <pubDate>Thu, 26 Aug 2021 21:16:08 +0000</pubDate>
      <link>https://dev.to/phylis/walmart-store-sales-forecasting-3ldm</link>
      <guid>https://dev.to/phylis/walmart-store-sales-forecasting-3ldm</guid>
      <description>&lt;p&gt;&lt;a href="https://www.kaggle.com/c/walmart-recruiting-store-sales-forecasting/data"&gt;The walmart dataset&lt;/a&gt; provides historical sales data of 45 stores of Walmart, each having various departments. &lt;/p&gt;

&lt;p&gt;The objective of this project is to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Predict the sales across various departments in each store.&lt;/li&gt;
&lt;li&gt;predict effect of markdowns on sales during the holiday.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will import necessary packages as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;seaborn&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;sns&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;plotly.express&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;px&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#data-preparation"&gt;
  &lt;/a&gt;
  Data Preparation
&lt;/h6&gt;

&lt;p&gt;The dataset contain the following files in the csv format:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;train.csv&lt;/strong&gt; : this file has 421570 rows and 5 columns. The columns contain the information for a store, department, date, weekly sales and whether a particular week is a holiday week or not&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;store.csv&lt;/strong&gt;  : this file has 45 rows and 3 columns. The columns correpond to the stores, their type and sizes of stores&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;features.csv&lt;/strong&gt; : this file 8190 rows and 12 columns. This file again has some further information regarding the stores and the region in which a particular store is located. It has date, temperature, fuel price, consumer price index, unemployment rate information for the region in which a particular store is located. It also has 5 columns MarkDown1-5 which corresponds to some promotional activities going on in different stores.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;walmart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'train.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;stores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'stores.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'features.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;testing&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'test.csv'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Merging of Data&lt;/strong&gt;&lt;br&gt;
Let's merge the data from 3 dataframes into a single dataframe and proceed further with a one dataframe.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;walmart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stores&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'left'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'left'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;testing_merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;testing&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stores&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'left'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;features&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;how&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'left'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Extracting Date Information&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The sales are given for Years 2012-2012 on weekly basis. So let's split the date column to extract information for year, month and week&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;split_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Date'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Date'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Year'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Month'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Day'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;
    &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'WeekOfYear'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isocalendar&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;week&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;   

&lt;span class="n"&gt;split_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="n"&gt;split_date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Columns Information: Data Types&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ppw0vK7V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocahunxspaf72qt1mqx3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ppw0vK7V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ocahunxspaf72qt1mqx3.png" alt="Screenshot (94)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most of the columns in the data are numeric columns except the IsHoliday which is of boolean type and Type represents an object &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Missing Values&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;missing_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isna&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;px&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;missing_values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;missing_values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;missing_values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Missing Values"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
       &lt;span class="n"&gt;labels&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Variable"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Missing Values"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pr564_KC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rsh28bea1byr3p8vbfr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pr564_KC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5rsh28bea1byr3p8vbfr.png" alt="Screenshot (82)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From the above plot;&lt;br&gt;
Markdown1-5 contain lots of missing values, more than 250000 in each markdown column. &lt;/p&gt;
&lt;h6&gt;
  &lt;a href="#exploratory-data-analysis"&gt;
  &lt;/a&gt;
  Exploratory Data Analysis.
&lt;/h6&gt;

&lt;p&gt;&lt;strong&gt;Popularity of Store Types&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aAC9WYo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15vpyszwo0flpgrbisku.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aAC9WYo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/15vpyszwo0flpgrbisku.png" alt="Screenshot (83)"&gt;&lt;/a&gt;&lt;br&gt;
Insights;&lt;br&gt;
Type A stores are more popular than the B and C types&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Monthly Sales - Per Year&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Insights&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Month of January witnessed the lowest sales for 2011 and 2012 while for 2010 the weekly sales are not given in the data.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;From Feburary till October the weekly sales nearly remains constant around 15000 for the 3 years.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;November and December showed the highest sales for 2010 and 2011 while for 2012 the sales data has not been provided.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As shown below;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ybySdEHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rspaosasrme1l3clwd72.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ybySdEHC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rspaosasrme1l3clwd72.png" alt="Screenshot (84)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Weekly Sales - per Year&lt;/strong&gt;&lt;br&gt;
Insights&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2012 week 14 recorded the highest sales as compared to other weeks.&lt;/li&gt;
&lt;li&gt;Thanksgiving holiday and one week before Christmas witnessed the highest sales for the years 2010 and 2011.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As shown;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PuuaNG48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9sodnf5jfgv6wtp7ln9t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PuuaNG48--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9sodnf5jfgv6wtp7ln9t.png" alt="Screenshot (85)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Department Sales&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Different departments showed different levels of average sales&lt;/p&gt;

&lt;p&gt;As shown;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JqGem0mp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j553dk66a3cwre3rlio0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JqGem0mp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j553dk66a3cwre3rlio0.png" alt="Screenshot (86)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Average Store Sales - Year Wise&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The overall trend of store sales over the 3 years remain the same as it depends on the type of store and its size.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LpE4lN6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfnh3brpdpg9e0ukp0at.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LpE4lN6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yfnh3brpdpg9e0ukp0at.png" alt="Screenshot (97)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xdRs2yLB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1a5ahgle2tml7u6ucdtw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xdRs2yLB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1a5ahgle2tml7u6ucdtw.png" alt="Screenshot (98)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uRAwA-bB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/je6trq52mz43uwiqsp73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRAwA-bB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/je6trq52mz43uwiqsp73.png" alt="Screenshot (99)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Holidays Vs Nonholidays Sales&lt;/strong&gt; &lt;br&gt;
*Despite being the less percentage of holiday weeks the sales in the holidays week are on the average higher than in the non-holiday weeks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tZLLdnUj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7ioyvjhtkc4ptm9dev1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tZLLdnUj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p7ioyvjhtkc4ptm9dev1.png" alt="Screenshot (88)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relationship: Week of Year vs Sales&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Weekly sales increases towards the end of the year as shown;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5pPip6tD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkxae80qdvx4s3auhd78.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5pPip6tD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hkxae80qdvx4s3auhd78.png" alt="Screenshot (89)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relationship: Size of Store vs Sales&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The sales generally increases with increase of size of store.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dXzVMxu1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdu5i3lxhyf1tk6dl0nx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dXzVMxu1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdu5i3lxhyf1tk6dl0nx.png" alt="Screenshot (92)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relationship: Fuel Price vs Sales&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Between fuel price and the sales there doesn't seem to exist any clear relationship.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r7OKmnHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzvghho6c0kt1enjphcr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r7OKmnHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jzvghho6c0kt1enjphcr.png" alt="Screenshot (95)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relationship: Unemployment vs Sales&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Unemployment rate doesn't seem to have any effect on the weekly sales.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HBoLFUrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5yy3h20jflw6a0mos7e5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HBoLFUrp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5yy3h20jflw6a0mos7e5.png" alt="Screenshot (96)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Correlation Matrix&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lets now study the relationship between the different columns numerically to check how they correlate with the weekly sales in order to confirm the inferences we have gathered from the above EDA study. &lt;/p&gt;

&lt;p&gt;To carry out Correlation Matrix we will first convert the 'Type' column to numerical values as shown;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;storetype_values&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'A'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'B'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'C'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Type_Numeric'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;storetype_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Type_Numeric'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;storetype_values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IoZI9Wrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2bg6pz6432sgptanw7a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IoZI9Wrv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w2bg6pz6432sgptanw7a.png" alt="Screenshot (93)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Insights obtained from above correlation matrix are;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Department, Store size and Type have moderate correlation with the weekly sales&lt;/li&gt;
&lt;li&gt;Markdown1-5 have very weak correlation with the weekly sales, so we will leave these columns out&lt;/li&gt;
&lt;li&gt;Temperature. Fuel price, CPI and Unemployment are very weakly coorelated with the weekly sales, so these columns will also be dropped out&lt;/li&gt;
&lt;li&gt;IsHoliday will be considered for the further analysis as the sales in the holiday weeks are higher than in the non-holiday weeks&lt;/li&gt;
&lt;li&gt;We will also leave out Month and Day as this information is already contained in the WeekOfYear.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#data-preparation-for-model-training"&gt;
  &lt;/a&gt;
  Data Preparation for Model Training.
&lt;/h6&gt;

&lt;p&gt;Following steps will be performed for preparing the data for the subsequent model training.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Based on the EDA and Correlation study, the columns with weak relationship with the target column will be dropped&lt;/li&gt;
&lt;li&gt;Input and Target dataframes will be created&lt;/li&gt;
&lt;li&gt;Inputs will be scaled in the 0 to 1 range&lt;/li&gt;
&lt;li&gt;Training and testing datasets will be created&lt;/li&gt;
&lt;li&gt;Generate predictions on training data
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'Date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Temperature'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'Fuel_Price'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="s"&gt;'MarkDown4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown5'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'CPI'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Unemployment'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Month'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Day'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;testing_merged&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'Date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Temperature'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'Fuel_Price'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="s"&gt;'MarkDown4'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'MarkDown5'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'CPI'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Unemployment'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Month'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Day'&lt;/span&gt; &lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Identify input and target columns.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Weekly_Sales'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;target_col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Weekly_Sales'&lt;/span&gt;

&lt;span class="n"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;target_col&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Scale the values&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.preprocessing&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;MinMaxScaler&lt;/span&gt;

&lt;span class="n"&gt;scaler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MinMaxScaler&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scaler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scaler&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;testing_merged&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;input_cols&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create training and testing sets&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.model_selection&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;
&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;X_test&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_train&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y_test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;train_test_split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;test_size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;random_state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#machine-learning"&gt;
  &lt;/a&gt;
  Machine Learning
&lt;/h6&gt;

&lt;p&gt;We will use Linear regression algorithm.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sklearn.linear_model&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;LinearRegression&lt;/span&gt;

&lt;span class="c1"&gt;# Create and train the model
&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;LinearRegression&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Generate predictions on training data
&lt;/span&gt;&lt;span class="n"&gt;train_preds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;predict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X_train&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;train_preds&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output will be;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array([17035.12035741, 15737.5350701 , 22990.63793901, ...,
       20276.77727003, 21110.53004444, 23548.55581834])
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xNLewitE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erfy5qzbwmua9yc2wkvs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xNLewitE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/erfy5qzbwmua9yc2wkvs.png" alt="Screenshot (91)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Phylis123/Walmart-Store-Sales-Forecasting"&gt;Full source code&lt;/a&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>datascience</category>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>I built an extension to manage my inspiration from Dribbble, Behance, and Uplabs. </title>
      <author>Lucas L.</author>
      <pubDate>Thu, 26 Aug 2021 21:12:14 +0000</pubDate>
      <link>https://dev.to/llimabr/i-built-a-browser-extension-to-manage-my-inspiration-from-dribbble-behance-and-uplabs-2jae</link>
      <guid>https://dev.to/llimabr/i-built-a-browser-extension-to-manage-my-inspiration-from-dribbble-behance-and-uplabs-2jae</guid>
      <description>&lt;p&gt;Hey, y'all! 🤓&lt;/p&gt;

&lt;p&gt;After building &lt;a href="https://dropin.versoly.com/"&gt;my first extension&lt;/a&gt; a few months ago, I decided to do it again and do something that would help me (again).&lt;/p&gt;

&lt;p&gt;I love coding, but I'm terrible with the design piece of anything that I try to build. 😅&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-i-do-when-i-want-to-build-something"&gt;
  &lt;/a&gt;
  What do I do when I want to build something
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt; Go to Dribbble, Behance, and Uplabs.&lt;/li&gt;
&lt;li&gt;Search for what I'm trying to build (an audio app, a Desktop app...)&lt;/li&gt;
&lt;li&gt;Open hundreds of shots that I think are interesting.&lt;/li&gt;
&lt;li&gt;Save them to my special folder "Idea #XXX💡" with a descriptive title: "nice navbar"/ "great buttons" / "nice hero section"&lt;/li&gt;
&lt;li&gt;Keep the ones I like the most&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#my-solution"&gt;
  &lt;/a&gt;
  My solution
&lt;/h3&gt;

&lt;p&gt;Since this is really boring and I'm constantly looking for inspiration there, I decided to put everything in one place.&lt;/p&gt;

&lt;p&gt;Meet, &lt;strong&gt;&lt;a href="https://chrome.google.com/webstore/detail/inspiring-board/ccnoapmidfaoglgpomngomeojjdbpnih"&gt;Inspiring Board&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;⚡️ Browser extension with a dashboard where you can add shots from Dribbble, Behance, and Uplabs.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Super simple, no ads, and all data stored locally. 😬&lt;/p&gt;

&lt;p&gt;I even did a promotional video:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/JKZOHqLGIDs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-stack"&gt;
  &lt;/a&gt;
  The stack
&lt;/h3&gt;

&lt;p&gt;I used &lt;a href="https://github.com/lxieyang/chrome-extension-boilerplate-react"&gt;this boilerplate&lt;/a&gt;.&lt;br&gt;
That comes with React, Webpack, and some nice dev tools.&lt;br&gt;
I just added &lt;strong&gt;TailwindCSS&lt;/strong&gt; on top of it. 😄&lt;/p&gt;

&lt;p&gt;I have a ton of ideas to improve, but if you give it a try, please let me know your feedback.&lt;/p&gt;

&lt;p&gt;Bye!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tailwindcss</category>
      <category>react</category>
    </item>
    <item>
      <title>Onboarding New Developers (a series)</title>
      <author>Elanor</author>
      <pubDate>Thu, 26 Aug 2021 21:05:50 +0000</pubDate>
      <link>https://dev.to/oranges13/onboarding-new-developers-a-series-1n40</link>
      <guid>https://dev.to/oranges13/onboarding-new-developers-a-series-1n40</guid>
      <description>&lt;p&gt;Congratulations! You’ve hired a new employee! But what now? Maybe your company has a regimented onboarding process for new employees already. Maybe it doesn’t. Either way, introducing and integrating them into your team will be a unique, but important process.&lt;/p&gt;

&lt;p&gt;I recently hired and needed to onboard a new developer and, as a new manager myself, did not have a lot of resources to start with. The last thing I wanted was my new employee to arrive and feel overwhelmed or lost during their first few days and weeks. Getting your new employee familiar with procedures, software, and the way your team works at a comfortable pace will go a long way to make them a productive member of the team!&lt;/p&gt;

&lt;p&gt;As I was researching this question: “How do you onboard a new developer?” I came across a lot of different approaches. I took many of the recommendations and combined them with my own desires, if I were that new employee. I was constantly asking myself, “How would I want to be introduced and welcomed to a team?” As you are reading these ideas, make sure that you’re thinking about how you can personalize this process; each team and each employee will be different.&lt;/p&gt;

&lt;p&gt;Let’s get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-your-goals-for-your-new-hire"&gt;
  &lt;/a&gt;
  What are your goals for your new hire?
&lt;/h2&gt;

&lt;p&gt;The entire onboarding process depends on your goal for the employee as a member of your team. This should also be informed by their role within the team. If they are a junior member, you wouldn’t expect them to be a subject-matter expert or leading project initiatives at the end of their first 90 days. If they’re being hired into a more senior position, however, you should expect them to be comfortable with small leadership tasks at the end of your onboarding process.&lt;/p&gt;

&lt;p&gt;Before you can begin onboarding, or even developing an onboarding plan, you need to consider why this person was hired in the first place. How can they become a contributing member of your team? What tools will they need to be successful? And how can you help?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-resources-are-already-available-to-you"&gt;
  &lt;/a&gt;
  What resources are already available to you?
&lt;/h2&gt;

&lt;p&gt;Don’t reinvent the wheel if you don’t have to. Make sure to fully utilize any resources that your company provides to new hires and gather links to these items in a central location so they are easy for your new hire to access.&lt;br&gt;
Our company has a well-defined goal setting process which it uses to evaluate employee performance at the end of each calendar year. Each employee’s annual goals are linked with our company’s Core Values, so many of the goals of onboarding the new employee were linked with these core values as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#existing-onboarding-process"&gt;
  &lt;/a&gt;
  Existing Onboarding Process
&lt;/h2&gt;

&lt;p&gt;More than likely, your company has some sort of dedicated on-boarding process. In the case of my company, the new employee is shipped equipment, granted access to systems and servers, and has accounts created in various benefits and HR management systems. However, there was no concrete onboarding process for our development team. (That’s one of the reasons I’m writing this article; to help managers like you figure out what you might need to be successful!)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intranet"&gt;
  &lt;/a&gt;
  Intranet
&lt;/h3&gt;

&lt;p&gt;Your company most likely has some sort of repository of internal documents, such as benefits information, employee handbooks, etc. Wherever this may be located, make sure you go over it with your employee so they understand how to access these documents and what is included. Your HR department may go over this, but it can’t hurt to reiterate the importance of reviewing all the important “corporate” stuff.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-documentation-internal-amp-external"&gt;
  &lt;/a&gt;
  Code Documentation (internal &amp;amp; external)
&lt;/h3&gt;

&lt;p&gt;Hopefully your team maintains some code documentation so that the new employee does not have to rely on face-to-face conversations with other employees. If they do, make sure that your employee has time to read through all of this information and is shown how to access it.&lt;br&gt;
If you don’t have this kind of documentation for your systems and software, you will most likely need to schedule time to walk them through the basics of how the systems operate. This might involve scheduling time with other team members who know more about specific components and can perform adequate walkthroughs.&lt;/p&gt;

&lt;p&gt;Even with technical documentation in writing, ask your new employee how they learn best. It’s possible that they will learn more effectively with a walkthrough than by reading documentation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#team-experts-and-mentorship"&gt;
  &lt;/a&gt;
  Team Experts and Mentorship
&lt;/h3&gt;

&lt;p&gt;The most important part of onboarding is integrating the new employee into your team! And a great way to get them integrated is to have your team experts on different parts of your systems mentor the new employee as they are working through tasks that deal with those parts. If you do not have “team experts” or have a few people who may fit the bill, try to identify at least one person who knows the most about a specific facet of your system or software. Have a diverse set of work ready for your new employee to work through, and as they get to each new area, they can pair up with the team expert to learn from their expertise.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-11s-with-your-new-employee"&gt;
  &lt;/a&gt;
  Setting up 1:1s with your new employee
&lt;/h2&gt;

&lt;p&gt;This is actually one of the first steps to a successful onboarding process, in my opinion. You, as the manager, need to be available to your new hire to answer questions and guide them along the process as they get used to the way your team and your company do things. One of the very first tasks you should do when your employee gets access to their calendar is to set up regular meetings with them on an ongoing basis.&lt;/p&gt;

&lt;p&gt;Initially, the 1:1s need to be much more frequent then your normal meeting cadence with your existing team members. For instance, I meet with my team members on a bi-weekly basis. With my new hire, I met with them weekly for the first month and then checked in to see how they felt about moving to the bi-weekly schedule at that point. I was also available for ad-hoc meetings, calls, and slack chats whenever I could be, since I fully expected them to have lots of questions in the first weeks they were with us.&lt;/p&gt;

&lt;p&gt;If you, as the manager, don’t have that kind of availability, try to have a senior member of your team act as a mentor and onboarding guide. (Even if you do have wide availability, having a team mentor is still a good idea). It’s crucial that your new hire isn’t left waiting with questions while they are getting acclimated; they might forget what they wanted to ask and miss out on critical details or make a silly mistake that will take more time to fix down the road. Better that they can address their problems and questions immediately then having to wait.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;The next step is to take all of this information that you have gathered and make a plan of action for your employees first days and weeks. You don't want your new employee to be overwhelmed with tasks, but you also don't want them sitting at their desk twiddling their thumbs.&lt;/p&gt;

&lt;p&gt;In the next few posts in this series, I will go over a 7-day, 30-day, and 90-day plan to get your employee integrated into your team and become a productive developer at your company!&lt;/p&gt;

</description>
      <category>onboarding</category>
      <category>developers</category>
      <category>teams</category>
    </item>
    <item>
      <title>🎬CSS Text Typing Animation | HTML &amp; CSS</title>
      <author>Robson Muniz</author>
      <pubDate>Thu, 26 Aug 2021 20:47:01 +0000</pubDate>
      <link>https://dev.to/robsonmuniz16/css-text-typing-animation-html-css-3b4j</link>
      <guid>https://dev.to/robsonmuniz16/css-text-typing-animation-html-css-3b4j</guid>
      <description>&lt;p&gt;In todays &lt;strong&gt;tutorial&lt;/strong&gt; you’ll learn how to create a Simple Text Typing Animation using only HTML &amp;amp; CSS or Typewriter Text Animation.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#-youtube-cqbemgkrfq"&gt;
  &lt;/a&gt;
  &lt;iframe width="710" height="399" src="https://www.youtube.com/embed/CqBEmgkR_fQ"&gt;
&lt;/iframe&gt;

&lt;/h2&gt;

&lt;p&gt;Basically, this animation is created using JavaScript or jQuery library, but today I’ll show you how you can create this text typing animation using only HTML &amp;amp; CSS. &lt;/p&gt;




&lt;p&gt;First, create an HTML file with the name of index.html and paste the given codes in your HTML file. Remember, you’ve to create a file with .html extension.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;CSS Typing Text Animation | HTML &lt;span class="err"&gt;&amp;amp;&lt;/span&gt; CSS&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"static-txt"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I'm&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"dynamic-txts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;Youtuber&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;Designer&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;Developer&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;Freelancer&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Second, create a CSS file with the name of style.css and paste the given codes in your CSS file. Remember, you’ve to create a file with .css extension.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="sx"&gt;url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&amp;amp;display=swap')&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"poppins"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;min-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#082032&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="nc"&gt;.static-txt&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="nc"&gt;.dynamic-txts&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dynamic-txts&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;list-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ff4c29&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;60px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;slide&lt;/span&gt; &lt;span class="m"&gt;12s&lt;/span&gt; &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;slide&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-360px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dynamic-txts&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.dynamic-txts&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#082032&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#ff4c29&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt; &lt;span class="m"&gt;3s&lt;/span&gt; &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;typing&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;40&lt;/span&gt;&lt;span class="o"&gt;%,&lt;/span&gt;
    &lt;span class="err"&gt;60&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;📚&lt;strong&gt;Resources:&lt;/strong&gt;&lt;br&gt;
 Pic used in the Project: &lt;a href="https://bit.ly/37NxuuO"&gt;https://bit.ly/37NxuuO&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Should websites have a dark-mode toggle button?</title>
      <author>Nathaniel</author>
      <pubDate>Thu, 26 Aug 2021 20:43:24 +0000</pubDate>
      <link>https://dev.to/shadowfaxrodeo/should-websites-have-a-dark-mode-toggle-button-1an1</link>
      <guid>https://dev.to/shadowfaxrodeo/should-websites-have-a-dark-mode-toggle-button-1an1</guid>
      <description>&lt;p&gt;I'm currently working on a mostly text based website. We are supporting &lt;code&gt;dark-mode&lt;/code&gt; using css &lt;code&gt;media-queries&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We're currently discussing if we should have a toggle button. &lt;/p&gt;

&lt;p&gt;Not all devices support dark-mode, and users don't always want to stick with the choice made by their OS.&lt;/p&gt;

&lt;p&gt;On the other hand, this is just extra code that needs to be downloaded by every user — and it needs to remember their preferences with &lt;code&gt;localStorage&lt;/code&gt;, and I like to not create data when I can help it.&lt;/p&gt;

&lt;p&gt;What do you think? Is it actually useful to have a dark mode toggle? or should we stick to supporting the choice made by the OS?&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>webdev</category>
      <category>css</category>
      <category>a11y</category>
    </item>
    <item>
      <title>AWS-Azure Mapping Cheat Sheet</title>
      <author>Regnard Raquedan</author>
      <pubDate>Thu, 26 Aug 2021 20:15:03 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-azure-mapping-cheat-sheet-1dom</link>
      <guid>https://dev.to/aws-builders/aws-azure-mapping-cheat-sheet-1dom</guid>
      <description>&lt;p&gt;Between Amazon's &lt;a href="https://aws.amazon.com"&gt;AWS&lt;/a&gt; and Microsoft's &lt;a href="https://www.azure.com"&gt;Azure&lt;/a&gt;, you have two-thirds of the world cloud computing infrastructure market share-- with AWS having twice the size of Azure's slide of the pie. &lt;/p&gt;

&lt;p&gt;That's why you have people like me who straddle back and forth between the two cloud behemoths, and the services can become hard to keep track of. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wdwf_F_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fe74lr91b91rzni4oxri.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wdwf_F_r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fe74lr91b91rzni4oxri.gif" alt="Switching between AWS and Azure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's relatively easy when you're dealing with the building block services like &lt;strong&gt;EC2 Instances&lt;/strong&gt; in AWS and &lt;strong&gt;Virtual Machines&lt;/strong&gt; in Azure, but  it gets a little confusing when you're looking at more advanced services, like the service equivalent to &lt;strong&gt;AWS CodeCommit&lt;/strong&gt; (Spoiler: it's &lt;strong&gt;Azure DevOps&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;This information is handy too when you're preparing for a certification exam. Fundamental-level certifications like Azure Fundamentals (AZ-900) and AWS Certified Cloud Practitioner (CLF-C01) covers a very broad range of services, and it's very likely that you will find yourself “translating” between AWS and Azure.&lt;/p&gt;

&lt;p&gt;One important thing to note is that mapping each service 1:1 might not be possible, but feature parity might be achieved by a combination of services.&lt;/p&gt;

&lt;p&gt;Using the exam objectives of the &lt;a href="https://aws.amazon.com/certification/certified-cloud-practitioner/"&gt;AWS Certified Cloud Practitioner&lt;/a&gt; exam, here's a cheat sheet to lay out the mapping:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-compute-services"&gt;
  &lt;/a&gt;
  1. Compute services
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://aws.amazon.com/products/compute/"&gt;AWS&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://azure.microsoft.com/en-ca/product-categories/compute/"&gt;Azure&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Elastic Compute Cloud (EC2)&lt;/td&gt;
&lt;td&gt;Virtual Machine (VM)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Auto-scaling&lt;/td&gt;
&lt;td&gt;VM Scale Sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Elastic Container Services&lt;/td&gt;
&lt;td&gt;Container Instances&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lambda&lt;/td&gt;
&lt;td&gt;Functions&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#2-storage-services"&gt;
  &lt;/a&gt;
  2. Storage services
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://aws.amazon.com/products/storage/"&gt;AWS&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://azure.microsoft.com/en-us/product-categories/storage/"&gt;Azure&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;S3&lt;/td&gt;
&lt;td&gt;Virtual Machines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Elastic Block Storage&lt;/td&gt;
&lt;td&gt;Storage Account&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;S3 Glacier&lt;/td&gt;
&lt;td&gt;Archive storage&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Snowball&lt;/td&gt;
&lt;td&gt;Data Box&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Elastic File System&lt;/td&gt;
&lt;td&gt;Files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Storage Gateway&lt;/td&gt;
&lt;td&gt;StorSimple&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#3-networking-services"&gt;
  &lt;/a&gt;
  3. Networking services
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://aws.amazon.com/products/networking/"&gt;AWS&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://azure.microsoft.com/en-us/product-categories/networking/"&gt;Azure&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Virtual Private Cloud (VPC)&lt;/td&gt;
&lt;td&gt;Virtual Network&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Route 53&lt;/td&gt;
&lt;td&gt;DNS&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Direct Connect&lt;/td&gt;
&lt;td&gt;ExpressRoute&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#4-database-services"&gt;
  &lt;/a&gt;
  4. Database services
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://aws.amazon.com/products/databases/"&gt;AWS&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://azure.microsoft.com/en-ca/product-categories/databases/"&gt;Azure&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;RDS&lt;/td&gt;
&lt;td&gt;SQL Database&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DynamoDB&lt;/td&gt;
&lt;td&gt;Cosmos DB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Redshift&lt;/td&gt;
&lt;td&gt;Synapse Analytics&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#5-cost-management"&gt;
  &lt;/a&gt;
  5. Cost management
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://aws.amazon.com/aws-cost-management/"&gt;AWS&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://azure.microsoft.com/en-ca/services/cost-management/"&gt;Azure&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Trusted Advisor&lt;/td&gt;
&lt;td&gt;Advisor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cost Explorer&lt;/td&gt;
&lt;td&gt;Cost Management&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;QuickSight&lt;/td&gt;
&lt;td&gt;Power BI&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Organizations&lt;/td&gt;
&lt;td&gt;Subscription Management&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;This list is not exhaustive by any means, but I think it's a good starting point to help you with the high-level AWS-Azure mapping. Also, if I got anything wrong, I welcome your feedback! &lt;/p&gt;

&lt;p&gt;👉🏻 &lt;a href="https://www.twitter.com/regnard"&gt;Follow me on Twitter&lt;/a&gt;  &lt;/p&gt;

</description>
      <category>aws</category>
      <category>azure</category>
      <category>cloud</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
