<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Do Developers Have Too Many Options?</title>
      <author>Saji Wang</author>
      <pubDate>Mon, 19 Jul 2021 14:22:49 +0000</pubDate>
      <link>https://dev.to/codesphere/do-developers-have-too-many-options-1eo9</link>
      <guid>https://dev.to/codesphere/do-developers-have-too-many-options-1eo9</guid>
      <description>&lt;p&gt;It feels like every other week there is some new web framework popping up on HackerNews, promising to cause a ground-breaking paradigm shift. While some of these "innovations", like NoSQL databases or front-end javascript libraries, might make life easier for many developers, there's no question that these "innovations" have caused the technologies used by developers to become increasingly diverse, perhaps even to a fault.&lt;/p&gt;

&lt;p&gt;The golden question that's been debated by developers for years, of course, is whether the abundance of options actually creates a net good for developers and users. So does it?&lt;br&gt;
Let's take a closer look…&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#framework-fatigue"&gt;
  &lt;/a&gt;
  Framework Fatigue
&lt;/h3&gt;

&lt;p&gt;As someone who does a good amount of front-end development, I can say with confidence that ReactJS makes my life easier. I love being able to create reusable components, handle inputs easily, and set up conditional rendering with a couple characters.&lt;/p&gt;

&lt;p&gt;The potential issue isn't that a tool exists that makes our life easier. It's the fact that 20 tools exist to make our life easier in the exact same way.&lt;/p&gt;

&lt;p&gt;Are there minor differences between React, Angular, Vue, Django, Ember, Meteor, and the 50 other web frameworks? Yes. Are you going to be able to successfully build almost any website no matter the framework you choose? Also yes.&lt;br&gt;
The different use cases of these frameworks have little to do with the underlying technology, and more so are just a matter of preference.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#new-hires"&gt;
  &lt;/a&gt;
  New Hires
&lt;/h3&gt;

&lt;p&gt;A common frustration that people have with the abundance of options is that it can make applying for developer roles particularly difficult. Many employers will list their specific tech stack as a requirement for the role.&lt;/p&gt;

&lt;p&gt;While listing "Javascript" or "SQL" as a skill is definitely reasonable, when developers list hyper-specific web frameworks or database technologies, it creates a landscape where those looking for a job are forced to take a crash course in each of these technologies.&lt;/p&gt;

&lt;p&gt;In reality, if you have the JS or SQL fundamentals down, it's not going to take you that long to adapt to your new employer's tech stack. The expectation that developers should know every specific technology prior to being hired is therefore counter-productive.&lt;/p&gt;

&lt;p&gt;In addition, there is an argument to be made that having developers gain experience in all these separate, yet extremely similar, technologies makes it harder for the team to work together. A minority of developers actually get to choose their own tech stack(StackOverflow' 2020 Developer Survey), so a good amount of us are going to be left working in a framework that we don't prefer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E82lvZrd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60qr9n4ph16on3p0ecix.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E82lvZrd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/60qr9n4ph16on3p0ecix.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#the-myth-of-sparse-resources"&gt;
  &lt;/a&gt;
  The Myth of Sparse Resources
&lt;/h3&gt;

&lt;p&gt;I think an argument that gets thrown around a lot that does not have a ton of merit is the idea that as the amount of technologies increases, the amount of learning resources on each technology is going to decrease.&lt;/p&gt;

&lt;p&gt;Let's be honest here, there's FAR from a shortage of developer tutorials. I'd be incredibly surprised if you were able to find a web technology that didn't have at least one article or a video covering how to use it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NQK7TnkI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahsjt2ty5tx7anjeomwr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NQK7TnkI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ahsjt2ty5tx7anjeomwr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H7BpdQK0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtuxuy6r16pycpxcu30r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H7BpdQK0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtuxuy6r16pycpxcu30r.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nX8BsABj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nx6g8e3c1fcyqwepp4op.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nX8BsABj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nx6g8e3c1fcyqwepp4op.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#risk"&gt;
  &lt;/a&gt;
  Risk
&lt;/h3&gt;

&lt;p&gt;Another common argument in this debate is that when the developer landscape is constantly changing, there comes an incredible amount of risk in choosing a tech stack.&lt;/p&gt;

&lt;p&gt;We all know migrating to different web technology is hard, and that's why most companies elect to maintain an older tech stack instead of transitioning to the status quo.&lt;/p&gt;

&lt;p&gt;These "innovative" web technologies, by nature of being new instead of being built on existing tech, can only be so effective in the short run. Chances are, by the time companies migrate to your new framework, a better framework is already being released.&lt;/p&gt;

&lt;p&gt;A company looking to pick a tech stack is therefore going to be much safer building their software with vanilla JS, instead of a framework that can be deprecated or antiquated in a couple of years.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#competition-makes-us-better%C2%A0off"&gt;
  &lt;/a&gt;
  Competition makes us better off
&lt;/h3&gt;

&lt;p&gt;Probably the greatest argument in support of the web development landscape we see today is that the competition among frameworks and technologies makes us better off. Would HTML5 be what it is today without Adobe Flash? Would we have React Native without Flutter or Xamarin?&lt;/p&gt;

&lt;p&gt;The tech landscape is always going to evolve. We can at least find solace in the fact that the creators of new web technologies are going to try their best at making development easier, more secure, and more efficient so that they can capture the market.&lt;/p&gt;

&lt;p&gt;At Codesphere, we're proud to be competing with the likes of AWS, Heroku, and Netlify because we think that we can make cloud development much easier for developers. If developers don't end up wanting the tools we offer, so be it. But we're confident that we can make a real difference in software development and we're excited at the opportunity to make our case.&lt;/p&gt;

&lt;p&gt;Does this make things harder for new hires and companies picking tech stacks? Probably a little bit, but I'm not sure that the alternative is any more viable.&lt;/p&gt;




&lt;p&gt;What do you think? Do we have too many options? Do you like getting to choose between so many different web frameworks?&lt;br&gt;
Let us know down below!&lt;/p&gt;

&lt;p&gt;Brought to you from your good friends at &lt;a href="https://link.codesphere.com/BK"&gt;Codesphere&lt;/a&gt;, the next-generation cloud provider.&lt;/p&gt;

</description>
      <category>frameworks</category>
      <category>webdev</category>
      <category>discuss</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to Build an Interactive Flow Map in JavaScript</title>
      <author>andreykh1985</author>
      <pubDate>Mon, 19 Jul 2021 14:07:49 +0000</pubDate>
      <link>https://dev.to/andreykh1985/how-to-build-an-interactive-flow-map-in-javascript-mja</link>
      <guid>https://dev.to/andreykh1985/how-to-build-an-interactive-flow-map-in-javascript-mja</guid>
      <description>&lt;h6&gt;
  &lt;a href="#a-stepbystep-tutorial-showing-how-to-create-an-interactive-js-flow-map-illustrated-by-visualizing-data-on-migration-to-the-us"&gt;
  &lt;/a&gt;
  &lt;em&gt;A step-by-step tutorial showing how to create an interactive JS Flow Map. Illustrated by visualizing data on migration to the US.&lt;/em&gt;
&lt;/h6&gt;

&lt;p&gt;It may seem to be complicated to create an interactive Flow Map for the Web using JavaScript. But it’s not! This easy-to-follow tutorial will show you how to build beautiful JS flow maps without too much effort.&lt;/p&gt;

&lt;p&gt;In these difficult times of the pandemic, there is a lot of confusion and concern about the immigration status of people around the globe. I decided to take a look at the immigration data of the US which has more migrants than any other country in the world. Here, I explore where these immigrants come from and represent the top 15 countries that contributed the highest number of migrants to the US in the year 2019.&lt;/p&gt;

&lt;p&gt;A flow map seems the perfect way to showcase the inflow of migrants into the United States from various countries. Before going further, let me give you a brief idea about a flow map and its uses.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-flow-map"&gt;
  &lt;/a&gt;
  What is a Flow Map?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.anychart.com/chartopedia/chart-type/flow-map/"&gt;Flow Maps&lt;/a&gt; geographically visualize the movement of objects — for example, people or goods from one location to another and their amount.&lt;/p&gt;

&lt;p&gt;A flow map is a type of connector map that is drawn by connecting points placed on a map by straight or curved lines with an arrow or marker indicating the direction of the flow. Generally, the magnitude of the flow is represented by the thickness of the line.&lt;/p&gt;

&lt;p&gt;Start and endpoints for the connectors in these maps are defined by the latitude and longitude parameters so it’s necessary to set these for each connector. Note that the latitude of the point should be defined first and then the longitude for each point.&lt;/p&gt;

&lt;p&gt;For example, here’s the flow map I will have created by the end of this tutorial. [&lt;a href="https://codepen.io/shacheeswadia/pen/abJJxvx"&gt;CodePen&lt;/a&gt; | &lt;a href="https://playground.anychart.com/a8W1R42d/"&gt;Playground&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lqUNWdCi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0z0196c8suzfqm8lph6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lqUNWdCi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z0z0196c8suzfqm8lph6.png" alt="An interactive JS flow map being visualized along this tutorial"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-flow-map-with-javascript"&gt;
  &lt;/a&gt;
  Creating a Flow Map with JavaScript
&lt;/h2&gt;

&lt;p&gt;There are a lot of good &lt;a href="https://en.wikipedia.org/wiki/Comparison_of_JavaScript_charting_libraries"&gt;JavaScript charting libraries&lt;/a&gt; that can be used to create compelling data visualizations. Many of them provide the capabilities to build maps and have their strengths. So you can use whichever library best fits your project requirements.&lt;/p&gt;

&lt;p&gt;In this tutorial, I am using &lt;a href="https://www.anychart.com/"&gt;AnyChart&lt;/a&gt;. It looks the most suitable here with the out-of-the-box flow map option and in-depth &lt;a href="https://docs.anychart.com/"&gt;documentation&lt;/a&gt; to understand the process.&lt;/p&gt;

&lt;p&gt;A flow map is slightly more complicated than a basic chart like a bar or a pie chart but I will walk you through the lines of code to make it easier to grasp. Some background knowledge about HTML and JavaScript will help you understand faster but nonetheless, it is not too difficult. Look how you can create a beautiful interactive JavaScript flow map in 4 simple steps.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-creating-an-html-page"&gt;
  &lt;/a&gt;
  1. Creating an HTML page
&lt;/h3&gt;

&lt;p&gt;The first step is to create a blank HTML page that will hold the interactive flow map. Add a &lt;code&gt;div&lt;/code&gt; element with a unique id to this page which will be referenced later.&lt;/p&gt;

&lt;p&gt;I set the width and height of the div to 100% so that the map is displayed over the entire screen. This can be modified based on the requirement and preference.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;JavaScript Flow Map&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;      
      &lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;#container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
      &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-adding-the-necessary-scripts"&gt;
  &lt;/a&gt;
  2. Adding the necessary scripts
&lt;/h3&gt;

&lt;p&gt;To use a charting library for building a data visualization, you will need to link the appropriate JS scripts of the library you are using. All these script files are included in the HTML page.&lt;/p&gt;

&lt;p&gt;For creating a JS flow map, I will add AnyChart’s ‘&lt;a href="https://docs.anychart.com/Quick_Start/Modules#core"&gt;core&lt;/a&gt;’ and ‘&lt;a href="https://docs.anychart.com/Quick_Start/Modules#geo_maps"&gt;geo maps&lt;/a&gt;’ modules.&lt;/p&gt;

&lt;p&gt;Since the map is of the whole world, I link the file containing the world geodata, from the library’s collection of maps also available on its &lt;a href="https://cdn.anychart.com/"&gt;CDN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In addition, I will make use of another JavaScript library — &lt;a href="http://proj4js.org/"&gt;Proj4js&lt;/a&gt; — which, in short, takes care of plotting the coordinates over the respective geographical areas.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;JavaScript Flow Map&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.anychart.com/releases/8.10.0/js/anychart-core.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.anychart.com/releases/8.10.0/js/anychart-map.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.anychart.com/geodata/latest/custom/world/world.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.3.15/proj4.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;      
      &lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;#container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
      &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;  
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class="c1"&gt;// All the code for the JS flow map will come here&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-connecting-the-data"&gt;
  &lt;/a&gt;
  3. Connecting the data
&lt;/h3&gt;

&lt;p&gt;For the map, the data needs to have the latitude and longitude coordinates along with the other information to be displayed. I created the dataset by collating immigration information from &lt;a href="https://en.wikipedia.org/wiki/Immigration_to_the_United_States#Ethnicity"&gt;Wikipedia&lt;/a&gt; and adding the coordinates from a site called &lt;a href="https://www.latlong.net/"&gt;Latlong&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For the flow map, I need the latitude and longitude of the source country as well as the destination country. Here, the destination country is the US for all the data points. To check out how the dataset looks, you can find the file &lt;a href="https://gist.githubusercontent.com/shacheeswadia/a20ba5b62cef306ccc1a8e8857e5316a/raw/0337b16fa8dc4de97263bc0a4ededf935a529c35/migration-data.json"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To load the data file, I will include the &lt;a href="https://docs.anychart.com/Quick_Start/Modules#data_adapter"&gt;Data Adapter module&lt;/a&gt; of AnyChart in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section of the HTML page [and make use of the &lt;code&gt;loadJsonFile()&lt;/code&gt; method within the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in the HTML page body to load the file with the JSON data for the flow map visualization].&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;JavaScript Flow Map&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.anychart.com/releases/8.10.0/js/anychart-core.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.anychart.com/releases/8.10.0/js/anychart-map.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.anychart.com/geodata/latest/custom/world/world.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.3.15/proj4.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.anychart.com/releases/8.10.0/js/anychart-data-adapter.min.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;      
      &lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;#container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
      &lt;span class="p"&gt;}&lt;/span&gt; 
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;  
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;anychart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadJsonFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://gist.githubusercontent.com/shacheeswadia/a20ba5b62cef306ccc1a8e8857e5316a/raw/0337b16fa8dc4de97263bc0a4ededf935a529c35/migration-data.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// The JS flow map's code will come here&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-writing-the-js-code-to-draw-the-flow-map"&gt;
  &lt;/a&gt;
  4. Writing the JS code to draw the flow map
&lt;/h3&gt;

&lt;p&gt;Before anything else, I will enclose all the code inside the &lt;code&gt;anychart.onDocumentReady()&lt;/code&gt; function which will ensure that the page is fully loaded before anything is executed. Next, I will load the data using &lt;code&gt;anychart.data.loadJsonFile()&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Now, I create the flow map using the connector function since this is a type of connector map and then set the geodata along with settings to make sure that all the regions of the world are visible clearly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;anychart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;onDocumentReady&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;anychart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;loadJsonFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://gist.githubusercontent.com/shacheeswadia/a20ba5b62cef306ccc1a8e8857e5316a/raw/0337b16fa8dc4de97263bc0a4ededf935a529c35/migration-data.json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="c1"&gt;// сreate a connector map chart instance&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;anychart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connector&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// include the world map geodata&lt;/span&gt;
    &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geoData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;anychart.maps.world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// darken all regions&lt;/span&gt;
    &lt;span class="nx"&gt;map&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;unboundRegions&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#E1E1E1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stroke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#D2D2D2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I add a title to the chart and allow the overlap so that all the data points along with their labels are seen on the map even if they overlap.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// set the map chart title&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Migrations to the USA from the top 15 countries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// display all labels even if there is an overlap&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt; 
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;overlapMode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;allow-overlap&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now comes the main part of creating the connector series which will represent the various connections.&lt;/p&gt;

&lt;p&gt;For this, I create a helper function with data as its parameter. In the function, I create the series that will form the connector lines and add the arrow markers at 100% position which is the destination since our flow is from the various source countries to the destination country — the US.&lt;/p&gt;

&lt;p&gt;I then add labels that display the source country names.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// a helper function to create the series&lt;/span&gt;
&lt;span class="c1"&gt;// that will form the connector lines&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;createSeries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="c1"&gt;// create and customize the connector series&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;connectorSeries&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;connectorSeries&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;markers&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// set the labels for the source countries&lt;/span&gt;
  &lt;span class="nx"&gt;connectorSeries&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;labels&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;from&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I now set the data and call the function that I created with that dataset as the argument. The final steps are setting the container to reference the previously added div and drawing the map.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// create a dataset from the data&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;dataSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;anychart&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;mapAs&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;createSeries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dataSet&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// set the container&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// draw the map&lt;/span&gt;
&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;draw&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lo and behold! A nice, functional, JavaScript-based flow map is made! It wasn’t that tough to create such an interactive data visualization, was it?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TxmqEUPn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zu1s5cncu9rmzecnpcym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TxmqEUPn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zu1s5cncu9rmzecnpcym.png" alt="A basic interactive JavaScript flow map"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Have a look at this initial version on &lt;a href="https://codepen.io/shacheeswadia/pen/gOmwpXP"&gt;CodePen&lt;/a&gt; [or &lt;a href="https://playground.anychart.com/yR1yOY6X/"&gt;Playground&lt;/a&gt;].&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customizing-the-js-flow-map"&gt;
  &lt;/a&gt;
  Customizing the JS Flow Map
&lt;/h2&gt;

&lt;p&gt;The existing flow map just built using JavaScript is a good representation showing where the majority of migrants come from. But the amount of immigrants from each country is not displayed. So, I will customize the map to show that and make the map more insightful, with some additional code. I will also improve the visual aesthetics and make some other minor changes.&lt;/p&gt;

&lt;p&gt;A. Setting the colors and size of the connectors along with the legend&lt;br&gt;
B. Improving the tooltip information&lt;br&gt;
C. Enhancing the title and labels&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.anychart.com/blog/2021/07/13/flow-map-js/"&gt;CONTINUE READING HERE&lt;/a&gt; FOR A WALKTHROUGH OF THESE JS FLOW MAP CUSTOMIZATIONS&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>datascience</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Why Do Companies Ask For Passion?</title>
      <author>Nočnica Fee</author>
      <pubDate>Mon, 19 Jul 2021 14:00:56 +0000</pubDate>
      <link>https://dev.to/run-x/why-do-companies-ask-for-passion-46dp</link>
      <guid>https://dev.to/run-x/why-do-companies-ask-for-passion-46dp</guid>
      <description>&lt;p&gt;&lt;em&gt;Cover image from&lt;/em&gt; Passion &lt;em&gt;(1954), public domain. Screenshot by Wayne77.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Popular job advice, especially in highly competitive fields like tech, often states that you should be “passionate” about your work. The word passion gets written into job descriptions all the time. There are plenty of articles on Dev discussing &lt;a href="https://dev.to/mpodlasin/5-things-i-ve-put-on-my-resume-to-stand-out-and-get-a-badass-job-2o1n"&gt;how to demonstrate your passion to employers&lt;/a&gt;, &lt;a href="https://dev.to/ardennl/you-need-a-passion-project"&gt;how to cultivate your passion&lt;/a&gt;, or how to &lt;a href="https://dev.to/heroku/how-do-you-maintain-your-passion-3cc3"&gt;maintain passion through tough times&lt;/a&gt;. While the sentiment originated in white-collar jobs, it’s now so pervasive that you might see a customer service position that requires the applicants to be “passionate about the customer experience”--there are even articles about &lt;a href="https://bizfluent.com/info-8563658-characteristics-employee-passion-customers.html"&gt;how to tell if an employee is passionate enough about it&lt;/a&gt;. If we accept that demanding passion is absurd at the cashier level (do you really want your grocery bagger to be passionately placing each can in your reusable waxed canvas bag), then why is passion considered a prerequisite for so many jobs in tech?&lt;/p&gt;

&lt;p&gt;Asking interviewees to demonstrate passion might be a way to try and predict quality of work--you might assume that someone who loves what they do will do it better than someone who’s just here to get their paycheck. However, it’s pretty easy to play up passion on a resume or in a job interview that you might not feel during a forty hour work week. So why do employers assume that they can gauge someone’s passion, and that passion matters, when it’s fairly easy to falsify?&lt;/p&gt;

&lt;p&gt;A cynical answer might be that an employee who’s claimed that they are passionate (or who--I guess--is actually passionate) might be easier to persuade to work longer hours for the same pay, or pursue work-related research and professional development off the clock. From an accounting perspective, that means you can pay the passionate person less. Someone who puts in a 60 hour week when the job is for 40 hours is technically getting paid about 67% of what they said their hourly rate was--and they’re giving themselves professional development off the clock, which means you don’t necessarily have to pay for conferences and trainings. And so perhaps employers are incentivized to ask for passion so that they can expect you to prove your love by making big sacrifices for the company.&lt;/p&gt;

&lt;p&gt;But even if we assume that employers aren’t trying to get one over on you, there are drawbacks to their seeking only the most passionate employees. Some fields within tech don’t have degree certifications, and must be either learned on the job or self-taught. If the expectation is that hires will have to learn those skills off the clock, in order to demonstrate passion, then employers will lose out on smart, teachable candidates who might have great reasons for not “passionately” pursuing their career outside of work--for example, if they have young children, or have to support elderly relatives, or have illnesses or disabilities that take up much of their non-work time. Sometimes, what employers mistake for passion is actually “plenty of free time” or “some disposable income to spend on personal projects.” This can make passion a metric that inadvertently locks out women, people of color, and working-class people from tech positions where they might otherwise thrive.&lt;/p&gt;

&lt;p&gt;In many fields, the passion requirement ends up screening out candidates who would otherwise be qualified-enough, because they didn’t manage to sufficiently demonstrate their love for doing work for free. Liking your job and doing it well are important, but a great step to diversifying tech would be to back off this endless thirst for endlessly thirsty employees. &lt;/p&gt;

&lt;p&gt;Have you had an employer ask you about your passion for your work? What do you think about passion as a job requirement? Tell me in the comments. &lt;/p&gt;

</description>
      <category>passion</category>
      <category>career</category>
      <category>diversity</category>
      <category>discuss</category>
    </item>
    <item>
      <title>JavaScript question #Day 9</title>
      <author>Sooraj S</author>
      <pubDate>Mon, 19 Jul 2021 13:58:32 +0000</pubDate>
      <link>https://dev.to/soorajs98/javascript-question-day-9-4h5l</link>
      <guid>https://dev.to/soorajs98/javascript-question-day-9-4h5l</guid>
      <description>&lt;p&gt;&lt;strong&gt;What's the output ?&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getAge&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getAge&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A: &lt;code&gt;21&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B: &lt;code&gt;undefined&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C: &lt;code&gt;ReferenceError&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D: &lt;code&gt;TypeError&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Answer: C&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;"use strict"&lt;/code&gt;, you can make sure that you don't accidentally declare global variables. We never declared the variable &lt;code&gt;age&lt;/code&gt;, and since we use &lt;code&gt;"use strict"&lt;/code&gt;, it will throw a reference error. If we didn't use &lt;code&gt;"use strict"&lt;/code&gt;, it would have worked, since the property &lt;code&gt;age&lt;/code&gt; would have gotten added to the global object.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Centering a DIV like a PRO - #1</title>
      <author>Abhishek Raj</author>
      <pubDate>Mon, 19 Jul 2021 13:57:10 +0000</pubDate>
      <link>https://dev.to/abhishekraj272/centering-a-div-like-a-pro-1-49kf</link>
      <guid>https://dev.to/abhishekraj272/centering-a-div-like-a-pro-1-49kf</guid>
      <description>&lt;p&gt;In this series of article, I will show some best ways to center a div in HTML.&lt;/p&gt;

&lt;p&gt;In the below &lt;strong&gt;codepen&lt;/strong&gt;, I have used &lt;em&gt;inset&lt;/em&gt; to set top, right, bottom, left to 0, then setting the margin to auto.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/abhishekraj272/embed/MWmoBYO?height=600&amp;amp;default-tab=css,result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Connect Me @ &lt;a href="https://www.linkedin.com/in/abhishekraj272/"&gt;Linkedin&lt;/a&gt; &lt;a href="https://github.com/abhishekraj272"&gt;Github&lt;/a&gt; &lt;a href="https://twitter.com/abhishekraj272"&gt;Twitter&lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UCvHn2T8DSJzEWzYDdK3Dt8A"&gt;Youtube&lt;/a&gt; 😇&lt;/p&gt;

&lt;p&gt;Thanks @&lt;a href="https://www.youtube.com/channel/UCJZv4d5rbIKd4QHMPkcABCw"&gt;Kevin Powell&lt;/a&gt; for this trick.&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>css</category>
      <category>frontend</category>
    </item>
    <item>
      <title>O Mito da Transição de Carreira</title>
      <author>TechSisters Brasil</author>
      <pubDate>Mon, 19 Jul 2021 13:48:16 +0000</pubDate>
      <link>https://dev.to/techsistersbrasil/o-mito-da-transicao-de-carreira-1aap</link>
      <guid>https://dev.to/techsistersbrasil/o-mito-da-transicao-de-carreira-1aap</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MkJsVrxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8027tcscvlwx4r45uuv.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MkJsVrxg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8027tcscvlwx4r45uuv.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Ainda hoje, pra muita gente, o termo transição de carreira chega a causar um arrepio na espinha. Motivo? Permanecem presos naquela ideia de que devemos sair da escola escolher uma profissão e seguir com ela até o final da vida.&lt;/p&gt;

&lt;p&gt;É o velho lema: Entre numa faculdade, faça um bom estágio, dê o seu melhor para entrar em uma grande empresa e faça sua carreira lá! Acredite! Não tem como dar errado!&lt;/p&gt;

&lt;p&gt;Pois é, pode até não dar tudo errado, mas também pode não dar muito certo… 🤷🏽‍♀️&lt;/p&gt;

&lt;p&gt;Até pouco tempo atrás esse modelo de vida fazia muito sentido pra mim, afinal, o que é mais seguro do que &lt;em&gt;“seguir o plano à risca?”&lt;/em&gt; A verdade é que a gente gosta daquela sensação de segurança e de ter controle total dos ganhos e resultados. Mas controle, meus amigos, não passa de uma mera ilusão.&lt;/p&gt;

&lt;p&gt;Quando eu decidi mudar de carreira — pela terceira vez — eu tive os mesmos questionamentos que muitos tem: &lt;em&gt;“E se não der certo?”&lt;/em&gt;, “E se o mercado me achar “velha” para iniciar?”, “E se eu descobrir que também não gosto disso?”, Será que ainda sou capaz de aprender coisas novas?.&lt;/p&gt;

&lt;p&gt;São muitas as dúvidas que nos cercam e as vezes a gente fica com aquela sensação de estar empacado no mesmo lugar! Então, eu percebi que por mais que eu estivesse empolgada com aquela situação, eu precisava encontrar pessoas que estivessem passando pela mesma situação para que eu pudesse compartilhar as minhas angústias e não me sentir tão sozinha. E isso fez TODA a diferença!&lt;/p&gt;

&lt;p&gt;Quando entendi isso, passei a procurar grupos de apoio e comecei a conversar com pessoas — &lt;em&gt;especialmente mulheres&lt;/em&gt; — que estavam migrando para a TI.❤️&lt;/p&gt;

&lt;p&gt;Não há nada melhor do que ouvir e ver pessoas na mesma situação que você enfrentando e te mostrando todas as ferramentas necessárias para ultrapassar esse processo.&lt;/p&gt;

&lt;p&gt;Nesses espaços me senti mais confiante e percebi que muitas das minhas crenças sobre carreira e profissão já estavam mais que ultrapassadas! Lá entendi que não há idade para percorrermos nossos sonhos e que a vida passa rápido demais para deixarmos o nosso destino a mercê das circunstâncias. 🌎&lt;/p&gt;

&lt;p&gt;Após experiências e aprendizados, sinto que a diferença está justamente em acharmos um grupo de pessoas que nos compreenda e caminharmos juntos com elas para alcançar o objetivo em comum!&lt;/p&gt;

&lt;p&gt;Hoje, gostaria de poder olhar pra trás, para aquela menina de 32 anos, que se achava velha e incapaz de aprender uma nova tecnologia e dizer: — &lt;strong&gt;VAI FUNDO! VOCÊ CONSEGUE!&lt;/strong&gt; 🏅&lt;/p&gt;

&lt;p&gt;A inserção no mundo da tecnologia me sacudiu de várias maneiras, mas também trouxe um novo suspiro e reativou a motivação que eu precisava para inspirar e transformar a vida de outras pessoas através da minha experiência! 🚀&lt;/p&gt;

&lt;p&gt;E, ao longo desse percurso, tão desafiador, posso dizer que: Aprendi a Aprender. Aprendi a me desafiar. Aprendi a confiar e acreditar que sou capaz de escolher o caminho que quero trilhar! E, no final das contas, tem sido uma das experiências mais recompensantes e significativas da minha vida! 👩🏽‍💻&lt;/p&gt;

&lt;p&gt;Se você chegou nesse post, é porque você também está pensando em começar uma mudança na sua vida. E que bom! Fico feliz que você tenha dado o primeiro passo e começado a avaliar as possibilidades! ✅&lt;/p&gt;

&lt;p&gt;Encontre um grupo, converse com pessoas, tire as suas próprias conclusões. E ee eu puder te ajudar de alguma maneira, me chame! Mas não fique parado, tome as rédeas da sua carreira! Dê mais um passo! E mais um passo e outro passo. De passo em passo você chega lá 🙂&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;E daqui a um ano você vai se orgulhar de ter começado HOJE!&lt;/strong&gt; 💪🏼&lt;/p&gt;




&lt;p&gt;Se esse conteúdo foi útil pra você, compartilhe!&lt;/p&gt;

&lt;p&gt;📝 escrito com 💜 por &lt;a href="https://dev.to/simonepedrosa"&gt;Simone Pedrosa&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>transicaodecarreira</category>
    </item>
    <item>
      <title>GraphQL resources, new App Framework features and Algolia search implementations</title>
      <author>Stefan Judis</author>
      <pubDate>Mon, 19 Jul 2021 13:41:19 +0000</pubDate>
      <link>https://dev.to/contentful/graphql-resources-new-app-framework-features-and-algolia-search-implementations-3gi2</link>
      <guid>https://dev.to/contentful/graphql-resources-new-app-framework-features-and-algolia-search-implementations-3gi2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#aloha-and-happy-july-contentful-community"&gt;
  &lt;/a&gt;
  Aloha and happy July, Contentful community
&lt;/h2&gt;

&lt;p&gt;I just came back from a few days of vacation and am excited to share some Contentful updates with you.&lt;/p&gt;

&lt;p&gt;This month's newsletter is full of resources about GraphQL, new App Framework features and Algolia search implementations.&lt;/p&gt;

&lt;p&gt;I'm also interested in what you're building. Please share it with us --- you can tweet &lt;a href="https://twitter.com/contentful"&gt;@contentful&lt;/a&gt; what you've built using #BuiltWithContentful, or &lt;a href="//mailto:stefan.judis@contentful.com"&gt;reach out to me&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's get into some nerdy stuff, shall we?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exciting-things-from-the%C2%A0internet"&gt;
  &lt;/a&gt;
  Exciting things from the internet
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-graphql-spec%C2%A0simplified"&gt;
  &lt;/a&gt;
  &lt;a href="https://blog.graphql.guide/the-graphql-spec-simplified-93005ce0671f"&gt;The GraphQL Spec, Simplified&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;GraphQL lingo can be confusing. What's a Field, a Fragment or a Directive? Loren Sands-Ramshaw wrote a great introductory article that helps you get ready for GraphQL small talk.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#graphql-outside-the-happy%C2%A0path"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.youtube.com/watch?app=desktop&amp;amp;t=2589&amp;amp;v=H84go6sEkEM&amp;amp;feature=youtu.be"&gt;GraphQL outside the happy path&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Our very own Stephan Schneider spoke at GraphQL Wrocław and got knee-deep into GraphQL error handling. In his talk, he covers the GraphQL request cycle and shares error handling best practices.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-complete-guide-to-accessible-frontend%C2%A0components"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.smashingmagazine.com/2021/03/complete-guide-accessible-front-end-components/"&gt;A Complete Guide To Accessible Front-End Components&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This Smashing Magazine article is a link for your bookmarks. Vitaly Friedman collected countless resources on accessible front-end components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#contentful-corner"&gt;
  &lt;/a&gt;
  Contentful corner
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-to-add-algolia-instantsearch-to-your-nextjs%C2%A0application"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/blog/2021/07/02/add-algolia-instantsearch-to-nextjs-app/"&gt;How to add Algolia InstantSearch to your Next.js application&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;If you want to learn how to sync Contentful data to Algolia and implement the search UI components in your Next.js application, this post is for you. Read about how Salma added search to her blog and implemented &lt;a href="https://www.algolia.com/doc/guides/building-search-ui/what-is-instantsearch/js/"&gt;Algolia InstantSeach&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#app-hosting-with-the-contentful-app%C2%A0framework"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/blog/2021/06/23/app-hosting-contentful-app-framework/"&gt;App hosting with the Contentful App Framework&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Our App Framework allows you to customize the Contentful UI and establish new content workflows. Previously, you had to host your app and provide a publicly accessible URL. This has now changed! You can now host your apps right in Contentful. That's huge!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-filter-entries-by-linked-references-in%C2%A0graphql"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/blog/2021/06/15/filter-entries-by-linked-references-in-graphql-api/"&gt;How to filter entries by linked references in GraphQL&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;People often ask us how they can filter entry references in our GraphQL API. Unfortunately, that's not possible right now, but you can flip your queries around and achieve the same result using the linkedFrom field. Salma explains how to do that on our blog.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#contentful-tip"&gt;
  &lt;/a&gt;
  Contentful tip
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IKDxHSIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/3sUspWsM9tJX5f2WGYujdc/f1116e8e26da52f2883b5e839544fefc/pasted_image_0__8_.png%3Ffm%3Dwebp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IKDxHSIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.ctfassets.net/fo9twyrwpveg/3sUspWsM9tJX5f2WGYujdc/f1116e8e26da52f2883b5e839544fefc/pasted_image_0__8_.png%3Ffm%3Dwebp" alt="If you're autogenerating your URLs using the &amp;quot;Slug&amp;quot; appearance setting, you can now choose which field should be slugified."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're autogenerating your URLs using the "Slug" appearance setting, you can now choose which field should be slugified. 🎉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#changelog"&gt;
  &lt;/a&gt;
  Changelog
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#new-compose-launch-trials-have-been-extended-from-10-days-to-60%C2%A0days"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/developers/changelog/#new-compose-+-launch-trials-have-been-extended-from-10-days-to-60-days"&gt;New Compose + Launch trials have been extended from 10 days to 60 days&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;The free trial of Compose + Launch for Team and Community users has been extended from 10 days to 60 days.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#app-hosting-has-been%C2%A0released"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/developers/changelog/#app-hosting"&gt;App hosting has been released&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;You can now host your apps using Contentful without any external hosting providers. App hosting stores and serves your app securely without any additional setup. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#duplicate-pages-in%C2%A0compose"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.contentful.com/developers/changelog/#duplicate-pages-in-compose"&gt;Duplicate pages in Compose&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Compose now supports duplicating pages. If you have cases when you need to create new pages that are very similar to an existing page you have, then this new feature is for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-safe-and-well-check-in-with-you-next%C2%A0month"&gt;
  &lt;/a&gt;
  Stay safe, and we'll check in with you next month!
&lt;/h3&gt;

&lt;p&gt;That's it for July! Visit &lt;a href="https://www.contentful.com/developers/"&gt;our developer portal to stay up to date&lt;/a&gt;. It includes developer blog posts, videos and tutorials. Let us know via &lt;a href="https://www.contentful.com/slack/"&gt;Slack&lt;/a&gt; or &lt;a href="https://twitter.com/contentful"&gt;Twitter&lt;/a&gt; how we can continue to help you make awesome things, nd don't forget to show us what you've built on Twitter with #BuiltWithContentful!&lt;/p&gt;

&lt;p&gt;If you enjoyed this newsletter, &lt;a href="https://www.contentful.com/resources/dev-newsletter/"&gt;sign up to receive the next one in your inbox&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>contentful</category>
    </item>
    <item>
      <title>Using Polywork to Break My Unconscious Biases</title>
      <author>Michael Jolley</author>
      <pubDate>Mon, 19 Jul 2021 13:02:00 +0000</pubDate>
      <link>https://dev.to/michaeljolley/using-polywork-to-break-my-unconscious-biases-1mli</link>
      <guid>https://dev.to/michaeljolley/using-polywork-to-break-my-unconscious-biases-1mli</guid>
      <description>&lt;p&gt;This past year I've been examining the communities I'm a part of. It didn't take long to notice that I was living in a bubble of people who look, act, and think like me. It was one of those unconscious things, that when recognized, seems obvious and repulsive. I have always valued diversity on my teams and I want my social connections to be equally diverse. That's why, when I was offered an invite to join Polywork, I knew this was an opportunity to ensure my "bubble" was diverse.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-polywork"&gt;
  &lt;/a&gt;
  What is Polywork?
&lt;/h2&gt;

&lt;p&gt;Before I get into what I did, let's talk about what Polywork is. First, I don't work for or represent Polywork, so don't take my explanation as their "official description." I see Polywork as a LinkedIn replacement that better represents technical and artistic communities. Whereas, LinkedIn focuses on what positions you've held and education you've completed, Polywork focuses on what you've done.&lt;/p&gt;

&lt;p&gt;Polywork recognizes that for many software developers, some of our most exciting projects take place outside of the office. Things like blog posts, conference &amp;amp; meetup talks, and YouTube/Twitch videos can all be highlighted on your profile. You can also use Polywork to find other individuals who are open to mentoring you, speaking at your event, and more.&lt;/p&gt;

&lt;p&gt;They also provide a "follow" feature which is similar to what you would be accustomed to on platforms like Twitter. This is where my journey to expanding my bubble begins.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#polywork-follows-the-way"&gt;
  &lt;/a&gt;
  Polywork Follows: The !== Way
&lt;/h2&gt;

&lt;p&gt;Whenever I see content, regardless of platform, I always follow or subscribe to the creator so I can see more content like that. I normally don't pay attention to who the person is, but I do notice what their role is, what company they work for, etc. But there are so many white guys in the tech space, it's hard not to quickly fill up a "following" list of the same people. This is the first place I changed my habits.&lt;/p&gt;

&lt;p&gt;Step one in operation Expand The Bubble was realizing that I have an unconscious inclination to follow content created by white guys, here on referred to as White Guy Creators (WGC). Does that mean I stop following creators who look like me? Nope. Instead, I decided to counteract this disposition by following 3 non-WGCs for every one WGC. So if I see content I enjoy from a WGC, I give them a follow/subscribe. Then I go on the hunt and don't leave the computer until I've identified 3 non-WGCs that had interesting content.&lt;/p&gt;

&lt;p&gt;What has been the result? Gold. Absolute gold. There are a plethora of amazing content creators out there that are never recommended to me, or whose content never reached my feed before. I don't know if this is due to the algorithms employed by Twitter/Instagram/TikTok/etc, but by actively counter-balancing who I follow, it appears I've broken through to this wonderland of amazing content that I had never seen before.&lt;/p&gt;

&lt;p&gt;For the first time, I actually enjoy logging into the timeline to see what new, amazing stuff I'll find.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-you-hear-them-now"&gt;
  &lt;/a&gt;
  Can You Hear Them Now?
&lt;/h2&gt;

&lt;p&gt;I'll admit, step two in my plans has been hampered. Soon after starting this journey, my mother was diagnosed with stage 4 cancer. Within 4 weeks of diagnosis, we had spent 2 weeks in the hospital and now a week at home on hospice trying to make her comfortable as she becomes more confused and less the amazing woman who raised me on her own. I only write this step because it was and still is in my plans moving forward. If anything, it will help me stay accountable.&lt;/p&gt;

&lt;p&gt;Back to step two: Amplification. Now that I'm getting to see this awesome content by non-WGC, I want to make a conscious effort to break existing algorithms and expose people who may follow me to these amazing creators. So each time I see content that inspires, teaches, or encourages me, I want to share it with my community.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#break-out-of-your-bubble"&gt;
  &lt;/a&gt;
  Break Out of Your Bubble
&lt;/h2&gt;

&lt;p&gt;If you'd like to join Polywork, they've given me a VIP code for anyone reading who'd like to get in on the action. Go to &lt;a href="https://polywork.com"&gt;https://polywork.com&lt;/a&gt; and use the code &lt;code&gt;baldbeardbuild&lt;/code&gt;. Once you're in, I highly recommend using the steps above to expand your bubble and amplify the amazing content you find.&lt;/p&gt;

&lt;p&gt;How do you actively combat your unconscious biases? Hit me up on &lt;a href="https://twitter.com/baldbeardbuild"&gt;Twitter&lt;/a&gt; and let me know.&lt;/p&gt;

</description>
      <category>diversity</category>
      <category>inclusion</category>
    </item>
    <item>
      <title>MERN stack TODO application [BACKEND]</title>
      <author>Mritunjay Saha</author>
      <pubDate>Mon, 19 Jul 2021 12:56:44 +0000</pubDate>
      <link>https://dev.to/mritunjaysaha/mern-stack-todo-application-backend-282a</link>
      <guid>https://dev.to/mritunjaysaha/mern-stack-todo-application-backend-282a</guid>
      <description>&lt;p&gt;We'll be creating a minimal full-stack app using the &lt;code&gt;MERN&lt;/code&gt; stack (&lt;code&gt;MongoDB&lt;/code&gt; for data, &lt;code&gt;Express&lt;/code&gt; and &lt;code&gt;Node&lt;/code&gt; for backend, and &lt;code&gt;React&lt;/code&gt; for frontend) to perform &lt;code&gt;CRUD&lt;/code&gt; operations.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#our-app-will-allow-users-to"&gt;
  &lt;/a&gt;
  Our app will allow users to
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Create a todo&lt;/li&gt;
&lt;li&gt;Read todos&lt;/li&gt;
&lt;li&gt;Update a todo&lt;/li&gt;
&lt;li&gt;Delete a todo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This series should enable you understand &lt;code&gt;CRUD&lt;/code&gt; operations using &lt;code&gt;MERN&lt;/code&gt; stack.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-this-part-part1-we-will"&gt;
  &lt;/a&gt;
  In this part (part1), we will
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Initialize our backend using &lt;code&gt;npm&lt;/code&gt; and install necessary packages&lt;/li&gt;
&lt;li&gt;Set up a MongoDB database&lt;/li&gt;
&lt;li&gt;Set up server using &lt;code&gt;Node&lt;/code&gt; and &lt;code&gt;Express&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create a database schema to define a &lt;code&gt;Todo&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Set up API routes to &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;delete&lt;/code&gt; documents from the database&lt;/li&gt;
&lt;li&gt;Testing our &lt;code&gt;API&lt;/code&gt; routes using &lt;a href="https://insomnia.rest/"&gt;Insomnia&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#before-we-get-started"&gt;
  &lt;/a&gt;
  Before we get started
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;p&gt;One should have at least some basic understanding of fundamental programming concepts and some experience with &lt;code&gt;HTML&lt;/code&gt;, &lt;code&gt;CSS&lt;/code&gt;, &lt;code&gt;JavaScript&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This post is not meant to explain the &lt;code&gt;MERN&lt;/code&gt; stack, but it is a good introduction to building a full-stack app with it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#install"&gt;
  &lt;/a&gt;
  Install
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;VS Code&lt;/code&gt; or any other editor&lt;/li&gt;
&lt;li&gt;Latest version of &lt;code&gt;Node.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Insomnia&lt;/code&gt; or Postman&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Prettier&lt;/code&gt; VS code extension to format the code&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#part-1-creating-backend"&gt;
  &lt;/a&gt;
  Part 1: Creating Backend
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-initializing-our-project"&gt;
  &lt;/a&gt;
  1. Initializing our project
&lt;/h3&gt;

&lt;p&gt;Create a new folder and name it anything that you like and then open the folder in VS code and run the following code from the command prompt.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init &lt;span class="nt"&gt;-y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;After running this command you will find a &lt;code&gt;package.json&lt;/code&gt; if the folder.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#2-setting-up-packagejson"&gt;
  &lt;/a&gt;
  2. Setting up package.json
&lt;/h3&gt;
&lt;h4&gt;
  &lt;a href="#i-install-the-following-dependencies"&gt;
  &lt;/a&gt;
  i. Install the following dependencies
&lt;/h4&gt;

&lt;p&gt;Run the following commands in the terminal to install the dependencies&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i cors dotenv express mongoose
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;cors&lt;/code&gt;: allows cross-origin api calls&lt;br&gt;
&lt;code&gt;dotenv&lt;/code&gt;: needed to access data from &lt;code&gt;.env&lt;/code&gt; files&lt;br&gt;
&lt;code&gt;express&lt;/code&gt;: web application framework for node.js&lt;br&gt;
&lt;code&gt;mongoose&lt;/code&gt;: It is needed to define the database schema and connecting to &lt;code&gt;mongoDB&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#ii-install-the-following-development-dependencies"&gt;
  &lt;/a&gt;
  ii. Install the following development dependencies
&lt;/h4&gt;

&lt;p&gt;Now install the following development dependencies, &lt;code&gt;-D&lt;/code&gt; is used to install the development dependencies.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm i &lt;span class="nt"&gt;-D&lt;/span&gt; nodemon
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;After installing the dependencies the &lt;code&gt;package.json&lt;/code&gt; folder should look as follows.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;package.json&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"mern-todo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ISC"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"config"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.3.6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cors"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.8.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dotenv"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^10.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"express"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.17.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"mongoose"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^5.13.2"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"nodemon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.0.11"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#iii-change-the-raw-main-endraw-entry-point-to-raw-serverjs-endraw-"&gt;
  &lt;/a&gt;
  iii. change the &lt;code&gt;main&lt;/code&gt; entry point to &lt;code&gt;server.js&lt;/code&gt;
&lt;/h4&gt;

&lt;p&gt;Now, create a &lt;code&gt;server.js&lt;/code&gt; file and a &lt;code&gt;.env&lt;/code&gt;. The &lt;code&gt;server.js&lt;/code&gt; file will be the entry point of the server and the &lt;code&gt;.env&lt;/code&gt; file will contain the &lt;code&gt;MONGO_URI&lt;/code&gt;. We also have to make the following changes in the &lt;code&gt;package.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//package.json&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"mern-todo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"server.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;//changed&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ISC"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"config"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.3.6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cors"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.8.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dotenv"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^10.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"express"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.17.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"mongoose"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^5.13.2"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"nodemon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.0.11"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, create the following folders&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;config&lt;/code&gt;: Inside the &lt;code&gt;config&lt;/code&gt; folder, create a file named &lt;code&gt;db.js&lt;/code&gt;. This file will contain the required code for connecting to the &lt;code&gt;MongoDB&lt;/code&gt; database.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;controllers&lt;/code&gt;: The &lt;code&gt;controllers&lt;/code&gt; folder will contain the files which will have the methods for the end points to communicate with the database.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;models&lt;/code&gt;: The &lt;code&gt;models&lt;/code&gt; folder, will contain the files which will define the &lt;code&gt;MongoDB schema&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;routers&lt;/code&gt;: The &lt;code&gt;routers&lt;/code&gt; folder will contain the files with the &lt;code&gt;endpoints&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this stage the file structure should look as follows&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── config
│   └── db.js
├── controllers
│   └── todo.js
├── models
│   └── todo.js
├── node_modules
├── routes
│   └── todo.js
├── .env
├── server.js
├── package-lock.json
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#iv-change-the-raw-scripts-endraw-to-the-following"&gt;
  &lt;/a&gt;
  iv. Change the &lt;code&gt;scripts&lt;/code&gt; to the following
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"node server.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"nodemon server.js"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;package.json&lt;/code&gt; file should look as follows&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"mern-todo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"server.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"echo &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Error: no test specified&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt; &amp;amp;&amp;amp; exit 1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"start"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node server.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;//added&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dev"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nodemon server.js"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;//added&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ISC"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"config"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.3.6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"cors"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.8.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dotenv"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^10.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"express"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.17.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"mongoose"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^5.13.2"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"nodemon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.0.11"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#v-setting-up-server"&gt;
  &lt;/a&gt;
  v. Setting up server
&lt;/h4&gt;

&lt;p&gt;We will do the following to setup the server&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import &lt;code&gt;express&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Initialize our app using &lt;code&gt;express()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Set up a &lt;code&gt;get&lt;/code&gt; method for the endpoint &lt;code&gt;http://localhost:8000&lt;/code&gt; using &lt;code&gt;app.get()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;PORT&lt;/code&gt; to &lt;code&gt;8000&lt;/code&gt; for our server to run&lt;/li&gt;
&lt;li&gt;Have our app to listen to &lt;code&gt;PORT&lt;/code&gt; using &lt;code&gt;app.listen()&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── config
│   └── db.js
├── controllers
│   └── todo.js
├── models
│   └── todo.js
├── node_modules
├── routes
│   └── todo.js
├── .env
├── server.js &amp;lt;-- we are here
├── package-lock.json
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The code will look as follows&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;And start the server using &lt;code&gt;nodemon&lt;/code&gt; using the following code. Make sure you are running the following command from the project directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If the server has started successfully then it should show the following message in the terminal&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[nodemon] 2.0.11
[nodemon] to restart at any time, enter `rs`
[nodemon] watching path(s): *.*
[nodemon] watching extensions: js,mjs,json
[nodemon] starting `node server.js`
server is running on http://localhost:8000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;You can also open &lt;code&gt;http://localhost:8000&lt;/code&gt; on your browser.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#vi-getting-the-raw-mongo-uri-endraw-from-mongodb"&gt;
  &lt;/a&gt;
  vi. Getting the &lt;code&gt;MONGO URI&lt;/code&gt; from &lt;a href="https://cloud.mongodb.com"&gt;mongoDB&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;To connect to the database we will need the link for the &lt;code&gt;mongoDB&lt;/code&gt; collection.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Log in to &lt;a href="https://cloud.mongodb.com"&gt;mongoDB&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Create a new project&lt;/li&gt;
&lt;li&gt;Build a cluster&lt;/li&gt;
&lt;li&gt;Select cloud provider&lt;/li&gt;
&lt;li&gt;Create cluster&lt;/li&gt;
&lt;li&gt;wait for the cluster to be created.&lt;/li&gt;
&lt;li&gt;Click on connect&lt;/li&gt;
&lt;li&gt;click on &lt;code&gt;allow access from anywhere&lt;/code&gt;. Then &lt;code&gt;Add IP address&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y4JSNadH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w49xfzzwlmuu2r1tmwc2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y4JSNadH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w49xfzzwlmuu2r1tmwc2.png" alt="Add connection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a database user. You'll need the &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; for the &lt;code&gt;MongoDB URI&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Click on the &lt;code&gt;Choose a connection method&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Connect your application&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select the following driver and version&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SaqeicVn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzdi5nff5kjvmkyhn4p6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SaqeicVn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzdi5nff5kjvmkyhn4p6.png" alt="Connect Cluster"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Copy the &lt;code&gt;mongodb+srv&lt;/code&gt; and paste it in the &lt;code&gt;.env&lt;/code&gt; file&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;
  &lt;a href="#vii-setting-up-raw-env-endraw-file"&gt;
  &lt;/a&gt;
  vii. Setting up &lt;code&gt;.env&lt;/code&gt; file
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//.env
MONGO_URI = mongodb+srv://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@cluster0.owmij.mongodb.net
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Replace the &lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;password&amp;gt;&lt;/code&gt; with your database username and password which you will set in step 9.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#viii-connecting-to-database"&gt;
  &lt;/a&gt;
  viii. Connecting to database
&lt;/h4&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── config
│   └── db.js &amp;lt;-- we are here
├── controllers
│   └── todo.js
├── models
│   └── todo.js
├── node_modules
├── routes
│   └── todo.js
├── .env
├── server.js
├── package-lock.json
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now, open the &lt;code&gt;db.js&lt;/code&gt; file which is in the &lt;code&gt;config&lt;/code&gt; folder and add the following changes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import &lt;code&gt;mongoose&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Import &lt;code&gt;MONGO_URI&lt;/code&gt; from &lt;code&gt;.env&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Define the &lt;code&gt;connectDB&lt;/code&gt; methof for connecting to the database&lt;/li&gt;
&lt;li&gt;Export the &lt;code&gt;connectDB&lt;/code&gt; method to be called in &lt;code&gt;server.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;Add the following changes in the &lt;code&gt;server.js&lt;/code&gt; file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import &lt;code&gt;dotenv&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Import &lt;code&gt;connectDB&lt;/code&gt; method from &lt;code&gt;config/db.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Call the &lt;code&gt;connectDB&lt;/code&gt; method.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us make the the following changes in &lt;code&gt;server.js&lt;/code&gt;&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;


&lt;p&gt;Save the changes it will restart the server or use the command &lt;code&gt;npm run dev&lt;/code&gt;. The terminal should show a message of &lt;code&gt;MongoDB is connected&lt;/code&gt; which we have added in the &lt;code&gt;db.js&lt;/code&gt; under the try block.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ix-defining-database-schema"&gt;
  &lt;/a&gt;
  ix. Defining database schema
&lt;/h4&gt;

&lt;p&gt;Create a &lt;code&gt;todo.js&lt;/code&gt; file in the models folder. We will define the database schema in this file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── config
│   └── db.js
├── controllers
│   └── todo.js
├── models
│   └── todo.js &amp;lt;-- we are here
├── node_modules
├── routes
│   └── todo.js
├── .env
├── server.js
├── package-lock.json
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Import &lt;code&gt;mongoose&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;Schema&lt;/code&gt; called &lt;code&gt;TodoSchema&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;We will add two fields for our todo; &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Type of &lt;code&gt;title&lt;/code&gt; will be &lt;code&gt;String&lt;/code&gt; and it is a mandatory field&lt;/li&gt;
&lt;li&gt;Type of &lt;code&gt;description&lt;/code&gt; will be &lt;code&gt;String&lt;/code&gt; and it is not a mandatory field&lt;/li&gt;
&lt;li&gt;Export the model&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The code will look as follows&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#x-defining-the-end-points"&gt;
  &lt;/a&gt;
  x. Defining the end points
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── config
│   └── db.js
├── controllers
│   └── todo.js
├── models
│   └── todo.js
├── node_modules
├── routes
│   └── todo.js &amp;lt;-- we are here
├── .env
├── server.js
├── package-lock.json
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We will define the end points for the &lt;code&gt;CRUD&lt;/code&gt; operations&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import &lt;code&gt;express&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Initialize &lt;code&gt;router&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;We will later import the methods for the endpoint from &lt;code&gt;controllers&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Define a &lt;code&gt;GET&lt;/code&gt; method to &lt;code&gt;read&lt;/code&gt; all the todo&lt;/li&gt;
&lt;li&gt;Define a &lt;code&gt;POST&lt;/code&gt; method to &lt;code&gt;create&lt;/code&gt; a new todo&lt;/li&gt;
&lt;li&gt;Define a &lt;code&gt;PUT&lt;/code&gt; method to &lt;code&gt;update&lt;/code&gt; a existing todo&lt;/li&gt;
&lt;li&gt;Define a &lt;code&gt;DELETE&lt;/code&gt; method to &lt;code&gt;delete&lt;/code&gt; a existing todo&lt;/li&gt;
&lt;li&gt;Export the &lt;code&gt;router&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The code will look as follows&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#xi-defining-the-methods-for-the-end-points"&gt;
  &lt;/a&gt;
  xi. Defining the methods for the end points
&lt;/h4&gt;

&lt;p&gt;We will define the methods for the end points in the &lt;code&gt;controllers&lt;/code&gt; folder&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── config
│   └── db.js
├── controllers
│   └── todo.js &amp;lt;-- we are here
├── models
│   └── todo.js
├── node_modules
├── routes
│   └── todo.js
├── .env
├── server.js
├── package-lock.json
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Import &lt;code&gt;Todo&lt;/code&gt; model from &lt;code&gt;models/todo&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Define the following four methods

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getAllTodo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;postCreateTodo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;putUpdateTodo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;deleteTodo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Export all the methods&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;getAllTodo&lt;/code&gt;: The &lt;code&gt;find()&lt;/code&gt; method will return all the todo in the collection. If the collection is empty then it will return a &lt;code&gt;404&lt;/code&gt; error.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;postCreateTodo&lt;/code&gt;: The &lt;code&gt;create()&lt;/code&gt; method will create a todo and return a success message. Otherwise, it will return a &lt;code&gt;400&lt;/code&gt; error.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;putUpdateTodo&lt;/code&gt;: The &lt;code&gt;findByIdAndUpdate()&lt;/code&gt; will require two parameters the &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; of the todo to be updated. The &lt;code&gt;id&lt;/code&gt; parameter will be extracted from &lt;code&gt;req.params.id&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;deleteTodo&lt;/code&gt;: The &lt;code&gt;findByIdAndRemove()&lt;/code&gt; method will require only one parameter that is the &lt;code&gt;id&lt;/code&gt; of the todo.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#xii-adding-the-methods-to-the-end-points"&gt;
  &lt;/a&gt;
  xii. Adding the methods to the end points
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── config
│   └── db.js
├── controllers
│   └── todo.js
├── models
│   └── todo.js
├── node_modules
├── routes
│   └── todo.js &amp;lt;-- we are here
├── .env
├── server.js
├── package-lock.json
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Import the methods for &lt;code&gt;CRUD&lt;/code&gt; operations&lt;/li&gt;
&lt;li&gt;Adding the methods to the end points&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#xiii-adding-the-routes-end-points-in-the-raw-serverjs-endraw-"&gt;
  &lt;/a&gt;
  xiii. Adding the routes end points in the &lt;code&gt;server.js&lt;/code&gt;
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── config
│   └── db.js
├── controllers
│   └── todo.js
├── models
│   └── todo.js
├── node_modules
├── routes
│   └── todo.js
├── .env
├── server.js &amp;lt;-- we are here
├── package-lock.json
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The final part of completing the backend is to add the endpoints to the &lt;code&gt;server.js&lt;/code&gt; file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Import &lt;code&gt;routes/todo.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Add the routes endpoints to the middleware&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-testing-the-end-points-using-raw-insomnia-endraw-"&gt;
  &lt;/a&gt;
  3 Testing the end points using &lt;code&gt;Insomnia&lt;/code&gt;
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Creating a todo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will send a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;http://localhost:8000/api/todo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--piu0QXzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36q84r20mj3mwoxcvrai.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--piu0QXzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36q84r20mj3mwoxcvrai.png" alt="Create TODO"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reading the todo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will send a &lt;code&gt;GET&lt;/code&gt; request to &lt;code&gt;http://localhost:8000/api/todo&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gK2xaGR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7fc756g2bmgultvo6bl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gK2xaGR3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w7fc756g2bmgultvo6bl.png" alt="read-todo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can check the changes in &lt;a href="https://cloud.mongodb.com/"&gt;mongoDB&lt;/a&gt; in &lt;code&gt;collections&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Updating a todo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To update a todo we will send a &lt;code&gt;PUT&lt;/code&gt; request to &lt;code&gt;http://localhost:8000/api/todo/id&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;id&lt;/code&gt; has to be taken from the response message of the server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"message"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Todo added successfully"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"60ec0f9655f9735a60a2d967"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"test todo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"test todo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"__v"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;For updating the todo we will need the &lt;code&gt;id&lt;/code&gt;. We will get the &lt;code&gt;id&lt;/code&gt; from the &lt;code&gt;_id&lt;/code&gt; from the preview tab. We can get the &lt;code&gt;id&lt;/code&gt; from the &lt;code&gt;preview&lt;/code&gt; after using the &lt;code&gt;GET&lt;/code&gt; request and &lt;code&gt;POST&lt;/code&gt; request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ua4YakXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cddjegzeq51d1vsppx2z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ua4YakXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cddjegzeq51d1vsppx2z.png" alt="update-todo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deleting a todo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To delete a todo we will send a &lt;code&gt;DELETE&lt;/code&gt; request to &lt;code&gt;http://localhost:8000/api/todo/id&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ss_1l09Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmib05l9fa8q8ymrt1n9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ss_1l09Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmib05l9fa8q8ymrt1n9.png" alt="delete-todo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#4-adding-raw-cors-endraw-"&gt;
  &lt;/a&gt;
  4. Adding &lt;code&gt;cors&lt;/code&gt;
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── config
│   └── db.js
├── controllers
│   └── todo.js
├── models
│   └── todo.js
├── node_modules
├── routes
│   └── todo.js
├── .env
├── server.js &amp;lt;-- we are here
├── package-lock.json
└── package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Added &lt;code&gt;cors&lt;/code&gt; so that we can make the api calls from the frontend application like react.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;



&lt;p&gt;You can see the entire code of this blog in &lt;a href="https://github.com/mritunjaysaha/todo/tree/master/server"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>node</category>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>A Guide to MetaMask Ecosystem: The Leading Ethereum Blockchain Wallet</title>
      <author>Manbir Singh Marwah</author>
      <pubDate>Mon, 19 Jul 2021 12:48:03 +0000</pubDate>
      <link>https://dev.to/manbir/a-guide-to-metamask-ecosystem-leading-ethereum-blockchain-wallet-59k7</link>
      <guid>https://dev.to/manbir/a-guide-to-metamask-ecosystem-leading-ethereum-blockchain-wallet-59k7</guid>
      <description>&lt;p&gt;MetaMask is an open-source crypto wallet and a gateway to blockchain apps. It makes accessing and building on Ethereum's DApp Ecosystem easier, right from the browser without running a full Ethereum node. MetaMask can be installed as a browser extension (on Chrome, Firefox, Brave and Edge) or as an app on Android and iOS devices.&lt;/p&gt;

&lt;p&gt;Being one of the most secure hot wallets, MetaMask works with JavaScript by injecting a Web3 object into the webpage you're on. It is important to note that this does not alter the website in any manner. Instead, it only adds a functionality that makes it possible to access the Ethereum platform.&lt;/p&gt;

&lt;p&gt;Let's walk down the steps on how to install and use MetaMask right from your browser, real quick! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-visit-httpsmetamaskio-and-click-on-download-now"&gt;
  &lt;/a&gt;
  1. Visit &lt;a href="https://metamask.io/"&gt;https://metamask.io/&lt;/a&gt; and click on 'Download Now'
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3jLF7KmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmzsbet5f0x4yceka2dw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3jLF7KmH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rmzsbet5f0x4yceka2dw.jpg" alt="metamask-1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-click-on-install-metamask-for-chrome"&gt;
  &lt;/a&gt;
  2. Click on 'Install MetaMask for Chrome'
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--awUzAmPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcz424oppp22o858j94m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--awUzAmPy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcz424oppp22o858j94m.jpg" alt="metamask-add-chrome"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-click-on-the-add-to-chrome-button"&gt;
  &lt;/a&gt;
  3. Click on the 'Add to Chrome' button
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--szA6VjP_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvneybjl92o69861hnzl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--szA6VjP_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xvneybjl92o69861hnzl.jpg" alt="metamask-add-to-chrome"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-select-add-extension-option-from-the-popup"&gt;
  &lt;/a&gt;
  4. Select 'Add Extension' option from the pop-up
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EY8UEMp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bj54si2cj4p8k2ndxoa5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EY8UEMp1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bj54si2cj4p8k2ndxoa5.jpg" alt="metamask-add-extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-view-metamask-in-the-chrome-extensions-menu"&gt;
  &lt;/a&gt;
  5. View MetaMask in the Chrome extensions menu
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UuK4qZjq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fnrgi9a2sf0ei36cr3e.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UuK4qZjq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1fnrgi9a2sf0ei36cr3e.jpg" alt="metamask-ext-icon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-click-on-get-started-and-create-wallet"&gt;
  &lt;/a&gt;
  6. Click on 'Get Started' and 'Create Wallet'
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--klrnVT_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7sdcomc2hvua08h2r5z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--klrnVT_4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v7sdcomc2hvua08h2r5z.jpg" alt="metamask-create-wallet"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-enter-a-password-and-click-create"&gt;
  &lt;/a&gt;
  7. Enter a password and click 'Create'
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9n0sAobv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iknmzd581v1l9kq12cfj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9n0sAobv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iknmzd581v1l9kq12cfj.jpg" alt="metamask-create-password"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-reveal-or-download-and-store-backup-seed-phrase"&gt;
  &lt;/a&gt;
  8. Reveal or download and store backup seed phrase
&lt;/h3&gt;

&lt;p&gt;The seed phrase is a randomly-generated string of words cryptographically derived from the wallet’s private key and paired with 12 words from a list of 2,048 English words called the BIP39 Wordlist. This sequence can also be converted to a corresponding series of mapped numbers that provide the user access to his wallet and its public-private key pair. &lt;br&gt;
A crypto wallet’s software is designed to generate these phrases, which users are then tasked to keep. This ensures that even if the hardware malfunctions or gets lost or stolen, they can always download the wallet software again and use the seed phrases to restore access to their assets back.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NlrsuGqo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r31oxeupnt49gb75mc3p.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NlrsuGqo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r31oxeupnt49gb75mc3p.jpg" alt="metamask-reveal-secret"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;MetaMask uses BIP39 to generate a seed phrase for your wallet. Your seed phrase will cover every token, address, and transaction generated by your wallet. Think of it as your backup master key. Backing up your seed phrase ensures you will always have access to your funds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-view-backup-phrase"&gt;
  &lt;/a&gt;
  9. View backup phrase
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PIER0X0p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hs8idwfbjzmm36b9xdvq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PIER0X0p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hs8idwfbjzmm36b9xdvq.png" alt="metamask-approve"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-confirm-backup-seed-phrase-by-clicking-the-words-in-the-order-it-was-shown-previously-and-click-next"&gt;
  &lt;/a&gt;
  10. Confirm backup seed phrase by clicking the words in the order it was shown previously and click 'Next'
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mwi4ONR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/02qzrivv6kby7h1yawnu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mwi4ONR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/02qzrivv6kby7h1yawnu.png" alt="metamask-confirm-approve"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-agree-to-terms-and-conditions"&gt;
  &lt;/a&gt;
  11. Agree to terms and conditions
&lt;/h3&gt;

&lt;p&gt;Congratulations, you have successfully setup MetaMask and created your first wallet!&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mPQJgEmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsl9qdgzz5ul2mj1zklz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mPQJgEmF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nsl9qdgzz5ul2mj1zklz.png" alt="metamask-congrats"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is how the wallet should look in expanded view:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h6C_N3i8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwu5fc34csfqo6m7v8gu.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h6C_N3i8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cwu5fc34csfqo6m7v8gu.jpg" alt="metamask-wallet"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#adding-a-custom-token"&gt;
  &lt;/a&gt;
  Adding a Custom Token
&lt;/h2&gt;

&lt;p&gt;We can add multiple custom tokens to the MetaMask wallet, such as wBTC, USDT, UNI etc. To add one, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Open MetaMask and click on 'Assets' to see the tokens in your wallet.&lt;/li&gt;
&lt;li&gt;Scroll down to the bottom and click on 'Add Token'.&lt;/li&gt;
&lt;li&gt;Click on 'Custom Token'.&lt;/li&gt;
&lt;li&gt;Paste the contract address for the token you want to add, into the Token Contract Address field. For example, if you're adding Tether USD (USDT), the token contract would be: &lt;code&gt;0x5dbcF33D8c2E976c6b560249878e6F1491Bca25c&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p03zQb3k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metamask.zendesk.com/hc/article_attachments/360078216672/Screen_Shot_2020-12-01_at_12.36.01_PM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p03zQb3k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metamask.zendesk.com/hc/article_attachments/360078216672/Screen_Shot_2020-12-01_at_12.36.01_PM.png" alt="custom-token"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can look-up for the contract of the token you want to add through &lt;a href="https://etherscan.io/"&gt;Etherscan&lt;/a&gt;, the Ethereum Blockchain Explorer. You can also explore an address, transaction hash, block or ENS through the same.  &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#configuring-a-custom-network-for-binance-smart-chain"&gt;
  &lt;/a&gt;
  Configuring a Custom Network for Binance Smart Chain
&lt;/h2&gt;

&lt;p&gt;MetaMask supports addition of other networks apart from Ethereum, such as Binance Smart Chain (BSC)—a blockchain network built for running smart contract-based applications and holding BEP2 tokens. To add BSC MainNet to MetaMask, you'd need to visit the 'Settings' menu through the wallet. Under the 'Networks' section, manually add the following entries to add Binance Smart Chain to your wallet:  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Network Name&lt;/strong&gt;: Smart Chain&lt;br&gt;
&lt;strong&gt;New RPC URL&lt;/strong&gt;: &lt;a href="https://bsc-dataseed.binance.org/"&gt;https://bsc-dataseed.binance.org/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;ChainID&lt;/strong&gt;: 56&lt;br&gt;
&lt;strong&gt;Symbol&lt;/strong&gt;: BNB&lt;br&gt;
&lt;strong&gt;Block Explorer URL&lt;/strong&gt;: &lt;a href="https://bscscan.com"&gt;https://bscscan.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll now be able to access BSC through the 'Networks' tab at the top of your wallet. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#swapping-tokens-on-metamask"&gt;
  &lt;/a&gt;
  Swapping tokens on MetaMask
&lt;/h2&gt;

&lt;p&gt;MetaMask allows us to swap tokens directly from the desktop or mobile wallet. The Swaps feature combines data from decentralized exchange aggregators, market makers, and DEXs, to ensure we get the best price with the lowest network fees.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5FHR731v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metamask.io/images/swapsscreens-p-1600.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5FHR731v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://metamask.io/images/swapsscreens-p-1600.png" alt="metamask-swap"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#exploring-dapps"&gt;
  &lt;/a&gt;
  Exploring DApps
&lt;/h2&gt;

&lt;p&gt;MetaMask offers a broad ecosystem of Decentralized Applications (or DApps). The following are a few of the DApps that you can explore and use with MetaMask:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.cryptokitties.co/"&gt;CryptoKitties&lt;/a&gt;: This DApp allows you to create and sell cartoon kittens. With MetaMask, the process of selling the kitties is simple and fun.&lt;br&gt;
Blockchain arcades: These are DApps created to allow gamers to use ETH and ERC-20 tokens for video game tournaments. For example, one of the requirements for the &lt;a href="http://etherplay.io/"&gt;Etherplay site&lt;/a&gt; is to have MetaMask.&lt;br&gt;
The Digital Art: This is another app that is becoming very popular in crypto communities. The app allows users to hold auctions where they sell collectibles. With MetaMask, for example, you can bid on a WWII collectible from Japan.&lt;br&gt;
Also check out &lt;a href="https://www.stateofthedapps.com/collections/best-of-metamask"&gt;Best of MetaMask—State of the DApps&lt;/a&gt; for more. &lt;/p&gt;

&lt;p&gt;Good luck exploring the future of web! ;)&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>ethereum</category>
    </item>
    <item>
      <title>Validate CSV Input With ActiveModel::Validations</title>
      <author>Kevin Murphy</author>
      <pubDate>Mon, 19 Jul 2021 12:17:47 +0000</pubDate>
      <link>https://dev.to/thegnarco/validate-csv-input-with-activemodel-validations-15d8</link>
      <guid>https://dev.to/thegnarco/validate-csv-input-with-activemodel-validations-15d8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#standard-library-parsing"&gt;
  &lt;/a&gt;
  Standard Library Parsing
&lt;/h2&gt;

&lt;p&gt;We're maintaining a system that tracks information about books, including their publication dates. On occasion, publishers will send us CSVs with updated publication dates, and we need to update our Rails application to have those dates.&lt;/p&gt;

&lt;p&gt;We want a repeatable process, so rather than updating these by hand, let's use Ruby's &lt;a href="https://ruby-doc.org/stdlib-3.0.1/libdoc/csv/rdoc/CSV.html"&gt;CSV class&lt;/a&gt; to parse this data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Four lines and we have a functionally complete parser that updates our system how we expect. That all seems great. Until, that is, we actually run it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#book-checked-out"&gt;
  &lt;/a&gt;
  Book Checked Out
&lt;/h2&gt;

&lt;p&gt;We execute our parser on the first data file we receive, and it quickly stops with the following error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;NoMethodError: undefined method `update' for nil:NilClass
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;On inspecting the state of our database, we see that the first three books in the CSV file had their publication dates updated, but the rest didn't. Looking at the fourth row in the CSV, we discover that the ISBN for that row isn't in our database. In that case &lt;code&gt;find_by&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt;, and calling &lt;code&gt;update&lt;/code&gt; on &lt;code&gt;nil&lt;/code&gt; is exactly our problem. An exception is raised, and further rows of the CSV aren't parsed.&lt;/p&gt;

&lt;p&gt;We can fix that! If we don't find the book, let's log the error and move on to the next row, without calling &lt;code&gt;update&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Could not find book"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the entire CSV processes, our books are updated, and everyone's happy. Right?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blank-pages"&gt;
  &lt;/a&gt;
  Blank Pages
&lt;/h2&gt;

&lt;p&gt;Days later, we discover that a book which previously had a publication date doesn't anymore. It's not unusual for a book to not have a publication date - we have records of books that haven't been published yet. However, books shouldn't &lt;em&gt;lose&lt;/em&gt; an existing publication date.&lt;/p&gt;

&lt;p&gt;We see that the book in question was in the CSV, and the Pub Date column was empty for that row. Turns out, that was an error from the publisher in preparing the CSV. Any book in that file should always have a publication date - the purpose of this process is to provide publication dates.&lt;/p&gt;

&lt;p&gt;We can prevent this from happening in the future by ensuring that a row has a publication date before attempting to process it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Skipped updating book with no publication date"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Could not find book"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;next&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#losing-the-plot"&gt;
  &lt;/a&gt;
  Losing The Plot
&lt;/h2&gt;

&lt;p&gt;Our "simple" parser is now a lot more complicated. Business rules about the shape, structure, and expectations of the data are now littered along with actions consuming the data to do things like find the book and update it with the appropriate publication date. It's harder to identify what the core responsibility of this snippet of code is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-chapters"&gt;
  &lt;/a&gt;
  Adding Chapters
&lt;/h2&gt;

&lt;p&gt;Let's try to increase the clarity of our code by separating out how to process an individual row of the CSV.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-act-establishing-a-new-character-class"&gt;
  &lt;/a&gt;
  First Act: Establishing A New Character (Class)
&lt;/h3&gt;

&lt;p&gt;We'll start by making a class that takes in the needed data from the CSV row and finds the book associated with the ISBN.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookPublicationDateImportRow&lt;/span&gt;
  &lt;span class="nb"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:isbn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;:publication_date&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;isbn&lt;/span&gt;&lt;span class="p"&gt;:,&lt;/span&gt; &lt;span class="n"&gt;publication_date&lt;/span&gt;&lt;span class="p"&gt;:)&lt;/span&gt;
    &lt;span class="vi"&gt;@isbn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;isbn&lt;/span&gt;
    &lt;span class="vi"&gt;@publication_date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;publication_date&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;book&lt;/span&gt;
    &lt;span class="vi"&gt;@book&lt;/span&gt; &lt;span class="o"&gt;||=&lt;/span&gt; &lt;span class="no"&gt;Book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;isbn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Perhaps you've heard of a &lt;a href="https://thoughtbot.com/blog/activemodel-form-objects"&gt;form object&lt;/a&gt; to represent data associated with a particular form on your web application. You can consider that's what we're doing here, except our input isn't from a form on a web page - it's a row from a CSV file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#second-act-rising-validations"&gt;
  &lt;/a&gt;
  Second Act: Rising Validations
&lt;/h3&gt;

&lt;p&gt;Now, rather than rewriting validation logic, as we had in our procedural code initially, we can use ActiveModel's &lt;a href="https://api.rubyonrails.org/v6.1.3.1/classes/ActiveModel/Validations.html"&gt;Validations&lt;/a&gt; module. That'll allow us access to the validation &lt;a href="https://guides.rubyonrails.org/active_record_validations.html#validation-helpers"&gt;helpers&lt;/a&gt; we're used to using with other Rails ActiveRecord models.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookPublicationDateImportRow&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;ActiveModel&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Validations&lt;/span&gt;

  &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:book&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="n"&gt;validates&lt;/span&gt; &lt;span class="ss"&gt;:publication_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;presence: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We would have caught our last problem of losing publication dates if that validation were on the Book model itself - and we may be tempted to look to add it now. However, remember - having a book with no publication date is totally normal for our application. It's only in &lt;strong&gt;this&lt;/strong&gt; instance of receiving a publication date update from a publisher with no publication date where it's unacceptable to have a value for that attribute.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#third-act-update-resolution"&gt;
  &lt;/a&gt;
  Third Act: Update Resolution
&lt;/h3&gt;

&lt;p&gt;We'll also mirror ActiveRecord's API by adding in a &lt;code&gt;save&lt;/code&gt; method that makes sure our instance is passing its own validations before updating the book:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BookPublicationDateImportRow&lt;/span&gt;
  &lt;span class="o"&gt;...&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;valid?&lt;/span&gt;

    &lt;span class="n"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="vi"&gt;@publication_date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#rewriting-the-intro"&gt;
  &lt;/a&gt;
  Rewriting The Intro
&lt;/h2&gt;

&lt;p&gt;Now that we have something that's responsible for managing an individual row, we can update our parsing code to be responsible for iterating through that CSV and pass off the details of how to manage that data to our new class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;headers: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;book_import&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;BookPublicationDateImportRow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="ss"&gt;isbn: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"ISBN"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="ss"&gt;publication_date: &lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Pub Date"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;book_import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
    &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;book_import&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;full_messages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;", "&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#epilogue"&gt;
  &lt;/a&gt;
  Epilogue
&lt;/h2&gt;

&lt;p&gt;By adding this new class, we've given ourselves an extension point for additional logic on the row. Any data transformation, like converting the publication date string to a date object, can be handled here (however, for CSV parsing, do take a look at the standard library's &lt;a href="https://ruby-doc.org/stdlib-3.0.1/libdoc/csv/rdoc/CSV.html#class-CSV-label-Built-In+Field+Converters"&gt;converters&lt;/a&gt; as well!).&lt;/p&gt;

&lt;p&gt;Any further validations that need to be exercised on the data can take place in this separate class. Moreover, we can use framework features and concepts that we're already familiar with, rather than rewriting our own business logic for validation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This post originally published on &lt;a href="https://blog.thegnar.co/active-model-validations-csv"&gt;The Gnar Company blog&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
    </item>
    <item>
      <title>Invest time into writing questions: Tips for writing better questions</title>
      <author>Tom Collins</author>
      <pubDate>Mon, 19 Jul 2021 12:11:58 +0000</pubDate>
      <link>https://dev.to/collinstommy/invest-time-into-writing-questions-tips-for-writing-better-questions-2e12</link>
      <guid>https://dev.to/collinstommy/invest-time-into-writing-questions-tips-for-writing-better-questions-2e12</guid>
      <description>&lt;p&gt;The essence of writing code is problem solving. This problem solving will often be a solitary task, you, the keyboard and a code editor. Not all problems are easily solved in this vacuum. For many problems we will benefit from the help of others.&lt;/p&gt;

&lt;p&gt;Every problem or task when writing code is a chance to learn from others. A complex task can usually benefit from the input of multiple developers. &lt;/p&gt;

&lt;p&gt;The more effort we put into asking a question, the more likely we will get an appropriate answer. When posing a question, whether this be over slack, email or in person, we should think of the time put into asking this question as an investment. A poorly framed question with little context will likely yield low quality answers, if any at all. &lt;strong&gt;A well structured question that describes the problem in full is far more likely to be answered well.&lt;/strong&gt; With that, let's look at how we can ask better questions.&lt;/p&gt;

&lt;p&gt;Asking good questions is all about context. We should frame the question with as much information as we can. When asking online you will likely need to give more context that when asking within a team. The same rules generally apply to either scenario though.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-include-information-on-the-environment"&gt;
  &lt;/a&gt;
  1. Include information on the environment
&lt;/h2&gt;

&lt;p&gt;A key piece of information will always be where this software is running. Is this a performance issue in production? Is this on your local machine? Documentation should be provided with any steps required to set up the environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-your-issue-should-be-reproducible"&gt;
  &lt;/a&gt;
  2. Your issue should be reproducible
&lt;/h2&gt;

&lt;p&gt;If there are some UI steps required to reproduce a bug, be specific about these. Include the branch name if relevant. Always have your code pushed to a remote repo.&lt;/p&gt;

&lt;p&gt;If you are asking online (stack overflow), create a reproducible code sample on Codepen, Code Sandbox or some other publicly available sandbox. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-include-errors"&gt;
  &lt;/a&gt;
  3. Include errors
&lt;/h2&gt;

&lt;p&gt;Don't stop at describing the issue. Include any stack traces from logs or console output. Check the network tab for any related network errors and include anything that is relevant&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-list-the-steps-you-have-taken"&gt;
  &lt;/a&gt;
  4. List the steps you have taken
&lt;/h2&gt;

&lt;p&gt;Give information on what you have already tried. What commands did you run? What code did you change? What debugging did you do? This will help frame the question and narrow the focus by eliminating these steps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-link-to-code"&gt;
  &lt;/a&gt;
  5. Link to code
&lt;/h2&gt;

&lt;p&gt;When the question is on a specific piece of code, link to this in github or give a file path and line number. Don't just give a function name. Help other developers find the code you are referring to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-explain-the-problem-in-full"&gt;
  &lt;/a&gt;
  6. Explain the problem in full
&lt;/h2&gt;

&lt;p&gt;For more general questions on what technology or a library to use, explain what you are trying to achieve. List the things that matter as well as what matters less. Include any constraints you may have.&lt;/p&gt;

&lt;p&gt;In summary:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ensure you give enough information so that the same state can be reached in the application&lt;/li&gt;
&lt;li&gt;Add as much context as you can&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>writing</category>
    </item>
  </channel>
</rss>
