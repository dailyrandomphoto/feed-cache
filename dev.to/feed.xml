<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The Story About a Smart Boss</title>
      <author>Evgenii Ponomarev</author>
      <pubDate>Thu, 12 Aug 2021 19:47:33 +0000</pubDate>
      <link>https://dev.to/_elergy_/the-story-about-a-smart-boss-f72</link>
      <guid>https://dev.to/_elergy_/the-story-about-a-smart-boss-f72</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ytrpi0Ko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/08/philippe-oursel-ZAF-rhUyESY-unsplash--1-.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ytrpi0Ko--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://evgenii.info/content/images/2021/08/philippe-oursel-ZAF-rhUyESY-unsplash--1-.jpg" alt="The Story About a Smart Boss"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Molly had a very smart boss.&lt;/p&gt;

&lt;p&gt;Once, they had a system outage in the middle of the night, which nobody could solve until they called Molly. She logged in, scanned through all the changes from the day before, read the logs, did her own tests, and found the culprit – some expired certificates on one of their production clusters.&lt;/p&gt;

&lt;p&gt;When the boss saw it the following day, he gathered everyone in one place and praised her in front of the others.&lt;br&gt;&lt;br&gt;
"Thanks to Molly, the outage persisted for only 45 minutes. She was quick, accurate, and she did the exact things I would do in this situation.&lt;br&gt;&lt;br&gt;
I had numerous incidents like this in my life, you know. And now it almost feels easy — I see the symptoms, and the root cause becomes apparent. But even with all this experience, I'm not sure I could have done it faster than Molly."&lt;/p&gt;

&lt;p&gt;And everyone clapped him because he was very smart and humble, and they knew he would have found these expired certificates much quicker.&lt;/p&gt;




&lt;p&gt;Another time, the whole team were brainstorming how to reduce the latency of their API.&lt;/p&gt;

&lt;p&gt;Molly knew one or two things about it and proposed to cache frequently used data in Redis.&lt;/p&gt;

&lt;p&gt;"I think it can be a huge success," the boss commented. "It's great that you mentioned that because I've been analyzing Redis myself and was just about to create the task to begin using it. Do you guys all agree about giving it a try?"&lt;/p&gt;

&lt;p&gt;And everyone nodded because he was very smart and always had excellent and well-thought-out ideas.&lt;/p&gt;

&lt;p&gt;"Actually," the boss pointed to Molly, "considering you also proposed Redis, why wouldn't you create tasks yourself?"&lt;/p&gt;

&lt;p&gt;And everyone found it to be a good idea because wise leaders delegate work to their people.&lt;/p&gt;




&lt;p&gt;Later that day, Molly called her old friend. He was a manager in another company, and she knew they were hiring.&lt;/p&gt;

&lt;p&gt;"Is it what, my birthday?" her friend laughed. "But how is your team gonna take it?"&lt;/p&gt;

&lt;p&gt;She paused for a second. "I'll miss them... but they don't need me much anyway. I don't think anything will change".&lt;/p&gt;




&lt;p&gt;Molly was right – nothing has changed with her departure.&lt;/p&gt;

&lt;p&gt;She had a chance to see this for herself a year later when she met her former boss.&lt;/p&gt;

&lt;p&gt;"We just talked about you yesterday! There was a huge outage because of some expired certificates — put us down for 12 hours! I remember you were good at fixing those..."&lt;/p&gt;

&lt;p&gt;Molly was startled but chose to switch to something more positive. "Those certificates are always tricky, don't even remind me… So how's the cool stuff, huh? API?"&lt;/p&gt;

&lt;p&gt;"A bit slow as always, you know. But we plan to fix it soon — I think if we can implement some sort of a cache, or perhaps find an open-source thing."&lt;/p&gt;

&lt;p&gt;"Like Redis," Molly suggested.&lt;/p&gt;

&lt;p&gt;"Exactly! You know, I've been looking at it myself recently — my favourite option so far!"&lt;/p&gt;




&lt;p&gt;As always, you can &lt;a href="https://evgenii.info/newsletter"&gt;subscribe to Resilient Systems&lt;/a&gt; and receive new articles by email if you haven't done it yet.&lt;br&gt;&lt;br&gt;
You also can &lt;a href="https://twitter.com/_elergy_"&gt;find me on Twitter&lt;/a&gt; or somewhere else – I am always happy to chat :-)&lt;/p&gt;

</description>
      <category>career</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Everything you need to know about AdonisJs</title>
      <author>Ted Ngeene</author>
      <pubDate>Thu, 12 Aug 2021 19:43:32 +0000</pubDate>
      <link>https://dev.to/tngeene/introduction-to-adonisjs-4a1f</link>
      <guid>https://dev.to/tngeene/introduction-to-adonisjs-4a1f</guid>
      <description>&lt;p&gt;When we talk about modern software development, it's hard to overlook the role of JavaScript. With so many frameworks to choose from, choosing the 'perfect one is often a conundrum that many newbie developers and experienced ones face when they want to learn new skills. In this series, I will highlight why you should go with &lt;a href="%5Bhttps://adonisjs.com/%5D(https://adonisjs.com/)"&gt;AdonisJs&lt;/a&gt;. By the end of the tutorial, I believe you will be able to handle most, if not all of the common tasks involved in any backend application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table Of Content
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/tngeene/introduction-to-adonisjs-4jch-temp-slug-8630401/edit#what-is-adonisjs"&gt;What is AdonisJs?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tngeene/introduction-to-adonisjs-4jch-temp-slug-8630401/edit#why-adonisjs"&gt;Why Use AdonisJs?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tngeene/introduction-to-adonisjs-4jch-temp-slug-8630401/edit#outline"&gt;Series Outline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tngeene/introduction-to-adonisjs-4jch-temp-slug-8630401/edit#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/tngeene/introduction-to-adonisjs-4jch-temp-slug-8630401/edit#communities-and-resources"&gt;Communities and Resources in AdonisJs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#what-is-adonisjs"&gt;
  &lt;/a&gt;
  What is AdonisJs?
&lt;/h2&gt;

&lt;p&gt;Some of you are wondering, "what in the world is AdonisJs in the first place?". AdonisJs describes itself as, "a backend framework for Node.js." However, you can do both back-end and front-end development using the framework. It follows the &lt;a href="https://www.tutorialspoint.com/mvc_framework/mvc_framework_introduction.htm"&gt;Model View Controller(MVC)&lt;/a&gt; architecture, therefore, you can create fully functional web apps using a single framework. It has its own templating engine called edge. It was created by &lt;a href="https://dev.to/amanvirk1"&gt;Aman Virk&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-adonisjs"&gt;
  &lt;/a&gt;
  Why AdonisJs
&lt;/h2&gt;

&lt;p&gt;A couple of weeks ago, I started using the framework. Being torn between express and Adonis, I finally swayed the Adonis way. The reason for this is;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It has a robust &lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;Object Relational Mapping(ORM)&lt;/a&gt;, which provides first-class support for SQL databases, Query builder with active records, seeds, migrations, and Redis support. This to me was the biggest factor in choosing it as I didn't have to go through the extra step of manually configuring the ORM.&lt;/li&gt;
&lt;li&gt;Typescript support outside the box🎊&lt;/li&gt;
&lt;li&gt;Well-written and thorough &lt;a href="https://docs.adonisjs.com/guides/introduction"&gt;documentation&lt;/a&gt;. You can build a web app by just using the documentation.&lt;/li&gt;
&lt;li&gt;Multi driver auth support, which lets you choose between JWT, session, and opaque API tokens.&lt;/li&gt;
&lt;li&gt;It is easy to set up and use.&lt;/li&gt;
&lt;li&gt;It follows good design patterns on what should encompass a web framework.&lt;/li&gt;
&lt;li&gt;Strong emphasis on web security&lt;/li&gt;
&lt;li&gt;A growing community. I personally see Adonis cementing itself as a top backend framework in the next couple of years.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I could go on and on about why I like the framework, but for that, I'll link some communities at the end of the post for you to have a look at the discussions around it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;p&gt;Before we make any development I'll highlight what we'll be building and the requirements you'll need to set up an Adonis project.&lt;/p&gt;

&lt;p&gt;We're going to be making a sports apparel store, called FitIt. The goal of the series is to highlight a couple of concepts that are important in your journey to becoming a top-notch Adonis developer. The store will be multi-tenant, meaning users can own different stores and post their gear for that particular shop.&lt;/p&gt;

&lt;p&gt;The Database model is illustrated below;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eDRIfGtY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--e9nyVRxq--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzn7uhf6fh7om3u017g5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eDRIfGtY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--e9nyVRxq--/c_limit%252Cf_auto%252Cfl_progressive%252Cq_auto%252Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzn7uhf6fh7om3u017g5.png" alt="https://res.cloudinary.com/practicaldev/image/fetch/s--e9nyVRxq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pzn7uhf6fh7om3u017g5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#topics"&gt;
  &lt;/a&gt;
  Topics
&lt;/h2&gt;

&lt;p&gt;These are the features we'll be going over, which are essential to understand while working on any project.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Installation and setup(using typescript)&lt;/li&gt;
&lt;li&gt;Login and registration

&lt;ul&gt;
&lt;li&gt;Different authentication schemes&lt;/li&gt;
&lt;li&gt;Account activation&lt;/li&gt;
&lt;li&gt;social signup&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Relationships

&lt;ul&gt;
&lt;li&gt;one to many&lt;/li&gt;
&lt;li&gt;many to many&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CRUD operations

&lt;ul&gt;
&lt;li&gt;Pagination&lt;/li&gt;
&lt;li&gt;Filters&lt;/li&gt;
&lt;li&gt;File uploads&lt;/li&gt;
&lt;li&gt;Validators&lt;/li&gt;
&lt;li&gt;Success and error messages&lt;/li&gt;
&lt;li&gt;Slug system&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Lifecycle hooks&lt;/li&gt;
&lt;li&gt;Events in AdonisJs&lt;/li&gt;
&lt;li&gt;Mailing&lt;/li&gt;
&lt;li&gt;Database Seeders&lt;/li&gt;
&lt;li&gt;Hook up to vue.js frontend.&lt;/li&gt;
&lt;li&gt;Deployment.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; - AdonisJS is a Node.js framework and hence it requires Node.js to be installed on your computer. To be precise, we require at least the latest release of Node.js 14.&lt;/li&gt;
&lt;li&gt;A package manager. I will be using &lt;a href="https://www.npmjs.com/"&gt;npm&lt;/a&gt; However, you can use &lt;a href="https://yarnpkg.com/"&gt;yarn.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;A code editor. My go-to editor is &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code.&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#communities-and-resources"&gt;
  &lt;/a&gt;
  Communities and Resources
&lt;/h2&gt;

&lt;p&gt;If you've made it this far, then I'm sure I've picked your interest in learning this framework. AdonisJs has a growing community, where you'll get assistance in your journey. For more info on the framework, you can check out;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://discord.com/invite/vDcEjq6"&gt;AdonisJS Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/adonisframework?lang=en"&gt;Twitter account&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adonisjs/core"&gt;Official Github Repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://adonisjs.com/"&gt;official Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can also follow me on dev as well as check out my &lt;a href="https://tngeene.com/"&gt;personal website&lt;/a&gt; where I'll be writing more on Adonis and full stack development.&lt;/p&gt;

</description>
      <category>adonisjs</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>ระบบลงทะเบียน ใช้ Firebase ดีไหม?</title>
      <author>Narate Ketram</author>
      <pubDate>Thu, 12 Aug 2021 19:14:22 +0000</pubDate>
      <link>https://dev.to/domecloud/firebase-2i3b</link>
      <guid>https://dev.to/domecloud/firebase-2i3b</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;สวัสดีครับ ผม&lt;a href="https://www.facebook.com/koonnarate/"&gt;นเรศ&lt;/a&gt; หรือว่า เรียกสั้น ๆ ว่า นเรศ เฉย ๆ ก็ได้&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;วันนี้ ผมจะมาวิเคราะห์ระบบลงทะเบียน สำหรับการฉีดวัคซีนฟรี เพื่อเป็นกรณีศึกษาครับ เนื่องจาก &lt;a href="https://www.facebook.com/domecloud.io"&gt;DomeCloud&lt;/a&gt; ได้เสนอตัวเพื่อทำระบบการลงทะเบียน เพื่อฉีดวัคซีนซิโนฟาร์มฟรี ให้กับจังหวัดชลบุรี โดยเป็นหนึ่งในการทำระบบเพื่อสังคม ไม่ต้องเสียค่าใช้จ่ายใด ๆ ให้ DomeCloud (ถ้ามีใครสนใจอยากสอบถาม ถามไปที่ Inbox page DomeCloud Facebook ได้เลย)&lt;/p&gt;

&lt;p&gt;โดยส่วนตัวผมเอง ผมมักจะพูดถึงการทำระบบลงทะเบียนต่าง ๆ ที่ไม่สามารถรองรับผู้ใช้งานได้ว่า "ทำเว็บสวย ๆ แล้วใช้ไม่ได้ ทำทำไม" ซึ่งกรณีนี้อยากจะสื่อความว่า เว็บสวย ๆ ทำงาน มันก็แค่ Static file ทำให้มันล่ม ยากกว่าอีก&lt;/p&gt;

&lt;p&gt;แต่...&lt;/p&gt;

&lt;p&gt;แต่ การทำเว็บแบบ Static มันก็ไม่ได้ตอบโจทย์ของระบบการลงทะเบียนอะไรเหล่านี้ มันก็จริงอยู่ว่า ทำเป็น SPA (Single Page Application) มันก็ Static file นี่ ?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jvM2aWav--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdx0vulzi3jnv0uq72u8.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jvM2aWav--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdx0vulzi3jnv0uq72u8.jpg" alt="Spa"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ใช่ แต่...&lt;/p&gt;

&lt;p&gt;แต่อีกแล้ว คือหน้าเว็บเอง มัน Static แหละ แต่ข้อมูลมันไม่ Static โดยธรรมชาติของระบบลงทะเบียน ข้อมูลต่างๆ มันจะเก็บลงฐานข้อมูล&lt;/p&gt;




&lt;p&gt;เข้าเรื่องเลย การออกแบบระบบนี้ อาศัยความขี้เกียจ ออกแบบระบบไว้ประมาณนี้&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MAdo80iy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsn9m1fnzjy5kxyziuww.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MAdo80iy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsn9m1fnzjy5kxyziuww.png" alt="Register Diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;เราเลือกใช้ Firebase สำหรับงาน Backend เพราะว่าทำให้สามารถสร้างระบบการลงทะเบียนขึ้นมาได้ง่าย แบบ ง่ายมาก ไม่ต้องดูแล Backend ของตัวเอง มีแค่ Static file ที่เราคิดว่า ดูแลเองง่ายกว่า (เพราะว่า เคยเจอปัญหาตอนฝากไฟล์ไว้ที่ Cloudflare)&lt;/p&gt;

&lt;p&gt;แต่พอใช้งานจริง มันไม่ง่ายอย่างที่คิด&lt;/p&gt;

&lt;p&gt;หลังจากที่ออกแบบและสร้างมันขึ้นมาแล้ว ผมก็ได้ทำการโหลดเทสระบบ โดยเทสไปที่แค่ส่วนของ Static file หรือหน้าเว็บที่เราสร้างมา เพื่อดูว่าเราสามารถรองรับการใช้งานได้ที่เท่าไหร่&lt;/p&gt;

&lt;p&gt;ผลโหลดเทสแรกๆเลย ตามภาพข้างบน เราใช้ Cloudflare + Proxy ที่ Cloudflare เลย ผลโหลดเทส ออกมา กระจอกมาก ได้ที่ประมาณ 2,000 Request per sec. อันนี้ ผมคิดว่าอาจจะเป็น Limit ฝั่ง Cloudflare จากนั้นนำเสนอข้อมูลการโหลดเทส ไปยังที่ประชุมว่า ได้ที่ 2,000 RPS เพราะ Cloudflare มัน Limit ไว้&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YgadW3fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4co1dpovkplo012kr2u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YgadW3fg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f4co1dpovkplo012kr2u.png" alt="Chon Buri with CF Proxy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;แต่ที่ประชุมบอกว่ามันน้อยเกินไป ผมเลยปลด Cloudflare Proxy ให้ใช้เป็น DNS Only แล้วยิงโหลดเทสใหม่ ผลคือ ได้ประมาณ 50,000 RPS อันนี้เป็นอีกโดเมนหนึ่ง ซึ่งเป็นของ เทศบาลตำบลเสม็ด จังหวัดชลบุรี ที่ยิงไปตรง ๆ แบบ HTTP&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S9boaxnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0q1xsocrgy0cc8123c1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S9boaxnm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b0q1xsocrgy0cc8123c1.png" alt="Samet Load testing HTTP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ผลทดสอบแบบ HTTPS&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OWa0T667--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/grrqk7ear4zh8m641x6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OWa0T667--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/grrqk7ear4zh8m641x6g.png" alt="Samet Load testing HTTPS"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;จากผลการทดสอบ ทั้งของจังหวัด และเทศบาล พอจะสรุปได้คร่าวๆว่า HTTP เรารับได้มากกว่า 50,000 Request per sec. แน่ๆ และ ถ้าเรา Terminate HTTPS เอง จะได้ราวๆ 20,000 Request per sec.&lt;/p&gt;

&lt;p&gt;ตัวเลขทั้งสองค่า ทั้ง HTTP, HTTPS ผมค่อนข้างพอใจกับตัวเลขนี้ คิดว่า คนจังหวัดชลบุรี ไม่น่าจะใช้เกินนี้ เลยสรุปกันกับทีมว่า จะใช้ Cloudflare เป็น DNS Only เท่านั้น เพราะที่ประชุมเห็นตัวเลขว่ารับได้มากกว่า&lt;/p&gt;

&lt;p&gt;การโหลดเทส ทีมไม่ได้โหลดเทสไปยัง Firebase เพราะเราเชื่อว่า Google จะสามารถรองรับผู้ใช้งานให้เราได้ เราใช้ Firebase Realtime Database ในการเก็บข้อมูล และเช็คว่ามีการลงทะเบียนครบหรือยัง ถ้าครบแล้วจะปิดการลงทะเบียนอัตโนมัติ&lt;/p&gt;




&lt;p&gt;จากการออกแบบ ที่ความไว้ใจ Firebase เราก็ชะล่าใจไประดับหนึ่ง แต่ก็คิดว่า ยังไงมันก็อาจจะเกินโควต้าฟรีของ Firebase ก็เลยไปเพิ่มแพลนของ Firebase เป็น Pay as you go...&lt;/p&gt;




&lt;p&gt;วันที่ระบบขึ้นใช้งานจริง ตอนวันที่ 12 สิงหาคม 2564 เวลาท้องถิ่น 09:00 น. ผมซึ่งคืนก่อนหน้า นั่งทำระบบ Logging Server ไปนอนตอนตีห้า ป่าน น้องในทีมแชทมาว่า ระบบเริ่มหน่วง ผมก็คิดว่า ไม่น่าจะมีปัญหาอะไร เลยตอบแชทไปและนอนต่อ&lt;/p&gt;

&lt;p&gt;ผ่านไปไม่ถึงห้านาที ป่านโทรมา บอกว่า ล่มแล้ว หน่วงมาก ใช้งานไม่ได้ ผมลุกจากที่นอนทันที จากนั้นสิ่งแรกที่ทำคือ ให้ Cloudflare Proxy และแคชให้ด้วยเลย&lt;/p&gt;

&lt;p&gt;แต่ว่าเจอปัญหาต่อมา&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FaGTCl59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr771vri97mn0axuci93.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FaGTCl59--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tr771vri97mn0axuci93.png" alt="Cloudflare Ratelimit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;เราเชื่อใน Cloudflare มากว่า มันเก่ง แต่ลืมคิดไปว่า มันก็มี Limit ของมัน พอผมเจอปัญหานี้ เลยกดจ่ายเงินไป (ตัดบัตรพี่โดม 5555) สำหรับ Pro Plan ราคา $20 ต่อเดือน แต่ว่า เกิดปัญหาขึ้นว่า ตัว Cloudflare เอง มันแคช Dashboard มันเองด้วย (สัส คิดในใจ) ผมคิดว่า แย่ละ Pro Plan ไม่เพียงพอ เลยกดเพิ่มเป็น Biz Plan บวกเพิ่มไปอีก $200 ต่อเดือน (รวม $220 ที่กดไป)&lt;/p&gt;

&lt;p&gt;หลังจากกดไปแล้ว มันเหมือนเดิม... เอ๊ะ...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#%E0%B9%80%E0%B8%AD%E0%B9%8A%E0%B8%B0%E0%B8%B0%E0%B8%B0%E0%B8%B0%E0%B8%B0-"&gt;
  &lt;/a&gt;
  เอ๊ะะะะะ ?
&lt;/h1&gt;

&lt;p&gt;อีหยังวะ ทำไม Cloudflare มันไม่อัปเกรดให้&lt;/p&gt;

&lt;p&gt;ระหว่างนี้คือ ผ่านไปราวๆครึ่งชั่วโมง (ณ 09:30) ผมยังคงเห็น Cloudflare return 503 กลับมาว่า ติด Rate Limit อยู่เลย จากนั้นก็ได้รับแจ้งมาว่า คนลงทะเบียนครบแล้ว คือ รอบแรก จะให้ลงทะเบียนราวๆ 25,000 คน มั้ง ประมาณนั้น แต่ พอคงลงเต็มไปแล้ว ระบบยังได้รับข้อมูลเข้ามาเรื่อยๆ จบที่ราวๆ 30,000 คน&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vKgpXHZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlgvx4lk0zlgp5ilr59t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vKgpXHZf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlgvx4lk0zlgp5ilr59t.png" alt="Cloudflare Request"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;จากกราฟ จะเห็นว่าตอนช่วงเริ่มเปิดให้ลงทะเบียน จะมี Request พุ่งไปที่ประมาณ 150,000 Request per sec. ซึ่งมากกว่าที่เราโหลดเทสราวๆ 3 เท่า (โหลดเทสที่ 50,000 request per sec)&lt;/p&gt;

&lt;p&gt;ผลก็คือ หน้าเว็บมันไม่แสดงผลแบบสมบูรณ์ แต่ว่า ใช้ cURL ทดสอบเรียกหน้าเว็บจะได้  200 OK นะ แต่ว่า เราออกแบบหน้าเว็บไว้ให้เช็คว่า ลงทะเบียนครบหรือยัง ทำให้ยังมี Request ไปที Firebase Realtime Database อยู่&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--te08CPN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbrnesut0oqdfox288os.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--te08CPN_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gbrnesut0oqdfox288os.png" alt="Full"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ซึ่งตัว Firebase เอง มันคิดค่า Data Transfer ด้วย!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L2aDNXeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyx5hb4efpcl0hpum5h6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L2aDNXeN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyx5hb4efpcl0hpum5h6.png" alt="Firebase Data Transfer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;เหี้ย! แล้วเรา! โดน Data Transfer ไปราวๆ 3.5 TB คิดเป็นเงินราวๆ $3,500 หรือ ราวๆ 115,000 บาท โดยประมาณ จากการเปิดใช้งานระบบ 1 ชั่วโมง&lt;/p&gt;




&lt;p&gt;ข้อมูลจาก Cloudflare&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XhQKtQTk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkuvujwadkgyuhhg421u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XhQKtQTk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dkuvujwadkgyuhhg421u.png" alt="Cloudflare Request"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#%E0%B8%9B%E0%B8%B1%E0%B8%8D%E0%B8%AB%E0%B8%B2"&gt;
  &lt;/a&gt;
  ปัญหา
&lt;/h1&gt;

&lt;p&gt;ปัญหาที่เราเจอคือ จาก Cloudflare มาหา Origin Server ของเรา Bandwidth เต็ม... เราเลยให้ Cloudflare Cache ให้ แต่ว่า ปัญหามันไม่ได้จบที่ตรงนั้น หลังจากโหลดไฟล์ไปครบจากฝั่ง Cloudflare แล้ว ปัญหาต่อมาคือ Firebase Realtime Database มัน Response ช้า ทำให้หน้าแรกโหลดไม่สมบูรณ์เพราะ รอข้อมูลจาก Firebase ซึ่งเราทำอะไรไม่ได้เลย ณ เวลานั้น&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#%E0%B8%AA%E0%B8%A3%E0%B8%B8%E0%B8%9B"&gt;
  &lt;/a&gt;
  สรุป
&lt;/h1&gt;

&lt;p&gt;Firebase ใช้งานได้ดี ถ้าไม่ได้ใช้มากจนเกินไป แต่การเขียน Query ฝั่ง Firebase ต้องคำนึงถึง Data Transfer ด้วย เพื่อลดค่าใช้จ่ายที่จะเกิดขึ้น&lt;/p&gt;




&lt;p&gt;แผนต่อไปของการลงทะเบียนผมได้ออกแบบแนวทางไว้แล้ว 2 ทาง ไว้จะมาเล่าต่อรอบหน้า&lt;/p&gt;

</description>
      <category>register</category>
      <category>firebase</category>
    </item>
    <item>
      <title>Inside the Gpt-3-Powered Chatbot That Someone Used to Talk to Their Fiancé Who Passed — on DevNews</title>
      <author>dev.to staff</author>
      <pubDate>Thu, 12 Aug 2021 18:56:37 +0000</pubDate>
      <link>https://dev.to/devteam/inside-the-gpt-3-powered-chatbot-that-someone-used-to-talk-to-their-fiance-who-passed-on-devnews-4l1h</link>
      <guid>https://dev.to/devteam/inside-the-gpt-3-powered-chatbot-that-someone-used-to-talk-to-their-fiance-who-passed-on-devnews-4l1h</guid>
      <description>&lt;p&gt;Listen to S5E4 of the DevNews podcast today!&lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devnews/s5-e4-inside-the-gpt-3-powered-chatbot-that-someone-used-to-talk-to-their-fiance-who-passed"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S5:E4 -  Inside the Gpt-3-Powered Chatbot That Someone Used to Talk to Their Fiancé Who Passed&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devnews"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevNews  

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s5-e4-inside-the-gpt-3-powered-chatbot-that-someone-used-to-talk-to-their-fiance-who-passed" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s5-e4-inside-the-gpt-3-powered-chatbot-that-someone-used-to-talk-to-their-fiance-who-passed" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s5-e4-inside-the-gpt-3-powered-chatbot-that-someone-used-to-talk-to-their-fiance-who-passed" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s5-e4-inside-the-gpt-3-powered-chatbot-that-someone-used-to-talk-to-their-fiance-who-passed" alt="DevNews" src="https://res.cloudinary.com/practicaldev/image/fetch/s--jJPvwj98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XOSCOlKI--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s5-e4-inside-the-gpt-3-powered-chatbot-that-someone-used-to-talk-to-their-fiance-who-passed"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devnews/s5-e4-inside-the-gpt-3-powered-chatbot-that-someone-used-to-talk-to-their-fiance-who-passed"&gt;
      &lt;img id="episode-profile-image" alt="S5:E4 -  Inside the Gpt-3-Powered Chatbot That Someone Used to Talk to Their Fiancé Who Passed" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--84VpOv6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3GWkSFQs--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/346/5b0bd095-4a8c-4449-a43d-9e9b154b9d09.png"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Hosts:&lt;/strong&gt; &lt;a class="mentioned-user" href="https://dev.to/saronyitbarek"&gt;@saronyitbarek&lt;/a&gt;
 &amp;amp; &lt;a class="mentioned-user" href="https://dev.to/joshpuetz"&gt;@joshpuetz&lt;/a&gt;
 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Guest:&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/technollama"&gt;Jason Rohrer&lt;/a&gt;, Designer and Creator of Project December, whose GPT-3-powered chatbot has been used by people to talk to historical figures and personalities, and was even used by one person to talk to his late fiancé for closure.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devnews"&gt;follow DevNews&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; &lt;em&gt;— or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Quick Listening Links&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/s5-e4-inside-the-gpt-3-powered-chatbot-that-someone/id1525581923?i=1000531798349"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/2bP3DMe7ix5yyRbDL5Uh8d"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cDovL2ZlZWRzLmNvZGVuZXdiaWUub3JnL2Rldm5ld3NfcG9kY2FzdC54bWw/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZuZXdzLzM2?sa=X&amp;amp;ved=0CAQQkfYCahcKEwig1urVk6zyAhUAAAAAHQAAAAAQCA"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.stitcher.com/show/devnews/episode/s5-e4-inside-the-gpt-3-powered-chatbot-that-someone-used-to-talk-to-their-fiance-who-passed-86055371"&gt;Stitcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devnews/s5e4-inside-the-gpt-3-q7jKnkDQxc_/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevNews-p1352512/?topicId=165079324"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.herokuapp.com/podcasts/devnews/episodes/178"&gt;DEV Pods website&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#acknowledgements"&gt;
  &lt;/a&gt;
  &lt;em&gt;Acknowledgements&lt;/em&gt;
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Our season five sponsor, &lt;a href="https://scoutapm.com/devnews"&gt;Scout APM&lt;/a&gt; ❤️ &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope you enjoy this episode of DevNews!&lt;/p&gt;

</description>
      <category>news</category>
      <category>podcast</category>
    </item>
    <item>
      <title>GoDo: A command line todo list application</title>
      <author>Richard Halford</author>
      <pubDate>Thu, 12 Aug 2021 18:48:53 +0000</pubDate>
      <link>https://dev.to/rshalford/godo-a-command-line-todo-list-application-4oj4</link>
      <guid>https://dev.to/rshalford/godo-a-command-line-todo-list-application-4oj4</guid>
      <description>&lt;h1&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#about"&gt;About&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#recommendations"&gt;Recommendations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;a href="#goapi"&gt;GoAPI&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#authentication"&gt;Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#server"&gt;Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#daemonize"&gt;Daemonize&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#licence"&gt;Licence&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#about"&gt;
  &lt;/a&gt;
  About
&lt;/h1&gt;

&lt;p&gt;GoDo aims to help you get organised with your tasks. Designed to be simple and accessible.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Usage:
  godo &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;

Available Commands:
  add         add a new todo
  &lt;span class="k"&gt;done        &lt;/span&gt;toggle todo as &lt;span class="k"&gt;done
  &lt;/span&gt;edit        edit a todo
  find        search &lt;span class="k"&gt;for &lt;/span&gt;a given string
  &lt;span class="nb"&gt;help        help &lt;/span&gt;about any &lt;span class="nb"&gt;command
  &lt;/span&gt;list        list your todos
  priority    label a todo as a priority
  remove      remove a todo
  version     print godo&lt;span class="s1"&gt;'s version

Flags:
      --datafile string   data file to store todos
  -h, --help              help for godo

Use "godo [command] --help" for more information about a command.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#go-get-things-done-and-checked-off-the-list"&gt;
  &lt;/a&gt;
  Go get things done and checked off the list.
&lt;/h3&gt;




&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;p&gt;The best way to ensure GoDo will work on your machine, is to compile it yourself.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go (to compile applications)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To do this, all you need is to have Go - &lt;a href="https://golang.org/doc/install"&gt;the programming language&lt;/a&gt; - installed on your computer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;To install GoDo, all you have to do is run the &lt;code&gt;go get&lt;/code&gt; command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;go get &lt;span class="nt"&gt;-u&lt;/span&gt; github.com/rsHalford/godo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations
&lt;/h2&gt;

&lt;p&gt;If you want to have your GoDo list available online, and accessible to other computers. There is GoAPI. A REST API which can handle the JSON created by GoDo.&lt;/p&gt;

&lt;p&gt;To edit the necessary variables to hook up GoAPI with a database. You will need to clone the &lt;a href="https://github.com/rsHalford/goapi"&gt;GoAPI repository&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone github.com/rsHalford/goapi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then after making the &lt;a href="#authentication"&gt;necessary changes&lt;/a&gt; to the source code. Build the GoAPI binary, for the operating server it will be ran on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;env &lt;/span&gt;&lt;span class="nv"&gt;GOOS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;linux &lt;span class="nv"&gt;GOARCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;amd64 &lt;span class="nv"&gt;CGO_ENABLED&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0 go build github.com/rsHalford/goapi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;This example command will build GoAPI to be executable on Debian 10.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then you would need to have a web server installed and a way to run GoAPI as a daemon.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Apache2 (ProxyPass to your web address)&lt;/li&gt;
&lt;li&gt;Systemd (daemonize GoAPI to run in the background)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;These recommendations are based on what I found to work best for my setup.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#configuration"&gt;
  &lt;/a&gt;
  Configuration
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;config.yaml&lt;/code&gt; can be edited to set-up a connection to &lt;a href="https://github.com/rsHalford/goapi"&gt;GoAPI&lt;/a&gt;. As well as, select your preferred text editor.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This file will read from &lt;code&gt;${XDG_CONFIG_HOME:-$HOME/.config}/godo/config.yaml&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;admin"&lt;/span&gt;
&lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;secret"&lt;/span&gt;
&lt;span class="na"&gt;api&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://example.com/api/v1/todo"&lt;/span&gt;
&lt;span class="na"&gt;editor&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;vim"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you prefer to use a local JSON file to store your todo list, leave the api address blank - &lt;code&gt;""&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;By default, GoDo will use whatever text editor you have set as your system's default - &lt;code&gt;$EDITOR&lt;/code&gt;.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#goapi"&gt;
  &lt;/a&gt;
  GoAPI
&lt;/h1&gt;

&lt;p&gt;GoAPI was built to support the GoDo application, in providing a RESTful API.&lt;/p&gt;

&lt;p&gt;To setup the server application, there a three changes that need to be made.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#authentication"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h2&gt;

&lt;p&gt;To secure your todo list online, you will need to change the &lt;code&gt;api_username&lt;/code&gt; and &lt;code&gt;api_password&lt;/code&gt; variables, required to access the API endpoints. These variables are found in the &lt;code&gt;config.yaml&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;These values will be what you send to the API with each request, using Basic Authentication.&lt;/p&gt;

&lt;p&gt;An example of the &lt;code&gt;config.yaml&lt;/code&gt; can be found in the &lt;a href="https://github.com/rsHalford/goapi/blob/main/config.yaml"&gt;project's repository&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;api_username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;username"&lt;/span&gt;
&lt;span class="na"&gt;api_password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;password"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Currently GoAPI only supports PostgreSQL. To link up the server to a database, make sure to edit the &lt;code&gt;config.yaml&lt;/code&gt;. Providing the &lt;code&gt;db_username&lt;/code&gt;, &lt;code&gt;db_password&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; - relating to your database address.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;db_username&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;username"&lt;/span&gt;
&lt;span class="na"&gt;db_password&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;password"&lt;/span&gt;
&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;goapi"&lt;/span&gt;
&lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;5432"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#server"&gt;
  &lt;/a&gt;
  Server
&lt;/h2&gt;

&lt;p&gt;GoAPI by default serves on port &lt;code&gt;:8080&lt;/code&gt;. As an example, below is a basic Apache configuration file to relay GoAPI to your domain.&lt;/p&gt;

&lt;p&gt;Apache Configuration Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight apache"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nl"&gt;VirtualHost&lt;/span&gt;&lt;span class="sr"&gt; *:80&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="nc"&gt;ServerName&lt;/span&gt; goapi.example.com
        &lt;span class="nc"&gt;ServerAdmin&lt;/span&gt; webmaster@example.com
        &lt;span class="nc"&gt;ProxyRequests&lt;/span&gt; &lt;span class="ss"&gt;Off&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nl"&gt;Proxy&lt;/span&gt;&lt;span class="sr"&gt; *&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="nc"&gt;Require&lt;/span&gt; &lt;span class="ss"&gt;all&lt;/span&gt; granted
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nl"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="nc"&gt;ProxyPass&lt;/span&gt; / http://127.0.0.1:8080/
        &lt;span class="nc"&gt;ProxyPassReverse&lt;/span&gt; / http:127.0.0.1:8080/
        &lt;span class="nc"&gt;ErrorLog&lt;/span&gt; ${APACHE_LOG_DIR}/goapi-error.log
        &lt;span class="nc"&gt;CustomLog&lt;/span&gt; ${APACHE_LOG_DIR}/goapi-access.log combined
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nl"&gt;VirtualHost&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#daemonize"&gt;
  &lt;/a&gt;
  Daemonize
&lt;/h2&gt;

&lt;p&gt;To have GoAPI run at all times in the background. You will need to make it run as a daemon. This is possible by creating one as a service with your init system - such as with systemd.&lt;/p&gt;

&lt;p&gt;Systemd Service Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="nn"&gt;[Unit]&lt;/span&gt;
&lt;span class="py"&gt;Description&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;GoAPI&lt;/span&gt; &lt;span class="err"&gt;RESTful&lt;/span&gt; &lt;span class="err"&gt;API&lt;/span&gt;

&lt;span class="nn"&gt;[Service]&lt;/span&gt;
&lt;span class="py"&gt;ExecStart&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;/path/to/goapi/excutable&lt;/span&gt;
&lt;span class="py"&gt;WorkingDirectory&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;/path/to/goapi&lt;/span&gt;
&lt;span class="py"&gt;StandardOutput&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;journal&lt;/span&gt;
&lt;span class="py"&gt;StandardError&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;inherit&lt;/span&gt;
&lt;span class="py"&gt;SyslogIdentifier&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;goapi&lt;/span&gt;
&lt;span class="py"&gt;User&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;user&lt;/span&gt;
&lt;span class="py"&gt;Group&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;group&lt;/span&gt;
&lt;span class="py"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;simple&lt;/span&gt;
&lt;span class="py"&gt;Restart&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;on-failure&lt;/span&gt;

&lt;span class="nn"&gt;[Install]&lt;/span&gt;
&lt;span class="py"&gt;WantedBy&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="err"&gt;multi-user.target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h1&gt;
  &lt;a href="#licence"&gt;
  &lt;/a&gt;
  Licence
&lt;/h1&gt;

&lt;p&gt;GoDo and GoAPI are both released under the GNU General Public License v3.0.&lt;/p&gt;

</description>
      <category>go</category>
      <category>linux</category>
    </item>
    <item>
      <title>Writing logs into Elastic with NLog , ELK and .Net 5.0 (Part 2)</title>
      <author>Majid Qafouri</author>
      <pubDate>Thu, 12 Aug 2021 18:38:50 +0000</pubDate>
      <link>https://dev.to/majidqafouri/writing-logs-into-elastic-with-nlog-elk-and-net-5-0-part-2-3m43</link>
      <guid>https://dev.to/majidqafouri/writing-logs-into-elastic-with-nlog-elk-and-net-5-0-part-2-3m43</guid>
      <description>&lt;p&gt;In the previous article I demonstrated how we can write our log in our dotnet applications into &lt;code&gt;Elastic&lt;/code&gt; with &lt;code&gt;NLog&lt;/code&gt;, if you haven't read that &lt;a href="https://medium.com/@m.qafouri/writing-logs-into-elastic-with-nlog-elk-and-net-5-0-8d8898d1d50d"&gt;article&lt;/a&gt;,  I highly recommend reading it first.&lt;/p&gt;

&lt;p&gt;After I published the first part, I  received some comments that said, when they try to write logs into Elastic they have faced some problems.&lt;/p&gt;

&lt;p&gt;I checked some of the cases and realized, they have enabled &lt;code&gt;Basic authentication&lt;/code&gt; in &lt;code&gt;Elastic&lt;/code&gt;. So, whenever &lt;code&gt;NLog&lt;/code&gt; tries to write logs into Elastic by calling the endpoint of the Elastic, they get an &lt;code&gt;authentication error&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
OriginalException: Elasticsearch.Net.ElasticsearchClientException: Failed to ping the specified node.. Call: Status code 401 from: HEAD /
---&amp;gt; Elasticsearch.Net.PipelineException: Failed to ping the specified node.
---&amp;gt; Elasticsearch.Net.PipelineException: Could not authenticate with the specified node. Try verifying your credentials or check your Shield configuration.
at Elasticsearch.Net.RequestPipeline.ThrowBadAuthPipelineExceptionWhenNeeded(IApiCallDetails details, IElasticsearchResponse response)
at Elasticsearch.Net.RequestPipeline.Ping(Node node)
-------- End of inner exception stack trace ---
at Elasticsearch.Net.RequestPipeline.Ping(Node node)
at Elasticsearch.Net.Transport`1.Ping(IRequestPipeline pipeline, Node node)
at Elasticsearch.Net.Transport`1.Request[TResponse](HttpMethod method, String path, PostData data, IRequestParameters requestParameters)
-------- End of inner exception stack trace ---
# Audit exception in step 1 PingFailure:
Elasticsearch.Net.PipelineException: Could not authenticate with the specified node. Try verifying your credentials or check your Shield configuration.
at Elasticsearch.Net.RequestPipeline.ThrowBadAuthPipelineExceptionWhenNeeded(IApiCallDetails details, IElasticsearchResponse response)
at Elasticsearch.Net.RequestPipeline.Ping(Node node).

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To solve the problem you should set credentials in your &lt;code&gt;nlog.config&lt;/code&gt; file. so change the &lt;code&gt;nlog.config&lt;/code&gt; file like this.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;requireAuth="true"&lt;/code&gt; &lt;br&gt;
&lt;code&gt;username="*******"&lt;/code&gt;&lt;br&gt;
&lt;code&gt;password="********"&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;After I added these attributes to my target everything was working well. But the other issue reported was the &lt;code&gt;SSL connection&lt;/code&gt; problem. If your Elastic endpoint has SSL, you may also face this error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
Elasticsearch.Net.ElasticsearchClientException: Failed to ping the specified node.. Call: Status code unknown from: HEAD /
--------&amp;gt; Elasticsearch.Net.PipelineException: Failed to ping the specified node.
--------&amp;gt; Elasticsearch.Net.PipelineException: An error occurred trying to write the request data to the specified node.
--------&amp;gt; System.Net.Http.HttpRequestException: The SSL connection could not be established, see inner exception.
--------&amp;gt; System.Security.Authentication.AuthenticationException: The remote certificate is invalid because of errors in the certificate chain: PartialChain
at System.Net.Security.SslStream.SendAuthResetSignal(ProtocolToken message, ExceptionDispatchInfo exception)
at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
at System.Net.Http.ConnectHelper.EstablishSslConnectionAsyncCore(Boolean async, Stream stream, SslClientAuthenticationOptions sslOptions, CancellationToken cancellationToken).

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;One solution to fix this issue is &lt;code&gt;disabling certificate validation&lt;/code&gt; on Elastic endpoint. To achieve this, you need to add another attribute to your &lt;code&gt;Elastic target&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;DisableCertificateValidation="true"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now your Elastic target in &lt;code&gt;nlog.config&lt;/code&gt; file should be something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;
&amp;lt;target xsi:type="ElasticSearch" 
        name="elastic"               
        index="MyService-${date:format=yyyy.MM.dd}" 
        layout ="MyService-|${longdate}|${event-properties:item=EventId_Id}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}" 
        includeAllProperties="true"
        requireAuth="true" 
        username="*******"
        password="*********" 
        uri="https://elasticSampleaddress.com:9200" /&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That all. I hope you find this article is useful, let me know if you have any comment.&lt;/p&gt;

&lt;p&gt;Read &lt;a href="https://dev.to/majidqafouri/writing-logs-into-elastic-with-nlog-elk-and-net-5-0-246c"&gt;Writing logs into Elastic with NLog , ELK and .Net 5.0 (Part 1)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://medium.com/@m.qafouri"&gt;Medium&lt;/a&gt;&lt;/p&gt;

</description>
      <category>elasticsearch</category>
      <category>dotnet</category>
      <category>microservices</category>
      <category>nlog</category>
    </item>
    <item>
      <title>Must know basic Linux commands</title>
      <author>Patrick</author>
      <pubDate>Thu, 12 Aug 2021 18:32:26 +0000</pubDate>
      <link>https://dev.to/patik123/must-know-basic-linux-commands-3e58</link>
      <guid>https://dev.to/patik123/must-know-basic-linux-commands-3e58</guid>
      <description>&lt;p&gt;Linux is an open-source operating system with a huge number of distributions, some of them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu&lt;/li&gt;
&lt;li&gt;Linux Mint&lt;/li&gt;
&lt;li&gt;CentOS&lt;/li&gt;
&lt;li&gt;Fedora&lt;/li&gt;
&lt;li&gt;Debian&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Most of these operating systems have a graphical interface that provides a wealth of features, but the greatest power of Linux comes with the use of a command-line interface (CLI)&lt;/p&gt;

&lt;p&gt;For this reason, it is useful to know some of the most common Linux CLI commands.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#commands-for-working-with-files"&gt;
  &lt;/a&gt;
  Commands for working with files
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#-raw-cd-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;cd&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;Many times, we can change the active directory we are currently working with. This is done with the &lt;code&gt;cd&lt;/code&gt; command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /home/user/folder1
&lt;span class="c"&gt;# Current directory will be /home/user/folder1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-ls-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;ls&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;ls&lt;/code&gt; command is used to display the contents of the current directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;ls&lt;/span&gt;

&lt;span class="c"&gt;# Output example&lt;/span&gt;
Desktop Documents Downloads Music Public
Temp .gitconfig

&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-R&lt;/span&gt; &lt;span class="c"&gt;# list all the files in the sub-directories&lt;/span&gt;
&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-a&lt;/span&gt; &lt;span class="c"&gt;# show hidden files&lt;/span&gt;
&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nt"&gt;-al&lt;/span&gt; &lt;span class="c"&gt;# list all info's about a file (size, owner ...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-pwd-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;pwd&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;The command tells us which is the currently active directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt; &lt;span class="c"&gt;# return the current directory&lt;/span&gt;
&lt;span class="c"&gt;# output example&lt;/span&gt;
/home/user/folder1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-cat-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;cat&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;Perhaps the most commonly used command in Linux, as it allows you to create, combine files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; file &lt;span class="c"&gt;# create file with name file in current directory&lt;/span&gt;
&lt;span class="nb"&gt;cat &lt;/span&gt;file1 file2 &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; file3 &lt;span class="c"&gt;# joins file1 and file2 and create output file3 in current directory&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-cp-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;cp&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;cp&lt;/code&gt; command disables copying a file from the current directory to another.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cp &lt;/span&gt;document.txt /home/user/Documents &lt;span class="c"&gt;# copy document.txt from current directory to folder called Documents&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-mv-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;mv&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;mv&lt;/code&gt; command allows you to move files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mv &lt;/span&gt;document.txt / home / username / Documents &lt;span class="c"&gt;# move document.txt from current directory to folder called Documents&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also rename files with this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mv &lt;/span&gt;oldname.txt newname.txt &lt;span class="c"&gt;# rename file from oldname.txt to newname.txt in the current directory&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-mkdir-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;mkdir&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;This command creates new folders.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;Archive / Documents &lt;span class="c"&gt;# create folder called Documents from current directoy&lt;/span&gt;
&lt;span class="nb"&gt;mkdir&lt;/span&gt; &lt;span class="nt"&gt;-p&lt;/span&gt; Archive / 2021 / Documents &lt;span class="c"&gt;# create folder 2021 between folders Archive and Documents&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-rmdir-endraw-and-raw-rm-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;rmdir&lt;/code&gt; and&lt;code&gt;rm&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;Commands can be used to delete folders.&lt;/p&gt;

&lt;p&gt;With rmdir we can only delete &lt;strong&gt;empty folder&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;With rm, you can delete the entire folder (check before use because it is not possible to restore the deletion).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;rmdir &lt;/span&gt;NotusefulFolder &lt;span class="c"&gt;# remove NotusefullFolder (it is empty) from the current directory&lt;/span&gt;
&lt;span class="nb"&gt;rm &lt;/span&gt;Folders / NotInUse &lt;span class="c"&gt;# remove all files and folders in folder NotInUse from the current directory&lt;/span&gt;

&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-r&lt;/span&gt; NotUsefulFolder &lt;span class="c"&gt;# command equal to rmdir&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-touch-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;touch&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;The command allows you to create new files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;file.txt &lt;span class="c"&gt;# create a file in the current directory&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-find-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;find&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;Used to search for a specific file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;find
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-cat-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;cat&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;This command allows us to print the contents of a file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cat&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-head-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;head&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;Display us the first 10 lines of the file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;head &lt;/span&gt;file.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-tree-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;tree&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;Return filesystem directory tree.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;tree
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#setup-commands"&gt;
  &lt;/a&gt;
  Setup commands
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#-raw-sudo-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;sudo&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;Abbreviation for "SuperUser Do", with this command we can execute commands that require administrative authority.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo&lt;/span&gt; &amp;lt;SOME_ACTION&amp;gt; &lt;span class="c"&gt;# In the next step you must input the password for the root/admin user&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-df-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;df&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;Shows us disk usage in KB and percent.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;df&lt;/span&gt; &lt;span class="c"&gt;# Return disk usage in KB&lt;/span&gt;
&lt;span class="nb"&gt;df&lt;/span&gt; &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="c"&gt;# Return disk usage in MB&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-kill-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;kill&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;The Kill command allows you to stop a specific process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ps &lt;span class="c"&gt;# return list of active processes&lt;/span&gt;

&lt;span class="nb"&gt;kill &lt;/span&gt;11111 &lt;span class="c"&gt;#kill process with PID 11111&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-zip-endraw-and-raw-unzip-endraw-commands"&gt;
  &lt;/a&gt;
  &lt;code&gt;zip&lt;/code&gt; and &lt;code&gt;unzip&lt;/code&gt; commands
&lt;/h3&gt;

&lt;p&gt;They allow us to create compressed zip files and expand zip files.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ping&lt;/code&gt; command &lt;br&gt;
The command is used in most cases when we want to check if a device is active on the network&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ping hashnode.com
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-hostname-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;hostname&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;The command tells us the name of the device&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;hostname&lt;/span&gt; &lt;span class="c"&gt;# return hostname of the device&lt;/span&gt;
&lt;span class="c"&gt;# example output&lt;/span&gt;
server
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-useradd-endraw-and-raw-passwd-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;useradd&lt;/code&gt; and&lt;code&gt;passwd&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;useradd&lt;/code&gt; allows us to create a new user. Passwd allows us to change or set a password.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;useradd NewUserName &lt;span class="c"&gt;# create new user&lt;/span&gt;
userdel UserName &lt;span class="c"&gt;# delete user&lt;/span&gt;

passwd UserName &lt;span class="c"&gt;# can set a password if doesn't exist or change if exists&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-wget-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;wget&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;A very useful command to download files.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wget DownloadFileURL &lt;span class="c"&gt;# download file in current directory&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-free-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;free&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;After giving us the amount of memory used.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;free &lt;span class="nt"&gt;-h&lt;/span&gt; &lt;span class="c"&gt;# return usage of memory - RAM (human-friendly numbers and units)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-shutdown-endraw-and-raw-reboot-endraw-command"&gt;
  &lt;/a&gt;
  &lt;code&gt;shutdown&lt;/code&gt; and&lt;code&gt;reboot&lt;/code&gt; command
&lt;/h3&gt;

&lt;p&gt;Simple commands - the sessions already name what they learn.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;shutdown &lt;span class="c"&gt;# shutdown computer&lt;/span&gt;
reboot &lt;span class="c"&gt;# reboot computer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Maybe if you have read in detail and get to know the Windows terminal, then you have noticed some commands are the same.&lt;/p&gt;

&lt;p&gt;Of course, there are even more of these commands, but I mentioned the most commonly used ones. If I forgot any, and you find it important to use in Linux, mention them in the comments 😊.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>cli</category>
      <category>linuxbasic</category>
      <category>beginners</category>
    </item>
    <item>
      <title>React-Calendar tutorial: Build and customize a simple calendar</title>
      <author>Matt Angelosanto</author>
      <pubDate>Thu, 12 Aug 2021 18:24:27 +0000</pubDate>
      <link>https://dev.to/logrocket/react-calendar-tutorial-build-and-customize-a-simple-calendar-45d0</link>
      <guid>https://dev.to/logrocket/react-calendar-tutorial-build-and-customize-a-simple-calendar-45d0</guid>
      <description>&lt;p&gt;&lt;strong&gt;Written by &lt;a href="https://blog.logrocket.com/author/yoginibende//"&gt;Yogini Bende&lt;/a&gt;&lt;/strong&gt; ✏️&lt;/p&gt;

&lt;p&gt;Most real-world applications include a way to manage and manipulate dates. In such use cases, having a calendar is often the most effective solution.&lt;/p&gt;

&lt;p&gt;In this tutorial, we’ll show you how to create a simple calendar in React using React-Calendar. We’ll cover the following with practical examples:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="#what-react-calendar"&gt;What is React-Calendar?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#creating-react-project"&gt;Creating a React project&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#adding-calendar-with-react-calendar"&gt;Adding a calendar with React-Calendar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#styling-your-calendar"&gt;Styling your calendar&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#selecting-date-range"&gt;Selecting a date range&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="#customizing-react-calendar"&gt;Customizing React-Calendar&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-reactcalendar"&gt;
  &lt;/a&gt;
  What is React-Calendar?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/wojtekmaj/react-calendar"&gt;React-Calendar&lt;/a&gt; is a simple calendar library that provides the ability to pick days, months, years, or even decades. It also supports date range selection and a variety of languages for more complex use cases.&lt;/p&gt;

&lt;p&gt;Because React-Calendar is not dependent on &lt;code&gt;moment.js&lt;/code&gt;, it’s a very flexible and versatile library that you can use in virtually any application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-react-project"&gt;
  &lt;/a&gt;
  Creating a React project
&lt;/h2&gt;

&lt;p&gt;Let’s create a fresh new react project for this tutorial using &lt;a href="https://blog.logrocket.com/getting-started-with-create-react-app-d9314"&gt;Create React App&lt;/a&gt;. Make sure you have &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; ≥v10.16 and npm ≥v5.6 installed on your machine.&lt;/p&gt;

&lt;p&gt;To create a new project, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx create-react-app calendar-example
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, add the React-Calendar library to our project using npm:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;react-calendar
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have a bare-minimum setup. Remove the basic boilerplate code added by Create React App and let’s get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-a-calendar-with-reactcalendar"&gt;
  &lt;/a&gt;
  Adding a calendar with React-Calendar
&lt;/h2&gt;

&lt;p&gt;The first step is to add the calendar to our React app. Import the &lt;code&gt;Calendar&lt;/code&gt; component from &lt;code&gt;react-calendar&lt;/code&gt; and add it to &lt;code&gt;app.js&lt;/code&gt; file. The file will look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.js &lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Calendar&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-calendar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setDate&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;Calendar&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;calendar-container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Calendar&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Selected&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt;{' '&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toDateString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we added a &lt;code&gt;Calendar&lt;/code&gt; component to our &lt;code&gt;app.js&lt;/code&gt; file and added two properties to it. We created a state to store a date and passed the current date as its initial value using JavaScript’s &lt;code&gt;Date&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;With this basic structure ready, our initial calendar will look similar to this:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hgOzu3mW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/basic-react-calendar.png" alt="Calendar With Dates On A Rectangular Grid In Black, White, And Grey"&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Basic React Calendar.&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;If you check the code of the &lt;code&gt;app.js&lt;/code&gt; file, we created a state named &lt;code&gt;date&lt;/code&gt; and passed it as a value to the &lt;code&gt;Calendar&lt;/code&gt; component. Another prop, &lt;code&gt;onChange&lt;/code&gt;, is passed to &lt;code&gt;Calendar&lt;/code&gt;, which sets the &lt;code&gt;date&lt;/code&gt; state to the value clicked by the user.&lt;/p&gt;

&lt;p&gt;The initial value passed to the calendar is the present date. When a user clicks the calendar, its value will be set to the user’s selection. For this application, we are printing the date value below our calendar.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#styling-your-calendar"&gt;
  &lt;/a&gt;
  Styling your calendar
&lt;/h2&gt;

&lt;p&gt;We’re done with the very basic calendar implementation. But as you can see, the styling is not yet applied to the calendar, so it looks pretty boring.&lt;/p&gt;

&lt;p&gt;React-Calendar provides some default styling, which you can apply by importing its stylesheet. To do this, add the following line to your &lt;code&gt;app.js&lt;/code&gt; file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;import 'react-calendar/dist/Calendar.css';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After applying the styling, calendar will look like this&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D4TeHEvF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/default-styling-react-calendar.png" alt="Calendar With Dates On A Square Grid In Black And White"&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;React Calendar with default styling.&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;If you want to add your own styling, you can override these classes and add your custom CSS properties.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#selecting-a-date-range"&gt;
  &lt;/a&gt;
  Selecting a date range
&lt;/h2&gt;

&lt;p&gt;Consider a use case where you need to provide some data between a custom date range. The user selects their desired date range, which you can take and then do the rest of the operations. React-Calendar supports this feature very effectively.&lt;/p&gt;

&lt;p&gt;Let’s take this use case and improve our application to select the date range. We will print the start and end of the range at the bottom of the calendar.&lt;/p&gt;

&lt;p&gt;The modified &lt;code&gt;app.js&lt;/code&gt; will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Calendar&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-calendar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-calendar/dist/Calendar.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setDate&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;Calendar&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;Range&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;calendar-container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Calendar&lt;/span&gt;
          &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nx"&gt;selectRange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt;{' '&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;toDateString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="o"&gt;|&amp;amp;&lt;/span&gt;&lt;span class="nx"&gt;nbsp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;End&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt; {date&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt;1&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;.toDateString&lt;/span&gt;&lt;span class="se"&gt;()&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;bold&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Default&lt;/span&gt; &lt;span class="nx"&gt;selected&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt;{' '&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toDateString&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To enable date range feature, we pass &lt;code&gt;selectRange&lt;/code&gt; prop to our &lt;code&gt;Calendar&lt;/code&gt; component. The default value of &lt;code&gt;selectRange&lt;/code&gt; is false. After enabling this prop, React-Calendar returns an array with two dates: the start date and end date. The selected range is highlighted to make the user understand the selection.&lt;/p&gt;

&lt;p&gt;After adding a date range, the calendar component will look like this:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BkOdEOEH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/date-range-react-calendar.png" alt="Calendar With A Range Of Dates Highlighted In Blue"&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;React Calendar with selected date range.&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#customizing-reactcalendar"&gt;
  &lt;/a&gt;
  Customizing React-Calendar
&lt;/h2&gt;

&lt;p&gt;Now that we have a handle on the most useful functionalities of React-Calendar, let’s dive a little deeper and explore the ways you can customize your calendar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;defaultValue&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;defaultValue&lt;/code&gt; prop enables you to set a default selected value. This prop also supports the default date range selection. If you want to select a single date, you can pass a date object. Otherwise, you can pass an array containing start and end date values.&lt;/p&gt;

&lt;p&gt;You can add &lt;code&gt;defaultValue&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// App.js&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setDate&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;Calendar&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;Range&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;calendar-container&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Calendar&lt;/span&gt;
          &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nx"&gt;selectRange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nx"&gt;defaultValue&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;                                                     
        &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;code&gt;defaultView&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This prop is used to set the date view of the calendar. By default, it is set to month. So if this prop is missing, the calendar shows you a month view.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;defaultView&lt;/code&gt; provides four options: month, year, decade and century. Even if this prop is set to some value, you can still navigate between different dates/months.&lt;/p&gt;

&lt;p&gt;Here’s how to implement &lt;code&gt;defaultView&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Calendar component&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Calendar&lt;/span&gt;
  &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;selectRange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;defaultView&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;decade&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;                                                    
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This prop will change the initial rendering of the calendar, making it look something like this:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VcQGCqsD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/decade-view-react-calendar.png" alt="Calendar Showing Years 2021 through 2030"&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;React Calendar with a decade view.&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;maxDate&lt;/code&gt; and &lt;code&gt;minDate&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you don’t want the user to select a date after a certain day, you can prevent this action by adding a &lt;code&gt;maxDate&lt;/code&gt; prop to your calendar. As you can probably guess, the &lt;code&gt;minDate&lt;/code&gt; prop sets a limit on how early a start date the user is allowed to select.&lt;/p&gt;

&lt;p&gt;If the date range is enabled for the app, the user might be able to select the date that is later than the &lt;code&gt;maxDate&lt;/code&gt; or earlier than the &lt;code&gt;minDate&lt;/code&gt;. React-Calendar prevents this by passing the &lt;code&gt;maxDate&lt;/code&gt; or &lt;code&gt;minDate&lt;/code&gt; value only and nothing beyond that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// calendar component&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Calendar&lt;/span&gt;
  &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;maxDate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt; &lt;span class="c1"&gt;// will not allow date later than today&lt;/span&gt;
  &lt;span class="nx"&gt;minDate&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="c1"&gt;// will not allow date before 1st July 2015&lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;code&gt;maxDetail&lt;/code&gt; and &lt;code&gt;minDetail&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;maxDetail&lt;/code&gt; and &lt;code&gt;minDetail&lt;/code&gt; props are important for restricting the granularity of the calendar. &lt;code&gt;maxDetail&lt;/code&gt; defines the maximum amount of details the user can see. If the &lt;code&gt;maxDetail&lt;/code&gt; value is set to &lt;strong&gt;year&lt;/strong&gt;, the user can see details of a year in the calendar at a time.&lt;/p&gt;

&lt;p&gt;Similarly, if &lt;code&gt;minDetail&lt;/code&gt; is set to year, the user will not be able to see details beyond a given year.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// calendar component&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Calendar&lt;/span&gt;
  &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;maxDetail&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Below is an example of &lt;code&gt;maxDetail&lt;/code&gt; and &lt;code&gt;minDetail&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_vcGjhjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/max-min-detail-react-calendar.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_vcGjhjI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2021/08/max-min-detail-react-calendar.png" alt="Max Detail Calendar Showing The Months In A Year And Min Detail Calendar Showing The Days In A Month"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Next&lt;/code&gt; and &lt;code&gt;Prev&lt;/code&gt; labels&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Next&lt;/code&gt; and &lt;code&gt;Prev&lt;/code&gt; labels enable you to define the names of the buttons used to navigate between views in the calendar. You can also make this accessible using the &lt;code&gt;aria-label&lt;/code&gt; attributes.&lt;/p&gt;

&lt;p&gt;The props used to change the next values are &lt;code&gt;nextLabel&lt;/code&gt;, &lt;code&gt;nextAriaLabel&lt;/code&gt;, &lt;code&gt;next2Label&lt;/code&gt;, and &lt;code&gt;next2AriaLabel&lt;/code&gt;. You can add any string to this or you can set it to &lt;code&gt;null&lt;/code&gt; if you want to disable this navigation.&lt;/p&gt;

&lt;p&gt;These properties are similar for prev buttons except that prev is a prefix — e.g., &lt;code&gt;prevLabel&lt;/code&gt;, &lt;code&gt;prevAriaLabel&lt;/code&gt;, &lt;code&gt;prev2Label&lt;/code&gt;, &lt;code&gt;prev2AriaLabel&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;After adding the &lt;code&gt;Next&lt;/code&gt; and &lt;code&gt;Prev&lt;/code&gt; labels, the code will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// calendar component&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Calendar&lt;/span&gt;
  &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;setDate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;nextLabel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;month&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="nx"&gt;nextAriaLabel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Go to next month&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="nx"&gt;next2Label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;year&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="nx"&gt;next2AriaLabel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Go to next year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="nx"&gt;prevLabel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;&amp;lt;month&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="nx"&gt;prevAriaLabel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Go to prev month&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="nx"&gt;prev2Label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;lt;&amp;lt;year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="nx"&gt;prev2AriaLabel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Go to prev year&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;React-Calendar is a wonderful library that provides a lot of flexibility in its implementation. It is highly customizable and dependent on the native JavaScript &lt;code&gt;Date&lt;/code&gt; object, which makes React-Calendar easy to implement in any application.&lt;/p&gt;

&lt;p&gt;Head to the official documentation for some &lt;a href="https://github.com/wojtekmaj/react-calendar/wiki/Recipes"&gt;complex examples and use cases for React-Calendar&lt;/a&gt;. I hope this tutorial leaves you with the foundational knowledge you need to implement and customize React-Calendar to suit your app and its audience.&lt;/p&gt;

&lt;p&gt;If you have any questions about using React-Calendar, feel free to ask them in the comment below.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#full-visibility-into-production-react-apps"&gt;
  &lt;/a&gt;
  Full visibility into production React apps
&lt;/h2&gt;

&lt;p&gt;Debugging React applications can be difficult, especially when users experience issues that are hard to reproduce. If you’re interested in monitoring and tracking Redux state, automatically surfacing JavaScript errors, and tracking slow network requests and component load time, &lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;try LogRocket&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ceXkt4H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6v4gw3tgq2topvafgpgz.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8FGBNR-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blog.logrocket.com/wp-content/uploads/2017/03/1d0cd-1s_rmyo6nbrasp-xtvbaxfg.png" alt="LogRocket Dashboard Free Trial Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;LogRocket&lt;/a&gt; is like a DVR for web apps, recording literally everything that happens on your React app. Instead of guessing why problems happen, you can aggregate and report on what state your application was in when an issue occurred. LogRocket also monitors your app's performance, reporting with metrics like client CPU load, client memory usage, and more.&lt;/p&gt;

&lt;p&gt;The LogRocket Redux middleware package adds an extra layer of visibility into your user sessions. LogRocket logs all actions and state from your Redux stores.&lt;/p&gt;

&lt;p&gt;Modernize how you debug your React apps — &lt;a href="https://www2.logrocket.com/react-performance-monitoring"&gt;start monitoring for free&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>JavaScript Handbook announcement!</title>
      <author>kapeel kokane</author>
      <pubDate>Thu, 12 Aug 2021 18:01:29 +0000</pubDate>
      <link>https://dev.to/comscience/javascript-handbook-announcement-lj6</link>
      <guid>https://dev.to/comscience/javascript-handbook-announcement-lj6</guid>
      <description>&lt;p&gt;Hey There 👋🏾&lt;/p&gt;

&lt;p&gt;Announcing that my &lt;strong&gt;JavaScript Handbook&lt;/strong&gt; is ready for release!&lt;/p&gt;

&lt;p&gt;Here's the announcement tweet:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fIDn7-Kg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E8m46K0VEAEWDl0.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCoQBxER--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1372919009939652612/E9s309tH_normal.jpg" alt="Kapeel 💙 Typescript profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Kapeel 💙 Typescript
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @kokaneka
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      The cover page for my upcoming JS book (created using &lt;a href="https://twitter.com/excalidraw"&gt;@excalidraw&lt;/a&gt;) is ready!&lt;br&gt;&lt;br&gt;Releasing soon! 🙌🏾&lt;br&gt;&lt;br&gt;Thanks for such an amazing tool &lt;a href="https://twitter.com/Vjeux"&gt;@Vjeux&lt;/a&gt; !&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/CodeNewbies"&gt;#CodeNewbies&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:39 PM - 12 Aug 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1425874661473079298" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1425874661473079298" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1425874661473079298" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Share with others &amp;amp; Follow me on twitter to get more updates!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>books</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>#100daysofcode [Day - 02]</title>
      <author>Al Siam</author>
      <pubDate>Thu, 12 Aug 2021 17:52:34 +0000</pubDate>
      <link>https://dev.to/alsiamworld/100daysofcode-day-02-174a</link>
      <guid>https://dev.to/alsiamworld/100daysofcode-day-02-174a</guid>
      <description>&lt;h1&gt;
  &lt;a href="#100daysofcode-day-02"&gt;
  &lt;/a&gt;
  100daysofcode [Day - 02]
&lt;/h1&gt;

&lt;p&gt;Today I've solved some small problems.&lt;br&gt;
01 Getting Leap-year,&lt;br&gt;
02 Find the Biggest Number from an Array,&lt;br&gt;
03 Remove the Duplicate Name or Numbers,&lt;br&gt;
04 Getting the Factorial numbers&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HFzRQ0ab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fipnpdbx9hw17bf8k7qg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HFzRQ0ab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fipnpdbx9hw17bf8k7qg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5uD1rHCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bn0b9bkx4hmmys6immgf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5uD1rHCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bn0b9bkx4hmmys6immgf.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S8kJfe9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhhgcobzrrnqzfnbvn7g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S8kJfe9o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jhhgcobzrrnqzfnbvn7g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DiyW5agb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/npsamynhsq1caczyqxye.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DiyW5agb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/npsamynhsq1caczyqxye.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#coding-javascript-webdevelopment"&gt;
  &lt;/a&gt;
  coding #javascript #webdevelopment
&lt;/h1&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Deploying CI/CD For NodeJS Serverless Applications Workshop: Part IV</title>
      <author>Salah Elhossiny</author>
      <pubDate>Thu, 12 Aug 2021 17:10:20 +0000</pubDate>
      <link>https://dev.to/aws-builders/deploying-ci-cd-for-nodejs-serverless-applications-workshop-part-iv-31b</link>
      <guid>https://dev.to/aws-builders/deploying-ci-cd-for-nodejs-serverless-applications-workshop-part-iv-31b</guid>
      <description>&lt;h1&gt;
  &lt;a href="#build-the-pipeline"&gt;
  &lt;/a&gt;
  BUILD THE PIPELINE
&lt;/h1&gt;

&lt;p&gt;In this part you are going to learn how to automate the build, package and deploy commands by creating a continous delivery pipeline using AWS Code Pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eenhAJ-W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iq5tydphpccdx6bv8fp1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eenhAJ-W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iq5tydphpccdx6bv8fp1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The services used are in this part: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CodeCommit&lt;/li&gt;
&lt;li&gt;CodeBuild&lt;/li&gt;
&lt;li&gt;CodePipeline&lt;/li&gt;
&lt;li&gt;CloudFormation&lt;/li&gt;
&lt;li&gt;AWS CDK &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#create-a-git-repository"&gt;
  &lt;/a&gt;
  CREATE A GIT REPOSITORY
&lt;/h2&gt;

&lt;p&gt;Any CI/CD pipeline starts with a code repository. &lt;/p&gt;

&lt;p&gt;In this workshop we use AWS CodeCommit for ease of integration, but you could use other source code integrations, like GitHub for example.&lt;/p&gt;

&lt;p&gt;Run the following command from your terminal to create a new CodeCommit repository:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;aws codecommit create-repository &lt;span class="nt"&gt;--repository-name&lt;/span&gt; sam-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see the following output. Copy the value of cloneUrlHttp, you will need it later.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6JpgE-49--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kqqi4nhh0jiv0y7g7i8d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6JpgE-49--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kqqi4nhh0jiv0y7g7i8d.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-credentials"&gt;
  &lt;/a&gt;
  CONFIGURE CREDENTIALS
&lt;/h2&gt;

&lt;p&gt;One of the cool things about CodeCommit is the support for IAM authentication. And if you are running this workshop from a Cloud9 workspace, you can leverage the fact that your terminal is already pre-authenticated with valid AWS credentials.&lt;/p&gt;

&lt;p&gt;Configure the git client with username and email, so your commits have an author defined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Replace with your name"&lt;/span&gt;
~ git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &lt;span class="s2"&gt;"replace_with_your_email@example.com"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#push-the-code"&gt;
  &lt;/a&gt;
  PUSH THE CODE
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#ignore-the-build-artifacts"&gt;
  &lt;/a&gt;
  Ignore the build artifacts
&lt;/h3&gt;

&lt;p&gt;Copy/paste the following lines at the end of the sam-app/.gitgnore file. &lt;/p&gt;

&lt;p&gt;There is no need to track the .aws-sam directory or the packaged.yaml under version control as they are re-generated on every build.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.aws-sam/
packaged.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the root directory of your sam-app project, run the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/environment/sam-app
~ git init
~ git add &lt;span class="nb"&gt;.&lt;/span&gt;
~ git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Initial commit"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#push-the-code"&gt;
  &lt;/a&gt;
  Push the code
&lt;/h3&gt;

&lt;p&gt;Add your CodeCommit repository URL as a remote on your local git project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ git remote add origin codecommit://sam-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, push the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~ git push &lt;span class="nt"&gt;-u&lt;/span&gt; origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#verify-in-codecommit"&gt;
  &lt;/a&gt;
  Verify in CodeCommit
&lt;/h3&gt;

&lt;p&gt;Navigate to the AWS CodeCommit console, find your sam-app repository and click on it to view its contents. &lt;/p&gt;

&lt;p&gt;Make sure your code is there. You should see a screen like the following: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o1dC8_by--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jprcw6vudgsa7z3epl5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o1dC8_by--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jprcw6vudgsa7z3epl5x.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-build-a-pipeline"&gt;
  &lt;/a&gt;
  HOW TO BUILD A PIPELINE
&lt;/h2&gt;

&lt;p&gt;The best way to automate the creation of CI/CD pipelines is by provisioning them programmatically via Infrastructure as Code. &lt;/p&gt;

&lt;p&gt;This is specially useful in a microservices environment, where you have a pipeline per microservice, which potentially means dozens of pipelines, if not more. &lt;/p&gt;

&lt;p&gt;Having an automated way to create these pipelines enables developers to create as many as necessary without building them manually from the console every time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#different-ways-to-create-pipelines"&gt;
  &lt;/a&gt;
  Different ways to create pipelines
&lt;/h2&gt;

&lt;p&gt;Different mechanisms are used for creating pipelines programmatically. Nowadays developers have many choices to pick from, but the most common ones we see are the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AWS CloudFormation&lt;/li&gt;
&lt;li&gt;AWS CDK&lt;/li&gt;
&lt;li&gt;Terraform&lt;/li&gt;
&lt;li&gt;AWS Serverless App Repository&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#introducing-the-aws-cdk"&gt;
  &lt;/a&gt;
  Introducing the AWS CDK
&lt;/h3&gt;

&lt;p&gt;In this workshop, we are going to use the AWS Cloud Development Kit (also known as CDK), as the pipeline vending mechanism. &lt;/p&gt;

&lt;p&gt;The AWS CDK is a software development framework for defining cloud infrastructure in code and provisioning it through AWS CloudFormation.&lt;/p&gt;

&lt;p&gt;That’s right! You can describe your infrastructure by writing code in TypeScript, C#, Python or Java. &lt;/p&gt;

&lt;p&gt;Your code is then synthesized into CloudFormation and using the CDK CLI you can deploy it to an AWS account.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-sam-and-cdk-play-together"&gt;
  &lt;/a&gt;
  How do SAM and CDK play together?
&lt;/h3&gt;

&lt;p&gt;Serverless developers use the SAM framework to define their applications, SAM CLI to build them and deploy them and AWS CDK to provision any infrastructure related resources, like their CI/CD Pipeline. &lt;/p&gt;

&lt;p&gt;The nice thing about these tools is that they all share a common ground: CloudFormation.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup-a-cdk-project"&gt;
  &lt;/a&gt;
  SETUP A CDK PROJECT
&lt;/h2&gt;

&lt;p&gt;Now, let’s create a folder within our sam-app directory where the pipeline code will reside.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; ~ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/environment/sam-app
 ~ &lt;span class="nb"&gt;mkdir &lt;/span&gt;pipeline
 ~ &lt;span class="nb"&gt;cd &lt;/span&gt;pipeline
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Initialize a new CDK project within the pipeline folder by running the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;cdk init &lt;span class="nt"&gt;--language&lt;/span&gt; typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now install the CDK modules that we will be using to build a pipeline:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save&lt;/span&gt; @aws-cdk/aws-codedeploy @aws-cdk/aws-codebuild
npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save&lt;/span&gt; @aws-cdk/aws-codecommit @aws-cdk/aws-codepipeline-actions
npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save&lt;/span&gt; @aws-cdk/aws-s3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#project-structure"&gt;
  &lt;/a&gt;
  Project structure
&lt;/h3&gt;

&lt;p&gt;At this point, your project should have the structure below (only the most relevant files and folders are shown). &lt;/p&gt;

&lt;p&gt;Within the CDK project, the main file you will be interacting with is the pipeline-stack.ts. Don’t worry about the rest of the files for now.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sam-app                         # SAM application root
├── hello-world                 # Lambda code
├── samconfig.toml              # Config file for manual deployments
├── template.yaml               # SAM template
└── pipeline                    # CDK project root
    └── lib
        └── pipeline-stack.ts   # Pipeline definition
    └── bin
        └── pipeline.ts         # Entry point for CDK project
    ├── cdk.json
    ├── tsconfig.json
    ├── package.json
    └── jest.config.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#pipeline-as-code"&gt;
  &lt;/a&gt;
  PIPELINE AS CODE
&lt;/h3&gt;

&lt;p&gt;Open the file lib/pipeline-stack.ts in your Cloud9 workspace. It is empty at the moment, but here is where you will be adding code to build your CI/CD pipeline.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i3Pun8wF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o861v08ju83nyw78oc72.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3Pun8wF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o861v08ju83nyw78oc72.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#build-the-cdk-project"&gt;
  &lt;/a&gt;
  Build the CDK project
&lt;/h4&gt;

&lt;p&gt;Even though we haven’t wrote any code yet, let’s get familiar with how to build and deploy a CDK project, as you will be doing it multiple times in this workshop and you should get comfortable with the process. Start by building the project with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/environment/sam-app/pipeline
npm run build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#deploy-a-cdk-project"&gt;
  &lt;/a&gt;
  Deploy a CDK project
&lt;/h4&gt;

&lt;p&gt;After the build has finished, go ahead and deploy the pipeline project by using the CDK CLI:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The output should look like the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--569sf_XQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl9l2gv8gfdg1a0bqi3n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--569sf_XQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sl9l2gv8gfdg1a0bqi3n.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A new CloudFormation stack was created in your account, but because your CDK project is empty, the only resource that was created was an AWS::CDK::Metadata.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#artifacts-bucket"&gt;
  &lt;/a&gt;
  ARTIFACTS BUCKET
&lt;/h3&gt;

&lt;p&gt;Every Code Pipeline needs an artifacts bucket, also known as Artifact Store. CodePipeline will use this bucket to pass artifacts to the downstream jobs and its also where SAM will upload the artifacts during the build process.&lt;/p&gt;

&lt;p&gt;Let’s get started and write the code for creating this bucket:&lt;/p&gt;

&lt;p&gt;Make sure you are editing the pipeline-stack file with .ts extension&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// lib/pipeline-stack.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-s3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;codecommit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-codecommit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;codepipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-codepipeline&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;codepipeline_actions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-codepipeline-actions&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;codebuild&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@aws-cdk/aws-codebuild&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;PipelineStack&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// The code that defines your stack goes here&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;artifactsBucket&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Bucket&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ArtifactsBucket&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Easy right? Now build and deploy the project like you did it earlier:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run build
cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt; Note &lt;/b&gt; &lt;/p&gt;

&lt;p&gt;If you get a build error, check that all the @aws-cdk dependencies in the package.json file have the same version number, if not, fix it, delete the node_modules folder and run npm install.&lt;/p&gt;

&lt;p&gt;The output will show that the S3 bucket got created:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZjB3u1vz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mldpb3y4euvnh9a6oze.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZjB3u1vz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9mldpb3y4euvnh9a6oze.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#source-stage"&gt;
  &lt;/a&gt;
  SOURCE STAGE
&lt;/h3&gt;

&lt;p&gt;The Source Stage is the first step of any CI/CD pipeline and it represents your source code. This stage is in charge of triggering the pipeline based on new code changes (i.e. git push or pull requests). In this workshop, we will be using AWS CodeCommit as the source provider, but CodePipeline also supports S3, GitHub and Amazon ECR as source providers.&lt;/p&gt;

&lt;p&gt;Append the following code snippet after your bucket definition in the pipeline-stack.ts file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Import existing CodeCommit sam-app repository&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;codeRepo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;codecommit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Repository&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromRepositoryName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;AppRepository&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Logical name within CloudFormation&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sam-app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// Repository name&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Pipeline creation starts&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pipeline&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Pipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Pipeline&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;artifactBucket&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;artifactsBucket&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Declare source code as an artifact&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sourceOutput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Artifact&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Add source stage to pipeline&lt;/span&gt;
&lt;span class="nx"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addStage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;stageName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Source&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CodeCommitSourceAction&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;actionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CodeCommit_Source&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;repository&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;codeRepo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;output&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sourceOutput&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice how we define an object sourceOutput as a pipeline artifact; this is necessary for any files that you want CodePipeline to pass to downstream stages. &lt;/p&gt;

&lt;p&gt;In this case, we want our source code to be passed to the Build stage.&lt;/p&gt;

&lt;p&gt;&lt;b&gt; Info &lt;/b&gt;  &lt;/p&gt;

&lt;p&gt;Don’t do a cdk deploy just yet, because a pipeline needs to have at least 2 stages to be created. Lets continue to the next page to add a Build stage first.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build-stage"&gt;
  &lt;/a&gt;
  BUILD STAGE
&lt;/h3&gt;

&lt;p&gt;The Build Stage is where your Serverless application gets built and packaged by SAM. We are going to use AWS CodeBuild as the Build provider for our pipeline. &lt;/p&gt;

&lt;p&gt;It is worth mentioning that CodePipeline also supports other providers like Jenkins, TeamCity or CloudBees.&lt;/p&gt;

&lt;p&gt;AWS CodeBuild is a great option because you only pay for the time where your build is running, which makes it very cost effective compared to running a dedicated build server 24 hours a day when you really only build during office hours. &lt;/p&gt;

&lt;p&gt;It is also container-based which means that you can bring your own Docker container image where your build runs, or use a managed image provided by CodeBuild.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#add-the-build-stage"&gt;
  &lt;/a&gt;
  Add the build stage
&lt;/h4&gt;

&lt;p&gt;Let’s go ahead and add a Build stage to you pipeline-stack.ts:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// Declare build output as artifacts&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buildOutput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Artifact&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// Declare a new CodeBuild project&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;buildProject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codebuild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PipelineProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Build&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;buildImage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;codebuild&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;LinuxBuildImage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AMAZON_LINUX_2_2&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;environmentVariables&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;PACKAGE_BUCKET&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;artifactsBucket&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bucketName&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="c1"&gt;// Add the build stage to our pipeline&lt;/span&gt;
&lt;span class="nx"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addStage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;stageName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Build&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CodeBuildAction&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;actionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Build&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;project&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;buildProject&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sourceOutput&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;outputs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;buildOutput&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#deploy-the-pipeline"&gt;
  &lt;/a&gt;
  Deploy the pipeline
&lt;/h4&gt;

&lt;p&gt;From your terminal, run the following commands to deploy the pipeline:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run build
cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#verify-pipeline-creation"&gt;
  &lt;/a&gt;
  Verify pipeline creation
&lt;/h4&gt;

&lt;p&gt;Navigate to the AWS CodePipeline Console and click on your newly created pipeline!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1_sWXgZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jniy880thoacbtj0x86z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1_sWXgZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jniy880thoacbtj0x86z.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Build step should have failed. Don’t worry! this is expected because we haven’t specified what commands to run during the build yet, so AWS CodeBuild doesn’t know how to build our Serverless application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P-HxVhCO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2guqcsxt2mz1o4ck24go.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P-HxVhCO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2guqcsxt2mz1o4ck24go.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let's fix it! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#buildspec-file"&gt;
  &lt;/a&gt;
  BUILDSPEC FILE
&lt;/h3&gt;

&lt;p&gt;A Buildspec File is a series of commands in YAML format that CodeBuild executes to build your application. &lt;/p&gt;

&lt;p&gt;This file is placed in the root folder of a SAM application and CodeBuild will automatically find it and run it during build time.&lt;/p&gt;

&lt;p&gt;In the root folder of app, create file named "buildspec.yml" and paste the following in it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ~/environment/sam-app/buildspec.yml&lt;/span&gt;

&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;
&lt;span class="na"&gt;phases&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;install&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;runtime-versions&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;nodejs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12&lt;/span&gt;
    &lt;span class="na"&gt;commands&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Install packages or any pre-reqs in this phase.&lt;/span&gt;
      &lt;span class="c1"&gt;# Upgrading SAM CLI to latest version&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;pip3 install --upgrade aws-sam-cli&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;sam --version&lt;/span&gt;
      &lt;span class="c1"&gt;# Installing project dependencies&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;cd hello-world&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;npm install&lt;/span&gt;

  &lt;span class="na"&gt;pre_build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;commands&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Run tests, lint scripts or any other pre-build checks.&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;npm run test&lt;/span&gt;

  &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;commands&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Use Build phase to build your artifacts (compile, etc.)&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;cd ..&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;sam build&lt;/span&gt;

  &lt;span class="na"&gt;post_build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;commands&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="c1"&gt;# Use Post-Build for notifications, git tags, upload artifacts to S3&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;sam package --s3-bucket $PACKAGE_BUCKET --output-template-file packaged.yaml&lt;/span&gt;

&lt;span class="na"&gt;artifacts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;discard-paths&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;yes&lt;/span&gt;
  &lt;span class="na"&gt;files&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# List of local artifacts that will be passed down the pipeline&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;packaged.yaml&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Take a moment to understand the structure of the file and feel free to read the Buildsec Reference here: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html"&gt;https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Commit your changes and push them to the repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/environment/sam-app
git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"Added buildspec.yml"&lt;/span&gt;
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Navigate to your CodePipeline again, and wait for it to trigger automatically. This time the build will succeed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WFGDa2aL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mm54fo2lj0iz1780a6vd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WFGDa2aL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mm54fo2lj0iz1780a6vd.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deploy-stage"&gt;
  &lt;/a&gt;
  DEPLOY STAGE
&lt;/h3&gt;

&lt;p&gt;The Deploy Stage is where your SAM application and all its resources are created an in an AWS account. &lt;/p&gt;

&lt;p&gt;The most common way to do this is by using CloudFormation ChangeSets to deploy. This means that this stage will have 2 actions: the CreateChangeSet and the ExecuteChangeSet.&lt;/p&gt;

&lt;p&gt;Add the Deploy stage to your pipeline-stack.ts:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Deploy stage&lt;/span&gt;
&lt;span class="nx"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addStage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;stageName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Dev&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CloudFormationCreateReplaceChangeSetAction&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;actionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CreateChangeSet&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;templatePath&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;buildOutput&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;atPath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;packaged.yaml&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;stackName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sam-app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;adminPermissions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;changeSetName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sam-app-dev-changeset&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;runOrder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;codepipeline_actions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;CloudFormationExecuteChangeSetAction&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;actionName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Deploy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;stackName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sam-app&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;changeSetName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sam-app-dev-changeset&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;runOrder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deploy-the-pipeline"&gt;
  &lt;/a&gt;
  Deploy the pipeline
&lt;/h3&gt;

&lt;p&gt;On your terminal, run the following commands from within the pipeline directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/environment/sam-app/pipeline
npm run build
cdk deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Navigate to your pipeline and you will see the Deploy stage has been added, however, it is currently grayed out because it hasn’t been triggered. Let’s just trigger a new run of the pipeline manually by clicking the Release Change buttton.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YzqnFQrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eaqfpw7z3kv096jui75n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YzqnFQrL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eaqfpw7z3kv096jui75n.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the terminal, run the following commands from the root directory of your sam-app project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git add &lt;span class="nb"&gt;.&lt;/span&gt;
git commit &lt;span class="nt"&gt;-m&lt;/span&gt; &lt;span class="s2"&gt;"CI/CD Pipeline definition"&lt;/span&gt;
git push
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt; Congratulations! You have created a CI/CD pipeline for a Serverless application! &lt;/b&gt; &lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloudskills</category>
      <category>node</category>
    </item>
    <item>
      <title>Add GitHub SSH-Key</title>
      <author>M. Akbar Nugroho</author>
      <pubDate>Thu, 12 Aug 2021 17:03:09 +0000</pubDate>
      <link>https://dev.to/thexdev/add-github-ssh-key-19pe</link>
      <guid>https://dev.to/thexdev/add-github-ssh-key-19pe</guid>
      <description>&lt;p&gt;GitHub is my favorite cloud repository and I've used it for a long time. It allows use to collaborate with other developers and also integrates our project with awesome tools like Travis CI, Heroku, etc to make our project easy to manage and deploy.&lt;/p&gt;

&lt;p&gt;To connect with GitHub and doing some actions like &lt;code&gt;push&lt;/code&gt; and &lt;code&gt;pull&lt;/code&gt;, we have two options. Via HTTPS and SSH.&lt;/p&gt;

&lt;p&gt;HTTPS using HTTP protocol to transfer changes to GitHub and requires us to input our username and password every time we do those actions.&lt;/p&gt;

&lt;p&gt;While SSH using SSH protocol to transfer changes to GitHub and requires us to input our passphrase (if your provide it) and it more secure.&lt;/p&gt;

&lt;p&gt;This article will guide you to add SSH-Key on your GitHub account. Let's try it out!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;SSH agent (installed on your computer)&lt;/li&gt;
&lt;li&gt;GitHub account (&lt;a href="https://github.com/signup"&gt;sign-up here&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE&lt;br&gt;
In this article I use Ubuntu 20.04 and I will not cover about how to install SSH agent if you are using Windows. You can search it on google and back here again.&lt;/p&gt;

&lt;p&gt;If you are using Linux or Mac OS, then you're all set because they have SSH installed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-generate-sshkey"&gt;
  &lt;/a&gt;
  1. Generate SSH-Key
&lt;/h3&gt;

&lt;p&gt;Open your terminal and type command below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh-keygen &lt;span class="nt"&gt;-t&lt;/span&gt; ed25519 &lt;span class="nt"&gt;-C&lt;/span&gt; &lt;span class="s2"&gt;"your_email@example.com"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will asked where you want to put your key. If you not sure, just leave it and enter.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Enter file in which to save the key (/home/you/.ssh/id_rsa):
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;NOTE:&lt;br&gt;
If you already have any SSH-Key with same name, it will override the old SSH-Key.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After that, you will asked about passphrase. Passphrase is like password. It will prompt you to input your passphrase whenever you want to connect with another host.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Enter passphrase (empty for no passphrase): [Type a passphrase]
Enter same passphrase again: [Type passphrase again]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy our public key. You can use tools like &lt;code&gt;xclip&lt;/code&gt;. You can also use &lt;code&gt;cat&lt;/code&gt; command and copy the key manually.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cat&lt;/span&gt; /home/you/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-login-to-github-and-go-to-settings"&gt;
  &lt;/a&gt;
  2. Login to GitHub and go to settings
&lt;/h3&gt;

&lt;p&gt;Login to your GitHub account. You will see your profile photo at the right top corner. Click it and go to settings.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--62H54jml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zatahzirqabzj34teg1r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--62H54jml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zatahzirqabzj34teg1r.png" alt="Go to settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-go-to-ssh-and-gpg-keys-setting"&gt;
  &lt;/a&gt;
  3. Go to SSH and GPG keys setting
&lt;/h3&gt;

&lt;p&gt;On left menu, click SSH and GPG keys.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JHjFw0Yv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gh3fn881jgtbnn52cc9r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JHjFw0Yv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gh3fn881jgtbnn52cc9r.png" alt="Go to SSH and GPG keys setting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-add-new-sshkey"&gt;
  &lt;/a&gt;
  4. Add new SSH-Key
&lt;/h3&gt;

&lt;p&gt;On this page you will see all of your SSH-Keys. To add new one, click the &lt;code&gt;New SSH key&lt;/code&gt; button.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MQ0wWcal--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mj63a41bad3hymtc2it.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MQ0wWcal--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5mj63a41bad3hymtc2it.png" alt="Add new ssh key"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fill the title and key. Remember to copy the public key on your local computer. Not the private key.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AdAmeqbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdpqawe22jdkxygiawyt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AdAmeqbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fdpqawe22jdkxygiawyt.png" alt="Add title and key"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Save the key and you're ready to push your changes to GitHub using SSH connection. Congrats! 🥳&lt;/p&gt;

</description>
      <category>github</category>
    </item>
  </channel>
</rss>
