<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Dynamic Dev.to Blog Posts On GitHub</title>
      <author>Attentive Aryan</author>
      <pubDate>Fri, 14 May 2021 03:39:59 +0000</pubDate>
      <link>https://dev.to/attentivearyan/dynamic-dev-to-blog-posts-on-github-211p</link>
      <guid>https://dev.to/attentivearyan/dynamic-dev-to-blog-posts-on-github-211p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-this"&gt;
  &lt;/a&gt;
  What is this?
&lt;/h2&gt;

&lt;p&gt;Want to show dynamic posts that update with the posts that you right on dev.to? This post is going to share a simple yet easy way to add dev.to posts dynamically to your github profile. Here is a example as well:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SzCWj7XB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/8397274/88047382-29b8b280-cb6f-11ea-9efb-2af2b10f3e0c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SzCWj7XB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/8397274/88047382-29b8b280-cb6f-11ea-9efb-2af2b10f3e0c.png" alt="Example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How to use?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Leave some reactions to this repository 😉&lt;/li&gt;
&lt;li&gt;Create a repository with the same name as your username
For example if my username is &lt;strong&gt;AttentiveAryan&lt;/strong&gt; the repo will be &lt;strong&gt;AttentiveAryan/AttentiveAryan&lt;/strong&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eq63k-04--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qrpke1gwfniouk234mdd.png" alt="Message To Verify"&gt;
&lt;/li&gt;
&lt;li&gt;Create a readme.md file
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;   &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;align=&lt;/span&gt;&lt;span class="s"&gt;"center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hi 👋🏻, I'm Aryan Gupta&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;align=&lt;/span&gt;&lt;span class="s"&gt;"center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;A passionate learner from India&lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;align=&lt;/span&gt;&lt;span class="s"&gt;"center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; &amp;lt;a href="https://twitter.com/attentivearyan" 
target="blank"&amp;gt;&amp;lt;img 
src="https://img.shields.io/twitter/follow/attentivearyan? 
logo=twitter&amp;amp;style=for-the-badge" alt="attentivearyan" /&amp;gt;&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; 
  &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;
  -&lt;/span&gt; 🔭 I’m currently working on &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;learning html &amp;amp; css&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;https://freecodecamp.org/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;
  -&lt;/span&gt; 💻 All of my projects are available at &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;attentivearyan.github.io&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;https://attentivearyan.github.io&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;
  -&lt;/span&gt; 📝 I regularly write articles on &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;attentivearyan.github.io/blog/&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;https://attentivearyan.github.io/blog/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;
  -&lt;/span&gt; 📫 How to reach me &lt;span class="gs"&gt;**attentivearyan@gmail.com**&lt;/span&gt;
&lt;span class="p"&gt;
  -&lt;/span&gt; 📄 Know about my experiences &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;attentivearyan.github.io/resume/&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;https://attentivearyan.github.io/resume/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  ### Blogs posts
  &lt;span class="c"&gt;&amp;lt;!-- BLOG-POST-LIST:START --&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- BLOG-POST-LIST:END --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Make sure to include the comment tag cause the post will be placed in this&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;  &lt;span class="c"&gt;&amp;lt;!-- BLOG-POST-LIST:START --&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- BLOG-POST-LIST:END --&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Now let us come to the logic, We are going to use blog-post-workflow action:
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/gautamkrishnar"&gt;
        gautamkrishnar
      &lt;/a&gt; / &lt;a href="https://github.com/gautamkrishnar/blog-post-workflow"&gt;
        blog-post-workflow
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Show your latest blog posts from any sources or StackOverflow activity or Youtube Videos on your GitHub profile/project readme automatically using the RSS feed
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;For that create a file in &lt;code&gt;.github/workflows/&lt;/code&gt; called &lt;code&gt;blog-post-workflow.yml&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Latest blog post workflow&lt;/span&gt;
&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;schedule&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# Run workflow automatically&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;cron&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;0&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;*'&lt;/span&gt; &lt;span class="c1"&gt;# Runs every hour, on the hour&lt;/span&gt;
  &lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;# Run workflow manually (without waiting for the cron to be called), through the Github Actions Workflow page directly&lt;/span&gt;
&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;update-readme-with-blog&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Update this repo's README with latest blog posts&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;gautamkrishnar/blog-post-workflow@master&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;feed_list&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://dev.to/feed/{username}"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Replace {username} with your username&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check the repo for more configuration options:
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/gautamkrishnar"&gt;
        gautamkrishnar
      &lt;/a&gt; / &lt;a href="https://github.com/gautamkrishnar/blog-post-workflow"&gt;
        blog-post-workflow
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Show your latest blog posts from any sources or StackOverflow activity or Youtube Videos on your GitHub profile/project readme automatically using the RSS feed
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Blog post workflow  &lt;a href="https://github.com/gautamkrishnar/blog-post-workflow/actions?query=workflow%3A%22Build+and+test%22"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--07TfAXIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/gautamkrishnar/blog-post-workflow/workflows/Build%2520and%2520test/badge.svg%3Fbranch%3Dmaster" alt="Build and test"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/8397274/88047382-29b8b280-cb6f-11ea-9efb-2af2b10f3e0c.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SzCWj7XB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/8397274/88047382-29b8b280-cb6f-11ea-9efb-2af2b10f3e0c.png" alt="preview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
How to use&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Star this repo 😉
&lt;/li&gt;
&lt;li&gt;Go to your repository&lt;/li&gt;
&lt;li&gt;Add the following section to your &lt;strong&gt;README.md&lt;/strong&gt; file, you can give whatever title you want. Just make sure that you use &lt;code&gt;&amp;lt;!-- BLOG-POST-LIST:START --&amp;gt;&amp;lt;!-- BLOG-POST-LIST:END --&amp;gt;&lt;/code&gt; in your readme. The workflow will replace this comment with the actual blog post list:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight highlight-source-gfm position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-mh"&gt;&lt;span class="pl-mh"&gt;#&lt;/span&gt;&lt;span class="pl-mh"&gt; &lt;/span&gt;Blog posts&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; BLOG-POST-LIST:START &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;&amp;lt;!--&lt;/span&gt; BLOG-POST-LIST:END &lt;span class="pl-c"&gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    

    
    

  
&lt;/div&gt;



&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Create a folder named &lt;code&gt;.github&lt;/code&gt; and create a &lt;code&gt;workflows&lt;/code&gt; folder inside it if it doesn't exist.&lt;/li&gt;
&lt;li&gt;Create a new file named &lt;code&gt;blog-post-workflow.yml&lt;/code&gt; with the following contents inside the workflows folder:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight highlight-source-yaml position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-ent"&gt;name&lt;/span&gt;: &lt;span class="pl-s"&gt;Latest blog post workflow&lt;/span&gt;
&lt;span class="pl-ent"&gt;on&lt;/span&gt;
  &lt;span class="pl-ent"&gt;schedule&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run workflow automatically&lt;/span&gt;
    - &lt;span class="pl-ent"&gt;cron&lt;/span&gt;: &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;'&lt;/span&gt;0 * * * *&lt;span class="pl-pds"&gt;'&lt;/span&gt;&lt;/span&gt; &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Runs every hour, on the hour&lt;/span&gt;
  &lt;span class="pl-ent"&gt;workflow_dispatch&lt;/span&gt;: &lt;span class="pl-c"&gt;&lt;span class="pl-c"&gt;#&lt;/span&gt; Run workflow manually (without waiting for the cron to be called), through the Github Actions Workflow page directly&lt;/span&gt;
&lt;span class="pl-ent"&gt;jobs&lt;/span&gt;:
  &lt;span class="pl-ent"&gt;update-readme-with-blog&lt;/span&gt;:
    &lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/gautamkrishnar/blog-post-workflow"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy Coding! If you face any issues comment here down below! Make sure to link your profile repo once you're done!&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a class="mentioned-user" href="https://dev.to/krishdevdb"&gt;@krishdevdb&lt;/a&gt;
 for this article&lt;/p&gt;

</description>
      <category>github</category>
      <category>githunt</category>
      <category>showdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Journey to the real world by cloning DEV.to backend server(part 5)</title>
      <author>Harsh Mangalam</author>
      <pubDate>Fri, 14 May 2021 02:38:56 +0000</pubDate>
      <link>https://dev.to/harshmangalam/journey-to-the-real-world-by-cloning-dev-to-backend-server-part-5-4aad</link>
      <guid>https://dev.to/harshmangalam/journey-to-the-real-world-by-cloning-dev-to-backend-server-part-5-4aad</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;In the last post we have created our first model user model and started our development server.&lt;br&gt;
In this post we will work on jwt authentication using jsonwebtoken package.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#authentication-workflow-in-our-platform"&gt;
  &lt;/a&gt;
  Authentication workflow in our platform
&lt;/h2&gt;

&lt;p&gt;when users will visit our platform first time they do not have any token so they will be unauthenticated and unauthorized.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In Simple term UnAuthenticated user means they have not loggedin in our platform and UnAuthorized means they may or may not be login but definitely not  allowed for specific pieces of actions.&lt;br&gt;
For example: In our Platform any one can read posts no required for login but to create post they must have to login. If someone is moderator then it have some specific role for that. Normal reader cannot make an action which are specially designed for moderators.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When user will login then from backed they will get a jwt token. Then from next request they will provide that jwt token in Authentication header and backend will decode that and recognise who is the user in this token.&lt;/p&gt;

&lt;p&gt;We knew that HTTP is stateless they have no idea how to manage user session because our backend is on localhost:4000 nodejs server and frontend may be on localhost:3000  React  client it will not possible for http to remember user. &lt;br&gt;
Hence we have a way to handle this kind of problems&lt;/p&gt;

&lt;p&gt;We will generate a jwt token for every loggedin user and will send to him they will put this token in localstorage and for further request they will send the token inside http headers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;JSON Web Tokens are an open, industry standard RFC 7519 method for representing claims securely between two parties.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can found more about jwt &lt;a href="https://jwt.io/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#setup-schema-and-resolvers-for-authentication"&gt;
  &lt;/a&gt;
  Setup schema and resolvers for authentication
&lt;/h3&gt;

&lt;p&gt;create some directory to chunk our logic in different file and folder&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;create &lt;code&gt;graphql&lt;/code&gt; dir in &lt;code&gt;src/&lt;/code&gt; dir&lt;/li&gt;
&lt;li&gt;create &lt;code&gt;util&lt;/code&gt; dir in &lt;code&gt;src/&lt;/code&gt; dir&lt;/li&gt;
&lt;li&gt;create dir &lt;code&gt;typeDefs&lt;/code&gt; in &lt;code&gt;graphql&lt;/code&gt; dir&lt;/li&gt;
&lt;li&gt;create dir &lt;code&gt;resolvers&lt;/code&gt; in &lt;code&gt;graphql&lt;/code&gt; dir&lt;/li&gt;
&lt;li&gt;create file &lt;code&gt;index.js&lt;/code&gt; in &lt;code&gt;typeDefs&lt;/code&gt; dir&lt;/li&gt;
&lt;li&gt;create file &lt;code&gt;index.js&lt;/code&gt; in &lt;code&gt;reslovers&lt;/code&gt; dir&lt;/li&gt;
&lt;li&gt;create file &lt;code&gt;auth.util.js&lt;/code&gt; in &lt;code&gt;util&lt;/code&gt; dir&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;when we will proceed in this series then we will see how we will break schema and resolvers in multiple file with ease&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code&gt;devblog_server/src/typeDefs/index.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This file will contain all the query, mutation and subscription .&lt;/p&gt;

&lt;p&gt;For authentication we will use &lt;code&gt;jsonwebtoken&lt;/code&gt; and for password hashing we will use &lt;code&gt;bcrypt&lt;/code&gt; library which is freely available in npm&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pnpm add jsonwebtoken bcrypt

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lets create authentication query and mutation&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/graphql/typeDefs/index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;gql&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apollo-server-express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gql&lt;/span&gt;&lt;span class="s2"&gt;`
  type AuthResponse {
    token: String!
    user: User!
  }

   type Mutation {
    login(email: String!, password: String): AuthResponse!
    register(name: String!, email: String!, password: String!): AuthResponse!
  }
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;



&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now create add resolvers for above query &lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/graphql/resolvers/index.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;UserInputError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;AuthenticationError&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;apollo-server-errors&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;generateHash&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;generateUsername&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;matchPassword&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;generateJwtToken&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../../utils/auth.util&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="na"&gt;Mutation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// login user&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findUnique&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;UserInputError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;USER_NOT_FOUND&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Account with this email does not found create new one&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;matchPass&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;matchPassword&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;matchPass&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;UserInputError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;INCORRECT_PASSWORD&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Password is incorrect&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;generateJwtToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;

    &lt;span class="c1"&gt;// create new account&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;checkEmail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;findUnique&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;where&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;checkEmail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;UserInputError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;EMAIL_ALREADY_EXISTS&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Account with this email is already exists &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nx"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;generateUsername&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;generateHash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;prisma&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;generateJwtToken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;newUser&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;above we have implemented registration and login for users when we will proceed in series i will show you how easily we will create admin user from environment variable.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;src/util/auth.util.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bcrypt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bcrypt&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;jwt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jsonwebtoken&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;generateUsername&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;9990&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;generateHash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;bcrypt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;matchPassword&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hashPassword&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hasMatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;bcrypt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;compare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hashPassword&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;hasMatch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;generateJwtToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sign&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;JWT_SECRET&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;expiresIn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10h&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;


&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;decodeJwtToken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;jwt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;token&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;JWT_SECRET&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is utility file which contain utility function related to authentication.&lt;/p&gt;

&lt;p&gt;Save all the stuff and go to graphql playground at &lt;code&gt;localhost:4000/graphql&lt;/code&gt; and start hacking around authentication&lt;/p&gt;

&lt;p&gt;register query&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mutation {
  register(name:"Harsh Mangalam",email:"harshdev@dev.com",password:"123456"){
    token
   user {
    id
    name
    username
    createdAt
    role

  } 
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give you result like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "data": {
    "register": {
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEwLCJpYXQiOjE2MjA5NTk1MjQsImV4cCI6MTYyMDk5NTUyNH0.xmdJYVpZUxcUhr5CBQwR1C7yLjKSEvAmjt7gr2sjsNw",
      "user": {
        "id": "10",
        "name": "Harsh Mangalam",
        "username": "harshdev5301",
        "createdAt": "1620959524586",
        "role": "USER"
      }
    }
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;login query&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mutation {
  login(email:"harshdev@dev.com",password:"123456"){
    token
   user {
    id
    name
    username
    createdAt
    role

  } 
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;login query result&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "data": {
    "login": {
      "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEwLCJpYXQiOjE2MjA5NTk2MjcsImV4cCI6MTYyMDk5NTYyN30.59OHuy3L5F_0Oes-3kYQwNcsl9vJnTXx-63h0aiVHvc",
      "user": {
        "id": "10",
        "name": "Harsh Mangalam",
        "username": "harshdev5301",
        "createdAt": "1620959524586",
        "role": "USER"
      }
    }
  }
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;In our next post we will break our graphql schema and resolvers into chunk so that development will easier and we will work more on user and profile sections.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>node</category>
      <category>apollo</category>
      <category>express</category>
      <category>prisma</category>
    </item>
    <item>
      <title>KITTI on SiaSearch - Our first public product unveil for researchers</title>
      <author>SiaSearch</author>
      <pubDate>Fri, 14 May 2021 02:14:17 +0000</pubDate>
      <link>https://dev.to/siasearch/kitti-on-siasearch-our-first-public-product-unveil-for-researchers-2f3i</link>
      <guid>https://dev.to/siasearch/kitti-on-siasearch-our-first-public-product-unveil-for-researchers-2f3i</guid>
      <description>&lt;p&gt;Today, we are glad to announce the release of a public version of SiaSearch based on the popular &lt;a href="https://www.siasearch.io/kitti-dataset/"&gt;KITTI dataset&lt;/a&gt;. We would like to let researchers use SiaSearch’s power in order to immensely simplify data searchability. We hope that the use of KITTI would allow them to seamlessly extract interesting insights from one of the most popular datasets in AV/ADAS. Deployed on KITTI, we want to make a subset of the features of SiaSearch accessible to researchers all around the world.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D0WXoMbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7m9vawoqh2pgptd8c9p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D0WXoMbB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7m9vawoqh2pgptd8c9p.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SiaSearch allows to efficiently search through recorded driving data. It is made available to researchers on the KITTI dataset.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-siasearch"&gt;
  &lt;/a&gt;
  About SiaSearch
&lt;/h2&gt;

&lt;p&gt;Before we dive into the demo walkthrough, let’s quickly recap the need and value of &lt;a href="https://www.siasearch.io/"&gt;SiaSearch&lt;/a&gt;. As we explained in detail in our previous post, data volumes in the AV/ADAS domain are exploding at an increasing pace with a single vehicle producing upto 10TBs per hour today. Therefore, the ability to search, analyze and prioritize that data in an efficient manner becomes fundamental to its utilization. SiaSearch allows users to process large quantities of multimodal automotive data and extract queryable metadata. Using this metadata developers can easily find complex situations encountered by the vehicle, ranging from lane changes to overtaking to unsafe braking. With fast search, we reduce the time wasted on repetitive data tasks by instantly connecting engineers with relevant data. Addressing data access further enables us to enable smarter data retention decisions and therefore significantly optimize infrastructure usage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#siasearch-features"&gt;
  &lt;/a&gt;
  SiaSearch Features
&lt;/h2&gt;

&lt;p&gt;In order to allow you to experience SiaSearch’s abilities, let’s quickly walk through the most important features and functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Querying&lt;/strong&gt; — In SiaSearch there are two methods with which you can query for the data you want: The visual (default) and the code interface. The code query works like any API call statement would, whereas the visual query offers a visually rich interface to make the selection of extractors and search extremely intuitive. Users can select an extractor from a variety of categories. The user can select multiple extractors and then apply search to obtain the results. The code and visual query interfaces are directly linked and updated accordingly.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Similarity Search&lt;/strong&gt; — When a user comes across an interesting data segment, they might want to find similar clips of data. Since we have high dimensional multimodal data, this would be extremely hard to do manually. Therefore we integrated an automated similarity search, based on unsupervised clustering of the previously extracted metadata to fetch the most relevant and similar data segments. It is important to note that similarity search is NOT a query. In order to find the same clips, queries can be sent. Similarity analysis is more of an explorative tool, taking into account the metadata clusters.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Replay/Adjust Clip&lt;/strong&gt; — A user might also want to view the data right before or after a certain situation (e.g. a left turn) in order to contextualize the vehicle behavior. This is why we allow the user to change the length of the clip according to their needs. Clip re-adjustment can be achieved by clicking on the adjust clip button in the replay viewer. This opens up the slider so that the user can specify the new start and end points and apply the changes to get an updated clip.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Export&lt;/strong&gt; — To empower the user with all our metadata insights we allow export of selected data as parquet files. Having this metadata can allow the user to do further analysis or to directly use it any application. After collecting several segments of choice the user can go to the export page, select the parts of metadata which should be exported and obtain the parquet file.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#siasearch-workflows"&gt;
  &lt;/a&gt;
  SiaSearch Workflows
&lt;/h2&gt;

&lt;p&gt;SiaSearch can unlock many different workflows in both academic and commercial settings ranging from scenario extraction for AV stack simulation testing to data sharing/collaborative analysis. However, one of the most important ones is filtering data for annotation. This is shown in the video below to enable contextual understanding of the product.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#try-it-today"&gt;
  &lt;/a&gt;
  Try it today!
&lt;/h2&gt;

&lt;p&gt;If you are interested in using &lt;a href="https://www.siasearch.io/kitti-dataset/"&gt;KITTI on SiaSearch&lt;/a&gt; for your research, &lt;a href="http://public.sia-search.com/"&gt;click here to get started&lt;/a&gt;. Our team will set up a dedicated account for you so that you can see SiaSearch’s abilities for yourself.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>machinelearning</category>
      <category>computerscience</category>
      <category>datascience</category>
    </item>
    <item>
      <title>Writing functional JS as a newbie</title>
      <author>RedDev</author>
      <pubDate>Fri, 14 May 2021 00:53:18 +0000</pubDate>
      <link>https://dev.to/reddev37323224/writing-functional-js-as-a-newbie-298c</link>
      <guid>https://dev.to/reddev37323224/writing-functional-js-as-a-newbie-298c</guid>
      <description>&lt;p&gt;This past Tuesday I had an abnormal amount of downtime at my current job. I decided to use that time to play with JavaScript on my own. I've seen other background color changing projects and figured I'd take a swing.&lt;/p&gt;

&lt;p&gt;I'm in the middle of a website project for a co-worker. My friend and code mentor helped me with a mobile menu using JS for the project. Using that function as a starting point, I tried changing the background color with an on-click event. With no success, I turned to Google and found a simple way to do what I wanted using &lt;code&gt;document.body.style.background&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then it was time to tackle the text color change on the h1 element. After some more Google, I found &lt;code&gt;document.getElementById().style.color&lt;/code&gt; to work nicely.&lt;/p&gt;

&lt;p&gt;Everything was functional and I excitedly sent my friend the CodePen link, which at the time was the same code as this post's cover image- five nearly identical functions and all. It was gratifying to hear that it looked good, but he then said I could do the same thing with only one function. After all that work!?&lt;/p&gt;

&lt;p&gt;One Zoom call and some explaining later, it made sense! Arguments, "Ah-ha!" I remembered using them in FreeCodeCamp exercises, but it's much different when you're actually building something. Now I have a better idea of how arguments and JavaScript in general works. It was frustrating but the payoff was totally worth the aggravation.&lt;/p&gt;

&lt;p&gt;I don't know if you need to hear this, but do not give up. Just keep trying. This small project has allowed me to connect  dots and put some JavaScript things into perspective. I'm excited for the future and eager to keep going.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/redwagen/pen/PopPBGV"&gt;Here&lt;/a&gt; is the single function background color changer. I hope you have as much fun as I do clicking those buttons. :)&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Ember. js</title>
      <author>sstores</author>
      <pubDate>Fri, 14 May 2021 00:26:44 +0000</pubDate>
      <link>https://dev.to/sstores/ember-js-1iii</link>
      <guid>https://dev.to/sstores/ember-js-1iii</guid>
      <description>&lt;p&gt;One special thing about tech industry is that popularity of frameworks or libraries is largely based on usability and efficiency. How well the thing works for the purposes of the programmer. That means that libraries and framework fluctuate over the years. In the last few years React has been the newest hottest thing. But around 2012-2015 that place was arguably held by Ember. Ember js is a javascript framework like React, Angular, or Vue. Most of the current “Best frameworks in 2021” lists I have found list Ember among these top used. We will explore some of the characteristics particular to Ember and comparing it to the most popular framework/library today, React. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FIkS-QmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xagt83al7168508l0s89.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FIkS-QmD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xagt83al7168508l0s89.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What is Ember js?&lt;/p&gt;

&lt;p&gt;As we said before, Ember is a framework. On the Ember docs, it specifically says that Ember is “a framework for ambitious developers”. What makes this framework particularly appealing to the ambitious folks among developers? Well it is well suited for complex, industrial-scale apps. The code base itself is robust and has lots of great functionality and features build in. React in contract is specifically intended to be lightweight and non opinionated. So overall out of the box, react will be lighter and will be a bit simpler to get started. &lt;/p&gt;

&lt;p&gt;Some other specific specialities on the Ember docs are the following:&lt;/p&gt;

&lt;p&gt;“Offers HTML and CSS development model at the core.” &lt;br&gt;
“Provides instance initializers.”&lt;br&gt;
“Ember.js offers routes that are the core features used for managing the URL.”&lt;br&gt;
“Ember.js uses templates that help to automatically update the model if the content of applications gets changed.”&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i1vZoIal--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ko1iosp98d1fqtda5h6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i1vZoIal--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ko1iosp98d1fqtda5h6g.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are of course some similarities between Ember and other libraries and frameworks like React. We will highlight some of the differences. React is a self-described library and Ember is a Framework. Though these are often lumped together in the “front-end” there are differences. React is backed and updated by facebook. Ember is community backed meaning it has a much smaller dedicated team keeping the code and documentation up to date. React was created in 2013 and Ember was created in 2011. Ember had a spike in popularity from around 2012-2015 where it was one of the most popular frameworks, widely taught in coding bootcamps.&lt;/p&gt;

&lt;p&gt;When compared to React, Ember is larger and adept at handling complex programs. Therefore the learning curve is steeper and the barrier to entry is a bit higher than React. Because React is non-opinionated and the syntax is very similar to javascript, React is more beginner friendly as far as frameworks go. There are many companies that either use or have used Ember. The list includes Square, Bustle, TED, Netflix, Heroku, Microsoft, LinkedIn, Blue Apron, Travis CI and many more. Some of these, notably Square and Netflix have switched operations to React in recent years but that being said, Ember is still a useful thing to know in case you run into Ember legacy code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--btCxC3Tu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjsfwxvplzql2aeavswm.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--btCxC3Tu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kjsfwxvplzql2aeavswm.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another helpful measure when looking at whether a technology is relevant and viable as far as usage and engagement by developers is Stack Overflow and GitHub stats. In August of 2020 there were over 236,000 questions about react on Stack Overflow. That number makes the 21,000 questions about Ember seem measly. But we can see trends in engagement through these numbers. React currently has more engagement and more folks exploring its functionality. The high number may also be due to the fact that React is much more DIY as far as adding plugins, additional libraries, and add ons, whereas Ember is more of a complete and robust system out of the box. That combined with the fact that Ember’s fan base tends to skew towards a more experienced developer crowd because of the steep learning curve, may account for the differential. &lt;/p&gt;

&lt;p&gt;In short, Ember may not be the hottest thing any more but it is still good to know and very helpful for specific purposes. Only time will tell wha the next big thing will be!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b2xCztjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlt86jknbshcwawx6kg4.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b2xCztjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlt86jknbshcwawx6kg4.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sources:&lt;br&gt;
&lt;a href="https://hackr.io/blog/best-javascript-frameworks"&gt;https://hackr.io/blog/best-javascript-frameworks&lt;/a&gt;&lt;br&gt;
&lt;a href="https://guides.emberjs.com/release/getting-started/anatomy-of-an-ember-app/"&gt;https://guides.emberjs.com/release/getting-started/anatomy-of-an-ember-app/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.simform.com/react-vs-ember/#Table"&gt;https://www.simform.com/react-vs-ember/#Table&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>The Future of Angular 13</title>
      <author>michelledev</author>
      <pubDate>Thu, 13 May 2021 23:28:59 +0000</pubDate>
      <link>https://dev.to/michelledev3/the-future-of-angular-13-18ja</link>
      <guid>https://dev.to/michelledev3/the-future-of-angular-13-18ja</guid>
      <description>&lt;p&gt;Angular did it again, on May 12, 2021, the newest major version of Angular arrived a stable Angular v12.0.00. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2q-H3nLt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7hupxb90p7rx1i1ih5m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2q-H3nLt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j7hupxb90p7rx1i1ih5m.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Angular version 12.0.0 released May 2021. The Angular v12 major release is getting closer to “Ivy Everywhere”. The newest version enables the transition of the Angular ecosystem to the Ivy compiler.&lt;/p&gt;

&lt;p&gt;Angular v12 includes stylish improvements, nullish coalescing allowing developers to write cleaner code in TypeScript and Angular templates, Webpack 5 support and TypeScript v4.2, and a stick model enabled by default to help catch errors earlier in the development cycle.&lt;/p&gt;

&lt;p&gt;So what's next for Angular?  What is the future of Angular?  &lt;/p&gt;

&lt;p&gt;Angular receives numerous feature requests both from Google and the Angular community, with constant review and evaluation build their roadmap to prioritize requests. &lt;/p&gt;

&lt;p&gt;The future of Angular is bright, with new feature developments on the horizon:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#better-developer-ergonomics-with-strict-typing"&gt;
  &lt;/a&gt;
  Better Developer Ergonomics with Strict Typing
&lt;/h3&gt;

&lt;p&gt;Implementing a stricter type of checking for reactive forms allows developers to catch more issues during development time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reduce-framework-overhead"&gt;
  &lt;/a&gt;
  Reduce Framework Overhead
&lt;/h3&gt;

&lt;p&gt;Removing legacy View Engine for the smaller Angular conceptual overhead (lower maintenance cost, lower complexity of codebase, and a smaller package).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improved-text-times-and-debugging"&gt;
  &lt;/a&gt;
  Improved Text Times and Debugging
&lt;/h3&gt;

&lt;p&gt;Automatic test environment tear down improves test time and creates better isolation across tests. The goal is to change TestBed to automatically clean up and tear down the test environments after each test run.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#optional-ngmodulars"&gt;
  &lt;/a&gt;
  Optional NgModulars
&lt;/h3&gt;

&lt;p&gt;Optional NgModulars allow developers to develop standalone components and implement an alternative API to declare the component’s compilation scope.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#support-directives-to-host-elements"&gt;
  &lt;/a&gt;
  Support Directives to Host Elements
&lt;/h3&gt;

&lt;p&gt;Adding directives to host elements allows developers to augment their components with more behaviors without inheritance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#angular-compiler-as-a-plugin-tsc"&gt;
  &lt;/a&gt;
  Angular Compiler as a PlugIn (tsc)
&lt;/h3&gt;

&lt;p&gt;When making this a reality, the developers substantially improve build performance and reduce maintenance costs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ergonomic-component-level-codesplitting-apis"&gt;
  &lt;/a&gt;
  Ergonomic Component Level Code-Splitting APIs
&lt;/h3&gt;

&lt;p&gt;Web Applications are known for their slow initial load time. Applying a more granular code-splitting component level is one way to improve the initial load time.&lt;/p&gt;

&lt;p&gt;What's your favorite new feature you can't wait for?  Are there features you wish were listed and aren't? Please share and let's talk about the future of Angular, and if we ruled the world what we would do to make it even brighter!  &lt;/p&gt;

</description>
      <category>angular</category>
      <category>javascript</category>
      <category>watercooler</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Best under $100 earbuds to use! Suggestions + Tips and Tricks!</title>
      <author>Timothy Rowell</author>
      <pubDate>Thu, 13 May 2021 22:57:42 +0000</pubDate>
      <link>https://dev.to/codeboi/best-under-100-earbuds-to-use-suggestions-tips-and-tricks-41lb</link>
      <guid>https://dev.to/codeboi/best-under-100-earbuds-to-use-suggestions-tips-and-tricks-41lb</guid>
      <description>&lt;p&gt;photo credit (Geoffrey Morrison)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#price-table"&gt;
  &lt;/a&gt;
  Price Table
&lt;/h1&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Brand&lt;/th&gt;
&lt;th&gt;price&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;#1 AirPods (Refurbished)&lt;/td&gt;
&lt;td&gt;Apple&lt;/td&gt;
&lt;td&gt;$109.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Anker Soundcore Liberty 2&lt;/td&gt;
&lt;td&gt;Anker products&lt;/td&gt;
&lt;td&gt;$76.97&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JLab Epic Air Sport ANC&lt;/td&gt;
&lt;td&gt;JLab&lt;/td&gt;
&lt;td&gt;$59.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;House of Marley Champion&lt;/td&gt;
&lt;td&gt;House of Marley&lt;/td&gt;
&lt;td&gt;$69.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JLab Epic Air ANC&lt;/td&gt;
&lt;td&gt;JLab&lt;/td&gt;
&lt;td&gt;$99.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Anker Soundcore Life Dot 2&lt;/td&gt;
&lt;td&gt;Anker&lt;/td&gt;
&lt;td&gt;$40&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tribit FlyBuds NC&lt;/td&gt;
&lt;td&gt;Tribit&lt;/td&gt;
&lt;td&gt;$49.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1More ColorBuds&lt;/td&gt;
&lt;td&gt;1More&lt;/td&gt;
&lt;td&gt;$79.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Treblab X5&lt;/td&gt;
&lt;td&gt;Treblab&lt;/td&gt;
&lt;td&gt;$69.97&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Monoprice True Wireless Plus&lt;/td&gt;
&lt;td&gt;Monoprice&lt;/td&gt;
&lt;td&gt;$95.70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sony WF-XB700&lt;/td&gt;
&lt;td&gt;Sony&lt;/td&gt;
&lt;td&gt;$99.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Skullcandy Sesh Evo&lt;/td&gt;
&lt;td&gt;Skullcandy&lt;/td&gt;
&lt;td&gt;$29.99&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OnePlus True Wireless&lt;/td&gt;
&lt;td&gt;OnePlus&lt;/td&gt;
&lt;td&gt;$39.99&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Zy4m5Ssd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--jOrto73r--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/8398ad425ade46da/Anker_Liberty_2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zy4m5Ssd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--jOrto73r--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/8398ad425ade46da/Anker_Liberty_2.jpg" alt="Anker Soundcore Liberty 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#anker-soundcore-liberty-2"&gt;
  &lt;/a&gt;
  Anker Soundcore Liberty 2
&lt;/h1&gt;

&lt;p&gt;The Anker Soundcore Liberty 2 is the best of the bunch for most people thanks to a customizable fit, customizable sound, and above-average battery life. Multiple included ear tips and silicone wings mean that just about everyone can get a comfortable and secure fit and the Anker app lets you dial in the sound that you want. It’s possible another option here might sound better to you, or fit better, but the Liberty 2 are our favorite all-rounders.&lt;/p&gt;

&lt;p&gt;The sound is among the best we tested in this price range. It’s a bit bass-heavy, and a touch sharp in the upper register, but thanks to the EQ options in Anker’s app, you can tune the sound to be pretty close to whatever you personally prefer. In fact, the app has a feature called HearID that will help find the EQ settings best for your ears.&lt;/p&gt;

&lt;p&gt;Battery life was a bit less than claimed—we tracked 7 hours of playback per charge instead of 8. That’s mid-pack for this category, but still above average for many more popular true wireless headphones. The case should offer about 3 full charges. Speaking of the case, it feels a bit flimsy, with a thin plastic cover that slides to open and seems like it could get knocked open in a purse or backpack.&lt;/p&gt;

&lt;p&gt;The Liberty 2 are IPX5 Certified, which means they’re sealed against strong splashes, even tested to take on some light jets of the wet stuff. You can’t dunk them, but it’s enough to let you work out and get your sweat on without having to worry about damage.&lt;/p&gt;

&lt;p&gt;The Anker Soundcore Liberty 2 offers the most for the most people, and at a great price. You should be able to get a comfortable fit, and dial in a sound that you like.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Good sound you can EQ to taste&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple wings and ear tips&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Full-day battery&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Case feels flimsy&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VHOUwwtE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--m2eZznvy--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/1fd26bfc82414c9b/JLab_Epic_Air_Sport.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VHOUwwtE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--m2eZznvy--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/1fd26bfc82414c9b/JLab_Epic_Air_Sport.jpg" alt="JLab Audio Epic Air Sport ANC True Wireless Earbuds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jlab-audio-epic-air-sport-anc-true-wireless-earbuds"&gt;
  &lt;/a&gt;
  JLab Audio Epic Air Sport ANC True Wireless Earbuds
&lt;/h1&gt;

&lt;p&gt;Just because the JLab Epic Air Sport ANC is our best sports pick doesn’t mean you should dismiss them if you’re not sporty. In fact, quite the opposite. These would be great for anyone worried about getting a good fit, especially those who struggle with traditional earbuds. They’re IP66 rated, meaning they’ve got good dust resistance and you can get them quite wet—but don’t submerge them. Of course, they’re also good if you’re an active type.&lt;/p&gt;

&lt;p&gt;One big reason for this is the over-ear loop design. It’s a soft silicone we never found annoying, fitting comfortably even with glasses. Some people aren’t a fan of this style, but it allows for a far more secure fit than any other option—we never once felt that they’d fall out and get lost. The loops aren’t removable (see the non-Sport sibling), but the Epic Air Sport comes with multiple silicone ear tip options, plus a very comfortable foam tip.&lt;/p&gt;

&lt;p&gt;Overall the sound is a bit bass-heavy, but like the Anker Liberty 2, there are extensive EQ options to help you fine-tune your preferred sound.&lt;/p&gt;

&lt;p&gt;Battery life was slightly less than claimed. We measured around 13 hours per charge to JLab’s claim of 15, but still, that’s a ton for true wireless headphones. If you enable features like noise-canceling, you’ll get less battery life. Speaking of noise-canceling, like all the NC offerings here, it’s very mild. It doesn’t hurt to have it, of course, but if you’re looking specifically for noise canceling, you’ll want to look at our top picks on our best wireless earbuds list or our best noise-canceling headphones list.&lt;/p&gt;

&lt;p&gt;Like the majority of newer true wireless earbuds, the Epic Air Sport ANC also offers adjustable transparency mode, which JLab calls Be Aware, letting you hear your environment in high-traffic areas.&lt;/p&gt;

&lt;p&gt;The case, a bit larger than the others in this category, also holds a big battery, offering about 3.5 additional charges. It has an attached USB cable, which is either a strength or a weakness depending on your gear. More importantly, it has wireless charging which is a great touch.&lt;/p&gt;

&lt;p&gt;If you’re headed out for a walk or hike, these are the ones you’d want to grab. If you don’t like the over-ear loops, however, the Anker Liberty 2 is the better choice.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Secure&lt;/li&gt;
&lt;li&gt;&lt;p&gt;adaptable fit&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Multiple sound options&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very long battery life&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;An over-ear loop isn't for everyone&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r6Fudu3s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--bnPlZu5F--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/d9c429c42b2e4b68/JLab_Go_Air.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r6Fudu3s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--bnPlZu5F--/b_white%2Cc_limit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Cq_auto%2Cw_792/https://reviewed-production.s3.amazonaws.com/attachment/d9c429c42b2e4b68/JLab_Go_Air.jpg" alt="JLab Audio Go Air True Wireless Earbuds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jlab-audio-go-air-true-wireless-earbuds"&gt;
  &lt;/a&gt;
  JLab Audio Go Air True Wireless Earbuds
&lt;/h1&gt;

&lt;p&gt;The JLab Go Air are impressive for one primary reason: a crazy-low price. Being the least expensive option isn’t, however, a guarantee of a “best value” superlative. Just because something is cheap doesn’t mean it’s a good value.&lt;/p&gt;

&lt;p&gt;Fortunately, the Go Air performed pretty well, or at least not bad, in most of our tests. Sound quality is mid-pack, not impressing in any particular way, but not overly disappointing in any way either.&lt;/p&gt;

&lt;p&gt;The fit is just OK. They’re very small and light, so if they fit your ears you’ll barely notice them. However, unlike many headphones we tested, the Go Air only comes with three sets of tips—no wings or different materials. This is understandable given their price, but something to keep in mind. If they don’t fit you, they might fall out and disappear.&lt;/p&gt;

&lt;p&gt;Battery life was a little better than advertised in our tests. JLab claims 5 hours and we got 5.5. This is low for our list, but on par with most of the popular true wireless headphones, including Apple’s AirPods Pro, Google’s Pixel Buds, and plenty of others. The case offers roughly 4 extra charges. Like other JLab models, the case has a built-in USB cable. Unlike some, however, this one doesn’t have wireless charging.&lt;/p&gt;

&lt;p&gt;Speaking of the case, it’s a bit…weird. It’s less a case than a cup to hold the earbuds. They lock in magnetically, but there’s no top to the case. So in a purse or backpack, for instance, we could imagine something pushing out one or both of the earbuds out of the case.&lt;/p&gt;

&lt;p&gt;For the price, though, all of these negatives can be largely forgiven. If you want a cheap option with a better chance to fit, and a bit better sound, check out the Tribit FlyBuds NC.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Tiny form factor&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Incredibly affordable&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sound is average&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open-top case&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hS4H745W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--ydaST9ol--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1619012777480/House-of-Marley-Champion.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hS4H745W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--ydaST9ol--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1619012777480/House-of-Marley-Champion.jpg" alt="House of Marley Champion True Wireless"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#house-of-marley-champion-true-wireless"&gt;
  &lt;/a&gt;
  House of Marley Champion True Wireless
&lt;/h1&gt;

&lt;p&gt;The House of Marley Champion are a tiny pair of earbuds made predominantly from sustainable and recycled materials. This includes bamboo, natural fibers, and silicone from post-consumer waste. Even the charging cable is “post-consumer recyclable polyester.” For anyone looking for a greener alternative in a sea of plastic headphones, these are a great place to start.&lt;/p&gt;

&lt;p&gt;Beyond their Earth-friendlier materials, the earbuds themselves are quite good. They aren’t right on par with our top picks, but they definitely hold their own—not a podium finish, but podium adjacent for sure. We got more than their claimed 8 hours of battery life in testing, and the tiny case can charge them back up more than twice. That case charges with USB-C, and, like the headphones themselves, has a small bamboo accent that looks great. The buds are IPX4 water-resistant, which means you can splash them but not submerge them.&lt;/p&gt;

&lt;p&gt;The sound quality is good, though the bass is a bit messy and there’s more emphasis on the treble than their more balanced competitors. They do especially well with podcasts and audiobooks. The biggest issue is that they only come with two sets of tips, and those with larger ears and/or ear canals might not be able to get a secure fit.&lt;/p&gt;

&lt;p&gt;That said, if you’re looking for a more planet-friendly pair of earbuds for your money, the House of Marley Champion may be the pick for you.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Eco-friendly design&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Comfortable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wood offers a nice aesthetic&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Only two tips included&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It May not fit large ears&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wxs5jfha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--HohC_wI---/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602248676610/JLab-Audio-Epic-Air-ANC-True-Wireless-Earbuds.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wxs5jfha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--HohC_wI---/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602248676610/JLab-Audio-Epic-Air-ANC-True-Wireless-Earbuds.jpg" alt="JLab Audio Epic Air ANC True Wireless Earbuds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#jlab-audio-epic-air-anc-true-wireless-earbuds"&gt;
  &lt;/a&gt;
  JLab Audio Epic Air ANC True Wireless Earbuds
&lt;/h1&gt;

&lt;p&gt;The Epic Air ANC seems like they’d be the same as their siblings, the Epic Air Sport ANC, minus the over-ear loops. Performance is slightly different, however. Battery life for the buds is a bit lower, at 12 hours claimed versus 15 for the Sports. We measured a bit less. The case should recharge the buds around 3 times, the same as the Sport.&lt;/p&gt;

&lt;p&gt;Also, they’re IP55 rated instead of IP66, and the bass is less defined and sloppier. This might have to do with the fit. Lacking the over-ear loops of its sports sibling, the Epic Air feels loose. They’re light and comfortable, however.&lt;/p&gt;

&lt;p&gt;Whether the microphone is different, or it's the way they sit in your ears, those on the other end of the phone said voices weren’t as clear with these compared to nearly all the others.&lt;/p&gt;

&lt;p&gt;Like their Sports sibling, the noise canceling is very mild. The transparency mode, called Be Aware, is adjustable in the app and at its maximum actually increases the sound of the world around you; a sort of the opposite of noise-canceling that is useful in certain situations. Also like the Sport, the case has a built-in USB connector and has wireless charging. Unless you really hate over-ear loops, the Sport is the better option.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Light and comfortable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Good battery life&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Wireless charging case&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Fit isn't particularly secure&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PakO4R1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--D6Oq2hpp--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602248076729/Anker-Soundcore-Life-Dot-2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PakO4R1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--D6Oq2hpp--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602248076729/Anker-Soundcore-Life-Dot-2.jpg" alt="Anker Soundcore Life Dot 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#anker-soundcore-life-dot-2"&gt;
  &lt;/a&gt;
  Anker Soundcore Life Dot 2
&lt;/h1&gt;

&lt;p&gt;At first glance, we didn’t expect the Life Dot 2 to fit well. However, their curved, shell-shaped “AirWings” fit quite well in testing. The best fit we got was with one of the larger AirWings which routinely slid down over the metal contacts that allowed the earbuds to charge. If we didn’t notice this when they were put away, they wouldn’t charge.&lt;/p&gt;

&lt;p&gt;Battery life is good, with a claimed 8 hours that’s right in line with what we tested. The case has a huge battery which should offer about 12 charges. They’re IPX5 certified, meaning there's no dust resistance and you shouldn't submerge them but splashing water (and even a bit more) should be OK.&lt;/p&gt;

&lt;p&gt;Performance, overall, is mid-tier. There's a bit too much sizzle to the Life Dot 2’s upper mid-range, which can be mildly unpleasant. Unlike the Liberty 2, you can’t connect the Dot 2 to Anker’s app to adjust this. The price, however, is great.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Tiny, yet comfy&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lots of battery in the case&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sound is so-so&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;AirWings don't fit securely on buds&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n4MBQYOW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--vdPGXRmw--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602252504387/Tribit-FlyBuds-NC.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4MBQYOW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--vdPGXRmw--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602252504387/Tribit-FlyBuds-NC.jpg" alt="Tribit FlyBuds NC"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tribit-flybuds-nc"&gt;
  &lt;/a&gt;
  Tribit FlyBuds NC
&lt;/h1&gt;

&lt;p&gt;We don’t have a “budget runner-up” category, but if we did, the FlyBuds would take it. They were among the few pairs we tried with the long pillar design that actually fit well, and they're regularly priced lower than most options on our list.&lt;/p&gt;

&lt;p&gt;The sound is quite good, a bit mid-heavy and a little brittle, but solidly above average. Like the other noise-canceling options, it’s mostly here in name only, with very little actual noise reduction. Battery life was very good. We measured 11 hours without NC active, higher than their claimed 10. The case should offer a bit more than 2 additional charges.&lt;/p&gt;

&lt;p&gt;They’re IPX4 rated, and you can toggle between the noise canceling and a transparency mode Tribit calls Ambient. This mode works fine, but the NC is mild enough that you might not need it. The voice prompts between modes are nicely clear.&lt;/p&gt;

&lt;p&gt;Their mid-pack performance, however, is greatly offset by their price which was below our test average. Roll all that together and these would be a great option for someone who wants something better than the very lowest priced buds, but doesn’t want to shell out for our pricier picks.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Good sound&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Comfortable&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Affordable&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Don't stand out in any category&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BVx2lj8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--nrFYX_sf--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602247359952/1MORE-ColorBuds.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BVx2lj8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--nrFYX_sf--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602247359952/1MORE-ColorBuds.jpg" alt="1More ColorBuds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1more-colorbuds"&gt;
  &lt;/a&gt;
  1More ColorBuds
&lt;/h1&gt;

&lt;p&gt;The 1More ColorBuds are a stylish and tiny pair of available earbuds, as the name suggests, in a variety of colors including gold, green, pink, and of course, black. The earbuds and case are both among the smallest of any we tested.&lt;/p&gt;

&lt;p&gt;They don’t perform as well as we’d hoped, however. Their swoopy shape didn’t sit as comfortably or as well in our ears as other tiny buds. They are, for instance, only fractionally smaller than the House of Marley Champions, yet those are far more stable. They also lack any buttons on the buds, making you unable to easily pause or switch to a new track like most other earbuds. They do offer an IPX5 water resistance rating, though, which outdoes many budget true wireless headphones we’ve tested.&lt;/p&gt;

&lt;p&gt;The sound is also somewhat of a disappointment; it’s fairly brittle and sibilant and overall very tilted toward the high end. The sound quality overall sits somewhere in the middle when compared to the other budget true wireless earbuds we tested, though the ColorBuds were on the higher-end of the crowd when it comes to the price point.&lt;/p&gt;

&lt;p&gt;We did get better than expected battery life. 1More claims 6 hours, we got over 8. The small case can charge them back to full over 3 times. That said, in a crowded category, the Colorbuds fail to stand out for anyone feature and would be best purchased if you can find them on one of their fire sales.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Stylish design&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IPX5 water resistance&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;No onboard controls&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;So-so fit&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mediocre sound&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ROV3Uux0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--U5eJ8Ajz--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602251688825/TREBLAB-X5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ROV3Uux0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--U5eJ8Ajz--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602251688825/TREBLAB-X5.jpg" alt="Treblab X5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#treblab-x5"&gt;
  &lt;/a&gt;
  Treblab X5
&lt;/h1&gt;

&lt;p&gt;The X5 is the best of the rest. While they fit well enough, with the included wings attached they barely fit in their case. The sibilant (think harsh “S”) sound quality is not particularly pleasant. There’s just too much upper-midrange, especially notable with cymbals. The bass is tuneful, however. Some might feel there’s a bit too much, but it’s just right for bass lovers.&lt;/p&gt;

&lt;p&gt;They are among the few pairs of newer headphones that have a micro-USB connector for charging instead of the more modern USB-C, and unlike some competitors, there is no wireless charging. In addition, listeners on calls didn’t seem to like how voices sounded on the other end.&lt;/p&gt;

&lt;p&gt;On the bright side, the battery playback time of 7 hours beats out plenty of pricier options, including Apple’s AirPods Pro and Google’s latest Pixel Buds. The case also offers about 4 more charges, while IPX4 water resistance allows these earbuds to stand up to the basic elements (though you won’t want to dunk them).&lt;/p&gt;

&lt;p&gt;Overall the X5 isn’t bad, but there are better options for your money out there.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Compact case&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Solid features&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Sound quality underwhelms&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5lgFZ1Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--KEyTwG2u--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602250112358/889028126936.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5lgFZ1Gd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--KEyTwG2u--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602250112358/889028126936.jpg" alt="Monoprice TrueWireless Plus"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#monoprice-truewireless-plus"&gt;
  &lt;/a&gt;
  Monoprice TrueWireless Plus
&lt;/h1&gt;

&lt;p&gt;The Monoprice True Wireless Plus are also mid-level performers. They’re absolutely tiny, which can be both good and bad. You barely notice them in your ears, but unless you absolutely get a perfect fit, they’re not going to be in your ears for long. Making matters worse, there are only 3 tip sets available in the box, fewer than most of the other headphones we reviewed.&lt;/p&gt;

&lt;p&gt;For as small as they are, they produce prodigious bass. Snare drums are accentuated, but there’s not much in the way of high frequencies.&lt;/p&gt;

&lt;p&gt;The case is one of the only ones we've seen recently that does not have a modern USB-C connection, sporting instead micro-USB. However, it has wireless charging, which is nice to see at this price point. By far our favorite aspect is that when the earbuds are charging, they’re slightly visible through the translucent cover, looking like two glowing eyeballs.&lt;/p&gt;

&lt;p&gt;Battery life was a bit less than the 9 hours they claimed, at a little over 7. The case should offer at least 3 more charges. When it comes to water resistance, they offer the common IPX5 protection, so you can splash them without worry, but they can't be dunked.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Tiny&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Case offers wireless charging&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Interesting design&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Unimpressive sound quality&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Few fit options&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K944x8sq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--jibxGpn_--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1591631300670/Sony-WF-XB700.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K944x8sq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--jibxGpn_--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1591631300670/Sony-WF-XB700.jpg" alt="Sony WF-XB700"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sony-wfxb700"&gt;
  &lt;/a&gt;
  Sony WF-XB700
&lt;/h1&gt;

&lt;p&gt;The Sony WF-XB700 true wireless earbuds are an entry-level option within Sony's prodigious headphone lineup, offering a taste of Sony's sought-after sound design and quality construction at a more affordable price than high-end business like the WF-1000XM3.&lt;/p&gt;

&lt;p&gt;So what's the catch here? Basically, you're not getting high-tech features like noise-canceling, adjustable EQ, or any of the fancier features you'll find on the higher-end models. What you are getting is a workout-friendly pair of truly wireless earbuds with an accessible, very bass-forward sound profile. If the lack of features, limited controls, and inability to integrate these with Sony's Headphones Connect app isn't your cup of tea, you may have to spend a little more.&lt;/p&gt;

&lt;p&gt;The WF-XB700 isn't perfect, but no product is. If you've been wanting to dip your toes into true wireless earbuds but don't want to risk buying something that might sound terrible or break after a couple of months, Sony's WF-XB700 should be on your radar.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Workout ready&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Impressive playback time&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;No customization&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A bit bulky&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OhNbn9_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--ANyHSuKK--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602251417394/Skullcandy-Sesh-Evo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OhNbn9_s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--ANyHSuKK--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602251417394/Skullcandy-Sesh-Evo.jpg" alt="Skullcandy Sesh Evo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#skullcandy-sesh-evo"&gt;
  &lt;/a&gt;
  Skullcandy Sesh Evo
&lt;/h1&gt;

&lt;p&gt;The Sesh Evo are among the smallest pairs of earbuds we tested. They feel a bit more secure than options like the tiny Monoprice True Wireless, but not by much. Like the Monoprice, they don’t come with wings, but the design might offer those with smaller ears an OK fit as the earbud itself looks like it would fill smaller ears.&lt;/p&gt;

&lt;p&gt;Our review sample, and their case, were a color Skullcandy calls “Bleached Blue” and it was a lovely alternative to the black-only options from most contenders we tested. They’re also available in green, red, and of course, black.&lt;/p&gt;

&lt;p&gt;Battery life is among the lowest in their class, even slightly worse than cheaper picks like the JLab Go Air. They claim 5 hours, and that’s what we measured. The case should offer 4-5 additional charges. The sound quality was tied with the Treblab X5 for the worst of the bunch. The bass is bloated and lacks definition, while at the same time there’s too much treble. Not a great mix.&lt;/p&gt;

&lt;p&gt;There are three EQ settings, including Music, Movie, and Podcast. The movie actually improves the bass a little, but makes the treble slightly worse, so it’s a bit of a wash. Podcast mostly accentuates the midrange, as you'd expect. They are IP55 rated, meaning they're secure against basic dust ingress and light jets of water.&lt;/p&gt;

&lt;p&gt;One last cool feature: they have a built-in Tile to help make them easier to find.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Available in lovely colors&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Compact&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Poor sound&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Only 3 tip options&lt;/p&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w7SNWQN1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--vUA9KJ9H--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602250784487/OnePlus-Buds.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w7SNWQN1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reviewed-com-res.cloudinary.com/image/fetch/s--vUA9KJ9H--/b_white%2Cc_fit%2Ccs_srgb%2Cf_auto%2Cfl_progressive.strip_profile%2Cg_center%2Ch_150%2Cq_auto%2Cw_375/https://reviewed-production.s3.amazonaws.com/1602250784487/OnePlus-Buds.jpg" alt="OnePlus Buds"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#oneplus-buds"&gt;
  &lt;/a&gt;
  OnePlus Buds
&lt;/h1&gt;

&lt;p&gt;The Apple AirPods are... wait hang on a minute… the OnePlus True Wireless is like a celebrity impersonator who doesn’t say they’re that specific actor, but still signs autographs if someone thinks they are. To say that the OnePlus TW are similar to the AirPods would be putting it mildly. It’d be putting it mildly to say it’s putting it mildly. Every person seeing you wearing these will think you have AirPods. If that’s what you want, without spending Apple money, go for it.&lt;/p&gt;

&lt;p&gt;They’re not great, however. Their smooth plastic and overall design never feel secure in your ears. The first night we got there, we put them on to listen to something while washing dishes. In less than a minute, the left one fell out, hit the counter, and plunked into the water. They’re IPX4 rated, meaning you shouldn’t dunk them, but they didn’t suffer any ill effects from our unexpected experiment. We don’t recommend trying it, however.&lt;/p&gt;

&lt;p&gt;If you don’t like the fit there’s no recourse. There are no tips or wings since they just hang off your ears like the “real” fruit ones. The sound is fairly balanced, better than you might expect given the hang-off-your-ears design, but is nothing impressive. Battery life is 7 hours, and the case should give you 3 additional charges.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pros"&gt;
  &lt;/a&gt;
  Pros
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;AirPods style&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Better playback time than AirPods&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Balanced sound&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Prone to falling out&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unoriginal design&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#my-thoughts-on-air-pods"&gt;
  &lt;/a&gt;
  My thoughts on air pods!
&lt;/h1&gt;

&lt;p&gt;I too love the AirPods - I had the o.g. and then bought a pair of AP2s last fall b/c the originals were not working well anymore and I'm also a huge fan of what they provide. I've been exclusively on Bluetooth headphones since like 2016 or so - with the first Jaybirds and went through various versions up to the Kickstarter for a pair of 'truly wireless' headphones - but those were also just not good enough in the end.&lt;/p&gt;

&lt;p&gt;The AirPods have hit the mark for me since the beginning, tiny, solid sound, solid battery,"ok" mic, etc. That said - I tried my dad's AirPods on Christmas and I was IMMEDIATELY sold and ended up getting a pair before the end of my trip home. They hold in my ears, something the others never did, have ANC which I'd never had and is awesome (even if it may not be as amazing as a pair of over-the-ears or whatever), the mic is similarly good. I think they get much louder (perhaps that's just the seal), the sound and bass is significantly improved - I personally would absolutely recommend them!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tips-and-tricks-with-airpods"&gt;
  &lt;/a&gt;
  Tips and Tricks with AirPods
&lt;/h1&gt;

&lt;p&gt;Best Apple AirPod Features You Might Not Know About…&lt;br&gt;
airpods&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-the-easy-way-to-pair-with-your-iphone"&gt;
  &lt;/a&gt;
  1) The Easy Way To Pair With Your iPhone
&lt;/h1&gt;

&lt;p&gt;Apple has several ways you can pair your new AirPods to your iPhone, but most people look over the easiest. Simply make sure they are charged and inside the charging case. Then place the charging case with your AirPods inside right near your iPhone. Open the case and the iPhone will automatically detect the nearby AirPods. It will ask you to tap a button on the iPhone screen to pair them. That’s it.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-easily-check-out-how-much-battery-life-is-left"&gt;
  &lt;/a&gt;
  2) Easily Check Out How Much Battery Life Is Left
&lt;/h1&gt;

&lt;p&gt;There’s actually TWO easy ways to check out your AirPod battery life remaining. The first tip here involves using the case right near your iPhone. Simply open the case and a battery status menu will appear on your iPhone telling you how much juice each AirPod has left.&lt;/p&gt;

&lt;p&gt;The second tip to do this involves simply ASKING your AirPods how much juice they have left. Simply double tp an AirPod and say “battery percentage” and Siri will tell you how much life your AirPods have left before they run out of power.&lt;/p&gt;

&lt;p&gt;Apple AirPods 2 Release Date-5&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-pair-airpods-with-android-phones"&gt;
  &lt;/a&gt;
  3) Pair AirPods With Android Phones
&lt;/h1&gt;

&lt;p&gt;While the big wireless feature of the AirPods is Apple’s new Apple H1 chip, which is how it connects to iOS devices, the AirPods also have your standard Bluetooth technology. This means that they can connect to any device that supports Bluetooth audio technology—like Android phones and Windows PCs.&lt;/p&gt;

&lt;p&gt;To do this, open the charging case and then press and hold the button until the indicator light blinks white. Now on your Android device, go into Bluetooth settings and tell it to connect to the AirPods via Bluetooth.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-charge-your-airpods-from-other-devices"&gt;
  &lt;/a&gt;
  4) Charge Your AirPods From Other Devices
&lt;/h1&gt;

&lt;p&gt;You normally charge the AirPods by placing them in the charging case and then plugging in a Lightning cable into it via a power source. However, you can also give juice to the case by docking it in other Lightning charging devices like iPhone docks and wireless speakers with built-in dock slots. Sure, this isn’t something you’ll be doing often, but if you’re in a pinch for some juice and the only thing around is a speaker dock with a Lightning port, well, you gotta do what you gotta do.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-change-the-name-of-your-airpods"&gt;
  &lt;/a&gt;
  5) Change The Name Of Your AirPods
&lt;/h1&gt;

&lt;p&gt;You can name your AirPods anything you want. While this is kind of pointless if you only have one pair, it’s helpful if you have more than one pair—so you can distinguish between the two—or if you live in a household where everyone has their own pair.&lt;/p&gt;

&lt;p&gt;To change the name of your AirPods on the iPhone go to Settings &amp;gt; Bluetooth and then tap your AirPods from the list of devices. On the next screen type in any name you want.&lt;/p&gt;

&lt;p&gt;airpods&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-disable-automatic-ear-detection"&gt;
  &lt;/a&gt;
  6) Disable Automatic Ear Detection
&lt;/h1&gt;

&lt;p&gt;AirPods are smart enough to know when they are in your ears and turn on. Automatic ear detection, when enabled, allows your iPhone to know when you’ve taken your AirPods out of your ears and thus pauses the music you were listening to. However, you can disable this feature by going to Settings &amp;gt; Bluetooth and then tap your AirPods from the list of devices. Now set automatic ear detection to “Off”.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#7-change-the-double-tap-settings"&gt;
  &lt;/a&gt;
  7) Change The Double Tap Settings
&lt;/h1&gt;

&lt;p&gt;The AirPods also have features that let you tap them to activate other actions. But you can change the action a double tap initiates. On the iPhone go to Settings &amp;gt; Bluetooth and then tap your AirPods from the list of devices. Now tap the double tap setting for both the Left and the Right AirPods and select your chosen actions.&lt;/p&gt;

&lt;p&gt;Your options include double-tapping an AirPod to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;activate Siri&lt;/li&gt;
&lt;li&gt;play/pause audio&lt;/li&gt;
&lt;li&gt;skip to the next track&lt;/li&gt;
&lt;li&gt;skip to the previous track
or you can also disable double-tap so it doesn’t do anything
And remember, you can set double-tap settings to be different for the Left and Right AirPods.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#8-assign-the-mic-to-a-specific-airpod"&gt;
  &lt;/a&gt;
  8) Assign The Mic To A Specific AirPod
&lt;/h1&gt;

&lt;p&gt;Each AirPod has a built-in mic and the devices are smart enough to know which mic to enable if you only put one AirPod in your ear. However, if you want to disable this feature for some reason go to Settings &amp;gt; Bluetooth and then tap your AirPods from the list of devices to find the option to set only a specific AirPod as your mic.&lt;/p&gt;

&lt;p&gt;A reason you might want to choose to only allow one AirPod (either your left or your right) to be your mic could be for privacy issues. For example, if you only have your left AirPod set to be your mic, then you can be assured if you remove your left AirPod from your ear, no one will hear what you’re saying even if you leave the right AirPod in.&lt;/p&gt;

&lt;p&gt;Apple AirPods 2 Release Date-5&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#9-ask-your-airpods-anything-you-want"&gt;
  &lt;/a&gt;
  9) Ask Your AirPods Anything You Want
&lt;/h1&gt;

&lt;p&gt;Of course, the big new feature of Apple’s second-generation AirPods is “Hey, Siri” support. You activate this simply by saying “Hey, Siri” and they asking whatever you want. If you aren’t a Siri fan, the new AirPods might change the way you think about Apple’s assistant. “Hey, Siri” support makes using Siri much more natural since you don’t need to take out your phone to interact with Siri.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#10-airpod-voice-commands-you-need-to-know"&gt;
  &lt;/a&gt;
  10) AirPod Voice Commands You Need To Know
&lt;/h1&gt;

&lt;p&gt;The latest generation AirPods lets you interact with them using a ton of voice commands. This is thanks to its “Hey Siri” support. Here are some of our favorite voice commands. To use them, simply say, “Hey Siri…” and then follow with any of the following commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;“Skip this song.”&lt;/li&gt;
&lt;li&gt;“Play my Party playlist.”&lt;/li&gt;
&lt;li&gt;“How is the battery on my AirPods?”&lt;/li&gt;
&lt;li&gt;“Turn down (or up) the volume.”&lt;/li&gt;
&lt;li&gt;“Raise the volume 25 percent.”&lt;/li&gt;
&lt;li&gt;“Call [name of contact].”&lt;/li&gt;
&lt;li&gt;“Pause music.”&lt;/li&gt;
&lt;li&gt;“Play country music.”&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclution"&gt;
  &lt;/a&gt;
  conclution
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#follow-for-more-content"&gt;
  &lt;/a&gt;
  Follow for more content!
&lt;/h3&gt;

&lt;p&gt;I put a lot of time into this, don't let this post flop. :D&lt;br&gt;
let me know if you're getting a pair. Or tell me your own experiences with any of the headphones listed above.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>audio</category>
      <category>cheap</category>
      <category>facts</category>
    </item>
    <item>
      <title>Cracking a Captcha with Tesseract.js</title>
      <author>Karey Higuera</author>
      <pubDate>Thu, 13 May 2021 22:02:39 +0000</pubDate>
      <link>https://dev.to/kbravh/cracking-a-captcha-with-tesseract-js-jm</link>
      <guid>https://dev.to/kbravh/cracking-a-captcha-with-tesseract-js-jm</guid>
      <description>&lt;p&gt;I wanted to automate some tasks on a site that I frequently use, but every now and then the site presents a captcha. I figured that with a little cleanup of the captcha images, I'd be able to use OCR (Optical Character Recognition) to read the captchas and provide the correct answer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem-with-captchas-and-ocr"&gt;
  &lt;/a&gt;
  The Problem with Captchas and OCR
&lt;/h2&gt;

&lt;p&gt;The captcha images on the site consist of a string of five characters with various colored lines drawn through. For example, look at these three captchas.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oRoB0PBm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2lrb7pawambl1rcq1tc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oRoB0PBm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2lrb7pawambl1rcq1tc.png" alt="A captcha of five characters with lines drawn through them."&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q05y74sj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfp0ykmmdr17jxlg7vlt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q05y74sj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfp0ykmmdr17jxlg7vlt.png" alt="Another captcha of five characters with lines drawn through them."&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FfCx3trt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6302bp8j62pht0gqmo3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FfCx3trt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6302bp8j62pht0gqmo3.png" alt="A third captcha of five characters with lines drawn through them."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The letters aren't distorted and they're on a nice white background, so we shouldn't have any problem dropping them straight into an OCR program, right? Well, not quite. The problem is that these little lines are &lt;em&gt;very&lt;/em&gt; effective at thwarting OCR engines because the majority of those programs rely on edge detection to identify each letter. &lt;a href="https://tesseract.projectnaptha.com/"&gt;Tesseract.js&lt;/a&gt; is one of the most popular OCR libraries for JavaScript. Let's visit their site and try our captcha on their demo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eU5c9_qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58qm9qll68by2vrgwebl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eU5c9_qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58qm9qll68by2vrgwebl.png" alt="Tesseract.js reads our captcha incorrectly"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instead of reading &lt;code&gt;FCWVw&lt;/code&gt;, Tesseract produced &lt;code&gt;ECYA w-&lt;/code&gt;; this is definitely not what we're looking for. We're going to have to clean up this image so that it doesn't confuse Tesseract.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#cleaning-up-the-captchas"&gt;
  &lt;/a&gt;
  Cleaning up the Captchas
&lt;/h2&gt;

&lt;p&gt;We need to get rid of these lines if we want Tesseract.js to stand a fair chance at reading our image. Thankfully, there's an interesting attribute of these captchas that will help us: all of the characters are a solid color, and each line is a different color. These colors change every time a new captcha is produced.&lt;/p&gt;

&lt;p&gt;So, if we break our png down pixel by pixel and count how many of each color pixel appears, we can find:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Which color appears most often (the white background)&lt;/li&gt;
&lt;li&gt;Which color appears second most often (our characters)&lt;/li&gt;
&lt;li&gt;The rest of the colors (the lines)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;
  &lt;a href="#identifying-the-characters"&gt;
  &lt;/a&gt;
  Identifying the characters
&lt;/h3&gt;

&lt;p&gt;Let's pull in a png library that will help us analyze the image and then break down our color count.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PNG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pngjs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;PNG&lt;/span&gt;

&lt;span class="c1"&gt;// open image&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;captcha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pngImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;PNG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;captcha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pngImage&lt;/span&gt;

&lt;span class="c1"&gt;// create a dictionary to keep track of our pixel counts&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;colorOccurrences&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="c1"&gt;// rows&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// columns&lt;/span&gt;
    &lt;span class="cm"&gt;/**
     * Each pixel is a set of 4 values:
     * Red, Green, Blue, Alpha (transparency)
     */&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// create a string of the R-G-B color values&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
    &lt;span class="c1"&gt;// we can ignore white since it will always be the background&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;255-255-255&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="c1"&gt;// increase the count by 1 (or set it to 1 if the color wasn't there yet)&lt;/span&gt;
      &lt;span class="nx"&gt;colorOccurrences&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colorOccurrences&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We first open our image as a file and pass it in to the PNG library, which gives us a &lt;code&gt;pngImage&lt;/code&gt; object. This object holds all the information about our image, but we're only concerned with 3 parts: the &lt;code&gt;height&lt;/code&gt;, the &lt;code&gt;width&lt;/code&gt;, and the &lt;code&gt;data&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; is a 1-dimensional array of all the color information that makes up our image. Each pixel is represented by 4 values from 0-255: Red, Green, Blue, and Alpha (the transparency). So for each round of the loop, we need to multiply our index by 4 to jump to the next pixel.&lt;/p&gt;

&lt;p&gt;For example, let's look at a 2x2 (4 pixel) image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YEGOPcCE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8wh2twlqksww4wolblr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YEGOPcCE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8wh2twlqksww4wolblr.png" alt="A 2x2 square made up of 4 different colors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; array for this image would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* R     G     B     A */&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="mi"&gt;252&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;215&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// pixel 1 (0,0)&lt;/span&gt;
  &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="mi"&gt;252&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// pixel 2 (0,1)&lt;/span&gt;
  &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;    &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;239&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// pixel 3 (1,0)&lt;/span&gt;
  &lt;span class="mi"&gt;126&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;   &lt;span class="mi"&gt;252&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="mi"&gt;255&lt;/span&gt;  &lt;span class="c1"&gt;// pixel 4 (1,1)&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have our data, we can loop through each pixel and grab the RGB values (we don't need the alpha value). We'll store the RGB value as a string like &lt;code&gt;R-G-B&lt;/code&gt; to use it as a key in our &lt;code&gt;colorOccurrences&lt;/code&gt; object, then keep a count of how may pixels of each color occur. We'll just ignore the white pixels since it's the background color.&lt;/p&gt;

&lt;p&gt;Finally, we can find our color that appeared most frequently. This will correspond to the color of our characters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// grab all of the colors in the pattern [R-G-B, # of occurrences]&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;entries&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colorOccurrences&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;// find the color that occurred most&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;highestColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;highColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;currentColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;highColor&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;currentColor&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;highColor&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;currentColor&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="c1"&gt;// grab just the R-G-B as an array, we don't need the number of occurrences&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;highestColorRGB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;highestColor&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we know what color our characters are, we can preserve those while removing the unnecessary noise from the picture.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#removing-the-lines"&gt;
  &lt;/a&gt;
  Removing the lines
&lt;/h3&gt;

&lt;p&gt;Since we know which colors we want to keep (the white background and whatever color our characters are), we can loop back through our image and repaint any pixel we see that doesn't match.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;      &lt;span class="c1"&gt;// rows&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="c1"&gt;// columns&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// grab the RGB values of the current pixel&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;RGB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

    &lt;span class="c1"&gt;// ignore white pixels so we don't alter the background&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;RGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;RGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;RGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * We need to be a little forgiving when checking the colors.
   * Sometimes individual pixels are only 1-3 points of R, G, or B away,
   * especially on the edges of the characters.
   */&lt;/span&gt;
  &lt;span class="c1"&gt;// find how far each pixel color channel is from the color of the characters&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;highestColorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;colorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
      &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;highestColorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;colorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
      &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;highestColorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;colorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;// if any color channel is more than 3 points away&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="c1"&gt;// paint the pixel...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We set up a loop again, row by row and column by column, and grab the RGB values of the current pixel. We'll ignore any white pixel because we want to leave the background alone. Then, we check to see if the current pixel's color matches the color of the characters.&lt;/p&gt;

&lt;p&gt;We have to leave a little leeway for each color check; sometimes there's a discrepancy of 1-3 points on each color channel between adjacent pixels, especially around the edges of the characters. So the main color might be &lt;code&gt;10-30-59&lt;/code&gt;, but one of the pixels on the character might be &lt;code&gt;11-29-57&lt;/code&gt;. We'll let these close pixels slide by unscathed. If we see that any color channel is more than 3 points off, we'll paint the pixel to get rid of the line. But what color do we paint the pixel?&lt;/p&gt;

&lt;p&gt;The first option that comes to mind is to just erase the lines by painting each pixel white like the background.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// if any color channel is more than 3 points away&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will produce the following image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f99_V-3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8q7ezu3czklp76c6zih.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f99_V-3c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8q7ezu3czklp76c6zih.png" alt="The captcha with lines painted white"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Not too bad! Let's see what happens when we pass this to Tesseract.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qgQ364s9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yh91ngsvz3jypdn254ib.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qgQ364s9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yh91ngsvz3jypdn254ib.png" alt="Tesseract does a very poor reading of our captcha."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Uh oh. 😕 This time, Tesseract read &lt;code&gt;VAN FCW\Vw&lt;/code&gt;. While the captcha looks a lot cleaner to us, we've actually created a lot of new edges which confuses Tesseract. Let's take a different approach.&lt;/p&gt;

&lt;p&gt;Instead of painting the pixels white and leaving holes in our characters, we can try to fill in the gaps instead. The simplest thing we can do is just paint our current pixel the same color as the one above it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// if any color channel is more than 3 points away&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="c1"&gt;// Grab the pixel that is one row up (y-1)&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;aboveIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;

  &lt;span class="c1"&gt;// Paint our pixel to match the pixel above&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;aboveIndex&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;aboveIndex&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;aboveIndex&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this new technique, we get:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S6oESEkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qplm1t5y9dpifhgcgm4j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S6oESEkN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qplm1t5y9dpifhgcgm4j.png" alt="Our cleaned captcha with the lines filled in."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We still get some odd drips and artifacts, but this looks a lot better! Let's see what Tesseract thinks about our new version.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVhRzbq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnadx6dbpncf96itcgkk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZVhRzbq2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nnadx6dbpncf96itcgkk.png" alt="Tesseract perfectly decodes our captcha"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A perfect success! By eliminating extra edges and solidifying our characters, we've cleaned up the captcha enough to give Tesseract a fighting chance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#future-improvements"&gt;
  &lt;/a&gt;
  Future Improvements
&lt;/h2&gt;

&lt;p&gt;I had a little over 800 of the captchas saved, so I decided to run both the white-line method and the full-character method against all of them to see the difference in their effectiveness.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J5aIjDOr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96kohfxeyzlgave6z4bv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J5aIjDOr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96kohfxeyzlgave6z4bv.png" alt="A bar chart comparing the effectiveness of the white-line method versus the full-character method"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The full-character method had a 69% success rate, compared to a 26% success rate for the white-line method. Based on the data I gathered from these tests, it's clear that Tesseract.js makes some common misreads:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;8&lt;/code&gt; as &lt;code&gt;g&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;9&lt;/code&gt; as &lt;code&gt;o&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Q&lt;/code&gt; as &lt;code&gt;O&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;J&lt;/code&gt; as &lt;code&gt;]&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;J&lt;/code&gt; as &lt;code&gt;1&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;q&lt;/code&gt; as &lt;code&gt;g&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a future improvement, we could &lt;a href="https://towardsdatascience.com/simple-ocr-with-tesseract-a4341e4564b6"&gt;provide our own training data&lt;/a&gt; to Tesseract.js based on the specific font used in these captchas! That would alleviate the confusion that occurs between these similar characters.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;By cleaning up the lines crossing through our captcha, we were able to use the Tesseract.js OCR library to decode the captchas and allow for a bit more automation. And who doesn't love some more automation in their life?&lt;/p&gt;

&lt;p&gt;Here's the full code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;PNG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pngjs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;PNG&lt;/span&gt;

&lt;span class="c1"&gt;// open image&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;captcha&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pngImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;PNG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;captcha&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pngImage&lt;/span&gt;

&lt;span class="c1"&gt;// create a dictionary to keep track of our pixel counts&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;colorOccurrences&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  &lt;span class="c1"&gt;// rows&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c1"&gt;// columns&lt;/span&gt;
    &lt;span class="cm"&gt;/**
     * Each pixel is a set of 4 values:
     * Red, Green, Blue, Alpha (transparency)
     */&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// create a string of the R-G-B color values&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
    &lt;span class="c1"&gt;// we can ignore white since it will always be the background&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;255-255-255&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="c1"&gt;// increase the count by 1 (or set it to 1 if the color wasn't there yet)&lt;/span&gt;
      &lt;span class="nx"&gt;colorOccurrences&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colorOccurrences&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;      &lt;span class="c1"&gt;// rows&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;   &lt;span class="c1"&gt;// columns&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// grab the RGB values of the current pixel&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;RGB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

    &lt;span class="c1"&gt;// ignore white pixels so we don't alter the background&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;RGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;RGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;RGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;continue&lt;/span&gt;

  &lt;span class="cm"&gt;/**
   * We need to be a little forgiving when checking the colors.
   * Sometimes individual pixels are only 1-3 points of R, G, or B away,
   * especially on the edges of the characters.
   */&lt;/span&gt;
  &lt;span class="c1"&gt;// find how far each pixel color channel is from the color of the characters&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;highestColorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;colorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
      &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;highestColorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;colorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;
      &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;highestColorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;colorRGB&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;// if any color channel is more than 3 points away&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="c1"&gt;// if any color channel is more than 3 points away&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;green&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;blue&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="c1"&gt;// Grab the pixel that is one row up (y-1)&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;aboveIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;

        &lt;span class="c1"&gt;// Paint our pixel to match the pixel above&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;aboveIndex&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;aboveIndex&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;aboveIndex&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// save new image&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imageBuffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;PNG&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;pngImage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;writeFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`captcha-clean.png`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;imageBuffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>node</category>
    </item>
    <item>
      <title>Moving from Shopify Plus to Microservices-Based Commerce</title>
      <author>James Konik</author>
      <pubDate>Thu, 13 May 2021 22:01:27 +0000</pubDate>
      <link>https://dev.to/fabric_commerce/moving-from-shopify-plus-to-microservices-based-commerce-ccd</link>
      <guid>https://dev.to/fabric_commerce/moving-from-shopify-plus-to-microservices-based-commerce-ccd</guid>
      <description>&lt;p&gt;If you’re selling products online, there’s a good chance you’re using a one-size-fits-all platform. These platforms offer many advantages but they also have limitations. If you want to move beyond these limitations, &lt;a href="https://resources.fabric.inc/blog/answers/ecommerce-microservices-architecture"&gt;microservices&lt;/a&gt; can help.&lt;/p&gt;

&lt;p&gt;Shopify Plus is a one-size-fits-all platform that allows you to use headless systems while retaining most of its features. So if you already have a Shopify Plus setup, you can keep the frontend and migrate the backend to a microservices-based alternative for more flexibility.&lt;/p&gt;

&lt;p&gt;In this post, we'll explain why businesses are moving away from monolithic e-commerce platforms like Shopify Plus and how they are doing it from a high level.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We've written before about migrating away from &lt;a href="https://resources.fabric.inc/blog/answers/enterprise-ecommerce-platforms"&gt;classic e-commerce monoliths&lt;/a&gt; like &lt;a href="https://resources.fabric.inc/blog/salesforce-commerce-to-microservices"&gt;Salesforce Demandware&lt;/a&gt;. As you'll see, many of the same concepts and migration practices apply to modern monoliths like Shopify Plus.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-microservices"&gt;
  &lt;/a&gt;
  Why Microservices?
&lt;/h2&gt;

&lt;p&gt;Shopify is a fantastic system in many ways, but if you use it exclusively you have to accept its limitations. Moving all or part of your system away from it can avoid these problems. Let’s look at some of the areas microservices can improve.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Shopify has &lt;a href="https://techcrunch.com/2020/09/23/shopify-data-merchant-breach/"&gt;been in the news&lt;/a&gt; regarding data theft before. Managing your services means you’re free to address those concerns and implement additional security.&lt;/li&gt;
&lt;li&gt;  Its fraud protections aren’t as comprehensive as some services, so moving to a different payment system that matches your requirements can give you and your customers peace of mind.&lt;/li&gt;
&lt;li&gt;  Working with APIs means you can control the data flow in and out of your backend. It also means you can develop it incrementally while building on what you already have. That means you don’t have to reinvent the wheel when you want to offer something new on the frontend.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#technical-limitations"&gt;
  &lt;/a&gt;
  Technical Limitations
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  One issue with Shopify Plus is its &lt;a href="https://paulnrogers.com/shopify-plus-international-multi-store/"&gt;lack of multi-store architecture&lt;/a&gt;, though this feature has been promised in the future and some plugins may help with it. If you can’t wait, you can build a backend that can handle data across all your outlets.&lt;/li&gt;
&lt;li&gt;  Shopify Plus's SEO approach is good but hard to modify. Using a custom frontend can allow you to change the URL structure, the robots.txt file, and give you better control over your subdomains.&lt;/li&gt;
&lt;li&gt;  It’s a similar situation with Shopify’s checkout. It’s hard to customize, leaving you with a fixed approach. What’s there isn’t bad; it’s just that you can’t deviate from it significantly or add specific features easily.&lt;/li&gt;
&lt;li&gt;  Shopify Plus can also slow down as you add features; its &lt;a href="https://weareuv.com/shopify-vs-salesforce-commerce-cloud-which-one-should-i-choose/"&gt;plugins don’t have to be certified&lt;/a&gt;. Handling services independently means you can ensure they continue to perform at the level you require.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#flexibility"&gt;
  &lt;/a&gt;
  Flexibility
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;  Shopify allows you to get up and running quickly, but you’re tied into the way it does things. With microservices, you can take a &lt;a href="https://resources.fabric.inc/blog/glossary/modular-commerce"&gt;modular approach&lt;/a&gt;, get the essentials in place, and add whatever you need on top.&lt;/li&gt;
&lt;li&gt;  Shopify apps aren’t always geared to work well internationally and can cost a lot if you have multiple local versions of your store. Data for multiple stores is also tricky to combine.&lt;/li&gt;
&lt;li&gt;  Shopify payments can have restrictions for products, as well as countries and currencies. You need a local business and bank account in each territory you have a store. That makes changing and expanding difficult.&lt;/li&gt;
&lt;li&gt;  With microservices, you can add an API query doing whatever it is you need—you aren’t limited to what Shopify offers. If you need to support a new feature, you can do that.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#replacing-shopify-plus"&gt;
  &lt;/a&gt;
  Replacing Shopify Plus
&lt;/h2&gt;

&lt;p&gt;You can take advantage of the modularity of microservices to move from Shopify bit by bit. Identify what you can benefit most from replacing and build it. If you do that repeatedly, you can move away from Shopify step by step, improving your service with minimal disruption.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-decide-where-to-start-the-migration"&gt;
  &lt;/a&gt;
  Step 1: Decide Where to Start the Migration
&lt;/h3&gt;

&lt;p&gt;Let’s look at some of Shopify Plus’s services and decide what to implement using microservices.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#product-information-management-pim"&gt;
  &lt;/a&gt;
  Product Information Management (PIM)
&lt;/h4&gt;

&lt;p&gt;Your Shopify installation will include lots of product-specific data. Moving this to a separate backend, with an API letting you retrieve, modify, and create new products, is a great place to start.&lt;/p&gt;

&lt;p&gt;Decoupling this data from Shopify means you can use it on any of the new channels you create. It gives you complete control over what’s shared, and the formatting and structure can be defined however you like.&lt;/p&gt;

&lt;p&gt;Fabric has a &lt;a href="https://fabric.inc/pim"&gt;prebuilt PIM system&lt;/a&gt; that will help you make the transition quickly and easily and offers you plenty of flexibility. As well as helping you get set up, Fabric can also help with data migration.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#order-management-system-oms"&gt;
  &lt;/a&gt;
  Order Management System (OMS)
&lt;/h4&gt;

&lt;p&gt;Your order management system includes your user’s shopping cart as well as payments. You have to smoothly pass the data on to your payment handler and delivery setup while allowing users to track and potentially cancel the whole process. There’s a lot involved, and everything needs to run like clockwork.&lt;/p&gt;

&lt;p&gt;Taking control of this area means you can evolve it over time and perfect everything, adding features for the various frontend services you want to use while ensuring the core functionality is rock-solid.&lt;/p&gt;

&lt;p&gt;Fabric can help with this, too. Its &lt;a href="https://fabric.inc/oms"&gt;OMS&lt;/a&gt; promises a friction-free experience that can drive customer satisfaction and make life easier for everyone involved in your order and delivery chain.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#other-supporting-services"&gt;
  &lt;/a&gt;
  Other Supporting Services
&lt;/h4&gt;

&lt;p&gt;Shopify Plus offers a whole suite of features and services. Some of these will matter to you more than others—priorities differ from business to business. When picking a feature to include, you should consider what you’d like to make available to channels other than Shopify and which areas have the most scope for improvement.&lt;/p&gt;

&lt;p&gt;These might include store management, customer personalization, or analytics. Take a look at the features &lt;a href="https://fabric.inc/products"&gt;Fabric offers&lt;/a&gt; to see what it can do for you in those areas.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-build-a-middle-layer"&gt;
  &lt;/a&gt;
  Step 2: Build a Middle Layer
&lt;/h3&gt;

&lt;p&gt;To integrate your new services with your Shopify installation, you can set up an &lt;a href="https://www.shopify.com/partners/blog/shopify-webhooks-how-to-prep-your-app-this-black-friday-cyber-monday"&gt;API gateway&lt;/a&gt;. That will let you reroute requests to your new backend.&lt;/p&gt;

&lt;p&gt;You could also adopt a &lt;a href="https://resources.fabric.inc/blog/ecommerce-service-mesh"&gt;service mesh&lt;/a&gt; model, which handles communication between your application components and lets you manage data flow between your existing application and external microservices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6yt0ko0Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/E-commerce%2520microservice%2520architecture%2520with%2520service%2520mesh.png%3Fwidth%3D886%26name%3DE-commerce%2520microservice%2520architecture%2520with%2520service%2520mesh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6yt0ko0Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://resources.fabric.inc/hs-fs/hubfs/E-commerce%2520microservice%2520architecture%2520with%2520service%2520mesh.png%3Fwidth%3D886%26name%3DE-commerce%2520microservice%2520architecture%2520with%2520service%2520mesh.png" alt="E-commerce microservice architecture with service mesh"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With a new layer in place, you can look at replacing services one by one, thoroughly testing at each stage, and ensuring the new process is fully integrated before moving on to the next.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-migrate-data-from-shopify-plus-to-microservices"&gt;
  &lt;/a&gt;
  Step 3: Migrate Data from Shopify Plus to Microservices
&lt;/h3&gt;

&lt;p&gt;To move data from your old system, you can export it to a CSV file, then use JavaScript to shift it across to your new microservice. You can do this as you go, create a service, copy your data into it, and then adjust your API gateway to handle future requests from Shopify.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#exporting-data-from-shopify-plus"&gt;
  &lt;/a&gt;
  Exporting Data from Shopify Plus
&lt;/h4&gt;

&lt;p&gt;Shopify Plus has a simple export system, letting you easily create a CSV file. Its &lt;a href="https://help.shopify.com/en/manual/shopify-admin/duplicate-store"&gt;documentation explains&lt;/a&gt; how to do this for a product, customer, and order data, among other things. You can find an &lt;a href="https://help.shopify.com/en/manual/products/import-export/using-csv"&gt;example file here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Shopify product data includes the following fields:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Required but can be blank&lt;/th&gt;
&lt;th&gt;Optional&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Handle&lt;/td&gt;
&lt;td&gt;Body&lt;/td&gt;
&lt;td&gt;SEO Title&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Title&lt;/td&gt;
&lt;td&gt;Vendor&lt;/td&gt;
&lt;td&gt;SEO Description&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Published&lt;/td&gt;
&lt;td&gt;Type&lt;/td&gt;
&lt;td&gt;Google shopping metafields&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Status&lt;/td&gt;
&lt;td&gt;Tags&lt;/td&gt;
&lt;td&gt;Cost per item&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Image Src&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Image Position&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Image Alt Text&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Gift Card&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;There are more fields for products that have additional options and variants. &lt;a href="https://help.shopify.com/en/manual/products/import-export/using-csv"&gt;Consult the documentation for details&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Your new system won’t have to use the same fields, so you can pick and choose which are relevant to you and which, if any, are required in your system. That kind of flexibility is one of the advantages of working with microservices. You can have a compact, faster system or one that contains whatever extra information you need.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#importing-data-into-microservices"&gt;
  &lt;/a&gt;
  Importing Data into Microservices
&lt;/h4&gt;

&lt;p&gt;You can use JavaScript to transfer your data into your new system. Here’s an example showing how to import data using the latest version of &lt;a href="https://aws.amazon.com/sqs/"&gt;Amazon SQS&lt;/a&gt;. You can find more details in &lt;a href="https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/sqs-examples-send-receive-messages.html"&gt;Amazon’s documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;SQSClient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SendMessageCommand&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-sdk/client-sqs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;REGION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;us-east-1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//or whatever your region is&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="na"&gt;DelaySeconds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;MessageAttributes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;Title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;DataType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;String&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;StringValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sneakers&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;Vendor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;DataType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;String&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;StringValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Comfy Sneakers Inc&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;InventoryQty&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;DataType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;StringValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;146&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;Value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;DataType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;StringValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;79.99&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;MessageBody&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Product Data.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="na"&gt;QueueUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SQS_QUEUE_URL&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;//replace this with your queue URL&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sqs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SQSClient&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;REGION&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;sqs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SendMessageCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Success, product sent. MessageID:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MessageId&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-4-test-and-repeat"&gt;
  &lt;/a&gt;
  Step 4: Test and Repeat
&lt;/h3&gt;

&lt;p&gt;As you expand your microservices and move functionality away from Shopify, it’s essential to test thoroughly. This should be done at every stage. You need to have a rigorous testing system to ensure everything is still working smoothly, including the area being moved and everything else.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#advantages-of-the-iterative-approach"&gt;
  &lt;/a&gt;
  Advantages of the Iterative Approach
&lt;/h4&gt;

&lt;p&gt;Taking a section by section approach means you can focus on a particular service and know where to look should any problems arise. That makes issues easier to fix and the overall adjustment smoother.&lt;/p&gt;

&lt;p&gt;In addition to finding errors, it’s helpful to have metrics that measure the speed of transactions. If you can connect these to sales and customer retention, all the better. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Shopify Plus is an excellent platform with much to like about it, but the world is moving away from one-size-fits-all software toward more flexible, customized solutions.&lt;/p&gt;

&lt;p&gt;Building services yourself is very achievable, but there is plenty of support available so you don’t have to go it alone entirely. An existing solution can save you time and money, and, as these services mature, the argument for that route gets stronger.&lt;/p&gt;

&lt;p&gt;Consider taking advantage of prebuilt or customized microservices with &lt;a href="http://fabric.inc/"&gt;Fabric&lt;/a&gt; to quickly build&lt;/p&gt;

</description>
      <category>microservices</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How To: CSS Table Swipe Interaction</title>
      <author>Eduardo Ferreira</author>
      <pubDate>Thu, 13 May 2021 21:59:47 +0000</pubDate>
      <link>https://dev.to/eduferfer/how-to-css-table-swipe-interaction-3ih3</link>
      <guid>https://dev.to/eduferfer/how-to-css-table-swipe-interaction-3ih3</guid>
      <description>&lt;p&gt;Table rows or list items often have actions associated to them, such as deleting, sharing and editing. When designing for touch devices, designers can take advantage of swipe gestures to allow users to quickly perform common actions without having to navigate to a different page or open drawers or modal dialogs.&lt;/p&gt;

&lt;p&gt;Gesture based interactions are supported by native mobile languages, but can be tricky to implement in HTML/CSS/JS and are often over-done with excessive use of JavaScript, which can cause low performance and chunky interactions.&lt;/p&gt;

&lt;p&gt;In this post, I will walk through 3 simple steps to build a swipe gesture interaction using solely HTML, CSS and a little bit of JS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note: the demos in this post should be used on touch devices.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;— &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#basic-requirements"&gt;
  &lt;/a&gt;
  Basic requirements
&lt;/h2&gt;

&lt;p&gt;Let’s start by defining what we want to build. Our swipe snippet should allow the user to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use touch to swipe a table row either right or left.&lt;/li&gt;
&lt;li&gt;Unveil an action (icon and coloured background) when the user swipes.&lt;/li&gt;
&lt;li&gt;Automatically restore scroll position when the user releases the finger.&lt;/li&gt;
&lt;li&gt;Trigger an action when the user releases the finger (in case they have swiped far enough).&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#1-setting-the-swipeable-element"&gt;
  &lt;/a&gt;
  1. Setting the swipe-able element
&lt;/h2&gt;

&lt;p&gt;As a first step, let’s create our swipe-able element and add basic styles to it. To style it, it is given a class named &lt;code&gt;.swipe-element&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To set the stage for the swipe interaction, we can wrap the element around a div with the class name of &lt;code&gt;.swipe-container&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To reduce the visual clutter, the &lt;code&gt;.swipe-container&lt;/code&gt; should have the scrollbar hidden.&lt;/li&gt;
&lt;li&gt;To automatically restore scroll position, the &lt;code&gt;.swipe-container&lt;/code&gt; should have &lt;code&gt;scroll-snap-type: x mandatory&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;To indicate which element should be in focus when automatically restoring the scroll position, the &lt;code&gt;swipe-element&lt;/code&gt; should have &lt;code&gt;scroll-snap-align: start&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe src="https://stackblitz.com/edit/css-swipe-1?embed=1&amp;amp;&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-adding-the-left-and-right-actions"&gt;
  &lt;/a&gt;
  2. Adding the left and right actions
&lt;/h2&gt;

&lt;p&gt;With the container and scrolling logic in place, the next step is to add the actions.&lt;/p&gt;

&lt;p&gt;The icons used in this example are from the Material Icons font.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As a wrapper for the icon, the &lt;code&gt;.action&lt;/code&gt; div, as well as the previously added &lt;code&gt;.swipe-element&lt;/code&gt; should have &lt;code&gt;min-width: 100%&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;i&lt;/code&gt; icon should have &lt;code&gt;position: sticky&lt;/code&gt; to ensure it is always visible as soon as the user starts swiping.&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;.right&lt;/code&gt; action should have &lt;code&gt;justify-content: flex-end&lt;/code&gt; to make the icon stick to the right side.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe src="https://stackblitz.com/edit/css-swipe-2?embed=1&amp;amp;&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-triggering-the-action"&gt;
  &lt;/a&gt;
  3. Triggering the action
&lt;/h2&gt;

&lt;p&gt;When the user releases the finger, our element should check how far the user has swiped and trigger an action in case they have done it far enough.&lt;/p&gt;

&lt;p&gt;There should be a distinction between left and right swipe, so the application can handle them independently.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To start, an &lt;code&gt;ontouchend&lt;/code&gt; event listener should be added to the &lt;code&gt;.swipe-container&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;In a function called &lt;code&gt;handleSwipe()&lt;/code&gt;, we should first define the &lt;code&gt;minDistance&lt;/code&gt; the user should swipe for the action to be triggered.&lt;/li&gt;
&lt;li&gt;After that, we should calculate the &lt;code&gt;swipeDistance&lt;/code&gt; by simply subtracting the container’s &lt;code&gt;clientWidth&lt;/code&gt; from its &lt;code&gt;scrollLeft&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;Negative values represent a left swipe, while positive ones indicate a right one. In case the &lt;code&gt;swipeDistance&lt;/code&gt; is smaller than &lt;code&gt;minDistance * -1&lt;/code&gt;, we should trigger the left action, and if it is greater than &lt;code&gt;minDistance&lt;/code&gt;, the right action should be triggered instead.&lt;/li&gt;
&lt;li&gt;In case the user hasn’t swiped either left or right further than the minDistance, nothing should be triggered.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe src="https://stackblitz.com/edit/css-swipe-3?embed=1&amp;amp;&amp;amp;" width="100%" height="500"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Using standard CSS selectors, we have built a swipe-able element that can be used for enhancing the user experience of lists and tables on mobile devices.&lt;/p&gt;

&lt;p&gt;With some tweaks and a little bit of imagination, this snippet can be modified or extended to show only one action or indicating visually whether the user has swiped far enough, for example.&lt;/p&gt;

&lt;p&gt;This component is also available as a plug-and-play in the &lt;a href="https://kor-ui.com/components/swipe-actions"&gt;Kor UI library&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>javascript</category>
      <category>ux</category>
    </item>
    <item>
      <title>ClassCord, verified student-focused discord bot made in Python</title>
      <author>Alex Craviotto</author>
      <pubDate>Thu, 13 May 2021 21:51:36 +0000</pubDate>
      <link>https://dev.to/alexcraviotto/classcord-verified-student-focused-discord-bot-made-in-python-35b9</link>
      <guid>https://dev.to/alexcraviotto/classcord-verified-student-focused-discord-bot-made-in-python-35b9</guid>
      <description>&lt;p&gt;A year ago, when I started programming and gained some concepts I decided to create a discord bot to improve my skills. &lt;br&gt;
I decided to create a bot focused on students and teachers and I didn't think at all that it would be used on so many servers!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-what-is-classcord"&gt;
  &lt;/a&gt;
  But... what is classcord?
&lt;/h3&gt;

&lt;p&gt;Classcord is a bot designed to focus on the world of education and improve productivity. With classcord we adapt discord to these areas so that any user without high technological knowledge can use it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-functions-does-it-have"&gt;
  &lt;/a&gt;
  What functions does it have?
&lt;/h3&gt;

&lt;p&gt;Currently it has functions such as a study tracking, the pomodoro method with access to statistics, a reminder system, events...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-have-i-learned-from-this-project"&gt;
  &lt;/a&gt;
  What have I learned from this project?
&lt;/h3&gt;

&lt;p&gt;Thanks to the development of classcord I have improved a lot, as it has made me take my first steps in deploys and configurations of VPS, databases, among others... as well as improvement in git.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#want-to-try-classcord"&gt;
  &lt;/a&gt;
  Want to try ClassCord?
&lt;/h3&gt;

&lt;p&gt;If you want to try ClassCord here is the &lt;a href="https://classcord.me/"&gt;website&lt;/a&gt; to add it!&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#are-you-interested-in-contributing-to-the-project"&gt;
  &lt;/a&gt;
  Are you interested in contributing to the project?
&lt;/h3&gt;

&lt;p&gt;Currently the classcord code is private, but the website is open source so anyone can participate in improving it. I am totally inexperienced in web so any contribution would be great for me! Here is the repo: &lt;a href="https://github.com/classcord/classcord-website"&gt;https://github.com/classcord/classcord-website&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>discord</category>
      <category>beginners</category>
      <category>bot</category>
    </item>
    <item>
      <title>Build React and Next applications most fast and efficiently</title>
      <author>Alexis Guzman</author>
      <pubDate>Thu, 13 May 2021 21:49:48 +0000</pubDate>
      <link>https://dev.to/_codax_/build-react-and-next-applications-most-fast-and-efficiently-5i4</link>
      <guid>https://dev.to/_codax_/build-react-and-next-applications-most-fast-and-efficiently-5i4</guid>
      <description>&lt;p&gt;Hello, world. Usually, developers spent a lot of time installing dependencies, creating folders, etc, before having our initial configuration and start working on the application.&lt;/p&gt;

&lt;p&gt;The goal of ReexJs CLI is that we can start working on our application without worrying about the initial configuration.&lt;/p&gt;

&lt;p&gt;With &lt;a href="https://github.com/a12989x/reexjs-cli/"&gt;ReexJs&lt;/a&gt; we can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a &lt;a href="https://reactjs.org/"&gt;react.js&lt;/a&gt; or &lt;a href="https://nextjs.org/"&gt;next.js&lt;/a&gt; app.&lt;/li&gt;
&lt;li&gt;Create folders with a list of predefined lists and add custom folders.&lt;/li&gt;
&lt;li&gt;Create routes if your choose react or pages for next.&lt;/li&gt;
&lt;li&gt;Install normal dependencies and dev dependencies.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node Js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;An active internet connection for CLI to work.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works
&lt;/h2&gt;

&lt;p&gt;ReexJs use &lt;code&gt;npx create-react-app &amp;lt;appname&amp;gt;&lt;/code&gt; or &lt;code&gt;npx create-next-app &amp;lt;appname&amp;gt;&lt;/code&gt; and &lt;code&gt;spawn&lt;/code&gt; from &lt;code&gt;child_process&lt;/code&gt; to run one of the two commands.&lt;/p&gt;

&lt;p&gt;To create the folders use &lt;code&gt;mkdirSync&lt;/code&gt; from &lt;code&gt;fs&lt;/code&gt;, and depending on if you previously choose react.js or next.js folders will be created in different paths, for react.js these will be created in &lt;code&gt;src/&lt;/code&gt;, and for next.js folder will be created in the root path &lt;code&gt;/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally to install the dependencies &lt;code&gt;spawn&lt;/code&gt; is also used when installing the framework. &lt;code&gt;npm i &amp;lt;dependencies&amp;gt;&lt;/code&gt; for normal dependencies and &lt;code&gt;npm i -D &amp;lt;devDependencies&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-use-it"&gt;
  &lt;/a&gt;
  How to use it
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Install &lt;a href="https://github.com/a12989x/reexjs-cli/"&gt;ReexJs&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/"&gt;Npm&lt;/a&gt;: &lt;code&gt;npx reexjs-cli&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://yarnpkg.com/"&gt;Yarn&lt;/a&gt;: &lt;code&gt;yarn reexjs-cli&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Choose the app name. By default is &lt;em&gt;reexjs-app.&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Choose the framework between react.js and next.js.&lt;/li&gt;
&lt;li&gt;Select predefined folders and add custom folders.&lt;/li&gt;
&lt;li&gt;Write your normal dependencies and dev dependencies.&lt;/li&gt;
&lt;li&gt;Finally change the directory and run &lt;code&gt;npm start&lt;/code&gt; or &lt;code&gt;npm run dev&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rIxMHRKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cknqqh4l4bbkwvc0nxs.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rIxMHRKJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cknqqh4l4bbkwvc0nxs.gif" alt="intro"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;ReexJs can save us time and start working on our application without worrying about the initial configuration,&lt;/p&gt;

&lt;p&gt;So take a ☕ and relax.&lt;/p&gt;

&lt;p&gt;If you have an idea to improve the application or any type of suggestion please leave it below in the comments thanks.&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
