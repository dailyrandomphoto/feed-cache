<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Callback Hell and How to Rescue it ? </title>
      <author>Nikhil Upadhyay</author>
      <pubDate>Fri, 04 Jun 2021 14:24:22 +0000</pubDate>
      <link>https://dev.to/jerrycode06/callback-hell-and-how-to-rescue-it-ggj</link>
      <guid>https://dev.to/jerrycode06/callback-hell-and-how-to-rescue-it-ggj</guid>
      <description>&lt;p&gt;For understanding the concept of callbacks and callback hell, I think you should know about &lt;strong&gt;Synchronous&lt;/strong&gt; and &lt;strong&gt;Asynchronous&lt;/strong&gt; programming in JavaScript(or any other language). Let's see a quick view on these topics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#synchronous-programming"&gt;
  &lt;/a&gt;
  Synchronous Programming
&lt;/h2&gt;

&lt;p&gt;It is a way of programming in which you can perform only one task at a time and when one task is completed we move to another task. This is what we called &lt;strong&gt;Blocking Code&lt;/strong&gt; operation because you need to wait for a task to finish to move to the next one.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Program Starts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;getSum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Program Ends&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code snippet, you see code will execute line by line and when an operation on one line is finished then we move to the next line so this is just a simple example of the synchronous way of programming and we do this in our daily life of programming.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#asynchronous-programming"&gt;
  &lt;/a&gt;
  Asynchronous Programming
&lt;/h2&gt;

&lt;p&gt;Asynchronous programming allows you to perform that work without blocking the main process(or thread). It’s often related to parallelization, the art of performing independent tasks in parallel, that is achieved by using asynchronous programming.&lt;br&gt;
In asynchronous operation, you can move to another task before the previous one finishes, and this way you can deal with multiple requests simultaneously.&lt;br&gt;
In JavaScript, a good example of asynchronous programming is &lt;code&gt;setTimeout&lt;/code&gt; function, let's see a quick example -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Program Starts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Reading an user from database...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Program Ends&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, the output of this program will look like -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Program Starts
Program Ends
Reading an user from database...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Pretty cool, right? Our program didn't wait for &lt;code&gt;setTimeout&lt;/code&gt; to finish, just goes for the next line, then came back to the function and prints the output. This is what we called &lt;strong&gt;Non Blocking&lt;/strong&gt; code. You can read more about it &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Introducing"&gt;here&lt;/a&gt;. &lt;br&gt;
There are three design patterns to deal with asynchronous programming - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Callbacks&lt;/li&gt;
&lt;li&gt;Promises&lt;/li&gt;
&lt;li&gt;async/await (just a syntactical sugar of promises)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#callbacks"&gt;
  &lt;/a&gt;
  Callbacks
&lt;/h2&gt;

&lt;p&gt;Callbacks is a great way of handling asynchronous behavior in javascript. In JavaScript, everything behaves like an object so functions have the type of object and like any other object (strings, arrays, etc) you can pass functions as an argument to other functions and that's the idea of callback.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Reading an user from database...&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;githubUsername&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jerrycode06&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You see, we are passing function as an argument to &lt;code&gt;getUser&lt;/code&gt; function and it calls inside the &lt;code&gt;getUser&lt;/code&gt; function, output will look like -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Reading an user from database...
User {id: 1, githubUsername: 'jerrycode06'}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#callback-hell"&gt;
  &lt;/a&gt;
  Callback Hell
&lt;/h2&gt;

&lt;p&gt;In above code snippet, we are getting user with github username now let's suppose you also want repositories for that username and also commits in the specific repository so what can we do with the callback approach -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;User&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;getRepositories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;githubUsername&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;getCommits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;commits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;commits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="c1"&gt;// Callback Hell ("-_-)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You are seeing now a nesting of functions here and code also looks scary and this is what we called &lt;strong&gt;Callback Hell&lt;/strong&gt;. For a big application it creates more nesting.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c0aEZX7m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8euo2n7twvgh3dbuatd.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c0aEZX7m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8euo2n7twvgh3dbuatd.jpeg" alt="Callback Hell"&gt;&lt;/a&gt;&lt;br&gt;
To avoid this, we will see now &lt;strong&gt;Promises&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#promises"&gt;
  &lt;/a&gt;
  Promises
&lt;/h2&gt;

&lt;p&gt;Promises are the alternative to callbacks for delivering the results of asynchronous computation. They require more effort from implementors of asynchronous functions, but provide several benefits for users of those functions. They are more readable as compared to callbacks and promises has many applications like &lt;code&gt;fetch&lt;/code&gt; in javascript , &lt;code&gt;mongoose&lt;/code&gt; operations and so on. Let's see how to implement promises with above example. Actually, promises have four states - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fulfilled - The action relating to the promise succeeded&lt;/li&gt;
&lt;li&gt;rejected - The action relating to the promise failed&lt;/li&gt;
&lt;li&gt;pending - Hasn't fulfilled or rejected yet&lt;/li&gt;
&lt;li&gt;settled - Has fulfilled or rejected
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9RZVd5G6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p60413nfwvkuezgtzzcx.png" alt="Promises"&gt;
First we have to create promises to understand this -
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Reading from a database....&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;githubUsername&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jerrycode06&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getRepositories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Extracting Repositories for &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;....`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;repo1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;repo2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;repo3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
      &lt;span class="c1"&gt;// reject(new Error("Error occured in repositories"));&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getCommits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Extracting Commits for &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;repo&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;....&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;commits&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We created three functions, instead of passing callback function we are now returning a Promise which has two argument &lt;strong&gt;resolve&lt;/strong&gt; and &lt;strong&gt;reject&lt;/strong&gt;. If everything worked, call &lt;code&gt;resolve&lt;/code&gt; otherwise call &lt;code&gt;reject&lt;/code&gt;. Let's see how to use promises -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Replace Callback with Promises to avoid callback hell&lt;/span&gt;
&lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;getRepositories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;githubUsername&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;getCommits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;commits&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Commits&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;commits&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;More readable, Isn't it? Using arrow functions made this less complex than using simple functions. We have avoided nesting of functions and reduce the complexity of code (callback approach) and that's how promises work. You can deep-dive more about promises &lt;a href="https://web.dev/promises"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#asyncawait"&gt;
  &lt;/a&gt;
  async/await
&lt;/h2&gt;

&lt;p&gt;It is supposed to be the better way to write promises and it helps us keep our code simple and clean.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3YrHpAnh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3s7u6tt9iqs9k80dtdkn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3YrHpAnh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3s7u6tt9iqs9k80dtdkn.png" alt="Aync-Await"&gt;&lt;/a&gt;&lt;br&gt;
All you have to do is write the word &lt;code&gt;async&lt;/code&gt; before any regular function and it becomes a promise. In other words &lt;code&gt;async/await&lt;/code&gt; is a syntactical sugar of using promises it means if you want to avoid chaining of &lt;code&gt;then()&lt;/code&gt; methods in promises, so you can use the &lt;code&gt;async/await&lt;/code&gt; approach but internally it also uses the chaining. &lt;br&gt;
Let's see how to implement it with above example -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Async- await approach&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;displayCommits&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;repos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getRepositories&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;githubUsername&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;commits&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getCommits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;repos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;commits&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;displayCommit&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, it is more readable than using promises above. Every time we use &lt;code&gt;await&lt;/code&gt;, we need to decorate this with a function with &lt;code&gt;async&lt;/code&gt;. Like promises, we don't have &lt;code&gt;catch()&lt;/code&gt; method here so that's why we are using &lt;code&gt;try-catch&lt;/code&gt; block for the error handling.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article we've seen - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Synchronous vs Asynchronous&lt;/li&gt;
&lt;li&gt;Callbacks and Callback Hell&lt;/li&gt;
&lt;li&gt;Avoid Callback hell with promises and async/await
I like the async/await approach the most but sometimes we should the promises approach to deal with async behaviour. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this long post! I hope it helped you understand these topics  a little better. If you liked this post, then please do give me a few ❤️ and share it if you can. You are welcome to give any suggestions in comments and ask anything!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Technical Guide, Part 1: Compiling Hermes for Apple Platforms</title>
      <author>Callstack Engineers</author>
      <pubDate>Fri, 04 Jun 2021 14:19:38 +0000</pubDate>
      <link>https://dev.to/callstackengineers/technical-guide-part-1-compiling-hermes-for-apple-platforms-pea</link>
      <guid>https://dev.to/callstackengineers/technical-guide-part-1-compiling-hermes-for-apple-platforms-pea</guid>
      <description>&lt;p&gt;Months of our intense work with teams at Facebook and Microsoft resulted in bringing Hermes to iOS. We are happy to share the details of the process in a series of articles. This article is the third in the series and the first to focus on the technical journey:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://callstack.com/blog/bringing-hermes-to-ios-in-react-native/?utm_campaign=Hermes_MB&amp;amp;utm_source=dev.to&amp;amp;utm_medium=article&amp;amp;utm_content=article_distribution_dev.to"&gt;Bringing Hermes to iOS in React Native 0.64&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://callstack.com/blog/hermes-performance-on-ios/?utm_campaign=Hermes_MB&amp;amp;utm_source=dev.to&amp;amp;utm_medium=article&amp;amp;utm_content=hermes_performance_on_ios"&gt;Hermes Performance on iOS: How it Compares with JSC&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Technical Guide, Part 1: Compiling Hermes Engine for Apple Platforms (you are here)&lt;/li&gt;
&lt;li&gt;Technical Guide, Part 2: Integrating Hermes with React Native&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You are going to find out how we brought Hermes to iOS and how you can implement it yourself. We provide a detailed guide to Hermes implementation based on the actual work done. So, if you want to learn more about how different core pieces play together, keep reading!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nTIT_iTR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.callstack.com/wp/2021/04/12154852/hermes-illustrations-new_graf2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nTIT_iTR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.callstack.com/wp/2021/04/12154852/hermes-illustrations-new_graf2.png" alt="Compiling Hermes for Apple Platforms"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#compiling-hermes-for-apple-platforms"&gt;
  &lt;/a&gt;
  Compiling Hermes for Apple platforms
&lt;/h2&gt;

&lt;p&gt;Before we talk about &lt;a href="https://callstack.com/blog/bringing-hermes-to-ios-in-react-native/?utm_campaign=Hermes_MB&amp;amp;utm_source=dev.to&amp;amp;utm_medium=article&amp;amp;utm_content=article_distribution_dev.to"&gt;bringing Hermes to React Native on iOS&lt;/a&gt;, we actually need to compile it for Apple platforms. Hermes is written in C++ and compiled with cmake to existing platforms, so at a glance, it sounds like fun!&lt;/p&gt;

&lt;p&gt;Just to be on the safe side, let me explain that C++ is one of these cross-platform languages that can run literally everywhere. For example, you can write native modules in C++ for Android and on iOS (hey, the Objective-C is not just similar in its name). Thanks to that, seeing a task of compiling Hermes on Apple devices didn’t sound that scary when I first started playing around that topic.&lt;/p&gt;

&lt;p&gt;Thankfully, I didn’t have to start from the middle of nowhere (but I have to admit that playing around with cmake in general was quite an experience!). Folks at Microsoft have been working on bringing Hermes to Mac for their React Native macOS project. The work was done primarily by Eloy Durán (&lt;a href="https://twitter.com/alloy"&gt;@alloy&lt;/a&gt;), who sent a &lt;a href="https://github.com/facebook/hermes/pull/285"&gt;PR to Hermes&lt;/a&gt; with the base for my work.&lt;/p&gt;

&lt;p&gt;On a high level, this PR enables cmake to package Hermes in a dynamic library so that it can be used on a macOS platform. To make the integration with Apple ecosystem smoother, the PR adds a special Podspec so that you don’t have to manually import a framework file to your project. You can let CocoaPods do that magic for you instead.&lt;/p&gt;

&lt;p&gt;At this point, I was amazed by the comprehensiveness of cmake and the number of out-of-the-box features it provides. If you look at the changes in the aforementioned PR, they’re all related to the build system. It’s mind blowing to see that such an advanced project like a JavaScript engine can be run on macOS by just flipping a few flags, i.e. without changing the business logic of the engine itself.&lt;/p&gt;

&lt;p&gt;That’s good for me and all of you planning to work on C++ bits in the future! With that in mind, let’s move onto the iOS part.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#on-the-way-to-ios"&gt;
  &lt;/a&gt;
  On the way to iOS
&lt;/h3&gt;

&lt;p&gt;Having Hermes running on macOS was a good indicator that it might work on iOS as well. In case you want a quick version – &lt;a href="https://github.com/facebook/hermes/pull/332"&gt;here’s my PR with all the changes&lt;/a&gt;. If you’re curious about all the steps and a bit of technical explanations, carry on. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1"&gt;
  &lt;/a&gt;
  #1
&lt;/h4&gt;

&lt;p&gt;First thing I had to do was to tell cmake that it is no longer building Hermes for macOS, but for iOS. This can be achieved by setting a special variable &lt;em&gt;CMAKE_OSX_SYSROOT&lt;/em&gt; to configure the build pipeline to target specific SDK.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;set(CMAKE_OSX_SYSROOT ${HERMES_APPLE_TARGET_PLATFORM})&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I ended up going straight with a variable. We will need to build Hermes for every platform and architecture separately, which means building it a couple of times. Having a variable definitely helps – we can change its value depending on what we are targeting.&lt;/p&gt;

&lt;p&gt;The list of all platforms and architectures should be aligned with what React Native supports right now – otherwise, developers may run into issues on certain devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here’s a breakdown of the platforms together with their architectures.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hpOgbzdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.callstack.com/wp/2021/04/12165904/hermes-illustrations-new_table-768x327.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hpOgbzdc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://static.callstack.com/wp/2021/04/12165904/hermes-illustrations-new_table-768x327.png" alt="Graph showing platforms and their architectures"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2"&gt;
  &lt;/a&gt;
  #2
&lt;/h4&gt;

&lt;p&gt;Another important thing was to tell cmake where to actually output generated files for every platform. &lt;/p&gt;

&lt;p&gt;By default, the library would be placed under a &lt;em&gt;Library/Frameworks/hermes.framework&lt;/em&gt; path within a build folder. Unfortunately, that would result in one build process overwriting the artifacts from the previous one.&lt;/p&gt;

&lt;p&gt;Since I wanted to keep the artifacts for every platform, I ended up tweaking the location where the files are placed:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;install(DIRECTORY ${DSYM_PATH} DESTINATION&lt;br&gt;
Library/Frameworks/${HERMES_APPLE_TARGET_PLATFORM})&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As a result, the files would be now placed under &lt;em&gt;Library/Frameworks/iphonesimulator&lt;/em&gt; or &lt;em&gt;Library/Frameworks/iphoneos&lt;/em&gt;, depending on whether we’re building for a device or a simulator.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3"&gt;
  &lt;/a&gt;
  #3
&lt;/h4&gt;

&lt;p&gt;Now that the platform part was sorted, it was time to look at the architectures. The idea was to precompile Hermes in all possible configurations so that you don’t have to run it from source. That would be not only quite a time consuming process, but also prone to many errors, due to different configurations of our development machines. &lt;/p&gt;

&lt;p&gt;To do so, for each invocation of cmake, I ended up setting &lt;em&gt;CMAKE_OSX_ARCHITECTURES&lt;/em&gt; with the right value for every platform. Looking at the table I have shared just a few paragraphs earlier, that would be &lt;em&gt;“armv7;armv7s;arm64”&lt;/em&gt; for iPhone and &lt;em&gt;“x86_64;i386”&lt;/em&gt; for iPhone Simulator.&lt;/p&gt;

&lt;p&gt;Since that variable can be passed as a command line argument straight to &lt;em&gt;cmake&lt;/em&gt;, there is no custom code that I had to do to make it work.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4"&gt;
  &lt;/a&gt;
  #4
&lt;/h4&gt;

&lt;p&gt;The last thing to set was the deployment target – the version that we are targeting and is the minimum supported by Hermes. Again, that one is supported by cmake out of the box, so no changes here.&lt;/p&gt;

&lt;p&gt;The value of &lt;em&gt;CMAKE_OSX_DEPLOYMENT_TARGET&lt;/em&gt; was set equally to “10.0” for both simulator and the device.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#buildappleframework"&gt;
  &lt;/a&gt;
  build_apple_framework
&lt;/h4&gt;

&lt;p&gt;After testing the combinations a few times, I packaged them in a helper Bash function, called &lt;a href="https://github.com/facebook/hermes/pull/332/files#diff-fd14cc61bbe3b438fac38e3127d158db690bcbfc0f6539ac7c31ba64fb941ee0R45"&gt;&lt;em&gt;build_apple_framework&lt;/em&gt;&lt;/a&gt;, that takes these settings and tells CMake what to do. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;build_apple_framework "iphoneos" "armv7;armv7s;arm64" "10.0"&lt;br&gt;
build_apple_framework "iphonesimulator" "x86_64;i386" "10.0"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Thanks to that, it becomes trivial to control what platforms and architectures Hermes supports on iOS.&lt;/p&gt;

&lt;p&gt;Bonus points: it can be used to build macOS version too, so I went ahead and updated &lt;a href="https://twitter.com/alloy"&gt;@alloy&lt;/a&gt; part too:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;build_apple_framework "macosx" "x86_64" "10.0"&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#hermesframework-files"&gt;
  &lt;/a&gt;
  hermes.framework files
&lt;/h4&gt;

&lt;p&gt;After building Hermes with CMake for all the combinations, I ended up with two hermes.framework files: for iPhone supporting &lt;em&gt;armv7, armv7s and arm64&lt;/em&gt; as well as for iPhone Simulator supporting &lt;em&gt;x86_64 and i386&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It would be a poor developer experience if you had to change a &lt;em&gt;hermes.framework&lt;/em&gt; in your project depending on whether you run on a device or a simulator. It would definitely hinder your work if you had to manually replace the library in your project.&lt;/p&gt;

&lt;p&gt;Thankfully, there are &lt;em&gt;universal frameworks&lt;/em&gt;, in other words – frameworks that support more than a single platform. Simply put – it’s a way to combine two &lt;em&gt;hermes.framework&lt;/em&gt; into a single one!&lt;/p&gt;

&lt;p&gt;You can create one programmatically with a &lt;em&gt;lipo&lt;/em&gt; – a tool to create multi-architectural files. To generate a universal framework file, the invocation would look as follows:&lt;/p&gt;

&lt;p&gt;lipo -create -output&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Library/Frameworks/iphoneos/hermes.framework/hermes&lt;br&gt;
Library/Frameworks/iphoneos/hermes.framework/hermes&lt;br&gt;
Library/Frameworks/iphonesimulator/hermes.framework/hermes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To speed things up, I decided to merge all additional architectures into the iPhone binary. The first argument to &lt;em&gt;lipo&lt;/em&gt; is the destination, the following ones are input binaries that should be combined together.&lt;/p&gt;

&lt;p&gt;Just like before, I moved the logic into a Bash function, called &lt;a href="https://github.com/facebook/hermes/pull/332/files#diff-fd14cc61bbe3b438fac38e3127d158db690bcbfc0f6539ac7c31ba64fb941ee0R59"&gt;&lt;em&gt;create_universal_framework&lt;/em&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;create_universal_framework "iphoneos" "iphonesimulator"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Again, such an approach allows us to easily control the contents of the final hermes.framework file.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#last-but-not-least"&gt;
  &lt;/a&gt;
  Last but not least
&lt;/h4&gt;

&lt;p&gt;The last piece was to update the Hermes.podspec created by @alloy to add iOS support.&lt;/p&gt;

&lt;p&gt;That required &lt;a href="https://github.com/facebook/hermes/pull/332/files#diff-423a7fb98745ae2cebb93241df2785476007e731ff755dd7bee844b4afcfcd51R29-R30"&gt;changing &lt;em&gt;spec.vendored_frameworks&lt;/em&gt; to &lt;em&gt;spec.osx.vendored_frameworks&lt;/em&gt; and &lt;em&gt;spec.ios.vendored_frameworks&lt;/em&gt;&lt;/a&gt; to tell CocoaPods that this package contains frameworks for both macOS as well as iOS (note that macOS and iOS binaries can’t be merged into a single universal framework – they are separate).&lt;/p&gt;

&lt;p&gt;In other words, replacing this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spec.vendored_frameworks = "destroot/Library/Frameworks/hermes.framework"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;spec.ios.vendored_frameworks = "destroot/Library/Frameworks/iphoneos/hermes.framework"&lt;br&gt;
spec.osx.vendored_frameworks = "destroot/Library/Frameworks/macosx/hermes.framework"&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#try-hermes-yourself"&gt;
  &lt;/a&gt;
  Try Hermes yourself
&lt;/h2&gt;

&lt;p&gt;The process of doing CMake reverse engineering took me three weeks, but it was worth it. I have learned a lot about build tools and this knowledge will be very useful in the future.&lt;/p&gt;

&lt;p&gt;You should definitely clone Hermes and play around with it. Follow our Hermes implementation guide and test it yourself. It’s quite easy to get started and working on a JavaScript engine can get really rewarding!&lt;/p&gt;

&lt;p&gt;If you want to learn more about Hermes, check our podcast: &lt;a href="https://callstack.com/podcasts/react-native-0-64-with-hermes-for-ios-ep-5?utm_campaign=Hermes_MB&amp;amp;utm_source=dev.to&amp;amp;utm_medium=article&amp;amp;utm_content=hermes_podcast"&gt;React Native 0.64 with Hermes for iOS&lt;/a&gt;. My guests, Microsoft and Facebook engineers, discuss the engine in detail!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=lbdIKZrOUMc"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KNplARtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/http://img.youtube.com/vi/lbdIKZrOUMc/0.jpg" alt="The React Native Show Podcast Episode 5 React Native 0.64 with Hermes for iOS"&gt;&lt;/a&gt;&lt;br&gt;
Click on the image to watch the podcast video. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What’s next?
&lt;/h2&gt;

&lt;p&gt;In the next part of this guide, “Integrating Hermes with React Native,” we will go through the steps that are needed to enable a custom engine to work with React Native, instead of the default JSC.&lt;/p&gt;

</description>
      <category>ios</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Glassmorphism Credit Card
With HTML &amp; CSS
</title>
      <author>Nikhil Bobade </author>
      <pubDate>Fri, 04 Jun 2021 13:58:37 +0000</pubDate>
      <link>https://dev.to/nikhil27b/glassmorphism-credit-card-with-html-css-4gdi</link>
      <guid>https://dev.to/nikhil27b/glassmorphism-credit-card-with-html-css-4gdi</guid>
      <description>&lt;p&gt;Hello&lt;/p&gt;

&lt;p&gt;Today I created a Amazing Glassmorphism Credit Card With HTML &amp;amp; CSS. This is simple Credit Card using flex and simple CSS also for Glassmorphism effect I use backdrop filter &amp;amp; blur. I hope you like this also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/xxqWMEL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 4th June 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 04 Jun 2021 13:47:34 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-4th-june-2021-4j1b</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-4th-june-2021-4j1b</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-signoz"&gt;
  &lt;/a&gt;
  1. SigNoz
&lt;/h3&gt;

&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. 🔥 🖥
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;p&gt;SigNoz helps developer monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;

&lt;p&gt;👉 You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;

&lt;p&gt;👉 You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
👇 Features:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Aggregate metrics on filtered traces. Eg, you can get error…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-aws-sdk-for-javascript-v3"&gt;
  &lt;/a&gt;
  2. AWS SDK for JavaScript v3
&lt;/h3&gt;

&lt;p&gt;Modularized AWS SDK for JavaScript. A separate package for each service. It also includes many frequently requested features, such as a first-class TypeScript support and a new middleware stack.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/aws"&gt;
        aws
      &lt;/a&gt; / &lt;a href="https://github.com/aws/aws-sdk-js-v3"&gt;
        aws-sdk-js-v3
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Modularized AWS SDK for JavaScript.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
AWS SDK for JavaScript v3&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/686d7ba7aaad1f08d631d7cd8bf3b4ff454b19cbc98b0d71a9eef38f69f31ada/68747470733a2f2f636f64656275696c642e75732d776573742d322e616d617a6f6e6177732e636f6d2f6261646765733f757569643d65794a6c626d4e79655842305a57524559585268496a6f694d6d7446616a5a57516d4e5562456869646e424b4e31566e636a52724e56493364304a5563467047575564335354683454334e33526e6c6a6331424d61454972596d39485532743459545631526c4531596d6c6e554739584d336c755930467463327442633078546556464a4d6b564f6132347750534973496d6c32554746795957316c644756795533426c59794936496c42444d446c365545524f4b31646c553168314f5763694c434a745958526c636d6c6862464e6c64464e6c636d6c68624349364d5830253344266272616e63683d6d61696e"&gt;&lt;img src="https://camo.githubusercontent.com/686d7ba7aaad1f08d631d7cd8bf3b4ff454b19cbc98b0d71a9eef38f69f31ada/68747470733a2f2f636f64656275696c642e75732d776573742d322e616d617a6f6e6177732e636f6d2f6261646765733f757569643d65794a6c626d4e79655842305a57524559585268496a6f694d6d7446616a5a57516d4e5562456869646e424b4e31566e636a52724e56493364304a5563467047575564335354683454334e33526e6c6a6331424d61454972596d39485532743459545631526c4531596d6c6e554739584d336c755930467463327442633078546556464a4d6b564f6132347750534973496d6c32554746795957316c644756795533426c59794936496c42444d446c365545524f4b31646c553168314f5763694c434a745958526c636d6c6862464e6c64464e6c636d6c68624349364d5830253344266272616e63683d6d61696e" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/aws/aws-sdk-js-v3" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc376b378eb39b68cc9c27ee4a277be0107336dcf6408dad4cae311382e9b373/68747470733a2f2f636f6465636f762e696f2f67682f6177732f6177732d73646b2d6a732d76332f6272616e63682f6d61696e2f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://camo.githubusercontent.com/48a41f43affa2e6253d6a48e0ee662ec53ce13c46442ac815e81d36b6e6b434d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64655f7374796c652d70726574746965722d6666363962342e737667" alt="code style: prettier"&gt;&lt;/a&gt;
&lt;a href="https://dependabot.com" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/43511dbdf96bc67056810d915c43aaaf2fa45bd0c366f54fe44981082b8ecc6e/68747470733a2f2f6170692e646570656e6461626f742e636f6d2f6261646765732f7374617475733f686f73743d676974687562267265706f3d6177732f6177732d73646b2d6a732d7633" alt="Dependabot Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;AWS SDK for JavaScript v3&lt;/strong&gt; is a rewrite of v2 with some great new features
As with version 2, it enables you to easily work with &lt;a href="https://aws.amazon.com/" rel="nofollow"&gt;Amazon Web Services&lt;/a&gt;
but has a &lt;a href="https://aws.amazon.com/blogs/developer/modular-packages-in-aws-sdk-for-javascript/" rel="nofollow"&gt;modular architecture&lt;/a&gt; with a separate package for each service
It also includes many frequently requested features, such as a &lt;a href="https://aws.amazon.com/blogs/developer/first-class-typescript-support-in-modular-aws-sdk-for-javascript/" rel="nofollow"&gt;first-class TypeScript support&lt;/a&gt;
and a &lt;a href="https://aws.amazon.com/blogs/developer/middleware-stack-modular-aws-sdk-js/" rel="nofollow"&gt;new middleware stack&lt;/a&gt;.
For more details, visit blog post on &lt;a href="https://aws.amazon.com/blogs/developer/modular-aws-sdk-for-javascript-is-now-generally-available/" rel="nofollow"&gt;general availability of Modular AWS SDK for JavaScript&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started with JavaScript SDK version 3, visit our
&lt;a href="https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/welcome.html" rel="nofollow"&gt;Developer Guide&lt;/a&gt;
or &lt;a href="https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/" rel="nofollow"&gt;API Reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you are starting a new project with AWS SDK for JavaScript v3, then you can refer
&lt;a href="https://github.com/aws-samples/aws-sdk-js-notes-app"&gt;aws-sdk-js-notes-app&lt;/a&gt; which shows examples of calling
multiple AWS Services in a note taking application
If you are migrating from v2 to v3, then you can visit our &lt;a href="https://github.com/aws-samples/aws-sdk-js-v3-workshop"&gt;self-guided workshop&lt;/a&gt;
which builds as basic version…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/aws/aws-sdk-js-v3"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#3-html5qrcode"&gt;
  &lt;/a&gt;
  3. Html5-QRCode
&lt;/h3&gt;

&lt;p&gt;A cross platform HTML5 QR code reader&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mebjas"&gt;
        mebjas
      &lt;/a&gt; / &lt;a href="https://github.com/mebjas/html5-qrcode"&gt;
        html5-qrcode
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A cross platform HTML5 QR code reader
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Html5-QRCode&lt;/h1&gt;
&lt;h2&gt;
(supports barcodes now :))&lt;/h2&gt;
&lt;p&gt;A cross-platform HTML5 QR code &amp;amp; barcode reader.&lt;/p&gt;
&lt;p&gt;Use this lightweight library to easily / quickly integrate QR code, bar code, and other common code scanning capabilities to your web application.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Supports easy scanning using an integrated webcam or camera in smartphones (Android / IOS).&lt;/li&gt;
&lt;li&gt;Supports scanning codes from files or default cameras on smartphones.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Recently Added&lt;/strong&gt;  Supports bar code scanning in various formats.&lt;/li&gt;
&lt;li&gt;Supports two kind of APIs
&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Html5QrcodeScanner&lt;/code&gt; - End-to-end scanner with UI, integrate with less than ten lines of code.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Html5Qrcode&lt;/code&gt; - Powerful set of APIs you can use to build your UI without worrying about camera setup, handling permissions, reading codes, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Support for scanning local files on the device is a new addition and helpful for the web browser which does not support inline web-camera access in smartphones. &lt;strong&gt;Note:&lt;/strong&gt; This doesn't upload files to any server - everything is done…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mebjas/html5-qrcode"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#4-peacock-for-visual-studio-code"&gt;
  &lt;/a&gt;
  4. Peacock for Visual Studio Code
&lt;/h3&gt;

&lt;p&gt;Subtly change the color of your Visual Studio Code workspace. Ideal when you have multiple VS Code instances, use VS Live Share, or use VS Code's Remote features, and you want to quickly identify your editor&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/johnpapa"&gt;
        johnpapa
      &lt;/a&gt; / &lt;a href="https://github.com/johnpapa/vscode-peacock"&gt;
        vscode-peacock
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Subtly change the color of your Visual Studio Code workspace. Ideal when you have multiple VS Code instances, use VS Live Share, or use VS Code's Remote features, and you want to quickly identify your editor.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Peacock for Visual Studio Code&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/johnpapa/vscode-peacock/main/resources/peacock-icon-small.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UXNGjhkt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/johnpapa/vscode-peacock/main/resources/peacock-icon-small.png" alt="Peacock Icon" title="Peacock"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Subtly change the color of your Visual Studio Code workspace. Ideal when you have multiple VS Code instances, use VS Live Share, or use VS Code's Remote features, and you want to quickly identify your editor.&lt;/p&gt;
&lt;p&gt;Read the extensive &lt;a href="https://www.peacockcode.dev" rel="nofollow"&gt;documentation here&lt;/a&gt; which includes a guide on how to use Peacock and a &lt;a href="https://papapeacockstorage.z13.web.core.windows.net/changelog/" rel="nofollow"&gt;changelog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.vscode-peacock&amp;amp;WT.mc_id=javascript-0000-jopapa" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c5f638e2548cf65674cb3174fd8270c26d738cd023f8555d3cb1c7dd70a7f067/68747470733a2f2f76736d61726b6574706c61636562616467652e61707068622e636f6d2f76657273696f6e2f6a6f686e706170612e7673636f64652d706561636f636b2e7376673f636f6c6f723d626c7565267374796c653d3f7374796c653d666f722d7468652d6261646765266c6f676f3d76697375616c2d73747564696f2d636f6465" alt="Badge for version for Visual Studio Code extension johnpapa.vscode-peacock"&gt;&lt;/a&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.vscode-peacock&amp;amp;WT.mc_id=javascript-0000-jopapa" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9028e399325158501a72e35693b22520fa0b16623b75ef9642fcead236f2519a/68747470733a2f2f76736d61726b6574706c61636562616467652e61707068622e636f6d2f696e7374616c6c732d73686f72742f6a6f686e706170612e7673636f64652d706561636f636b2e7376673f636f6c6f723d626c7565267374796c653d666c61742d737175617265" alt="Installs"&gt;&lt;/a&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.vscode-peacock&amp;amp;WT.mc_id=javascript-0000-jopapa" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e3b9617209868b0b21de306568fb8e852dd18f65b8bd08686f5fc5a0df4ade04/68747470733a2f2f76736d61726b6574706c61636562616467652e61707068622e636f6d2f646f776e6c6f6164732d73686f72742f6a6f686e706170612e7673636f64652d706561636f636b2e7376673f636f6c6f723d626c7565267374796c653d666c61742d737175617265" alt="Downloads"&gt;&lt;/a&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=johnpapa.vscode-peacock&amp;amp;WT.mc_id=javascript-0000-jopapa" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/35fb4b04467df584e41f4b523da09adbc7bbc07f40caff2833c3989c17760951/68747470733a2f2f76736d61726b6574706c61636562616467652e61707068622e636f6d2f726174696e672f6a6f686e706170612e7673636f64652d706561636f636b2e7376673f636f6c6f723d626c7565267374796c653d666c61742d737175617265" alt="Rating"&gt;&lt;/a&gt;
&lt;a href="https://visualstudio.microsoft.com/services/live-share/?WT.mc_id=javascript-0000-jopapa" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/7977d0cc7bad66e9ff347a0b7e6036077a8ecce58b35fc669a7fc71423306ebf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6976655f53686172652d656e61626c65642d3846383043462e7376673f636f6c6f723d626c7565267374796c653d666c61742d737175617265266c6f676f3d76697375616c2d73747564696f2d636f6465" alt="Live Share"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/18acf515121da0e22074a70d41fd94303d66ba83bba691dfcd0c815886ed9353/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d6f72616e67652e7376673f636f6c6f723d626c7565267374796c653d666c61742d737175617265" alt="The MIT License"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/johnpapa/vscode-peacock/main/#contributors"&gt;&lt;img src="https://camo.githubusercontent.com/b960d4bcf4d93edbf397ffb7a9d99ba4695008f49c1a74b7dafca5fb836ced71/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d31352d626c75652e7376673f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://johnpapa.visualstudio.com/vscode-peacock/_build/latest?definitionId=3&amp;amp;branchName=main&amp;amp;WT.mc_id=vscodepeacock-github-jopapa" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/da0358c0876ba78b599df25a9fdf0ca7b0ed721eddd542ad33ddb94c21dd969b/68747470733a2f2f6a6f686e706170612e76697375616c73747564696f2e636f6d2f7673636f64652d706561636f636b2f5f617069732f6275696c642f7374617475732f5653253230436f6465253230506561636f636b253230457874656e73696f6e3f6272616e63684e616d653d6d61696e" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Install&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Open &lt;strong&gt;Extensions&lt;/strong&gt; sideBar panel in Visual Studio Code and choose the menu options for &lt;strong&gt;View → Extensions&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Search for &lt;code&gt;Peacock&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Install&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Click &lt;strong&gt;Reload&lt;/strong&gt;, if required&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Read the extensive &lt;a href="https://www.peacockcode.dev" rel="nofollow"&gt;documentation here&lt;/a&gt; which includes a guide on how to use Peacock and a &lt;a href="https://papapeacockstorage.z13.web.core.windows.net/changelog/" rel="nofollow"&gt;changelog&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Quick Usage&lt;/h2&gt;
&lt;p&gt;Let's see Peacock in action!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create/Open a VSCode Workspace (&lt;a href="https://papapeacockstorage.z13.web.core.windows.net/guide/#peacock-commands-are-not-appearing" rel="nofollow"&gt;Peacock only works in a Workspace&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;F1&lt;/code&gt; to open the command palette&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;Peacock&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Choose &lt;code&gt;Peacock: Change to a favorite color&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Choose one of the pre-defined colors and see how it changes…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/johnpapa/vscode-peacock"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-dnd-kit"&gt;
  &lt;/a&gt;
  5. dnd kit
&lt;/h3&gt;

&lt;p&gt;A modern, lightweight, performant, accessible and extensible drag &amp;amp; drop toolkit for React.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/clauderic"&gt;
        clauderic
      &lt;/a&gt; / &lt;a href="https://github.com/clauderic/dnd-kit"&gt;
        dnd-kit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A modern, lightweight, performant, accessible and  extensible drag &amp;amp; drop toolkit for React.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://dndkit.com" rel="nofollow"&gt;
    &lt;img alt="dnd kit – There's a new kit on the block." width="520" src="https://res.cloudinary.com/practicaldev/image/fetch/s--D0O3CFyv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/clauderic/dnd-kit/master/.github/assets/dnd-kit-hero.png"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Overview&lt;/h2&gt;
&lt;p&gt;
&lt;a href="https://github.com/clauderic/dnd-kit/actions"&gt;&lt;img src="https://camo.githubusercontent.com/1d2e7f38065f47e50b8d20533adb388440e291cab3c8ed69559fe4235781efb6/68747470733a2f2f62616467656e2e6e65742f6769746875622f636865636b732f636c617564657269632f646e642d6b6974" alt="Build status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/@dnd-kit/core" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c0a7cf94057b45ad19ad093914f3d329aec177fc6ffa6eba54d6910da6fed21a/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f40646e642d6b69742f636f72652e737667" alt="Stable Release"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=@dnd-kit/core" rel="nofollow"&gt;&lt;img alt="gzip size" src="https://camo.githubusercontent.com/97237da9b485186bf7b824817cf9e96c26dc569bd494a04995c1134e333c6b92/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f40646e642d6b69742f636f72653f6c6162656c3d677a697025323073697a6526636f6c6f723d677265656e"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/clauderic/dnd-kit/master/./LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/075137af338811bde87ef85b03449a2672ccf4eaecb735bcbcd65d28402c5b2c/68747470733a2f2f62616467656e2e6e6f772e73682f62616467652f6c6963656e73652f4d4954"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Built for React:&lt;/strong&gt; exposes hooks such as &lt;a href="https://docs.dndkit.com/api-documentation/draggable" rel="nofollow"&gt;&lt;code&gt;useDraggable&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://docs.dndkit.com/api-documentation/droppable" rel="nofollow"&gt;&lt;code&gt;useDroppable&lt;/code&gt;&lt;/a&gt;, and won't require you to re-architect your app or create additional wrapper DOM nodes.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Feature packed:&lt;/strong&gt; customizable collision detection algorithms, multiple activators, draggable overlay, drag handles, auto-scrolling, constraints, and so much more.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Supports a wide range of use cases:&lt;/strong&gt; vertical lists, horizontal lists, grids, multiple containers, nested contexts, variable sized list and grids, transformed items, virtualized lists.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Zero dependencies and modular:&lt;/strong&gt; the core of the library weighs around 10kb minified and has no external dependencies. It's built around built-in React state management and context, which keeps the library lean.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Built-in support for multiple input methods:&lt;/strong&gt; Pointer, mouse, touch and keyboard sensors.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Fully customizable &amp;amp; extensible:&lt;/strong&gt; Customize every detail: animations, transitions, behaviours, styles. Build your own sensors, collision detection algorithms, customize key bindings and so much more.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Accessibility:&lt;/strong&gt; Keyboard support, sensible default aria attributes, customizable screen reader instructions and…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/clauderic/dnd-kit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#6-microbundle"&gt;
  &lt;/a&gt;
  6. Microbundle
&lt;/h3&gt;

&lt;p&gt;Zero-configuration bundler for tiny modules.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/developit"&gt;
        developit
      &lt;/a&gt; / &lt;a href="https://github.com/developit/microbundle"&gt;
        microbundle
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      📦 Zero-configuration bundler for tiny modules.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/360c05f69fddb854612ef21c3114d347deb00c730672320d038b087ba36eba28/68747470733a2f2f692e696d6775722e636f6d2f4c4d45675a4d682e676966"&gt;&lt;img src="https://camo.githubusercontent.com/360c05f69fddb854612ef21c3114d347deb00c730672320d038b087ba36eba28/68747470733a2f2f692e696d6775722e636f6d2f4c4d45675a4d682e676966" width="597" alt="microbundle"&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;
    Microbundle
    &lt;a href="https://www.npmjs.org/package/microbundle" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a42366e7eaf54ae129273fefa7b341aaf59f725b66414b3c0d911a96df9d1eb1/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f6d6963726f62756e646c652e7376673f7374796c653d666c6174" alt="npm"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.org/developit/microbundle" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/13cd61fe5fcd0826a964acde0280222494a49db09d6d1d03360efb7a10202bb9/68747470733a2f2f7472617669732d63692e6f72672f646576656c6f7069742f6d6963726f62756e646c652e7376673f6272616e63683d6d6173746572" alt="travis"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;The &lt;strong&gt;zero-configuration&lt;/strong&gt; bundler for &lt;em&gt;tiny modules&lt;/em&gt;, powered by &lt;a href="https://github.com/rollup/rollup"&gt;Rollup&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;
  &lt;strong&gt;Guide → &lt;/strong&gt;
  &lt;a href="https://raw.githubusercontent.com/developit/microbundle/master/#setup"&gt;Setup&lt;/a&gt; ✯
  &lt;a href="https://raw.githubusercontent.com/developit/microbundle/master/#formats"&gt;Formats&lt;/a&gt; ✯
  &lt;a href="https://raw.githubusercontent.com/developit/microbundle/master/#modern"&gt;Modern Mode&lt;/a&gt; ✯
  &lt;a href="https://raw.githubusercontent.com/developit/microbundle/master/#usage"&gt;Usage &amp;amp; Configuration&lt;/a&gt; ✯
  &lt;a href="https://raw.githubusercontent.com/developit/microbundle/master/#options"&gt;All Options&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
✨ Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;One dependency&lt;/strong&gt; to bundle your library using only a &lt;code&gt;package.json&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Support for ESnext &amp;amp; async/await &lt;em&gt;(via &lt;a href="https://babeljs.io/" rel="nofollow"&gt;Babel&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/rpetrich/babel-plugin-transform-async-to-promises"&gt;async-to-promises&lt;/a&gt;)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Produces tiny, optimized code for all inputs&lt;/li&gt;
&lt;li&gt;Supports multiple entry modules &lt;em&gt;(&lt;code&gt;cli.js&lt;/code&gt; + &lt;code&gt;index.js&lt;/code&gt;, etc)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;Creates multiple output formats for each entry &lt;em&gt;(CJS, UMD &amp;amp; ESM)&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;0 configuration TypeScript support&lt;/li&gt;
&lt;li&gt;Built-in Terser compression &amp;amp; gzipped bundle size tracking&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
🔧 Installation &amp;amp; Setup
&lt;/h2&gt;

&lt;p&gt;1️⃣ &lt;strong&gt;Install&lt;/strong&gt; by running: &lt;code&gt;npm i -D microbundle&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;2️⃣ &lt;strong&gt;Set up&lt;/strong&gt; your &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;

&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-s"&gt;"name"&lt;/span&gt;: &lt;span class="pl-s"&gt;"foo"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;                     &lt;span class="pl-c"&gt;// your package name&lt;/span&gt;
  &lt;span class="pl-s"&gt;"type"&lt;/span&gt;: &lt;span class="pl-s"&gt;"module"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-s"&gt;"source"&lt;/span&gt;: &lt;span class="pl-s"&gt;"src/foo.js"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;            &lt;span class="pl-c"&gt;// your source code&lt;/span&gt;
  &lt;span class="pl-s"&gt;"exports"&lt;/span&gt;: &lt;span class="pl-s"&gt;"./dist/foo.modern.js"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-c"&gt;// where to generate the modern bundle (see below)&lt;/span&gt;
  &lt;span class="pl-s"&gt;"main"&lt;/span&gt;: &lt;span class="pl-s"&gt;"./dist/foo.cjs"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;          &lt;span class="pl-c"&gt;// where to generate the&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/developit/microbundle"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#7-nocodb"&gt;
  &lt;/a&gt;
  7. NocoDB
&lt;/h3&gt;

&lt;p&gt;The Open Source Airtable alternative. Turns any MySQL, PostgreSQL, SQL Server, SQLite &amp;amp; MariaDB into a smart-spreadsheet.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nocodb"&gt;
        nocodb
      &lt;/a&gt; / &lt;a href="https://github.com/nocodb/nocodb"&gt;
        nocodb
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🔥 🔥  The Open Source Airtable alternative. 
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
    &lt;b&gt;
        &lt;a href="https://www.nocodb.com" rel="nofollow"&gt;NocoDB &lt;/a&gt;&lt;br&gt;
    &lt;/b&gt;
    ✨ The Open Source Airtable Alternative ✨ &lt;br&gt;
&lt;/h1&gt;
&lt;p&gt;
Turns any MySQL, PostgreSQL, SQL Server, SQLite &amp;amp; MariaDB into a smart-spreadsheet
&lt;/p&gt;

&lt;div&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/github/NocoDB/NocoDB" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/4e084bac046962268fcf7a8aaf3d4ac422d3327564f9685c9d1b57aa56b142e9/68747470733a2f2f7472617669732d63692e6f72672f6477796c2f657374612e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="http://nodejs.org/download/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78a6449b07220242899619ce10cd5c39cc1e74992b768d308bd98f2a7e9995ae/68747470733a2f2f62616467656e2e6e65742f6e706d2f6e6f64652f6e657874" alt="Node version"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/NocoDB" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ec77e5fb18e5c0eef7b879f7b1473bc68ce6a354bdfdb9510c3bf70ad168eded/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f68747470732f747769747465722e636f6d2f4e6f636f44422e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f772532302534304e6f636f4442" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;
    &lt;a href="http://www.nocodb.com" rel="nofollow"&gt;&lt;b&gt;Website&lt;/b&gt;&lt;/a&gt; •
    &lt;a href="https://discord.gg/5RgZmkW" rel="nofollow"&gt;&lt;b&gt;Discord&lt;/b&gt;&lt;/a&gt; •
    &lt;a href="https://twitter.com/nocodb" rel="nofollow"&gt;&lt;b&gt;Twitter&lt;/b&gt;&lt;/a&gt;
&lt;/p&gt;  

&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/open-source-airtable-alternative/OpenSourceAirtableAlternative.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sMZ6a_f6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/open-source-airtable-alternative/OpenSourceAirtableAlternative.png" width="100%"&gt;&lt;/a&gt;
    &lt;br&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/nocodb?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-nocodb" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9cff91c3d5ada7906ec16f4adbde10de461bf84718d3cfbb0d37c8ca1ffc2a2d/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d323937353336267468656d653d6461726b" alt="NocoDB - The Open Source Airtable alternative | Product Hunt" width="250" height="54"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
Quick try&lt;/h1&gt;

&lt;h3&gt;
1-Click Deploy&lt;/h3&gt;
&lt;a href="https://heroku.com/deploy?template=https://github.com/npgia/nocodb-seed-heroku" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/6979881d5a96b7b18a057083bb8aeb87ba35fc279452e29034c1e1c49ade0636/68747470733a2f2f7777772e6865726f6b7563646e2e636f6d2f6465706c6f792f627574746f6e2e737667" width="300px" alt="Deploy NocoDB to Heroku with 1-Click"&gt;
&lt;/a&gt;
&lt;br&gt;
&lt;h3&gt;
Using Docker&lt;/h3&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;docker run --name nocodb -p 8080:8080 nocodb/nocodb&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Using Npm&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npx create-nocodb-app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
Using Git&lt;/h3&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/nocodb/nocodb-seed
cd nocodb-seed
npm install
npm start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;
GUI&lt;/h3&gt;
&lt;p&gt;Access Dashboard using : &lt;a href="http://localhost:8080/dashboard" rel="nofollow"&gt;http://localhost:8080/dashboard&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Join Our Community&lt;/h1&gt;
&lt;a href="https://discord.gg/5RgZmkW" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/8a7e4d7b3342da59bf8e778636f0860c8045593cc8003a834f88b0315782760e/68747470733a2f2f696e7669646765742e737769746368626c6164652e78797a2f3552675a6d6b57" alt="Join NocoDB : Free &amp;amp; Open Source Airtable Alternative"&gt;
&lt;/a&gt;
&lt;br&gt;
&lt;h1&gt;
Screenshots&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CEx7gNxV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kjC1Rfu_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/7.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xgb2Ihpz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/7.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/5.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KRKF5Vnh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/5.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/6.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h3Ax6upd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/6.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/3.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qfba9NxX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/4.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5CtBr2_d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/11.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ARqJB_0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/11.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/10.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B60sWTWR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/10.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/8.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ktJkSF1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/8.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/9.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0TM_ycTS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nocodb/nocodb/master/static/nocodb/9.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h1&gt;
Features&lt;/h1&gt;
&lt;h3&gt;
Rich Spreadsheet Interface&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
⚡  Search, sort, filter, hide columns with uber ease&lt;/li&gt;
&lt;li&gt;
⚡  Create Views : Grid, Gallery, Kanban, Gantt, Form&lt;/li&gt;
&lt;li&gt;
⚡  Share Views : public &amp;amp; password protected&lt;/li&gt;
&lt;li&gt;
⚡  Personal &amp;amp; locked Views&lt;/li&gt;
&lt;li&gt;
⚡  Upload images to cells (Works with S3, Minio, GCP, Azure, DigitalOcean, Linode, OVH, BackBlaze)!!&lt;/li&gt;
&lt;li&gt;
⚡  Roles : Owner, Creator, Editor, Commenter, Viewer, Commenter, Custom Roles.&lt;/li&gt;
&lt;li&gt;
⚡  Access Control : Fine-grained access control even at database, table &amp;amp; column level.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
App Store for workflow automations :&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
⚡  Chat : Microsoft Teams, Slack…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nocodb/nocodb"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#8-vitro"&gt;
  &lt;/a&gt;
  8. Vitro
&lt;/h3&gt;

&lt;p&gt;Build and showcase your react components in isolation. Vitro is a storybook alternative that builds 20x faster&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/remorses"&gt;
        remorses
      &lt;/a&gt; / &lt;a href="https://github.com/remorses/vitro"&gt;
        vitro
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Build and showcase your react components in isolation
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
    &lt;br&gt;
    &lt;br&gt;
    &lt;a rel="noopener noreferrer" href="https://repository-images.githubusercontent.com/277593641/defb3700-c9c4-11ea-81e7-e0118949a8b5"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TcT7QvuP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://repository-images.githubusercontent.com/277593641/defb3700-c9c4-11ea-81e7-e0118949a8b5" width="320px"&gt;&lt;/a&gt;
    &lt;br&gt;
    &lt;h3&gt;
Build and showcase your react components in isolation&lt;/h3&gt;
    &lt;p&gt;project under heavy development&lt;/p&gt;
    &lt;br&gt;
    &lt;br&gt;
&lt;/div&gt;
&lt;p&gt;Vitro is a storybook alternative that builds 20x faster&lt;/p&gt;
&lt;p&gt;It is built on top of &lt;a href="https://github.com/evanw/esbuild"&gt;esbuild&lt;/a&gt; (thanks to &lt;a href="https://github.com/remorses/bundless"&gt;bundless&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;You can read more on the &lt;a href="https://vitro.now.sh" rel="nofollow"&gt;website&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/remorses/vitro"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#9-boring-avatars"&gt;
  &lt;/a&gt;
  9. Boring Avatars
&lt;/h3&gt;

&lt;p&gt;Boring avatars is a tiny JavaScript React library that generates custom, SVG-based, round avatars from any username and color palette.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/boringdesigners"&gt;
        boringdesigners
      &lt;/a&gt; / &lt;a href="https://github.com/boringdesigners/boring-avatars"&gt;
        boring-avatars
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Boring avatars is a tiny JavaScript React library that generates custom, SVG-based, round avatars from any username and color palette.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Boring Avatars&lt;/h1&gt;
&lt;p&gt;Boring avatars is a tiny JavaScript React library that generates custom, SVG-based, round avatars from any username and color palette.&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/boringdesigners/boring-avatars/blob/master/public/boring-avatars-preview.png?raw=true"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eNliAywu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/boringdesigners/boring-avatars/raw/master/public/boring-avatars-preview.png%3Fraw%3Dtrue" alt="boring avatars preview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a href="https://www.npmjs.com/package/boring-avatars" rel="nofollow"&gt;
&lt;/a&gt;&lt;p&gt;&lt;a href="https://www.npmjs.com/package/boring-avatars" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/cf29f2d152a6a8aaecd3344f6ef423f1f8467d95440c57e4ea2e7a19bfed586e/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f626f72696e672d61766174617273" alt="hi"&gt;
&lt;/a&gt;&lt;a href="https://opensource.org/licenses/MIT" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/78f47a09877ba9d28da1887a93e5c3bc2efb309c1e910eb21135becd2998238a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667" alt="License: MIT"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
Install&lt;/h2&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;yarn add boring-avatars
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;npm install boring-avatars
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Usage&lt;/h2&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-v"&gt;Avatar&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;"boring-avatars"&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-c1"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;Avatar&lt;/span&gt;
  &lt;span class="pl-c1"&gt;size&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-c1"&gt;40&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;
  &lt;span class="pl-c1"&gt;name&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;"Maria Mitchell"&lt;/span&gt;
  &lt;span class="pl-c1"&gt;variant&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-s"&gt;"marble"&lt;/span&gt;
  &lt;span class="pl-c1"&gt;colors&lt;/span&gt;&lt;span class="pl-c1"&gt;=&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s"&gt;"#92A1C6"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;"#146A7C"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;"#F0AB3D"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;"#C271B4"&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;"#C20D90"&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt;
&lt;span class="pl-c1"&gt;/&lt;/span&gt;&lt;span class="pl-c1"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Props&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Prop&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;size&lt;/td&gt;
&lt;td&gt;number or string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;variant&lt;/td&gt;
&lt;td&gt;oneOf: &lt;code&gt;marble&lt;/code&gt;, &lt;code&gt;beam&lt;/code&gt;, &lt;code&gt;pixel&lt;/code&gt;,&lt;code&gt;sunset&lt;/code&gt;, &lt;code&gt;ring&lt;/code&gt;, &lt;code&gt;bauhaus&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;colors&lt;/td&gt;
&lt;td&gt;array of colors&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Source&lt;/h2&gt;
&lt;p&gt;You can embed your boring avatars using the boring avatars source.&lt;/p&gt;
&lt;p&gt;To choose a random avatar from a specific user and a color palette, the format follows:&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;&lt;pre&gt;&lt;code&gt;https://source.boringavatars.com/marble/120/Maria%20Mitchell?colors=264653,2a9d8f,e9c46a,f4a261,e76f51
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/98a5c3bca06ebdf0294da29be2b3969221d1620b9018f96705fbb124d553eff5/68747470733a2f2f736f757263652e626f72696e67617661746172732e636f6d2f6d6172626c652f3132302f4d617269612532304d69746368656c6c3f636f6c6f72733d3236343635332c3261396438662c6539633436612c6634613236312c653736663531"&gt;&lt;img src="https://camo.githubusercontent.com/98a5c3bca06ebdf0294da29be2b3969221d1620b9018f96705fbb124d553eff5/68747470733a2f2f736f757263652e626f72696e67617661746172732e636f6d2f6d6172626c652f3132302f4d617269612532304d69746368656c6c3f636f6c6f72733d3236343635332c3261396438662c6539633436612c6634613236312c653736663531" alt="Avatar for Maria Mitchell"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For more information, &lt;a href="https://github.com/hihayk/boring-avatars-service/blob/main/README.md"&gt;check out the README&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/boringdesigners/boring-avatars"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#10-simplegithooks"&gt;
  &lt;/a&gt;
  10. simple-git-hooks
&lt;/h3&gt;

&lt;p&gt;A simple git hooks manager for small projects&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/toplenboren"&gt;
        toplenboren
      &lt;/a&gt; / &lt;a href="https://github.com/toplenboren/simple-git-hooks"&gt;
        simple-git-hooks
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A simple git hooks manager for small projects
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
simple-git-hooks&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c995c0c267a45ca7fb86416d89ca92f8dd1d4d6a9dd73681b2d874f3b4dbcf83/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e64656e636965732d7a65726f2d677265656e"&gt;&lt;img src="https://camo.githubusercontent.com/c995c0c267a45ca7fb86416d89ca92f8dd1d4d6a9dd73681b2d874f3b4dbcf83/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646570656e64656e636965732d7a65726f2d677265656e" alt=""&gt;&lt;/a&gt; &lt;a href="https://github.com/toplenboren/simple-git-hooks/actions/workflows/tests.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ga3UFp-j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/toplenboren/simple-git-hooks/actions/workflows/tests.yml/badge.svg%3Fbranch%3Dmaster" alt="Tests"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A tool that lets you easily manage git hooks&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The package was recently renamed from &lt;code&gt;simple-pre-commit&lt;/code&gt;. See &lt;strong&gt;Releases&lt;/strong&gt; for the &lt;code&gt;simple-pre-commit&lt;/code&gt; documentation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Zero dependency&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Small configuration (1 object in package.json)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lightweight:&lt;/p&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package&lt;/th&gt;
&lt;th&gt;Unpacked size&lt;/th&gt;
&lt;th&gt;With deps&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;husky v4 &lt;code&gt;4.3.8&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;53.5 kB&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~1 mB&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;husky v6 &lt;code&gt;6.0.0&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;6.86 kB&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;6.86 kB&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pre-commit &lt;code&gt;1.2.2&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~80 kB&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~850 kB&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;strong&gt;simple-git-hooks&lt;/strong&gt; &lt;code&gt;2.2.0&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10.1 kB&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;10.1 kB&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
Who uses simple-git-hooks?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;The package is recommended by &lt;a href="https://github.com/okonet/lint-staged"&gt;&lt;code&gt;lint-staged&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/postcss/autoprefixer"&gt;Autoprefixer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/postcss/postcss.org"&gt;PostCSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/browserslist/browserslist"&gt;Browserslist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/nanoid"&gt;Nano ID&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ai/size-limit"&gt;Size Limit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/storeon/storeon"&gt;Storeon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/directus/directus"&gt;Directus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vercel/pkg"&gt;Vercel/pkg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More, see &lt;a href="https://github.com/toplenboren/simple-git-hooks/network/dependents?package_id=UGFja2FnZS0xOTk1ODMzMTA4"&gt;full list&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
What is a git hook?&lt;/h3&gt;
&lt;p&gt;A git hook is a command or script that is going to be run every time you perform a git action, like &lt;code&gt;git commit&lt;/code&gt; or &lt;code&gt;git push&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If the execution of a git hook fails, then the git action aborts.&lt;/p&gt;
&lt;p&gt;For example, if you want to run &lt;code&gt;linter&lt;/code&gt; on every commit to ensure code quality in your…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/toplenboren/simple-git-hooks"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  Top risers over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +2,958 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +1,496 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web Development for Beginners&lt;/a&gt; +905 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; +751 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;JavaScript Algorithms&lt;/a&gt; +691 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 7 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/saadeghi/daisyui"&gt;daisyUI&lt;/a&gt; +20%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/wwwtyro/candygraph"&gt;CandyGraph&lt;/a&gt; +15%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/godaddy/react-img-carousel"&gt;react-img-carousel&lt;/a&gt; +14%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +13%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/epicmaxco/vuestic-ui"&gt;Vuestic UI&lt;/a&gt; +12%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  Top risers over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +8,048 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +5,202 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +4,336 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners"&gt;Web Development for Beginners&lt;/a&gt;  +3,773 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +3,509 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  Top growth(%) over last 30 days
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/cassiozen/useStateMachine"&gt;useStateMachine&lt;/a&gt; +530%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/withfig/autocomplete"&gt;Fig&lt;/a&gt; +181%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/github/github-elements"&gt;github-elements&lt;/a&gt; +94%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/JP1016/react-icon-blur"&gt;react-icon-blur&lt;/a&gt; +83%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/nextapps-de/winbox"&gt;WinBox&lt;/a&gt; +70%&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://www.iainfreestone.com"&gt;www.iainfreestone.com&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/iain_freestone"&gt;follow me&lt;/a&gt; on Twitter where I regularly post bite size tips relating to HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>productivity</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Deploy a scalable app from scratch in minutes with AWS App Runner</title>
      <author>Daniel Bayerlein</author>
      <pubDate>Fri, 04 Jun 2021 13:30:55 +0000</pubDate>
      <link>https://dev.to/aws-builders/deploy-a-scalable-app-from-scratch-in-minutes-with-aws-app-runner-51db</link>
      <guid>https://dev.to/aws-builders/deploy-a-scalable-app-from-scratch-in-minutes-with-aws-app-runner-51db</guid>
      <description>&lt;p&gt;Have you heard of &lt;a href="https://aws.amazon.com/apprunner/"&gt;AWS App Runner&lt;/a&gt;? A few weeks ago, AWS announced a new service called AWS App Runner - the original blog post can be found &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/05/aws-announces-aws-app-runner/"&gt;here&lt;/a&gt;. AWS App Runner is a fully managed container application service that let you build, deploy and run containerized web applications and APIs in minutes. I'll show you how to do that in this blog post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Supported AWS Regions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Currently, AWS App Runner is supported in the following regions: US East (N. Virginia), US East (Ohio), US West (Oregon), Europe (Ireland), and Asia Pacific (Tokyo).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefits&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;App Runner resources and infrastructure components are fully managed by AWS, which means you don't have to worry about scaling or infrastructure security or even be an expert in it. Resources are scaled automatically based on traffic. You stay completely focused on your application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You are charged for the compute and memory resources used by your application.&lt;/li&gt;
&lt;li&gt;If you automate your deployments you will pay a set monthly fee for each application that covers all automated deployments for that month.&lt;/li&gt;
&lt;li&gt;If you opt to deploy from source code, you will pay a build fee for the amount of time it takes App Runner to build a container from your source code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More information can be found on the &lt;a href="https://aws.amazon.com/apprunner/pricing/"&gt;AWS App Runner Pricing&lt;/a&gt; page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#aws-console"&gt;
  &lt;/a&gt;
  AWS Console
&lt;/h2&gt;

&lt;p&gt;Of course, you can also deploy the service using AWS CDK. But first, let's take a look at the AWS Console to learn about the service. Because with just a few clicks, your app is ready to go.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#source-and-deployment"&gt;
  &lt;/a&gt;
  Source and deployment
&lt;/h3&gt;

&lt;p&gt;The first step is to choose a source for the App Runner service and how it should be deployed. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#source"&gt;
  &lt;/a&gt;
  Source
&lt;/h4&gt;

&lt;p&gt;You can choose between an AWS Container Registry (&lt;em&gt;Amazon ECR&lt;/em&gt; or &lt;em&gt;Amazon ECR Public&lt;/em&gt;) and a Git repository provided by &lt;a href="https://github.com/"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QWAWnWFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5bydyij05aozcqfy6bg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QWAWnWFH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r5bydyij05aozcqfy6bg.png" alt="AWS App Runner console - source section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you choose the Container Registry option, then you only need the Container image URI. If you want to use your Git repository on GitHub, you need to install the AWS Connector for GitHub app.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h4&gt;

&lt;p&gt;Next, you need to choose whether the deployment should be automatic or manual.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dR3Kg483--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3o9p6ibez1h2n28olzn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dR3Kg483--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3o9p6ibez1h2n28olzn.png" alt="AWS App Runner console - source deployment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Automatic deployment is not available with every source option. If you use Amazon ECR, App Runner monitors your registry and deploys a new version of your service with each image push. If you use your Git repository from GitHub, then each push to the selected branch deploys a new version of your service.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-build"&gt;
  &lt;/a&gt;
  Configure build
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;This step is only available if you have chosen "Source code repository".&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7q_PYlbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qquqhdjvve0bqthb8v1a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7q_PYlbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qquqhdjvve0bqthb8v1a.png" alt="AWS App Runner console - build section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently you can choose between &lt;code&gt;Python 3&lt;/code&gt; and &lt;code&gt;Node.js 12&lt;/code&gt; runtime. The &lt;em&gt;"Build command"&lt;/em&gt; specify the command that will be used to install the dependencies or compile the code. If you use the configuration file, you can additionally specify &lt;code&gt;pre&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt; commands! The &lt;em&gt;"Start command"&lt;/em&gt; specify the command to start a web server for your service. Also specify the port to be used by the service.&lt;/p&gt;

&lt;p&gt;The configuration can be done manually or provided via a configuration file (&lt;code&gt;apprunner.yaml&lt;/code&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.0&lt;/span&gt;
&lt;span class="na"&gt;runtime&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nodejs12&lt;/span&gt; 
&lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;commands&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;pre-build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;npm install&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;npm run build&lt;/span&gt;
    &lt;span class="na"&gt;post-build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;npm test&lt;/span&gt;
&lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; 
  &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm start&lt;/span&gt;
  &lt;span class="na"&gt;network&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;📚 &lt;a href="https://docs.aws.amazon.com/apprunner/latest/dg/config-file-ref.html"&gt;App Runner configuration file reference&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#configure-service"&gt;
  &lt;/a&gt;
  Configure service
&lt;/h3&gt;

&lt;p&gt;In this step the service is configured by assigning the resources.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#service-settings"&gt;
  &lt;/a&gt;
  Service settings
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jy5Hvzvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2g5iplrwdqjozx61s6ft.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jy5Hvzvq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2g5iplrwdqjozx61s6ft.png" alt="AWS App Runner console - service section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Name the service and configure the number of CPUs, as well as the required memory.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#auto-scaling"&gt;
  &lt;/a&gt;
  Auto scaling
&lt;/h4&gt;

&lt;p&gt;You can use the default auto-scaling settings or configure this manually.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6kh85Cwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwlgq656mn093f13l9is.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6kh85Cwx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jwlgq656mn093f13l9is.png" alt="AWS App Runner console - auto scaling section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you configure it manually, you can set the following parameters: &lt;code&gt;Concurrency&lt;/code&gt;, &lt;code&gt;Minimum size (instances)&lt;/code&gt; and &lt;code&gt;Maximum size (instances)&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#health-check"&gt;
  &lt;/a&gt;
  Health check
&lt;/h4&gt;

&lt;p&gt;App Runner performs a TCP health check at the port that your application is listening to.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eg8odBs1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7bce95ha538z17gvaw8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eg8odBs1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r7bce95ha538z17gvaw8.png" alt="AWS App Runner console - health check section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can set the parameters &lt;code&gt;Timeout&lt;/code&gt;, &lt;code&gt;Interval&lt;/code&gt;, &lt;code&gt;Unhealthy threshold&lt;/code&gt; and &lt;code&gt;Health threshold&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#security"&gt;
  &lt;/a&gt;
  Security
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kRqLlJJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ito4b437fv6nafbdxqp8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kRqLlJJE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ito4b437fv6nafbdxqp8.png" alt="AWS App Runner console - security section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the Security section you can select an IAM role for the instance and specify whether to use an AWS-owned key or a custom AWS KMS key.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#tags"&gt;
  &lt;/a&gt;
  Tags
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GqU8gGCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30bafs413ljpn6y53vkw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GqU8gGCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/30bafs413ljpn6y53vkw.png" alt="AWS App Runner console - Tags section"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use tags to search and filter your resources, track your AWS costs and control access permissions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#deployment-time"&gt;
  &lt;/a&gt;
  Deployment time 🚀
&lt;/h3&gt;

&lt;p&gt;In the last step you can review your configuration and then start the creation process! After a short time you will find the URL of your app in the AWS App Runner Console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ozj_aR-E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pp81pckaje6i6cjxy262.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ozj_aR-E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pp81pckaje6i6cjxy262.png" alt="AWS App Runner console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition to service metrics, event, deployment and application logs are also available in the AWS App Runner Console.&lt;/p&gt;

&lt;p&gt;I don't think you can deploy a scalable application any easier or faster. 🚀&lt;/p&gt;




&lt;p&gt;If you have any kind of feedback, suggestions or ideas - feel free to comment this post!&lt;/p&gt;

</description>
      <category>aws</category>
      <category>awscommunity</category>
      <category>serverless</category>
      <category>containers</category>
    </item>
    <item>
      <title>My first Open Source Contribution – GirlScript Summer of Code✌🤩🎉</title>
      <author>Srishti Arya</author>
      <pubDate>Fri, 04 Jun 2021 13:23:34 +0000</pubDate>
      <link>https://dev.to/srishtiarya/my-first-open-source-contribution-girlscript-summer-of-code-1boh</link>
      <guid>https://dev.to/srishtiarya/my-first-open-source-contribution-girlscript-summer-of-code-1boh</guid>
      <description>&lt;p&gt;Three months back in March, I made my first &lt;strong&gt;Open Source&lt;/strong&gt; contribution in &lt;strong&gt;Girlscript Summer of Code.&lt;/strong&gt; My journey has been a truly wholesome one since then. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;You may ask,&lt;/em&gt; &lt;strong&gt;What is girlscript summer of code?🤔&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qIzvVwqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osw31mm9jlwhfbmjtt6v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qIzvVwqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osw31mm9jlwhfbmjtt6v.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;GirlScript Summer of Code is a three-month long open source programme run by the GirlScript Foundation. Its goal is to assist newcomers get started with open source development while also encouraging diversity. The participants work on a variety of projects during the programme, under the guidance of experienced mentors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How did I get to know about GSSOC 21?&lt;/strong&gt;&lt;br&gt;
I got to know about this program via LinkedIn post. You have to fill an application form for registration and will be notified about your selection through email.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rS3mrICj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m34liryfwikz8f817w96.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rS3mrICj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m34liryfwikz8f817w96.jpg" alt="Srishti_blog1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to start contributing?✍&lt;/strong&gt;&lt;br&gt;
There are over hundreds of projects to choose from according your interests and tech stacks. Once you find a project that meets your expectations, you will have to explore it and look for bugs or enhancements. &lt;/p&gt;

&lt;p&gt;I made 10+ pull requests and contributed primarily to 3 projects.&lt;br&gt;
Here are some of my mini-projects that got merged in &lt;a href="https://github.com/Vishal-raj-1/Awesome-JavaScript-Projects"&gt;Awesome-JavaScript-Projects&lt;/a&gt;✨ &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vK1pdbiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2rwdegrt4b9zqmcv3ss.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vK1pdbiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q2rwdegrt4b9zqmcv3ss.jpg" alt="srishti_blog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;My takeaways from this program📈💯&lt;/strong&gt;&lt;br&gt;
I learned tremendously in the span of these 3 months which includes git, python, data structures, HTML, CSS, and JavaScript. I got practical experience working on real-world projects. I've become so much more confident about my skills✌😇&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Come, be a part of my tech journey!💖&lt;/strong&gt;&lt;br&gt;
✅&lt;a href="https://www.linkedin.com/in/srishti-arya-049b80192/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
✅&lt;a href="https://twitter.com/Srishti_Arya_"&gt;Twitter&lt;/a&gt;&lt;br&gt;
✅&lt;a href="https://github.com/SrishtiArya07"&gt;Github&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>github</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>🔥 Next JS Website Template with Landing Page Theme [Open Source]</title>
      <author>Remi W.</author>
      <pubDate>Fri, 04 Jun 2021 13:07:45 +0000</pubDate>
      <link>https://dev.to/ixartz/next-js-website-template-with-landing-page-theme-open-source-268i</link>
      <guid>https://dev.to/ixartz/next-js-website-template-with-landing-page-theme-open-source-268i</guid>
      <description>&lt;p&gt;Start your website in Next JS, React, TypeScript and Tailwind CSS for your side projects, online products, SaaS, services. The template is integrated with great JavaScript tooling like ESLint, Prettier, Husky, etc. Perfect to build a high quality website without losing time configuring, testing and reading long documentation.&lt;/p&gt;

&lt;p&gt;Fully responsive website theme and highly customizable, this website template helps you save development and design time.&lt;/p&gt;

&lt;p&gt;Here is the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qievzIIN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ixartz/Next-JS-Landing-Page-Starter-Template/master/public/assets/images/nextjs-landing-page-screenshot.png" alt="Nextjs Website Template Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ixartz"&gt;
        ixartz
      &lt;/a&gt; / &lt;a href="https://github.com/ixartz/Next-JS-Landing-Page-Starter-Template"&gt;
        Next-JS-Landing-Page-Starter-Template
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🚀 Free NextJS Landing Page Template written in Tailwind CSS 2.0 and TypeScript ⚡️ Made with developer experience first: Next.js, TypeScript, ESLint, Prettier, PostCSS, Tailwind CSS.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Landing Page Template built with Next JS 10+, Tailwind CSS 2.0 and TypeScript&lt;/h1&gt;
&lt;p&gt;
  &lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qZYjQwY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ixartz/Next-JS-Landing-Page-Starter-Template/master/public/assets/images/nextjs-landing-page-banner.png%3Fraw%3Dtrue" alt="Next js starter banner"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;🚀 Landing Page theme written in Next.js, Tailwind CSS and TypeScript ⚡️ Made with developer experience first: &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt;, &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt;, &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt;, &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;, &lt;a href="https://postcss.org" rel="nofollow"&gt;PostCSS&lt;/a&gt;, &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Clone this project and use it to create your own &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; project. You can check a &lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;Next js templates demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
DEMO&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G7DT1a-7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/ixartz/Next-JS-Landing-Page-Starter-Template/master/public/assets/images/nextjs-landing-page-screenshot.png%3Fraw%3Dtrue" alt="Nextjs Landing Page Template Screenshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check out our &lt;a href="https://creativedesignsguru.com/demo/nextjs-landing-page/" rel="nofollow"&gt;live demo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
Features&lt;/h3&gt;

&lt;p&gt;Developer experience first:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
🔥 &lt;a href="https://nextjs.org" rel="nofollow"&gt;Next.js&lt;/a&gt; for Static Site Generator&lt;/li&gt;
&lt;li&gt;
🎨 Integrate with &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
💅 &lt;a href="https://postcss.org" rel="nofollow"&gt;PostCSS&lt;/a&gt; for processing &lt;a href="https://tailwindcss.com" rel="nofollow"&gt;Tailwind CSS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🎉 Type checking &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
✏️ Linter with &lt;a href="https://eslint.org" rel="nofollow"&gt;ESLint&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🛠 Code Formatter with &lt;a href="https://prettier.io" rel="nofollow"&gt;Prettier&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🦊 SEO metadata, &lt;a href="https://developers.google.com/search/docs/guides/intro-structured-data" rel="nofollow"&gt;JSON-LD&lt;/a&gt; and &lt;a href="https://ogp.me/" rel="nofollow"&gt;Open Graph&lt;/a&gt; tags with &lt;a href="https://github.com/garmeeh/next-seo"&gt;Next SEO&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
⚙️ &lt;a href="https://www.npmjs.com/package/@next/bundle-analyzer" rel="nofollow"&gt;Bundler Analyzer&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
🌈 Include a FREE theme&lt;/li&gt;
&lt;li&gt;
💯 Maximize lighthouse score&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Built-in feature from Next.js:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
☕ Minify HTML &amp;amp; CSS&lt;/li&gt;
&lt;li&gt;
💨 Live reload&lt;/li&gt;
&lt;li&gt;
✅ Cache busting&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
Included Components&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Navbar&lt;/li&gt;
&lt;li&gt;Hero&lt;/li&gt;
&lt;li&gt;Features&lt;/li&gt;
&lt;li&gt;CTA banner&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ixartz/Next-JS-Landing-Page-Starter-Template"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#made-by-devs-for-developers"&gt;
  &lt;/a&gt;
  Made by devs for developers
&lt;/h2&gt;

&lt;p&gt;This template was made by a developer for React developers. You have access to React components and here is the list of pre-made components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigation component&lt;/li&gt;
&lt;li&gt;Hero component&lt;/li&gt;
&lt;li&gt;Feature component&lt;/li&gt;
&lt;li&gt;Banner component&lt;/li&gt;
&lt;li&gt;Footer component&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you need to access to more components, you can visit our &lt;a href="https://creativedesignsguru.com/category/nextjs/"&gt;Next JS template gallery&lt;/a&gt;, a premium version of the website theme.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#premium-next-js-templates-and-themes"&gt;
  &lt;/a&gt;
  Premium Next JS Templates and Themes
&lt;/h2&gt;

&lt;p&gt;Built in modern ways with components and UI blocks. You can also check my portfolio at:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/landing-green-modern-nextjs-theme/"&gt;Green Nextjs Website Template&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/landing-indigo-modern-react-theme/"&gt;Indigo Nextjs Webiste Theme&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/landing-green-modern-nextjs-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4CbDAFVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-green-modern-nextjs-theme-xs.png" alt="Green Nextjs Website Template"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/landing-indigo-modern-react-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FvlCiWRl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-indigo-modern-nextjs-theme-xs.png" alt="Indigo Nextjs Website Theme"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/landing-purple-modern-react-theme/"&gt;Purple Nextjs Website Theme&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://creativedesignsguru.com/landing-blue-modern-react-theme/"&gt;Blue Nextjs Website Theme&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/landing-purple-modern-react-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fsLIO5h8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-purple-modern-nextjs-theme-xs.png" alt="Purple Nextjs Website Theme"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="https://creativedesignsguru.com/landing-blue-modern-react-theme/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--az4i2Gg8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://creativedesignsguru.com/assets/images/themes/landing-blue-modern-nextjs-theme-xs.png" alt="Blue Nextjs Website Theme"&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#find-more-open-source-projects"&gt;
  &lt;/a&gt;
  Find more open source projects
&lt;/h2&gt;

&lt;p&gt;You can find more open source Next JS template on my GitHub:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ixartz/Next-js-Boilerplate"&gt;Next JS Boilerplate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you want to build a blog, you can check the &lt;a href="https://github.com/ixartz/Next-js-Blog-Boilerplate"&gt;Next JS blog boilerplate&lt;/a&gt; version&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>nextjs</category>
      <category>webdev</category>
      <category>react</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Introducing the New Appwrite Anonymous Login</title>
      <author>Torsten Dittmann</author>
      <pubDate>Fri, 04 Jun 2021 12:44:50 +0000</pubDate>
      <link>https://dev.to/appwrite/introducing-the-new-appwrite-anonymous-login-4d7j</link>
      <guid>https://dev.to/appwrite/introducing-the-new-appwrite-anonymous-login-4d7j</guid>
      <description>&lt;p&gt;It is important to consider the user experience when someone first comes to your application. The registration process can often prove to be a hurdle for users to use an application, especially if parts of the application are bound to an authentication process and hidden behind a login screen. Moreover, in today's world, the issue of privacy and data protection is a delicate one, especially because of new data privacy regulation, like &lt;a href="https://www.smashingmagazine.com/2018/02/gdpr-for-web-developers/"&gt;GDPR&lt;/a&gt; and &lt;a href="https://www.forbes.com/sites/forbestechcouncil/2020/11/17/cpra-could-bring-stricter-data-privacy-enforcement-heres-how-to-prepare/"&gt;CPRA&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Appwrite 0.8 introduces &lt;strong&gt;Anonymous Login&lt;/strong&gt; as an authentication method, which allows users to create an account without providing personal information such as an email address, username or password.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-do-we-need-anonymous-users"&gt;
  &lt;/a&gt;
  Why do we need anonymous users?
&lt;/h1&gt;

&lt;p&gt;This feature is especially useful if you want to provide an easy authentication process for an &lt;a href="https://www.websitepolicies.com/blog/coppa-guide"&gt;underage audience&lt;/a&gt;, mobile apps or use cases where you don't want to store personal information to ensure users anonymity for sensitive subjects like politics or religion.&lt;/p&gt;

&lt;p&gt;With Appwrite you can offer your users the option to create an anonymous account, as well as the possibility to convert it into a full-fledged account with an e-mail address and password or linking to an OAuth2 service provider at a later stage.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h1&gt;

&lt;p&gt;Enough talking, let's learn how we can add Anonymous Authentication to a Web and a Flutter Application using our &lt;a href="https://appwrite.io/docs/getting-started-for-web"&gt;Web SDK&lt;/a&gt; and &lt;a href="https://appwrite.io/docs/getting-started-for-flutter"&gt;Flutter SDK&lt;/a&gt;. The same can be done with other client SDKs we might release in the future.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web"&gt;
  &lt;/a&gt;
  Web
&lt;/h3&gt;

&lt;p&gt;The first step is to add our Web SDK to our project with NPM like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;appwrite &lt;span class="nt"&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you're using a bundler (like &lt;a href="https://rollupjs.org/"&gt;Rollup&lt;/a&gt; or &lt;a href="https://webpack.js.org/"&gt;webpack&lt;/a&gt;), you can import the Appwrite module when you need it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;appwrite&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To install with a CDN (content delivery network) add the following scripts to the bottom of your tag, but before you use any Appwrite services:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/appwrite"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to initialize your SDK code with your project ID which can be found in your project settings page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Init your Web SDK&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="nx"&gt;appwrite&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost/v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your Appwrite Endpoint&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;455x34dfkj&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your Appwrite Project ID&lt;/span&gt;
&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#flutter"&gt;
  &lt;/a&gt;
  Flutter
&lt;/h3&gt;

&lt;p&gt;The first step is to add our Flutter SDK to our project.&lt;/p&gt;

&lt;p&gt;Add &lt;code&gt;appwrite: ^0.6.0&lt;/code&gt; or the latest version in your project's &lt;code&gt;pubspec.yaml&lt;/code&gt; file under dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;dependencies&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;appwrite&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;^0.6.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then run following command to download the dependencies or upon saving your IDE might automatically run this command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;flutter pub get
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next step is to initialize your SDK code with your project ID which can be found in your project settings page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="s"&gt;'package:appwrite/appwrite.dart'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

&lt;span class="n"&gt;client&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setEndpoint&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'http://localhost/v1'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your Appwrite Endpoint&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setProject&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'455x34dfkj'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your Appwrite Project ID&lt;/span&gt;
&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#create-an-anonymous-user"&gt;
  &lt;/a&gt;
  Create an Anonymous User
&lt;/h1&gt;

&lt;p&gt;Once your SDK is setup, access the Account service and call the &lt;a href="https://appwrite.io/docs/client/account?sdk=web#accountCreateAnonymousSession"&gt;&lt;code&gt;createAnonymousSession()&lt;/code&gt;&lt;/a&gt; method. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web"&gt;
  &lt;/a&gt;
  Web
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create an anonymous user and login&lt;/span&gt;
&lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createAnonymousSession&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Success&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Failure&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#flutter"&gt;
  &lt;/a&gt;
  Flutter
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create an anonymous user and login&lt;/span&gt;
&lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;account&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Account&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createAnonymousSession&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;AppwriteException&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the &lt;a href="https://appwrite.io/docs/client/account?sdk=web#accountCreateAnonymousSession"&gt;&lt;code&gt;createAnonymousSession()&lt;/code&gt;&lt;/a&gt; method completes without error, the request will create an anonymous user and automatically logs in the user, setting up the cookie for following requests. Now the user is authenticated and is allowed to access his or her private data and settings.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#convert-to-permanent-user"&gt;
  &lt;/a&gt;
  Convert to Permanent User
&lt;/h1&gt;

&lt;p&gt;When an anonymous user signs up, you might want to allow them to continue their work with a permanent account. This will also allow the user to recover his account in the future and switch between devices. &lt;/p&gt;

&lt;p&gt;With Appwrite there is 2 ways of doing so.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#email"&gt;
  &lt;/a&gt;
  E-Mail
&lt;/h2&gt;

&lt;p&gt;By &lt;a href="https://appwrite.io/docs/client/account#accountUpdateEmail"&gt;updating the email address&lt;/a&gt; of an anonymous account, we can pass an email address and a password to the &lt;code&gt;account.updateEmail&lt;/code&gt; method.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web"&gt;
  &lt;/a&gt;
  Web
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;updateEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email@example.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;secret&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Success&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Failure&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#flutter"&gt;
  &lt;/a&gt;
  Flutter
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;final&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;await&lt;/span&gt; &lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;updateEmail&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;email:&lt;/span&gt; &lt;span class="s"&gt;'email@example.com'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;password:&lt;/span&gt;&lt;span class="s"&gt;'secret'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;AppwriteException&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will convert the anonymous user to a permanent account with &lt;strong&gt;&lt;a href="mailto:email@example.com"&gt;email@example.com&lt;/a&gt;&lt;/strong&gt; as email and &lt;strong&gt;secret&lt;/strong&gt; as his or her password.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#oauth2"&gt;
  &lt;/a&gt;
  OAuth2
&lt;/h2&gt;

&lt;p&gt;By calling the &lt;a href="https://appwrite.io/docs/client/account#accountCreateOAuth2Session"&gt;&lt;code&gt;account.createOAuth2Session&lt;/code&gt;&lt;/a&gt; method from an anonymous account, the user will be automatically converted.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web"&gt;
  &lt;/a&gt;
  Web
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;appwrite&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;account&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createOAuth2Session&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;google&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://localhost/success&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://localhost/failure&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#flutter"&gt;
  &lt;/a&gt;
  Flutter
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;account&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;createOAuth2Session&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;provider:&lt;/span&gt; &lt;span class="s"&gt;'google'&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;Both options offer users to transfer all their information to an account and use them on other devices.&lt;/p&gt;

&lt;p&gt;If you need help or encounter any difficulties setting up Anonymous Login with Appwrite, please &lt;a href="https://appwrite.io/discord"&gt;join our Discord&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/discord"&gt;Appwrite Discord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/docs"&gt;Appwrite Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://appwrite.io"&gt;Appwrite Homepage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@jdent?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Jason Dent&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/privacy?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>flutter</category>
      <category>javascript</category>
      <category>firebase</category>
    </item>
    <item>
      <title>Codecademy Certificate</title>
      <author>Mehran Khan</author>
      <pubDate>Fri, 04 Jun 2021 12:28:34 +0000</pubDate>
      <link>https://dev.to/mehran1801/codecademy-certificate-22ln</link>
      <guid>https://dev.to/mehran1801/codecademy-certificate-22ln</guid>
      <description>&lt;p&gt;I got this certificate of completion.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Generate custom social card images for your Gatsby blog</title>
      <author>Emma Goto 🍙</author>
      <pubDate>Fri, 04 Jun 2021 12:23:18 +0000</pubDate>
      <link>https://dev.to/emma/generate-custom-social-card-images-for-your-gatsby-blog-5ha6</link>
      <guid>https://dev.to/emma/generate-custom-social-card-images-for-your-gatsby-blog-5ha6</guid>
      <description>&lt;p&gt;One of the ways you can make your Gatsby posts stand out to readers is to add a social card image. In this post, you'll learn how to generate these images automatically with &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-react-social-cards"&gt;gatsby-plugin-react-social-cards&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-social-card"&gt;
  &lt;/a&gt;
  What is a social card?
&lt;/h2&gt;

&lt;p&gt;A social card is the preview shown when you paste a link into a site like Twitter:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2IHd_yma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/emgoto/emgoto.com/master/posts/gatsby-react-social-card/twitter-card-preview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2IHd_yma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/emgoto/emgoto.com/master/posts/gatsby-react-social-card/twitter-card-preview.png" alt="Social card image on Twitter preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This can give readers more context on your post, and entice them to click the link. &lt;/p&gt;

&lt;p&gt;There are a couple of existing &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-social-cards/"&gt;Gatsby&lt;/a&gt; &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-remark-social-cards/"&gt;plugins&lt;/a&gt; which let you create social card images from a template. However their customisation options are quite limited. Up until now I've been using a modified version of &lt;a href="https://www.maxpou.fr/generate-social-image-share-with-gatsby"&gt;Maxence Poutord's script&lt;/a&gt;, which lets you take a screenshot of a React component.&lt;/p&gt;

&lt;p&gt;I decided to turn this script into a proper Gatsby plugin, &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-react-social-cards"&gt;gatsby-plugin-react-social-cards&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-gatsbypluginreactsocialcards-work"&gt;
  &lt;/a&gt;
  How does gatsby-plugin-react-social-cards work?
&lt;/h2&gt;

&lt;p&gt;Before diving into the set-up, here's a quick summary of how the plugin works. &lt;/p&gt;

&lt;p&gt;When you run &lt;code&gt;gatsby develop&lt;/code&gt;, the plugin will create new pages for each of your social card images. The page will render your custom React component:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F-2Ig_5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/emgoto/emgoto.com/master/posts/gatsby-react-social-card/social-card-page.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F-2Ig_5F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/emgoto/emgoto.com/master/posts/gatsby-react-social-card/social-card-page.png" alt="Social card page being rendered"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can pass in all the relevant information from your post's frontmatter (like title and description) into the component as props, and render them however you want.&lt;/p&gt;

&lt;p&gt;The plugin then uses &lt;a href="https://developers.google.com/web/tools/puppeteer"&gt;Puppeteer&lt;/a&gt; to take a screenshot of that component, and save it to your images folder:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jtdquc7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/emgoto/emgoto.com/master/posts/gatsby-react-social-card/gatsby-react-social-card-twitter.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jtdquc7N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/emgoto/emgoto.com/master/posts/gatsby-react-social-card/gatsby-react-social-card-twitter.png" alt="Social card image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-started-with-gatsbypluginreactsocialcards"&gt;
  &lt;/a&gt;
  Get started with gatsby-plugin-react-social-cards
&lt;/h2&gt;

&lt;p&gt;First, install the Gatsby plugin:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;gatsby-plugin-react-social-cards
&lt;span class="c"&gt;# or&lt;/span&gt;
yarn add gatsby-plugin-react-social-cards
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As with all Gatsby plugins, you’ll need to declare it in your &lt;code&gt;gatsby-config.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// gatsby-config.js&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`gatsby-plugin-react-social-cards`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;// TODO&lt;/span&gt;
                &lt;span class="na"&gt;queryToPages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c1"&gt;// TODO&lt;/span&gt;
                &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/components/social-card.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                &lt;span class="na"&gt;cardLimit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// for debugging purposes&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="s2"&gt;`
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I’ll be walking you through each of the option values below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-your-graphql-query"&gt;
  &lt;/a&gt;
  Creating your GraphQL query
&lt;/h2&gt;

&lt;p&gt;The first option, &lt;code&gt;query&lt;/code&gt;, is the GraphQL query you’ll use to fetch all the pages you want social cards for. &lt;/p&gt;

&lt;p&gt;Your Gatsby blog probably fetches a list of pages to render on your site’s home page. You can copy-paste this query to get started.&lt;/p&gt;

&lt;p&gt;It should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`
    {
        allMarkdownRemark {
            nodes {
                fields {
                    slug
                }
                frontmatter {
                    title
                    description
                }
            }
        }
    }
`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The query should contain:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The slug for the page&lt;/li&gt;
&lt;li&gt;Any data that you want to use in your social card (such as a page's title or description)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#create-your-querytopages-function"&gt;
  &lt;/a&gt;
  Create your queryToPages function
&lt;/h2&gt;

&lt;p&gt;You will then need to transform the data into a shape that the plugin can use. One of your options will be a &lt;code&gt;queryToPages&lt;/code&gt; function. It should look something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// gatsby-config.js&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;allMarkdownRemark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;slugWithoutSlashes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;slugWithoutSlashes&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;pageContext&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;frontmatter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;frontmatter&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you loop through all the nodes in your query, each object should contain a &lt;code&gt;slug&lt;/code&gt; and a &lt;code&gt;pageContext&lt;/code&gt; object:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/my-page-name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;pageContext&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// You can put anything you want in the context!&lt;/span&gt;
        &lt;span class="nl"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;My page title&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;My page description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;pageContext&lt;/code&gt; object will be passed through as a prop to your React component, so make sure you include everything that you want here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-your-social-card-react-component"&gt;
  &lt;/a&gt;
  Create your social card React component
&lt;/h2&gt;

&lt;p&gt;Now we can create our React component. I've created the file in my &lt;code&gt;components&lt;/code&gt; folder.  If you're putting it somewhere else, make sure you change the location in your plugin options.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/components/social-card.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SocialCard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;pageContext&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;SocialCard&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By default, the screenshot taken will be with dimensions 1200px by 628px, which is the &lt;a href="https://sproutsocial.com/insights/social-media-image-sizes-guide/#twitter"&gt;recommended image size for Twitter&lt;/a&gt;. &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; will be passed in as props, so feel free to use this to set the size of your React component as well.&lt;/p&gt;

&lt;p&gt;For now you can keep your component simple - I'll be explaining how to test it below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-your-social-card-react-component"&gt;
  &lt;/a&gt;
  Test your social card React component
&lt;/h2&gt;

&lt;p&gt;After completing the above steps, you can start up your Gatsby blog:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gatsby develop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be able to view the pages for your social cards at a URL like &lt;code&gt;localhost:8000/&amp;lt;your-post-slug&amp;gt;-social-card&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;💡 &lt;strong&gt;Can't find the page you're looking for?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Try visiting your Gatsby site's 404 page by making up a broken URL e.g. &lt;code&gt;localhost:8000/blahblah&lt;/code&gt;. This will show you a list of all your site's pages. You may be able to spot the social card pages here.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Since this React component is going to be screenshotted at 1200x628, make sure that it renders as you would expect at this height and width. You could add some CSS like &lt;code&gt;border: 1px solid red&lt;/code&gt; around your component to double-check.&lt;/p&gt;

&lt;p&gt;Once you’re happy with the React component, you’re ready to screenshot!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#changing-the-cardlimit-value"&gt;
  &lt;/a&gt;
  Changing the cardLimit value
&lt;/h2&gt;

&lt;p&gt;The final option in our plugin settings was the &lt;code&gt;cardLimit&lt;/code&gt; value. This is included to let you debug your component without any screenshots being taken. Initially its value was &lt;code&gt;0&lt;/code&gt;, but you can change it to &lt;code&gt;1&lt;/code&gt; so that it will take one screenshot. This screenshot will be saved in your &lt;code&gt;static&lt;/code&gt; folder.&lt;/p&gt;

&lt;p&gt;After changing your &lt;code&gt;gatsby-config.js&lt;/code&gt; file, your browser will prompt you to restart your server. I recommend instead &lt;strong&gt;killing and starting your Gatsby server&lt;/strong&gt;. I’ve found that when restarting, it will take the screenshot while your site is still loading.&lt;/p&gt;

&lt;p&gt;If you're not happy with a screenshot, delete the image from the &lt;code&gt;static&lt;/code&gt; folder. The next time you start up your server, the screenshot will be taken again.&lt;/p&gt;

&lt;p&gt;When you’re happy with the screenshot, you can delete the &lt;code&gt;cardLimit&lt;/code&gt; option altogether. Now it will take screenshots for all your pages.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-your-image-to-your-seo-component"&gt;
  &lt;/a&gt;
  Add your image to your SEO component
&lt;/h2&gt;

&lt;p&gt;Now that we have our social card images, we can add its URL to your site’s SEO component. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want to know more about SEO and meta tags, I have a separate post on all you need to know about &lt;a href="https://www.emgoto.com/gatsby-metatags/"&gt;meta tags with Gatsby&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’m assuming that you already have a SEO component set up, so the following code shows the minimum you need to add social card images to your site:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/components/seo.js&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Helmet&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-helmet&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SEO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isPost&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;siteUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://www.emgoto.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;slugWithoutSlashes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;socialCard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isPost&lt;/span&gt;
        &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;siteUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;slugWithoutSlashes&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;-social-card.png`&lt;/span&gt;
        &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;siteUrl&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/square-social-card.png`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;twitterCard&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;isPost&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;summary_large_image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;summary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Helmet&lt;/span&gt;
            &lt;span class="nx"&gt;meta&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{[&lt;/span&gt;
               &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;twitter:card&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;twitterCard&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="na"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;og:image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;socialCard&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="p"&gt;}],&lt;/span&gt;
        &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm passing in a &lt;code&gt;isPost&lt;/code&gt; prop to my SEO component. Since I only generate social card images for my posts, this lets me fall back to a default image for all other pages on my site.&lt;/p&gt;

&lt;p&gt;I use this square image as my fallback:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cNBPqla6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/emgoto/emgoto.com/master/posts/gatsby-react-social-card/summary-image-preview.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cNBPqla6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/emgoto/emgoto.com/master/posts/gatsby-react-social-card/summary-image-preview.png" alt="Summary social card image on Twitter preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;twitterCard&lt;/code&gt; value tells Twitter whether the image is a small square image (&lt;code&gt;summary&lt;/code&gt;) or a large cover image (&lt;code&gt;summary_large_image&lt;/code&gt;).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#changing-the-screenshot-size"&gt;
  &lt;/a&gt;
  Changing the screenshot size
&lt;/h2&gt;

&lt;p&gt;Different social media sites use different image sizes. If you wanted to use a different set of dimensions, you can pass it in as a plugin option:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// gatsby-config.js&lt;/span&gt;
&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;dimensions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;
        &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;628&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;suffix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;-social-card&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;suffix&lt;/code&gt; value determines the image name e.g. &lt;code&gt;your-slug-social-card.png&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;dimensions&lt;/code&gt; is an array, you can also pass in more than one item, and create multiple images of varying dimensions per post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-options"&gt;
  &lt;/a&gt;
  Other options
&lt;/h2&gt;

&lt;p&gt;You can further customise the plugin with a couple of other settings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;imageFolder&lt;/strong&gt; - defaults to &lt;code&gt;'static'&lt;/code&gt;. Change if you want to save your images to another folder&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;baseUrl&lt;/strong&gt; - defaults to &lt;code&gt;'http://localhost:8000'&lt;/code&gt;. Change if you start your dev server on another port.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;timeout&lt;/strong&gt; - defaults to &lt;code&gt;5000&lt;/code&gt;. These are the milliseconds waited before the screenshot is taken. Increase this number if you need to wait for images to load, or decrease if you’re finding it to be too slow.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This was my first ever Gatsby plugin, so I would love to hear your feedback if you gave this plugin a go!&lt;/p&gt;

&lt;p&gt;Please feel free to leave a comment below, or raise an issue on the &lt;a href="https://github.com/emgoto/gatsby-plugin-react-social-cards"&gt;gatsby-plugin-react-social-cards&lt;/a&gt; repository.&lt;/p&gt;

</description>
      <category>gatsby</category>
      <category>react</category>
    </item>
    <item>
      <title>Button events in React</title>
      <author>Software Development Academy</author>
      <pubDate>Fri, 04 Jun 2021 12:22:30 +0000</pubDate>
      <link>https://dev.to/softwaredevacademy/button-events-in-react-5cml</link>
      <guid>https://dev.to/softwaredevacademy/button-events-in-react-5cml</guid>
      <description>&lt;p&gt;Behind the scenes, buttons in React behave like pure JavaScript buttons. The advantage is that you can put the event directly in the button without creating a variable to reference the button.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-requisites
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=h33Srr5J9nY"&gt;Arrow functions&lt;/a&gt;:&lt;/strong&gt; A video that will help you convert normal functions to arrow functions to be comfortable reading React code.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#intended-result"&gt;
  &lt;/a&gt;
  Intended result
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BhgDezS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5zid09b3076vze52rk1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BhgDezS1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h5zid09b3076vze52rk1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1: A simple page with 2 buttons.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WZbr2UE3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw3tutjvi8mgg2ntu14j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WZbr2UE3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw3tutjvi8mgg2ntu14j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2: App hierarchy diagram.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Legend:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;🟦 &lt;strong&gt;Blue:&lt;/strong&gt; Component created by us.&lt;/li&gt;
&lt;li&gt;◻️ &lt;strong&gt;Grey:&lt;/strong&gt; Normal tags.&lt;/li&gt;
&lt;/ol&gt;




&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h1&gt;

&lt;p&gt;There are many ways to create button events in React, but let's focus on 2. They depend if you want to call a function without passing arguments or if you need to pass arguments.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#guide-no"&gt;Calling a function without passing arguments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#guide-yes"&gt;Calling a function that needs to pass arguments&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span id="guide-no"&gt; &lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#calling-a-function-without-passing-arguments"&gt;
  &lt;/a&gt;
  Calling a function without passing arguments:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myFunction&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;You click me&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;myFunction&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click me&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's analyze the code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;function myFunction() {}&lt;/code&gt; Is the function called when you click on a button.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;onClick={myFunction}&lt;/code&gt; the &lt;code&gt;onClick&lt;/code&gt; property will fire the function that you pass to it. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We don't put parenthesis in the function inside onClick. Doing so will run the function when the page load, and then the button won't work when the user clicks on it.&lt;/p&gt;

&lt;p&gt;&lt;span id="guide-yes"&gt; &lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#calling-a-function-that-needs-to-pass-arguments"&gt;
  &lt;/a&gt;
  Calling a function that needs to pass arguments:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;myGreet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Hello &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;onClick&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;myGreet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Ana&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Click me&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's analyze the code:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;function myGreet(name){}&lt;/code&gt; The function to run, note that it has an argument.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;onClick={() =&amp;gt; myGreet("Eduardo")}&lt;/code&gt; In order to pass a function with arguments, we need to create a function on the fly, inside the onClick event. When the user clicks on the button, it will call the arrow function, thus, running any code inside it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is where the arrow function comes to fruition. This allows us to write a shorter syntax to avoid making our JSX messy.&lt;/p&gt;

&lt;p&gt;Finally, you can pass as many arguments as you want. But to be organized, stick to 1 or 2 arguments. If you need to pass more arguments, use an object or array for better organization.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This article will allow you to practice how to use buttons to modify information on the screen by manipulating the state. &lt;/p&gt;

&lt;p&gt;The next article is &lt;a href="https://dev.to/softwaredevacademy/form-events-in-react-4k8a"&gt;Form events in React&lt;/a&gt; that goes deeper into the state, so users can submit data to your application.&lt;/p&gt;

&lt;p&gt;In you want to see the finished code open this &lt;a href="https://github.com/softwaredevacademy/sda-react-articles"&gt;link&lt;/a&gt; and open the branch buttons.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#additional-reading"&gt;
  &lt;/a&gt;
  Additional reading
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/handling-events.html"&gt;Handling Events&lt;/a&gt; official React documentation&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits:
&lt;/h1&gt;

&lt;p&gt;Cover photo: &lt;span&gt;Photo by &lt;a href="https://unsplash.com/@matthew_t_rader?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Matthew T Rader&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Manage server state with useEffect hook</title>
      <author>Software Development Academy</author>
      <pubDate>Fri, 04 Jun 2021 12:18:49 +0000</pubDate>
      <link>https://dev.to/softwaredevacademy/manage-server-state-with-useeffect-hook-3hbc</link>
      <guid>https://dev.to/softwaredevacademy/manage-server-state-with-useeffect-hook-3hbc</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/0ZJgIjIuY7U"&gt;
&lt;/iframe&gt;
 &lt;em&gt;Video tutorial of this article&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This article will teach the basics of the &lt;code&gt;useEffect()&lt;/code&gt; hook to make fetch calls to a server.&lt;/p&gt;

&lt;p&gt;We will use the fantastic and free API mockup resource called &lt;a href="https://jsonplaceholder.typicode.com"&gt;JsonPlaceholder&lt;/a&gt; to practice some network calls.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sg3RJLCq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/leh6kt6dk45e3jkllmd4.png" alt="Alt Text"&gt;
&lt;/h2&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Pre-requisites
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=RvYYCGs45L4"&gt;Promises&lt;/a&gt;: Explains a way to run code &lt;strong&gt;only&lt;/strong&gt; after other code that we don't know when is going to be ready.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you want to use Async &amp;amp; Await, there is a special hook called useCallback, more info in the section: Additional reading.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#intended-result"&gt;
  &lt;/a&gt;
  Intended result
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--78VgdEM6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f66iflyzdwluwxnk363j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--78VgdEM6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f66iflyzdwluwxnk363j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1: Todo list&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4p37cwme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vndc4m6liktn5sebey2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4p37cwme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vndc4m6liktn5sebey2.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2: App hierarchy chart.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V1EEe1Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bz1jhkc0qj84uzt37rl6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V1EEe1Ae--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bz1jhkc0qj84uzt37rl6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#anatomy-of-the-useeffect-hook"&gt;
  &lt;/a&gt;
  Anatomy of the useEffect hook
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r2W7qwhR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tkx5n1ujhnqfzju769re.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r2W7qwhR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tkx5n1ujhnqfzju769re.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Figure 3: The parameters of the useEffect hook.&lt;/p&gt;

&lt;p&gt;The first parameter is a function usually written as an arrow function. Inside the function, you do your network call using  &lt;code&gt;fetch()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The second parameter is an array of state variables. It is used to tell React to re-render the page only when these state variable changes.&lt;/p&gt;

&lt;p&gt;If you omit the second parameter, React will enter an infinite loop, crashing the application. Why? Because as we mentioned during the &lt;a href="https://dev.to/softwaredevacademy/introduction-to-state-management-and-react-hooks-285j"&gt;Introduction to State management&lt;/a&gt;, React refreshes the page each time the state changes. But if we refresh the page, the fetch data will be called again, changing the state, and the page will be refreshed and so on a so forth.&lt;/p&gt;

&lt;p&gt;Think about the second parameter as a &lt;strong&gt;brake&lt;/strong&gt; to tell React to refresh the page once instead of entering an infinite loop.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ib17WKlZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6e8k9h62k09cxcvj5jj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ib17WKlZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i6e8k9h62k09cxcvj5jj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting started
&lt;/h1&gt;

&lt;p&gt;To tackle the complexity we will focus on 3 areas:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#guide-app"&gt;General app setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#guide-first"&gt;useEffect first argument&lt;/a&gt; (function)&lt;/li&gt;
&lt;li&gt;
&lt;a href="#guide-first"&gt;useEffect second argument&lt;/a&gt; (array)
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;TaskItem&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./components/Item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1 App.jsx created&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// State&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;taskData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setTaskData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;

  &lt;span class="c1"&gt;// Method&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2 App.jsx useEffect()&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://jsonplaceholder.typicode.com/todos/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setTaskData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;setTaskData&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="c1"&gt;// Component&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TaskList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;taskData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TaskItem&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;prop&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"App"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ol&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;TaskList&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ol&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is the first exercise we have a &lt;code&gt;console.log()&lt;/code&gt; inside the code. This is on purpose, so you can open the console and see the exact moment the &lt;code&gt;App.jsx&lt;/code&gt; component is destroyed and recreated once we have the server's data.&lt;/p&gt;

&lt;p&gt;Lets break down the code line by line:&lt;/p&gt;

&lt;p&gt;&lt;span id="guide-app"&gt; &lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#general-app"&gt;
  &lt;/a&gt;
  General App:
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;We import the new hook &lt;code&gt;useEffect&lt;/code&gt; in addition to the &lt;code&gt;useState&lt;/code&gt; hook.&lt;/li&gt;
&lt;li&gt;We create a state variable called &lt;code&gt;taskItemData&lt;/code&gt; as an empty array to hold the todo items fetched from the server.&lt;/li&gt;
&lt;li&gt;We use the &lt;code&gt;useEffect()&lt;/code&gt; hook directly without assigning a const or a function.&lt;/li&gt;
&lt;li&gt;Finally, TaskList is a list of &lt;code&gt;&amp;lt;TaskItems/&amp;gt;&lt;/code&gt; by using the &lt;code&gt;taskData&lt;/code&gt; state getter, and we pass to each copy its corresponding item.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span id="guide-first"&gt; &lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useeffect-first-argument"&gt;
  &lt;/a&gt;
  useEffect first argument:
&lt;/h3&gt;

&lt;p&gt;Inside &lt;code&gt;useEffect&lt;/code&gt;, we pass the arrow function. This will be called each time the contents of the App component change. In this case, we want to refresh the page when new data arrives from the server.&lt;/p&gt;

&lt;p&gt;Inside the arrow function, a &lt;code&gt;fetch()&lt;/code&gt; function calls the server. Note that we need to append 2 &lt;code&gt;then()&lt;/code&gt; statements to: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To convert our raw data into legible JSON.&lt;/li&gt;
&lt;li&gt;To assign this JSON to our &lt;code&gt;taskData&lt;/code&gt; state using the &lt;code&gt;setTaskData()&lt;/code&gt; setter.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;span id="guide-second"&gt; &lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useeffect-second-argument"&gt;
  &lt;/a&gt;
  useEffect second argument:
&lt;/h3&gt;

&lt;p&gt;We put &lt;code&gt;setTaskData&lt;/code&gt; in the array inside the second argument of the &lt;code&gt;useEffect&lt;/code&gt; hook. Because we are only calling the setter and not the getter, we don't need to add &lt;code&gt;taskData.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you omit the &lt;code&gt;[]&lt;/code&gt; entirely, React will enter an infinite loop because each time you set &lt;code&gt;setTaskData,&lt;/code&gt; the state will change, refresh the page, and when you set the data again, it will refresh over and over.&lt;/p&gt;

&lt;p&gt;If you put the &lt;code&gt;[]&lt;/code&gt; but leave it empty, React will refresh the page 1 time only. This will work for this small example, but on bigger projects, this will stop calling other network calls because you aren't allowing the page to refresh when other pieces of state change. So get used to putting the necessary state getters and setters.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;This example taught you the basics of fetching data using the useEffect hook.&lt;/p&gt;

&lt;p&gt;You can take a break before moving to the articles intended for the next day, or &lt;a href="https://dev.to/softwaredevacademy/manage-global-state-with-recoil-js-1h6k"&gt;click here&lt;/a&gt; to continue your studies.&lt;/p&gt;

&lt;p&gt;My recommendation is to practice creating individual projects for each API endpoint that &lt;a href="https://jsonplaceholder.typicode.com"&gt;JSONPlaceholder&lt;/a&gt; has. The goal is to get comfortable setting up the useEffect hook and write its 2 arguments without copying and pasting the code.&lt;/p&gt;

&lt;p&gt;If you want to see the finished code, open this &lt;a href="https://github.com/softwaredevacademy/sda-react-articles"&gt;link&lt;/a&gt; and open the branch server-state.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#additional-reading"&gt;
  &lt;/a&gt;
  Additional reading
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://reactjs.org/docs/hooks-reference.html"&gt;React hooks&lt;/a&gt; documentation: For a detailed explanation of the difference between all the available hooks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.youtube.com/watch?v=0ZJgIjIuY7U"&gt;useCallback hook&lt;/a&gt;: A short video tutorial to help you organize your useEffect code into smaller separated async functions.&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Cover: Photo by &lt;a href="https://unsplash.com/@alexxsvch?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Alexey Savchenko&lt;/a&gt; on &lt;a href="/s/photos/city-night?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Video tutorial: &lt;a href="https://www.youtube.com/watch?v=0ZJgIjIuY7U&amp;amp;feature=emb_title"&gt;Learn useEffect In 13 Minutes - React Hooks Explained&lt;/a&gt; by &lt;a href="https://www.youtube.com/channel/UCFbNIlppjAuEX4znoulh0Cw"&gt;Web Dev Simplified&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
  </channel>
</rss>
