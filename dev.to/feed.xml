<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Best Top 3 Themes for VSCODE</title>
      <author>CoderZ90</author>
      <pubDate>Thu, 15 Jul 2021 10:24:58 +0000</pubDate>
      <link>https://dev.to/official_fire/best-top-3-themes-for-vscode-12lk</link>
      <guid>https://dev.to/official_fire/best-top-3-themes-for-vscode-12lk</guid>
      <description>&lt;p&gt;Hello üëã guys hope you all are fine and safe so today in this blog I will show you the best TOP 3 Themes for VSCODE &lt;/p&gt;

&lt;p&gt;Top of the list comes One Dark Pro&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-one-dark-pro"&gt;
  &lt;/a&gt;
  1. &lt;strong&gt;One Dark Pro&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P6U-62cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6svwgdpidkk71sxz64fd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P6U-62cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6svwgdpidkk71sxz64fd.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This theme is very very popular and is one of my favorite theme üòç&lt;br&gt;
Here is the look of this theme &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qnqt_e0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5mvp4fyxbuinmlty43l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qnqt_e0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a5mvp4fyxbuinmlty43l.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=zhuangtongfa.Material-theme"&gt;Download This theme&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-fresh-material"&gt;
  &lt;/a&gt;
  2. &lt;strong&gt;Fresh Material&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;This theme is best for those who love color üòç &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4QyMB5CM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2lwmi04dy662ojsi0pe.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4QyMB5CM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p2lwmi04dy662ojsi0pe.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The look and feel of this theme is very satisfying üòåüëå here how it looks its similar to one Dark Pro &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kzCFxYzV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jz16504patwv954qf3s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kzCFxYzV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jz16504patwv954qf3s.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q-ePAeF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl8vyt4qbguux2xsbyti.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q-ePAeF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zl8vyt4qbguux2xsbyti.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=2ndshift.fresh-material"&gt;Download This theme&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-synthwave-84"&gt;
  &lt;/a&gt;
  3. &lt;strong&gt;Synthwave '84&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IzK568lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqwxq95r1y2uzed5qs1h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IzK568lp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqwxq95r1y2uzed5qs1h.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This colour scheme is influenced by the music and the cover artwork of modern Synthwave bands like FM-84, Timecop 1983 and The Midnight. By association, that means I've also taken heavy influence from the excellent retro-tinged artwork of James White (check out his work, it's awesome).&lt;/p&gt;

&lt;p&gt;It also has glow effects ‚ú® which is very insane &lt;/p&gt;

&lt;p&gt;Here is the look of the theme&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l9xALROy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/la3aghsgkb36wled6wya.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l9xALROy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/la3aghsgkb36wled6wya.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üòä Thankyou for giving your time to read this blog hope you found it useful and interesting &lt;/p&gt;

&lt;p&gt;I have my own youtube channel please üôèüôÇsubscribe &lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtube.com/codingfire?sub_confirmation=1"&gt;https://youtube.com/codingfire?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Documenting My Journey From Waitress to Full Stack Web Developer</title>
      <author>Mari Ullom</author>
      <pubDate>Thu, 15 Jul 2021 09:41:38 +0000</pubDate>
      <link>https://dev.to/mariullom/documenting-my-journey-from-waitress-to-full-stack-web-developer-1ec5</link>
      <guid>https://dev.to/mariullom/documenting-my-journey-from-waitress-to-full-stack-web-developer-1ec5</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hello World!&lt;/strong&gt; (sick of seeing that one yet?)&lt;br&gt;
I have always shown interest in coding, and creating things online, but since my college semester started this year I dove in head first. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; I'm taking &lt;em&gt;C#, Python, SQL&lt;/em&gt;, creating websites with &lt;em&gt;CSS, HTML&lt;/em&gt;, and &lt;em&gt;JavaScript&lt;/em&gt;. I was testing Coding Editors, ended up with so many of them, can't work them all. Everyone said &lt;em&gt;Python&lt;/em&gt; is SUpeR eAsY. I DON'T LIKE IT, I DON'T UNDERSTAND IT. I CAN DO IT, AND CREATE SCRIPTS. I JUST DON'TTTTTT GET IT. I can't figure out which text editor I want to use, I'm all over the place, frustrated, angry at the world. Need dev and webdev friends, or just acquaintances. **HELPPPPP&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;What &lt;em&gt;text editor&lt;/em&gt; do &lt;strong&gt;you&lt;/strong&gt; use? Which would you recommend and why?&lt;/li&gt;
&lt;li&gt;Are you a Website Developer? What projects would you recommend for a new portfolio from scratch? 
*If you were freelancing for clients, would you use code or would you use a website builder to create it? &lt;/li&gt;
&lt;li&gt;Want a new friend? I need new friends with similar interests in &lt;strong&gt;Tech&lt;/strong&gt; in general. &lt;/li&gt;
&lt;li&gt;You will NOT learn anything by just &lt;em&gt;reading&lt;/em&gt; information on programming. You have to &lt;strong&gt;DO&lt;/strong&gt; projects to grasp it. So why are there not more &lt;strong&gt;FREE&lt;/strong&gt; walkthroughs for projects?&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Python&lt;/em&gt; is &lt;strong&gt;NOT&lt;/strong&gt; the easiest language, I picked up intermediate C# well before I knew how to write a beginner Python code on my own. Don't listen to the people that say &lt;em&gt;Python&lt;/em&gt; is the easiest coding language. They are lying. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So I'd like to start out by saying, journaling, documenting, and recording has always been a way for me to destress, and process things. Normally I would create a bullet journal entry from scratch, but since I spend 18 out of 24 hours this seemed to be a more realistic approach. &lt;/p&gt;

&lt;p&gt;I started tinkering with coding 2 years ago. I would create a customized page, automation, or random calculator here and there. I would be fascinated by creating a website, designing a website, data analytics, python, c#, and before you know it I had over &lt;strong&gt;50+ abandoned&lt;/strong&gt; repositories on my &lt;em&gt;github.&lt;/em&gt; I would start with full intention of self-teaching &lt;strong&gt;ONE&lt;/strong&gt; thing then end up so overwhelmed with so many chrome tabs open they were no longer all in my viewport. &lt;em&gt;Does this happen to anyone else?&lt;/em&gt; (Any suggestions on a way to organize my chaotic tabs)&lt;/p&gt;

&lt;p&gt;I made the decision I was fed up working in the Food/Beverage - Customer Service industry and wanted to do something I really enjoyed. I figured a lot of it out on my own, taught myself some really cool things, but wanted to go back to school to earn a degree. So I did just that. I started out as a &lt;em&gt;Business Management&lt;/em&gt; major, but ended up settling in &lt;em&gt;Computer Programming, Coding Technology, Data Analytics, and minoring and Business Management&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;I just finished up my last lab in my &lt;em&gt;Responsive Web Design&lt;/em&gt; class and decided I needed to write to destress. That is what led me here. This post is probably more scatter brained than I am. I wanted to pursue a job working as a Virtual Assistant. When I was researching the process I realized really quickly that 90% of the information online is someone posting on their blog, trying to sell you their course, teaching you the same thing that the next person is selling. It is a beat around the bush type structure and it really doesn't prepare you to work in the VA field AT ALL. Around the same time I started my certification for my Responsive Web Design class I'm required to take for school. I was really happy about that, because *&lt;em&gt;I had already taught myself HTML, CSS,&lt;/em&gt; and knew some JavaScript so it was an easy credit for me. Taking that course really reminded me how much I loved WebDev. &lt;/p&gt;

&lt;p&gt;I was looking online at UpWork and other freelance pages, and the things people are selling in the WebDev, Content Creation, Design categories are all things I taught myself to do years ago. So that made me think &lt;em&gt;MARI what the heck are you doing???&lt;/em&gt; &lt;em&gt;You could be doing that, why aren't you?&lt;/em&gt; Well, I don't have a portfolio. So okay, make a portfolio then? Well I have so many different projects I think would be cool to put, I can't start on one. I start designing one, end up making another, then another, then another and before you know it, I'm online posting to dev.to instead of creating a portfolio. &lt;/p&gt;

&lt;p&gt;Honestly I'm not sure why I posted this, but I really wanted to keep the documentation for myself, as well as if anyone happens upon it, decides to read and wants to offer advice, a laugh, or whatever then amazing. I would love that. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>devjournal</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Joyce, a highly scalable event-driven Cloud Native Data Hub.</title>
      <author>mogui</author>
      <pubDate>Thu, 15 Jul 2021 09:08:02 +0000</pubDate>
      <link>https://dev.to/mogui/joyce-a-highly-scalable-event-driven-cloud-native-data-hub-17f7</link>
      <guid>https://dev.to/mogui/joyce-a-highly-scalable-event-driven-cloud-native-data-hub-17f7</guid>
      <description>&lt;p&gt;Years of blood and struggle, condensed in a few github repositories, finally public with a product emerged from different experiences inside the company I work!&lt;/p&gt;

&lt;p&gt;This is &lt;strong&gt;Joyce&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a highly scalable event-driven Cloud Native Data Hub.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ok! Wait, what? &lt;/p&gt;

&lt;p&gt;Joyce allows you to ingest data from (almost) any source and expose the ingested data as standard APIs (REST, event notification) automatically. In order to specify to Joyce which data we want to pick from the incoming data stream and how APIs will look like you need to describe the expected behaviour with a DSL based on json-schema.&lt;/p&gt;

&lt;p&gt;Continue to read about it here : &lt;a href="https://sourcesense.github.io/joyce-docs/"&gt;https://sourcesense.github.io/joyce-docs/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>java</category>
      <category>kubernetes</category>
      <category>kafka</category>
      <category>rest</category>
    </item>
    <item>
      <title>Running on AWS Savings Plans? You can still reduce your cloud bill</title>
      <author>CAST AI</author>
      <pubDate>Thu, 15 Jul 2021 09:07:05 +0000</pubDate>
      <link>https://dev.to/castai/running-on-aws-savings-plans-you-can-still-reduce-your-cloud-bill-59j1</link>
      <guid>https://dev.to/castai/running-on-aws-savings-plans-you-can-still-reduce-your-cloud-bill-59j1</guid>
      <description>&lt;p&gt;Committing to AWS Savings Plans is like walking a tightrope in your cost optimization efforts.&lt;/p&gt;

&lt;p&gt;Every hour that your team &lt;strong&gt;uses fewer cloud resources than the contracted amount&lt;/strong&gt; is an hour of lost value. And if you approach this carefully and end up &lt;strong&gt;under-committing&lt;/strong&gt;, you‚Äôll wind up paying for the resources your team needs in the highest AWS price tier.&lt;/p&gt;

&lt;p&gt;Luckily,&lt;strong&gt; automated rightsizing and cloud optimization &lt;/strong&gt;offer a way out.¬†&lt;/p&gt;

&lt;p&gt;Keep on reading to find out how you could eliminate the effort around AWS Savings Plans and reduce your cloud bill even more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check out my guide:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#catch22ofawssavingsplans"&gt;The Catch-22 of AWS Savings Plans&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#forecastingcloudcosts"&gt;Forecasting cloud costs is hard&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#awssavingsplanswontoptimizecloudbill"&gt;AWS Savings Plans won‚Äôt optimize your cloud bill by themselves&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#savingsplansandeks"&gt;Using Savings Plans with Amazon EKS? There‚Äôs a way to cut more of your bill&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="catch22ofawssavingsplans"&gt;The Catch-22 of AWS Savings Plans&lt;/h2&gt;

&lt;p&gt;To understand the tricky nature of AWS Savings Plans, you need to know how they work.&lt;/p&gt;

&lt;p&gt;You buy Savings Plans &lt;strong&gt;based on hourly commitment&lt;/strong&gt;. AWS uses the Cost Explorer to automatically calculate how that commitment will look like as a monthly charge on your AWS bill.&lt;/p&gt;

&lt;p&gt;Here‚Äôs an example:&lt;/p&gt;

&lt;p&gt;Your On-Demand monthly bill for one EC2 instance is $2,000. Let‚Äôs say that the Savings Plan combination of term and payment options gives you 30% savings. Then the recommended commitment will be c. $1.92 per hour - or $1,400 per month.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problems begin when the hourly resource usage of the specific EC2 machine families you‚Äôre using starts to fluctuate.¬†&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If you commit to more resources than you need, every hour your teams use less than the committed level is a waste of some of the value you paid for. If you under-commit to a Savings Plan and constantly go over it, you‚Äôll end up paying for extra resources in the highest pricing tier, On-Demand.¬†&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;When using the AWS Savings Plan, you still get a discount on the cost of whatever EC2 instances your teams provisioned. If you over-provision an EC2 instance, you won‚Äôt be taking full advantage of the Savings Plan discount program.&lt;/p&gt;

&lt;p&gt;And unlike Reserved Instances, &lt;strong&gt;you can‚Äôt resell the capacity purchased via AWS Savings Plans&lt;/strong&gt; in the AWS Marketplace. That‚Äôs why it‚Äôs smart to buy Savings Plans incrementally. This helps to avoid over-committing to more resources than your company gets to use each month.¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I shared some more insights about these two AWS offers in this article: &lt;a href="https://cast.ai/blog/do-aws-reserved-instances-and-savings-plans-really-reduce-costs/"&gt;Do AWS Reserved Instances and Savings Plans really reduce costs?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id="forescastingcloudcosts"&gt;Forecasting cloud costs is hard&lt;/h2&gt;

&lt;p&gt;AWS Savings Plans are by no means easier to manage than Reserved Instances. To reap full benefits of them, you need the same skill set and toolkit for forecasting your AWS costs.¬†&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Savings Plans are a great option for accounts where you‚Äôre able to predict a minimum amount of usage for the entire duration of the commitment period (one or three years). If you‚Äôre dealing with an application that has an unpredictable baseline, it‚Äôs a good practice to start by gathering usage data and then gradually committing to Savings Plans.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The above might sound straightforward, but imagine doing that at the scale of the entire enterprise.¬†&lt;/p&gt;

&lt;p&gt;Large organizations may easily end up &lt;strong&gt;investing a lot of time and effort into the planning and procurement of Savings Plans&lt;/strong&gt;:¬†&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Multiple project or application teams need to provide an estimate of how much compute resources they will require in the upcoming period.¬†&lt;/li&gt;
&lt;li&gt;DevOps and/or FinOps teams then need to review these plans and confirm that the planned projects actually require the requested resources.¬†&lt;/li&gt;
&lt;li&gt;Finally, the finance team needs to go over the specific solutions like Savings Plans and make sure that the reserved capacity matches the requirements (and won‚Äôt result in over- or under-committing).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Much of the above requires going over separate spreadsheets, reviewing historical cloud usage, and carrying out complex forecasting of the expected compute capacity needs.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you‚Äôre running on AWS Savings Plan right now, you‚Äôve probably done most or all of these tasks.¬†&lt;/p&gt;

&lt;p&gt;Is there a way to save up even when you‚Äôve already committed to a certain level of resource usage? There is, and it starts with rightsizing.&lt;/p&gt;

&lt;h2 id="awssavingsplanswontoptimizecloudbill"&gt;AWS Savings Plans won‚Äôt optimize your cloud bill by themselves&lt;/h2&gt;

&lt;p&gt;Savings Plans can help to reduce your AWS bill, but you‚Äôre still the one in charge of infrastructure optimization.&lt;/p&gt;

&lt;p&gt;That‚Äôs why rightsizing is such a critical initiative. And if you‚Äôre running a large cloud environment, you need a solution that automates rightsizing tasks for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tracking down which resources are running, in which families, and which teams own them is time-consuming. &lt;/strong&gt;And trying to make sense of all the &lt;a href="https://cast.ai/blog/400-ec2-instance-types-the-good-the-bad-and-the-ugly/"&gt;400 EC2 instances&lt;/a&gt; AWS offers (together with their pricing schemes) is no small feat. And it might take you days or weeks to analyze your inventory and utilization to learn which instances can be downgraded.¬†&lt;/p&gt;

&lt;p&gt;An AI-based cloud cost optimization solution like CAST AI can quickly identify underutilized pieces of your infrastructure and downgrade or terminate assets without you having to lift a finger.&lt;/p&gt;

&lt;h3 id="savingsplansandeks"&gt;Using Savings Plans with Amazon EKS? There‚Äôs a way to cut more of your bill&lt;/h3&gt;

&lt;p&gt;This won‚Äôt get you out of your contract, but it‚Äôs the #1 option to get more out of your Savings Plan if you‚Äôre running EKS clusters.&lt;/p&gt;

&lt;p&gt;You can get a &lt;strong&gt;free &lt;a href="https://cast.ai/eks-optimizer/" rel="noreferrer noopener"&gt;Savings Report&lt;/a&gt; &lt;/strong&gt;to see how much you could potentially save as well as actionable suggestions to do so.&lt;/p&gt;

&lt;p&gt;And if you want to free your team to focus on other tasks than cost optimization, there‚Äôs also the automated version. The tool will keep on optimizing your setup for optimal cost and performance automatically and you will get more out of your savings plan.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>kubernetes</category>
      <category>cloudcost</category>
      <category>devops</category>
    </item>
    <item>
      <title>Top 10 open-source SaaS that could help you build the next big thing </title>
      <author>Alex Barashkov</author>
      <pubDate>Thu, 15 Jul 2021 08:48:03 +0000</pubDate>
      <link>https://dev.to/alex_barashkov/top-10-open-source-saas-that-could-help-you-build-the-next-big-thing-2eai</link>
      <guid>https://dev.to/alex_barashkov/top-10-open-source-saas-that-could-help-you-build-the-next-big-thing-2eai</guid>
      <description>&lt;p&gt;I'm super happy that investors and big companies are finally happy to support Open Source projects. It was hard to imagine 10 years ago that there will be plenty of SaaS built based on open-source model.&lt;/p&gt;

&lt;p&gt;Here is the list of my favourites that could help you build amazing modern architecture covering different aspects of product development and architecture.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#hasura"&gt;
  &lt;/a&gt;
  Hasura
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hasura"&gt;
        hasura
      &lt;/a&gt; / &lt;a href="https://github.com/hasura/graphql-engine"&gt;
        graphql-engine
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Blazing fast, instant realtime GraphQL APIs on your DB with fine grained access control, also trigger webhooks on database events.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PxM9p39q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ror2mtp0mfrddcj2562v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PxM9p39q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ror2mtp0mfrddcj2562v.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hasura simplifies the development a lot. How do you usually build your apps? Probably you choose some framework, set up ORM, set up DB, write manually migrations, then you build batch of CRUD endpoints either with REST or Graphql, add authorization layer. &lt;/p&gt;

&lt;p&gt;With Hasura you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;easily create most of your tables for PostgreSQL, TimescaleDB, MySQL, MongoDB, MSSQL using nice UI&lt;/li&gt;
&lt;li&gt;every DB structure modification will be recorded as a migration(so you can easily run it within your CI by using Hasura CLI)&lt;/li&gt;
&lt;li&gt;each table will automatically get relevant graphql/rest endpoints&lt;/li&gt;
&lt;li&gt;protect each endpoint by a powerful set of rules for each user role&lt;/li&gt;
&lt;li&gt;and if you need more business logic you can merge generated endpoints with custom graphql server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#timescaledb"&gt;
  &lt;/a&gt;
  TimescaleDB
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/timescale"&gt;
        timescale
      &lt;/a&gt; / &lt;a href="https://github.com/timescale/timescaledb"&gt;
        timescaledb
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An open-source time-series SQL database optimized for fast ingest and complex queries.  Packaged as a PostgreSQL extension.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0aDQD-jh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gi537874ap9y43gmldy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0aDQD-jh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1gi537874ap9y43gmldy.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An extension for PostgreSQL that boost the performance of time-series operations. Super simple to use, amazing documentation and nice cloud service. You can always use it as a replacement of PostgreSQL because it does not have any downsides, but in case you start saving some metrics, stats to your database you will be covered. It has 10x-100x faster queries than PostgreSQL for time-series.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#supertokens"&gt;
  &lt;/a&gt;
  Supertokens
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/supertokens"&gt;
        supertokens
      &lt;/a&gt; / &lt;a href="https://github.com/supertokens/supertokens-core"&gt;
        supertokens-core
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Open source alternative to Auth0 / Firebase Auth / AWS Cognito 
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Asc3Va5V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vabc3l99qqyrnmasjx0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Asc3Va5V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vabc3l99qqyrnmasjx0w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every project needs authorization. If you used Auth0, it's pretty much the same but it's Open Source, so you can easily host it within your own infrastructure or either use cloud version. It works based on JWT, so simply integrates with Hasura.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#n8n"&gt;
  &lt;/a&gt;
  n8n
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/n8n-io"&gt;
        n8n-io
      &lt;/a&gt; / &lt;a href="https://github.com/n8n-io/n8n"&gt;
        n8n
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Free and open fair-code licensed node based Workflow Automation Tool. Easily automate tasks across different services.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UYjVvORc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbaaz7z954p3ddbcwr2w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UYjVvORc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rbaaz7z954p3ddbcwr2w.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't want to bother yourself with programming automation between different services and spending hours on that? Try n8n. Powerful UI to design different integrations and automations that rely on data changes/triggers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rancher"&gt;
  &lt;/a&gt;
  Rancher
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/rancher"&gt;
        rancher
      &lt;/a&gt; / &lt;a href="https://github.com/rancher/rancher"&gt;
        rancher
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Complete container management platform
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9JtQ9Mvv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6u490bvxtf5v86mypen.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9JtQ9Mvv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r6u490bvxtf5v86mypen.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Modern applications deserve modern infrastructure and managing it could be a painful process. Rancher simplifies management of Kubernetes clusters whether you run it in the cloud or on bare-metal servers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#drone-ci"&gt;
  &lt;/a&gt;
  Drone CI
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/drone"&gt;
        drone
      &lt;/a&gt; / &lt;a href="https://github.com/drone/drone"&gt;
        drone
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Drone is a Container-Native, Continuous Delivery Platform
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6uDH0VLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gh4xtelljx4z268tqt02.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6uDH0VLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gh4xtelljx4z268tqt02.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Despite Github actions and Gitlab are very popular solutions, Drone CI has fantastic architecture and a very simple set-up. After it's been acquired by Harness, it's got a major 2.0.0 update that brought a lot of cool features such as activity charts, user management, new UI. Drone CI is a very powerful and flexible tool.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#grafana"&gt;
  &lt;/a&gt;
  Grafana
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/grafana"&gt;
        grafana
      &lt;/a&gt; / &lt;a href="https://github.com/grafana/grafana"&gt;
        grafana
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The open and composable observability and data visualization platform. Visualize metrics, logs, and traces from multiple sources like Prometheus, Loki, Elasticsearch, InfluxDB, Postgres and many more. 
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g8UNybH2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kb33rq1ehydud0gleem3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g8UNybH2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kb33rq1ehydud0gleem3.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can't build the next big thing without having a proper monitoring analytics solution. Grafana was an essential tool in that space for a very long time, and now they also have a cloud version. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#k6"&gt;
  &lt;/a&gt;
  K6
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/grafana"&gt;
        grafana
      &lt;/a&gt; / &lt;a href="https://github.com/grafana/k6"&gt;
        k6
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A modern load testing tool, using Go and JavaScript - https://k6.io
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--43JdQPVG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/61u3wvpjzpwp018b9euo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--43JdQPVG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/61u3wvpjzpwp018b9euo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best performance testing tool and it's open source. Recently K6 has been acquired by Grafana Labs, so I'm sure it will become even better. If you had experience writing scripts for jMeter, K6 experience will be 100x times better.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sentry"&gt;
  &lt;/a&gt;
  Sentry
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/getsentry"&gt;
        getsentry
      &lt;/a&gt; / &lt;a href="https://github.com/getsentry/sentry"&gt;
        sentry
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Sentry is cross-platform application monitoring, with a focus on error reporting.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--saFWnwRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jamorx4a0yun11d3hpdt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--saFWnwRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jamorx4a0yun11d3hpdt.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Error reporting is crucial when you want to handle customer issues before it will have a negative impact on your business. Sentry allows you to simply integrate their SDK in your framework/language and start to receive alerts when errors happen either on the client or server-side. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flagsmith"&gt;
  &lt;/a&gt;
  Flagsmith
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/Flagsmith"&gt;
        Flagsmith
      &lt;/a&gt; / &lt;a href="https://github.com/Flagsmith/flagsmith"&gt;
        flagsmith
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Feature flagging and remote config service. Host yourself or use our hosted version at https://flagsmith.com/
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--icecfj47--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nc3byirlhbtgohjzb2yc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--icecfj47--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nc3byirlhbtgohjzb2yc.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In 2021 you should stop pushing major updates to all users at the same time. Control their expectations and react to issues predictively by using feature flags. Simply integrate it with your framework by using SDK, then manage who should be allowed to have access to certain features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;Building projects with open source technologies is amazing, since you don't need to spend a fortune to test things, but as projects grow you always could try paid cloud versions.&lt;/p&gt;

&lt;p&gt;What open source SaaS do you use in your project?&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>New Gravity Support in Image Previews | Appwrite</title>
      <author>Damodar Lohani</author>
      <pubDate>Thu, 15 Jul 2021 08:47:13 +0000</pubDate>
      <link>https://dev.to/appwrite/new-gravity-support-in-image-previews-appwrite-442j</link>
      <guid>https://dev.to/appwrite/new-gravity-support-in-image-previews-appwrite-442j</guid>
      <description>&lt;p&gt;With new version of Appwrite, we have added gravity support while cropping image previews. So what is gravity? Cropping an image is essentially a process of taking smaller part of an image and the gravity species which portion of image to take. So, the gravity value of &lt;strong&gt;top-left&lt;/strong&gt;, tells to take the top left portion of image while cropping. One thing to remember about cropping and gravity in Appwrite is that, Appwrite handles crop with gravity as a thumbnail cropping, that is first Appwrite will resize the image to the minimum possible size keeping the aspect ratio intact and then consider the gravity while cropping to the exact size specified. Also, the default gravity is &lt;code&gt;center&lt;/code&gt; so your existing code will not break.&lt;/p&gt;

&lt;p&gt;While using rest params, you can simply pass &lt;code&gt;gravity&lt;/code&gt; param and value which can be one of &lt;strong&gt;top&lt;/strong&gt;, &lt;strong&gt;top-left&lt;/strong&gt;, &lt;strong&gt;top-right&lt;/strong&gt;, &lt;strong&gt;left&lt;/strong&gt;, &lt;strong&gt;right&lt;/strong&gt;, &lt;strong&gt;bottom&lt;/strong&gt;, &lt;strong&gt;bottom-left&lt;/strong&gt; and &lt;strong&gt;bottom-right&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-output"&gt;
  &lt;/a&gt;
  üñ®Ô∏è Example Output
&lt;/h2&gt;

&lt;p&gt;Let's look at some example image output with crop and gravity.&lt;/p&gt;

&lt;p&gt;First, here is the original image, which is 478x500px in size.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1QdExfyE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xm92zy2hg1ae6tgsx99a.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1QdExfyE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xm92zy2hg1ae6tgsx99a.jpg" alt="Original"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;50x200px top-left&lt;/th&gt;
&lt;th&gt;50x200px top-right&lt;/th&gt;
&lt;th&gt;150x200px center&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--En3KeKix--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4fhymhy3to0nwlkuccb.jpg" alt="top-left"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZR4hGsWd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ip5ylpoj4h32s9rv0atr.jpg" alt="top-right"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2dueG1Pd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dgwn7rgzj5x9jah92gcs.jpg" alt="Center"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;If you are using our SDKs, you can pass the gravity parameter in &lt;strong&gt;getFilePreview&lt;/strong&gt; method&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-flutter"&gt;
  &lt;/a&gt;
  üéØ Example Flutter
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight dart"&gt;&lt;code&gt;&lt;span class="n"&gt;FutureBuilder&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Uint8List&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;(&lt;/span&gt;
    &lt;span class="nl"&gt;future:&lt;/span&gt; &lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getFilePreview&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;fileId:&lt;/span&gt; &lt;span class="s"&gt;'fileId'&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;width:&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;height:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;gravity:&lt;/span&gt; &lt;span class="s"&gt;'top'&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;
    &lt;span class="nl"&gt;builder:&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasData&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;memory&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="o"&gt;!);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;hasError&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;AppwriteException&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;AppwriteException&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;snapshot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;CircularProgressIndicator&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;},&lt;/span&gt;
&lt;span class="o"&gt;),&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#example-web"&gt;
  &lt;/a&gt;
  üï∏Ô∏è Example Web
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Appwrite&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;sdk&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setEndpoint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://[HOSTNAME_OR_IP]/v1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Your API Endpoint&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;5df5acd0d48c2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Your project ID&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;storage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFilePreview&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;[FILE_ID]&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;top&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;preview&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"preview"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#example-android"&gt;
  &lt;/a&gt;
  ü§ñ Example Android
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ... Imports &lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;X&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Fragment&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;lateinit&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;FragmentXBinding&lt;/span&gt;

    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onCreateView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;inflater&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;LayoutInflater&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ViewGroup&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;savedInstanceState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Bundle&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
    &lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DataBindingUtil&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;inflate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;inflater&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fragment_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;container&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="k"&gt;false&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lifecycleOwner&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;viewLifecycleOwner&lt;/span&gt;

        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;storage&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Storage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nc"&gt;GlobalScope&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;launch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Dispatchers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;Main&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;storage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getFilePreview&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;fileId&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"[FILE_ID]"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;gravity&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"top-left"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;image&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;BitmapFactory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;decodeStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;byteStream&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setImageBitmap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  Learn More
&lt;/h2&gt;

&lt;p&gt;Appwrite has many services and tools to allow you to build applications in a much more productive and secure way. You can use the following resources to learn more about Appwrite and how to leverage it in building your next web and mobile project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;üìú &lt;a href="https://appwrite.io/docs"&gt;Appwrite Docs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;üí¨ &lt;a href="https://appwrite.io/discord"&gt;Discord Community&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don't forget to join the &lt;a href="https://appwrite.io/discord"&gt;Appwrite Discord community&lt;/a&gt;, where you can learn more about Appwrite, get the latest updates, and get light-speed help with any question you might have.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>webdev</category>
      <category>flutter</category>
      <category>android</category>
    </item>
    <item>
      <title>7 Tips our Developers recommend to Newbie Devs</title>
      <author>EmilyCook321</author>
      <pubDate>Thu, 15 Jul 2021 08:14:50 +0000</pubDate>
      <link>https://dev.to/taxdoo/7-tips-our-developers-recommend-to-newbie-devs-50ji</link>
      <guid>https://dev.to/taxdoo/7-tips-our-developers-recommend-to-newbie-devs-50ji</guid>
      <description>&lt;p&gt;Today is &lt;a href="https://www.un.org/en/observances/world-youth-skills-day"&gt;World Youth Skills Day&lt;/a&gt; so we want to celebrate young people‚Äôs access to training and career opportunities by providing some inspiration for anyone interested in working in tech.&lt;/p&gt;

&lt;p&gt;We asked our developers, product managers and even our CEO about the resources that sparked their interest in tech and helped to hone their skills; here are their recommendations. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Practise this&lt;/strong&gt; ‚è∞&lt;br&gt;
If you have 30 minutes a day, try completing a few exercises on &lt;a href="https://www.freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt;. This is a great way to learn to code in bitesize amounts of time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Try this&lt;/strong&gt; üí°&lt;br&gt;
A good starting point are the Hello World courses on &lt;a href="https://www.codecademy.com/learn/learn-java/modules/learn-java-hello-world"&gt;Codecademy&lt;/a&gt;, which helps with learning tooling set-up and understanding how things work in that language. You can also test your knowledge by modifying the code and adding other statements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Get stuck into this&lt;/strong&gt; üíª&lt;br&gt;
A slightly more advanced course for learning frontend development is &lt;a href="https://todomvc.com/"&gt;ToDoMVC&lt;/a&gt;, which also has a lot of other examples for each tech stack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Build this&lt;/strong&gt; üëæ&lt;br&gt;
Learning by doing is the best method which this &lt;a href="https://www.gamedev.tv/p/complete-c-unity-game-developer-3d-online-course-2020"&gt;C# Unity Game 3D course&lt;/a&gt; from gamedev.tv definitely will help you to do so.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read this&lt;/strong&gt; üìö&lt;br&gt;
&lt;a href="http://cleancoder.com/products"&gt;Clean Code&lt;/a&gt; is the classic book written by Uncle Bob, otherwise known as Robert Cecil Martin, who epitomizes the concept of clean code. From a product perspective, check out &lt;a href="https://leanproductplaybook.com/"&gt;Lean Product Playbook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Watch this&lt;/strong&gt; üì∫&lt;br&gt;
&lt;a href="https://www.hbo.com/silicon-valley"&gt;Silicon Valley (HBO)&lt;/a&gt;; our co-founder, Matthias Allmendinger, recommends this series as it sparked the entrepreneurial spirit that brought Taxdoo to life.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eat this&lt;/strong&gt; üç±&lt;br&gt;
Sushi. Ok, just kidding. Although our developers do love a good Bento box, feel free to pick your favourite brain food for learning to code. Happy hacking doesn‚Äôt happen on an empty stomach!&lt;/p&gt;

&lt;p&gt;We hope this list was helpful! It is, of course, by no means complete- what else would you recommend for budding developers?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NP5gWL3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gc1ysfryomlx80qrfmvx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NP5gWL3x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gc1ysfryomlx80qrfmvx.png" alt="Screen and VAT is Love logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We‚Äôre growing at Taxdoo! Follow us on &lt;a href="https://twitter.com/TaxdooEng"&gt;Twitter&lt;/a&gt; or &lt;a href="https://de.linkedin.com/company/taxdoo"&gt;LinkedIn&lt;/a&gt; for the latest news and job posts from us. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note: none of these posts are paid endorsements and are solely recommendations from individual colleagues at Taxdoo.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>React Dashboard - Open-source Full-stack Products</title>
      <author>Sm0ke</author>
      <pubDate>Thu, 15 Jul 2021 08:09:50 +0000</pubDate>
      <link>https://dev.to/sm0ke/react-dashboard-open-source-full-stack-products-4224</link>
      <guid>https://dev.to/sm0ke/react-dashboard-open-source-full-stack-products-4224</guid>
      <description>&lt;p&gt;Hello Coders,&lt;/p&gt;

&lt;p&gt;This article presents a curated list with open-source &lt;strong&gt;React Dashboards&lt;/strong&gt; crafted with &lt;strong&gt;JWT Authentication&lt;/strong&gt; Flow (register/login/logout) and a simple &lt;strong&gt;Node JS API&lt;/strong&gt; backend used to authenticate the users and manage the JWT tokens. All products, released under the MIT License, comes with active support and scheduled for future updates with more modules and features. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/product/react-node-js-datta-able"&gt;React Node Datta Able&lt;/a&gt; - Full-stack Seed Project&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/product/react-node-js-berry-dashboard"&gt;React Node JS Berry&lt;/a&gt; - Full-stack Seed Project &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/api-server-nodejs"&gt;Node JS API&lt;/a&gt; - source code&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TFmNNbcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3h9fu3hf0by59psgbzi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TFmNNbcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v3h9fu3hf0by59psgbzi.gif" alt="React Dashboard - Full-stack Datta Able Dashboard, now available wiht Node JS Backend."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-nodejs-datta-able"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/product/react-node-js-datta-able"&gt;React Nodejs Datta Able&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Datta Able&lt;/strong&gt; is an open-source &lt;strong&gt;React Dashboard&lt;/strong&gt; that provides a colorful and modern design. Datta Able React Free is the most stylised React Free Admin Template, around all other admin templates in the market. It comes with high feature-rich pages and components with fully developer-centric code. The product comes with a simple JWT authentication flow: login/register/logout.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Features: &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Modern aesthetics UI design - Designed by &lt;a href="https://codedthemes.com/"&gt;CodedThemes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;React, Redux, Redux-persist&lt;/li&gt;
&lt;li&gt;Authentication: JWT Login/Register/Logout&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/product/react-node-js-datta-able"&gt;React Nodejs Datta Able&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/app-generator/react-datta-able-dashboard"&gt;React Nodejs Datta Able&lt;/a&gt; - Source Code &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H_UOa4bM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp2svrrcnim5a3q6qqu9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H_UOa4bM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lp2svrrcnim5a3q6qqu9.jpg" alt="React Nodejs Datta Able - Full-stack open-source React Dashboard provided by AppSeed and CodedThemes."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#react-node-js-berry"&gt;
  &lt;/a&gt;
  &lt;a href="https://appseed.us/product/react-node-js-berry-dashboard"&gt;React Node JS Berry&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Berry&lt;/strong&gt; is a creative free &lt;strong&gt;React Dashboard&lt;/strong&gt; build using the Material-UI. It is meant to be the best User Experience with highly customizable feature-riched pages. It is a complete game-changer React Dashboard Template with easy and intuitive responsive design as on retina screens or laptops. The product comes with a simple JWT authentication flow: login/register/logout. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Features&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Modern aesthetics UI design - Designed by &lt;a href="https://codedthemes.com/"&gt;CodedThemes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Material-UI components&lt;/li&gt;
&lt;li&gt;React, Redux, Redux-persist&lt;/li&gt;
&lt;li&gt;Authentication: JWT Login/Register/Logout&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://appseed.us/product/react-node-js-berry-dashboard"&gt;React Nodejs Berry&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://react-node-js-berry-dashboard.appseed-srv1.com/"&gt;React Nodejs Berry&lt;/a&gt; - LIVE Demo (UI only)&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ozQcakI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aj43uz1bfo7o0np1cu5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ozQcakI8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aj43uz1bfo7o0np1cu5x.png" alt="React Node JS Berry - Open-source React Dashboard crafted as a full-stack project with a Node JS Backend."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;The products communicate with the Node JS API using a simple API with usable registration/login/logout flow. From this point, event the unexperienced programmers should be able to enhance the existing codebase and code more features. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources and support feel free to AMA in the comments section or access: &lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;Free &lt;a href="https://appseed.us/support"&gt;Support&lt;/a&gt; provided by AppSeed&lt;/li&gt;
&lt;li&gt;Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a curated list | Dev.to&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>fullstack</category>
      <category>appseed</category>
    </item>
    <item>
      <title>I was shocked üò± that placeholder text on an &lt;input&gt; (instead of a &lt;label&gt;) might TECHNICALLY PASS WCAG‚Åâ Do you agree?</title>
      <author>InHuOfficial</author>
      <pubDate>Thu, 15 Jul 2021 07:52:38 +0000</pubDate>
      <link>https://dev.to/inhuofficial/placeholder-text-on-an-input-instead-of-a-label-does-it-pass-wcag-the-answer-may-surprise-you-94m</link>
      <guid>https://dev.to/inhuofficial/placeholder-text-on-an-input-instead-of-a-label-does-it-pass-wcag-the-answer-may-surprise-you-94m</guid>
      <description>&lt;p&gt;Does a &lt;code&gt;placeholder&lt;/code&gt; on an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; without a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; pass WCAG? From my assessment I would say technically yes...but &lt;strong&gt;please&lt;/strong&gt; don't do it!&lt;/p&gt;

&lt;p&gt;For those of you who like deep dives and want to see how the hell I, the guy who prattles on about accessibility all the time, came to that conclusion...strap in!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Oh and a really important point here before we start:&lt;/strong&gt; I am playing "devil's advocate" here, it is clear that if we apply common sense WCAG does not recommend &lt;code&gt;placeholder&lt;/code&gt; attributes as a suitable alternative to &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;s. I am just being pedantic! &lt;/p&gt;

&lt;p&gt;I am about to get heavily into &lt;a href="https://www.w3.org/WAI/standards-guidelines/wcag/"&gt;Web Content Accessibility Guidelines (WCAG)&lt;/a&gt; and show (as far as I am aware) that because of the over complicated, edge case, loop the loops that exist in WCAG , answering the simplest accessibility question of them all is far from simple.&lt;/p&gt;

&lt;p&gt;For those of you who missed it, &lt;a href="https://dev.to/inhuofficial/w1y-d2s-a11y-h2e-to-be-so-b4y-c9d-a1d-i10e-38no"&gt;I did have an "angry rant" about WCAG in the past&lt;/a&gt; you might enjoy, if you like sarcasm and swearing that is! &lt;/p&gt;

&lt;p&gt;In fact that post was what reminded me about this and the Stack Overflow answer I gave on the same subject (which is the inspiration for this post)!&lt;/p&gt;

&lt;p&gt;Anyway, lets start with an important message! &lt;a href="#mainarticle"&gt;If you already know you should &lt;strong&gt;always have a visible, properly associated label&lt;/strong&gt; then you can skip to the main content.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-we-start"&gt;
  &lt;/a&gt;
  Before we start
&lt;/h2&gt;

&lt;p&gt;While I may land on "technically yes" at the end of this article, I want to warn you that having a placeholder as a label &lt;strong&gt;is not accessible&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Just because it might "pass" WCAG AA guidance doesn't mean you should do it. &lt;/p&gt;

&lt;p&gt;Visible labels (that are properly associated with an input) have hundreds of benefits over a placeholder:-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;people with anxiety disorders need visible labels to stop them having to keep deleting their input to see your placeholder and check they filled in the correct field.&lt;/li&gt;
&lt;li&gt;people with poor vision may be using a screen magnifier to zoom to part of the page, it is easy to lose your position and a label lets them know they are still filling in the correct field / where they are in the form&lt;/li&gt;
&lt;li&gt;people with very poor vision (as well as people with learning impairments, people from other countries trying to improve understanding etc.) may use a screen reader - a properly associated label is important for them!&lt;/li&gt;
&lt;li&gt;people with no disabilities will find your form easier to use and will be more likely to fill it in, so even if you don't care about other people your conversion rate will improve and that will benefit you.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#accessible-input-example"&gt;
  &lt;/a&gt;
  Accessible input example
&lt;/h3&gt;

&lt;p&gt;Notice how I don't use &lt;strong&gt;implicit&lt;/strong&gt; labels (wrapping the input in the label). &lt;/p&gt;

&lt;p&gt;While it is far neater, semantically correct etc. there is an unfortunate failing in voice software. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://a11ysupport.io/tech/html/label_element"&gt;Dragon Naturally Speaking and Apple Voice control don't work properly with implicit labels&lt;/a&gt; (no I am not joking!).&lt;/p&gt;

&lt;p&gt;So you should probably stay old school with your labels and use the &lt;code&gt;for&lt;/code&gt; attribute on your labels to &lt;strong&gt;explicitly&lt;/strong&gt; associate the label with the input.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"first-name"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;First Name&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"first-name"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üò¢&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#anyway-to-the-question-does-placeholder-text-on-an-input-pass-wcag"&gt;
  &lt;/a&gt;
  Anyway - to the question - does placeholder text on an input pass WCAG?
&lt;/h2&gt;

&lt;p&gt;For the purposes of this article I am talking about standard &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; elements. &lt;/p&gt;

&lt;p&gt;Checkboxes, &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; etc. etc. must have visible labels. &lt;/p&gt;

&lt;p&gt;But as &lt;code&gt;placeholder&lt;/code&gt; attributes appear on standard &lt;code&gt;&amp;lt;input type="text"&amp;gt;&lt;/code&gt; elements and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; elements that is what I am focusing on here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-which-wcag-rules-apply"&gt;
  &lt;/a&gt;
  So which WCAG rules apply?
&lt;/h3&gt;

&lt;p&gt;Out of the 80+ Success Criterion (rules) in &lt;a href="https://www.w3.org/TR/WCAG22/"&gt;WCAG 2.2&lt;/a&gt; there are only 6 that seem to be applicable.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#sc111"&gt;1.1.1 Non-text Context&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sc131"&gt;1.3.1 Info and Relationships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sc246"&gt;2.4.6 Headings and Labels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#sc253"&gt;2.5.3: Label in Name&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#sc332"&gt;3.3.2 labels or instructions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sc412"&gt;4.1.2 Name, Role, Value&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets tackle each one and see whether any of them give us an answer!&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#111-nontext-context"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/text-equiv-all.html"&gt;1.1.1 Non-text Context&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The general idea of this Success Criterion is that anything that is not text (images, controls etc.) should have an alternative way of describing those items programatically to assistive technology. For example &lt;code&gt;alt&lt;/code&gt; attributes on images describe an image to assistive technology such as screen readers.&lt;/p&gt;

&lt;p&gt;So a key sentence in this Success Criterion is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Controls, Input:&lt;/strong&gt; If non-text content is a control or accepts user input, then it has a name that describes its purpose. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;OK, so that means we need to know what is a "name" in the context of WCAG.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#name-in-the-context-of-wcag"&gt;
  &lt;/a&gt;
  Name in the context of WCAG
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;text by which software can identify a component within Web content to the user&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/text-equiv-all.html#namedef"&gt;https://www.w3.org/TR/UNDERSTANDING-WCAG20/text-equiv-all.html#namedef&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well that is super useful, now we need to know how software can identify a component.&lt;/p&gt;

&lt;p&gt;Luckily we have that covered too (and specifically for &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements which is super helpful!)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;5.1.1 input type="text", input type="password", input type="search", input type="tel", input type="email", input type="url" and textarea Element Accessible Name Computation&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If the control has an aria-label or an aria-labelledby attribute the accessible name is to be calculated using the algorithm defined in Accessible Name and Description: Computation and API Mappings 1.1.&lt;/li&gt;
&lt;li&gt;Otherwise use the associated label element(s) accessible name(s) - if more than one label is associated; concatenate by DOM order, delimited by spaces.&lt;/li&gt;
&lt;li&gt;If the accessible name is still empty, then: use the control's title attribute.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Otherwise use the control's placeholder attribute.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;If none of the above yield a usable text string there is no accessible name.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;Source: &lt;a href="https://www.w3.org/TR/html-aam-1.0/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-name-computation"&gt;https://www.w3.org/TR/html-aam-1.0/#input-type-text-input-type-password-input-type-search-input-type-tel-input-type-email-input-type-url-and-textarea-element-accessible-name-computation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Right, that is a lot to digest but point 4 is the one that is relevant to this article, the &lt;code&gt;placeholder&lt;/code&gt; attribute can be used to calculate the name for an element.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#so-does-111-nontext-context-contain-anything-that-requires-a-visible-label"&gt;
  &lt;/a&gt;
  So does 1.1.1 Non-text Context contain anything that requires a visible label?
&lt;/h4&gt;

&lt;p&gt;Nope!&lt;/p&gt;

&lt;p&gt;If you read the whole page there is not one specific mention of a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element needing to be used on a form control.&lt;/p&gt;

&lt;p&gt;So far, we have no answer üò¢.&lt;/p&gt;

&lt;p&gt;Maybe Info and Relationships will help us!&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#131-info-and-relationships"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/content-structure-separation-programmatic.html"&gt;1.3.1 Info and Relationships&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The general idea of this Success Criterion is that structure and relationships can be programatically determined and don't rely solely on visual cues. (For example if you just used &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements for your whole application there is no way for a screen reader to work out what information is related as &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements have no semantic meaning.)&lt;/p&gt;

&lt;p&gt;Checking 1.3.1 - although it mentions labels, it does not specifically mention the &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt; element anywhere. It also states that it is a "judgement call" as to whether relationships should be programmatically determined or presented in text.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There may also be cases where it may be a &lt;strong&gt;judgment call&lt;/strong&gt; as to whether the relationships should be programmatically determined or be presented in text. However, when technologies support programmatic relationships, it is strongly encouraged that information and relationships be programmatically determined rather than described in text. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Anyway, this Criterion is more likely to cover "does a label have to be associated with an input"...which worryingly may also be questionable given "strongly encouraged" is the wording here. &lt;/p&gt;

&lt;p&gt;Anyway, that isn't the point of this article. As it stands, will still have no answer either way!&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#246-headings-and-labels"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/headings-and-labels"&gt;2.4.6 Headings and Labels&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Rather than spend too much time here we get an early answer as to whether this Success Criterion is relevant:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This Success Criterion &lt;strong&gt;does not require headings or labels&lt;/strong&gt;. This Success Criterion requires that &lt;strong&gt;if headings or labels are provided, they be descriptive.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well as we are arguing that we might not need labels this obviously won't apply!&lt;/p&gt;

&lt;p&gt;So as this point isn't relevant, lets try SC 2.5.3 &lt;strong&gt;Label&lt;/strong&gt; in name (sounds promising!)&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#253-label-in-name"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/label-in-name.html"&gt;2.5.3: Label in Name&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;The idea behind this Success Criterion is that if there is a label with text, then that text can be accessed programatically (so you can't use just an image of text for example without an &lt;code&gt;alt&lt;/code&gt; attribute...but if you are using images of text for labels you have bigger problems! ü§£)&lt;/p&gt;

&lt;p&gt;Well unfortunately WCAG ties itself in knots again here:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note that placeholder text within an input field is not considered an appropriate means of providing a label. The HTML5 specification states The placeholder attribute should not be used as an alternative to a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;. However, it is worth noting that "label" in that HTML5 statement is in code brackets and links to the label element. &lt;strong&gt;For the purposes of this Label in Name Success Criterion, "label" is not used in such a programmatic sense but is simply referring to a text string in close visual proximity to a component. As such, in the absence of any other nearby text string (as described in the preceding list), if an input contains placeholder text, such text may be a candidate for Label in Name.&lt;/strong&gt; This is supported both through the accessible name calculation (discussed later) and from the practical sense that where a visible label is not otherwise provided, it is likely that a speech-input user may attempt to use the placeholder text value as a means of interacting with the input.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So this Success Criterion still doesn't give us an answer, if anything it actually looks like it is supporting &lt;code&gt;placeholder&lt;/code&gt; text as a viable (sub-optimal and not recommended) alternative to a properly associated &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However there is another thing to note here. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The HTML5 specification states The placeholder attribute should not be used as an alternative to a &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;.&lt;/strong&gt;]&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that should persuade you that a visible and properly associated label is essential. &lt;/p&gt;

&lt;p&gt;But it says it shouldn't be used, not that it cannot be used. SO the question is...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#is-an-input-with-just-a-raw-placeholder-endraw-attribute-valid-html"&gt;
  &lt;/a&gt;
  Is an input with just a &lt;code&gt;placeholder&lt;/code&gt; attribute valid HTML?
&lt;/h4&gt;

&lt;p&gt;Well we have the W3C Validator to check this against.&lt;/p&gt;

&lt;p&gt;So is an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with a placeholder valid HTML? Well the answer (according to the &lt;a href="https://validator.w3.org/nu/#textarea"&gt;W3C validator&lt;/a&gt;) is yes! The following is valid HTML!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;test&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;form&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"test"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I am growing weary now, but "labels or instructions"...this is it, this is all about labelling things! &lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#332-labels-or-instructions"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/WAI/WCAG21/Understanding/labels-or-instructions.html"&gt;3.3.2 labels or instructions&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This Success Criterion is all about authors providing labels or instructions in forms. &lt;/p&gt;

&lt;p&gt;However out hopes are destroyed almost instantly:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This Success Criterion does not require that labels or instructions be correctly marked up, identified, or associated with their respective controls.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our last hope, Name, Role, Value....come on 4.1.2...you can do it!&lt;/p&gt;

&lt;p&gt;&lt;a&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#412-name-role-value"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.w3.org/TR/UNDERSTANDING-WCAG20/ensure-compat-rsv.html"&gt;4.1.2 Name, Role, Value&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This Success Criterion is to ensure that important information about all elements on a page can be programatically determined.&lt;/p&gt;

&lt;p&gt;We already covered this in &lt;a href="#sc111"&gt;1.1.1 Non-text Context&lt;/a&gt;. A placeholder attribute is considered acceptable for name computations and therefore we pass this Success Criterion too!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#one-final-swing-of-the-sword-surely-there-is-something-that-states-a-label-must-always-be-visible"&gt;
  &lt;/a&gt;
  One final swing of the sword, surely there is something that states a label must always be visible!
&lt;/h2&gt;

&lt;p&gt;As &lt;code&gt;placeholder&lt;/code&gt; attributes disappear once data is entered perhaps the answer is now looking at it from a code standards standpoint but purely from a perspective of a label having to be visible?&lt;/p&gt;

&lt;p&gt;Interestingly you do not have to have a visible label for &lt;a href="#sc111"&gt;1.1.1 Non-text Context&lt;/a&gt;, &lt;a href="#sc131"&gt;1.3.1 Info and Relationships&lt;/a&gt; and &lt;a href="#sc412"&gt;4.1.2 Name, Role, Value&lt;/a&gt; so we can't use that argument as to needing an actual &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Taken from &lt;a href="https://www.w3.org/TR/2016/NOTE-WCAG20-TECHS-20161007/H44"&gt;H44: Using label elements to associate text labels with form controls&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This technique (associating a label with an input) is sufficient for Success Criteria 1.1.1, 1.3.1 and 4.1.2 &lt;strong&gt;whether or not the label element is visible.&lt;/strong&gt; That is, it may be hidden using CSS. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With that being said the next sentence says...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;However, for Success Criterion 3.3.2, the label element must be visible since it provides assistance to all users who need help understanding the purpose of the field.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;But in &lt;a href="#sc332"&gt;3.3.2 labels or instructions&lt;/a&gt; although it has to be visible, it doesn't have to be correctly marked up (remember, I did say it a long time ago!).&lt;/p&gt;

&lt;p&gt;The loops continue!&lt;/p&gt;

&lt;p&gt;So there is all the relevant information I could find in WCAG and the outcome is still fuzzy, but with that being said I do have a conclusion for you!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Nowhere in WCAG does it &lt;strong&gt;explicitly&lt;/strong&gt; state that a placeholder cannot be used as a label.&lt;/p&gt;

&lt;p&gt;WCAG also states that a &lt;a href="https://www.w3.org/TR/WCAG20-TECHS/H65.html"&gt;title can be used to label an input&lt;/a&gt; üôÑ and that is worse than a placeholder as it is completely inaccessible to keyboard users! &lt;/p&gt;

&lt;p&gt;We also covered this &lt;a href="#sc111"&gt;1.1.1 Non-text Context&lt;/a&gt; when we were discussing accessible name computations. &lt;/p&gt;

&lt;p&gt;You may have missed it as we were focused on point 4 about placeholders but point 3 says the &lt;code&gt;title&lt;/code&gt; attribute can be used! (yes, &lt;code&gt;title&lt;/code&gt; attributes are used &lt;strong&gt;before&lt;/strong&gt; &lt;code&gt;placeholder&lt;/code&gt; attributes to calculate the accessible name...it shows the age of the documents as &lt;code&gt;title&lt;/code&gt; attributes are useless nowadays with touch devices and useless to keyboard users ü§¶‚Äç‚ôÇÔ∏è)  &lt;/p&gt;

&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;If the accessible name is still empty, then: use the control's title attribute.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#am-i-100-certain"&gt;
  &lt;/a&gt;
  Am I 100% certain?
&lt;/h3&gt;

&lt;p&gt;Well WCAG is hundreds of thousands of words so it is possible I have missed a key sentence somewhere that would tie it all together.&lt;/p&gt;

&lt;p&gt;But from what I have read I believe (&lt;strong&gt;very surprisingly!!&lt;/strong&gt;) that it is valid under WCAG 2.1 to only have a &lt;code&gt;placeholder&lt;/code&gt; on an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; if we are going by "the letter of the law".&lt;/p&gt;

&lt;p&gt;Obviously as I stated several times &lt;strong&gt;DO NOT USE A PLACEHOLDER ONLY ON AN INPUT&lt;/strong&gt; as it is not accessible to a lot of users rely on visible labels.&lt;/p&gt;

&lt;p&gt;For example: People with anxiety disorders or learning difficulties really hate inputs with &lt;code&gt;placeholder&lt;/code&gt; attributes as labels. This is because the label disappears when they type so they can't check they have filled the correct field in without deleting everything.&lt;/p&gt;

&lt;p&gt;Also some screen reader and browser combinations do not work with them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;And above all&lt;/strong&gt; - if you can somehow find a definitive answer to this question within WCAG then please let me know in the comments. While this has been a fun article to write I would hope that somewhere there is a line of text I have missed!&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>html</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>JavaScript question #Day 6</title>
      <author>Sooraj S</author>
      <pubDate>Thu, 15 Jul 2021 07:49:17 +0000</pubDate>
      <link>https://dev.to/soorajs98/javascript-question-day-6-3pe7</link>
      <guid>https://dev.to/soorajs98/javascript-question-day-6-3pe7</guid>
      <description>&lt;p&gt;&lt;strong&gt;What's the output ?&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Chameleon&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;colorChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;newColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;newColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;freddie&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Chameleon&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;freddie&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;colorChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;orange&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;A: &lt;code&gt;orange&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;B: &lt;code&gt;purple&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;C: &lt;code&gt;green&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;D: &lt;code&gt;TypeError&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Answer: D&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;colorChange&lt;/code&gt; function is static. Static methods are designed to live only on the constructor in which they are created, and cannot be passed down to any children. Since &lt;code&gt;freddie&lt;/code&gt; is a child, the function is not passed down, and not available on the &lt;code&gt;freddie&lt;/code&gt; instance: a &lt;code&gt;TypeError&lt;/code&gt; is thrown.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>node</category>
    </item>
    <item>
      <title>Getting started with chrome developer tools </title>
      <author>krishna kakade</author>
      <pubDate>Thu, 15 Jul 2021 06:58:18 +0000</pubDate>
      <link>https://dev.to/krishnakakade/getting-started-with-chrome-developer-tools-fin</link>
      <guid>https://dev.to/krishnakakade/getting-started-with-chrome-developer-tools-fin</guid>
      <description>&lt;p&gt;Hello there :) &lt;br&gt;
today we are going to learn practically about how we can use chrome developer tools if your into webdev/security related domain then it is more beneficial to you .&lt;br&gt;
So let's start &lt;br&gt;
First thing you need is latest chrome browser installed then do a right click and look for &lt;code&gt;Inspect&lt;/code&gt; or do &lt;code&gt;CTRL+SHIFT+I&lt;/code&gt; then you can see developer tools section out there.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DiwEtha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6xlhslpy2oppk7u4wny3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DiwEtha--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6xlhslpy2oppk7u4wny3.png" alt="devtools"&gt;&lt;/a&gt;&lt;br&gt;
In this above image in preferences you can do basic things like theme changes and formatting disable / enable javascript and in the &lt;strong&gt;Workspace&lt;/strong&gt; section you can add your own reactjs or any project and you can change code from your browser also and in the experiments section those are upcoming features you can test it out in your browser in &lt;code&gt;Devices&lt;/code&gt; you can add custom devices or existing devices for checking in different different devices how your website/web-app behaves or work and in throttling you can customise your internet connection speed according to your needs and in &lt;code&gt;shortcuts&lt;/code&gt; you can use &lt;code&gt;CTRL+L&lt;/code&gt; for clearing console and many more shortcuts to save your seconds/minutes :)&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Elements section *&lt;/em&gt;&lt;br&gt;
if you go the elements section and did right click to the header or any tag you can edit that with right click and then below thing &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9Vglp_Yw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f184081ngvai91qg19j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Vglp_Yw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9f184081ngvai91qg19j.png" alt="Elements"&gt;&lt;/a&gt;&lt;br&gt;
and also if you do select to the specific heading tag or paragraph then after right clicks you can copy all his CSS styles and improve it and use it for yourself or for your project like implementing twitter animations for buttons in your webapp &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8J8naJPE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/247galruz6zgx3f3cqf3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8J8naJPE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/247galruz6zgx3f3cqf3.png" alt="selector"&gt;&lt;/a&gt; &lt;br&gt;
and also you can do duplicate or copy of the elements &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sources&lt;/strong&gt;&lt;br&gt;
In the sources section you we can create breakpoints for our code which to execute or not or stop only execute not debug &lt;br&gt;
like that &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Kc4CeIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9a7sypt8bnglnbhfrc6j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Kc4CeIA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9a7sypt8bnglnbhfrc6j.png" alt="sources"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have ul(un ordered list and you want to copy this js path particlular list item then you can get js path by this)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pa_rI-_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ob6hib8yu94i8vuwpzql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pa_rI-_X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ob6hib8yu94i8vuwpzql.png" alt="sources"&gt;&lt;/a&gt; &lt;br&gt;
and you can remove that item using this thing&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;onClickEvent&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;mycount&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;your a best learner&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;mycount&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;excercise&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;body &amp;gt; ul &amp;gt; li:nth-child(2)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;we use it as IDE(Integrated Development Environment) chrome workspace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Console&lt;/strong&gt;&lt;br&gt;
"Preserve Log upon Navigation"&lt;br&gt;
will persist console content by default. You can clear the console log by clicking the 'clear' button in the top right or opening and closing the tools.&lt;br&gt;
we can use console.log to debug and for solving errors and also for displaying data more precisely using console.table().&lt;br&gt;
&lt;strong&gt;Network&lt;/strong&gt;&lt;br&gt;
In this section you can turn on throttling like this change your network within in the browser &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pr2YZBYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3um65fnc8c1sc0m9w35.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pr2YZBYV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b3um65fnc8c1sc0m9w35.png" alt="throttling"&gt;&lt;/a&gt; &lt;br&gt;
and also you can check how much time content is taking to load &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7wTvGR6n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otlr0cudkhnrni5gjoa4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7wTvGR6n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/otlr0cudkhnrni5gjoa4.png" alt="speed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Application&lt;/strong&gt;&lt;br&gt;
if open same application in another tabs then that data should be shared that called &lt;code&gt;localstorage&lt;/code&gt; and data that is limited for that Session only that called sessionStorage we can save that data for that session &lt;br&gt;
you can add items to sessionStorage using this&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;js sessionStorage.setItem("name","krishna");&lt;br&gt;
undefined&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;br&gt;
For knowing more performance using you can refer &lt;a href="https://web.dev/measure/"&gt;web.dev&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Security&lt;/strong&gt;&lt;br&gt;
you can know more about site is secured or not which certificates like &lt;a href="https://www.digicert.com/tls-ssl/business-tls-ssl-certificates?ef_id=CjwKCAjwlrqHBhByEiwAnLmYUGLn72x56d2SJTXbz2D_jO2J_ZxfaHdkLz6G4ygFFJ02UEv_9AaoZBoCT9cQAvD_BwE:G:s&amp;amp;s_kwcid=AL!6100!3!474776495915!e!!g!!secure%20site&amp;amp;campaignid=197474813&amp;amp;adgroupid=59344376853&amp;amp;gclid=CjwKCAjwlrqHBhByEiwAnLmYUGLn72x56d2SJTXbz2D_jO2J_ZxfaHdkLz6G4ygFFJ02UEv_9AaoZBoCT9cQAvD_BwE"&gt;digicerti&lt;/a&gt; site is using .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Memory&lt;/strong&gt;&lt;br&gt;
We can take heap snapshots to see it to take JS heap snapshots, analyze memory graphs, compare snapshots, and find memory leaks.&lt;br&gt;
&lt;a href="https://developer.chrome.com/docs/devtools/memory-problems/heap-snapshots/"&gt;Know more hear&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;thank you for reading &lt;br&gt;
And also i am open for front-end web development jobs and i have experience with react(8 months) a if anyone is having opportunity related to this domains please let me know i am passionate about learning new things and implementing projects.&lt;br&gt;
have a great day ahead :)&lt;/p&gt;

</description>
      <category>chrome</category>
      <category>devtools</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How NOT to use Git in Practice. Ten Git usages, you should know to avoid.</title>
      <author>Tapas Adhikary</author>
      <pubDate>Thu, 15 Jul 2021 06:54:59 +0000</pubDate>
      <link>https://dev.to/atapas/how-not-to-use-git-in-practice-ten-git-usages-you-should-know-to-avoid-88l</link>
      <guid>https://dev.to/atapas/how-not-to-use-git-in-practice-ten-git-usages-you-should-know-to-avoid-88l</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found this article helpful, you will most likely find my tweets useful too. So make sure you follow me on &lt;a href="https://twitter.com/tapasadhikary"&gt;Twitter&lt;/a&gt; for more information about web development and content creation. This article was originally published on my &lt;a href="https://blog.greenroots.info/"&gt;Blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;Hello friends üëã. I hope you all are doing great and had a productive week learning something new. Today, we will discuss &lt;code&gt;Git&lt;/code&gt; and a few usages, practices that you should avoid making your development experience a better one.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-is-git-and-how-does-it-work"&gt;
  &lt;/a&gt;
  What is Git, and How does it work?
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; is an open-source version control system(VCS) that helps all project contributors to keep their project artifacts(folder, files, source code, and many more) in sync. It provides a workflow that is easy to understand, learn, and use in practice. If you are a beginner to Git or have any difficulties with its usages, here is an in-depth, hands-on video tutorial for you. Please have a look.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/vWtu4mzUgQo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Suppose you like the content, &lt;a href="https://youtube.com/c/TapasAdhikary?sub_confirmation=1"&gt;please feel free to subscribe to the channel&lt;/a&gt;. Thanks a lot üôè. Let us now see ten usages &amp;amp; practices that you should avoid.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#10-git-usages-you-should-know-to-avoid"&gt;
  &lt;/a&gt;
  10 Git Usages You Should Know to Avoid
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; is a highly flexible tool. When you know to handle Git Commands, you feel superior about managing things. At the same time, if you are unsure about specific usages or mismanaging them, you may end up losing changes, making yourself &amp;amp; the team frustrated. Here are ten usages we should stop or avoid.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-master-endraw-is-special"&gt;
  &lt;/a&gt;
  The &lt;code&gt;master&lt;/code&gt; is special
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bK-vS6JC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574372448/o--5Kk39VH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bK-vS6JC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574372448/o--5Kk39VH.png" alt="1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes, it would not be the best to commit to the master branch and other main branches(like the release, dev) directly. In Git, a &lt;code&gt;master&lt;/code&gt; branch must contain the most stable version of your source code and other project artifacts. It is most likely that you will build your end product from the master or a release branch. Committing and pushing to these branches directly have a higher risk of corrupting changes, introducing bugs, hours of extra work.&lt;/p&gt;

&lt;p&gt;In many cases, you will not have access to commit to master directly. Your source code repository administrator would have set the branch protection rules. If you have access to do some, please don't do it or be sure of what you are doing. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"With great power comes great responsibility"‚Äî the Peter Parker principle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So better to create a feature/fix branch and then Change =&amp;gt; Stage =&amp;gt; Commit =&amp;gt; Push to it than pushing directly to master/main/release.&lt;/p&gt;

&lt;p&gt;üí° It's better to practice it even when you are alone in the repo‚Äîdo a role play.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-raw-application-secrets-endraw-a-secret"&gt;
  &lt;/a&gt;
  Keep &lt;code&gt;application secrets&lt;/code&gt; a secret
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NCFbC_Ch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574420260/YV6Ijvx_W.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NCFbC_Ch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574420260/YV6Ijvx_W.png" alt="2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When working on a project(including side hustles), you may have a few details that you want to keep private. It could be the API Keys, Secret Keys, Database secrets, Auth secrets, and many more. Making these publicly available may increase security risks to your application. At the same time, it may make a big hole in your pocket when someone misuses. &lt;/p&gt;

&lt;p&gt;Do not commit your project secrets with any accidental pushes to the remote repository.&lt;/p&gt;

&lt;p&gt;üí° Create a &lt;code&gt;.gitignore&lt;/code&gt; file at the root of the project folder and mention file patterns(like .env*) to ignore from staging.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git-is-not-your-raw-file-storage-endraw-"&gt;
  &lt;/a&gt;
  Git is not your &lt;code&gt;file storage&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q_4FXoBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574430508/7m1Wh7Ff4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q_4FXoBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574430508/7m1Wh7Ff4.png" alt="3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you want to store movies? An extensive demo video? Git is not the place for it. Other media services work better for these use-cases. It is better not to store large files and binaries in Git repositories. You know, they call it source code repository!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Technically, you can store anything in a Git repository as long as it doesn't bother and cost someone. The cost is not always the money. It is about time too. It would be a massive waste of time for someone to clone a repository because we have stored a few gigabytes of video in it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;üí° You can configure the type and size with GitHub, BitBucket, etc., to limit and keep it in control.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#together-we-strong-but-raw-not-always-endraw-"&gt;
  &lt;/a&gt;
  Together we strong, but &lt;code&gt;not always&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CSsbMqKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574442920/-JkQCDGY8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CSsbMqKX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574442920/-JkQCDGY8.png" alt="4.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is usual to handle multiple features/fixes/issues in parallel. But do not handle multiple issues in a single branch(even when you are super confident about it!). It may cause a nightmare when you(or your lead) decide to drop one or more issues from the planned fixes. Now you have to pick the unwanted fixes, code changes and remove them. Who wants to do any extra work? So, let's avoid it.&lt;/p&gt;

&lt;p&gt;üí° A better pattern to follow is, 1 issue =&amp;gt; 1 branch =&amp;gt; 1 PR and repeat.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#do-not-raw-force-endraw-"&gt;
  &lt;/a&gt;
  Do not &lt;code&gt;force&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ObaWcA0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574452288/aE3YlhEfn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ObaWcA0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574452288/aE3YlhEfn.png" alt="5.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a situation,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You and your friend are working in the same branch.&lt;/li&gt;
&lt;li&gt;She made a commit and pushed her changes to the remote.&lt;/li&gt;
&lt;li&gt;You are also done with your changes now but you have made a force push to the remote branch.&lt;/li&gt;
&lt;li&gt;In the blink of an eye, all the changes done by your friend are just gone!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don't perform a force push unless you need it. Your co-workers may go insane because of this.&lt;/p&gt;

&lt;p&gt;üí° Always pull before the push.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-history-endraw-is-important"&gt;
  &lt;/a&gt;
  &lt;code&gt;History&lt;/code&gt; is important
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4fop8ogK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574487530/QNx3FFAVF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4fop8ogK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574487530/QNx3FFAVF.png" alt="6.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you commit a change to a branch, git writes the commit history and preserves it. Suppose you wonder why commit messages are important because those messages become a part of history. You can understand why someone has done specific changes to a file and who has done them.&lt;/p&gt;

&lt;p&gt;Modifying or deleting history will take away the opportunity for us to debug and find the error points. So, please stay away from doing it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-raw-ignore-endraw-to-ignore"&gt;
  &lt;/a&gt;
  Don't &lt;code&gt;ignore&lt;/code&gt; to ignore
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v8H_pbSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574495308/H51IYYROP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v8H_pbSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574495308/H51IYYROP.png" alt="7.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;.gitignore&lt;/code&gt; is a particular file where you can mention file name patterns to ignore specific files from the staging. Thus there is no chance of any accidental commit and push of the ignored files. It is a savior. If you are a web developer, you may not want to push the &lt;code&gt;node_modules&lt;/code&gt; folder to your remote repository. &lt;/p&gt;

&lt;p&gt;Please create a &lt;code&gt;.gitignore&lt;/code&gt; file with file name patterns and keep it at the root of the project folder.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resetting-is-probably-the-raw-last-solution-endraw-"&gt;
  &lt;/a&gt;
  Resetting is probably the &lt;code&gt;last solution&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---6sOcm-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574504256/yRKJf5tBn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---6sOcm-G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574504256/yRKJf5tBn.png" alt="8.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you reset often? You may lose your changes if you reset a branch without stashing or committing your changes. When you are in trouble with your files in Git, &lt;code&gt;reset&lt;/code&gt; may not be the only solution.&lt;/p&gt;

&lt;p&gt;üí° Ask yourself, do you need to reset a branch?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-make-it-raw-bulky-endraw-"&gt;
  &lt;/a&gt;
  Don't make it &lt;code&gt;bulky&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CWTdkAk9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574513100/yH88ywpfg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CWTdkAk9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574513100/yH88ywpfg.png" alt="9.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do not park many commits for an &lt;code&gt;end-of-the-day push&lt;/code&gt;. Many small logical commits are much better than a larger ones. As we know, for each commit we make, git writes it to the history with a commit id and user-provided message. Hence it is a good practice to break your commits into small logical chunks.&lt;/p&gt;

&lt;p&gt;üí° Commit often, push logically. It reduces your chance of facing deadly &lt;code&gt;merge conflicts&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-past-endraw-is-past"&gt;
  &lt;/a&gt;
  The &lt;code&gt;past&lt;/code&gt; is past
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qxHLUkAD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574521894/1zAU_tTQE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qxHLUkAD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1625574521894/1zAU_tTQE.png" alt="10.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is not a good practice to amend a commit in the remote directly. Don't do it if you are not sure why and what you are doing.&lt;/p&gt;

&lt;p&gt;üí° If a StackOverflow solution is amending commits in the remote, look for another solution!!!&lt;/p&gt;

&lt;p&gt;That's all for now, friends. I have shared this content originally as a Twitter thread recently. You may be interested in reading and following the discussions there as well. &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--gZs-D4vf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1305109781619724288/5-e1f9SQ_normal.jpg" alt="Tapas Adhikary profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Tapas Adhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @tapasadhikary
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Hi friends, do you use Git? Let's discuss some Don'ts you should avoid. &lt;br&gt;&lt;br&gt;Here is a thread.&lt;br&gt;&lt;br&gt;üßµ üëá&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/DEVCommunity"&gt;#DEVCommunity&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/git"&gt;#git&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/webdevelopment"&gt;#webdevelopment&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:45 PM - 07 Jul 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1412769834983510017" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1412769834983510017" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1412769834983510017" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;




&lt;br&gt;
I hope you enjoyed this article or found it helpful. Let's connect. Please find me on  &lt;a href="https://twitter.com/tapasadhikary"&gt;Twitter(@tapasadhikary&lt;/a&gt;), sharing thoughts, tips, and code practices. Please give a follow.

&lt;p&gt;You may also like,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/16-side-project-github-repositories-you-may-find-useful-ckk50hic406quhls1dui2d6sd"&gt;16 side project GitHub repositories you may find useful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/why-do-you-need-to-do-side-projects-as-a-developer-ckhn5m5km05teajs1fvjd7u5f"&gt;Why do you need to do Side Projects as A Developer?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>codenewbie</category>
      <category>github</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
