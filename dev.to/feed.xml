<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Orchestration and Microservices - A match made in heaven</title>
      <author>Boney</author>
      <pubDate>Thu, 16 Dec 2021 04:19:19 +0000</pubDate>
      <link>https://dev.to/boneys/orchestration-and-microservices-a-match-made-in-heaven-3jjn</link>
      <guid>https://dev.to/boneys/orchestration-and-microservices-a-match-made-in-heaven-3jjn</guid>
      <description>&lt;p&gt;Microservices have emerged as the dominant application development paradigm in the software world today. It has tremendous benefits both from a business and technical perspective due to its fundamental characteristics of agility, scalability, and resiliency.&lt;/p&gt;

&lt;p&gt;However, implementing microservices are hard! The inherently distributed nature of this architectural pattern introduces complexity across multiple areas especially around Transaction Management, Data Consistency, and Process Automation. In a distributed system, Business Transactions can span across multiple services. Since we no longer have the ability to run a single ACID transaction, it requires careful coordination across these services to ensure that you have a consistent and reliable system at the end of a business process.&lt;/p&gt;

&lt;p&gt;Solutions to solve this “coordination” problem have led to the rise of a new set of application patterns that can be broadly classified into two main groups - Choreography and Orchestration.&lt;/p&gt;

&lt;p&gt;Let us tackle the first group - choreography which advocates the usage of events as a coordination mechanism to complete local tasks within each microservice involved in an end-to-end business transaction. Each microservice is responsible for its local execution of the transaction resulting in the publishing of events that other microservices react to and then execute their local transactions. In other words, a sequence of event subscriptions across various microservices to complete a business transaction.&lt;/p&gt;

&lt;p&gt;Using the ubiquitous “Flight Booking example to depict a choreographic approach.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o1S3L-8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/orkes-io/docs/blob/main/blog/assets/choreography-microservices.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o1S3L-8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/orkes-io/docs/blob/main/blog/assets/choreography-microservices.png%3Fraw%3Dtrue" alt="Microservice Choreography" width="880" height="440"&gt;&lt;/a&gt; &lt;/p&gt;
&lt;center&gt;&lt;em&gt;Choreography&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;As seen the various microservices utilize events to interact with each other to complete the booking process flow.&lt;/p&gt;

&lt;p&gt;The tendency to move towards choreography to implement business flows in a distributed environment is natural, the major appeal being the autonomy that this pattern provides. As seen in the flight booking example below, each microservice executes its local transaction and publishes events that are subscribed-to by other microservices which in turn trigger local transactions.   &lt;/p&gt;

&lt;p&gt;But as you start looking at it more closely, we realize that there is a relationship or a logical flow between the subscriptions and that is where it starts to become problematic.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To begin with, it becomes difficult to see the flow as it is embedded within code. In other words, the lack of visibility into the process flows is a challenging aspect of choreography as you would need to reason over all the various microservices to infer the flow&lt;/li&gt;
&lt;li&gt;It becomes extremely difficult to gauge the impact of a change within the flow requiring coordinated deployment and hope that it works due to the inability to test it holistically (since each service just does its own bit)&lt;/li&gt;
&lt;li&gt;There is no systematic mechanism to report as well as action on technical/business metrics associated with the process (e.g. SLAs, How much are we done with Process X ?)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In short, with peer-to-peer choreography, it becomes harder to scale with growing business needs and complexities. It does offer a low entry barrier but you completely lose sight of the larger-scale flow.&lt;/p&gt;

&lt;p&gt;On the other side of the spectrum is the Orchestration approach which relies purely on a task-based approach to coordinate and execute process flows. Generally, it is implemented using a central component that issues task-based requests to the individual services, interprets response(s), and decides to proceed/terminate or complete the flow.&lt;/p&gt;

&lt;p&gt;Going back to the Flight Booking problem, if the orchestration approach is adopted, it would be depicted like something below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--81C3K0WR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/orkes-io/docs/blob/main/blog/assets/orchestration-microservices.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--81C3K0WR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/orkes-io/docs/blob/main/blog/assets/orchestration-microservices.png%3Fraw%3Dtrue" alt="Microservice Orchestration" width="880" height="556"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;center&gt;&lt;em&gt;Orchestration&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;The orchestration approach does alleviate some of the problems that choreography poses - There is now complete process visibility and traceability into the process flows, change impact is localized to the central component and it generally becomes easier and quicker to debug issues as well as action on them.&lt;/p&gt;

&lt;p&gt;However applying orchestration is easier said than done and while at first glance it looks easy, it does have a whole set of challenges associated with its implementation.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For example, how do we prevent the centralized component from being a single point of failure? &lt;/li&gt;
&lt;li&gt;In addition to that, we would need to ensure that there are no business logic creeps into the component and it does what it is intended to do i.e. just pure orchestration&lt;/li&gt;
&lt;li&gt;And finally, how do we provide reliable, resilient, and scalable orchestration services since it forms such a critical piece of the infrastructure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In short, we would need to build a distributed orchestration engine. And building one is not easy! Like any other piece of infrastructural software, it is always prudent to utilize a purpose-built tool. And it holds true in the case of a distributed orchestration engine too.&lt;/p&gt;

&lt;p&gt;Introducing Conductor which was built to help orchestrate microservices based process flows at Netflix.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Conductor provides a clean task-based API backed by a distributed server ecosystem to create a highly efficient and scalable distributed orchestration engine. &lt;/li&gt;
&lt;li&gt;It uses a well-structured DSL mechanism to help define process flows across microservices. &lt;/li&gt;
&lt;li&gt;It provides full operational control over process flows including operations for pause/resume/retry and a user interface to visualize, replay and search the flows. &lt;/li&gt;
&lt;li&gt;Not to mention the fact that it is battle-tested for scale at Netflix volumes running millions of concurrent process flows.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A3sUfb4i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/orkes-io/docs/blob/main/blog/assets/netflix-conductor-architecture-orkes.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A3sUfb4i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/orkes-io/docs/blob/main/blog/assets/netflix-conductor-architecture-orkes.png%3Fraw%3Dtrue" alt="Netflix Conductor Architecture - Orkes" width="880" height="600"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;center&gt;&lt;em&gt;Netflix Conductor Architecture&lt;/em&gt;&lt;/center&gt;

&lt;p&gt;To conclude, the choice of orchestration over choreography to help run your process flows across microservices is a safe one. However, it would be advisable to use a purpose-built engine like Netflix Conductor to help implement your orchestration needs. The implementation is complex especially in a distributed system and Conductor helps abstract all the technical and infrastructural complexities associated with orchestration helping you focus on your business code.&lt;/p&gt;

&lt;p&gt;The adoption and usage of Conductor have exploded over the past few years since it was first released. Organizations rely on Conductor to help implement reliable, scalable, and resilient Microservices-based applications utilizing a robust distributed orchestration engine. From powering complex loan origination processes at a leading Financial Institution to enabling India’s largest food delivery platform to assist sales at a large real estate brokerage company, the range of use cases that Conductor supports is broad.&lt;/p&gt;

&lt;p&gt;And that is precisely why we started Orkes! Orkes brings to market an enterprise-grade, cloud-hosted, fully managed version of Netflix Conductor offering full compatibility with the open-source version along with tiered support.&lt;/p&gt;

&lt;p&gt;Early access to the platform is now available for interested customers &lt;a href="https://orkes.io"&gt;https://orkes.io&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://netflix.github.io/conductor/"&gt;Follow/Star the Netflix Conductor Open Source Github Repo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://orkes.io"&gt;Learn more about Orkes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://join.slack.com/t/orkes-conductor/shared_invite/zt-xyxqyseb-YZ3hwwAgHJH97bsrYRnSZg"&gt;Join the Orkes Conductor Slack community here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://jobs.lever.co/Orkes/"&gt;Want to work at Orkes?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://orkes.io/content/blog/orchestration-microservices-match-made-heaven"&gt;Link to Original Post&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>orchestration</category>
      <category>microservices</category>
      <category>workflow</category>
    </item>
    <item>
      <title>40+ Nodejs Projects for Beginners – Advance</title>
      <author>Dev Journal</author>
      <pubDate>Thu, 16 Dec 2021 04:17:05 +0000</pubDate>
      <link>https://dev.to/devjournal/40-nodejs-projects-for-beginners-advance-2c7h</link>
      <guid>https://dev.to/devjournal/40-nodejs-projects-for-beginners-advance-2c7h</guid>
      <description>&lt;p&gt;If you have decided to build your career in &lt;span&gt;NodeJS &lt;/span&gt;development, we have gathered a list of &lt;span&gt;nodeJS projects for beginners&lt;/span&gt; for all node enthusiasts to build highly scalable &lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/nodejs-project-for-beginners/&amp;amp;ved=2ahUKEwiOlt_I6e7zAhXXb30KHRuwBEIQFnoECAUQAQ&amp;amp;usg=AOvVaw1LC_Y25wyupI6_tdH89kg1" rel="noreferrer noopener"&gt;web applications&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These best &lt;span&gt;nodeJS projects for beginners&lt;/span&gt; will help you gain knowledge about core node concepts, train your skill level, build a superb work portfolio, and get hired for your dream job.&lt;/p&gt;
&lt;p&gt;When you start building your first projects, it’s highly recommended for beginners in coding to create a repository for each of your projects so you will be able to learn &lt;em&gt;git&lt;/em&gt; and show your coding expertise to future employers. &lt;/p&gt;
&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/nodejs-project-for-beginners/&amp;amp;ved=2ahUKEwiOlt_I6e7zAhXXb30KHRuwBEIQFnoECAUQAQ&amp;amp;usg=AOvVaw1LC_Y25wyupI6_tdH89kg1"&gt;40+ Nodejs Projects for Beginners – Easy Ideas to Get Started Coding Nodejs &lt;/a&gt;&lt;/b&gt; &lt;/p&gt;






</description>
    </item>
    <item>
      <title>Artificial Intelligence Tutorial: What is AI? Basics for Beginners</title>
      <author>Dev Journal</author>
      <pubDate>Thu, 16 Dec 2021 04:16:20 +0000</pubDate>
      <link>https://dev.to/devjournal/artificial-intelligence-tutorial-what-is-ai-basics-for-beginners-5fpb</link>
      <guid>https://dev.to/devjournal/artificial-intelligence-tutorial-what-is-ai-basics-for-beginners-5fpb</guid>
      <description>&lt;p&gt;This tutorial provides introductory knowledge on Artificial Intelligence. It would come to a great help if you are about to select Artificial Intelligence as a course subject. You can briefly know about the areas of AI in which research is prospering.&lt;/p&gt;

&lt;h1&gt;Audience&lt;/h1&gt;

&lt;p&gt;This tutorial is prepared for the students at beginner level who aspire to learn Artificial Intelligence.&lt;/p&gt;

&lt;h1&gt;Prerequisites&lt;/h1&gt;

&lt;p&gt;The basic knowledge of Computer Science is mandatory. The knowledge of Mathematics, Languages, Science, Mechanical or Electrical engineering is a plus. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Read More: &lt;a href="https://www.codelivly.com/what-is-ai-artificial-intelligence-tutorial-basics-for-beginners/" rel="noreferrer noopener"&gt;Artificial Intelligence Tutorial: What is AI? Basics for Beginners - Advance&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How to Install Kubernetes on Windows 10?</title>
      <author>Nawaz Siddiqui</author>
      <pubDate>Thu, 16 Dec 2021 03:54:41 +0000</pubDate>
      <link>https://dev.to/nawazsiddiqui27/how-to-install-kubernetes-on-windows-10-4bep</link>
      <guid>https://dev.to/nawazsiddiqui27/how-to-install-kubernetes-on-windows-10-4bep</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4oUyo9kK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtepgg3wkusql7hwb09p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4oUyo9kK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtepgg3wkusql7hwb09p.png" alt="Image description" width="730" height="389"&gt;&lt;/a&gt;&lt;br&gt;
Kubernetes or K8s is an open-source platform to manage containerized workloads and applications. With containers, it's easy to manage, run or ship your application. Kubernetes helps to manage cloud resources and makes your cloud infrastructure more scalable by automating and deploying applications in no time. While installing Kubernetes for the first time, these are the steps I followed on my Windows 10 home. Let’s explore each of them:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-hyperv"&gt;
  &lt;/a&gt;
  Setting up Hyper-V
&lt;/h2&gt;

&lt;p&gt;Hyper-V is window's own virtualization software same as Virtualbox. If you are using windows home, you need to install Hyper-V. Here is the article for that. After installing, follow these steps to enable Hyper-V on your local machine.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Open search bar and go to control panel&lt;/li&gt;
&lt;li&gt; On the left side of the control panel, click on program and then on programs and features.&lt;/li&gt;
&lt;li&gt; Turn on the Windows features on and off.&lt;/li&gt;
&lt;li&gt; Check on the Hyper-V and Windows Hypervision Platform, click the OK button.&lt;/li&gt;
&lt;li&gt; It may take a few minutes to install Hyper-V on the system, in some cases, your system will reboot itself a couple of times. &lt;/li&gt;
&lt;li&gt; To verify the successful installation of Hyper-V on Windows, open windows Powershell, run it as an administrator, and paste the below command.
Get-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m20_60Ls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjrojkx1iowob16lk8ia.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m20_60Ls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bjrojkx1iowob16lk8ia.png" alt="Image description" width="880" height="305"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-docker-on-windows-10"&gt;
  &lt;/a&gt;
  Installing Docker on Windows 10
&lt;/h2&gt;

&lt;p&gt;You can install any alternatives of docker like Containerd, RunC, Podman, and many more to mention. Although I am installing Kubernetes for the first time in the system, I used the Docker desktop. Click here to go to the official website of docker and click on Get Docker Desktop. Follow the instructions while installing and you are ready to run Docker on your machine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-kubernetes-on-windows-10"&gt;
  &lt;/a&gt;
  Installing Kubernetes on Windows 10
&lt;/h2&gt;

&lt;p&gt;Follow these steps to install Kubernetes on windows 10 seamlessly. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Open the Docker GUI tool and click on Settings.&lt;/li&gt;
&lt;li&gt; On the left plane, click on Kubernetes and check on Enable Kubernetes
Apply the changes, wait for 5 to 10 minutes, or until the installation complete popup message is shown up on the screen.
To confirm the running of Kubernetes, hover your mouse pointer on the down left side of the Docker desktop plane, you will see “Kubernetes Running” message.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4yR6jojO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vnqu7hg8il4syji06a3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4yR6jojO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5vnqu7hg8il4syji06a3.jpg" alt="Image description" width="880" height="472"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#accessing-kubernetes-ui"&gt;
  &lt;/a&gt;
  Accessing Kubernetes UI
&lt;/h2&gt;

&lt;p&gt;Kubernetes UI is not installed by default. It’s a web-based interface and can be accessed via a web browser. Open the command prompt and paste the given script to deploy dashboard UI. &lt;br&gt;
kubectl apply -f &lt;a href="https://raw.githubusercontent.com/Kubernetes/dashboard/v2.4.0/aio/deploy/recommended.yaml"&gt;https://raw.githubusercontent.com/Kubernetes/dashboard/v2.4.0/aio/deploy/recommended.yaml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In my case, the command was showcasing some error with my Linux, so I reinstalled Ubuntu 20.04 LTS. If you don’t have any Linux distribution, install from the Microsoft store in case of any error.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#accessing-kubernetes-dashboard"&gt;
  &lt;/a&gt;
  Accessing Kubernetes Dashboard
&lt;/h2&gt;

&lt;p&gt;You need to create a sample user to access the Kubernetes dashboard. Follow this article to create a sample user and generate token.&lt;br&gt;
To enable access to the dashboard, use the below command in the terminal&lt;br&gt;
kubectl proxy&lt;br&gt;
The dashboard will be available at &lt;a href="http://localhost:8001/api/v1/namespaces/Kubernetes-dashboard/services/https:Kubernetes-dashboard:/proxy/"&gt;http://localhost:8001/api/v1/namespaces/Kubernetes-dashboard/services/https:Kubernetes-dashboard:/proxy/&lt;/a&gt;&lt;br&gt;
If everything is done right you will be able to get access to the dashboard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kSzywaUU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6u70tjaetpesx7g21l2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kSzywaUU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6u70tjaetpesx7g21l2.png" alt="Image description" width="880" height="452"&gt;&lt;/a&gt;&lt;br&gt;
These are the steps I followed to install Kubernetes on windows 10 home. I hope this article was helpful. If you still face any problems, comment down below, I will try to get back to you with the solution. &lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>cloudnative</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to handle errors gracefully in Remix</title>
      <author>Carlo Gino Catapang</author>
      <pubDate>Thu, 16 Dec 2021 03:31:49 +0000</pubDate>
      <link>https://dev.to/codegino/how-to-handle-errors-gracefully-in-remix-1jkb</link>
      <guid>https://dev.to/codegino/how-to-handle-errors-gracefully-in-remix-1jkb</guid>
      <description>&lt;h2&gt;
  &lt;a href="#using-errorboundary-and-catchboundary-in-error-handling"&gt;
  &lt;/a&gt;
  Using ErrorBoundary and CatchBoundary in error handling
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-remix-handles-errors"&gt;
  &lt;/a&gt;
  How Remix handles errors
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;From the Remix official documentation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Remix will automatically catch errors and render the nearest error boundary for errors thrown while:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;rendering in the browser&lt;/li&gt;
&lt;li&gt;rendering on the server&lt;/li&gt;
&lt;li&gt;in a loader during the initial server rendered document request&lt;/li&gt;
&lt;li&gt;in an action during the initial server rendered document request&lt;/li&gt;
&lt;li&gt;in a loader during a client-side transition in the browser (Remix serializes the error and sends it over the network to the browser)&lt;/li&gt;
&lt;li&gt;in an action during a client-side transition in the browser&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-can-we-use-to-handle-errors-in-remix"&gt;
  &lt;/a&gt;
  What can we use to handle errors in Remix?
&lt;/h3&gt;

&lt;p&gt;Since Remix is still a JavasScript framework, we can still use JavaScript constructs to catch errors such as &lt;code&gt;try/cath&lt;/code&gt;.&lt;br&gt;
This blog will only discuss how to catch errors using &lt;code&gt;ErrorBoundary&lt;/code&gt; and &lt;code&gt;CatchBoundary&lt;/code&gt;.&lt;/p&gt;


&lt;h4&gt;
  &lt;a href="#using-raw-errorboundary-endraw-"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;ErrorBoundary&lt;/code&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;From the official Docs&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An ErrorBoundary is a React component that renders whenever there is an error anywhere on the route, either during rendering or during data loading.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is an example of using the &lt;code&gt;ErrorBoundary&lt;/code&gt; component to catch errors in Remix.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ErrorBoundaryComponent&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;remix&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ErrorBoundary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ErrorBoundaryComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;ERROR: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using the &lt;code&gt;ErrorBoundary&lt;/code&gt; above, Here are some examples of errors we can catch and the corresponding result.&lt;/p&gt;



&lt;h5&gt;
  &lt;a href="#-explicitly-thrown-errors"&gt;
  &lt;/a&gt;
  - Explicitly thrown errors
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;I am a failure!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;ERROR: "I am a failure!"&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#-unhandled-errors"&gt;
  &lt;/a&gt;
  - Unhandled errors
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://a.b.c&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;ERROR: "request to http://a.b.c/ failed, reason: getaddrinfo ENOTFOUND a.b.c"&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#-other-errors-in-backend"&gt;
  &lt;/a&gt;
  - Other errors in backend
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// syntax error&lt;/span&gt;
  &lt;span class="nx"&gt;someCodeInBackend&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;ERROR: "someCodeInBackend is not defined"&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#-errors-in-react-land"&gt;
  &lt;/a&gt;
  - Errors in React land
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;someCodeInReact&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/*...*/&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;ERROR: "someCodeInReact is not defined"&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h4&gt;
  &lt;a href="#using-raw-catchboundary-endraw-"&gt;
  &lt;/a&gt;
  Using &lt;code&gt;CatchBoundary&lt;/code&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;A CatchBoundary is a React component that renders whenever an action or loader throws a Response.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It works in combination with &lt;code&gt;useCatch&lt;/code&gt;. The hook will allow us to get a reference to the response's &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;status&lt;/code&gt;, and &lt;code&gt;statusText&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;CatchBoundary&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;caught&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCatch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        ERROR: &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;caught&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;statusText&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;caught&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;caught&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Some custom message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;501&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;will yield to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;ERROR: Not Implemented 501&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;Some custom message&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also use other data formats such as plain string, but we need to make sure our &lt;code&gt;CatchBoundary&lt;/code&gt; can handle them properly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Some custom message&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;501&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;will yield to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;ERROR: Not Implemented 501&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#in-which-cases-should-we-use-one-over-the-other"&gt;
  &lt;/a&gt;
  In which cases should we use one over the other?
&lt;/h3&gt;

&lt;p&gt;We should use &lt;code&gt;CatchBoundary&lt;/code&gt; if we care about the context of the error, such as status codes or the custom data related to the error; in another case, we use &lt;code&gt;ErrorBoundary&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The good thing is we can even use them together. So, for example, if there's an error in the &lt;code&gt;CatchBoundary&lt;/code&gt;, that error will be caught by the &lt;code&gt;ErrorBoundary&lt;/code&gt;.&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#live-examples"&gt;
  &lt;/a&gt;
  Live examples
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#handling-global-404-error"&gt;
  &lt;/a&gt;
  Handling global 404 error
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://playground-efupcps19-codegino.vercel.app/non-exisiting-page"&gt;/non-exisiting-page&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#handling-route-404-error"&gt;
  &lt;/a&gt;
  Handling route 404 error
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://playground-efupcps19-codegino.vercel.app/words/404"&gt;/words/404&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#handling-error-in-an-action"&gt;
  &lt;/a&gt;
  Handling error in an action
&lt;/h4&gt;

&lt;p&gt;Try to fill in the form, then click submit to see the &lt;code&gt;401&lt;/code&gt; error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://playground-efupcps19-codegino.vercel.app/words/add"&gt;/words/add&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#handing-error-in-a-nested-route"&gt;
  &lt;/a&gt;
  Handing error in a nested route
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://playground-efupcps19-codegino.vercel.app/words/edit/404"&gt;/words/edit/404&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#propagating-error-from-raw-test-endraw-to-the-root-route"&gt;
  &lt;/a&gt;
  Propagating error from &lt;code&gt;/test&lt;/code&gt; to the root route
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://playground-efupcps19-codegino.vercel.app/test"&gt;/test&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#additional-note"&gt;
  &lt;/a&gt;
  Additional note:
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Your root &lt;code&gt;ErrorBoundary&lt;/code&gt; should not throw an error in a production environment since there's nothing else to catch the error. If the root &lt;code&gt;ErrorBoundary&lt;/code&gt; can throw an error, the user might see something like &lt;a href="https://playground-jb6w7fn95-codegino.vercel.app/words/404"&gt;this&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I find using &lt;code&gt;ErrorBoundary&lt;/code&gt; and &lt;code&gt;CatchBoundary&lt;/code&gt; an easy way to handle route errors in Remix as it allows us to have fine-grained control on how we want to display errors in our pages. In my opinion, it improves the readability of what we are trying to achieve as there is the precise placement of the success and error cases. &lt;/p&gt;

</description>
      <category>react</category>
      <category>remix</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>​​Send Code and Verify Email with Tuya API</title>
      <author>Suraj Vishwakarma</author>
      <pubDate>Thu, 16 Dec 2021 03:12:20 +0000</pubDate>
      <link>https://dev.to/surajondev/send-code-and-verify-email-with-tuya-api-461k</link>
      <guid>https://dev.to/surajondev/send-code-and-verify-email-with-tuya-api-461k</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Today, we are going to build a web application to send verification code to the user. We will use Tuya’s Basic API to send an email. We will to verify the code and notify the user about the verification.&lt;/p&gt;

&lt;p&gt;We will use express js as our backend for sending and verifying the code. Frontend with basic HTML, CSS, and JavaScript. &lt;/p&gt;

&lt;p&gt;So let's get started.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-tuya"&gt;
  &lt;/a&gt;
  What is Tuya?
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://www.tuya.com/?_source=781e374dc3faa217b38cfdc6341d549a"&gt;&lt;strong&gt;Tuya&lt;/strong&gt;&lt;/a&gt; provides you with APIs and a cloud development environment for managing and programming IoT-based devices. Tuya with their APIs helps you to create an application that will control [&lt;strong&gt;IoT devices&lt;/strong&gt;] with ease. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AvZMbtLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3x7hmejnertpjw0xt09m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AvZMbtLw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3x7hmejnertpjw0xt09m.png" alt="Tuya" width="300" height="168"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.tuya.com/en/iot-core"&gt;Tuya&lt;/a&gt; has many APIs that can be used in sending emails, messages, getting weather, etc. Among them, we are going to use their’s Mail service for sending the code to the user.&lt;/p&gt;

&lt;p&gt;Learn more about the Mail Message API provided by Tuya here.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#tuya-setup-for-api"&gt;
  &lt;/a&gt;
  Tuya Setup for API
&lt;/h1&gt;

&lt;p&gt;Create a tuya developers account by visiting &lt;a href="https://developer.tuya.com/en/?_source=2993152cf5bd786a7ba5c08ae1a89b26"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;. After login Go to Cloud → Development → Create Cloud Project.&lt;br&gt;
Registered your project by filling in the details. Choose your nearest location for Data Center for the best experience. Click on &lt;code&gt;Create&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q208I2rw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_DA3210F3AFBA18A6963C082C9C4D56D114EEFE0FE4466DE43C962E0A6A34F2B1_1638772007963_Tuya%2BRegistered.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q208I2rw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_DA3210F3AFBA18A6963C082C9C4D56D114EEFE0FE4466DE43C962E0A6A34F2B1_1638772007963_Tuya%2BRegistered.png" alt="Registered your project" width="780" height="532"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the next window, you will have &lt;code&gt;IoT Core&lt;/code&gt; and &lt;code&gt;Authorization&lt;/code&gt; by default. Select &lt;code&gt;Email Service&lt;/code&gt; Trial Version API from the Select API Services and then click on &lt;code&gt;Authorize&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uKy3Qi8E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_DA3210F3AFBA18A6963C082C9C4D56D114EEFE0FE4466DE43C962E0A6A34F2B1_1638772137765_API%2BTuya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uKy3Qi8E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_DA3210F3AFBA18A6963C082C9C4D56D114EEFE0FE4466DE43C962E0A6A34F2B1_1638772137765_API%2BTuya.png" alt="Select API Services" width="700" height="505"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the next window, fill the detail for your asset on the choosen Data Center.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E-bibffb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_DA3210F3AFBA18A6963C082C9C4D56D114EEFE0FE4466DE43C962E0A6A34F2B1_1638772347629_Screenshot%2B2021-12-06%2B120205.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E-bibffb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_DA3210F3AFBA18A6963C082C9C4D56D114EEFE0FE4466DE43C962E0A6A34F2B1_1638772347629_Screenshot%2B2021-12-06%2B120205.png" alt="Asset Data Center" width="642" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now your project is create and you will have your &lt;code&gt;client ID&lt;/code&gt; and &lt;code&gt;client secret&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RgaxRjOT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_DA3210F3AFBA18A6963C082C9C4D56D114EEFE0FE4466DE43C962E0A6A34F2B1_1638772630496_Screenshot%2B2021-12-06%2B120602.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RgaxRjOT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_DA3210F3AFBA18A6963C082C9C4D56D114EEFE0FE4466DE43C962E0A6A34F2B1_1638772630496_Screenshot%2B2021-12-06%2B120602.png" alt="Project Created" width="694" height="343"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#project-structure"&gt;
  &lt;/a&gt;
  Project Structure
&lt;/h1&gt;

&lt;p&gt;We will have both frontend and backend. The frontend will deal with taking emails from the user and making the request to the backend. Backend will handle making request to tuya for sending mail and generating random code. It will verify the code too. We are using the backend to prevent a user from knowing the code that we will generate to send.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#file-structure"&gt;
  &lt;/a&gt;
  File Structure:
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;    ├── &lt;span class="kd"&gt;public&lt;/span&gt;
        ├──index.html
        ├──script.js
    ├── &lt;span class="kd"&gt;server&lt;/span&gt;.js
    ├── &lt;span class="kd"&gt;package&lt;/span&gt;.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;So let’s start coding by hitting &lt;code&gt;npm init&lt;/code&gt; and creating the &lt;code&gt;package.json&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#serverjs"&gt;
  &lt;/a&gt;
  server.js
&lt;/h1&gt;

&lt;p&gt;Let’s create our server with express. Our server will handle the following process&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It will generate a random 4 digit code to send&lt;/li&gt;
&lt;li&gt;Requests Tuya to Send Email&lt;/li&gt;
&lt;li&gt;It will verify the verification code
Imports&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are going to import the following libraries in the server.js file:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;express: We are going to use express for handling our backend server.
Command to Install:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;    &lt;span class="kd"&gt;npm&lt;/span&gt; &lt;span class="kd"&gt;install&lt;/span&gt; &lt;span class="kd"&gt;express&lt;/span&gt; &lt;span class="na"&gt;--save
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;TuyaContext from tuya-connector-nodejs: TuyaContext will handle all the requests to the server
Command to Install
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight batchfile"&gt;&lt;code&gt;    &lt;span class="kd"&gt;npm&lt;/span&gt; &lt;span class="kd"&gt;install&lt;/span&gt; @tuya/tuya&lt;span class="na"&gt;-connector-nodejs
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Our import will look like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;TuyaContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@tuya/tuya-connector-nodejs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#routes"&gt;
  &lt;/a&gt;
  Routes
&lt;/h1&gt;

&lt;p&gt;We are going to have to one &lt;code&gt;GET&lt;/code&gt; and two &lt;code&gt;POST&lt;/code&gt; routes. The default route &lt;code&gt;/&lt;/code&gt; will be used for rendering our &lt;code&gt;public folder&lt;/code&gt;. Among the &lt;code&gt;POST&lt;/code&gt;  method, one will get an email from the frontend request, generate random code, and makes a request to tuya for sending mail. Another route gets the code entered by the user and verified with the sent code.&lt;/p&gt;

&lt;p&gt;We are using port &lt;code&gt;8000&lt;/code&gt; for our backend server. That makes the URL for sending mails as&lt;br&gt;
&lt;code&gt;http://localhost:8000/sendcode/&lt;/code&gt; and our verify route &lt;code&gt;http://localhost:8000/verify&lt;/code&gt;. The default&lt;code&gt;:8000/&lt;/code&gt; will be served to render our index.html from our public folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;static&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

    &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sendFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/index.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#send-email-route"&gt;
  &lt;/a&gt;
  Send Email Route
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#tuyacontext"&gt;
  &lt;/a&gt;
  TuyaContext:
&lt;/h3&gt;

&lt;p&gt;Create a new TuyaContext by entering all the details. Enter &lt;code&gt;accessKek&lt;/code&gt; and &lt;code&gt;secretKey&lt;/code&gt; of our project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;tuya&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TuyaContext&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;baseUrl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://openapi.tuyain.com&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;accessKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;XXXXXXXXXXXXXXX&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;secretKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;XXXXXXXXXXXXXXX&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Choose &lt;code&gt;baseURL&lt;/code&gt; according to your location.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e9ifi-Su--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_74B108A034B117585FA67CB9AC8AA22244235BA2B1C94F599522EED319198B90_1638939332188_wkNf_Kk_l.jfif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e9ifi-Su--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_74B108A034B117585FA67CB9AC8AA22244235BA2B1C94F599522EED319198B90_1638939332188_wkNf_Kk_l.jfif" alt="Chose Endpoint Location" width="560" height="322"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#random-code"&gt;
  &lt;/a&gt;
  Random Code:
&lt;/h3&gt;

&lt;p&gt;Declare a variable outside both routes so that both routes can access the code. Generate a code with Math.floor and Math.random. If the number generated by Math.random is less than 0.1 the code will be 3 digits. If the code generated is 3 digits which is &lt;code&gt;code&amp;lt;1000&lt;/code&gt; add &lt;code&gt;1000&lt;/code&gt; to make it 4 digits.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Making request to Tuya:&lt;br&gt;
Make a request to tuya with &lt;code&gt;tuya.request&lt;/code&gt; and store the data in the &lt;code&gt;data&lt;/code&gt; variable. Request contains method as &lt;code&gt;POST&lt;/code&gt;, path is our endpoint to the API which is &lt;code&gt;/v1.0/iot-03/messages/mails/actions/push&lt;/code&gt; . The body contains the following 4 parameters:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;to_address&lt;/strong&gt;: It is the address to which the mail will be sent. We will get an email from the request that we will send from the frontend to the backend.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;reply_to_address&lt;/strong&gt;: An email to which the user can reply.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;template_id&lt;/strong&gt;: It is a predefined email template ID by Tuya. &lt;code&gt;MAIL_1624531323&lt;/code&gt; is for verification code.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;template_patam&lt;/strong&gt;: It is the parameter for email. &lt;code&gt;{\"code\":\"${code}\"}&lt;/code&gt; is the correct parameter and it will contain our generated code.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt;  &lt;span class="nx"&gt;data&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;tuya&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/v1.0/iot-03/messages/mails/actions/push&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;to_address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;emailaddress&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;reply_to_address&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test@example.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;template_id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MAIL_1624531323&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;template_param&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`{\"code\":\"&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;\"}`&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And that’s it for the sending mail route.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#code-verification-route"&gt;
  &lt;/a&gt;
  Code Verification Route
&lt;/h2&gt;

&lt;p&gt;It’s quite a simple route to verify the code entered by the user and the code that we have sent. It is a &lt;code&gt;POST&lt;/code&gt; request. Thecode will be passed in the body while making a request to the backend from the frontend. We will send only &lt;code&gt;true&lt;/code&gt; if the code is correct and &lt;code&gt;false&lt;/code&gt; if the code is incorrect.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="na"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;    
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="na"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#indexhtml"&gt;
  &lt;/a&gt;
  index.html
&lt;/h1&gt;

&lt;p&gt;We are going simple and have just two inputs, one for email and the other for code. The two buttons, one for initiating a request to the backend for sending mail and the other for verifying the code.&lt;/p&gt;

&lt;p&gt;Add stylesheet according to you.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Name:&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter Email"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;sendCode()&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Send Code&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Code:&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"verify"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"number"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter Code"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;onclick=&lt;/span&gt;&lt;span class="s"&gt;verifyCode()&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Verify Code&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#scriptjs"&gt;
  &lt;/a&gt;
  script.js
&lt;/h1&gt;

&lt;p&gt;We are having two functions. &lt;code&gt;sendCode()&lt;/code&gt; will make a request to our server with the body containing the entered email address. It will &lt;code&gt;POST&lt;/code&gt;  request as it contain &lt;code&gt;body&lt;/code&gt;. &lt;code&gt;JSON.Stringify()&lt;/code&gt; will convert the body into JSON so that server can read it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sendCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
        &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:8000/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
                &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
                    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="p"&gt;},&lt;/span&gt;
                &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                    &lt;span class="na"&gt;emailaddress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The other function verifyCode will make a &lt;code&gt;POST&lt;/code&gt; request to the server for verifying the entered code. This request will send us data regarding verification either &lt;code&gt;verify:true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. We will alert the user regarding code verification. If the code is correct &lt;code&gt;window.alert("VERIFIED")&lt;/code&gt; and if the code is incorrect &lt;code&gt;window.alert("INCORRECT CODE")&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;verifyCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;enteredCode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;verify&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;
        &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:8000/verify&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;
            &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;POST&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;:{&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;application/json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="na"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="na"&gt;code&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;enteredCode&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;verify&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;VERIFIED&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;INCORRECT CODE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt; 
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h1&gt;

&lt;p&gt;Run the server by running the command &lt;code&gt;node server.js&lt;/code&gt;. Enter the email and click on send the email on the &lt;code&gt;http://localhost:800&lt;/code&gt;. If everything goes well, you will get the email with a code on your device.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XHVWcjud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_74B108A034B117585FA67CB9AC8AA22244235BA2B1C94F599522EED319198B90_1638969740460_Screenshot%2B2021-12-08%2B185119.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XHVWcjud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_74B108A034B117585FA67CB9AC8AA22244235BA2B1C94F599522EED319198B90_1638969740460_Screenshot%2B2021-12-08%2B185119.png" alt="Email Code" width="486" height="328"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you entered the right code, you will see the alert box with the message &lt;code&gt;VERIFIED&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k-ivzN4A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_74B108A034B117585FA67CB9AC8AA22244235BA2B1C94F599522EED319198B90_1638942478205_Screenshot%2B2021-12-08%2B111144.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k-ivzN4A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_74B108A034B117585FA67CB9AC8AA22244235BA2B1C94F599522EED319198B90_1638942478205_Screenshot%2B2021-12-08%2B111144.png" alt="Verification Code by Tuya" width="476" height="418"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#play-with-code"&gt;
  &lt;/a&gt;
  Play with Code
&lt;/h1&gt;

&lt;p&gt;I have created a GitHub repository for this project. You can look into it by visiting &lt;a href="https://github.com/surajondev/tuya-email-verification"&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;. I have also deployed the project on Heroku. Visit &lt;a href="https://tuya-email-verification.herokuapp.com/"&gt;&lt;strong&gt;tuya-email-verification&lt;/strong&gt;&lt;/a&gt; to see the working of the project live.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;The project is doing its job. The Tuya API is working great and can send an email with generated code to enter email in real-time. &lt;/p&gt;

&lt;p&gt;The APIs provided by tuya do a lot of heavy lifting for us. Tuya has many other APIs like Mail Messages. They have Short Messages, Voice messages, Weather, Country codes, &lt;a href="https://developer.tuya.com/en/iot-core"&gt;IoT-based&lt;/a&gt; APIs, and many more. &lt;/p&gt;

&lt;p&gt;With their libraries, you can make requests easily with access code and secret code. I recommend you to look into &lt;a href="https://developer.tuya.com/en/?_source=2993152cf5bd786a7ba5c08ae1a89b26"&gt;&lt;strong&gt;Tuya&lt;/strong&gt;&lt;/a&gt; as it is a great platform for getting useful APIs and programming IoT-based devices.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>The Wacky World of Closures &amp; What Makes Them Useful</title>
      <author>aruna-x</author>
      <pubDate>Thu, 16 Dec 2021 02:18:43 +0000</pubDate>
      <link>https://dev.to/aruna/the-wacky-world-of-closures-what-makes-them-useful-24a7</link>
      <guid>https://dev.to/aruna/the-wacky-world-of-closures-what-makes-them-useful-24a7</guid>
      <description>&lt;p&gt;Can you guess what this prints out?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;... Are you sure? There's a gotcha here, and if you're not aware of it already, I'd wager this blog post is worth your time. &lt;em&gt;(Hint: 0, 1, 2 is incorrect.)&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-closure-with-javascript"&gt;
  &lt;/a&gt;
  Getting Closure With Javascript
&lt;/h2&gt;

&lt;p&gt;To understand what's happening in the above code snippet, we have to understand closures. If you're looking for practical applications of closures, you can jump &lt;a href="#uses"&gt;ahead&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A closure has a surprisingly simple definition: a function with access to &lt;em&gt;information outside of itself&lt;/em&gt;, otherwise known as its "lexical environment". &lt;code&gt;function addTwo()&lt;/code&gt; is a closure:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addTwo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And &lt;code&gt;let x = 5&lt;/code&gt; is in its lexical environment.&lt;/p&gt;

&lt;p&gt;All functions in Javascript can be closures, because they automatically gain access to outer scope.&lt;/p&gt;

&lt;p&gt;By contrast, pure functions are not closures:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addNums&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;addNums&lt;/code&gt; does not reference any data outside of its own scope. Its data is kept in your computer's short term memory. It gets pushed onto the "call stack", executed, and then popped off the stack again. Clean, simple, easy. &lt;/p&gt;

&lt;p&gt;On the other hand, when a function references information outside of its own scope (as with a closure), its data becomes packaged (or "enclosed") with references to all of its lexical info, and the entire package gets placed in longer term memory, called the heap. We can thank a memory management process called &lt;a href="https://javascript.info/garbage-collection"&gt;garbage collection&lt;/a&gt; for keeping the heap clear of information we no longer need in long term memory.&lt;/p&gt;

&lt;p&gt;Despite closures needing more memory and computational power, there are some great reasons to use them (which I'll cover in a moment below).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#not-all-closures-are-made-the-same"&gt;
  &lt;/a&gt;
  Not All Closures Are Made The Same
&lt;/h2&gt;

&lt;p&gt;Closures are particularly easy in Javascript.&lt;/p&gt;

&lt;p&gt;You can use &lt;a href="https://letoverlambda.com/"&gt;&lt;em&gt;let over lambda&lt;/em&gt;&lt;/a&gt; to create a closure in &lt;a href="https://en.wikipedia.org/wiki/Lisp_(programming_language)"&gt;Lisp&lt;/a&gt; (the second oldest higher-level programming language). &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;nonlocal&lt;/code&gt; keyword is helpful to gain access to variables normally outside of scope in &lt;a href="https://zetcode.com/python/python-closures/"&gt;python closures&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In C# however, &lt;a href="https://www.simplethread.com/c-closures-explained/"&gt;closures&lt;/a&gt; must explicitly be &lt;em&gt;enclosed&lt;/em&gt; with its lexical environment, through "binding" variables.&lt;/p&gt;

&lt;p&gt;You get the idea. For now, we'll continue to use Javascript.&lt;br&gt;
&lt;span id="uses"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-makes-closures-uniquely-useful"&gt;
  &lt;/a&gt;
  What Makes Closures Uniquely Useful?
&lt;/h2&gt;

&lt;p&gt;There is surprisingly sparse info online about &lt;em&gt;uses&lt;/em&gt; for closures. It's odd! While I'm sure there are many more uses, there seem to be at least two compelling ones I'd like to discuss:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Function factories&lt;/li&gt;
&lt;li&gt;Namespacing private functions&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#function-factories"&gt;
  &lt;/a&gt;
  Function Factories
&lt;/h3&gt;

&lt;p&gt;Function factories are functions that return other functions based on various conditions. I'd like to share how I used a function factory in a recent project. But first, let's look at a simple example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;factory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we call &lt;code&gt;factory(5)&lt;/code&gt;, it returns &lt;code&gt;(b) =&amp;gt; 5 % b&lt;/code&gt;. &lt;br&gt;
If we call &lt;code&gt;factory(4)&lt;/code&gt; it returns &lt;code&gt;(b) =&amp;gt; 4 + b&lt;/code&gt;. &lt;br&gt;
And if we call &lt;code&gt;factory(4)(2)&lt;/code&gt; we can see that:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;factory(4) = (b) =&amp;gt; 4 + b&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So &lt;code&gt;factory(4)(2)&lt;/code&gt; becomes &lt;code&gt;((b) =&amp;gt; 4 + b)(2)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Resulting in &lt;code&gt;(2) =&amp;gt; 4 + 2&lt;/code&gt;. Which returns &lt;code&gt;6&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The important note here is that function factories return &lt;em&gt;functions&lt;/em&gt; that can accept even more info.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#a-closure-function-factory-in-use"&gt;
  &lt;/a&gt;
  A Closure Function Factory In Use
&lt;/h4&gt;

&lt;p&gt;I recently built a notes app with a react front end using &lt;code&gt;semantic-ui-react&lt;/code&gt;. The new note form included a dropdown menu. (Bear with me here.) &lt;/p&gt;

&lt;p&gt;&lt;code&gt;semantic-ui-react&lt;/code&gt;'s dropdown menu requires an array of &lt;code&gt;options&lt;/code&gt;. Once I fetched data from my database and generated the options array, it looked something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;option1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;option2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can feed this array to the dropdown like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Dropdown&lt;/span&gt;
    &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dropdown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="nx"&gt;multiple&lt;/span&gt;
    &lt;span class="nx"&gt;search&lt;/span&gt;
    &lt;span class="nx"&gt;selection&lt;/span&gt;
    &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;(I've simplified all of these snippets of code for readability.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This dropdown will allow you to make multiple selections. It turns out the &lt;code&gt;value&lt;/code&gt; attribute of &lt;code&gt;semanitic-ui-react&lt;/code&gt;'s dropdown menu is an array of &lt;code&gt;id&lt;/code&gt;s from the objects in &lt;code&gt;options&lt;/code&gt;. I wanted to store whole objects from &lt;code&gt;options&lt;/code&gt; in state instead. &lt;/p&gt;

&lt;p&gt;I wanted just one change handler function for all form elements. Closure to the rescue.&lt;/p&gt;

&lt;p&gt;Every form element executes the same function on change, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;handleMaker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;"name" matches the name attribute of the form element it's associated with for style reasons.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;handleMaker&lt;/code&gt; is a function factory that returns a &lt;em&gt;different&lt;/em&gt; function based on which form element name is passed in. The function &lt;em&gt;returned&lt;/em&gt; from &lt;code&gt;handleMaker&lt;/code&gt; accepts the onChange event as an argument.&lt;/p&gt;

&lt;p&gt;Here is a simplified version of the function factory I use in the app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;handleMaker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;note&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setFormData&lt;/span&gt;&lt;span class="p"&gt;({...&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;collections&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setFormData&lt;/span&gt;&lt;span class="p"&gt;({...&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;())});&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;dropdown&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setFormData&lt;/span&gt;&lt;span class="p"&gt;({...&lt;/span&gt;&lt;span class="nx"&gt;formData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;o&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;})})&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Oops, something went wrong!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are other cases here, showing how a function factory can help handle all sorts of special cases.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#namespacing-private-functions"&gt;
  &lt;/a&gt;
  Namespacing private functions
&lt;/h3&gt;

&lt;p&gt;Private functions make apps more secure, disallowing ill-intentioned users from calling functions or methods that can mutate the app's state unhelpfully (or, in some cases, even inject code). &lt;/p&gt;

&lt;p&gt;Ruby has a &lt;code&gt;private&lt;/code&gt; keyword to make methods private. Javascript didn't &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields"&gt;until recently&lt;/a&gt;. But that applies to classes. When we're not inside classes (or running on IE, lol), we can still &lt;a href="https://www.oreilly.com/library/view/learning-javascript-design/9781449334840/ch13s15.html"&gt;namespace private javascript functions&lt;/a&gt; with closures:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;namespacer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;changer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;amt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;amt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;public1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;changer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;public2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;changer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="na"&gt;public3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt; 
&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we can see that namespacer is actually an object with closures as keys, since the anonymous function on line 1 is immediately invoked on the last line. &lt;/p&gt;

&lt;p&gt;We can call the public functions like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;namespacer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;public1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 200&lt;/span&gt;
&lt;span class="nx"&gt;namespacer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;public2&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 100&lt;/span&gt;
&lt;span class="nx"&gt;namespacer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;public3&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 100&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But we would be unable to call &lt;code&gt;changer&lt;/code&gt; directly:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;namespacer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;changer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// TypeError: undefined is not a function&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or access &lt;code&gt;num&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;namespacer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Presto! Private functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closures-in-interviews"&gt;
  &lt;/a&gt;
  Closures In Interviews
&lt;/h2&gt;

&lt;p&gt;If you are new to web dev and preparing for interviews, it may interest you to know that there is a common interview question involving closures:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Can you guess what &lt;code&gt;console.log&lt;/code&gt;s here?&lt;/p&gt;

&lt;p&gt;If you guessed&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;... you'd be right! We might expect 0, 1, 2 but that won't happen here. Each time we go through the loop, &lt;code&gt;setTimeout&lt;/code&gt; waits a whole 2 seconds before running. The &lt;code&gt;i&lt;/code&gt; inside of the &lt;code&gt;setTimeout&lt;/code&gt; callback function refers to the &lt;code&gt;i&lt;/code&gt; from the loop. In 2 seconds, the loop will have run all 3 times, leaving &lt;code&gt;i&lt;/code&gt; at 2 when all three &lt;code&gt;setTimeout&lt;/code&gt;s eventually run.&lt;/p&gt;

&lt;p&gt;There are a number of ways we can fix this. One way is to wrap the callback function inside of &lt;code&gt;setTimeout&lt;/code&gt; in an immediately invoked function that accepts &lt;code&gt;i&lt;/code&gt; as its argument:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(((&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What does this accomplish? Wrapping the callback function in an immediately invoked function ensures that the current value of &lt;code&gt;i&lt;/code&gt; is passed in and kept in the state of the &lt;code&gt;setTimeout&lt;/code&gt; function. It is stored there for later use.&lt;/p&gt;

&lt;p&gt;Another way we can do this involves wrapping the entirety of the &lt;code&gt;setTimeout&lt;/code&gt; in the same immediately invoked function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;))(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This accomplishes the same result.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-final-musing"&gt;
  &lt;/a&gt;
  A Final Musing:
&lt;/h2&gt;

&lt;p&gt;I'm curious to know whether there is a language in which creating a closure is impossible. So far my Googling efforts haven't gotten me far. I'd be grateful for your thoughts on the topic.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Functions in c</title>
      <author>Harsh kumar</author>
      <pubDate>Thu, 16 Dec 2021 01:35:17 +0000</pubDate>
      <link>https://dev.to/coderharsh06/functions-in-c-oei</link>
      <guid>https://dev.to/coderharsh06/functions-in-c-oei</guid>
      <description>&lt;p&gt;In this post we will we know in detail about Function in C, what are the types of function and how can we use a function in C program along with an example. So, let’s read the post which helps you to understand a function in C programming.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Introduction&lt;/strong&gt;: In C programming, Function is the group or block of statements that repeat together to perform tasks. Generally, if we have to repeat the same kind of tasks multiple times then we use function instant of writing those codes again &amp;amp; again. Every c program has at least one function named main (). In other words, we can say that function is the collection of statements enclosed by {}.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefits of function in C&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We can save time by avoiding writing the same codes multiple times. &lt;/li&gt;
&lt;li&gt;We can call a function multiple times according to our needs.
&lt;/li&gt;
&lt;li&gt;Reusability of code is the main benefit of creating a function.&lt;/li&gt;
&lt;li&gt;The C standard library provides various built-in functions that we can call in our program. For example, we can use the strlwr() function from the string library which returns the length of a string.&lt;/li&gt;
&lt;li&gt;We can analyse &amp;amp; understand the large program easily when a program is divided into multiple functions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Syntax of defining a function in C&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wqfy0FKo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99ch73tibvz7vp8mlmi1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wqfy0FKo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/99ch73tibvz7vp8mlmi1.png" alt="functions in c" width="880" height="434"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key terms of a function&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are three important terms in a C function&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Function declaration&lt;/strong&gt;: A function must be declared globally in a c program to tell the compiler about the function name, function parameters, and return type.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Function call&lt;/strong&gt;: Function can be called from anywhere in the program. The parameter list must not differ in function calling and function declaration. We must pass the same number of functions as it is declared in the function declaration.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Function definition&lt;/strong&gt;: It contains the actual statements which are to be executed. It is the most important aspect to which the control comes when the function is called. Here, we must notice that only one value can be returned from the function.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Return type&lt;/strong&gt;: A function may return a value. The return type is the data type of the value the function returns. Some functions perform the desired operations without returning a value. In this case, the return type is the keyword void.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Parameters&lt;/strong&gt;: When a function is invoked, you pass a value to the parameter. This value is referred to as an actual parameter or argument. The parameter list refers to the type, order, and a number of the parameters of a function. Parameters are optional; that is, a function may contain no parameters.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example of using a function in C program&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DtqcIsqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzr9uiytm12iqkrfibo7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DtqcIsqQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dzr9uiytm12iqkrfibo7.png" alt="functions in c" width="880" height="836"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Types of Functions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are two types of functions in C programming&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Library Functions&lt;/strong&gt;: Library Functions are the functions which are declared in the C header files such as scanf(), printf(), gets(), puts() etc.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;User-defined functions&lt;/strong&gt;: User-defined functions are the functions that are created by the C programmer, so that he/she can use them many times. It reduces the complexity of a big program and optimizes the code.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Different aspects of function calling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A function may or may not accept any argument. It may or may not return any value. Based on these facts, there are four different aspects of function calls. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Function without arguments and without return value&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Function without arguments and with return value&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Function with arguments and without return value&lt;/strong&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Function with arguments and with return value&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Function without arguments and without return value&lt;/strong&gt;: We can use the function without passing any arguments and the function will not return any value in this aspect of function calls.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rJfQrmy4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l86j3mise6979f5dmtcj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rJfQrmy4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l86j3mise6979f5dmtcj.png" alt="functions in c" width="856" height="1018"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Output&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S_u4_UQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lofu8oyd7699gnmdavh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S_u4_UQ5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lofu8oyd7699gnmdavh.png" alt="functions in c" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Function without arguments and with return value&lt;/strong&gt;: We can use the function without passing any arguments and the function will return any value in this aspect of function calls.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lAJ0Up17--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b620btcns6pd1sx3gbm8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lAJ0Up17--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b620btcns6pd1sx3gbm8.png" alt="functions in c" width="840" height="1054"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EvRmK5Tn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xg1kjieht80zdlkj7zz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EvRmK5Tn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xg1kjieht80zdlkj7zz.png" alt="functions in c" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Function with arguments and without return value&lt;/strong&gt;: We can use the function with passing any arguments and the function will not return any value in this aspect of function calls.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kRNcnwNi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z56ou8mnxndw5aod2djo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kRNcnwNi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z56ou8mnxndw5aod2djo.png" alt="functions in c" width="840" height="1018"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5nGVX-t9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0ararebmgqca55a06dt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5nGVX-t9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c0ararebmgqca55a06dt.png" alt="functions in c" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Function with arguments and return value&lt;/strong&gt;: We can use the function with passing any arguments and the function will return any value to the compiler in this aspect of function calls.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cADtWeV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nanhliyz3abve3xcpdtx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cADtWeV5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nanhliyz3abve3xcpdtx.png" alt="functions in c" width="840" height="1018"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GiG_8HOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woif6coybyznmylu4i4j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GiG_8HOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woif6coybyznmylu4i4j.png" alt="functions in c" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Function Arguments&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;If a function will use arguments, it must declare variables that accept the values of the arguments. These variables are called formal parameters. Formal parameters behave like local variables inside the function and are created upon entry into the function and destroyed upon exit. While calling a function, there are three ways in which arguments can be passed to a function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Call by value&lt;/strong&gt;: In call by value when we pass the formal value to the function, then it reflects the actual arguments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c8yVFVT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfojk3nkt1fj9bhbs1ys.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c8yVFVT---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lfojk3nkt1fj9bhbs1ys.png" alt="functions in c" width="806" height="1018"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Call by reference&lt;/strong&gt;: In call by reference, when we pass the formal value to the function, then it does not reflect the actual arguments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FIWp1jzP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d0bmzhoz2pqwjlh4ul7f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FIWp1jzP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d0bmzhoz2pqwjlh4ul7f.png" alt="functions in c" width="840" height="1054"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Call by address&lt;/strong&gt;: In call by address, when we pass the address value to the function, then it does not reflect the actual arguments.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iQoHqJj4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uo074iab0namr5qfgwc7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iQoHqJj4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uo074iab0namr5qfgwc7.png" alt="functions in c" width="806" height="1018"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope you have enjoyed the concepts of function in C in this post. share you queries &amp;amp; doubts in comment section, we will solve your doubts soon.&lt;/p&gt;

&lt;p&gt;Thanks for reading...&lt;/p&gt;

</description>
      <category>c</category>
      <category>functional</category>
      <category>coding</category>
      <category>beginners</category>
    </item>
    <item>
      <title>What is a React Component?</title>
      <author>Amrin</author>
      <pubDate>Thu, 16 Dec 2021 01:16:54 +0000</pubDate>
      <link>https://dev.to/coderamrin/what-is-a-react-component-api</link>
      <guid>https://dev.to/coderamrin/what-is-a-react-component-api</guid>
      <description>&lt;p&gt;Hey there!&lt;br&gt;
In this article, we are going to see what is a Component in React.js.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you prefer video, then check it out&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HS-xu-RnhUU?start=15"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In short, React components are a function or a class that returns Html.&lt;/p&gt;

&lt;p&gt;Components come in two types Class component and Functional component. &lt;/p&gt;

&lt;p&gt;Just like a function component takes an argument called props. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#heres-an-example-of-a-functional-component"&gt;
  &lt;/a&gt;
  Here's an example of a Functional Component:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;FunctionalComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;world&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;functional&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;FunctionalComponent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A Functional component is just a plain old JavaScript function. It could also be an arrow function.&lt;br&gt;
In a functional component, we access props from the props argument.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#heres-an-example-of-a-class-component"&gt;
  &lt;/a&gt;
  Here's an example of a Class Component:
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ClassComponent&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;world&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;Class&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;CassComponent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here we created a simple Class component. To create a Class Component we need to first import the "Component" component from React. Then extends it to create a Class Component. &lt;br&gt;
In a class component, we access props from "this.props".&lt;/p&gt;

&lt;p&gt;To render these components, import them inside the app.js file and call them like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
         &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ClassComponent&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;         &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;FunctionalComponent&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;That's it for today. &lt;br&gt;
If you liked it don't forget to give it a like. And if you want to add anything to it please leave a comment below.&lt;/p&gt;

&lt;p&gt;Thanks for reading. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Burnouts: how I persevere as a working student developer</title>
      <author>Dorrabb</author>
      <pubDate>Thu, 16 Dec 2021 00:51:41 +0000</pubDate>
      <link>https://dev.to/dorrabbk/burnouts-how-i-persevere-as-a-working-student-developer-2oee</link>
      <guid>https://dev.to/dorrabbk/burnouts-how-i-persevere-as-a-working-student-developer-2oee</guid>
      <description>&lt;p&gt;&lt;a href="https://dorrabb.me/1138/burnouts-how-i-persevere-as-a-working-student-developer/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DG-6tfB8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/dorrabb.me/wp-content/uploads/2021/12/drowning.jpg%3Fssl%3D1" alt="banner" width="880" height="586"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cold coffee next to the laptop, the Algorithms lecture in one window, and trying to fix production bugs in another. This used to be my normal day at one point.&lt;/p&gt;

&lt;p&gt;I undertook much more activities in the past couple of years than most of my peers. I was juggling a lot of stuff simultaneously, and all my engagements were doomed to fail if I didn’t get my shit together. I felt weak and started doubting myself. On top of everything, I also had a social life to take care of!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/l1KVaj5UcbHwrBMqI/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/l1KVaj5UcbHwrBMqI/giphy.gif" alt="tired" width="500" height="281"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’ve always struggled a lot with burnouts. I was at my lowest in my second year of college in 2020 where I felt exhausted and just done with everything I was doing. My work-life balance was a violent seesaw, and my social life was nothing short of a dumpster fire. That is when I decided to become more proactive in dealing with my stress.&lt;/p&gt;

&lt;p&gt;I implemented a host of tiny, subtle changes in how I balanced my work, academic and social life. The improvements, both in the short and long term, slowly became noticeable. In retrospect, it was one of the most potent growth phases that I went through.&lt;/p&gt;

&lt;p&gt;Now that I’m in my third year, I still feel burned out sometimes, but I can cope with it much better. I have a lot more on my plate than last year. I’m leading more projects at work, taking more challenging courses at school, participating in more extracurriculars than ever, and expanding my technological skillset independently as well. Despite all that, I feel better than before!&lt;/p&gt;

&lt;p&gt;Here is thorough documentation of my experiences, struggles, and learnings with burnout.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#maslachs-burnout-theory"&gt;
  &lt;/a&gt;
  Maslach’s Burnout Theory
&lt;/h2&gt;

&lt;p&gt;We must understand what burnout exactly is before we can think about mitigating it. &lt;a href="https://www.youtube.com/watch?v=SVlL9TnvphA"&gt;This talk&lt;/a&gt; by Dr. Christina Maslach is an excellent introduction to burnout, its symptoms, and its consequences.&lt;/p&gt;

&lt;p&gt;Dr. Maslach is a social psychologist whose research in burnout is very well-known. She describes burnout as a product of unavoidable stress. The causes can be a range of factors, such as long and exhaustive working hours, repetitive tasks, blurred work-life balances, lack of social support, etc. She theorizes that burnout ultimately boils down to three main components: emotional exhaustion, depersonalization, and (lack of) personal accomplishment.&lt;/p&gt;

&lt;p&gt;What particularly resonated with me the first time I heard about her theory was how accurately it described my feelings of being burned out. A lot of the time, one of these three areas felt problematic to me. Most of the time, it was some combination of these three.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--At97IV26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639615111815/8DnCtmgBT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--At97IV26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639615111815/8DnCtmgBT.png" alt="burnout-components" width="700" height="584"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Image source: favpng.com&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I was either too exhausted from working and studying every day, too detached from who I wanted to be, or just felt that nothing I did mattered. I felt like I was living an extremely monotonous life, was nowhere near my ideal life, and accomplished nothing.&lt;/p&gt;

&lt;p&gt;Once I understood my symptoms better, I began noticing most of the little cues and triggers that resulted in feelings of distress, laziness, and failure due to being burned out. It was easier to see which tasks at work felt boring and repetitive. I noticed what part of my classes felt disengaging, and started thinking about ways of making those experiences better. Even though I couldn’t solve those problems immediately, I could at least understand what was going on better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-it-feels-like"&gt;
  &lt;/a&gt;
  What It Feels Like
&lt;/h2&gt;

&lt;p&gt;It is hard to self-diagnose burnout. You may be burning out pretty bad and still not know it. In my case, it was the buildup of tiny things that kept piling up little by little before I could even notice that something was wrong.&lt;/p&gt;

&lt;p&gt;The increased frequency of oversleeping and undersleeping was annoying, but I often brushed it aside. I didn’t pay much attention when I barely found any time to attend parties or travel plans with my friends. I also downplayed literally everyone who told me that my eyes looked tired or that I wasn’t that talkative anymore.&lt;/p&gt;

&lt;p&gt;In my opinion, the most significant symptom of burnout is the feeling of not being able to catch up to anything. I felt like I was far behind my peers in class despite taking on more classes. I also found it hard to keep up with all the progress we had in the Development team at work. The piled-up merge request reviews, the features we added every day, and what was deployed every week…&lt;/p&gt;

&lt;p&gt;In hindsight, I probably spent a lot more time resigning to the problems than actually trying to solve them, regardless of how easily manageable they may have been.&lt;/p&gt;

&lt;p&gt;This led to increased anxiety, consistent procrastination, lack of motivation, and just a feeling of being unable to start anything at all. I also stopped taking care of my body and had poor eating and sleeping habits. I lost creativity and confidence in my abilities because I created a negative feedback loop in my head. The reason was that I worried more about how daunting my problems were instead of trying to solve them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#health-matters-a-lot"&gt;
  &lt;/a&gt;
  Health Matters a Lot
&lt;/h2&gt;

&lt;p&gt;I simply &lt;em&gt;cannot&lt;/em&gt; stress this enough. Listen to your body and always put it first!&lt;/p&gt;

&lt;p&gt;Just like the negative feedback loop of reinforcing yourself into more burnout, there’s an opposite positive feedback loop when you start taking care of your body. Yay!&lt;/p&gt;

&lt;p&gt;For me, the most pressing problem here was sleep. I even remember sleeping as little as only three to four hours a day for the entirety of two weeks at one point! That’s when I saw a doctor and started taking more melatonin to regulate my sleep cycle. As soon as I gave myself at least seven hours of sleep every day again, the results were evident.&lt;/p&gt;

&lt;p&gt;I felt much more energized, confident and productive in my work. I felt like I could take on more tasks and produce better results. The ideal amount of sleep is seven to nine hours each night. If you feel burned out, make sure the first thing you look at is whether you sleep enough and see enough sunlight.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/8GPBsYmFgdBio/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/8GPBsYmFgdBio/giphy.gif" alt="sleep" width="500" height="252"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Eating well enough and working out are also vital! Although I wasn’t consistent with gym during the pandemic, I still tried to play enough sports. I started playing football at least once or twice a week each.&lt;/p&gt;

&lt;p&gt;At the same time, I cut out sugar from my diet (super important!) and tried to follow a more and more balanced diet.&lt;/p&gt;

&lt;p&gt;Another crucial thing I invested more effort in was grooming myself. I went ahead and invested in clothes that I felt much more confident in. I also learned a lot about skincare and purchased products that I felt were generally great for taking care of my nails, hair, and everything in between. If you’re interested, check out &lt;a href="https://dorrabb.me/my-favourite-resources/"&gt;body care products&lt;/a&gt; that worked great for me.&lt;/p&gt;

&lt;p&gt;The immediate improvement in body image worked wonders for me! This was a big, big thing for someone who has struggled a lot with body image. I felt more confident in myself, and it gave me a much-needed sense of accomplishment. All of this reduced my stress and alleviated my burnout.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#try-organizing-yourself"&gt;
  &lt;/a&gt;
  Try Organizing Yourself
&lt;/h2&gt;

&lt;p&gt;There is a direct correlation between organizing yourself and productivity. There is also a direct correlation between productivity and active engagement in whatever you do.&lt;/p&gt;

&lt;p&gt;That’s the first thing I learned when I decided to focus on organizing the little things. It started with organizing my room, changing its layout, and making sure everything was where it was supposed to be.&lt;/p&gt;

&lt;p&gt;I no longer had the last day’s spaghetti, an alarm clock, CS notes, and my work laptop, all within a 2-meter radius. I made my bed more often than not. Just because my room looked cleaner, my head also felt a bit more unclogged!&lt;/p&gt;

&lt;p&gt;Then I tried to digitize my life more. I came across Notion, a stellar productivity tool that has helped me organize a good chunk of my life. I shifted from physical notebooks to Notion for notetaking wherever possible.&lt;/p&gt;

&lt;p&gt;I also used it to track books I was reading, new skills I was learning, and even video games I wanted to play! This way, I did not have to tuck away my notes, to-dos, or ideas into scrap paper or old forgotten memories. I had everything on Notion.&lt;/p&gt;

&lt;p&gt;Lastly, I started putting &lt;em&gt;everything&lt;/em&gt; into Google Calendar. From the All Hands meetings at work to my studying schedules and even laundry times, everything was on Google Calendar. Color-coding events is also a great way of organizing your engagements.&lt;/p&gt;

&lt;p&gt;You can strike a rough balance between work, studies, and social life just by eyeballing the spread of red, blue, and green on your calendar!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/m77wEsvF99FyU/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/m77wEsvF99FyU/giphy.gif" alt="calendar" width="500" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Staying organized had a lot of benefits. My life felt a lot more hassle-free. It gave my daily routines a much more meaningful structure. I spent a lot less time finding out where my resources for the task on hand were because I just knew where everything was.&lt;/p&gt;

&lt;p&gt;I also alleviated my burnout because my pending tasks suddenly did not feel overwhelming anymore. I had a stronger grip on my schedules thanks to Google Calendar. Those tasks started feeling easier and manageable just by looking at everything from a high-level perspective each week.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WuMj6xBg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639615243626/LOGwtSOfK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WuMj6xBg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639615243626/LOGwtSOfK.png" alt="calendar" width="700" height="525"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Here’s what a typical week could look like on Google Calendar. Everything is color-coded into categories.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You can also look at &lt;a href="https://dorrabb.me/my-favourite-resources/"&gt;more tools&lt;/a&gt; I use to organize myself and be more productive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-importance-of-prioritizing"&gt;
  &lt;/a&gt;
  The Importance of Prioritizing
&lt;/h2&gt;

&lt;p&gt;Prioritizing is nothing but organizing and ranking your tasks based on their importance and urgency.&lt;/p&gt;

&lt;p&gt;It’s okay to think that you have so much you &lt;em&gt;have&lt;/em&gt; to do, and so much more you &lt;em&gt;want&lt;/em&gt; to do. The important part is to make sure you know how to prioritize stuff. You’ll find that navigating your tasks is much easier, and you burn out much less when the roadmap to your goals is laid out right in front of you.&lt;/p&gt;

&lt;p&gt;It’s super important to pay attention to first things first, and they can be first for multiple reasons. There could be pushing deadlines. It could be something that came up on short notice but must be completed ASAP. It could also be something that’s not urgent but would give you the most value, such as completing an online course.&lt;/p&gt;

&lt;p&gt;On the other hand, you should also know which tasks hold little value and should &lt;em&gt;not&lt;/em&gt; be pursued. This includes all sorts of distractions, like social media, binging Netflix shows, or playing League with your friends all night.&lt;/p&gt;

&lt;p&gt;Remember that you know your goals best! Be honest with yourself and devise a plan for what to tackle first.&lt;/p&gt;

&lt;p&gt;I love the Eisenhower Box, something I came across when reading The 7 Habits of Highly Effective Teens by Sean Covey a long time ago. It’s a really simple way to form a high-level overview of all your tasks. All you have to do is make a list of your tasks, and divide them into four quadrants based on two factors: importance and urgency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xrxiDIlU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639615279762/kt3oM6hrn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xrxiDIlU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639615279762/kt3oM6hrn.png" alt="eisenhower" width="700" height="653"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Image source: todoist.com&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After dividing tasks into their respective quadrants, it’s only a matter of devising how to approach them.&lt;/p&gt;

&lt;p&gt;Complete everything in the “Do It” quadrant immediately. Deal with the “Schedule It” quadrant strategically by thorough planning and scheduling.&lt;/p&gt;

&lt;p&gt;Tasks in the “Delegate It” quadrant are a bit tricky. They are necessities that hold little meaning. Try delegating them as much as possible, so that you have space for more valuable tasks. Maybe you can have your friend take your dog out for a walk. Perhaps you can order your electronics online instead of going to stores. How about investing in a dishwasher instead of doing dishes yourself after every meal?&lt;/p&gt;

&lt;p&gt;Lastly, the tasks in the “Delete It” quadrant have to be mercilessly eliminated. They are tasks that bring no value to your life, and not doing them would have little to no consequences. These distractions only move you away from your goals.&lt;/p&gt;

&lt;p&gt;Once you start cutting these out, you’ll acquire more freedom and feel more productive. The “Delete It” tasks occupy valuable time that could be spent being productive. If you spend a lot of time on social media and entertainment, you leave no room for work that you &lt;em&gt;should&lt;/em&gt; be doing instead. This sets you up for burnouts faster than anything.&lt;/p&gt;

&lt;p&gt;Sure, some entertainment is healthy and also necessary! The important thing is setting limits for how much time you assign to them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#give-yourself-breaks"&gt;
  &lt;/a&gt;
  Give Yourself Breaks
&lt;/h2&gt;

&lt;p&gt;Speaking of entertainment, it is essential to give yourself a break. It’s okay to pause your fast-paced life for a while and just do whatever relaxes you. Make time for activities that are enjoyable at all levels.&lt;/p&gt;

&lt;p&gt;Go out for a brief walk. Watch that new movie everyone’s been talking about. Hang out with friends and laugh! Even from a zoomed-out perspective, taking breaks is vital. This could be anything ranging from traveling on weekends to full-fledged vacations. All these activities help freshen you up, reduce stress and fatigue, and help improve your performance when you continue with your work again.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6lFZ_oix--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639615312633/is7LOrYAp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6lFZ_oix--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1639615312633/is7LOrYAp.png" alt="breaks" width="600" height="387"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Image source: rlptraining.com&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For me, my breaks came in the form of sports and yoga. The latter especially gave me much-needed mental clarity and peace during my jam-packed days. Can’t go out? No problem! I have a list of cool apps and websites you can use solely to relax and have fun.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reach-out"&gt;
  &lt;/a&gt;
  Reach Out
&lt;/h2&gt;

&lt;p&gt;It’s &lt;em&gt;always&lt;/em&gt; better to talk to someone about your struggles and feelings when you’re going through burnouts.&lt;/p&gt;

&lt;p&gt;It’s hard to self-diagnose burnout, and even harder to tell if you need professional help. Don’t be afraid to go out and talk to a therapist, your school counselor, or even your friends and family. You’d be surprised to find out how many channels of help you have in your life if only you reach out.&lt;/p&gt;

&lt;p&gt;I used to be very hesitant about sharing my struggles because I did not want to feel judged, especially by those I considered close. When I finally mustered up my courage to talk about my struggles with my close friends and family, I felt like a heavy weight was lifted off my shoulders. All I did was simply share my feelings. When people I talked to shared their own burnout experiences, I sort of felt comforted in realizing that I wasn’t alone. It made me feel a bit better to know that other people could relate, too.&lt;/p&gt;

&lt;p&gt;It’s also okay not to feel comfortable talking to people about it in person. There are many resources online where you can stay completely anonymous and still share your feelings with other people and get help.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#everything-will-be-okay"&gt;
  &lt;/a&gt;
  Everything Will Be Okay!
&lt;/h2&gt;

&lt;p&gt;The most important thing is to keep believing in yourself. Life can throw all sorts of lemons, oranges and grapes at you, and you can Fruit Ninja your way through them!&lt;/p&gt;

&lt;p&gt;I know exactly what it feels like to think that some days it’s just too much. You may be in a bad situation right now, but it won’t stay like this forever. Try doing your best and invest in improving yourself one day at a time. Every little change counts. You’re strong and you can do this!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/9kRKQkmB3B0sQPE0bb/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/9kRKQkmB3B0sQPE0bb/giphy.gif" alt="everything-will-be-ok" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The post &lt;a href="https://dorrabb.me/1138/burnouts-how-i-persevere-as-a-working-student-developer/"&gt;Burnouts: how I persevere as a working student developer&lt;/a&gt; appeared first on &lt;a href="https://dorrabb.me"&gt;Dora Codes Crap&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>improvement</category>
      <category>development</category>
      <category>lifestyle</category>
      <category>growth</category>
    </item>
    <item>
      <title>Building an Electron App with VueJS and Vite</title>
      <author>Cody Bontecou</author>
      <pubDate>Thu, 16 Dec 2021 00:18:34 +0000</pubDate>
      <link>https://dev.to/codybontecou/building-an-electron-app-with-vuejs-and-vite-em9</link>
      <guid>https://dev.to/codybontecou/building-an-electron-app-with-vuejs-and-vite-em9</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x3Ur4D3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codybontecou.com/images/electron-app-with-vuejs-and-vite-meta.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x3Ur4D3N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://codybontecou.com/images/electron-app-with-vuejs-and-vite-meta.png" alt="Showcase of Electron rendering VueJS code" width="880" height="460"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#building-an-electron-app-with-vuejs-and-vite"&gt;
  &lt;/a&gt;
  Building an Electron App with VueJS and Vite
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Let's combine the power of Electron with VueJS and Vite to create incredible desktop applications using nothing but Javascript. \&lt;br&gt;
This article was originally posted on my &lt;a href="https://codybontecou.com/electron-app-with-vuejs-and-vite.html"&gt;site&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#tl-dr"&gt;
  &lt;/a&gt;
  TL: DR
&lt;/h2&gt;

&lt;p&gt;Clone &lt;a href="https://github.com/Deluze/electron-vue-template"&gt;this&lt;/a&gt; repo and use it as a starter template.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#electronvue-is-dead-long-live-electronvuetemplate"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/SimulatedGREG/electron-vue"&gt;electron-vue&lt;/a&gt; is dead, long live &lt;a href="https://github.com/Deluze/electron-vue-template"&gt;electron-vue-template&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It appears &lt;a href="https://github.com/SimulatedGREG/electron-vue"&gt;electron-vue&lt;/a&gt;, the leading Github repository that combines VueJS and Electron hasn't had a commit since April 21, 2021. Prior to the April 21st commits, it hasn't had serious contribution activity since December 3rd, 2019 and before that October 23, 2018.&lt;/p&gt;

&lt;p&gt;The repo may not be dead, but it's on its way out - failing builds, hundreds of open issues, and being locked into specific tooling versions all may be signs to be.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vueclipluginelectronbuilder-is-neat-but-its-not-my-cup-of-tea"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/nklayman/vue-cli-plugin-electron-builder"&gt;vue-cli-plugin-electron-builder&lt;/a&gt; is neat, but it's not my cup of tea.
&lt;/h2&gt;

&lt;p&gt;With 3.5k Github Stars and about the same amount of support as electron-vue, I decided to give it a shot. Their claim is to run the command &lt;code&gt;vue add electron-builder&lt;/code&gt; to your existing application created using Vue CLI 3 or 4 and that's it, your VueJS web app now runs within an Electron instance.&lt;/p&gt;

&lt;p&gt;With a fresh VueJS application built using &lt;code&gt;vue create&lt;/code&gt; then immediately running &lt;code&gt;vue add electron-builder&lt;/code&gt;, I was able to get an Electron instance running which truly is incredible.&lt;/p&gt;

&lt;p&gt;Although it compiled and launched, it did give me an &lt;code&gt;ExtensionWarning&lt;/code&gt; error message. Trying to move around the directory structure and changing the file names broke the application. Having to read the documentation to manage something as basic as filename and location is irritating.&lt;br&gt;
I'm afraid this package has a bit too much magic going on behind the scenes for me to be comfortable using it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-electronvuetemplate-it-only-has-14-stars"&gt;
  &lt;/a&gt;
  Why &lt;a href="https://github.com/Deluze/electron-vue-template"&gt;electron-vue-template&lt;/a&gt;? It only has 14 stars!
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;It's very simplistic, with no unnecessary dependency overhead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;electron-vue-template scaffolds the site in a transparent and easy-to-manage way. It comes with a very nice directory structure, making it easy to digest and understand where configuration or build code is occurring. &lt;strong&gt;There's no magic happening behind the scenes in a node_module build script.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Because of its transparent nature and well-structured code. This template works perfectly as a beginning spot to build out a desktop application using VueJS and Electron.&lt;/p&gt;

&lt;p&gt;There is little loss of this repository loses its only contributor tomorrow. Because it's a template, you can clone it and pick apart the pieces you want.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#not-to-mention-it-comes-with-vite"&gt;
  &lt;/a&gt;
  Not to mention, it comes with Vite!
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt; is in a league of its own when it comes to Hot Module Replacement (HMR). Because of its on demand file serving, application build times are nearly instant - far, far quicker than any other build tool that exists.&lt;/p&gt;

&lt;p&gt;Of the three packages mentioned, &lt;a href="https://github.com/Deluze/electron-vue-template"&gt;electron-vue-template&lt;/a&gt; is the only one that comes with Vite built-in. This alone is a reason to utilize the template.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h2&gt;

&lt;p&gt;I've been using Electron these past few weeks on a personal app that I plan to reveal soon. It's gotten to a stage where the backend logic is hammered down and is in need of a UI boost as well as a state-management system like Vuex.&lt;/p&gt;

&lt;p&gt;I'll be integrating a state-management system soon - either &lt;a href="https://vuex.vuejs.org/"&gt;Vuex&lt;/a&gt; or &lt;a href="https://github.com/posva/pinia"&gt;Pinia&lt;/a&gt;. I'm curious to see what this process looks like within an Electron app utilizing Vue, but I'll try my best to write up a blog post as I go through the process.&lt;/p&gt;

</description>
      <category>vue</category>
      <category>vite</category>
      <category>javascript</category>
      <category>electron</category>
    </item>
    <item>
      <title>How has COVID accelerated use of AI for mental health?</title>
      <author>Mage</author>
      <pubDate>Thu, 16 Dec 2021 00:14:19 +0000</pubDate>
      <link>https://dev.to/mage_ai/how-has-covid-accelerated-use-of-ai-for-mental-health-4633</link>
      <guid>https://dev.to/mage_ai/how-has-covid-accelerated-use-of-ai-for-mental-health-4633</guid>
      <description>&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TLDR
&lt;/h2&gt;

&lt;p&gt;Research on how AI can integrate itself into mental health treatment is in its early stages of development. While AI is not ready to be deployed as a sole treatment, NLP has shown promising results in tandem with other methods of treatment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outline"&gt;
  &lt;/a&gt;
  Outline
&lt;/h2&gt;

&lt;p&gt;Intro &lt;/p&gt;

&lt;p&gt;AI’s use in healthcare&lt;/p&gt;

&lt;p&gt;Mental health issues&lt;/p&gt;

&lt;p&gt;AI’s integration&lt;/p&gt;

&lt;p&gt;Limits to AI’s effectiveness&lt;/p&gt;

&lt;p&gt;Closing thoughts&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;While being on a steady rise for years, the COVID-19 pandemic has increased reported cases of poor mental health significantly. &lt;a href="https://www.kff.org/coronavirus-covid-19/issue-brief/the-implications-of-covid-19-for-mental-health-and-substance-use/"&gt;KFF&lt;/a&gt; reports that the implications of the pandemic have resulted in 4 in 10 adults reporting symptoms of anxiety and/or depressive disorders. The increase in cases has a risk to further stress the US’s overburdened mental health system. Advancements of AI in health care could show promising results for the treatment of mental health.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SBJrle_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sdfgpd0focqtd4a070th.png" alt="Image description" width="861" height="484"&gt;&lt;em&gt;&lt;a href="https://www.kff.org/coronavirus-covid-19/issue-brief/the-implications-of-covid-19-for-mental-health-and-substance-use/"&gt;Source&lt;/a&gt;&lt;/em&gt;
&lt;/center&gt;
&lt;h2&gt;
  &lt;a href="#ais-use-in-healthcare"&gt;
  &lt;/a&gt;
  AI’s use in healthcare
&lt;/h2&gt;

&lt;p&gt;AI’s deployment into healthcare is a relatively new integration but is growing in use cases rapidly. Image processing for biopsies, robot-assisted surgeries, and even aiding in clinical diagnosis are all currently being used. According to &lt;a href="https://www.brookings.edu/research/risks-and-remedies-for-artificial-intelligence-in-health-care/"&gt;Brookings&lt;/a&gt;, AI has the power to push the boundaries of human performance, democratize medical knowledge and excellence, automate drudgery in medical practice, and manage patients and medical resources. AI has shown promising results in tackling many medical procedures but has only recently begun to be used for mental health cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mental-health-issues"&gt;
  &lt;/a&gt;
  Mental Health issues
&lt;/h2&gt;

&lt;p&gt;At its current state, mental health is primarily addressed by physicians in two ways: drug treatments and/or talk therapy. Due to the increase of people seeking talk therapy, psychologists are becoming overbooked for months into the future. Todd Essig, a clinical psychologist and psychoanalyst, spoke with &lt;a href="https://www.cnn.com/2020/12/18/health/mental-health-care-demand-wellness/index.html"&gt;CNN&lt;/a&gt; saying “the pandemic is exposing fault lines that should have been corrected years and years ago.” Disparities within healthcare access and insurance coverage have pushed many suffering from poor mental health not to seek treatment, as it’s too far out of reach.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ais-integration"&gt;
  &lt;/a&gt;
  AI’s integration
&lt;/h2&gt;

&lt;p&gt;To address increasing equitable access to mental health care, AI technologies focused on replicating traditional therapy are starting to be developed and used as a supplement to other mental health treatments. Natural language processing (NLP) is being used in trials to replicate the effects of traditional talk therapy. In a conversation with the &lt;a href="https://www.nytimes.com/2021/06/01/health/artificial-intelligence-therapy-woebot.html"&gt;New York Times&lt;/a&gt;, Jesse Wright, a psychiatrist and director of University of Louisville Depression Center, said “you can deliver it pretty readily in a digital framework, help people grasp these concepts and practice the exercises that help them think in a more rational manner.” Wright expanded and cited &lt;a href="https://pubmed.ncbi.nlm.nih.gov/31250242/"&gt;studies&lt;/a&gt; which showcased algorithms that performed well in their ability to guide patients through standard behavioral therapy processes.&lt;/p&gt;

&lt;p&gt;To develop NLP for therapy, researchers took recordings from thousands of sessions amongst different therapists and clients and processed them using speech recognition software. Machine learning algorithms were used to recognize the associations made between client testimonials and therapeutic response. In a study on NLP for psychotherapy, published in the &lt;a href="https://pubmed.ncbi.nlm.nih.gov/32614225/"&gt;Journal of Counseling Psychology&lt;/a&gt;, researchers found that their “results highlight the potential to harness natural language processing and machine learning to predict a key psychotherapy process variable that is relatively distal from linguistic content.” Using this technology, researchers have the potential to program NLP technology to react appropriately when given input values around mental health.&lt;/p&gt;


&lt;center&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0lPefB-b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t4r9nzl696hjcr36pp1g.png" alt="Image description" width="861" height="484"&gt;&lt;em&gt;&lt;a href="https://www.healthcare.digital/single-post/2018/02/15/woebot-mental-health-chatbot-used-on-facebook-messenger-now-launches-on-apple-s-app-store"&gt;Source&lt;/a&gt;&lt;/em&gt;
&lt;/center&gt;

&lt;p&gt;The success of these types of trials has led to the development of FDA approved chatbots for psychotherapy. &lt;a href="https://woebothealth.com/"&gt;Woebot&lt;/a&gt; is a mobile app which uses NLP to replicate traditional cognitive health therapy. Providing widespread access to “digital therapeutics” is a selling point of Woebot, and it shows promise with its recent &lt;a href="https://www.fda.gov/medical-devices/how-study-and-market-your-device/breakthrough-devices-program"&gt;FDA Breakthrough Device Designation&lt;/a&gt; for postpartum depression.&lt;/p&gt;

&lt;p&gt;Woebot and other mobile apps are not a clear-cut solution to mental health treatment. Experts have voiced concerns over the app’s algorithms and its inability to recognize and solve complex human issues. Moreover, people have been shown not to use mobile apps consistently, which limit their effectiveness.&lt;/p&gt;

&lt;p&gt;Despite its pitfalls, many users have reported a good experience with the app. While one user was frustrated with some of the generic answers the algorithm fed him, the user claims that expressing their feelings on the app made them realize the need for further treatment. Woebot considers itself a digital therapeutics tool and doesn’t claim it can directly address anxiety and depression.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#limits-to-ais-effectiveness"&gt;
  &lt;/a&gt;
  Limits to AI’s effectiveness
&lt;/h2&gt;

&lt;p&gt;AI has been slow to integrate itself into mental healthcare systems. While quantitative data drives much of the research in the medical field, mental health care relies heavily on qualitative results from the patient’s way of describing their issues and the psychologist’s way of interpreting them. An algorithm won’t always be able to grasp the complexity of the issues people deal with. An AI’s inability to understand and respond to what users are telling them can leave users feeling more frustrated and misunderstood.&lt;/p&gt;

&lt;p&gt;In addition to how effective these systems may or may not be, offloading treatment for mental health to algorithms could risk increasing disparities in equal treatment. According to &lt;a href="https://www.brookings.edu/techstream/the-wellness-industrys-risky-embrace-of-ai-driven-mental-health-care/"&gt;Brookings&lt;/a&gt;, “as digital solutions are cheap, scalable, and cost-efficient, segments of the population may have to rely on a substandard tier of service to address their mental health issues. Such trends also risk placing responsibility for mental-health care on users rather than healthcare providers.”&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing Thoughts
&lt;/h2&gt;

&lt;p&gt;Research has shown that there is an increased need for mental health services. While AI cannot be used at its current state to solely address issues surrounding mental health, it can be used in tandem with other tools to widen the scope of services offered. With the increased acceptance and discussion surrounding mental health, services are likely to spike in demand. While still in development, AI has shown promising results in trials to address the need for more mental health services.&lt;/p&gt;

</description>
      <category>mentalhealth</category>
      <category>ai</category>
      <category>covid19</category>
      <category>healthcare</category>
    </item>
  </channel>
</rss>
