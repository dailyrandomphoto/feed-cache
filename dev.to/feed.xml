<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React-Notifications ‚ö†Ô∏è</title>
      <author>Adyasha Mohanty</author>
      <pubDate>Tue, 20 Apr 2021 11:21:57 +0000</pubDate>
      <link>https://dev.to/adyasha8105/react-notifications-33do</link>
      <guid>https://dev.to/adyasha8105/react-notifications-33do</guid>
      <description>&lt;p&gt;Here I‚Äôll show how we can handle notifications in our React project. First, we‚Äôll be using &lt;strong&gt;react-notifications&lt;/strong&gt;üîî, which, as its name suggests, is a notification component for React.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o1W5LhXi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/5574267/35336500-e58f35b6-0118-11e8-800b-2da6594fc700.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o1W5LhXi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/5574267/35336500-e58f35b6-0118-11e8-800b-2da6594fc700.gif" alt="Notifications"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation:
&lt;/h2&gt;

&lt;p&gt;Go to the client &lt;em&gt;project directory&lt;/em&gt; and install the following npm package:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm install --save react-notifications&lt;/code&gt;&lt;br&gt;
    or&lt;br&gt;
 &lt;code&gt;yarn add react-notifications&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-the-notification-container"&gt;
  &lt;/a&gt;
  Setting up the Notification container:
&lt;/h2&gt;

&lt;p&gt;Now update the &lt;em&gt;App.js&lt;/em&gt; file. Import &lt;em&gt;NotificationContainer&lt;/em&gt; from react-notifications and the &lt;em&gt;notifications.css&lt;/em&gt; file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// React Notification&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-notifications/lib/notifications.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NotificationContainer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-notifications&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="p"&gt;...&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;NotificationContainer&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Router&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So far, we have completed our setup for &lt;em&gt;NotificationContainer&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NOTE: Use only one NotificationContainer component in the app.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now it‚Äôs time to pass notifications from different components to display their message.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-notifications-from-components"&gt;
  &lt;/a&gt;
  Setting Notifications from components:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// React Notification&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NotificationManager&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-notifications&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Add this line where you want to show the notification&lt;/span&gt;
&lt;span class="nx"&gt;NotificationManager&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hey I am Adyasha&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Info!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Horray, you did it. Now you can run your project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#available-notificationmanager-apis"&gt;
  &lt;/a&gt;
  Available NotificationManager APIs:
&lt;/h2&gt;

&lt;p&gt;You can apply this same method to different components in your project. Notifications will be displayed in different colors depending on the notification type.&lt;br&gt;
For this package, there are four different APIs available to us of the following types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;info&lt;/li&gt;
&lt;li&gt;success&lt;/li&gt;
&lt;li&gt;warning&lt;/li&gt;
&lt;li&gt;error&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here‚Äôs an example for the &lt;em&gt;success&lt;/em&gt; type ‚Äî simply replace &lt;em&gt;success&lt;/em&gt; with the proper notification type for the given situation :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;NotificationManager.success(message, title, timeOut, callback, priority);&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can also pass five different parameters along with the message: &lt;em&gt;message&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;timeOut&lt;/em&gt;, &lt;em&gt;callback&lt;/em&gt;, and &lt;em&gt;priority&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The parameters that follow the notification type are described below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;message&lt;/em&gt;: The message we want to pass. It has to be a string.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;title&lt;/em&gt;: The title of the notification. Again, its type is a string.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;timeOut&lt;/em&gt;: The popup timeout in milliseconds. This has to be an integer.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;callback&lt;/em&gt;: We can pass a function (type; function) through the notification. It executes after the popup is called.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;priority&lt;/em&gt;: This is a boolean parameter. We can push any notification to the top at any point by setting the priority to true.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's all. Thanks for your patience ‚ù§Ô∏è! Have a nice day ;)&lt;/p&gt;

&lt;p&gt;Find me on Twitter &lt;a href="https://twitter.com/Adyasha8105"&gt;@Adyasha8105&lt;/a&gt;üëÄ.&lt;/p&gt;

</description>
      <category>react</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 10 AI projects for Resume </title>
      <author>Kiran Sethumadhavan</author>
      <pubDate>Tue, 20 Apr 2021 11:14:49 +0000</pubDate>
      <link>https://dev.to/kiransethu46/top-10-ai-projects-for-resume-2gmk</link>
      <guid>https://dev.to/kiransethu46/top-10-ai-projects-for-resume-2gmk</guid>
      <description>&lt;p&gt;1 Jarvis AI&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NZMTWBpLUa4"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;2 Face Recognition + Attendence &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/sz25xxF_AVE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;3 Personal AI Trainer&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/5kaX3ta398w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;4 Write in air &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QBGBnjIkRaw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;5 Car Detection &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/O3b8lVF93jU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;6 Stock Detection &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QIUxPv5PJOY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;7 Distance Detection &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/mFLZkdH1yLE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;8 Object Detection &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RFqvTmEFtOE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;9 Hand Tracking &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/NZde8Xt78Iw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;10 Ball Tracker &lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/FN-YWTbVda8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you want to Kick-start a career in Cyber Security and want to know how hackers hack in real life ‚ò†Ô∏è‚ò†Ô∏è&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Join Now and support us !!! &lt;br&gt;
200+ Members already Joined&lt;/p&gt;

&lt;p&gt;&lt;a href="https://t.me/infosecbugbounty"&gt;https://t.me/infosecbugbounty&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>ai</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Como usar vari√°veis de ambiente sem biblioteca em React</title>
      <author>Matheus dos Reis de Jesus</author>
      <pubDate>Tue, 20 Apr 2021 11:01:38 +0000</pubDate>
      <link>https://dev.to/reisdev/como-usar-variaveis-de-ambiente-sem-biblioteca-em-react-1ce6</link>
      <guid>https://dev.to/reisdev/como-usar-variaveis-de-ambiente-sem-biblioteca-em-react-1ce6</guid>
      <description>&lt;p&gt;Capa por &lt;a href="https://unsplash.com/@flyd2069?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;FLY:D&lt;/a&gt; no &lt;a href="https://unsplash.com/s/photos/key-security?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;J√° deixou vazar alguma chave de seguran√ßa porque subiu alguma altera√ß√£o e esqueceu de apagar o conte√∫do sens√≠vel? Usar vari√°veis de ambiente evita que coisas assim aconte√ßam. Mas, como elas funcionam no React? Vem comigo!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sum%C3%A1rio"&gt;
  &lt;/a&gt;
  Sum√°rio
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.too-que-s%C3%A3o-vari%C3%A1veis-de-ambiente"&gt;O que s√£o Vari√°veis de ambiente&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#como-funcionam"&gt;Como funcionam&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#como-utilizar"&gt;Como utilizar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#o-que-s%C3%A3o-vari%C3%A1veis-de-ambiente"&gt;
  &lt;/a&gt;
  O que s√£o Vari√°veis de Ambiente
&lt;/h1&gt;

&lt;p&gt;Vari√°veis de ambiente s√£o um conjunto de valores que geralmente s√£o definidos para configura√ß√µes de uma aplica√ß√£o. Exemplos: Dados de conex√£o com um banco, a URL de uma API e etc.&lt;/p&gt;

&lt;p&gt;O termo "Ambientes" se refere √† diferentes cen√°rios em que uma aplica√ß√£o pode estar sendo executada. Os mais comuns s√£o: desenvolvimento, teste, homologa√ß√£o, e produ√ß√£o. Cada um deles pode exigir diferentes configura√ß√µes, e por isso √© feita essa divis√£o. Voc√™ uma vari√°vel na aplica√ß√£o que, em diferentes ambientes, ter√° valores espec√≠ficos para aquele cen√°rio.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#como-funcionam"&gt;
  &lt;/a&gt;
  Como funcionam
&lt;/h1&gt;

&lt;p&gt;Para configurar vari√°veis de ambiente em uma aplica√ß√£o React voc√™ precisa criar um arquivo na raiz da aplica√ß√£o com o nome &lt;code&gt;.env&lt;/code&gt;. Primeiro, certifique-se de que est√° na pasta-raiz do seu projeto, onde ficam os arquivos &lt;code&gt;package.json&lt;/code&gt;, &lt;code&gt;.gitignore&lt;/code&gt; e etc. Se preferir criar por linha de comando, utilize um dos comandos abaixo, de acordo com seu sistema operacional:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# MacOS ou Linux&lt;/span&gt;
&lt;span class="nb"&gt;touch&lt;/span&gt; .env

&lt;span class="c"&gt;# Windows&lt;/span&gt;
&lt;span class="nb"&gt;type &lt;/span&gt;NUL &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; .env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Agora, voc√™ ver√° o arquivo vazio na pasta-raiz do seu projeto. Para criar uma vari√°vel de ambiente, voc√™ deve utilizar o prefixo &lt;code&gt;REACT_APP_&lt;/code&gt;. Por exemplo: Se voc√™ deseja criar uma vari√°vel &lt;code&gt;API_URL&lt;/code&gt;, ela deve ser nomeada como &lt;code&gt;REACT_APP_API_URL&lt;/code&gt;, pois a &lt;code&gt;react-scripts&lt;/code&gt; s√≥ faz a leitura das vari√°veis que usam esse prefixo.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#como-utilizar"&gt;
  &lt;/a&gt;
  Como utilizar
&lt;/h1&gt;

&lt;p&gt;Vamos supor uma aplica√ß√£o que precise de vari√°veis de ambiente para usar uma API para usar com o Axios. N√£o se preocupe com o que √© axios e o que API, foque em entender a parte das vari√°veis. Ser√° preciso configurar a porta, a url base e a vers√£o de uma API. Logo, nosso arquivo &lt;code&gt;.env&lt;/code&gt; ficaria da seguinte forma:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Arquivo .env&lt;/span&gt;
REACT_APP_API_BASEURL &lt;span class="o"&gt;=&lt;/span&gt; https://mydomain.com
REACT_APP_API_PORT &lt;span class="o"&gt;=&lt;/span&gt; 8888
REACT_APP_API_VERSION &lt;span class="o"&gt;=&lt;/span&gt; v2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;E agora, para configurar nossa inst√¢ncia do Axios, podemos utilizar nossas vari√°veis de ambiente:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Arquivo axios.js, apenas um exemplo&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;REACT_APP_API_BASEURL&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;REACT_APP_API_PORT&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;REACT_APP_API_VERSION&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;baseURL&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;port&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;version&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/`&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;E pronto. Nossas vari√°veis de ambiente est√£o configuradas e prontas para serem utilizadas em toda a aplica√ß√£o. Por√©m, ainda temos dois pontos importantes:&lt;/p&gt;

&lt;p&gt;Para evitar que seu arquivo &lt;code&gt;.env&lt;/code&gt; seja enviado para um reposit√≥rio remoto, √© importante adicion√°-lo ao &lt;code&gt;.gitignore&lt;/code&gt;,dessa forma:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Arquivo .gitignore&lt;/span&gt;
&lt;span class="c"&gt;# ... outros valores&lt;/span&gt;
.env
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;E, para garantir que outras pessoas saber√£o configurar as vari√°veis de ambiente, crie um arquivo &lt;code&gt;.env.example&lt;/code&gt;, com as vari√°veis sem valor definido, dessa forma:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Arquivo .env.example&lt;/span&gt;
REACT_APP_API_BASEURL &lt;span class="o"&gt;=&lt;/span&gt; https://mydomain.com
REACT_APP_API_PORT &lt;span class="o"&gt;=&lt;/span&gt; 8888
REACT_APP_API_VERSION &lt;span class="o"&gt;=&lt;/span&gt; v2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#considera%C3%A7%C3%B5es"&gt;
  &lt;/a&gt;
  Considera√ß√µes
&lt;/h1&gt;

&lt;p&gt;√â importante lembrar que vari√°veis de ambiente configuradas em containers e ambientes cloud(Heroku, Vercel, Netlify, etc) tamb√©m s√£o reconhecidas, em tempo de build. Agora que voc√™ j√° sabe disso, n√£o vai mais precisar se preocupar em apagar valore sens√≠veis toda vez que for fazer algum commit.&lt;/p&gt;

&lt;p&gt;Gostou deste artigo? Me siga para mais conte√∫dos como esse!&lt;/p&gt;

&lt;p&gt;Minhas redes sociais:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/reisdev"&gt;Twitter&lt;/a&gt; | &lt;a href="https://instagram.com/reisdev"&gt;Instagram&lt;/a&gt; | &lt;a href="https://youtube.com/reisdev"&gt;Youtube&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;At√© o pr√≥ximo artigo!üëãüèΩ&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>security</category>
      <category>braziliandevs</category>
    </item>
    <item>
      <title>Which Linux distro do you use?</title>
      <author>Alex Georgiev</author>
      <pubDate>Tue, 20 Apr 2021 10:48:13 +0000</pubDate>
      <link>https://dev.to/alexgeorgiev17/which-linux-distro-do-you-use-5coi</link>
      <guid>https://dev.to/alexgeorgiev17/which-linux-distro-do-you-use-5coi</guid>
      <description>&lt;p&gt;Hello everyone!&lt;/p&gt;

&lt;p&gt;A few weeks ago I've created a blog post and asked if you use Linux and why. Following this one, I would like to use you which is the Linux distro that you use and why you've chosen it. Also, feel free to share your experience and what other distros you've used along the way before choosing your current distro.&lt;/p&gt;

&lt;p&gt;For me, it was Linux Mint for my work PC. This was my first Linux experience. I've bought a laptop that came with OpenSUSE and I've used it for some time, but then I've upgraded to a dual boot setup with Ubuntu 16.04. Now I'm using Ubuntu 20.04 with KDE and CentOS 7 for my servers.&lt;/p&gt;

&lt;p&gt;I'm curious to hear what you're using and what was your journey as well!&lt;/p&gt;

</description>
      <category>linux</category>
      <category>devops</category>
      <category>discuss</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>A tale of Layers and Oracles</title>
      <author>omar-saadoun</author>
      <pubDate>Tue, 20 Apr 2021 10:39:27 +0000</pubDate>
      <link>https://dev.to/omarsaadoun/a-tale-of-layers-and-oracles-ifd</link>
      <guid>https://dev.to/omarsaadoun/a-tale-of-layers-and-oracles-ifd</guid>
      <description>&lt;h6&gt;
  &lt;a href="#the-advantages-of-having-all-the-options-on-layer-1"&gt;
  &lt;/a&gt;
  The advantages of having all the options on Layer 1
&lt;/h6&gt;

&lt;p&gt;There‚Äôs nothing like being in the middle of a bull-cycle to show which crypto projects can run with the demand of mass adoption and which are scrambling to retroactively create solutions for their short-comings.&lt;/p&gt;

&lt;p&gt;Millions of new users are becoming aware of what blockchain technology offers them, thousands of new applications are being created and the traffic on networks reaches billions of transactions. There are no clear winners or losers in the race to bring decentralized finance to the people, however, at the height of the cycle, &lt;strong&gt;some major players are starting to show cracks.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Being the trailblazer of smart-contract blockchains, Ethereum is paying the price of being the first. And it‚Äôs not just Ethereum, &lt;strong&gt;most early blockchains suffer from the same symptoms ‚Äî lack of scalability, low speed and high transaction cost.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The solution to this problem ‚Äî Layer 2 applications. And further down the line, possibly even Layer 3. How will it work, what will be the drawbacks, and will these solutions be efficient enough?&lt;/p&gt;

&lt;p&gt;Talking to developers about the phenomenon of Layer 2 solutions and their viability, the conclusion I was brought to is that &lt;strong&gt;building software is similar to building a house.&lt;/strong&gt; You need to set the groundwork and design for what it is supposed to be when it‚Äôs complete. &lt;strong&gt;You shouldn‚Äôt build and design at the same time.&lt;/strong&gt; Imagine starting to build your one-floor house and then, at one point you realise you will need more space, so you decide to add another 2, 3 floors on top and then just do it. Now imagine that entire building collapsing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GTOPNYOh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dya4z1eoskx54wqx67v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GTOPNYOh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dya4z1eoskx54wqx67v.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you build software and especially software as sophisticated as blockchain, knowing, planning and designing for the future is the right way. &lt;strong&gt;Having a strong architecture that was crafted from the beginning with the features and possibilities in mind is crucial.&lt;/strong&gt; You want to avoid doing big refactorings that could break backward compatibility, making updates much more complicated and risky.&lt;/p&gt;

&lt;p&gt;When we talk about Layer 1 and Layer 2 we talk about that planning, meaning that you‚Äôve created and designed your software already knowing what the needs of your users are going to be, even long after your initial launch. This leads to easier access to resources, less memory consumption and more secure internal processes, resulting in a faster execution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;With √¶ternity, that plan was made ahead, taking advantage of smart design and architecture from the first minute, anticipating scalability issues that are now playing against adoption.&lt;/strong&gt; The √¶ternity technology was crafted with future demand and adoption in mind, thus the blockchain‚Äôs had cutting-edge functionalities incorporated since its mainnet launch in November 2018. That‚Äôs why you only need one layer to work with all the features like Oracles, Naming System, or state channels. That also explains why transactions on the √¶ternity blockchain are so efficient , and why you don‚Äôt have the need for extra layers.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aWEOQgbL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9acnjlcu7cc98wxyoam.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aWEOQgbL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n9acnjlcu7cc98wxyoam.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;√Üternity was born DeFi-ready&lt;/strong&gt;, with smart contract capability, extremely high scalability and transaction speed, alongside embedded Oracles, off-chain smart contract executions thanks to state channels, and human-readable addresses, &lt;strong&gt;making √¶ternity the best foundation technology for decentralised applications.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With pioneering solutions such as &lt;strong&gt;Hyperchains, embedded Oracles and State Channels&lt;/strong&gt;, √¶ternity‚Äôs developers exhibit a rare farsightedness in terms of future capabilities as well as needs of the users and developers when mass adoption inevitably comes. By looking ahead and learning from the mistakes of the early blockchain platforms, √¶ternity‚Äôs design defeats the purpose of Layer 2 solutions.&lt;/p&gt;

&lt;p&gt;√Üternity‚Äôs embedded Oracles, for example, allow interaction between real world data and smart contracts. Any publicly available data can be integrated into smart contracts, and events like election results, weather conditions, sporting event results or certain commodity prices trigger changes to those smart contracts. This opens up the field for major applications such as decentralised finance, supply chain management, information markets, insurances, gaming, the Internet of Things and many more. While other blockchain networks rely on third party solutions, to provide Oracles, √¶ternity offers them out-of-the-box for the best user experience, but also for the best developer experience, security and optimization of costs.&lt;/p&gt;

&lt;p&gt;Oracles are just one of many functions essential for what blockchain is trying to bring to the world ‚Äî an efficient independence from third parties to be trusted and the instant interoperability of the physical world and the decentralised web.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#as-a-next-generation-smart-contract-platform-%C3%A6ternity-blockcain-is-interwoven-with-innovation-and-functionalities-most-other-blockchains-dont-offer-and-they-are-all-on-layer-1"&gt;
  &lt;/a&gt;
  As a next generation smart contract platform, √¶ternity blockcain is interwoven with innovation and functionalities most other blockchains don‚Äôt offer. And they are all on Layer 1.
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Experience the quality of smart design, build on √¶ternity blockchain.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Original post from : &lt;a href="https://blog.aeternity.com/a-tale-of-layers-and-oracles-669203069cf6"&gt;https://blog.aeternity.com/a-tale-of-layers-and-oracles-669203069cf6&lt;/a&gt;&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>aeternityblockchain</category>
      <category>oracles</category>
    </item>
    <item>
      <title>Top 20+ Bootstrap Dashboard Templates To Use Absolutely Free</title>
      <author>Nastassia Ovchinnikova</author>
      <pubDate>Tue, 20 Apr 2021 10:28:21 +0000</pubDate>
      <link>https://dev.to/flatlogic/top-20-bootstrap-dashboard-templates-to-use-absolutely-free-4l6d</link>
      <guid>https://dev.to/flatlogic/top-20-bootstrap-dashboard-templates-to-use-absolutely-free-4l6d</guid>
      <description>&lt;p&gt;Bootstrap, earlier known as Twitter Blueprint, needs no introduction because it‚Äôs a well-known web development framework on GitHub. To find your best fit for an admin dashboard template for free doesn‚Äôt seem like a complex task, cause Bootstrap has CSS-and JavaScript-based design templates with a variety of UI components that are widely known and used in web app development. Despite the oversaturated market in web development, Bootstrap themes and templates remain one of the most sought-after products among front-end developers. Bootstrap framework is used by 26.9% of all the websites; among them such valued brands like Netflix.com, Cnn.com, Espn.com, and Udemy.com.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#admin-dashboard-templates-strong-suits"&gt;
  &lt;/a&gt;
  Admin dashboard templates strong suits
&lt;/h1&gt;

&lt;p&gt;What are the indisputable components of a robust admin dashboard template? How to choose your optimal platform for better work and high performance? We‚Äôve defined a list of fundamental principles of a good admin template:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ux-design-quality"&gt;
  &lt;/a&gt;
  UX design quality
&lt;/h2&gt;

&lt;p&gt;By this, we mean that the hierarchy of elements matters. The structure of the components on the page, plenty of space, the contrast in colors for easy text comprehension, some decent logic that will hint to the customer to intuitively make this or that action on the page. Good design is design that evokes emotion, nevertheless B2B or B2C design should be both emotional and rational. Visual hierarchy is the key that leads the user through the site satisfying their customer needs and your commercial ones.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#suitable-frontend-framework"&gt;
  &lt;/a&gt;
  Suitable front-end framework
&lt;/h2&gt;

&lt;p&gt;It‚Äôs up to you to decide which technology fits your best: trendy React or familiar Bootstrap or Node. But we‚Äôd go on the framework with which you feel most confident.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#updateability"&gt;
  &lt;/a&gt;
  Updateability
&lt;/h2&gt;

&lt;p&gt;An admin template should have frequent updates. An up-to-date theme will be more secure and will benefit from any new features.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-number-of-custom-features-additional-pages-eg-profile-page-inbox-page-etc"&gt;
  &lt;/a&gt;
  A number of custom features, additional pages (e.g. profile page, inbox page, etc)
&lt;/h2&gt;

&lt;p&gt;The admin template may be given some unique feature that makes it stand out from the crowd.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reasonable-price"&gt;
  &lt;/a&gt;
  Reasonable price
&lt;/h2&gt;

&lt;p&gt;Good admin templates can be priced higher without sacrificing customer interest in them, while bad admin templates can‚Äôt be.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#bootstrap-framework-benefits"&gt;
  &lt;/a&gt;
  Bootstrap framework benefits
&lt;/h1&gt;

&lt;p&gt;If you are unsure what technology to choose for building your website, Bootstrap has some clear benefits for your multiple possibilities. Flexible in development, the front-end framework has numerous HTML and CSS templates, validation styles to state warnings, and last but not least support various JavaScript extensions. Websites built using Bootstrap technology will display the same in all modern browsers. Bootstrap is the real way to build your site and mobile app fast since designing all of the front-end pages from scratch will be a pricey and time-consuming challenge, to say the least.&lt;/p&gt;

&lt;p&gt;Thanks to its clear code, Bootstrap can be quickly learned by a novice. Bootstrap is a proven and self-sufficient way to save time developing your web application and make the UX design quick. Bootstrap is a modular framework. Its real advantage is a huge number of ready-made well-designed components and a series of LESS files. The ability to customize templates for your project is achieved by changing the SCSS variables, and the low threshold of entry; to work with the framework you don‚Äôt need to be a genius of HTML, CSS, JavaScript, and jQuery.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NBBwvhTm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Frame-195ghc.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NBBwvhTm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Frame-195ghc.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#top-free-bootstrap-admin-dashboards-for-2021"&gt;
  &lt;/a&gt;
  Top Free Bootstrap Admin Dashboards for 2021
&lt;/h1&gt;

&lt;p&gt;We have gathered a list of the most attractive admin dashboards for you to choose from. Build your website effortlessly and in record time with free Bootstrap admin templates. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#modular-admin"&gt;
  &lt;/a&gt;
  Modular admin
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z2T1nazh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-16-at-16.49.25-1536x844.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z2T1nazh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-16-at-16.49.25-1536x844.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Modular admin dashboard is a Bootstrap 4 admin template, that boasts a clear and simple design, easily scalable, and fully customizable in use. Modular admin is a neatly arranged open source dashboard theme with lots of useful widgets like stats, history of visits, sales items, sales breakdown pie-chart, sales by countries, tasks lists, and more. All the UI elements like icons, cards, and buttons, are carefully drawn and highlighted in vivid colors. This admin template provides real-time insights into the sales activity simplifying inventory management. It‚Äôs easy to modify and maintain.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://modularcode.io/modular-admin-html/"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://modularcode.io/modular-admin-html/"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/modularcode/modular-admin-html"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sing-app-html5-lite"&gt;
  &lt;/a&gt;
  Sing App HTML5 LITE
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W8w2A1AY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-10.39.43-1536x810.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W8w2A1AY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-10.39.43-1536x810.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sing App HTML5 LITE is a free dashboard for your grand eCommerce plans, promo deals, mobile apps, or email marketing automation. Rather restrained in colors, though full of useful widgets, chart libraries, gallery, timeline, Sing App HTML5 LITE is perfect as a platform for your applications back end, project management systems, or any SAAS projects. Painted in Prussian blue background and chiseled typography of the theme adds formality and decisiveness to your business management. Sing App HTML5 Lite is a fully responsive admin template built on Bootstrap 4 and vanilla Javascript. One of the definite advantages of Sing App HTML5 LITE is data visualization through dozens of charts like flor charts, morris charts, rickshaw charts and sparkline chart.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://flatlogic.com/templates/sing-app-html5-lite"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://flatlogic.com/templates/sing-app-html5-lite/demo"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/flatlogic/sing-app"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concept"&gt;
  &lt;/a&gt;
  Concept
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nj3IGEnh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-10.47.58-1536x891.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nj3IGEnh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-10.47.58-1536x891.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Concept is an absolutely free admin template built on Bootstrap framework with a perfect responsive web design. Concept provides within easy reach all the essential components for building an admin panel for web applications. Concept dashboard has been designed as a stylish tool for developing projects in sales, finance, eCommerce, and influencer projects management. Concept features a huge collection of reusable code snippets and utilities, invoice, timeline, calendar, the media objects, and all clean code along with in-depth documentation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themewagon.com/themes/free-bootstrap-4-html5-admin-dashboard-template-concept/"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://colorlib.com/polygon/concept/index.html"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/puikinsh/concept"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flatlogic-one-bootstrap"&gt;
  &lt;/a&gt;
  Flatlogic One Bootstrap
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rGzzWQC5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-10.50.27-1536x892.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rGzzWQC5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-10.50.27-1536x892.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flatlogic One Bootstrap theme is a brand new template in the family of Flatlogic dashboard templates. Conceived as a helper in building deep analytics and data tables applications, Flatlogic one has a bunch of integral dashboards to check average order value, conversion rate, upsell take rate, number of returns, and more. Cheerful colors and pleasing to the eye, UI interface is very intuitive and ready to use for  CMS, SAAS, IoT Dashboard, eCommerce apps, and others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://flatlogic.com/templates/one-free-bootstrap-template"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://flatlogic.com/templates/one-free-bootstrap-template/demo"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/flatlogic/one-bootstrap-template"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#admin-kit"&gt;
  &lt;/a&gt;
  Admin Kit
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RhwZb0QH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-10.54.40-1536x891.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RhwZb0QH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-10.54.40-1536x891.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Admin Kit is a free and open-source Bootstrap 5 Web UI Kit &amp;amp; Dashboard template with highly detailed pages, tools and components, plugins and add-ons. A fully responsive system, clean code, constant improvements, and regular updates are provided. Admin Kit is a super fit for an administrator dashboard or Saas based interfaces. Fabulously elegant design, nice functionality, and a wide range of widgets inside like neatly arranged invoicing help to run your site work processes really smoothly and quickly. Some additional components like calendar, task, or notifications are available in the PRO version of the template.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://adminkit.io/"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://demo.adminkit.io/"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/adminkit/adminkit"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#star-admin-free"&gt;
  &lt;/a&gt;
  Star Admin Free
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2seaEzEh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-10.57.05-1536x893.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2seaEzEh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-10.57.05-1536x893.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Star Admin is a free bootstrap admin template made in juicy ultramarine blue. Star Admin has a full kit of representative dashboards like impressions, conversions, downloads, but is not burdened with extra components. All the basic UI-elements and clear form-elements, and well-written code are the distinct advantages of this trendy open-source dashboard. StarAdmin is primarily the dashboard template for keeping track of conversion rate, analyzing real-time sales. The custom plugins are also carefully customized to fit with the overall look of the theme, working seamlessly on desktop as well as tablets and phones. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bootstrapdash.com/product/star-admin-free/"&gt;More details&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.bootstrapdash.com/demo/star-admin-free/react/template/demo_1/preview/dashboard"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/BootstrapDash/StarAdmin-Free-Bootstrap-Admin-Template"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sb-admin-2"&gt;
  &lt;/a&gt;
  SB Admin 2
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cHL0TVAc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.01.22-1536x891.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cHL0TVAc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.01.22-1536x891.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SB Admin 2 template has a casual appearance and is highly intuitive to use, due to its fresh and clean UI design. Its strong side is in utility classes: the structures like animations, borders, colors, that contain reusable and stateless helper methods. And what‚Äôs more, this free dashboard has an advanced workflow environment based on npm and Gulp with live reloading via browser sync. Desktop, tablet, and mobile versions are also available and supported.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://startbootstrap.com/theme/sb-admin-2"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://startbootstrap.com/theme/sb-admin-2"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://startbootstrap.com/theme/sb-admin-2"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stisla"&gt;
  &lt;/a&gt;
  Stisla
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TXuzqpGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.03.37-1536x867.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TXuzqpGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.03.37-1536x867.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Stisla is a 100% open source product by Indonesian developers that has more than 30 third-party libraries. Stisla looks really fresh and modern in its light purple shades and will be a perfect fit for your dashboard UI design to capture the admins‚Äô heart. It is a HTML5 admin template, and each Stisla component/element/kit has its SCSS &amp;amp; JS file. Order statistics, general balance, budget vs. sales widgets, top 5 popular products will ease your sales or eCommerce management.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.getstisla.com/#/en/2.2.0/overview"&gt;More details&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.getstisla.com/#/en/2.2.0/overview"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://docs.getstisla.com/#/en/2.2.0/overview"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ample-bootstrap-admin-lite"&gt;
  &lt;/a&gt;
  Ample Bootstrap Admin Lite
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QopOIwAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.05.23-1536x892.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QopOIwAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.05.23-1536x892.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ample Admin is a nifty admin template dashboard by Wrappixel for building web and mobile apps. If you love a minimalistic design, this transparent dashboard will work for your eCommerce or sales web app solution. Easy to customize, the platform with solid icons can be updated to the PRO version with 1600+ page templates, unlimited color schemes, 7 unique demos, and 6 months premium support. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.wrappixel.com/templates/ample-admin-lite/"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://wrappixel.com/demos/admin-templates/ampleadmin/ample-admin-lite/basic-table.html"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/wrappixel/ample-admin-lite"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#material-dashboard-dark-edition"&gt;
  &lt;/a&gt;
  Material Dashboard Dark Edition
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f1mCFBJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.21.08-1536x889.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f1mCFBJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.21.08-1536x889.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Inspired by Google Material Design, Creative-Tim launched its admin template for lovers of dark colors and dark themes. The material dashboard is rich in components, has about 37000 downloads and about 200 positive reviews from customers all over the world. This is a free admin dashboard that comes with 5 color filter choices for both the sidebar and the card headers (blue, green, orange, red and purple), plus an option to have a background image on the sidebar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.creative-tim.com/product/material-dashboard-dark?_ga=2.101513477.529941862.1612173241-1422382989.1611572003"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://demos.creative-tim.com/material-dashboard-dark/examples/dashboard.html?_ga=2.101513477.529941862.1612173241-1422382989.1611572003"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/creativetimofficial/material-dashboard/tree/dark-edition"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dashio"&gt;
  &lt;/a&gt;
  Dashio
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X-vcu8np--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.22.56-1536x794.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X-vcu8np--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.22.56-1536x794.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dashio is another fully free admin dashboard template suitable for web apps for various purposes. Depending on your needs, Dashio admin template may be used for CRM and CMS projects, or project management systems. It loads fast, it‚Äôs highly responsive and has a variety of useful widgets for better data analysis. Besides the basic extra pages, like log screen, pricing table, FAQ, Dashio provides advanced cards for eCommerce, analytics, statistics, weather widget, Mail, and chat room. Dashio admin dashboard has a straightforward code and works well with all popular devices including mobile. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://templatemag.com/dashio-bootstrap-admin-template/"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://templatemag.com/demo/Dashio/"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/topics/dashio-admin-template"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#coreui"&gt;
  &lt;/a&gt;
  CoreUI
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hpDDqNG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.38.39-1536x892.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hpDDqNG_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.38.39-1536x892.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CoreUI admin template is a multipurpose Bootstrap admin template stand on Angular, ReactJS, and VueJS web frameworks. CoreUI offers 6 versions of free admin dashboard templates constructed on Bootstrap, React.js, Angular, Vue.js, Laravel, and Vue.js + Laravel. CoreUI was designed by polish web-developer ≈Åukasz Holeczek in a super clean style. Plus, for lovers of beautifully made pics and symbols, CoreUI offers 1000+ cool icons for common actions and items.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.getstisla.com/#/en/2.2.0/overview"&gt;More details&lt;/a&gt;&lt;br&gt;
&lt;a href="https://coreui.io/demo/3.4.0/"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/coreui/coreui-free-bootstrap-admin-template"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#argon"&gt;
  &lt;/a&gt;
  Argon
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w9-LqgiV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/IyvCiKdXKHITPoGtFoKRwLXRMmdj1zYw9BhFpOizLMbKpE37P83iJYKArJ3PtAPm7p5VXKrcJbo9ko8ZHxP99umhMDj202854dGBDbjk31Y7KoNe0niIJEmej9d5kylQmOdeYWtV" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w9-LqgiV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/IyvCiKdXKHITPoGtFoKRwLXRMmdj1zYw9BhFpOizLMbKpE37P83iJYKArJ3PtAPm7p5VXKrcJbo9ko8ZHxP99umhMDj202854dGBDbjk31Y7KoNe0niIJEmej9d5kylQmOdeYWtV" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Argon Dashboard is a free dashboard template that offers a vast range of components made with the help of Bootstrap 4. Among its top features that make Argon unique are a drop-down menu, call to action button, and progress bars, made with different colours, styles, and hovers. Moreover, Argon Dashboard has a sparking design with detailed documentation. Argon employs the Sass processor, offers one default dashboard, and contains 5 pre-built plugins that you can customize according to your needs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.creative-tim.com/product/argon-dashboard"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://technext.github.io/argon-dashboard/index.html"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/creativetimofficial/argon-design-system"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kapella"&gt;
  &lt;/a&gt;
  Kapella
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oJH83o3P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/_CAq3pRMAj7pj7w9BCtyT5EwS1SVmwr4plSNWGeQ5zYJz9WBGGGwVtRzplDl-CNZrsiiCXCeYlcezn0EmpTgryvPwKdV8lxr8PghmmVofN0nRZYSx-CjIQZDCgCTijr8wvySpL-9" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oJH83o3P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/_CAq3pRMAj7pj7w9BCtyT5EwS1SVmwr4plSNWGeQ5zYJz9WBGGGwVtRzplDl-CNZrsiiCXCeYlcezn0EmpTgryvPwKdV8lxr8PghmmVofN0nRZYSx-CjIQZDCgCTijr8wvySpL-9" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the most extraordinary examples in our list is the free Bootstrap 4 framework admin template, named Kapella. The structure of elements and widgets of this free template differs from the rest of the admin dashboards because of its horizontal navigation bar with a bunch of necessary functionalities like dashboard UI elements, form elements, charts and tables, and sample pages. This free website template has got an excellent collection of handy tools and essential components to use. The mint shade of typography and sans-serif typeface makes the whole design look fresh and attractive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bootstrapdash.com/product/kapella/"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.bootstrapdash.com/demo/kapella-free/template/pages/tables/basic-table.html#"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/BootstrapDash/Kapella-Free-Bootstrap-Admin-Template"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#purple"&gt;
  &lt;/a&gt;
  Purple
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y7HzF2XC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/K9236LhczvhyMtJU6F1HrEAqzSe47YObaqtcKs7IuovJ4__Y-rF2GjwMOQyHRLhCi0KcD3NtGKBYEkFNX8wBd1aDojsLZLbe3YGUIsAXUdKa6Sm-F-IDLVBGFdRW6v5u2Za0-wP2" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y7HzF2XC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/K9236LhczvhyMtJU6F1HrEAqzSe47YObaqtcKs7IuovJ4__Y-rF2GjwMOQyHRLhCi0KcD3NtGKBYEkFNX8wBd1aDojsLZLbe3YGUIsAXUdKa6Sm-F-IDLVBGFdRW6v5u2Za0-wP2" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Purple admin template is your best choice if your project demands a free, bright and vibrant set of admin pages. The dashboard UI elements have clearly been designed to be a good fit for the design of elegant web apps. Whether you‚Äôre designing the dashboard for your latest web app or software program, Purple focuses on the visual impression to provide an engaging user experience. It‚Äôs well-suited for eCommerce projects, CRM, or any other custom admin panels.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bootstrapdash.com/product/purple-vue-admin-free-dashboard-template/"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.bootstrapdash.com/demo/purple/jquery/template/demo_1/"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/BootstrapDash/purple-free-vue-admin-template"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#majestic-dashboard"&gt;
  &lt;/a&gt;
  Majestic Dashboard
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BJUDMhzj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.50.30-1536x866.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BJUDMhzj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.50.30-1536x866.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The design of Majestic free admin dashboard is remarkably simple, but super customizable and responsive due to the technologies of CSS framework Bootstrap 4 and scripting in Sass. This dashboard is a good choice for newbies in web development thanks to its well-managed code inside the box and firmly established documentation. We personally like its consistent design for all kinds of up-to-date web apps. Plus, it works super fast on all popular devices.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.urbanui.com/majestic/template/documentation/documentation.html"&gt;More info&lt;/a&gt;&lt;br&gt;
&lt;a href="http://www.urbanui.com/majestic/template/index.html"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/BootstrapDash/MajesticAdmin-Free-Bootstrap-Admin-Template"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#architectui"&gt;
  &lt;/a&gt;
  ArchitectUI
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G4ZI5_wf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.53.43-1536x891.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G4ZI5_wf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.53.43-1536x891.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ArchitectUI is a HTML free dashboard template with a scalable design system that makes website management a fairly simple process. It‚Äôs built on top of Bootstrap 4.2.1 and updates with newly developed data on a regular basis. So, if you need a free and straightforward platform Bootstrap admin dashboard template, ArchitectUI dashboard could become your best solution.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://architectui.com/#/"&gt;More details&lt;/a&gt;&lt;br&gt;
&lt;a href="https://demo.dashboardpack.com/architectui-html-free/index.html"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/DashboardPack/architectui-html-theme-free"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cool-admin"&gt;
  &lt;/a&gt;
  Cool admin
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---yIv6Rer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.56.04-1536x894.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---yIv6Rer--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-11.56.04-1536x894.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cool admin is a visually appealing personal website with a responsive layout and sleek widgets design. The dashboard includes the basic kit of snippets and utilities, custom pages, map data boards variations, and a collection of apps and clear chart widgets, that makes Cool admin a good statistical tool. The theme is free of charge with all the features required for Bootstrap.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://colorlib.com/polygon/cooladmin/index.html"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/puikinsh/CoolAdmin"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bluebox-free-bootstrap-admin-template"&gt;
  &lt;/a&gt;
  Bluebox Free Bootstrap Admin Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f4CFjrbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-12.01.25-1536x822.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f4CFjrbn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-12.01.25-1536x822.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bluebox is a free admin template with a flat design for those who love classics. The theme can‚Äôt boast a variety of color patterns but has a pretty strict, clear and focused structure of inner elements. It is an extremely lightweight, simple yet powerful Bootstrap admin dashboard. Bluebox is the well-liked Bootstrap framework that powers Bluebox UI HTML, which gives the site canvas full flexibility.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://preview.graygrids.com/item/adminator-html5-bootstrap-dashboard-template/"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="http://preview.graygrids.com/item/adminator-html5-bootstrap-dashboard-template/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adminator"&gt;
  &lt;/a&gt;
  Adminator
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ab4NIRT3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-12.03.32-1536x837.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ab4NIRT3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-12.03.32-1536x837.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adminator is an open-source admin panel designed with a truly beautiful layout by Colorlib. Free admin dashboard specification took as a basis HTML, HTML5, and CSS Templates. It is super simple and intuitive in use. Adminator helps to analyze the data percentage of total visits, page views, unique visitors, and even the bounce rate of the site. Adminator has a list of standard components like the main dashboard, email, calendar, chat, charts, forms, UI elements, tables, maps, pages, multiple levels, and a perfect scrollbar. They all can be adjusted by web developers to your business needs and you are all set!  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://graygrids.com/templates/adminator-html5-bootstrap-dashboard-template/"&gt;More details&lt;/a&gt;&lt;br&gt;
&lt;a href="http://preview.graygrids.com/item/adminator-html5-bootstrap-dashboard-template/"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/puikinsh/Adminator-admin-dashboard"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chameleon-admin-bootstrap-template"&gt;
  &lt;/a&gt;
  Chameleon Admin Bootstrap Template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OvsHG9BK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-12.05.56-1536x892.png%3Flossy%3D1%26strip%3D1%26webp%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OvsHG9BK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://833250.smushcdn.com/1694534/wp-content/uploads/2021/02/Screen-Shot-2021-02-17-at-12.05.56-1536x892.png%3Flossy%3D1%26strip%3D1%26webp%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chameleon Admin Lite is an open-source dashboard with organized code powered on HTML 5, CSS 3, Bootstrap 4, SASS, Gulp. In the Chameleon package, you get an admin template that comes with a starter kit of well-organized layers, nicely drawn stats widgets, free fonts and icons which will help developers to get started quickly. Chameleon admin panel has the next advantages being SEO ready from start, and secured &amp;amp; optimized code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/products/chameleon-admin-free-bootstrap-dashboard-template/"&gt;More details&lt;/a&gt;&lt;br&gt;
&lt;a href="https://themeselection.com/demo/chameleon-free-bootstrap-admin-template/html/ltr/"&gt;Demo&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/themeselection/chameleon-free-bootstrap-admin-template"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#some-proven-tips-to-build-an-awesome-admin-page"&gt;
  &lt;/a&gt;
  Some Proven Tips to Build an Awesome Admin Page
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Choose UI elements specifically tailored for a particular web app;&lt;/li&gt;
&lt;li&gt;Use minimalist design. Despite a variety of elements in an admin panel, it should be easy to use;&lt;/li&gt;
&lt;li&gt;Make logical structure and use icons to improve navigation;&lt;/li&gt;
&lt;li&gt;Assign clear roles to every user;&lt;/li&gt;
&lt;li&gt;Add tasks, calendar, and email clients to make teamwork much easier;&lt;/li&gt;
&lt;li&gt;Translate your web page targeting audiences all over the world;&lt;/li&gt;
&lt;li&gt;Make sure your site loads fast both on mobile and desktop versions;&lt;/li&gt;
&lt;li&gt;Make your admin page compatible with all browsers and devices, without exception.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap Up
&lt;/h1&gt;

&lt;p&gt;Making a functional and convenient admin template will improve your business processes, enhancing the relationship between the app and the customer. Build your web app or website faster with pre-built Bootstrap admin templates and a bunch of exciting widgets within to analyze the data visually. Design better UX and have higher conversions. Keep your web development simple and focused with the list of these Bootstrap templates totally free and adaptable supported on all desktop computers and modern mobile phones.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#about-flatlogic"&gt;
  &lt;/a&gt;
  About Flatlogic
&lt;/h1&gt;

&lt;p&gt;At Flatlogic, we help businesses to speed up web development with our beautifully designed web &amp;amp; mobile application templates built with &lt;a href="https://flatlogic.com/templates/react"&gt;React&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/vue"&gt;Vue&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/angular"&gt;Angular&lt;/a&gt;, &lt;a href="https://flatlogic.com/templates/react-native"&gt;React Native&lt;/a&gt;, and &lt;a href="https://flatlogic.com/templates/bootstrap"&gt;Bootstrap&lt;/a&gt;. During the last several years we have successfully delivered more than 100 custom dashboards and data management solutions to various clients starting from innovative startups to established and respected enterprises.&lt;/p&gt;

&lt;p&gt;Web development is our passion. We love beautiful things that work well. We love processes that run smoothly. We deeply care for user experience while using Flatlogic admin templates, because it‚Äôs about helping, helping people to build their workflow consistently and efficiently. We strive to make your workflow efficient, coz the speed of life doesn‚Äôt always let you have everything going right on track. But we keep going and stay stylish, organized, and inspired.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You might also like these articles:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://dev.to/flatlogic/etl-extract-transform-load-best-practices-etl-process-and-lifehacks-5g89"&gt;ETL (Extract, Transform, Load). Best Practices ETL Process And Lifehacks&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/anaflatlogic/top-19-bootstrap-developer-friendly-templates-for-2020-2e57"&gt;Top 19 Bootstrap Developer Friendly Templates for 2020&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/anaflatlogic/20-best-icon-packs-for-web-developers-and-designers-bhl"&gt;20+ Best Icon Packs for Web Developers and Designers&lt;/a&gt;&lt;/p&gt;

</description>
      <category>bootstrap</category>
      <category>webdev</category>
      <category>frontend</category>
      <category>javascript</category>
    </item>
    <item>
      <title>üî¥ TechTalk - How can Developers and Designers collaborate better | TheDestroDevShow</title>
      <author>Shahjada Talukdar</author>
      <pubDate>Tue, 20 Apr 2021 10:16:28 +0000</pubDate>
      <link>https://dev.to/destrodevshow/techtalk-how-can-developers-and-designers-collaborate-better-thedestrodevshow-fgp</link>
      <guid>https://dev.to/destrodevshow/techtalk-how-can-developers-and-designers-collaborate-better-thedestrodevshow-fgp</guid>
      <description>&lt;p&gt;Hi everyone! üëã&lt;/p&gt;

&lt;p&gt;I have started a LIVE TechTalk show on my channel.&lt;/p&gt;

&lt;p&gt;And on the 5th Show, Alex Kukharenko joined as a Guest.&lt;/p&gt;

&lt;p&gt;Design and development shouldn‚Äôt compete ‚Äî they should support one another as they both follow the same goal - building beautiful, useful and fast products. &lt;br&gt;
Alex is going to share 9 points for making a better collaboration.&lt;/p&gt;

&lt;p&gt;Alex is a UX/UI Designer currently living in Berlin, Germany. He has long years of experience working on UX/UI.&lt;/p&gt;

&lt;h3&gt;&lt;u&gt;Topic: How can Developers and Designers collaborate better.&lt;/u&gt;&lt;/h3&gt;

&lt;p&gt;You can Watch on YouTube &lt;a href="https://www.youtube.com/watch?v=LnFwGVRoRlQ"&gt;https://www.youtube.com/watch?v=LnFwGVRoRlQ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LnFwGVRoRlQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Enjoy üå∏&lt;/p&gt;

&lt;p&gt;Also SUBSCRIBE to YouTube Channel - &lt;a href="https://www.youtube.com/c/TheDestroDevShow?sub_confirmation=1"&gt;https://www.youtube.com/c/TheDestroDevShow?sub_confirmation=1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;LIKE FB Page - &lt;a href="https://www.facebook.com/the.destro.dev.show/"&gt;https://www.facebook.com/the.destro.dev.show/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow on Twitter - &lt;a href="https://twitter.com/destro_mas"&gt;https://twitter.com/destro_mas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow on DEV - &lt;a href="https://dev.to/destro_mas"&gt;https://dev.to/destro_mas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Made with ‚ù§Ô∏è in Berlin!&lt;/p&gt;

&lt;p&gt;Cheers!&lt;br&gt;
üëã&lt;/p&gt;



&lt;br&gt;
As I am trying to contribute contents on the Web, you can buy me a coffee for my hours spent on all of these ‚ù§Ô∏èüòäüå∏

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/destrodevshow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>ux</category>
      <category>css</category>
    </item>
    <item>
      <title>What does a Data Orchestration platform do?</title>
      <author>Sander Vanhove</author>
      <pubDate>Tue, 20 Apr 2021 10:11:53 +0000</pubDate>
      <link>https://dev.to/sandervanhove/what-does-a-data-orchestration-platform-do-1i40</link>
      <guid>https://dev.to/sandervanhove/what-does-a-data-orchestration-platform-do-1i40</guid>
      <description>&lt;p&gt;&lt;em&gt;Data Orchestration&lt;/em&gt; is becoming one of those buzzwords sales people like to throw around in pitch meetings. &lt;/p&gt;

&lt;p&gt;It is very important to understand that data orchestration is not just one &lt;em&gt;"thing"&lt;/em&gt;, but describes a whole process of how to handle data within a system.&lt;/p&gt;

&lt;p&gt;I identified 4 steps each data orchestration platform should support:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-data-ingestion"&gt;
  &lt;/a&gt;
  1. Data Ingestion
&lt;/h3&gt;

&lt;p&gt;Data has to get into the system one way or another. We all know how it goes: part of the data we need is on an SQL database somewhere, other data comes in via MQTT and the last part is only available in .txt logs. &lt;strong&gt;Data ingestion can be a mess.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The first thing a Data Orchestration platform should be able to do is integrate with all these different sources so it is able to combine the data we need.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-data-processing"&gt;
  &lt;/a&gt;
  2. Data Processing
&lt;/h3&gt;

&lt;p&gt;Data is rarely in the right format when entering a system. Therefore we need a way for data to be &lt;strong&gt;combined, unpacked or decoded&lt;/strong&gt;. This step could also entail aggregation if we don't want to use all the data but just a higher order abstraction.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-making-decisions"&gt;
  &lt;/a&gt;
  3. Making Decisions
&lt;/h3&gt;

&lt;p&gt;Now that the data is ready, it is time to make some decisions based on what we ingested. For this, the platform needs some way to &lt;strong&gt;create rules and automated workflows&lt;/strong&gt;. The cool platforms even have the ability to utilize AI or ML models and let those call the shots.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kfmLRBrq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgeyhe9z163ya11mxehj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kfmLRBrq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pgeyhe9z163ya11mxehj.png" alt="A rule on top of data that is coming in."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-taking-actions"&gt;
  &lt;/a&gt;
  4. Taking Actions
&lt;/h3&gt;

&lt;p&gt;Lastly it is time to take action! Based on the data and earlier decisions, the platform should be able to &lt;strong&gt;take actions in and outside of its own ecosystem&lt;/strong&gt;. This could go from throwing alarms to turning some physical device on/off or sending quarterly figures to a certain list of employees.&lt;/p&gt;

&lt;p&gt;The best of the best data orchestration platforms are flexible in each of these steps, making it a generally applicable solution. They let the developer integrate the system easily with other platforms and provides a way to quickly define new logic. But that is a topic for a whole other article.&lt;/p&gt;

&lt;p&gt;Want an example of a data orchestration platform that does these things right? Check out &lt;a href="https://www.waylay.io/products/waylay-io/product"&gt;Waylay IO&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>lowcode</category>
      <category>iot</category>
      <category>pipelines</category>
      <category>dataprocessing</category>
    </item>
    <item>
      <title>Codel - A Theme for Coded Life</title>
      <author>GNVageesh</author>
      <pubDate>Tue, 20 Apr 2021 10:08:16 +0000</pubDate>
      <link>https://dev.to/gnvageesh/codel-a-theme-for-coded-life-48bc</link>
      <guid>https://dev.to/gnvageesh/codel-a-theme-for-coded-life-48bc</guid>
      <description>&lt;p&gt;I am 15 years years old and I'm glad to present the dev community a theme that I have made. This is my first VSCode theme. Since the day I started programming, I have used VSCode and used many themes, but never sat to a particular theme. So now finally I have made a theme with inspiration from all the themes I used. Here is the Preview of the theme.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J8A_or5H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyrdl2ca3tpq4kzbewdz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J8A_or5H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pyrdl2ca3tpq4kzbewdz.png" alt="CODEL"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The theme can be found in the &lt;a href="https://marketplace.visualstudio.com/items?itemName=GNVageesh.codel"&gt;vscode marketplace&lt;/a&gt; and at &lt;a href="https://github.com/GNVageesh/codel"&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Would love to know your inputs so that I can improve.&lt;/p&gt;

&lt;p&gt;Thank you.....&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>showdev</category>
      <category>programming</category>
      <category>design</category>
    </item>
    <item>
      <title>Centring the item with two lines of code</title>
      <author>Joanna Otmianowska</author>
      <pubDate>Tue, 20 Apr 2021 09:33:03 +0000</pubDate>
      <link>https://dev.to/joannaotmianowska/centring-the-item-in-two-lines-of-code-4oee</link>
      <guid>https://dev.to/joannaotmianowska/centring-the-item-in-two-lines-of-code-4oee</guid>
      <description>&lt;p&gt;Do you remember centring the item on the screen horizontally and vertically &lt;em&gt;the old way&lt;/em&gt;? Before flexbox and CSS grid that was really hard to do it. I usually either relied on the numbers (so defining margin or padding for the item - which is not good idea cause it looks different on different screens) or used floating. There was also a way with creating tables and putting your content there. I won't give any examples in code here not to misguide anyone looking for the solution to that. These &lt;em&gt;old ways&lt;/em&gt; are really outdated.&lt;/p&gt;

&lt;p&gt;When flexbox came around couple years ago it was like a miracle. Finally being able to center the item with three lines of CSS code felt like a dream to me. It was simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  display: flex;
  justify-content: center;
  align-items: center;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I used this way very often. Till recently when I discovered simplest way thanks to &lt;a href="'https://gomakethings.com/articles/'"&gt;Chris' Ferdinandi Daily Developer Tips&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Brace yourself, here it comes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  display: grid;
  place-content: center;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it. Isn't it awesome? I found it &lt;a href="https://smolcss.dev/"&gt;on this site&lt;/a&gt; that Chris shared. That's a really cool project done by Stephanie Eckles. She shares short and simple CSS code snippets. I highly recommend to check it out.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>frontend</category>
      <category>grid</category>
    </item>
    <item>
      <title>‚úî||ü§¢ Commit or Vomit | checks.some()</title>
      <author> üê§ü•á Jasper de Jager</author>
      <pubDate>Tue, 20 Apr 2021 09:13:41 +0000</pubDate>
      <link>https://dev.to/jmdejager/commit-or-vomit-checks-some-46mh</link>
      <guid>https://dev.to/jmdejager/commit-or-vomit-checks-some-46mh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#its-tuesday"&gt;
  &lt;/a&gt;
  It's tuesday!
&lt;/h2&gt;

&lt;p&gt;Time for a new ‚úî||ü§¢ Commit or Vomit! This time it is about using [].some(check =&amp;gt; !check). What do you think of the following code?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;checks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;    
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isNewUser&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;checks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;checks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deleted&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isInvalid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;checks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;some&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;check&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;check&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#sometrue-%E2%9C%94"&gt;
  &lt;/a&gt;
  [].some(true) ‚úî||ü§¢?
&lt;/h4&gt;

&lt;p&gt;‚ù§: Commit (something I could commit)&lt;br&gt;
üè∑: Vomit (I'd never commit this)&lt;br&gt;
ü¶Ñ: I like your post please continue this series!&lt;/p&gt;

&lt;p&gt;Let's vote! üòä&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@tjump?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Nik Shuliahin&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/sick?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Learn basic Web Components</title>
      <author>Lenvin Gonsalves</author>
      <pubDate>Tue, 20 Apr 2021 09:05:17 +0000</pubDate>
      <link>https://dev.to/98lenvi/learn-basic-web-components-66e</link>
      <guid>https://dev.to/98lenvi/learn-basic-web-components-66e</guid>
      <description>&lt;p&gt;Even though web components have been losing steam in recent days, they have a lot of advantages. One of them is writing framework-agnostic components, which is a boon provided how frequently frameworks lose their popularity in js land. &lt;/p&gt;

&lt;p&gt;Many organizations have projects with front-ends using different frameworks, and by writing basic components like buttons, modals as web components, we can greatly increase code re-usability. Web components are not here to replace frameworks like React, Vue, and Angular, but are to be used along with frameworks&lt;/p&gt;

&lt;p&gt;Using web components also allows encapsulating the styling to the component (Using the shadow DOM), which helps a lot in larger projects where we need to be careful about styles overriding (by duplicate class names). This functionality is provided by libraries like styled-components, but it's nice to see this natively supported.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will be creating two components, a user card and a modal. Using the Rick &amp;amp; Morty API, the web page will load the data and then insert the web component into the DOM. The same will be repeated as the user scrolls down. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-user-cards"&gt;
  &lt;/a&gt;
  Creating the User Cards
&lt;/h2&gt;

&lt;p&gt;The Card will display two details about the character, its image &amp;amp; name, along with a button using which we will open the modal.&lt;/p&gt;

&lt;p&gt;To create the web component, we will need to first create a template in markup.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;/** Styles to be added **/&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Mark up describing the component will go here --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the template is defined, we will now need to create a class that extends from either &lt;code&gt;HTMLElement&lt;/code&gt; or &lt;code&gt;HTMLUListElement&lt;/code&gt;, &lt;code&gt;HTMLParagraphElement&lt;/code&gt;, etc. If we use the former, the component will be an &lt;strong&gt;autonomous custom element&lt;/strong&gt;, inheriting the minimum properties required. If we use the latter classes, the component will be a &lt;strong&gt;customized in-built element&lt;/strong&gt;, inheriting additional properties. &lt;/p&gt;

&lt;p&gt;A web component that inherits from &lt;code&gt;HTMLUListElement&lt;/code&gt; would have left &amp;amp; top margin like most lists have.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Autonomous custom element --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;user-card&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/user-card&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- customized in-built element --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;is=&lt;/span&gt;&lt;span class="s"&gt;'user-card'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It is important to note that the way of using the custom elements will depend on what class is the custom element inheriting from (refer to the code-block above). In this article, we would define the element to inherit from &lt;code&gt;HTMLElement&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;UserCard&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above is the minimal amount of code required to declare a custom-element class, in order to make it available to the DOM, we need to define it in the CustomElementRegistry as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user-card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UserCard&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it, we can now start using &lt;code&gt;&amp;lt;user-card&amp;gt;&lt;/code&gt;, but currently there is nothing defined in the class, we will start by first defining the template (which we discussed earlier). Then define the constructor to do the follows - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When the custom element is added to the DOM, create a shadow DOM, which would be a child of the custom component.&lt;/li&gt;
&lt;li&gt;Attach the node created from the template into the shadow DOM.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GmWinoVV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlyczgfsf12id2wln6jx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GmWinoVV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlyczgfsf12id2wln6jx.jpg" alt="Shadow DOM"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/** Defining the template **/&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;template&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
  &amp;lt;link rel="stylesheet" href="userCard/styles.css"&amp;gt;
  &amp;lt;div class="user-card"&amp;gt;
    &amp;lt;img /&amp;gt;
    &amp;lt;div class="container"&amp;gt;
      &amp;lt;h3&amp;gt;&amp;lt;/h3&amp;gt;
      &amp;lt;div class="info"&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;button id="open-modal"&amp;gt;Show Info&amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The markup defined above will help us create a card that looks like this - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EgSTlP2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2qdimh8hyvanhnqal90.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EgSTlP2S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2qdimh8hyvanhnqal90.jpg" alt="Single Card"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/** Defining the constructor **/&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachShadow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the constructor, we are using &lt;code&gt;attachShadow&lt;/code&gt; to attach a shadow DOM to the current node, then to the shadow DOM, which is accessed using &lt;code&gt;shadowRoot&lt;/code&gt; we will append a child, which is a clone of the template we defined earlier.&lt;/p&gt;

&lt;p&gt;So far, the web component should be looking as follows&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;template&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
  &amp;lt;link rel="stylesheet" href="userCard/styles.css"&amp;gt;
  &amp;lt;div class="user-card"&amp;gt;
    &amp;lt;img /&amp;gt;
    &amp;lt;div class="container"&amp;gt;
      &amp;lt;h3&amp;gt;&amp;lt;/h3&amp;gt;
      &amp;lt;div class="info"&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;button id="open-modal"&amp;gt;Show Info&amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;UserCard&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachShadow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user-card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;UserCard&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step would be to define the life cycle, which should sound familiar if you have some React knowledge. For brevity, we will be focusing only on two methods&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;connectedCallback()&lt;/li&gt;
&lt;li&gt;attributeChangedCallback()&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#connectedcallback"&gt;
  &lt;/a&gt;
  ConnectedCallback()
&lt;/h3&gt;

&lt;p&gt;This method is called when the custom element gets mounted on the DOM, this is when we should be defining event listeners, networks calls to fetch data, intervals &amp;amp; timeouts. &lt;/p&gt;

&lt;p&gt;To clean up the intervals, timeouts when the custom element is unmounted, we would have to use the &lt;code&gt;disconnectedCallback()&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#attributechangedcallback"&gt;
  &lt;/a&gt;
  attributeChangedCallback()
&lt;/h3&gt;

&lt;p&gt;This method is called when any attribute to the custom element changes (or an attribute is assigned). The method is only called when the attributes defined in the getter &lt;code&gt;observedAttributes()&lt;/code&gt; change their value. &lt;/p&gt;

&lt;p&gt;For the user-card component, these methods will be implemented as follows -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;observedAttributes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="cm"&gt;/** Even though we have other attributes, only defining key here
 as to reduce the number of times attributeChangedCallback is called **/&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;connectedCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="cm"&gt;/** Attaching an event-listener to the button so that the 
openModal() methods gets invoked in click, openModal will be 
defined later **/&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#open-modal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;openModal&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;attributeChangedCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;oldValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="cm"&gt;/** Updating the DOM whenever the key attribute is updated,
 helps in avoiding unwanted DOM updates **/&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;avatar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-the-modals"&gt;
  &lt;/a&gt;
  Creating the Modals
&lt;/h2&gt;

&lt;p&gt;Creating the modal component is similar to creating the user-card component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_RSW0w-w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sv1l6k1jcbd0glz56fao.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_RSW0w-w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sv1l6k1jcbd0glz56fao.jpg" alt="Modal"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code for the modal -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;modalTemplate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;template&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;modalTemplate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
  &amp;lt;link rel="stylesheet" href="modal/styles.css"&amp;gt;
  &amp;lt;div class="modal"&amp;gt;
  &amp;lt;div class='modal-content'&amp;gt;
  &amp;lt;button id='close' class='close'&amp;gt;Close&amp;lt;/button&amp;gt;
  &amp;lt;img&amp;gt;&amp;lt;/img&amp;gt;
  &amp;lt;h3&amp;gt;&amp;lt;/h3&amp;gt;
  &amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Modal&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;observedAttributes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;showInfo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attachShadow&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;open&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;modalTemplate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cloneNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;connectedCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#close&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;()});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;attributeChangedCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;oldValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;===&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;avatar&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shadowRoot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;p&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`
      Gender: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gender&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;
      &amp;lt;br/&amp;gt;
      Status: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;status&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;
      &amp;lt;br/&amp;gt;
      Species: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;species&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;
      `&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customElements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;define&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user-modal&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Modal&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To invoke the modal, we will need to define &lt;code&gt;openModel&lt;/code&gt; in the user-card component. &lt;code&gt;openModal&lt;/code&gt; will create the &lt;code&gt;user-modal&lt;/code&gt; node and assign all the attributes the &lt;code&gt;user-card&lt;/code&gt; had received to the modal, then attach it to the DOM.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;openModal&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;userModal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user-modal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;userModal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;userModal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;avatar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;avatar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;userModal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;status&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;status&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;userModal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;species&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;species&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;userModal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gender&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gender&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nx"&gt;userModal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByTagName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;body&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertAdjacentElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;afterend&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;userModal&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#joining-all-the-parts-together"&gt;
  &lt;/a&gt;
  Joining all the parts together
&lt;/h2&gt;

&lt;p&gt;The components have been placed in the following folder structure&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VfiLwp8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qn95s6hgtzqk5gukz0ka.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VfiLwp8o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qn95s6hgtzqk5gukz0ka.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;code&gt;index.html&lt;/code&gt; both the components are imported and a script to fetch the characters data from the Rick and Morty API is defined. &lt;/p&gt;

&lt;p&gt;Once the data is fetched, for every character, a &lt;code&gt;user-card&lt;/code&gt; node is created, attributes are assigned, and then inserted into the DOM as follows -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://rickandmortyapi.com/api/character?page=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nodeToBeInserted&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;user-card&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;nodeToBeInserted&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;nodeToBeInserted&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;avatar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;nodeToBeInserted&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;status&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;nodeToBeInserted&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;species&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;species&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;nodeToBeInserted&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gender&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gender&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;nodeToBeInserted&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nb"&gt;document&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;details&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
              &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;insertAdjacentElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;beforeend&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;nodeToBeInserted&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
      &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;An event listener to fetch more data when the user reaches the end of the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scroll&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;scrollTop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nx"&gt;scrollHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="nx"&gt;clientHeight&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scrollTop&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;clientHeight&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;scrollHeight&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;loadData&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;},{&lt;/span&gt; &lt;span class="na"&gt;passive&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is it! The end result is in the code sandbox below&lt;br&gt;
&lt;iframe src="https://codesandbox.io/embed/funny-austin-qp9ue"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conculsion"&gt;
  &lt;/a&gt;
  Conculsion
&lt;/h2&gt;

&lt;p&gt;I hope this article gave you a good glimpse of web components. &lt;/p&gt;

&lt;p&gt;If you are interested in knowing more, please check out &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components"&gt;Web Components at MDN&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
