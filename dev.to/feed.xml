<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>An Open Source DevOps Dashboard</title>
      <author>Maxim Wheatley</author>
      <pubDate>Wed, 24 Nov 2021 23:01:05 +0000</pubDate>
      <link>https://dev.to/maximwheatley/an-open-source-devops-dashboard-4o81</link>
      <guid>https://dev.to/maximwheatley/an-open-source-devops-dashboard-4o81</guid>
      <description>&lt;p&gt;Hey Dev friends! Forgive the shameless promotion, I'm so proud of my teammates and want to share, and hope you'll help! &lt;/p&gt;

&lt;p&gt;DevLake, is a free and open source tool, it brings together all the data from many of your dev tools (GitHub, Jenkins, GitLab, Jira, etc.) and provides analysis and visualization with a personalized dashboard filled with the metrics that matter to YOU. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/merico-dev/lake"&gt;https://github.com/merico-dev/lake&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We saw how much time and energy it takes to make practical sense of DevOps data. "NO MORE!" we said, and so we built DevLake to make it easy for developers everywhere to make their data work for them. &lt;/p&gt;

&lt;p&gt;Our motto is: More Dev. Less Ops. &lt;/p&gt;

&lt;p&gt;We hope DevLake helps you achieve exactly that, and we hope you'll join us by contributing, sharing, or simply by making use of this. Thanks gang!&lt;/p&gt;

&lt;p&gt;(We built DevLake making the most of Go, Grafana, and Docker, among other things! We'd love to chat about our experience building this if anybody has questions or ideas!) &lt;/p&gt;

&lt;p&gt;GitHub link HERE: &lt;a href="https://github.com/merico-dev/lake"&gt;https://github.com/merico-dev/lake&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devops</category>
      <category>opensource</category>
      <category>analytics</category>
      <category>go</category>
    </item>
    <item>
      <title>SeedAcquire buy or sell a startup</title>
      <author>Bryan</author>
      <pubDate>Wed, 24 Nov 2021 22:24:32 +0000</pubDate>
      <link>https://dev.to/bryanellis95/seedacquire-buy-or-sell-a-startup-4iff</link>
      <guid>https://dev.to/bryanellis95/seedacquire-buy-or-sell-a-startup-4iff</guid>
      <description>&lt;p&gt;Hi All!&lt;/p&gt;

&lt;p&gt;Today we launched SeedAcquire a place where you can buy and sell startups! &lt;/p&gt;

&lt;p&gt;Check it out at seedacquire.com or app.seedacquire.com&lt;/p&gt;

&lt;p&gt;Questions? hit us up at &lt;a href="mailto:bryan@seedacquire.com"&gt;bryan@seedacquire.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>startup</category>
      <category>watercooler</category>
      <category>beginners</category>
    </item>
    <item>
      <title>NPM vs. YARN: Basic Commands</title>
      <author>vandna kapoor</author>
      <pubDate>Wed, 24 Nov 2021 21:16:05 +0000</pubDate>
      <link>https://dev.to/vandnakapoor19/npm-vs-yarn-basic-commands-3bl6</link>
      <guid>https://dev.to/vandnakapoor19/npm-vs-yarn-basic-commands-3bl6</guid>
      <description>&lt;p&gt;Here is a quick reference guide for basic commands that we can use when dealing with Node and requiring the use of NPM or YARN.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#install-dependencies-from-packagejson"&gt;
  &lt;/a&gt;
  Install dependencies from package.json:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm install == yarn&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#install-a-package-and-add-to-packagejson"&gt;
  &lt;/a&gt;
  Install a package and add to package.json:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm install package --save == yarn add package&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#install-a-devdependency-to-packagejson"&gt;
  &lt;/a&gt;
  Install a devDependency to package.json:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm install package --save-dev == yarn add package --dev&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#remove-a-dependency-from-packagejson"&gt;
  &lt;/a&gt;
  Remove a dependency from package.json:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm uninstall package --save == yarn remove package&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#upgrade-a-package-to-its-latest-version"&gt;
  &lt;/a&gt;
  Upgrade a package to its latest version:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm update --save == yarn upgrade&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5&gt;
  &lt;a href="#install-a-package-globally"&gt;
  &lt;/a&gt;
  Install a package globally:
&lt;/h5&gt;



&lt;p&gt;&lt;code&gt;npm install package -g == yarn global add package&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>beginners</category>
      <category>react</category>
      <category>node</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Top 6 JavaScript Chart Libraries</title>
      <author>Zahab Kakar</author>
      <pubDate>Wed, 24 Nov 2021 21:13:20 +0000</pubDate>
      <link>https://dev.to/zahab/top-6-javascript-chart-libraries-22k2</link>
      <guid>https://dev.to/zahab/top-6-javascript-chart-libraries-22k2</guid>
      <description>&lt;p&gt;JavaScript is a programming language used to develop dynamic and interactive websites.&lt;br&gt;
There are over 1.8 Billion websites in the world, and JavaScript is used on 95% of them. I have compiled the best and useful Chart Libraries that you need as a Javascript developer. The JavaScript Chart Libraries helps you easily visualize data using JavaScript&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chartjs"&gt;
  &lt;/a&gt;
  ChartJS
&lt;/h2&gt;

&lt;p&gt;Simple, clean and engaging HTML5 based JavaScript charts. Chart.js is an easy way to include animated, interactive graphs on your website for free. It is a community maintained an open-source library that helps you easily visualize data using JavaScript. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vTTpAT8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786759833/XQXeLvuYs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTTpAT8n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786759833/XQXeLvuYs.png" alt="s.png" width="880" height="409"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#data-driven-documents-d3"&gt;
  &lt;/a&gt;
  Data Driven Documents (D3)
&lt;/h2&gt;

&lt;p&gt;D3.js is a JavaScript library for producing dynamic, interactive data visualizations in web browsers. It makes use of Scalable Vector Graphics, HTML5, and Cascading Style Sheets standards. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aEI1wRiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786837377/oreo8n-Nk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aEI1wRiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786837377/oreo8n-Nk.png" alt="hero-53ca6ca6f61a2f70ee5054f1a5c0ffb5.png" width="880" height="501"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#google-charts"&gt;
  &lt;/a&gt;
  Google Charts
&lt;/h2&gt;

&lt;p&gt;Google Charts is an interactive Web service that creates graphical charts from user-supplied information. The user supplies data and a formatting specification expressed in JavaScript embedded in a Web page; in response, the service sends an image of the chart.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gdV92NSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786908812/FGiGUpBPC.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gdV92NSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786908812/FGiGUpBPC.jpeg" alt="687474703a2f2f7369722d64756e78616c6f742e6769746875622e696f2f656d6265722d676f6f676c652d6368617274732f656d6265722d676f6f676c652d6368617274732d32366432333337346136653365336437626330626635316534353430633065632e6a7067.jpeg" width="880" height="338"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apexchartsjs"&gt;
  &lt;/a&gt;
  ApexCharts.Js
&lt;/h2&gt;

&lt;p&gt;ApexCharts is a free and open-source modern charting library that helps developers to create beautiful and interactive visualizations for web pages. This library allows you to build interactive data visualizations with simple API and 100+ ready-to-use samples.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dGLE2Ua4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786935124/x0ekQ0QV6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dGLE2Ua4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637786935124/x0ekQ0QV6.png" alt="68747470733a2f2f617065786368617274732e636f6d2f6d656469612f617065786368617274732d62616e6e65722e706e67.png" width="750" height="499"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chartist"&gt;
  &lt;/a&gt;
  Chartist
&lt;/h2&gt;

&lt;p&gt;Chartist JS is a simple, flexible way to visualize so many types of data, it is developed to create simple responsive charts. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--15s-YTCX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637787002341/cuco1DyZR.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--15s-YTCX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637787002341/cuco1DyZR.jpeg" alt="chartist.jpg" width="880" height="483"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#g2plot"&gt;
  &lt;/a&gt;
  G2Plot
&lt;/h2&gt;

&lt;p&gt;G2Plot is an interactive and responsive charting library based on the grammar of graphics. The responsive ability of g2plot guarantee your chart's readability in any display space and data status.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iKoRDo8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637787035967/gs7GX_oJc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iKoRDo8w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1637787035967/gs7GX_oJc.gif" alt="A_wkoYQ5JuFckAAAAAAAAAAABkARQnAQ.gif" width="880" height="235"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading, I hope you found this useful.&lt;/p&gt;

&lt;p&gt;Feel free to connect with me on &lt;a href="https://twitter.com/zahab_k"&gt;Twitter&lt;/a&gt;  &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Parameter usage for default args in JS</title>
      <author>icncsx</author>
      <pubDate>Wed, 24 Nov 2021 20:59:57 +0000</pubDate>
      <link>https://dev.to/icncsx/parameter-usage-for-default-args-in-js-4b0g</link>
      <guid>https://dev.to/icncsx/parameter-usage-for-default-args-in-js-4b0g</guid>
      <description>&lt;p&gt;A default argument can reference a prior argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaultFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`num1: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; num2: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;num2&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;defaultFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;   &lt;span class="c1"&gt;// num1: 3 num2: 3&lt;/span&gt;
&lt;span class="nx"&gt;defaultFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// num1: 3 num2: 6&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>shorts</category>
    </item>
    <item>
      <title>Boolean coercion</title>
      <author>icncsx</author>
      <pubDate>Wed, 24 Nov 2021 20:53:57 +0000</pubDate>
      <link>https://dev.to/icncsx/boolean-coercion-2ckc</link>
      <guid>https://dev.to/icncsx/boolean-coercion-2ckc</guid>
      <description>&lt;p&gt;Use !! to see how JavaScript would coerce a real value into a boolean-ish interpretation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;//  false&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//  false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>shorts</category>
    </item>
    <item>
      <title>Welcome Thread - v152</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 24 Nov 2021 20:51:24 +0000</pubDate>
      <link>https://dev.to/thepracticaldev/welcome-thread-v152-2gfl</link>
      <guid>https://dev.to/thepracticaldev/welcome-thread-v152-2gfl</guid>
      <description>&lt;p&gt;&lt;a href="https://i.giphy.com/media/3otPoSyc3ty37iTKsU/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3otPoSyc3ty37iTKsU/giphy.gif" alt="Buddy the elf saying hi" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#welcome-to-dev"&gt;
  &lt;/a&gt;
  Welcome to DEV!
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Leave a comment below to introduce yourself! You can talk about what brought you here, what you're learning, or just a fun fact about yourself.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reply to someone's comment, either with a question or just a hello. 👋 &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Great to have you in the community!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>welcome</category>
    </item>
    <item>
      <title>Assignment has a return value in JS</title>
      <author>icncsx</author>
      <pubDate>Wed, 24 Nov 2021 20:47:33 +0000</pubDate>
      <link>https://dev.to/icncsx/assignment-has-a-return-value-in-js-2359</link>
      <guid>https://dev.to/icncsx/assignment-has-a-return-value-in-js-2359</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Because assignment has a return value, we are able to chain assignments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hard to read, but it works...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 3&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>State of my Cloud Journey: Nov 24, 2021</title>
      <author>Alex Eversmeyer</author>
      <pubDate>Wed, 24 Nov 2021 20:24:19 +0000</pubDate>
      <link>https://dev.to/alexeversmeyer/state-of-my-cloud-journey-nov-24-2021-1e7b</link>
      <guid>https://dev.to/alexeversmeyer/state-of-my-cloud-journey-nov-24-2021-1e7b</guid>
      <description>&lt;p&gt;Bit of a late blog this week. I was deep into some coding until late last night, and then got absolutely &lt;em&gt;flattened&lt;/em&gt; by my body's immune response to the COVID booster I received around lunchtime. I went from fine to feeling sicker than I've been in a long time in the span of about five minutes. I'm taking a sick day from work today, and with two more days off for the Thanksgiving holiday, I have plenty of time to lay around and recover. Maybe I'll get some solid learning in, too!&lt;/p&gt;

&lt;p&gt;This past week started with a whimper: some personal frustrations boiled over and I didn't get a whole lot done for a couple days. However, some long days on the tail end of the week helped me regain momentum.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#learning-paths"&gt;
  &lt;/a&gt;
  Learning Paths 📚
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;CS50x&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I've been really enjoying this course. Like, &lt;em&gt;really&lt;/em&gt; enjoying it. It's hard - C is different enough from Python that it gives me fits sometimes - but I'm learning a lot and really wish I'd run across a course like this when I was an undergrad. I suspect I would have been hooked.&lt;/p&gt;

&lt;p&gt;The big battle this week has been working to understand how code in C interacts with memory. The programming concepts are familiar (loops, arrays, etc.) but the way C handles types has taken some getting used to. Thankfully, the lecturer is fantastic and I have a good coding mentor to help me understand how to get past the rough patches. I'm certain this course, even though I'm not taking it for any sort of credit, will help me grow as a programmer.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;DevOps in the Cloud&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I got my first look at Ansible this week. Even though I didn't dig in particularly far, I can see how powerful a tool it is, and I'm really digging it. I am excited to see how it integrates with Terraform and Jenkins.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#job-search"&gt;
  &lt;/a&gt;
  Job Search 🔎
&lt;/h1&gt;

&lt;p&gt;This past week's focus was moving forward in my learning, so I didn't make much progress on the job search front. My goal this week is to take a hard look at my resume and projects (thanks for the advice, Lou!) and try to make them more appealing and more demonstrative of my abilities.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;0 applications; 0 interviews; 1 rejection&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapup"&gt;
  &lt;/a&gt;
  Wrap-up 🍩
&lt;/h1&gt;

&lt;p&gt;Today is probably going to be a wash, but a couple more days off gives me the opportunity to relax a bit and make some forward progress. I &lt;em&gt;really&lt;/em&gt; want to fix whatever is preventing me from getting interviews right now, because there seem to be plenty of open positions into which I can see myself fitting. Time to do work.&lt;/p&gt;

&lt;p&gt;Onward and upward!&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>learning</category>
      <category>careerchanger</category>
      <category>jobsearch</category>
    </item>
    <item>
      <title>Learn JavaScript Generators Quickly</title>
      <author>CodingWith-Adam</author>
      <pubDate>Wed, 24 Nov 2021 20:01:02 +0000</pubDate>
      <link>https://dev.to/codingwithadam/learn-javascript-generators-quickly-2l3a</link>
      <guid>https://dev.to/codingwithadam/learn-javascript-generators-quickly-2l3a</guid>
      <description>&lt;p&gt;In this video we learn about JavaScript Generator functions.&lt;br&gt;
This is a great introduction to generator functions. Generators are functions that can be exited and later re-entered. &lt;/p&gt;

&lt;p&gt;You will learn what the yield key word does. How a generator function suspends execution when yield is called also known as deferred execution. You can do fun things like make an infinite number generator. &lt;/p&gt;

&lt;p&gt;If you enjoy this video please subscribe, like and share.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/hd6QgeJW-Rc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Dependency Inversion Principle</title>
      <author>Matthew Lucas</author>
      <pubDate>Wed, 24 Nov 2021 19:50:33 +0000</pubDate>
      <link>https://dev.to/notmattlucas/dependency-inversion-principle-2gjo</link>
      <guid>https://dev.to/notmattlucas/dependency-inversion-principle-2gjo</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“The most flexible systems are those in which dependencies refer only to abstractions and not concretions”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An application is almost always comprised of some core business logic triggering real-world outcomes through a set of utilities. A report generator exporting to a spreadsheet or railway traffic system controlling stop-lights being two such examples.&lt;/p&gt;

&lt;p&gt;The flow of control of a program is often from core logic to more specialized utilities, such as I/O.&lt;/p&gt;

&lt;p&gt;If the source code dependencies flow in this same direction, however, it can result in tight coupling of business logic with lower-level concerns. As low-level implementations are likely to change often, this will be a source of volatility within an application.&lt;/p&gt;

&lt;p&gt;To protect against volatility, we want any high-level concerns to depend on abstractions rather than concretions — that is, interfaces rather than implementations. Interfaces change much less frequently than their instantiations, and so referencing these will shield a client from uncertainty.&lt;/p&gt;

&lt;p&gt;Of course, something has to know about the dirty detail of implementation, and that’s where dependency injection helps.&lt;/p&gt;

&lt;p&gt;Rather than core logic knowing what to use directly, you inject it with “an implementation” ensuring the source is as ignorant as possible to those low-level concerns. The grubby wiring can be tucked away in a few key places, such as factories or dependency injection frameworks, e.g. Spring.&lt;/p&gt;

&lt;p&gt;To conclude this principle, it’s worth reiterating a few points listed by Uncle Bob concerning the DIP:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don’t refer to volatile concrete classes.&lt;/li&gt;
&lt;li&gt;Don’t derive (inherit) from volatile concrete classes.&lt;/li&gt;
&lt;li&gt;Don’t override concrete functions.&lt;/li&gt;
&lt;li&gt;Never mention the name of anything concrete and volatile.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Originally published at &lt;a href="https://betterprogramming.pub/revisiting-solid-927e6a5202d3"&gt;Better Programming&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Understanding User Authentication from Scratch</title>
      <author>propelauthblog</author>
      <pubDate>Wed, 24 Nov 2021 19:09:16 +0000</pubDate>
      <link>https://dev.to/propelauth/understanding-user-authentication-from-scratch-3pl2</link>
      <guid>https://dev.to/propelauth/understanding-user-authentication-from-scratch-3pl2</guid>
      <description>&lt;p&gt;Authentication is a broad topic that can be both very simple and very complicated. In this series we'll describe what it is and different approaches to implement it, starting from older less-secure methods and ending with modern more-secure methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-authentication"&gt;
  &lt;/a&gt;
  What is Authentication?
&lt;/h2&gt;

&lt;p&gt;Authentication is the process of determining who someone or something is. In the real world, when you give someone your ID or passport, that's a form of authentication. Online, when you enter an email/password, that's a form of authentication.&lt;/p&gt;

&lt;p&gt;While authentication processes can also be for machine-to-machine communication, in this post we'll focus on users identifying themselves to a web server - a.k.a. &lt;strong&gt;user&lt;/strong&gt; authentication.&lt;/p&gt;

&lt;p&gt;To simplify the problem, we need two processes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Some way to create new users&lt;/li&gt;
&lt;li&gt;Some way to identify existing users&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let's look at a few approaches to do these and point out what's good and bad about each approach. Let's assume we are building a web app, and we have both a server to handle requests and a database to store data.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-user-authentication-attempt-1"&gt;
  &lt;/a&gt;
  Implementing User Authentication: Attempt 1
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#creating-new-users"&gt;
  &lt;/a&gt;
  Creating new users
&lt;/h3&gt;

&lt;p&gt;When a new user wants to sign up, we'll ask for their email address and password and save those to the DB. Typically, we also create a user ID so that users can change their email address but their user ID won't change.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JdzV9Q1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jk53vhqwvdthz3sqazk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JdzV9Q1a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4jk53vhqwvdthz3sqazk.png" alt="Signup flow attempt 1" width="880" height="251"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#identifying-existing-users"&gt;
  &lt;/a&gt;
  Identifying existing users
&lt;/h3&gt;

&lt;p&gt;A user wants to make a request to our server. The only pieces of information we have are their email address, user ID, and password. What if we just ask them to send us their email address and password again on each request?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpIiGC3W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u11h3hdd8uvmn4k0u5jw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpIiGC3W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u11h3hdd8uvmn4k0u5jw.png" alt="Basic auth workflow" width="880" height="314"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we get a request, we verify the email address exists in our database and the password is correct.&lt;/p&gt;

&lt;p&gt;This is called &lt;strong&gt;Basic Authentication&lt;/strong&gt; (technically basic authentication requires the email/password to be sent in a specific format in the header, but the idea is still the same - the request contains the email and password).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros-and-cons"&gt;
  &lt;/a&gt;
  Pros and Cons
&lt;/h3&gt;

&lt;p&gt;On the plus side, this system is very simple... one might even call it basic. &lt;/p&gt;

&lt;p&gt;That being said, every time a user wants to do anything, they need to specify their email address and password. It's bad practice to save a user's password somewhere in the browser (like &lt;code&gt;localStorage&lt;/code&gt;), and asking the user to re-enter their password every single time they want to do anything is a terrible user experience.&lt;/p&gt;

&lt;p&gt;This approach isn't completely worthless though. Remember, authentication is a broad topic, and while I wouldn't implement a system where users are constantly passing in their email/password in a browser, if I was building a service where the requests primarily come from a terminal instead, saving someone's email and password to a file or keychain and passing it along on every request is definitely more reasonable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-user-authentication-attempt-2"&gt;
  &lt;/a&gt;
  Implementing User Authentication: Attempt 2
&lt;/h2&gt;

&lt;p&gt;We don't want to ask our users to keep entering their password, so we need something else they can send to us to prove they are who they say they are.&lt;/p&gt;

&lt;p&gt;We do also have a user id... and we can make that user id as random as we like. What if we keep our signup method the same, but return the user id to the client and ask them to return it on each request.&lt;/p&gt;

&lt;p&gt;Assuming user ids are generated with a &lt;a href="https://en.wikipedia.org/wiki/Cryptographically-secure_pseudorandom_number_generator"&gt;cryptographically-secure pseudorandom number generator&lt;/a&gt;, they should be unguessable, and we should be fine here... right?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ln5b-DZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28123cl7cs40ls6flfhb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ln5b-DZZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/28123cl7cs40ls6flfhb.png" alt="Bad auth workflow" width="880" height="299"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cons"&gt;
  &lt;/a&gt;
  Cons
&lt;/h3&gt;

&lt;p&gt;This approach is actually worse than our first attempt. One reason why is user ids aren't supposed to change. If a user's id is leaked, we have no way to prevent attackers from accessing that users account, forever. In our last attempt, if someone's password was stolen, they could have changed it. Now, however, they need a new account with a different user ID.&lt;/p&gt;

&lt;p&gt;We did say that user IDs were unguessable but there are unfortunately ways where it could get leaked. Maybe the user used an insecure password and someone guessed it and therefore got their user id. Maybe they logged in on a shared computer with malware on it. We have unfortunately no good ways to protect our users once their user ID is out.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#implementing-user-authentication-attempt-3"&gt;
  &lt;/a&gt;
  Implementing User Authentication: Attempt 3
&lt;/h2&gt;

&lt;p&gt;Ok, so we don't want to send passwords on each request, and we don't want to send a user ID on each request because we can't easily revoke it.&lt;/p&gt;

&lt;p&gt;What if, instead of asking the user to send us a user ID, we create a new unguessable token and map it to the user's ID?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OfP-UpJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8g9xptgb2bndpjlgvcbi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OfP-UpJ8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8g9xptgb2bndpjlgvcbi.png" alt="Issuing a token" width="880" height="314"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bIrEfoVn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v72azyvdz99mm24p2zj9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bIrEfoVn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v72azyvdz99mm24p2zj9.png" alt="Using a token" width="880" height="299"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If someone steals our token, we can delete it from our database and our user would have to log in again. We can even add an expiration time, after which the token is considered invalid.&lt;/p&gt;

&lt;p&gt;These tokens are often called session tokens, and they are typically stored in cookies. These tokens are also called &lt;strong&gt;opaque&lt;/strong&gt; tokens, because the string itself has no meaning outside our database.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros-and-cons"&gt;
  &lt;/a&gt;
  Pros and Cons
&lt;/h3&gt;

&lt;p&gt;This a way more reasonable approach. After a user logs in, they have an unguessable token which only they have. It's not sensitive like a password. If a user wants to log out or if their phone/laptop gets stolen, we can just delete the token from our database.&lt;/p&gt;

&lt;p&gt;The main con is that this is a stateful approach. Verifying a session token requires us to do a database lookup. Some platforms like &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt; have solutions like &lt;a href="https://nextjs.org/docs/api-routes/introduction"&gt;Next.js API Routes&lt;/a&gt; which boast that they can be run globally at the edge - meaning as close to the user as possible. If you need to do a database lookup in a database in a fixed location, you can lose some of the latency advantages you gain by globally hosting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#alternative-approach-jwts"&gt;
  &lt;/a&gt;
  Alternative Approach - JWTs
&lt;/h3&gt;

&lt;p&gt;If we want to avoid the database lookup, instead of issuing tokens that are saved to our database, we can issue JWTs. We have a separate article dedicated to understanding JWTs &lt;a href="https://blog.propelauth.com/jwt-explained/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-user-authentication-hard"&gt;
  &lt;/a&gt;
  Why is User Authentication hard?
&lt;/h2&gt;

&lt;p&gt;So far, everything we've mentioned is hopefully pretty straightforward. The difficulty in user authentication doesn't come from the approach, it comes from all the tiny details. For example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When you store passwords, you need to make sure they are stored securely. See our article about that &lt;a href="https://blog.propelauth.com/securely-storing-passwords/"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Best practice for user authentication is to deny commonly used passwords and &lt;a href="https://blog.propelauth.com/easy-breached-password-detection/"&gt;passwords seen in previous data breaches&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;It's easy to introduce subtle &lt;a href="https://blog.propelauth.com/understanding-timing-attacks-with-code/"&gt;timing attack vulnerabilities&lt;/a&gt;, either in verifying the password or in supplementary workflows like forgotten password flows.&lt;/li&gt;
&lt;li&gt;There are guidelines about the error messages you display to avoid leaking email addresses of your users.&lt;/li&gt;
&lt;li&gt;There have been multiple vulnerabilities in JWT libraries themselves.&lt;/li&gt;
&lt;li&gt;If you are using cookies, they should be HTTP-only and secure.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And the list goes on. &lt;/p&gt;

&lt;p&gt;Services like &lt;a href="https://www.propelauth.com"&gt;PropelAuth&lt;/a&gt; exist so you can avoid wasting time worrying about user authentication and get back to just building your product.&lt;/p&gt;

&lt;p&gt;In future posts in this series, we'll look at how things like social logins and two-factor authentication work.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>security</category>
    </item>
  </channel>
</rss>
