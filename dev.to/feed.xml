<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>AWS Relational Database - How to Create RDS Instance</title>
      <author>Vijay Patel</author>
      <pubDate>Thu, 16 Dec 2021 16:42:14 +0000</pubDate>
      <link>https://dev.to/easyawslearn/aws-relational-database-how-to-create-rds-instance-2dn6</link>
      <guid>https://dev.to/easyawslearn/aws-relational-database-how-to-create-rds-instance-2dn6</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-relational-database-service-rds"&gt;
  &lt;/a&gt;
  What is Relational Database Service (RDS)
&lt;/h2&gt;

&lt;p&gt;Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. &lt;br&gt;
It provides cost-efficient and resizable capacity while automating time-consuming administration tasks such as hardware provisioning, database setup, patching and backups. &lt;br&gt;
It frees you to focus on your applications so you can give them the fast performance, high availability, security, and compatibility they need.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Here is the full hands on demo video on AWS RDSðŸ‘‡ðŸ‘‡&lt;/code&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=NcW8SB1ZGSo"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L-DM9_ST--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2qtvuzb2iqk9pu4zcvdd.png" alt="Image description" width="90" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-create-an-rds-instance"&gt;
  &lt;/a&gt;
  Steps to create an RDS instance
&lt;/h2&gt;

&lt;p&gt;Following are the steps to create an RDS Instance: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Sign into AWS Management Console.
&lt;/li&gt;
&lt;li&gt;Open the RDS console.
&lt;/li&gt;
&lt;li&gt;In the upper-right corner, choose the region where you wish to create your instance.
&lt;/li&gt;
&lt;li&gt;In the navigation pane, click on â€˜Databasesâ€™.
&lt;/li&gt;
&lt;li&gt;Click on â€˜Create databaseâ€™.
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Make sure â€˜Standard createâ€™ is chosen, then click on MySQL (or the database in which you wish to create an RDS database instance).  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the â€˜Templatesâ€™ tab, click on the â€˜Dev/Testâ€™ option.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the â€˜Settingâ€™ tab, set the following values:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;DB instance identifier&lt;br&gt;
Master username&lt;br&gt;
Auto Generate a password&lt;br&gt;
Master password&lt;br&gt;
Confirm password&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In the â€˜DB instance sizeâ€™ option, give a value for the following variables:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;DB instance performance types&lt;br&gt;
DB instance class&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;In the â€˜Storageâ€™ and â€˜Availability &amp;amp; durabilityâ€™ section, leave the default values as is.&lt;/li&gt;
&lt;li&gt;In the â€˜Connectivityâ€™ section, click on the â€˜Additional connectivity configurationâ€™ and set the below values in it:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Virtual Private Cloud (VPC)&lt;br&gt;
Subnet group&lt;br&gt;
Publicly accessible- No&lt;br&gt;
VPC security groups&lt;br&gt;
Availability zone- No preference&lt;br&gt;
Database port- 3306&lt;br&gt;
   The same is displayed in the below screenshot:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Click on the â€˜Additional configuration tab, and provide a name for the â€˜Initial database nameâ€™ variable. The default settings for other options need to be kept the same.&lt;/li&gt;
&lt;li&gt;Now click on â€˜Create databaseâ€™.&lt;/li&gt;
&lt;li&gt;It takes a few minutes for the instance to get created. It can be seen in the â€˜Databasesâ€™ list as â€˜Creatingâ€™.&lt;/li&gt;
&lt;li&gt;Once it is created, it shows as â€˜Availableâ€™.&lt;/li&gt;
&lt;li&gt;The â€˜Endpointâ€™ and â€˜Portâ€™ of the database instance can be viewed in the â€˜Connectivity &amp;amp; securityâ€™ section.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note: Make sure that your database instance is secure, by verifying that sources outside of the VPC canâ€™t connect to the RDS database instance.&lt;/p&gt;




&lt;p&gt;â–¬â–¬â–¬â–¬â–¬â–¬ WANT TO LEARN MORE? â–¬â–¬â–¬â–¬â–¬â–¬&lt;br&gt;
Full Terraform tutorial â–º &lt;a href="https://bit.ly/2GwK8V2"&gt;https://bit.ly/2GwK8V2&lt;/a&gt;&lt;br&gt;
DevOps Tools, like Ansible â–º &lt;a href="https://bit.ly/3iASHuP"&gt;https://bit.ly/3iASHuP&lt;/a&gt;&lt;br&gt;
Docker Tutorial â–º &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
AWS Tutorial â–º &lt;a href="https://bit.ly/3iAT9Jx"&gt;https://bit.ly/3iAT9Jx&lt;/a&gt;&lt;br&gt;
GCP Tutorial â–º &lt;a href="https://bit.ly/3mwh412"&gt;https://bit.ly/3mwh412&lt;/a&gt;&lt;br&gt;
Jenkins Tutorials â–º [&lt;a href="https://bit.ly/3iHnfv4"&gt;https://bit.ly/3iHnfv4&lt;/a&gt;]&lt;/p&gt;

</description>
      <category>aws</category>
      <category>rds</category>
      <category>demo</category>
      <category>handsontutorial</category>
    </item>
    <item>
      <title>How to test a website?</title>
      <author>Boga Sebastian Nicolae</author>
      <pubDate>Thu, 16 Dec 2021 16:30:21 +0000</pubDate>
      <link>https://dev.to/sebiboga/how-to-test-a-website-478j</link>
      <guid>https://dev.to/sebiboga/how-to-test-a-website-478j</guid>
      <description>&lt;p&gt;There are many things to consider when testing a website.&lt;/p&gt;

&lt;p&gt;I just create a powerpoint document to help you in this journey of testing a website.&lt;br&gt;
Just click on the image below and you'll find important stuff you should pay attention to...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.google.com/presentation/d/e/2PACX-1vTQGCE-easqRcZnrluSYuVNHgJ3Ds1Mi0GvX6tKAdgZS1RClvznZJhsnMtdGQgFig/embed?start=true&amp;amp;loop=false&amp;amp;delayms=3000"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--44fX0aVH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/034hbnjmch48edg8ufvz.png" alt="Image description" width="880" height="476"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>testing</category>
      <category>website</category>
      <category>howto</category>
      <category>trainings</category>
    </item>
    <item>
      <title>How to Build a Slack Clone with a Chat API</title>
      <author>Jenna Blumenfeld</author>
      <pubDate>Thu, 16 Dec 2021 16:27:28 +0000</pubDate>
      <link>https://dev.to/jennablumenfeld/how-to-build-a-slack-clone-with-a-chat-api-73h</link>
      <guid>https://dev.to/jennablumenfeld/how-to-build-a-slack-clone-with-a-chat-api-73h</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WjvZL0bnbIE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Team messaging apps such as Slack, Google Chat, and Microsoft Teams are essential to modern workplaces. Particularly when many employees are working in a remote environment, team chat apps enable instant communication, organized conversations, and file storage. With emojis, gifs, and fun plugins, messaging apps can even create and reinforce a positive work culture. &lt;/p&gt;

&lt;p&gt;While Slack is one of the most popular team messaging apps, building your own chat app can be fast and easy using a &lt;a href="https://getstream.io/chat/"&gt;chat API&lt;/a&gt; and intuitive SDK. &lt;/p&gt;

&lt;p&gt;Here, Dillion Megida, frontend developer advocate for Stream, shares how to build a Slack clone using the &lt;a href="https://getstream.io/chat/sdk/react/"&gt;Stream React Chat SDK&lt;/a&gt;. This hour-long tutorial demonstrates how to customize components, create developer tokens, query and join channels, and leverage the Stream UI kit for a polished user experience. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow along with Dillion by activating your &lt;a href="https://getstream.io/try-for-free/"&gt;free 30-day Chat trial&lt;/a&gt;, which unlocks access to Streamâ€™s chat API, SDKs, and beautiful UI kit.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>api</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Day 1 of #100daysofcode: yay flexbox!</title>
      <author>Adnan</author>
      <pubDate>Thu, 16 Dec 2021 16:20:11 +0000</pubDate>
      <link>https://dev.to/th3realad/day-1-of-100daysofcode-yay-flexbox-132</link>
      <guid>https://dev.to/th3realad/day-1-of-100daysofcode-yay-flexbox-132</guid>
      <description>&lt;h2&gt;
  &lt;a href="#first-day-of-100-on-top-curriculum"&gt;
  &lt;/a&gt;
  First day of 100 on &lt;a href="https://www.theodinproject.com/"&gt;TOP&lt;/a&gt; curriculum.
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#points-of-this-article"&gt;
  &lt;/a&gt;
  Points of this article:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;what i'm doing today.&lt;/li&gt;
&lt;li&gt;my first flex real challenge&lt;/li&gt;
&lt;li&gt;Q-A&lt;/li&gt;
&lt;li&gt;answers to QA&lt;/li&gt;
&lt;li&gt;conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#if-youre-confused-by-what-is-this-i-recommend-you-read-my-previous-article100-days-of-code-after-1-year-of-uncertainty-to-have-a-better-understanding-of-what-is-this-about"&gt;
  &lt;/a&gt;
  if you're confused by what is this, i recommend you read my previous article:&lt;a href="https://dev.to/th3realad/100-days-of-code-after-1-year-of-uncertainty-3fce"&gt;100 days of code after 1 year of uncertainty&lt;/a&gt;, to have a better understanding of what is this about.
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#what-im-doing-today"&gt;
  &lt;/a&gt;
  what i'm doing today:
&lt;/h4&gt;

&lt;p&gt;As you know, today is my first day in doing the 100daysofcode challenge, as i had previously worked on some of top's foundation sections i was really stuck on flexbox section, now don't get me wrong, spoiler alert i did solve it in the end after spending almost an hour on it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#my-first-flex-real-challenge"&gt;
  &lt;/a&gt;
  my first flex real challenge
&lt;/h4&gt;

&lt;p&gt;when considering the one hour i spent working on it, it's not as bad as i estimated ill stay on it, but that's not the whole truth i was stuck on it since last saturday and was jumping back and fort between school assignments and this modal(pop-up) that should be implemented using only flexbox, below is an image of the expected outcome:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H8uLWz0I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6pnorkhpniycxwcjcgz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H8uLWz0I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l6pnorkhpniycxwcjcgz.png" alt="expected outcome" width="716" height="429"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and here's my results after 1 hour of digging and trying different approaches with flexbox:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VkPH4xFf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv34slpeo2v8binv8scu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VkPH4xFf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uv34slpeo2v8binv8scu.png" alt="outcome i produced" width="582" height="353"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;as you can see it's not 100% accurate, but i thought my results were acceptable and decided not to beat myself much over it, after finishing and reviewing the solution suggested by TOP, i felt like i was running around in circles when the solution consisted of only a few lines of css and containing or grouping html elements to play with them using flexbox.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;i'm still skeptic and have mixed feelings when i'm working through some code but i noticed things went a little smoother everytime i stayed consistent and trying different approaches&lt;/em&gt; &lt;br&gt;
you can find these challenges on top's curriculum or just by forking their CSS exercises &lt;a href="https://github.com/TheOdinProject/css-exercises"&gt;repository.&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#qa"&gt;
  &lt;/a&gt;
  Q-A
&lt;/h4&gt;

&lt;p&gt;in this section, i will list a couple of questions from top  to test out my flexbox knowledge later on or if you wanna have some fun and see how much flex properties you really know &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Whatâ€™s the difference between a flex container and a flex item?&lt;/li&gt;
&lt;li&gt;How do you create a flex item?&lt;/li&gt;
&lt;li&gt;What are the 3 values defined in the shorthand flex property?&lt;/li&gt;
&lt;li&gt;How do you make flex items arrange themselves vertically instead of horizontally?&lt;/li&gt;
&lt;li&gt;In a column flex-container, what does flex-basis refer to?&lt;/li&gt;
&lt;li&gt;In a row flex-container, what does flex-basis refer to?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;answers to these are at the end of the article.&lt;/strong&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h4&gt;

&lt;p&gt;So that was that for the first day of the challenge, i tried to squeeze some time without counting the time spent reading articles or watching introduction videos, according to the challenge you should only count time that you spent coding or trying to solve different challenges using code, i may not keep posting daily but i will most certainly try, as i'm trying to balance back and forth between blogging, squeezing time for the challenge and keeping up with the school(bootcamp) curriculum we are currently working on a nodejs app but i'm certainly taking my time going over the basics with top, for a quick refresher check the article or day 0 of my challenge.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#answers-to-qampa"&gt;
  &lt;/a&gt;
  Answers to Q&amp;amp;A:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Whatâ€™s the difference between a flex container and a flex item?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;answer: &lt;strong&gt;a flex container is any html element that has the display property set to flex, a flex item is a direct child of a parent that is a flex container&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;element {
display: flex;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;How do you create a flex item?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;answer: &lt;strong&gt;following up after the first question a flex item is created when you set it's parent element display's property to flex.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the 3 values defined in the shorthand flex property?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;answer: &lt;strong&gt;the flex property is a shorthand for 3 properties flex-grow: defines how much the item set to can grow off the flex-basis , flex-shrink, defines how much an item can shrink if the parent container can no longer fit its original width,&lt;br&gt;
and lastly flex basis which is set to 0 by default&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;so by that we conclude that flex:1 0 auto;&lt;br&gt;
is equivalent to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;flex-grow: 1;
flex-shrink: 0;
flex-basis: auto;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;How do you make flex items arrange themselves vertically instead of horizontally?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;answer: &lt;strong&gt;You can set the flex-direction property in the flex container to column to arrange the flex items(it's children) by default it's set to rows, you can also use row-reverse or column-reverse&lt;/strong&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In a column flex-container, what does flex-basis refer to?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;answer: &lt;strong&gt;the flex basis refers to the main axis in the case of a flex container having flex direction columns will switch the main axis to top to bottom instead of left to right&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In a row flex-container, what does flex-basis refer to?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;answer: &lt;strong&gt;the opposite of the previous answer, the main axis is now set to left to right and the cross axis is top to bottom this is the default behavior and it changes when you change your flex direction to column so make sure you spend enough time to absorb this.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;thank you for reading this article, and as always please reach out to me &lt;a href="https://twitter.com/AdnaneBouthir"&gt;here&lt;/a&gt; for any questions or discussion.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Implementing Dark Mode (Part 3)</title>
      <author>Matthew Foley</author>
      <pubDate>Thu, 16 Dec 2021 15:57:20 +0000</pubDate>
      <link>https://dev.to/opensauced/implementing-dark-mode-part-3-5gn</link>
      <guid>https://dev.to/opensauced/implementing-dark-mode-part-3-5gn</guid>
      <description>&lt;p&gt;In contributing to Open Sauced and other OSS projects as well, I've found time and time again that there are such ample opportunities to learn.  However, contributing a feature and sticking with it on a longer term can cause those opportunities to multiply!  In Part 3 of this series, I'm going to talk about some of the after-effects of implementing dark mode on Open Sauced in &lt;a href="https://github.com/open-sauced/open-sauced/pull/1020"&gt;PR #1020&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was around this time that &lt;a class="mentioned-user" href="https://dev.to/bdougieyo"&gt;@bdougieyo&lt;/a&gt;
 had really been wanting to flesh out the existing documentation. In the interest of keeping the project moving, the PR was merged with the caveat that we needed to make sure it was well documented so future contributors could work with it. &lt;/p&gt;

&lt;p&gt;Seeing as this PR had a big impact on look and feel of the app, and touched so many files, it's not surprising there were 32 comments on the PR when it was all said and done.  Some of those were scoping the feature, some of them were thinking critically about colors, and some of them were talking about the approach in general (i.e. code review). To have this much commentary in the PR made it really easy to document the feature! The opportunity to learn and contribute multiplied and that brings us to a follow-on &lt;a href="https://github.com/open-sauced/open-sauced/pull/1036"&gt;documentation PR&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A more obvious case of learning opportunities multiplying is the fact that having authored the feature, you'd be pretty well suited to make little fixes to it (and there will be little fixes needed). Case in point, there was an &lt;a href="https://github.com/open-sauced/open-sauced/issues/1045"&gt;issue filed&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/0vortex"&gt;@0vortex&lt;/a&gt;
 where the hover style for some components still had light coloring and this made the text unreadable in dark mode. I  loved reading his issue description of &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hovering over a repository in the dashboard gives a user a surprise sunburn. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Having learned some of the syntax for styled components and knowing how they were organized in the project, I was able to make a subtle but easy fix in &lt;a href="https://github.com/open-sauced/open-sauced/pull/1060"&gt;PR #1060&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Last point I'll make here, the feature you author might reach further than you think. Looking back now, it was fairly obvious that our design system for Open Sauced (&lt;a href="https://storybook.js.org"&gt;Storybook&lt;/a&gt;) should allow toggling dark mode. What was not obvious was how to make all that work.  Storybook supports this conceptually but in a newer version than we had. I did a lot of learning as I worked on  &lt;a href="https://github.com/open-sauced/open-sauced/pull/1061"&gt;PR #1061&lt;/a&gt; to get it up and running, since I didn't have a lot of experience with dependency updates in a React app. &lt;/p&gt;

&lt;p&gt;Learning with a goal in mind is powerful, and sticking with features you contribute can supercharge your learning because the goals multiply!&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>javascript</category>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Update dependencies safely - with a delay on newly published versions</title>
      <author>Andreas SommarstrÃ¶m</author>
      <pubDate>Thu, 16 Dec 2021 15:40:36 +0000</pubDate>
      <link>https://dev.to/sumstrm/update-dependencies-safely-with-a-delay-on-newly-published-versions-17k9</link>
      <guid>https://dev.to/sumstrm/update-dependencies-safely-with-a-delay-on-newly-published-versions-17k9</guid>
      <description>&lt;p&gt;Itâ€™s common to regularly pull the latest versions of packages from public upstreams - without review or regard for version maturity. And in most cases as a consequence of a build rather than from real intention to actually make updates to the dependency composition. &lt;/p&gt;

&lt;p&gt;This is most apparent in ecosystems like npm, where the  dependency tree with ranges of compatible versions turn each &lt;code&gt;npm install&lt;/code&gt; into a unique fetch of what is the "latest and greatest" at that time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;But with popular packages often being targets for attacks there is every reason to be cautious. Perhaps a little friction is desirable for the sake of security?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To prevent malicious attacks like &lt;a href="https://dev.to/sumstrm/steering-clear-of-the-dependency-trap-hb"&gt;ua-parser-js, coa &amp;amp; rc&lt;/a&gt; from happening in your organization, what if newly released dependencies werenâ€™t allowed to be used immediately? With new packages only permitted for your developers or CI/CD after a set safety period.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Good news!&lt;/strong&gt; Easily achievable with the Dependency Firewall in &lt;a href="https://bytesafe.dev"&gt;Bytesafe private registries&lt;/a&gt;. Here's how.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dont-allow-packages-until-a-set-safety-delay-has-passed"&gt;
  &lt;/a&gt;
  Don't allow packages until a set safety delay has passed
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://docs.bytesafe.dev/policies/delay-upstream/"&gt;Delay Upstream&lt;/a&gt; policy allows for a custom delay before new versions are allowed in your private registries.&lt;/p&gt;

&lt;p&gt;Until the set delay (in days) has passed, new versions are made unavailable to your organization. With other recent and allowed versions automatically selected for you - to not break your builds.&lt;/p&gt;

&lt;p&gt;By giving millions of open source users in ecosystems like npm and maven a chance to evaluate new releases, you could prevent critical vulnerabilities and malicious packages. With the right balance you could save your organization from being compromised.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#example-of-how-it-works"&gt;
  &lt;/a&gt;
  Example of how it works
&lt;/h3&gt;

&lt;p&gt;A new version of a dependency, &lt;code&gt;1.3.0&lt;/code&gt;, is released to a public registry like npmjs or maven central. For as long as &lt;code&gt;current time &amp;lt; publish time + safety delay&lt;/code&gt; the new version does not qualify and will be prevented from being used by your organization. &lt;/p&gt;

&lt;p&gt;Actions by developers or automated systems to fetch the project's dependencies will instead receive the most recent allowed version &lt;code&gt;1.2.3&lt;/code&gt; from Bytesafe.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0reD3XNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/948jt3wopozyfzypwk38.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0reD3XNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/948jt3wopozyfzypwk38.png" alt="new version prevented as it has not reached sufficient maturity" width="672" height="127"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When &lt;code&gt;current time &amp;gt;= publish time + safety delay&lt;/code&gt; the new version &lt;code&gt;1.3.0&lt;/code&gt; will be allowed in your organization and any subsequent fetches will receive the new version.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6HKfgCUG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oukcx3f68glcqeistx6h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6HKfgCUG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oukcx3f68glcqeistx6h.png" alt="version available after safety delay has passed" width="672" height="127"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#customize-the-safety-delay-to-match-your-needs"&gt;
  &lt;/a&gt;
  Customize the safety delay to match your needs
&lt;/h2&gt;

&lt;p&gt;What the desired "maturity since release" is, differs between organizations. To accommodate, the delay in Bytesafe is completely customizable per registry in your workspace up to a maximum of 90 days.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BN0DT8Zr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfor11cdvo4v7zwf2vfg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BN0DT8Zr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gfor11cdvo4v7zwf2vfg.png" alt="Custom delay time of upstream versions" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Your organization can find the right balance between delay (security) and access to new functionality.&lt;br&gt;
Adjust it to your needs per ecosystem and enforce a delay of 3 weeks for &lt;a href="https://bytesafe.dev/npm/"&gt;npm&lt;/a&gt; while using 2 months for &lt;a href="https://bytesafe.dev/maven/"&gt;maven&lt;/a&gt; - if it's right for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#patch-versions-intentionally"&gt;
  &lt;/a&gt;
  Patch versions intentionally
&lt;/h3&gt;

&lt;p&gt;If the need arises to add a specific new security patch or functionality, consider using a separate patch registry to manually (and intentionally) add the required versions. Complete control, while keeping automated environments safe and secure!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#looking-to-secure-your-supply-chain"&gt;
  &lt;/a&gt;
  Looking to secure your supply chain?
&lt;/h2&gt;

&lt;p&gt;With the &lt;a href="https://docs.bytesafe.dev/policies/delay-upstream/"&gt;Delay Upstream&lt;/a&gt; policy we want to offer the option to balance flexibility with security, especially for automated environments and decentralized developer organizations.&lt;/p&gt;

&lt;p&gt;In addition, organizations should make it a habit to review and make conscious decisions on the dependencies they are using for a &lt;a href="https://bytesafe.dev/posts/preventing-supply-chain-attacks/"&gt;secure supply chain&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Want to try delay upstreams for yourself? Sign up for &lt;a href="https://bytesafe.dev"&gt;Bytesafe&lt;/a&gt; and start for free today. &lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>security</category>
      <category>java</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Introduction to Tor</title>
      <author>Raghav Mrituanjaya</author>
      <pubDate>Thu, 16 Dec 2021 15:30:12 +0000</pubDate>
      <link>https://dev.to/raghavmri/introduction-to-tor-2h3</link>
      <guid>https://dev.to/raghavmri/introduction-to-tor-2h3</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/pBYbfHq3iQ0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-tor"&gt;
  &lt;/a&gt;
  Why Tor?
&lt;/h2&gt;

&lt;p&gt;Have you ever wondered when you search for some product like let's say a &lt;strong&gt;Mobile Phone&lt;/strong&gt; and Facebook, Google And Many others show you the ads relevant to your search? So, it means these big tech giants have an eye on our searches right? So the solution is to use Tor which makes you anonymous on the internet by routing your traffic via multiple servers around the world. So the end website that you visit will not get to know what is your original IP address.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#small-history-on-tor"&gt;
  &lt;/a&gt;
  Small History On Tor
&lt;/h2&gt;

&lt;p&gt;The Tor Project was launched in 2002 and its main technology was developed by the US Navy and was mostly funded by the government.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"We were increasingly concerned about all these websites - in the 2000/01 dotcom bubble, everyone was offering free services, and by free they meant 'we take all your information and sell it as many times as possible',"&lt;br&gt;
Said the executive director Andrew Lewman to the Guardian in April 2012&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-tor-does"&gt;
  &lt;/a&gt;
  What Tor Does?
&lt;/h2&gt;

&lt;p&gt;Tor directs your traffic through a free, worldwide volunteer overlay network, consisting of more than six thousand relays, for concealing a user's location and usage from anyone conducting network surveillance or traffic analysis. Using Tor makes it more difficult to trace the Internet activity to the user. Tor's intended use is to protect the personal privacy of its users, as well as their freedom and ability to conduct confidential communication by keeping their Internet activities unmonitored.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-tor-help-you"&gt;
  &lt;/a&gt;
  How can Tor Help You?
&lt;/h2&gt;

&lt;p&gt;The Tor project team says that it's users fall into the following categories&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IghkK6V4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/6/67/How_Tor_Works_1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IghkK6V4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/6/67/How_Tor_Works_1.svg" alt="How_Tor_Works_1" width="705" height="453"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Image By Electronic Frontier Foundation, &lt;a href="https://creativecommons.org/licenses/by/3.0"&gt;CC&lt;/a&gt; BY 3.0, via Wikimedia Commons&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Normal people who want to keep their internet activities private from websites and advertisers those concerned about cyberspying &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--183hG87u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/1/16/How_Tor_Works_2.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--183hG87u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/1/16/How_Tor_Works_2.svg" alt="How_Tor_Works_2" width="705" height="453"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Image By Electronic Frontier Foundation, &lt;a href="https://creativecommons.org/licenses/by/3.0"&gt;CC&lt;/a&gt; BY 3.0, via Wikimedia Commons&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;For Intermediate users, it could mean running Tor so that your children's location can't be identified when they are online, or could mean a political activist in China, Russia or Syria could protect their identity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dGSIplgW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/a/a1/How_Tor_Works_3.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dGSIplgW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://upload.wikimedia.org/wikipedia/commons/a/a1/How_Tor_Works_3.svg" alt="How_Tor_Works_3" width="705" height="453"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Image By Electronic Frontier Foundation, &lt;a href="https://creativecommons.org/licenses/by/3.0"&gt;CC&lt;/a&gt; BY 3.0, via Wikimedia Commons&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks For Reading ðŸ™‚&lt;/p&gt;

</description>
      <category>cybersecurity</category>
      <category>tor</category>
      <category>security</category>
      <category>beginners</category>
    </item>
    <item>
      <title>The useRef() hook in React!</title>
      <author>Ustariz Enzo</author>
      <pubDate>Thu, 16 Dec 2021 15:10:24 +0000</pubDate>
      <link>https://dev.to/ziratsu/the-useref-hook-in-react-3h98</link>
      <guid>https://dev.to/ziratsu/the-useref-hook-in-react-3h98</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;useRef()&lt;/em&gt; hook is a way to select elements with React. You could use the usual &lt;em&gt;document.querySelector&lt;/em&gt; method, however it's not optimised since it'll look through the entire DOM. Whereas if you use this hook, it'll only look in your component!&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bW_YeN48WmI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-lets-look-at-a-real-example"&gt;
  &lt;/a&gt;
  1. Let's look at a real example.
&lt;/h2&gt;

&lt;p&gt;Let's imagine you have a form:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Email&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Â &lt;br&gt;
In order to use the &lt;em&gt;useRef()&lt;/em&gt; hook, let's import it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Â &lt;br&gt;
Now, let's create some references, by giving it a name:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Email&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Â &lt;br&gt;
Now you can just select an element that you want to add inside that ref with the ref attribute. For example, let's add it to the first input:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Email&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you log it, it will simply show an object with a property &lt;em&gt;current&lt;/em&gt; as &lt;em&gt;undefined.&lt;/em&gt; However, what we want is the value of the &lt;em&gt;current&lt;/em&gt; property. &lt;/p&gt;

&lt;p&gt;Since the component is executed first, we need to use the hook &lt;em&gt;useEffect()&lt;/em&gt; to see the value of our ref.&lt;br&gt;
It's because useEffect callback function is triggered &lt;strong&gt;after&lt;/strong&gt; the creation of the component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// your ref obj&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Email&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You need to feed the &lt;em&gt;useEffect()&lt;/em&gt; hook with an arrow function and an empty array, that is the dependency array, it means that useEffect will only be triggered once, after the creation of that component. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-all-right-now-create-a-ref-for-the-second-input"&gt;
  &lt;/a&gt;
  2. All right, now create a ref for the second input.
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mailRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Email&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;mailRef&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Â &lt;br&gt;
Usually we use Ref with an onSubmit method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HandleSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mailRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;nameRef&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Email&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;mailRef&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can add a &lt;em&gt;console.log()&lt;/em&gt; if you want to use what is inside your inputs, for example for an API call.&lt;/p&gt;

&lt;p&gt;Now, whenever you write inside the inputs and submit the form, the values show up in the console.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-the-multiref"&gt;
  &lt;/a&gt;
  3. The multi-ref.
&lt;/h2&gt;

&lt;p&gt;How can you select multiple references if you have too many?&lt;/p&gt;

&lt;p&gt;Start a ref with an empty array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;HandleSubmit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;preventDefault&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                ...
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, create a method that will check if the element is not undefined and if it's not already inside the array, then you'll push it inside of the array:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;addInputs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)){&lt;/span&gt;
            &lt;span class="nx"&gt;inputs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Add that method to each of your inputs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"app"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Name&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;addInputs&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt; &lt;span class="na"&gt;htmlFor&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Email&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;label&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;ref&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;addInputs&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"email"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;

                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Well done! You now know how to use the &lt;em&gt;hook *useRef()&lt;/em&gt;* to select your elements!&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Binance Clone App- Get Exclusive Binance Clone App Solutions for Your Business Startup</title>
      <author>martin tyeman</author>
      <pubDate>Thu, 16 Dec 2021 14:31:55 +0000</pubDate>
      <link>https://dev.to/martintyeman/binance-clone-app-get-exclusive-binance-clone-app-solutions-for-your-business-startup-2e8p</link>
      <guid>https://dev.to/martintyeman/binance-clone-app-get-exclusive-binance-clone-app-solutions-for-your-business-startup-2e8p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#binance-clone-app-development"&gt;
  &lt;/a&gt;
  Binance clone app development
&lt;/h2&gt;

&lt;p&gt;This article will explore the concept of Binance clone app development and show if they are business-friendly or not.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-a-brief-explanation-about-binance-amp-binance-app"&gt;
  &lt;/a&gt;
  First, A Brief Explanation About Binance &amp;amp; Binance App
&lt;/h2&gt;

&lt;p&gt;The Binance Exchange is the biggest Cryptocurrency exchanges are platforms that facilitate the trading of cryptocurrencies for other assets, including digital and fiat in the world as of January 2018, facilitating more than 1.4 million transactions per second. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oGZ16S2H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wphsjqxk6khxkktcu7y2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oGZ16S2H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wphsjqxk6khxkktcu7y2.png" alt="Binance clone app development" width="880" height="543"&gt;&lt;/a&gt;&lt;br&gt;
Binance app, whose 24-hour volume reached an average of 10 billion in 2021, is the largest cryptocurrency trading platform. Binance gives you the chance to exchange 258 different coins for 876 different currencies. Binance, with 28 million daily visitors, is the best forex broker where you can manage your investment. Binance, which has low commission rates compared to its competitors, has a mobile application where you can easily perform all transactions and be sure that your money is safe.&lt;br&gt;
Binance App Customer Services: In case you have an issue while trading on Binance, all you need to do is to contact Binance customer services, it is available 24/7.&lt;br&gt;
Also, Binance is capable of processing 1,400,000 orders per second&lt;br&gt;
Supports many cryptocurrencies&lt;br&gt;
Binance serves more than 15,000,000 users worldwide, operates in over 40 countries&lt;br&gt;
Is based in over 180 countries &amp;amp; regions.&lt;br&gt;
App Installs: 10,000,000+&lt;br&gt;
Votes: 386,819&lt;br&gt;
And Rating: 4.4/5&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#give-your-users-a-complete-new-level-of-crypto-exchange-experience-with-customizing-native-ios-and-android-binance-like-app-development-solutions"&gt;
  &lt;/a&gt;
  Give your users a complete new level of crypto exchange experience with customizing native iOS and Android Binance like app development solutions.
&lt;/h3&gt;

&lt;h2&gt;
  &lt;a href="#binance-clone-app"&gt;
  &lt;/a&gt;
  Binance clone app
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;&lt;a href="https://radindev.com/binance-clone-script/"&gt;Binance Clone App&lt;/a&gt;&lt;/strong&gt; is a ready app that can be accessed through various available platforms of Android, iOS, and windows, through developing scalability. The Binance Clone App is designed to provide instant push and pop notifications, permitting the user to keep track of his expenses at that moment. Like the Binance app, have an updated Binance clone app for your business. Binance clone app development involves all the essential and updated features along with security updates to make your cryptocurrency exchange business encrypted and secure. Binance Dex have an app, means, Trust Wallet, the official crypto wallet app of Binance, has started support for trading on Binance DEX, the community-led decentralized exchange built on Binance Chain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-choose-binance-clone-app"&gt;
  &lt;/a&gt;
  Why choose binance clone app?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jvwMKh0C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/diytwtth10zq705o57te.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jvwMKh0C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/diytwtth10zq705o57te.png" alt="Features of Binance Clone App" width="860" height="768"&gt;&lt;/a&gt;&lt;br&gt;
Binance clone app gives you a bunch of reasons and new features to use on its platform: &lt;br&gt;
â€¢ Over $37 billion in daily trading volume&lt;br&gt;
â€¢ Strong security&lt;br&gt;
â€¢ Low downtimes&lt;br&gt;
â€¢ Most coins available&lt;br&gt;
â€¢ Multiple payment methods&lt;br&gt;
â€¢ Opportunity to invest with a credit card&lt;br&gt;
â€¢ Opportunity to invest with a wire transfer&lt;br&gt;
â€¢ Live chats in many languages&lt;br&gt;
â€¢ Forward Transactions&lt;br&gt;
â€¢ Sweepstakes&lt;br&gt;
â€¢ Fast actions&lt;br&gt;
â€¢ Low Commission&lt;br&gt;
â€¢ Authentication using biometrics&lt;br&gt;
â€¢ The Approval Process is short&lt;br&gt;
â€¢ Having offices everywhere&lt;br&gt;
â€¢ Easy to use&lt;br&gt;
â€¢ Stunning UI/UX design&lt;br&gt;
â€¢ In built wallet&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-making-a-binance-clone-app"&gt;
  &lt;/a&gt;
  Benefits of Making a Binance Clone App
&lt;/h2&gt;

&lt;p&gt;â€¢ For a safe store of hard-earned bitcoins&lt;br&gt;
â€¢ Personalize your Binance wallet profile&lt;br&gt;
â€¢ Can share your bitcoin wallet address or QR code with traders or friends&lt;br&gt;
â€¢ Track their trades and know the current status of bitcoins.&lt;br&gt;
â€¢ Easily Send, receive and store bitcoins which can be transacted anytime, anywhere&lt;br&gt;
â€¢ Know the updated bitcoin-to-fiat conversion rates and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#white-labelling-promotes-the-vision-of-your-brand"&gt;
  &lt;/a&gt;
  White labelling Promotes the Vision of Your Brand
&lt;/h2&gt;

&lt;p&gt;White labeling helps in boosting the image of the brand. It is a great idea to go with white labeling for your products, which will help you to proliferate your all-new brand name without being nasty, and it will undoubtedly increase the public awareness of your brand.&lt;br&gt;
White labelling allows us to take the benefit of expert work as if the third party has expertise in developing a product better than us then why not pay them and white label it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-advantages-of-using-whitelabel-android-amp-ios-apps"&gt;
  &lt;/a&gt;
  What are the advantages of using white-label Android &amp;amp; IOS apps?
&lt;/h3&gt;

&lt;p&gt;Redefined Product&lt;br&gt;
The product developed by the third party has already gone through the various process like a beta test, troubleshooting etc. Instead of going through the pain of launching your own product, white label is a better option.&lt;br&gt;
Quality Responsibility&lt;br&gt;
If something went wrong regarding the quality of the product, then the third party which developed the product takes the full responsibility to make the product in a correct way again.&lt;br&gt;
Low Initial Investment: If a start-up company requires to enter the android app development market with minimal initial investment, then white-label apps are the way to go. &lt;br&gt;
Fast Turnaround Time: For a company looking to capture a market share immediately, they may not choose to waste any further time and rather go for a ready-made solution to hit the market. &lt;br&gt;
Proven Features Set: Company A might have decided to launch an app to estimate the market size and understand user expectations. They may not have the required experience to work out the feature set of android apps, and therefore might decide to step the beaten track in order to minimize their chance of incurring a loss. &lt;br&gt;
White Labeling Saves Money and Time&lt;br&gt;
Developing your own product might sound very interesting at some point until you have done it successfully in the past, you presumably are not familiar with all the resources and energy that helps in creating a primordial product, so why you should waste your time and money when you can white label the product?&lt;br&gt;
If you are planning to start a clone app like Binance and want to earn a high Return on Investment also by providing your customers with great satisfaction levels, you can start your own cryptocurrency exchange with a white-label Binance clone app. You can also go with any other solution which is reliable and trustable in the market.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4KlygkaE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz24jgm4kxnnifd99d4t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4KlygkaE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oz24jgm4kxnnifd99d4t.png" alt="White-label Binance Clone App" width="880" height="740"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whitelabel-binance-clone-app-to-start-customized-cryptocurrency-trading-application-like-binance"&gt;
  &lt;/a&gt;
  White-label Binance Clone App - To Start Customized Cryptocurrency Trading Application Like Binance
&lt;/h2&gt;

&lt;p&gt;White-Label Binance Clone App is a 100% customizable Crypto Exchange Clone App that contains of all the present features and functionalities of the Binance Exchange. This clone app, provides a platform to launch your own cryptocurrency exchange website like Binance.&lt;br&gt;
White label Binance clone app permits you to customize the trading features according to the current digital trend, and it allows you to customize the brand name, theme, design according to your business demands. &lt;br&gt;
A white-label app is an app developed by a white-label platform or private label development company and later rebranded and re-sold by other companies.&lt;br&gt;
As you have begun your journey into the world of mobile app development, you now have two options: build a custom app from scratch or use a white-label app builder. While the notion of a ready-to-use and deploy framework seems appealing and cost-effective, it has its flaws. And, more often than not, the concerns associated with white-label applications are too significant to overlook.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-disadvantages-of-using-whitelabel-android-amp-ios-apps"&gt;
  &lt;/a&gt;
  What are the disadvantages of using white-label Android &amp;amp; IOS apps?
&lt;/h3&gt;

&lt;p&gt;Lack of custom design: With a white-label android app development, you may not have the complete freedom to change user experience design.  Therefore, the android app may not build a different and better experience for the end-user.&lt;br&gt;
Quality of code: The company B may not have full control over the quality of code that is being used in the android app development. The code may have malicious elements, may be prone to crashing often, and may not achieve good performance.&lt;br&gt;
Cloud-based setup: Some white-label android apps are cloud based and hence do not allow the company B to download it entirely. That may severely limit the secrecy of code and thereby compromise its efficacy.&lt;br&gt;
Scalability is limited: A white-label android app development may not offer you the required scalability. It might prevent you from scaling up due to limitations in either the code or the cloud setup.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>cryptocurrency</category>
    </item>
    <item>
      <title>How to create a snowfall with Javascript</title>
      <author>Posandu </author>
      <pubDate>Thu, 16 Dec 2021 14:29:30 +0000</pubDate>
      <link>https://dev.to/posandu/how-to-create-a-snowfall-with-javascript-caa</link>
      <guid>https://dev.to/posandu/how-to-create-a-snowfall-with-javascript-caa</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This post was first published on &lt;a href="https://www.tronic247.com/how-to-create-a-snowfall-with-javascript/?ref=dev"&gt;Tronic247&lt;/a&gt;. If you can read it there that's a Gift for me :D&lt;br&gt;
.&lt;br&gt;
Okay then let's start&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;\n&lt;br&gt;
\n&lt;/p&gt;

&lt;p&gt;Hello people! Itâ€™s Christmas time! So letâ€™s create a snowfall effect with JavaScript. Itâ€™s only pure JavaScript. No jQuery or other libraries. Just plain JavaScript. So letâ€™s create snowfall with Javascript.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#you-can-see-a-preview-of-the-effect-were-creating-here"&gt;
  &lt;/a&gt;
  You can see a preview of the effect we're creating &lt;a href="https://www.tronic247.com/how-to-create-a-snowfall-with-javascript/#never_gonna_give_you_up"&gt;here&lt;/a&gt;
&lt;/h4&gt;
&lt;h2&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h2&gt;

&lt;p&gt;Open your favourite code editor.&lt;br&gt;
And now create an HTML file with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"X-UA-Compatible"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"IE=edge"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My Snowfall&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
            &lt;span class="c1"&gt;// our hero code&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And weâ€™ll make the background darker.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#1d1d1d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now letâ€™s start with JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h2&gt;

&lt;p&gt;Letâ€™s create a function named &lt;code&gt;addSnow&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;addSnow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// code goes here&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then inside the function, we put these variables:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;screenWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;screenHeight&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now weâ€™ll create a &lt;code&gt;div&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;snow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;div&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then weâ€™ll add some styles to the div.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fixed&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-2px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;screenWidth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;10px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#fff&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;borderRadius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;50%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zIndex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;999&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pointerEvents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;none&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These styles will create something like this (Smaller):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O_vBh_C_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ak.picdn.net/shutterstock/videos/1060304588/thumb/3.jpg%3Fip%3Dx480" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O_vBh_C_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ak.picdn.net/shutterstock/videos/1060304588/thumb/3.jpg%3Fip%3Dx480" alt="" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that animate the div.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;animateSnow&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="cm"&gt;/**
     * If it's out of the screen, move it to the top
     * and randomize it's position
     * */&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;screenHeight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;screenWidth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animateSnow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animateSnow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And finally, weâ€™ll add the div to the body.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;appendChild&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;snow&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ah, donâ€™t forget to close the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And to add the snow weâ€™ll just call the function 60 times.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;addSnow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And thatâ€™s it! Hereâ€™s the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dvuJ4G6h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://s10.gifyu.com/images/ezgif-2-409e59e71a11.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvuJ4G6h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://s10.gifyu.com/images/ezgif-2-409e59e71a11.gif" alt="" width="600" height="467"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can visit my blog/website&lt;code&gt;${Math.random()==1 &amp;amp;&amp;amp; "/community"}&lt;/code&gt; &lt;a href="https://www.tronic247.com/"&gt;https://www.tronic247.com/&lt;/a&gt; for more like this.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>animations</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>React &amp; Formik Build forms more efficiently 
</title>
      <author>Damian Piwowarczyk</author>
      <pubDate>Thu, 16 Dec 2021 14:21:20 +0000</pubDate>
      <link>https://dev.to/przpiw/react-formik-build-forms-more-efficiently-37jh</link>
      <guid>https://dev.to/przpiw/react-formik-build-forms-more-efficiently-37jh</guid>
      <description>&lt;p&gt;Re-usability and smart design are crucial aspects when building web applications. Planning earlier how the user interface can be broken into components and how components can be reused over different data will reduce spaghetti code and improve the structure of our application.&lt;/p&gt;

&lt;p&gt;Building forms can be sometimes challenging. In this tutorial, I will describe how we can design reusable form components with the implementation of formik lightweight library which can help us to speed up the process of building forms for our application.&lt;br&gt;
Â &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-formik"&gt;
  &lt;/a&gt;
  What is &lt;a href="https://formik.org/docs/overview"&gt;Formik&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Formik is one of the most popular open-source form libraries for React &amp;amp; React Native. API is well documented and the library lets us choose whether we want to use formik components or utilize it with HTML elements.&lt;br&gt;
Formik takes care of the repetitive and annoying stuffâ€”keeping track of values/errors/visited fields, orchestrating validation, and handling submissionâ€”so you don't have to. This means you spend less time wiring up state and change handlers and more time focusing on your business logic.&lt;/p&gt;

&lt;p&gt;Â &lt;br&gt;
In this example we will build LoginForm with custom react components that will let you build. We utilise Formik to speed up process of building forms and yup to create validation schema. We will handle and display error messages based on our validation schema. We will use nextjs as boilerplate application.&lt;br&gt;
Lets get started!&lt;/p&gt;

&lt;p&gt;Â &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#create-nextjs-project-amp-install-dependencies"&gt;
  &lt;/a&gt;
  Create next.js project &amp;amp; install dependencies
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;nextjs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;formik&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;nextjs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;formik&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;formik&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;yup&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Â &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#project-setup"&gt;
  &lt;/a&gt;
  Project setup
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mkdir&lt;/span&gt; &lt;span class="nx"&gt;components&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;components&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;mkdir&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;Form&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;touch&lt;/span&gt; &lt;span class="nx"&gt;InputField&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;touch&lt;/span&gt; &lt;span class="nx"&gt;LoginForm&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;FormLabel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;mkdir&lt;/span&gt; &lt;span class="nx"&gt;validation&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;validation&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;touch&lt;/span&gt; &lt;span class="nx"&gt;loginSchema&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Â &lt;/p&gt;

&lt;p&gt;We will start with creating InputField and FormLabel components that we will can be reused later in our application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;InputField&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/input&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;FormLabel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Â &lt;br&gt;
Â &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#loginform"&gt;
  &lt;/a&gt;
  LoginForm
&lt;/h3&gt;

&lt;p&gt;Now we will create create login form with Formik and our components&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useFormik&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;formik&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;InputField&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./InputField&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;FormLabel&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./FormLabel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;//import { loginSchema } from './validation/loginSchema'&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;LoginForm&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;formik&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useFormik&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;initialValues&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="c1"&gt;//validationSchema: loginSchema,&lt;/span&gt;
    &lt;span class="na"&gt;onSubmit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Once form submited ex. {Email: 'John@example.com', Password: 'secret'}&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;form&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loginform&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;onSubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formik&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleSubmit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;FormLabel&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Email: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;InputField&lt;/span&gt;
          &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
          &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;email&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
          &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formik&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;backgroundColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gray&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;
        &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;FormLabel&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formik&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;br&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/br&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;FormLabel&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Password: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;InputField&lt;/span&gt;
          &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;password&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
          &lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formik&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;handleChange&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;FormLabel&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;formik&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;password&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/form&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;loginform&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;submit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;Login&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;LoginForm&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Excellent! We just created our login form. Now we can add validation using &lt;a href="https://www.npmjs.com/package/yup"&gt;yup&lt;/a&gt; a JavaScript schema builder that gives us the power to create custom validation schemas. Yup schemas will let us validate form input and with a combination of formik we can display errors based on rules that we specified in our schema object. &lt;br&gt;
It's a good practice to keep validation schemas in separated files as it improves the readability of code.&lt;/p&gt;

&lt;p&gt;Let add validation schema to loginSchema&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Yup&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yup&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loginSchema&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Yup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Yup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Required&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Yup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Required&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Too Short!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Â &lt;br&gt;
Now we can uncomment following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import { loginSchema } from './validation/loginSchema'&lt;/span&gt;
&lt;span class="c1"&gt;// validationSchema: loginSchema&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Â &lt;/p&gt;

&lt;p&gt;Last part is to go to pages/index.js&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;LoginForm&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../components/Form/LoginForm&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;LoginForm&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Â &lt;br&gt;
This shows how we speed up form building process and save some time in the future.&lt;br&gt;
By using our simple custom build react components we could extend it even further by adding additional props, styles that suit our needs. &lt;br&gt;
Â &lt;br&gt;
Â &lt;br&gt;
In the next article, I will cover how we can add tailwind and style our forms.&lt;/p&gt;

&lt;p&gt;Hope this tutorial was helpful. Thanks for reading!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/przpiw/nextjs-formik-loginform"&gt;github repo&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>nextjs</category>
      <category>react</category>
    </item>
    <item>
      <title>Cypress vs Playwright: Which is best for E2E testing?</title>
      <author>Cathal Mac Donnacha ðŸš€</author>
      <pubDate>Thu, 16 Dec 2021 13:56:14 +0000</pubDate>
      <link>https://dev.to/cathalmacdonnacha/cypress-vs-playwright-which-is-best-for-e2e-testing-5f52</link>
      <guid>https://dev.to/cathalmacdonnacha/cypress-vs-playwright-which-is-best-for-e2e-testing-5f52</guid>
      <description>&lt;p&gt;Cypress was our go-to end-to-end (E2E) testing tool, and we were pretty happy with it, up until recently that is. Lately, we've run into a couple of testing scenarios where Cypress support has been limited, notably around multiple domains/tabs and iFrames. This caused us to re-evaluate the available E2E tools and it ultimately came down to two options; keep Cypress or switch to Playwright. &lt;/p&gt;

&lt;p&gt;In this article, I compare both tools in the format of an &lt;a href="https://adr.github.io/madr/#overview"&gt;ADR&lt;/a&gt;, which should help us decide which tool to go with. Let the battle commence!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cypress"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Cypress&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.cypress.io/"&gt;https://www.cypress.io/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Good, because it's very easy to learn and get set up with basic tests.&lt;/li&gt;
&lt;li&gt;Good, because it has a nice dashboard to view test reports, analytics and recordings.&lt;/li&gt;
&lt;li&gt;Good, because it supports Chromium and Firefox.&lt;/li&gt;
&lt;li&gt;Good, because it has a very slick Test Runner UI.&lt;/li&gt;
&lt;li&gt;Good, because it's built specifically for end-to-end testing.&lt;/li&gt;
&lt;li&gt;Good, because you can edit your test code in the browser and instantly see it run as you change the code.&lt;/li&gt;
&lt;li&gt;Good, because it's mature and has good community support.&lt;/li&gt;
&lt;li&gt;Bad, because it doesn't support multiple domains.&lt;/li&gt;
&lt;li&gt;Bad, because authentication requires a lot more setup due to lack of multi-domain support.&lt;/li&gt;
&lt;li&gt;Bad, because it doesn't support Webkit (Safari)&lt;/li&gt;
&lt;li&gt;Bad, because you cannot run tests against multiple browsers at the same time.&lt;/li&gt;
&lt;li&gt;Bad, because iFrame support is limited.&lt;/li&gt;
&lt;li&gt;Bad, because there is no "hover" support.&lt;/li&gt;
&lt;li&gt;Bad, because the chaining command syntax can quickly get out of hand for more complex tests.&lt;/li&gt;
&lt;li&gt;Bad, because you have to pay a premium to get access to some dashboard features (e.g flake detection)&lt;/li&gt;
&lt;li&gt;Bad, because to do parallelization well, it requires vendor-locked software.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#playwright"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Playwright&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://playwright.dev/"&gt;https://playwright.dev/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Good, because it supports Chromium, Firefox and Webkit (Safari).&lt;/li&gt;
&lt;li&gt;Good, because it supports multiple domains and tabs.&lt;/li&gt;
&lt;li&gt;Good, because it supports 5 language bindings (Javascript, Typescript, Java, Python, .NET)&lt;/li&gt;
&lt;li&gt;Good, because it'sÂ &lt;a href="https://blog.checklyhq.com/cypress-vs-selenium-vs-playwright-vs-puppeteer-speed-comparison/"&gt;fast&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Good, because you can run tests against multiple browsers at the same time.&lt;/li&gt;
&lt;li&gt;Good, because it fully supports parallelization, even locally.&lt;/li&gt;
&lt;li&gt;Good, because it supports parallel tests within a single test file.&lt;/li&gt;
&lt;li&gt;Good, because it's Javascript first, so feels more natural.&lt;/li&gt;
&lt;li&gt;Good, because it has "hover" support.&lt;/li&gt;
&lt;li&gt;Good, because iFrames are natively supported.&lt;/li&gt;
&lt;li&gt;Good, because it supports reuse of authentication state to speed up tests.&lt;/li&gt;
&lt;li&gt;Good, because it lets you choose your test runner (e.g. Jest but the default one is advised)&lt;/li&gt;
&lt;li&gt;Good, because signing in is simple, you just fill in the form.&lt;/li&gt;
&lt;li&gt;Good, because it's completely free.&lt;/li&gt;
&lt;li&gt;Good, because it has few dependencies.&lt;/li&gt;
&lt;li&gt;Bad, because it's still quite new, so possibility of a smaller community.&lt;/li&gt;
&lt;li&gt;Bad, because 3rd party tutorials are out of date due to changing API.&lt;/li&gt;
&lt;li&gt;Bad, because it's a mix between an automation and testing framework.&lt;/li&gt;
&lt;li&gt;Bad, because it has a steeper learning curve.&lt;/li&gt;
&lt;li&gt;Bad, because it does not have a dedicated dashboard so would be harder to debug tests remotely.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#common-features-between-both"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Common features between both&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Good documentation&lt;/li&gt;
&lt;li&gt;API testing&lt;/li&gt;
&lt;li&gt;Point &amp;amp; click test recording&lt;/li&gt;
&lt;li&gt;Test debugging tools&lt;/li&gt;
&lt;li&gt;Test retries&lt;/li&gt;
&lt;li&gt;Automatic waiting&lt;/li&gt;
&lt;li&gt;Video and screen capture&lt;/li&gt;
&lt;li&gt;Mobile emulation&lt;/li&gt;
&lt;li&gt;Regularly updated and well maintained&lt;/li&gt;
&lt;li&gt;Run only a subset of tests&lt;/li&gt;
&lt;li&gt;Network monitoring&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In the end, we decided to go with Playwright, mainly because of its native support for multiple domains, tabs and iFrames. I will say that I found Cypress' debugging to be more developer-friendly and in general "slicker", but that wasn't enough to make us stay put. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#want-to-see-more"&gt;
  &lt;/a&gt;
  Want to see more?
&lt;/h2&gt;

&lt;p&gt;I mainly write about real tech topics I face in my everyday life as a Frontend Developer. If this appeals to you then feel free to follow me on Twitter: &lt;a href="https://twitter.com/cmacdonnacha"&gt;https://twitter.com/cmacdonnacha&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bye for now ðŸ‘‹&lt;/p&gt;

</description>
      <category>testing</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
    </item>
  </channel>
</rss>
