<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>15 CSS tricks that will boost your designing confidence as a frontend Developer 🦾</title>
      <author>Yaku</author>
      <pubDate>Tue, 25 Jan 2022 02:02:02 +0000</pubDate>
      <link>https://dev.to/yaku/15-css-that-will-boost-your-designing-confidence-as-frontend-developer-1j55</link>
      <guid>https://dev.to/yaku/15-css-that-will-boost-your-designing-confidence-as-frontend-developer-1j55</guid>
      <description>&lt;p&gt;&lt;strong&gt;1. Use CSS Grid for Better Layouts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;CSS Grid Layout is a new way to create layouts on the web. It provides a more efficient way to layout your content than using floats or positioning.&lt;br&gt;
**&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use Media Queries to Target Different Devices**&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Media queries allow you to target different devices with different CSS properties. This is a great way to make your site look great on all devices.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Use CSS Animations for Eye-Catching Effects&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;CSS Animations allow you to create eye-catching effects that can really make your site stand out.&lt;br&gt;
**&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use Pseudo-Classes to Add More Style to Your Links**&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Pseudo-classes allow you to add more style to your links, making them more visually appealing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Use the :before and :after Pseudo-Elements to Add Content to Your Pages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;:before and :after pseudo-elements allow you to add content to your pages, which can be used to create interesting effects.&lt;br&gt;
**&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the transform Property to Transform Your Elements**&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The transform property allows you to transform your elements, which can create some cool effects.&lt;br&gt;
**&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the transition Property to Create Smooth Animations**&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The transition property allows you to create smooth animations between CSS properties.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Use the opacity Property to Create Transparent Elements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The opacity property allows you to create transparent elements, which can be used to create interesting effects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Use the box-shadow Property to Add Shadows to Your Elements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The box-shadow property allows you to add shadows to your elements, which can give them a more polished look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Use the border-radius Property to Add Curved Borders to Your Elements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The border-radius property allows you to add curved borders to your elements, which can give them a more polished look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. Use the font-family Property to Choose the Fonts for Your Pages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The font-family property allows you to choose the fonts for your pages, which can help to create a more unified look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;12. Use the font-size Property to Control the Size of Your Fonts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The font-size property allows you to control the size of your fonts, which can help to create a more unified look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;13. Use the color Property to Control the Color of Your Text&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The color property allows you to control the color of your text, which can be used to create a more unified look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;14. Use the background-color Property to Control the Background Color of Your Pages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The background-color property allows you to control the background color of your pages, which can be used to create a more unified look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;15. Use the margin and padding Properties to Control the Space Around Your Elements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The margin and padding properties allow you to control the space around your elements, which can help to create a more polished look.&lt;/p&gt;

&lt;p&gt;Thanks for reading through I hope this article helps you in anyway. &lt;/p&gt;

&lt;p&gt;Please comment any other trick that I may have missed out.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;

&lt;p&gt;Kindly follow me on &lt;a href="//GitHub.com/yakumwamba"&gt;git&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>frontend</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Secure a Job in 2022</title>
      <author>Yaku</author>
      <pubDate>Tue, 25 Jan 2022 01:40:00 +0000</pubDate>
      <link>https://dev.to/yaku/how-to-secure-a-job-in-2022-502d</link>
      <guid>https://dev.to/yaku/how-to-secure-a-job-in-2022-502d</guid>
      <description>&lt;p&gt;In an economy where the average job tenure is 4.6 years, it’s important to be proactive about your career. Whether you’re just starting out or you’re looking for a change, learning how to get a job as a frontend engineer is a valuable skill.&lt;/p&gt;

&lt;p&gt;Frontend engineering is a rapidly growing field. By 2023, there will be a shortage of 230,000 frontend engineers in the United States alone.&lt;/p&gt;

&lt;p&gt;So, how can you make sure you’re one of the lucky few who lands a job in this in-demand field? Here are a few tips:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Stay up to date with the latest trends and technologies&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Frontend engineering is a constantly evolving field, so it’s important to stay up to date with the latest trends and technologies. If you want to get a job as a frontend engineer, you need to be able to not only design and build webpages, but also be familiar with the latest tools and frameworks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Get involved in the community.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the best ways to stay up to date with the latest frontend engineering trends is to get involved in the community. There are a number of online and offline communities where you can learn from and connect with other frontend engineers. Attending meetups and conferences is a great way to meet other professionals and learn about the latest industry trends.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Build a portfolio of your work&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In order to get a job as a frontend engineer, you need to be able to show potential employers your work. A portfolio is the best way to do this. Make sure to include a variety of projects, from simple websites to more complex applications. If you don’t have any projects to include, you can also create a personal website or blog and showcase your work there.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Get certified&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;There are a number of frontend engineering certification programs available, such as the Certified Front-End Engineer certification from the American Graphics Institute. Getting certified can demonstrate your knowledge and skills to potential employers and can help you stand out from the competition.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Stay up to date on job postings&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;One of the best ways to find out about job openings is to stay up to date on job postings. There are a number of job boards and websites that list job openings for frontend engineers. Signing up for job alerts is a great way to make sure you don’t miss any opportunities.&lt;/p&gt;

&lt;p&gt;Landing a job as a frontend engineer can be challenging, but it’s definitely not impossible. By following these tips, you’ll be on your way to landing your dream job in no time.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;br&gt;
If you need any help building a portfolio contact me on &lt;a href="mailto:brianlemba2@gmail.com"&gt;brianlemba2@gmail.com&lt;/a&gt;&lt;br&gt;
GitHub.com/yakumwamba&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>web3</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Mock isolated service in a React Application</title>
      <author>Miguel</author>
      <pubDate>Tue, 25 Jan 2022 01:37:18 +0000</pubDate>
      <link>https://dev.to/devneto/mock-isolated-service-in-a-react-application-4on3</link>
      <guid>https://dev.to/devneto/mock-isolated-service-in-a-react-application-4on3</guid>
      <description>&lt;p&gt;The term division to conquer was used throughout history in political and political ideals, consisting of the fragmentation of powers, thus, it is a strategy that aims to break or accompany between social structures and take them independently.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Divide and Conquer. - Júlio César"&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hi guys, how are you today? &lt;/p&gt;

&lt;p&gt;I am writing this post to demonstrate how it is possible to isolate services in a react application and test them independently.&lt;/p&gt;

&lt;p&gt;Step one: &lt;strong&gt;Understanding the structure&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EBIr7Dxz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rkdvvmsizhhd9pkq78e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EBIr7Dxz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0rkdvvmsizhhd9pkq78e.png" alt="structure" width="880" height="348"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Adapters&lt;/strong&gt; work as a bridge to the outside world, this is done through external functions or developed interfaces.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Services&lt;/strong&gt; are a similar construct used by the repository pattern often used by the backend to build a superficial and literal layer between code and database.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Entities&lt;/strong&gt; are interfaces and literal representations of the members of our application.&lt;/p&gt;

&lt;p&gt;Step two: &lt;strong&gt;Building an adapter&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import axios from "axios";

const api = axios.create({
  baseURL: process.env.API_BASE,
});

export default api;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;

&lt;center&gt;/adapters/api.ts&lt;/center&gt;
&lt;/blockquote&gt;

&lt;p&gt;The code above is very simple, we are just creating a new instance of axios and exporting it to the rest of the application.&lt;/p&gt;

&lt;p&gt;Third step: &lt;strong&gt;Assembling the entity&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The entity is just a type with its respective attributes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export type TUser = {
  name: string;
  email: string;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;

&lt;center&gt;/entities/user.ts&lt;/center&gt;
&lt;/blockquote&gt;

&lt;p&gt;Last step: &lt;strong&gt;Finally the services&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const registerUser = (user: TUser) =&amp;gt; {
  return api.post("api/user", user);
}

export const getUser = (id: number) =&amp;gt; {
  return api.get(`api/user/${id}`, user);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;

&lt;center&gt;/services/user.ts&lt;/center&gt;

&lt;p&gt;Ui&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our ui is composed of two inputs and a button with their respective data-testid&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Input data-testid="inputName" /&amp;gt;
&amp;lt;Input data-testid="inputEmail" /&amp;gt;
&amp;lt;Button data-testid="submit" type="submit"&amp;gt;Save&amp;lt;/Button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Writing the tests&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First let's mock the service&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as user from "/services/user.ts";

jest.spyOn(user, "registerUser").mockImplementation(() =&amp;gt;
   Promise.resolve({
      message: "created"
   })
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The magic is in the code above, we are exporting the entire service file and telling spyOn to look at it as a function object&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;it("Must submit a new user", async () =&amp;gt; {
  const { getAllByTestId } = render(&amp;lt;User /&amp;gt;);

  const name = getAllByTestId("inputName")[0] as   HTMLInputElement;
  const email = getAllByTestId("inputEmail")[0] as HTMLInputElement;
  const submit = getAllByTestId("submit");

  fireEvent.change(email, { target: { value: "email@email.com" } });
  fireEvent.change(name, { target: { value: "Miguel" } });
  fireEvent.submit(submit);
  await waitFor(() =&amp;gt; 
        expect(user.registerUser).toHaveBeenCalledTimes(1));
  });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case we expect our form to call our registration function at least once.&lt;/p&gt;

&lt;p&gt;And we reached the end of the tests, the big point is in the import of the service that will be a mock. Take a good look at how the spy function works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HgdyHgaH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/068j7du3ioxra0e5os4v.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HgdyHgaH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/068j7du3ioxra0e5os4v.gif" alt="Naruto" width="500" height="282"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;center&gt;Time is very important, thanks for sharing a little bit of yours with me 😊.&lt;/center&gt;

&lt;p&gt;&lt;a href="https://github.com/devneto"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4pQJI-Km--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/GitHub-100000%3Fstyle%3Dfor-the-badge%26logo%3Dgithub%26logoColor%3Dwhite" alt="image" width="92" height="28"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Smart Contracts and NFTs: The Future of Digital Transactions?</title>
      <author>Yaku</author>
      <pubDate>Tue, 25 Jan 2022 01:26:54 +0000</pubDate>
      <link>https://dev.to/yaku/smart-contracts-and-nfts-the-future-of-digital-transactions-4a52</link>
      <guid>https://dev.to/yaku/smart-contracts-and-nfts-the-future-of-digital-transactions-4a52</guid>
      <description>&lt;p&gt;What are NFTs and Smart Contracts?&lt;/p&gt;

&lt;p&gt;Non-fungible tokens (NFTs) are tokens that are unique and cannot be interchangeable. They are different from other tokens because they can represent unique assets or digital collectibles. Smart contracts are computer protocols that facilitate, verify, or enforce the negotiation or performance of a contract.&lt;/p&gt;

&lt;p&gt;NFTs and Smart Contracts on the Blockchain&lt;/p&gt;

&lt;p&gt;NFTs and smart contracts are two of the most important features of the blockchain. They are what make the blockchain a powerful tool for creating and managing digital assets. NFTs are stored on the blockchain in a decentralized manner, which means that they are not controlled by any single entity. This makes them more secure and trustworthy than traditional digital assets. Smart contracts are executed by the blockchain, which means that they are automatically enforced and cannot be altered or manipulated. This makes them more reliable than traditional contracts.&lt;/p&gt;

&lt;p&gt;NFTs and smart contracts are two of the most important features of the blockchain.&lt;/p&gt;

&lt;p&gt;How NFTs and Smart Contracts are Used&lt;/p&gt;

&lt;p&gt;NFTs and smart contracts can be used to create and manage digital assets and contracts. They can also be used to create decentralized applications (dapps). Dapps are applications that are built on the blockchain and use its features to provide a more secure and trustworthy experience for users. NFTs and smart contracts are also used to create tokens. Tokens are digital assets that can be used to represent anything of value. They can be used to represent money, assets, or anything else that has value.&lt;/p&gt;

&lt;p&gt;NFTs and smart contracts are two of the most important features of the blockchain.&lt;/p&gt;

&lt;p&gt;Benefits of NFTs and Smart Contracts&lt;/p&gt;

&lt;p&gt;NFTs and smart contracts offer a number of benefits that can be used to improve the digital world. Some of the benefits of NFTs and smart contracts include:&lt;/p&gt;

&lt;p&gt;Security: NFTs and smart contracts are secure and can be used to create and manage digital assets and contracts.&lt;/p&gt;

&lt;p&gt;Trust: NFTs and smart contracts are reliable and can be used to create and manage digital contracts and assets.&lt;/p&gt;

&lt;p&gt;Decentralization: NFTs and smart contracts are decentralized and can be used to create and manage digital assets and contracts without the need for a third party.&lt;/p&gt;

&lt;p&gt;Flexibility: NFTs and smart contracts are flexible and can be used to create and manage a wide variety of digital assets and contracts.&lt;/p&gt;

&lt;p&gt;We are still in the early days of these technologies however we can see that they influence much of how our future transactions will look like.&lt;/p&gt;

&lt;p&gt;Thanks for reading this article really appreciate it as I'm on journey of learning more about NFTs and smart contracts Id like to share what I am learning.&lt;/p&gt;

&lt;p&gt;Feel free to hit me up for a chat or anything 😉&lt;/p&gt;

&lt;p&gt;Also kindly follow me on GitHub at GitHub.com/yakumwamba&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Svelte: A Comprehensive Guide to Developing Your App With Svelte - Part 2 🦜</title>
      <author>Yaku</author>
      <pubDate>Tue, 25 Jan 2022 01:13:39 +0000</pubDate>
      <link>https://dev.to/yaku/svelte-a-comprehensive-guide-to-developing-your-app-with-svelte-part-2-170j</link>
      <guid>https://dev.to/yaku/svelte-a-comprehensive-guide-to-developing-your-app-with-svelte-part-2-170j</guid>
      <description>&lt;p&gt;Hi welcome to part 2 of the comprehensive guide to Svelte.&lt;/p&gt;

&lt;p&gt;In this article, we will be learning how to fetch API data using Svelte. We will be using the GitHub API to fetch data about repositories.&lt;/p&gt;

&lt;p&gt;First, we need to install the Svelte npm package.&lt;/p&gt;

&lt;p&gt;$ npm install svelte&lt;/p&gt;

&lt;p&gt;Next, we need to create a file called app.svelte.&lt;/p&gt;

&lt;p&gt;`&lt;/p&gt;



GitHub Repository Data





&lt;p&gt;const url = "&lt;a href="https://api.github.com/repositories"&gt;https://api.github.com/repositories&lt;/a&gt;";&lt;/p&gt;

&lt;p&gt;const request = new XMLHttpRequest();&lt;/p&gt;

&lt;p&gt;request.open("GET", url, true);&lt;/p&gt;

&lt;p&gt;request.onload = function() {&lt;br&gt;
if (request.status === 200) {&lt;br&gt;
const resp = request.response;&lt;/p&gt;

&lt;p&gt;const data = resp.body.data;&lt;/p&gt;

&lt;p&gt;console.log(data);&lt;/p&gt;

&lt;p&gt;}&lt;br&gt;
};&lt;br&gt;
request.onerror = function() {&lt;br&gt;
console.error("request failed: " + request.status);&lt;br&gt;
};&lt;/p&gt;

&lt;p&gt;request.send();&lt;/p&gt;





&lt;p&gt;`&lt;br&gt;
In the code, we first define the URL for the GitHub API. We then create a new XMLHttpRequest object. We open the GET request and set the URL. We also set the true parameter, which ensures that the request is made asynchronously.&lt;/p&gt;

&lt;p&gt;We then define two functions, onload and onerror . onload will be executed when the request is loaded, while onerror will be executed if there is an error. We then send the request.&lt;/p&gt;

&lt;p&gt;If the request is successful, we will get the response body. We will then extract the data from the body and log it to the console. &lt;/p&gt;

&lt;p&gt;You can try running the code in your browser. You should see the data for all the repositories on GitHub.&lt;/p&gt;

&lt;p&gt;Thanks for reading ☺️&lt;br&gt;
Please follow me on git here GitHub.com/yakumwamba&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Svelte: A Comprehensive Guide to Developing Your App With Svelte - Part 1 🦜</title>
      <author>Yaku</author>
      <pubDate>Tue, 25 Jan 2022 01:02:38 +0000</pubDate>
      <link>https://dev.to/yaku/svelte-a-comprehensive-guide-to-developing-your-app-with-svelte-part-1-3iob</link>
      <guid>https://dev.to/yaku/svelte-a-comprehensive-guide-to-developing-your-app-with-svelte-part-1-3iob</guid>
      <description>&lt;p&gt;Hi, this is Yaku and I just want to talk about Svelte.&lt;/p&gt;

&lt;p&gt;Svelte is a new JavaScript framework that is designed to be lightweight and efficient. It has a small footprint, and is easy to learn. Svelte is also very fast, and can be used to create powerful web applications. &lt;/p&gt;

&lt;p&gt;Svelte is still in development, but it is already attracting a lot of attention. The framework has been designed from the ground up to be efficient and lightweight, and it offers a lot of advantages over other frameworks such as Angular and React. &lt;/p&gt;

&lt;p&gt;One of the biggest advantages of Svelte is its small footprint. The framework is only about 2.5 KB in size, making it one of the smallest frameworks available. This makes it ideal for use in mobile applications and other small devices. &lt;/p&gt;

&lt;p&gt;Svelte is also very fast. It has been designed to take advantage of modern hardware, and it can handle large amounts of data quickly and efficiently. This makes Svelte a good choice for creating powerful web applications. &lt;/p&gt;

&lt;p&gt;Svelte is still in development, but it looks like it is going to be a popular framework. It offers a lot of advantages over other frameworks, and it is small and efficient. If you are looking for a new JavaScript framework, Svelte is definitely worth considering. &lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;Kindly follow me for more topics on Svelte &lt;a href="https://GitHub.com/yakumwamba"&gt;https://GitHub.com/yakumwamba&lt;/a&gt;&lt;br&gt;
Twitter.com/brianlemba&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>javascript</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Changelog #0010 — 🪄 Prettify JSON, refined cursors, custom macOS window, and more</title>
      <author>Cláudia Delgado</author>
      <pubDate>Mon, 24 Jan 2022 23:53:47 +0000</pubDate>
      <link>https://dev.to/pie/changelog-0010-prettify-json-refined-cursors-custom-macos-window-and-more-25m2</link>
      <guid>https://dev.to/pie/changelog-0010-prettify-json-refined-cursors-custom-macos-window-and-more-25m2</guid>
      <description>&lt;p&gt;We’re excited to announce a number of improvements in HTTPie for Web &amp;amp; Desktop, and &lt;a href="https://httpie.io/blog/httpie-3.0.0"&gt;HTTPie for Terminal 3.0&lt;/a&gt;. Check out what's new 👇&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#httpie-for-web-amp-desktop"&gt;
  &lt;/a&gt;
  HTTPie for Web &amp;amp; Desktop
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#refined-cursor-system"&gt;
  &lt;/a&gt;
  ✋ Refined cursor system
&lt;/h3&gt;

&lt;p&gt;You may have already noticed that we obsess over user experience in places where humans meet APIs. And we like to simplify things, a lot.&lt;br&gt;
This time, we focused on simplifying feedback mechanisms in HTTPie for Web &amp;amp; Desktop and completely revamped its cursor system.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gW44Ijay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0010/cursor-changes-LLCF25EB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gW44Ijay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0010/cursor-changes-LLCF25EB.png" alt="Cursor changes" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pointer cursors were invented to indicate links on the Web. It is tempting to adopt them for all active elements in apps that use web technologies, like we initially did. However, after a thorough research, we decided to say goodbye to pointer cursors.&lt;br&gt;
We continue to use them for elements that are actual web links. But just like modern native apps, you’ll now see subtle hover effects and regular cursors for all other active UI elements instead. This makes the UI feel quieter and the experience more pleasant. Very HTTPie.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#custom-title-bar-on-macos"&gt;
  &lt;/a&gt;
  🍎 Custom title bar on macOS
&lt;/h3&gt;

&lt;p&gt;Speaking of design: we—and our beta users—didn’t like the default title bar in the desktop app. It wasted space and didn’t fit our custom design – the entire window should blend in with the app’s personality. And now, starting with macOS, it does:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ofotz6ec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0010/macos-titlebar-G6ZGRYD5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ofotz6ec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0010/macos-titlebar-G6ZGRYD5.png" alt="MacOS title bar" width="880" height="591"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you’re on Windows or Linux, fear not. Your app window will get a facelift in a future release as well.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prettify-json"&gt;
  &lt;/a&gt;
  🪄 Prettify JSON
&lt;/h3&gt;

&lt;p&gt;To ensure the body of your request is humanly readable and navigable, you can now use the prettify feature. It will automatically format your code so that your brain’s free to do other things:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--baZcbhvA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0010/prettify-DAGAA3N5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--baZcbhvA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0010/prettify-DAGAA3N5.png" alt="Prettify" width="880" height="624"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just look for the wand icon at the bottom of the code editor 🪄&lt;br&gt;
This feature is available for JSON now, and we’ll be adding support for other formats in future releases.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#more-collection-icons"&gt;
  &lt;/a&gt;
  💟 More collection icons
&lt;/h3&gt;

&lt;p&gt;Collection icons have become a second nature to our users. We thought it was time to add 8 more of them. Check them out!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9S8ycFaB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0010/new-icons-6W7ADTKA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9S8ycFaB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://httpie.io/Blog/changelog-0010/new-icons-6W7ADTKA.png" alt="New icons" width="880" height="624"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improvements"&gt;
  &lt;/a&gt;
  ✨ Improvements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;There are many other small UI improvements to make the experience more coherent. How many can you spot?&lt;/li&gt;
&lt;li&gt;You can now edit the name and icon of a collection inline from its tab. Simply click on these elements.&lt;/li&gt;
&lt;li&gt;If you click on the collection icon in a request tab, it will now take you to its collection tab.&lt;/li&gt;
&lt;li&gt;Keyboard-mainly user? You don’t need to leave your keys anymore when navigating dialogs. Enter-to-submit now works for all off them.&lt;/li&gt;
&lt;li&gt;Have you named a request but, now you’d like to have the dynamic URL-based name back instead? Just clear it in the edit dialog.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#fixes"&gt;
  &lt;/a&gt;
  🪲 Fixes
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The context menu in tabs doesn’t work in a moody way anymore.&lt;/li&gt;
&lt;li&gt;Hopefully, you never noticed but extremely long collection names caused minor layout issues. Those issues were fixed and there’s now a limit for collection and request names. Hopefully, you won’t reach that limit either.&lt;/li&gt;
&lt;li&gt;Expand/collapse icons would disappear from the response if you edited the body of the request. Now they don’t.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#httpie-for-terminal"&gt;
  &lt;/a&gt;
  HTTPie for Terminal
&lt;/h2&gt;

&lt;p&gt;In every other changelog so far, we posted the ongoing improvements to the &lt;a href="https://github.com/httpie/httpie"&gt;development version&lt;/a&gt; of &lt;a href="https://httpie.io/cli"&gt;HTTPie for Terminal&lt;/a&gt;.&lt;br&gt;
Today, we are thrilled to announce that those developments were wrapped up into the final 3.0 release! It includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;🌲 Nested JSON&lt;/li&gt;
&lt;li&gt;🔌 Plugin Manager&lt;/li&gt;
&lt;li&gt;⏱️ Response Metrics&lt;/li&gt;
&lt;li&gt;🚀 Speed-ups&lt;/li&gt;
&lt;li&gt;🎨 Improved UI/UX&lt;/li&gt;
&lt;li&gt;🙌 And much more!
We have a long separate post covering this best-ever release, check it out!
👉 What’s new in &lt;a href="https://httpie.io/blog/httpie-3.0.0"&gt;HTTPie for Terminal 3.0 →&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#happy-testing-and-see-you-next-week"&gt;
  &lt;/a&gt;
  Happy testing, and see you next week!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;💁🏻‍♀️ If you’re not on the private beta yet, you can &lt;a href="https://httpie.io/beta"&gt;join the waitlist here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;👉 You can also follow &lt;a href="https://twitter.com/httpie"&gt;@httpie&lt;/a&gt; and join our &lt;a href="https://httpie.io/discord"&gt;Discord community&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;👩‍💻 We’re looking for new colleagues in &lt;a href="https://httpie.io/jobs"&gt;engineering and design roles&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Originally published on &lt;a href="https://httpie.io/blog/changelog-0010"&gt;HTTPie blog&lt;/a&gt;.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Why an Autistic Developer is Your Next Great Hire w/ Matt Nigh of UW Medicine</title>
      <author>Conor Bronsdon</author>
      <pubDate>Mon, 24 Jan 2022 23:44:25 +0000</pubDate>
      <link>https://dev.to/linearb/why-an-autistic-developer-is-your-next-great-hire-w-matt-nigh-of-uw-medicine-51ea</link>
      <guid>https://dev.to/linearb/why-an-autistic-developer-is-your-next-great-hire-w-matt-nigh-of-uw-medicine-51ea</guid>
      <description>&lt;p&gt;Like most fast-growing companies, LinearB spends WAY too much time trying to hire developers.&lt;/p&gt;

&lt;p&gt;So when we came across a &lt;a href="https://medium.com/leading-literally/now-is-the-time-to-hire-autistic-talent-932d4f291644"&gt;brilliant article about hiring autistic talent&lt;/a&gt;, we knew we had to have its author Matt Nigh on the podcast. Matt is one of the most prominent thought leaders on neurodiversity in the workplace.&lt;/p&gt;

&lt;p&gt;Matt himself was diagnosed with autism late in life following a very unique job interview at Google. He’s since spent countless hours researching, writing and talking about how companies can not only bring neurodiverse talent into the fold, but why engineering teams thrive when they do.&lt;/p&gt;

&lt;p&gt;In this episode of Dev Interrupted we talk with Matt about best practices in recruiting, hiring and working with neurodiverse coders, how his interview at Google interview led to an autism diagnosis, the ways Matt’s data team at the University of Washington is helping combat COVID and what private companies can learn from the ROI metrics of universities and public institutions.&lt;/p&gt;

&lt;p&gt;Dan and Matt also took some time to geek out about GitLab.&lt;/p&gt;

&lt;p&gt;We hope this conversation was as enlightening for you as it was for us and we hope it helps you find your next great hire.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://open.spotify.com/embed/episode/4ZYGEMqBFzdfDi31Tdxqqa" width="100%" height="232px"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  Episode Highlights Include:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;How Matt’s &lt;a href="https://www.autismspeaks.org/what-autism"&gt;autism diagnosis&lt;/a&gt; changed his career&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hbr.org/2017/05/neurodiversity-as-a-competitive-advantage"&gt;Hiring&lt;/a&gt; neurodiverse talent&lt;/li&gt;
&lt;li&gt;Inclusive interview best practices for &lt;a href="https://devinterrupted.com/adhd-in-the-workplace-3-ways-you-can-help/"&gt;neurodiverse&lt;/a&gt; candidates&lt;/li&gt;
&lt;li&gt;ROI metrics: public sector vs private sector&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.uwmedicine.org/coronavirus"&gt;UW’s&lt;/a&gt; data team and its efforts to combat COVID&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#youre-invited-to-interact-on-april-7th-its-online-amp-its-free"&gt;
  &lt;/a&gt;
  &lt;a href="https://devinterrupted.com/event/interact/"&gt;You're Invited to INTERACT on April 7th - It's online &amp;amp; it's free!&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Back by popular demand, Dev Interrupted has announced it will be hosting the next iteration of its engineering leadership conference, INTERACT 2.0.  The community-driven, digital conference makes its return April 7th, 2022. Designed by engineering leaders, for engineering leaders INTERACT 2.0 will feature dozens of speakers, 100s of engineers and engineering leaders, and is totally free.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bj6LXV7C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xhtonct1vkpjhrtzfl3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bj6LXV7C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2xhtonct1vkpjhrtzfl3.png" alt="Join INTERACT at https://devinterrupted.com/event/interact/" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>inclusion</category>
      <category>podcast</category>
      <category>techtalks</category>
      <category>career</category>
    </item>
    <item>
      <title>What Is Ethereum? The Basics</title>
      <author>grin2b</author>
      <pubDate>Mon, 24 Jan 2022 23:36:42 +0000</pubDate>
      <link>https://dev.to/grin2b/what-is-ethereum-the-basics-3jcd</link>
      <guid>https://dev.to/grin2b/what-is-ethereum-the-basics-3jcd</guid>
      <description>&lt;h2&gt;
  &lt;a href="#the-basics"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Basics&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Ethereum is a network of computers which collectively form the Ethereum Virtual Machine (EVM), which updates the state of the Ethereum blockchain. A blockchain is a publicly available and distributed database, which acts as the memory of the EVM. One role of this memory is acting as a ledger, saying who owns how much Ether, the cryptocurrency supported by the Ethereum network. The computers participating in this network are called “nodes” or “miners”, and the computational power they contribute is what keeps the EVM running. For their work, they are rewarded with Ether, hence the term “miners”. The EVM can also run programs called “smart contracts”, which are programs stored on the blockchain and run on the EVM.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#blockchain"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Blockchain&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;A blockchain is a publicly available and distributed database, which is stored and kept up to date by all of the computers which form the EVM. These computers are also known as “miners”. The “blocks” in the blockchain refer to blocks of transactions/state updates, and the “chain” refers to how the current state of the blockchain is the end result of a chain of those blocks. The EVM adds blocks of transactions to the blockchain by attacking a cryptographic algorithm with brute force, using the computers participating in the network. When the transactions are processed, the current state of the blockchain is updated to reflect the changes in those transactions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cryptocurrency"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Cryptocurrency&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;A cryptocurrency is a digital asset, whose ownership is kept track of in a blockchain. This is called a distributed ledger, and it designates how much cryptocurrency (in this case, Ether) belongs to each address. Because the blockchain is distributed and publicly available, everyone can see how much cryptocurrency belongs to each address. Owners of that cryptocurrency can send their coins to other addresses, in order to make purchases, send coins to friends, or send coins to exchanges to sell those coins for fiat (USD, EUR, etc.). Owners are able to control the coins they hold by using the private key for their address, a number of 32 random bytes, to generate a transaction on the Ethereum network. For those familiar with cryptographic algorithms, the address can be thought of as a public key, and the private key can be thought of as a private key. (If you lose your private key, the coins in your address are locked away forever!) When transactions are placed on the Ethereum network to be processed, they are confirmed and finalized by miners.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mining"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Mining&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Mining is how blocks of transactions are added to the blockchain. The computing power lent by nodes on the Ethereum network are used to ensure that transactions placed on the Ethereum network are valid, and once they are validated, they are placed on the blockchain. This validation occurs by having miners run a brute force attack against the combination of the existing blockchain and the data from the new block, to see whether they can guess an 8 byte value which can be verified as coming from the private key. This value is called a “nonce”, which is short for “number once”, and it has this name because even though the same private key(s) are used to generate that nonce, the nonce will be wildly different if the transactions on the block are even slightly different. The public key is used in the algorithm that verifies whether the nonce generated by a miner is a valid match, and once the puzzle of finding that nonce has been solved, the miner announces to the network that it has validated a block to be added to the blockchain. Other miners can validate this claim extremely quickly, and when a majority of miners come to a consensus, that block is added to the blockchain. The use of the public key in validating transactions is what protects the network from a bad actor placing fraudulent transactions on the blockchain: A bad actor cannot add a fraudulent block of transactions to the blockchain, because they can’t generate a valid nonce for a given public key (i.e. address) without the corresponding secret key.&lt;a href="https://ethereum.org/en/developers/docs/consensus-mechanisms/pow/"&gt;[1]&lt;/a&gt; The miner which found the solution is rewarded with some Ether to incentivize participation in the network. This Ether is called a “tip”, and is a portion of the “gas”, i.e., a fee paid by the originator of the transaction to compensate the miners for executing that transaction.&lt;a href="https://ethereum.org/en/developers/docs/gas/#what-is-gas"&gt;[2]&lt;/a&gt; This type of process is called a “consensus mechanism”, since it is a way by which participants in the network come to a consensus as to which transactions are valid. The particular consensus mechanism described here is called “Proof-of-work”, since the miner is providing a valid nonce, i.e., a proof of the work it has performed. There is another consensus mechanism on the Ethereum network called “proof-of-stake”, which is not discussed here.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#smart-contracts-aka-dapps"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Smart Contracts, aka DApps&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;So far, everything that has been described about Ethereum mining is more-or-less the same as Bitcoin, alongside many other cryptocurrencies. What sets Ethereum apart (alongside other networks such as Solana or Polkadot) is its ability to execute smart contracts, aka “decentralized applications” or “DApps”. To quote the Ethereum docs, “A ‘smart contract’ is simply a program that runs on the Ethereum blockchain. It's a collection of code (its functions) and data (its state) that resides at a specific address on the Ethereum blockchain.”&lt;a href="https://ethereum.org/en/developers/docs/smart-contracts/#what-is-a-smart-contract"&gt;[3]&lt;/a&gt; Smart contracts are written in languages like Solidity and Vyper, and any given smart contract can execute any other smart contract and so forth.&lt;a href="https://ethereum.org/en/developers/docs/smart-contracts/#composability"&gt;[4]&lt;/a&gt; Data used by smart contracts can either be stored on the blockchain, which lets it persist after a given execution of a smart contract; or it can be stored in memory, which is much cheaper, although the data disappear once the execution is completed.&lt;a href="https://ethereum.org/en/developers/docs/smart-contracts/anatomy/#data"&gt;[5]&lt;/a&gt; Example uses of smart contracts include decentralized finance (“DeFi”), non-fungible tokens (“NFTs”), and literal contracts for legal agreements, such as real estate, marriage, or corporate ownership, since the rules of the contract can be written in code, and signing the contract requires the secure keys of all parties involved.&lt;a href="https://www.gemini.com/cryptopedia/smart-contract-examples-smart-contract-use-cases#section-smart-contracts-and-blockchain-in-the-legal-industry"&gt;[6]&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#takeaway"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Takeaway&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Ethereum is a network running a virtual computer, called the Ethereum Virtual Machine. To store data in memory, the EVM uses a blockchain, which is a distributed and publicly available database. The native cryptocurrency of Ethereum is called Ether. To add data to the blockchain, this computer uses mining, which is a cryptographic brute force attack to ensure that only valid transactions are added to the blockchain. Ethereum also supports smart contracts, which are computer programs uploaded onto the blockchain, which can be executed in a similar fashion to how transactions are added to the network. These smart contracts can store data on the blockchain, and they can call one another, resulting in potentially complex programs. Smart contracts have many current uses in finance, identifying ownership, and legal agreements.&lt;/p&gt;

</description>
      <category>ethereum</category>
      <category>blockchain</category>
    </item>
    <item>
      <title>Want to learn something new? Consistency is the key</title>
      <author>Peter Swartwout</author>
      <pubDate>Mon, 24 Jan 2022 23:20:56 +0000</pubDate>
      <link>https://dev.to/focusedlabs/want-to-learn-something-new-consistency-is-the-key-30ap</link>
      <guid>https://dev.to/focusedlabs/want-to-learn-something-new-consistency-is-the-key-30ap</guid>
      <description>&lt;p&gt;If you've ever taken a fitness class, you've heard the instructor talk about &lt;strong&gt;&lt;em&gt;consistency&lt;/em&gt;&lt;/strong&gt;. It's not about how fast you pedal or how much weight you lift. It's about showing up, doing your best and not giving up. Regularly.&lt;/p&gt;

&lt;p&gt;It's the same for your brain. If you are learning a new framework, a new programming language, or working on a side project to expand your skills, you are &lt;strong&gt;&lt;em&gt;much&lt;/em&gt;&lt;/strong&gt; better off doing a small amount every day, or several times a week, as opposed to bingeing. When I hear a friend say something like "I'm dedicating this coming weekend to learning React" I cringe because I fear they will go back to their day job and forget everything from the weekend by the next weekend. &lt;/p&gt;

&lt;p&gt;But don't take my word for it. The science backs this up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#frequency"&gt;
  &lt;/a&gt;
  Frequency
&lt;/h2&gt;

&lt;p&gt;In a 2011 study at University of California Irvine’s Center for the Neurobiology of Learning and Memory, researchers proved that when neurons interact frequently the bonds between them grow stronger and more information is retained for later use:&lt;/p&gt;

&lt;p&gt;"When learning new things, memory and recall are strengthened by &lt;strong&gt;&lt;em&gt;frequency&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;recency&lt;/em&gt;&lt;/strong&gt;. The more we practice and rehearse something new and the more recently we have practiced, the easier it is for our brain to transmit these experiences efficiently and store them for ready access later. This process is called fluency." &lt;a href="https://trainingindustry.com/articles/content-development/how-the-brain-learns"&gt;1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In short, think about something frequently and it will stick. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recency"&gt;
  &lt;/a&gt;
  Recency
&lt;/h2&gt;

&lt;p&gt;The concept is simple. Our brains retain the information we have received most recently, but only for a short time. This makes sense given the huge about of incoming information the brain has to process. Why retain the license number of the car in front of you for more than 10 seconds?&lt;/p&gt;

&lt;p&gt;But if you want to deliberately retain new information, the trick is &lt;strong&gt;&lt;em&gt;cumulative review&lt;/em&gt;&lt;/strong&gt;. Every time you start a reading session, or coding session, spend the first 5 or so minutes reviewing what you did in the last session. Once a week, review something from much earlier that you might now be fuzzy on. So simple but it will return huge dividends. This technique has long been known to educators but can be challenging to implement when self-guided.&lt;/p&gt;

&lt;p&gt;When I was first learning backgammon (a game that is wonderfully complex when you get past the basics) I proved that this technique works and I still use it today. I start every study session with a short review of what I did in the previous session. Once a week I review concepts I haven't looked at for awhile. This has helped my game tremendously.&lt;/p&gt;

&lt;p&gt;The same technique works for all learnings - technical and in life. Follow these two simple rules consistently:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Study frequently, every day if you can manage it&lt;/li&gt;
&lt;li&gt;Review regularly&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Good luck with whatever you are seeking to learn!&lt;/p&gt;

</description>
      <category>programming</category>
      <category>career</category>
      <category>productivity</category>
      <category>learning</category>
    </item>
    <item>
      <title>101. Symmetric Tree</title>
      <author>Melissa Guachun </author>
      <pubDate>Mon, 24 Jan 2022 22:57:36 +0000</pubDate>
      <link>https://dev.to/melguachun/101-symmetric-tree-2dog</link>
      <guid>https://dev.to/melguachun/101-symmetric-tree-2dog</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--veyM3MNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3chsnmllh6jg71baaiy2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--veyM3MNs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3chsnmllh6jg71baaiy2.jpg" alt="Illustration from The Giving Tree by Shell Silverstein. Image is a boy hugging the tree. The tree is leaning forward, as if it were looking and embracing the boy." width="598" height="421"&gt;&lt;/a&gt;&lt;br&gt;
This is the first binary tree problem in LeetCode! Since they're very common in technical assessments, I want to break this problem down as much as possible. &lt;br&gt;
The problem asks us, given the root of a binary tree,  check whether it is a mirror of itself (i.e, symmetrical).&lt;br&gt;
Lets look at the first example: symmetrical means that if we start at the root of 1 and follow the dotted line, the binary tree is  split in half. The right side of the node should be a mirrored image of the left node and vice versa. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9mMKHh-x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ah925xt84pq02xttc7yp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9mMKHh-x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ah925xt84pq02xttc7yp.png" alt="Binary tree that is symmetrical. " width="863" height="869"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To help us traverse the binary tree, let's label the left node as root A and the right node as root B. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qldiIwwH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ouht50cd034npbqdc0r4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qldiIwwH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ouht50cd034npbqdc0r4.png" alt="Binary tree with two symmetrical branches. Root and branch A ! and branch B are identified" width="853" height="917"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But before we start coding we have to solve for possible edge cases. Like what if the nodes don't match? Or if there aren't any nodes at all?&lt;/p&gt;

&lt;p&gt;Let's think about it. If there are no nodes, meaning there is neither a branch A or a branch B, then we can return True because there are no nodes to compare. We can translate this into conditional logic, like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if not a and not b: 
   return True
#if there are no nodes, none to compare return True
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now what if the nodes don't match? Let's use the same conditional knowledge.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if not a or not b: 
   return False
# if the nodes do not match return False
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Given the starter code, we already have code for our edge cases:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -&amp;gt; bool:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -&amp;gt; bool:
        def same_tree(a,b):
            if not a and not b: 
                return True
            if not a or not b: 
                return False
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we have code to handle edge cases if there are no nodes or if the nodes do not match. The next step is to determine if the values of branches are symmetrical. To help us achieve symmetry, I labeled the nodes as followed:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1xL7hihF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgxvqgfozy5qc62emzvj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1xL7hihF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mgxvqgfozy5qc62emzvj.png" alt="Binary tree labeled as A and B. Children nodes labeled as A left, left, A left, right, B right, left, and B right, right" width="863" height="869"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From this diagram, we can see that root A left left is similar to root B right right and root A left right is equal to root B right left.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;root left left == root right right
root left right == root right left
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use this logic to determine if the left and right nodes are similar. The conditional above will work for our best case that both branches are symmetrical, which we would then return True. &lt;br&gt;
In this step we have to do two things to check a branch's symmetry. We must check the value of branch A and branch B and check if &lt;code&gt;same_tree(a.left,b.right)&lt;/code&gt; and &lt;code&gt;same_tree(a.right,b.left)&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -&amp;gt; bool:
        def same_tree(a,b):
            if not a and not b: 
                return True
            if not a or not b: 
                return False
            if a.val == b.val and same_tree(a.left,b.right) and same_tree(a.right,b.left): 
                return True
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the values of branch A and branch B are symmetrical, we will return it. Else we will return it as false.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -&amp;gt; bool:
        def same_tree(a,b):
            if not a and not b: 
                return True
            if not a or not b: 
                return False
            if a.val == b.val and same_tree(a.left,b.right) and same_tree(a.right,b.left):  #if values are the same, if conditional matches
                return True
            else:
                return False
        return same_tree(root.right,root.left)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>beginners</category>
      <category>algorithms</category>
      <category>python</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Joining the DEV Team (again)!</title>
      <author>Brian Bethencourt</author>
      <pubDate>Mon, 24 Jan 2022 22:08:23 +0000</pubDate>
      <link>https://dev.to/devencourt/joining-the-dev-team-again-2fp4</link>
      <guid>https://dev.to/devencourt/joining-the-dev-team-again-2fp4</guid>
      <description>&lt;p&gt;Hey again, all! &lt;/p&gt;

&lt;p&gt;If you frequent DEV Community or have ordered from our shop, you have likely seen me around. I originally joined the DEV Team in June of 2019 as a Business Development and Growth Intern. Although I had been an intern for some time, my colleagues have always respected me as a significant part of the team through-and-through. &lt;/p&gt;

&lt;p&gt;Two-and-a-half years later, I graduated from The College of New Jersey with my Bachelor's in English. &lt;strong&gt;Now, I'm becoming a part of the DEV Team full-time as a Developer Marketing Associate&lt;/strong&gt;! It's a really exciting change and I'm looking forward to every part of it. &lt;/p&gt;

&lt;p&gt;Between work and school, I have not had a lot of time to improve my programming skills and engage with the community on a personal level. I hope to change this over the course of the next few months. I'm certain you will all be seeing more of me as I tackle this new position. Wish me luck!&lt;/p&gt;

&lt;p&gt;If you have any questions or comments — or just want to chat — don't hesitate to reach out! Shoot me an email or a DM on the DEV Community Discord (Where I'll be waaaaay quicker to respond to you. &lt;a href="https://discord.gg/rxVwWrR8jb"&gt;Join&lt;/a&gt; if you haven't yet!). &lt;/p&gt;

</description>
      <category>meta</category>
      <category>career</category>
      <category>personal</category>
    </item>
  </channel>
</rss>
