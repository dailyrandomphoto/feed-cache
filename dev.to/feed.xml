<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why I switched to Pop_OS?</title>
      <author>Krishnakanth Alagiri</author>
      <pubDate>Sat, 16 Jan 2021 11:53:36 +0000</pubDate>
      <link>https://dev.to/bearlike/why-i-switched-to-popos-16b8</link>
      <guid>https://dev.to/bearlike/why-i-switched-to-popos-16b8</guid>
      <description>&lt;p&gt;As of 2020, Windows is still the dominant desktop OS comprising nearly 90% of it's demographic and I was in it for over 14 years. It was initially fast but as time progressed, the Windows updates stacked up along with previously installed softwares. Adding gasoline to the fire, Windows decided to bake advertisements and even more telementary services right into the operating system.&lt;/p&gt;

&lt;p&gt;Then one day, I wanted to print a theatre ticket in a rush and turned on my computer only to see...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B-Iw4sS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/AwkKfb9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B-Iw4sS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/AwkKfb9.gif" alt="windows-updating"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now I finally chose to migrate to Linux and after careful experimentations with various distros and DEs, I came across &lt;a href="https://pop.system76.com/"&gt;&lt;em&gt;Pop!_OS&lt;/em&gt;&lt;/a&gt; by &lt;em&gt;System76&lt;/em&gt; and loved it straight out of the box.&lt;/p&gt;

&lt;p&gt;So why do I have so much love for a Ubuntu based distribution? Well, let me explain.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-linux-is-free-and-thats-a-great-price" class="anchor"&gt;
  &lt;/a&gt;
  1. Linux is free and that's a great price!
&lt;/h2&gt;

&lt;p&gt;This is true not only for the operating system and the kernel but also for all the software that comes bundled with it. Also in most cases, there will be an open-source alternative for any paid application in Windows like the LibreOffice Suite instead of Microsoft Office.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gXys5udS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/PcCGN1T.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gXys5udS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/PcCGN1T.gif" alt="free-real-estate"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-popos-is-beautiful-and-functional" class="anchor"&gt;
  &lt;/a&gt;
  2. Pop!_OS is beautiful and functional.
&lt;/h2&gt;

&lt;p&gt;Now to the fun part. Pop!_OS is undoubtedly one of the best-looking desktop environments I have ever used. I would suppose it is tied with Elementary OS, Deepin and Budgie DE. While it's Gnome desktop environment, has its fair share of criticisms, it does hold true to its values of getting out of your way to get work done. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_3XEAskV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-1366/assets/img/blogs/pop-os/overall.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_3XEAskV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-1366/assets/img/blogs/pop-os/overall.jpg" alt="kk-popos"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;/p&gt;

&lt;p&gt;GNOME has no active task management, no desktop icons, no application menu, no dock or taskbar. Activities are an easy concept but coming from Windows, I took a while to get used to switching windows through the activities or the keyboard. &lt;/p&gt;

&lt;p&gt;However, if the default design and working are not up to your fondness, then you can customize and tweak it however you want using the GNOME Tweak Tool. You can even make it to look and behave like macOS or Windows complete with a start menu. &lt;/p&gt;

&lt;p&gt;As far as functionality goes, if you are used to GNOME then you will feel at home in Pop!_OS. You boot straight to your desktop, and the system tray is pretty minimal by default helping you focus on whatever you're onto. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#automatic-window-tiling" class="anchor"&gt;
  &lt;/a&gt;
  Automatic Window Tiling
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DAyDyGrf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-1366/assets/img/blogs/pop-os/window_tile.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DAyDyGrf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-1366/assets/img/blogs/pop-os/window_tile.jpg" alt="Automatic Window Tiling"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As of Pop!_OS 20.04, it has released an automatic window tiling manager. This enables you to tile and arranges all open windows at the click of a button which is remarkably helpful when multitasking.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#popos-makes-life-easier-for-developers" class="anchor"&gt;
  &lt;/a&gt;
  Pop!_OS makes life easier for Developers.
&lt;/h4&gt;

&lt;p&gt;Pop!_OS can do everything Ubuntu can do. But its dedicated tools, attractive looks, and refined work flow provide a smooth Development. It supports tons of programming languages and useful programming tools natively. Nvidia drivers with CUDA support comes preinstalled which enables developers to speed up compute-intensive applications.&lt;/p&gt;

&lt;p&gt;There are features like the New Keyboard shortcuts, Increased Compatibility, New App launcher and even more that you shoud take a look at. Overall, The Pop!_OS is smooth, functional, and melts right into the background just as it was intended to.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-popstore-has-everything" class="anchor"&gt;
  &lt;/a&gt;
  3. Pop!_Store has Everything.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RPWaANli--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-1366/assets/img/blogs/pop-os/Popshop.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RPWaANli--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-1366/assets/img/blogs/pop-os/Popshop.jpg" alt="Pop Shop"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pop!_Shop is a software store for Pop!_OS as to Play Store is for Android. Here, you can search and install any package with just a click of a button. To add more power to the store, Pop 20.04 brings Flatpak support to Pop Shop. This implies that if you want to download any application, you can now also pull packages from the Flathub repository along with Pop!_OS and Ubuntu repo.&lt;/p&gt;

&lt;p&gt;Flatpak/Flathub is a widely recognised universal package management tool and store that contains a number of applications. &lt;strong&gt;&lt;a href="https://thekrishna.in/blogs/blog/linux-packages/"&gt;You can learn more about Flatpaks in my previous post&lt;/a&gt;&lt;/strong&gt;. Hence, you now have access to more packaged applications with high privacy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-the-nvidia-driver-situation" class="anchor"&gt;
  &lt;/a&gt;
  4. The "Nvidia Driver" Situation.
&lt;/h2&gt;

&lt;p&gt;Nearly all major Linux distributions have come a long way in the past 2 years in making the proprietary Nvidia driver available to their users. Here again, there’s a subtle yet a functional difference in the way Pop!_OS handles Nvidia drivers compared to its alternatives that hybrid graphics laptop users like me would especially appreciate.&lt;/p&gt;

&lt;p&gt;When you download the Nvidia version of the Pop!_OS ISO, the Nvidia graphics driver is active during the OS installation process, not merely “available” to install. That means no risk of perplexing black screens which is more common with the open-source “Nouveau” driver for Nvidia hardware. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qk9mhl58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/assets/img/blogs/pop-os/Hybrid.jpg%3Ftr%3Dh-440" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qk9mhl58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/assets/img/blogs/pop-os/Hybrid.jpg%3Ftr%3Dh-440" alt="kk-hybrid-graphics"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#hybrid-graphics" class="anchor"&gt;
  &lt;/a&gt;
  Hybrid Graphics
&lt;/h4&gt;

&lt;p&gt;Pop!_OS supports hybrid graphics straight out of the box. It includes the &lt;code&gt;system76-power&lt;/code&gt; package, which includes the ability to switch between integrated, NVIDIA, and hybrid graphics modes.&lt;br&gt;
This means once you launch your application in Hybrid Graphics mode with a dedicated Graphics card, your laptop runs on the battery-saving Intel GPU and only uses the NVIDIA GPU for applications running.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-privacy-control-and-support" class="anchor"&gt;
  &lt;/a&gt;
  5. Privacy, Control and Support
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#privacy-and-security" class="anchor"&gt;
  &lt;/a&gt;
  Privacy and Security
&lt;/h4&gt;

&lt;p&gt;While no operating system is absolutely risk-free, Windows is a big target for viruses and malware due to its majority market share. With Linux as a whole, you only need to be smart, stick to trusted software repositories, and avoid using risky programs such as Adobe Flash or free_ram.sh. Linux is more secure than Windows primarily because of the way it's designed and handles user permissions. This is one reason why most of the web runs on Linux. Since most packages you install would be open-source, their codebase is public and would have been reviewed by more developers for bugs and security vulnerabilities.&lt;/p&gt;

&lt;p&gt;Speaking of security, Pop!_OS is so far the only Linux distribution that enables pre-installed full-disk encryption out of the box. Moreover, you can use the ‘Refresh install’ feature to reset your operating system while preserving the files in your Home folder.&lt;br&gt;
Windows chooses when to install updates, and it displays a message declaring that your computer is going to be rebooted. While with most linux distros, you get to decide when those updates are installed, and in most cases, the updates are installed without rebooting the system.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#control" class="anchor"&gt;
  &lt;/a&gt;
  Control
&lt;/h4&gt;

&lt;p&gt;Compared to Windows or macOS, Linux support is easier to find, and there are dozens of forums, subreddits, chat rooms, and even more websites committed to helping people receive and understand Linux. Unlike Microsoft support, which is mostly from an employee, Linux support usually comes from enthusiasts and developers.&lt;/p&gt;

&lt;p&gt;Every single part of your Distribution can be adjusted if you have the time, will and support. KDE Fan? Remove GNOME from Pop!_OS and install KDE Instead. System services slowing your boot? Disable and mask them. In fact, you can even write your own scripts and packages if you have the time and effort.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#personal-recommendations" class="anchor"&gt;
  &lt;/a&gt;
  Personal Recommendations
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-install-refind-boot-manager" class="anchor"&gt;
  &lt;/a&gt;
  1. Install rEFInd Boot Manager
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Visit &lt;a href="https://www.rodsbooks.com/refind/"&gt;rEFInd Documentation&lt;/a&gt; for Installation and theming instructions&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W_auGRn---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-1366/assets/img/blogs/pop-os/refind.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W_auGRn---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-1366/assets/img/blogs/pop-os/refind.jpg" alt="kk-refind-boot-manager"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're Dual Booting Windows and Pop!_OS, I highly recommend you to use rEFInd Boot Manager instead/on-top of the systemd-bootloader. I had to manually adjust both GRUB and systemd-boot configurations every time Windows had a major update, while rEFInd scans for kernels on every boot and is more adaptive and is less reliant on configuration files. Plus rEFInd has more eye candy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-bridging-gaps-between-oses-in-a-system" class="anchor"&gt;
  &lt;/a&gt;
  2. Bridging gaps between OSes in a system
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#21-why-didnt-i-delete-windows-for-good" class="anchor"&gt;
  &lt;/a&gt;
  2.1 Why didn't I delete Windows for good?
&lt;/h4&gt;

&lt;p&gt;Despite Linux growing better every day, there are still a lot of programs, softwares and hardware that are exclusively made for Windows due to majority market share and the open-source alternatives are not essentially good enough. Adobe Photoshop, Microsoft Office and Epic Games Stores are a great example of it. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#22-create-a-common-partition" class="anchor"&gt;
  &lt;/a&gt;
  2.2 Create a common partition
&lt;/h4&gt;

&lt;p&gt;If you're dual-booting Windows and any other Linux Distibution(s), I strongly advice to &lt;strong&gt;turn off Fast Startup&lt;/strong&gt; in Windows as they make all accessible filesystem read-only in Linux until you fully shut down you Windows. Create an extra NTFS partition for all your OSes to coexist and share common files peacefully.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#23-install-wine-and-create-a-windows-virtual-machine" class="anchor"&gt;
  &lt;/a&gt;
  2.3 Install WINE and create a Windows Virtual Machine
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A_MLkobs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-1366/assets/img/blogs/pop-os/win10-vm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A_MLkobs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-1366/assets/img/blogs/pop-os/win10-vm.jpg" alt="kk-vm-win10"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Not every Windows Program has it's equal Open-Source Linux Alternative so if you're lucky (or savvy) enough, your program might run using Wine on Linux. &lt;a href="https://appdb.winehq.org/"&gt;You can check your application's compatibility on Wine here&lt;/a&gt;. Platforms like &lt;a href="https://lutris.net/"&gt;Lutris&lt;/a&gt; can even install and launch games so you can start playing without the hassle of setting up your games with Wine Linux powered machine. If you can't find your program on the database, give it a shot.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oY1c6XBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-580/assets/img/blogs/pop-os/lutris.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oY1c6XBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://ik.imagekit.io/kk57/tr:w-580/assets/img/blogs/pop-os/lutris.jpg" alt="lutris"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Popular programs like Microsoft Office still doesn't have great compatibility with Wine. So if Wine doesn't work for your program, create a small Windows Virtual Machine and run on it. I created mine using &lt;strong&gt;&lt;a href="https://www.virtualbox.org/"&gt;VirtualBox&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://developer.microsoft.com/en-us/windows/downloads/virtual-machines/"&gt;Windows 10 Development Virtual Machines provided by Microsoft&lt;/a&gt;&lt;/strong&gt;. However, power-demanding programs like Adobe Photoshop still don't well on Virtual Machines and here's is where you have no other option than to boot into your Windows Host.&lt;/p&gt;

</description>
      <category>popos</category>
      <category>linux</category>
      <category>ubuntu</category>
    </item>
    <item>
      <title>Decoding Developer Relations in a Blog</title>
      <author>Manbir Singh Marwah</author>
      <pubDate>Sat, 16 Jan 2021 11:21:05 +0000</pubDate>
      <link>https://dev.to/manbir/decoding-developer-relations-in-a-blog-5823</link>
      <guid>https://dev.to/manbir/decoding-developer-relations-in-a-blog-5823</guid>
      <description>&lt;p&gt;If you're working in the software industry as an engineer or a CxO, or a student majoring in a technical program, or even if you're actively indulged on the social space, chances are that you've come across the DevRel hype by now (and it's totally cool if you haven't, yet). But what exactly is it, and why is it there anyway? This very piece of text aims to introduce you to the &lt;em&gt;'what', 'why' and 'how'&lt;/em&gt; of DevRel along with a few extra bits. So, as &lt;em&gt;Ed Sheeran&lt;/em&gt; says, &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"...just dive right in, and follow my lead!"&lt;/em&gt; 🎶&lt;/p&gt;
&lt;/blockquote&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VlUfYeai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://encrypted-tbn0.gstatic.com/images%3Fq%3Dtbn:ANd9GcRJbNnx-fUvIHLytmI-RW5GkCL7sma6ymPNrA%26usqp%3DCAU" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VlUfYeai--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://encrypted-tbn0.gstatic.com/images%3Fq%3Dtbn:ANd9GcRJbNnx-fUvIHLytmI-RW5GkCL7sma6ymPNrA%26usqp%3DCAU" width="80%"&gt;&lt;/a&gt;&lt;/p&gt;
DevRelCon London 2018






&lt;h2&gt;
  &lt;a href="#the-what" class="anchor"&gt;
  &lt;/a&gt;
  The 'What'
&lt;/h2&gt;

&lt;p&gt;Developer Relations or DevRel is a domain that revolves mostly around software and incorporates people who work as a bridge (and sometimes a router, switch, or gateway 👀 &lt;em&gt;&lt;a href="https://www.geeksforgeeks.org/network-devices-hub-repeater-bridge-switch-router-gateways/"&gt;ref:networking&lt;/a&gt;&lt;/em&gt;) between &lt;strong&gt;products&lt;/strong&gt; (such as APIs, developer platforms or open-source projects) and &lt;strong&gt;developers&lt;/strong&gt;, the backbone of software industry. There are dedicated Developer Relations teams at startups and corporations as they consist of engineers themselves who understand the software ecosystem and developer psychology as a whole so as to serve like a support system. In simpler terms, they make the flow of tech easy while ensuring a mutual growth of people and the business through an intersection, that is 'community'. Sounds cool? Let's intensify.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-why" class="anchor"&gt;
  &lt;/a&gt;
  The 'Why'
&lt;/h2&gt;

&lt;p&gt;Developer Relations rely on three core pillars: &lt;strong&gt;Code&lt;/strong&gt;, &lt;strong&gt;Content&lt;/strong&gt; and &lt;strong&gt;Community&lt;/strong&gt;—popularly known as &lt;em&gt;The 3C Architecture&lt;/em&gt;. So DevRel folks perform a bit of tech, research, marketing, community management and entrepreneurship (some even being CxOs themselves), providing a sense of &lt;em&gt;belongingness&lt;/em&gt; to people around a product. This is done to achieve (but not limited to) the following goals:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Empower people to build products and nurture innovation&lt;/li&gt;
&lt;li&gt;Educate not just developers, but anyone and everyone to learn and stay updated with a technology &lt;/li&gt;
&lt;li&gt;Build trust, which in turn helps in building long-term relationships&lt;/li&gt;
&lt;li&gt;Create a communication loop to drive feedback from users (developers/engineers) to the internal teams behind a product&lt;/li&gt;
&lt;li&gt;Work directly/indirectly with the PMs and stakeholders to define and iterate on KPIs for the product's success&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-how" class="anchor"&gt;
  &lt;/a&gt;
  The 'How'
&lt;/h2&gt;

&lt;p&gt;Now that we know what exactly DevRel is and why it's there, let's take a look at everything these superheroes do. Even though it's tough to sum-up everything in a list, the day-to-day work of a DevRel may include:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Creating content, such as code samples, blogs, articles, video tutorials, documentation, podcasts, etc depending on various use cases&lt;/li&gt;
&lt;li&gt;Presenting wherever developers are; be it virtual or in-person conferences, workshops, meetups or tech-conclaves. They literally fly across the globe, just for people! :')&lt;/li&gt;
&lt;li&gt;Mentoring and judging at hackathons and ideathons&lt;/li&gt;
&lt;li&gt;Staying updated with major technological changes in the industry &lt;/li&gt;
&lt;li&gt;Engaging with people, managing resources and logistics, being a social influencer and thought leader &lt;/li&gt;
&lt;li&gt;Amplifying the voices of developers; this includes any work such as projects, blogs, call for contributions, event CFPs, etc.
&lt;/li&gt;
&lt;li&gt;Coming up with &lt;em&gt;'jugaad'&lt;/em&gt; (an Indian word translating to 'a non resource-intensive hack') for modern (read: unconventional 👀) software development. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DZVLHdUz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/kwEmwFUWO5Ety/giphy.gif%3Fcid%3D82a1493bffdx78lef76gmyoev0zry2viy6tbp6pbz2ffysge%26rid%3Dgiphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DZVLHdUz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media4.giphy.com/media/kwEmwFUWO5Ety/giphy.gif%3Fcid%3D82a1493bffdx78lef76gmyoev0zry2viy6tbp6pbz2ffysge%26rid%3Dgiphy.gif" width="70%/"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#roles-associated-to-developer-relations" class="anchor"&gt;
  &lt;/a&gt;
  Roles associated to Developer Relations
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Developer Advocates&lt;/strong&gt; are those who have some sort of technical background, whether a CS/IT degree, experience in coding either professionally or through working on projects and contributing to the developer communities through content and events. They understand how a product could fit in various use-cases and hold the magic to make people fall in love with the product. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tech Community Managers&lt;/strong&gt; are the folks who may or may not have a coding experience, but are passionate about the tech space and helping people as a whole. They are pro-communicators and have a great understanding on how to influence people for good while ensuring active engagements from the community members and handling the logistics involved. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Developer Evangelists&lt;/strong&gt; are the true ambassadors or Chief Tech Facilitators (CTF - did I just coin a new term there? 👀) aka people with a mic, having a deeper understanding about a product and the wizards who make complex things feel easy. They preach exactly about all the value and goodness that a product provides. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Product / Program Managers&lt;/strong&gt; are the leaders who understand the tech + business perspective of a product inside out. By working directly with the engineering teams, they define the success metrics while understanding the dynamics of shaping a product, and empower people to turn ideas into reality.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Growth Hackers and Marketers&lt;/strong&gt; are those creative heads who drive the graphs of product adoption and build a living, breathing, loyal user base. This is done through marketing and outreach strategies (that often build a 'hype' in the industry) via social channels, emails, blogs and newsletters. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Fun fact: Long time back, someone in the DevRel space had a hard time pronouncing 'Developer Advocate' and ended up pronouncing it as 'Developer Avocado' instead, resulting in the popular reference of avocado (hence the emoji) with advocates and eventually, DevRel professionals.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RpstMJHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.giphy.com/media/TZ2oBnEvY9iMgJWuRS/giphy.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RpstMJHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.giphy.com/media/TZ2oBnEvY9iMgJWuRS/giphy.webp" width="50%/"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-business-model" class="anchor"&gt;
  &lt;/a&gt;
  The Business Model
&lt;/h2&gt;

&lt;p&gt;Different companies have different ways of approaching the developer community. Consider it as a coin with these two sides:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Developers-first&lt;/em&gt;: These are the organizations that work on a B2D model (Business to Developer), and the product itself is purely oriented towards developers. For example, Twilio, GitHub, Atlassian, Stripe and Postman.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Developers-plus&lt;/em&gt;: These are the companies or products whose primary focus is not developers, and thus follow a B2B (Business to Business) or B2C (Business to Consumer) model. For example, Spotify, Slack, Twitter and PayPal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While the Dev-first sector continues to grow rapidly, most of the organizations doing DevRel at this point follow a Dev-plus model. In some companies, the DevRel team(s) report to the engineering department, while in some, they report to product or marketing. In a very few, they even report directly to the sales. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#but-whats-in-there-for-the-devrel-folks" class="anchor"&gt;
  &lt;/a&gt;
  But what's in there for the DevRel folks?
&lt;/h2&gt;

&lt;p&gt;Now you might be wondering, what makes this profession so unique? Why does everyone wants to get into this? Why do DevRel professionals feel so good doing all this and for what?  &lt;/p&gt;

&lt;p&gt;The answer is: &lt;strong&gt;impact&lt;/strong&gt;.✨&lt;/p&gt;

&lt;p&gt;We put people before technology, and we love to help them grow in any and every capacity we can. We love to solve their common (and sometimes not-so-common) issues, and when they appreciate our work in their own way, it just makes our day. It makes us smile our heart out when we see corporations and startups using our products to build and scale their own, young students coming up with interesting ideas and solutions at hackathons, and when they say our work inspires them to do more—that impact is exactly what we live for. &lt;/p&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;To sum it all, DevRel as a domain is so broad that it's a mess. A beautiful mess with an immense learning, leadership and growth opportunity. People expect us to be 'know-it-all' folks, but we're not. No one really is. We too are learning along the way. Being in DevRel is tough and you'll constantly have to thrive and juggle between a diverse set of tasks along with staying updated as things move quick, but that's exactly what makes it all the way more exciting.&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If all this sounds intriguing, I hope to see you in this space sometime in the future. Cheers! &lt;/p&gt;




&lt;p&gt;✍️ &lt;em&gt;with&lt;/em&gt; ❤️ &lt;em&gt;by &lt;a href="https://twitter.com/manbirmarwah"&gt;Manbir&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>devrel</category>
      <category>community</category>
      <category>technology</category>
      <category>entrepreneurship</category>
    </item>
    <item>
      <title>Why Tailwind Isn't for Me</title>
      <author>Jared White</author>
      <pubDate>Sat, 16 Jan 2021 00:59:20 +0000</pubDate>
      <link>https://dev.to/jaredcwhite/why-tailwind-isn-t-for-me-5c90</link>
      <guid>https://dev.to/jaredcwhite/why-tailwind-isn-t-for-me-5c90</guid>
      <description>&lt;p&gt;I've gotten into more than one heated argument on the interwebs lately over &lt;a href="https://tailwindcss.com"&gt;Tailwind CSS&lt;/a&gt;. I'm not proud of this. I don't like being at odds with anybody. I think the folks building Tailwind are talented and nice people. But at a pure technical level, I simply don't like Tailwind. Whoever it was built for, &lt;strong&gt;it was not built for me&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;And in one sense, that's fine. There are &lt;em&gt;tons&lt;/em&gt; of web technologies out there which I'll never use. Doesn't mean they're bad. There are plenty of groovy tech stacks to go around.&lt;/p&gt;

&lt;p&gt;The problem I keep running into however is this increasing popular sentiment that Tailwind &lt;em&gt;is the future&lt;/em&gt; (man). It's &lt;em&gt;the way things should be done&lt;/em&gt;. In other words, it's opinionated and it inspires a cadre of evangelists. Again, on a certain level, that's fine. Rails is very opinionated, for example, and I love using Rails.&lt;/p&gt;

&lt;p&gt;But Tailwind definitely throws down a gauntlet. I'll quote directly from creator Adam Wathan highlighted right on the Tailwind website:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Best practices” don’t actually work.&lt;/p&gt;

&lt;p&gt;I’ve written a few thousand words on why traditional “semantic class names” are the reason CSS is hard to maintain, but the truth is you’re never going to believe me until you actually try it. If you can suppress the urge to retch long enough to give it a chance, I really think you'll wonder how you ever worked with CSS any other way.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Challenge accepted.&lt;/p&gt;

&lt;p&gt;I've tried it. And I've used it. A lot. A project one of my largest clients has me developing is built on top of React and Tailwind. So whatever you may come at me with, you can't accuse me of not giving Tailwind the good ol' college try.&lt;/p&gt;

&lt;p&gt;Still not my thing. At all. In fact I have some real concerns about Tailwind, and what I find supremely frustrating is whenever I raise these concerns, I get immediate pushback from die-hard Tailwind fans who accuse me (in so many words) of just being a fucking idiot. As a programmer who has worked full-time in the web industry since the late 90s, that just doesn't sit right with me.&lt;/p&gt;

&lt;p&gt;So since Twitter and Hacker News comments are apparently poor mediums for technical conversations of this magnitude, I will now attempt to outline the very real reasons why Tailwind is not for me.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reason-1-tailwind-promotes-uglyass-html" class="anchor"&gt;
  &lt;/a&gt;
  Reason 1: Tailwind promotes ugly-ass HTML.
&lt;/h3&gt;

&lt;p&gt;This first reason is an aesthetic concern, yet it's intimately related to real technical challenges which I'll outline shortly. But at the very least, I &lt;strong&gt;hate&lt;/strong&gt; the way utility-css-only HTML looks. Hate, hate, hate it. Adam even acknowledges this head on when he begs us to "suppress the urge to retch long enough to give it a chance…". This is a tacit admission that writing markup this way initially seems ugly and weird—but somehow we'll eventually just "get over it" because the benefits are so great.&lt;/p&gt;

&lt;p&gt;After a year of writing Tailwind, I haven't gotten over it. Sorry folks! You'll &lt;em&gt;never&lt;/em&gt; get me to appreciate this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"min-w-0 flex-auto space-y-0.5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-lime-600 dark:text-lime-400 text-sm sm:text-base lg:text-sm xl:text-base font-semibold uppercase"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;abbr&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;"Episode"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Ep.&lt;span class="nt"&gt;&amp;lt;/abbr&amp;gt;&lt;/span&gt; 128
  &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-black dark:text-white text-base sm:text-xl lg:text-base xl:text-xl font-semibold truncate"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Scaling CSS at Heroku with Utility Classes
  &lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-500 dark:text-gray-400 text-base sm:text-lg lg:text-base xl:text-lg font-medium"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Full Stack Radio
  &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now I already hear many of you screaming at your computer screens to tell me "dude, just use &lt;code&gt;@apply&lt;/code&gt; if you want to keep your HTML clean! Problem solved!" Well, that is a potential solution, and in fact that's what we've done on the aforementioned project. Much of our HTML is oriented around component-scoped class names (fairly close to BEM in concept) and thus we use &lt;code&gt;@apply&lt;/code&gt; extensively. But that brings me to my next concern.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reason-2-raw-apply-endraw-is-fundamentally-incompatible-and-nonstandard-and-largely-unnecessary" class="anchor"&gt;
  &lt;/a&gt;
  Reason 2: &lt;code&gt;@apply&lt;/code&gt; is fundamentally incompatible and non-standard (and largely unnecessary).
&lt;/h3&gt;

&lt;p&gt;This is where a lot of Tailwind fans get tripped up and keep on arguing with me over and over again, so I'll try to explain this as clearly and obviously as possible.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;@apply mt-3&lt;/code&gt; in a CSS file &lt;em&gt;only&lt;/em&gt; works if you use Tailwind. It requires the presence of Tailwind in your build process. If you remove Tailwind from your build process, that statement doesn't work and your CSS is broken.&lt;/li&gt;
&lt;li&gt;While it's true you can take the generated output CSS of a site and use that without Tailwind, it's typically a bundled compilation of dozens if not hundreds of small CSS files scattered around a codebase (if you write CSS-per-component files like we do). It's not something you can count on for source code.&lt;/li&gt;
&lt;li&gt;Therefore, it's simply the truth that CSS files built for Tailwind are non-standard (aka proprietary) and &lt;strong&gt;fundamentally incompatible&lt;/strong&gt; with all other CSS frameworks and tooling. Once you go Tailwind, &lt;em&gt;you can never leave&lt;/em&gt;. (da da dum 😱)&lt;/li&gt;
&lt;li&gt;And as an added bonus, writing all your CSS files with &lt;code&gt;@apply&lt;/code&gt; everywhere basically means you're not learning and authoring CSS. You're authoring Tailwind. No matter how many times you write &lt;code&gt;@apply flex&lt;/code&gt;, that's &lt;strong&gt;not&lt;/strong&gt; the same as writing &lt;code&gt;display: flex&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now I realize most of us aren't in the habit of trying to swap out CSS frameworks on projects on a regular basis. But believe me, I have done this! I'm on a client project right now where we're migrating from Foundation to Bulma. While it's true that it requires updating a bunch of HTML and some of the stylesheets in use, rest assured any custom bits of styling we wrote before will work again without hassle, because when you write plain ol' CSS (or even Sass), it just works no matter what.&lt;/p&gt;

&lt;p&gt;And while &lt;code&gt;@apply&lt;/code&gt; seems cool on the face of it, it ends up becoming an enormous crutch. For example, I like the way Tailwind makes writing styles using CSS Grid techniques pretty straightforward. Unfortunately, after having done so, I still don't really understand Grid syntax itself. I remain ignorant of the open CSS standard.&lt;/p&gt;

&lt;p&gt;As for why &lt;code&gt;@apply&lt;/code&gt; in the grand scheme of things is largely unnecessary, that brings me to my third point.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reason-3-tailwinds-focus-on-design-systems-and-tokens-could-mostly-be-replaced-by-css-custom-properties-aka-variableswhich-is-a-standard" class="anchor"&gt;
  &lt;/a&gt;
  Reason 3: Tailwind's focus on design systems and tokens could mostly be replaced by CSS Custom Properties (aka variables)—which IS a standard.
&lt;/h3&gt;

&lt;p&gt;People initially like Tailwind because it comes out-of-the-box with a nice design system and lots of tokens you can tweak (colors, font sizes, spacing, etc.). It's easy to get good-looking results quickly.&lt;/p&gt;

&lt;p&gt;The problem is that all these tokens are defined…in JavaScript. A CSS framework. Using JavaScript for its design tokens. In 2021.&lt;/p&gt;

&lt;p&gt;I hate to break it to you, but all modern browsers support this thing called CSS Custom Properties. You can define design tokens once at the &lt;code&gt;:root&lt;/code&gt; level as variables, and utilize them &lt;strong&gt;everywhere&lt;/strong&gt;. You can even modify them in real-time while the site is loaded, or overload them in particular parts of the DOM tree. And they work &lt;em&gt;great&lt;/em&gt; with web components. More on that in a moment.&lt;/p&gt;

&lt;p&gt;So for example, in Tailwind you can write &lt;code&gt;class="mb-8"&lt;/code&gt; and you get a &lt;code&gt;margin-bottom: 2rem&lt;/code&gt; style applied. But guess what you could do instead? Define &lt;code&gt;:root { --spacing-8: 2rem }&lt;/code&gt; in your stylesheet, and then write &lt;code&gt;margin-bottom: var(--spacing-8)&lt;/code&gt; anywhere you want. As in literally anywhere: a stylesheet, or a JS component, &lt;em&gt;or even a&lt;/em&gt; &lt;code&gt;style=&lt;/code&gt; &lt;em&gt;attribute directly in HTML!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;While the story gets a little murkier once you start looking at how to accommodate responsive breakpoints and so forth, nevertheless the principle here is that Tailwind uses a non-standard JavaScript-based build process for its design system at a time when you can build design systems using syntax that's &lt;em&gt;native&lt;/em&gt; to all modern browsers.&lt;/p&gt;

&lt;p&gt;Speaking of what's native in modern web browsers…&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reason-4-tailwind-forgets-that-web-components-exist" class="anchor"&gt;
  &lt;/a&gt;
  Reason 4: Tailwind forgets that web components exist.
&lt;/h3&gt;

&lt;p&gt;This is perhaps the biggest knock against Tailwind. It seemingly was conceived and promoted in a world where web components don't exist. Tailwind CSS is completely unusable within the Shadow DOM. Some enterprising developers have come up with solutions where select bits of Tailwind styling can get injected into components through a build process, but it's definitely a hack.&lt;/p&gt;

&lt;p&gt;Meanwhile, there are ways to build web component-based design systems today where global theming and component styling via the Shadow DOM (and exposed Parts) all work together. Again, you can do all this based on technology that's built-in and native to all modern browsers. And before you shrug your shoulders and go back to your React or your Vue, bear in mind that web components are not only an integral part of the HTML/CSS/JS spec today but are increasingly at the heart of further advancements to browser technology (for example how advanced customization of form controls might work in the future).&lt;/p&gt;

&lt;p&gt;Tailwind in this respect is no more helpful to you than Bootstrap or Foundation or any other CSS framework written years/decades ago. (Even my beloved Bulma! 😢)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reason-5-finally-tailwind-encourages-divspantag-soup" class="anchor"&gt;
  &lt;/a&gt;
  Reason 5: Finally, Tailwind encourages div/span-tag soup.
&lt;/h3&gt;

&lt;p&gt;I almost included this in the previous point, but it really bears its own conversation. I have become convinced by now that using &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tags everywhere in your markup is an anti-pattern. We live in a world where custom elements (aka &lt;code&gt;&amp;lt;whatever-you-can-dream-of&amp;gt;&lt;/code&gt;) are fully supported and enabled by modern browsers. There's virtually no reason you're forced to write &lt;code&gt;&amp;lt;div class="card"&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt; when you can write &lt;code&gt;&amp;lt;ui-card&amp;gt;&amp;lt;/ui-card&amp;gt;&lt;/code&gt;. And in fact it's quite possible to use custom attributes along with elements to write &lt;em&gt;extremely expressive markup&lt;/em&gt; that—compared to ye markup of ol'—looks quite futuristic!&lt;/p&gt;

&lt;p&gt;Take the &lt;a href="https://shoelace.style"&gt;Shoelace&lt;/a&gt; web component library for example. Here's a button:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;sl-button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"default"&lt;/span&gt; &lt;span class="na"&gt;size=&lt;/span&gt;&lt;span class="s"&gt;"small"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;sl-icon&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"prefix"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"gear"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/sl-icon&amp;gt;&lt;/span&gt;
  Settings
&lt;span class="nt"&gt;&amp;lt;/sl-button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And here's a modal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;sl-dialog&lt;/span&gt; &lt;span class="na"&gt;label=&lt;/span&gt;&lt;span class="s"&gt;"Dialog"&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"--width: 50vw;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  Lorem ipsum dolor sit amet, consectetur adipiscing elit.
  &lt;span class="nt"&gt;&amp;lt;sl-button&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"footer"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"primary"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Close&lt;span class="nt"&gt;&amp;lt;/sl-button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/sl-dialog&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Note that this isn't JSX. This isn't XML. This isn't some kind of fancy-pants template language you have to convert to ordinary HTML.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This is HTML.&lt;/strong&gt; This is what modern markup can look like.&lt;/p&gt;

&lt;p&gt;Compare that to an example from Tailwind's home page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hover:bg-light-blue-200 hover:text-light-blue-800 group flex items-center rounded-md bg-light-blue-100 text-light-blue-600 text-sm font-medium px-4 py-2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  New
&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Ewwwww. 🤢&lt;/p&gt;

&lt;p&gt;There is a future world of HTML/CSS/JS (and in large part it's here already) where you can write bespoke Grid/Flexbox layouts quickly and easily with vanilla CSS, set up design tokens with CSS variables, utilize a well-architected web component library like Shoelace (or even mix 'n' match two or three), and end up with a website/app that &lt;strong&gt;looks amazing&lt;/strong&gt; and works quite well—all without needing &lt;em&gt;any&lt;/em&gt; of the many megabytes of Tailwind utility classes that you then need to purge to get your performance back down to manageable levels.&lt;/p&gt;

&lt;p&gt;In other words, Tailwind's main selling point (besides rapid prototyping via utility classes) is its attractive design system—yet the way it implements that design system really kind of sucks! (Incompatible with web components by default, only minimally leverages CSS variables, doesn't encourage custom elements/attributes with relevant scoped styling…)&lt;/p&gt;

&lt;p&gt;Which begs the question: how does Tailwind enable us to "build modern websites" exactly? On a pure technical level, I honestly don't see it as being much of an improvement over Bootstrap. And Bootstrap at least provides an open-source component library for free. If you use Tailwind, &lt;a href="https://tailwindui.com"&gt;they ask you to pay for it&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion-if-you-like-tailwind-use-it-but-dont-try-to-convince-me-its-the-future" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion: If you like Tailwind, use it! But don't try to convince me it's the future.
&lt;/h3&gt;

&lt;p&gt;Listen, we can go back and forth on the relative merits or problems with any technology. There are definitely some benefits to choosing Tailwind, most notably how you can go from blank page to fancy-pants design quickly by simply hammering out a bunch of div tags with utility classes.&lt;/p&gt;

&lt;p&gt;But after over a year of experience with Tailwind and weighing the pros and cons against other approaches to HTML, styling, and component-based web development in general, I'm thoroughly convinced that Tailwind does not represent the direction I wish to see the web head in as a whole. And apologies to all the Tailwind fans out there, but you just don't have a compelling argument that will convince me otherwise.&lt;/p&gt;

&lt;p&gt;And that's why Tailwind isn't for me. YMMV. 🙃&lt;/p&gt;

</description>
      <category>tailwind</category>
      <category>css</category>
      <category>webcomponents</category>
    </item>
    <item>
      <title>TIL: the Git -p flag!</title>
      <author>Austin Vance</author>
      <pubDate>Fri, 15 Jan 2021 19:03:17 +0000</pubDate>
      <link>https://dev.to/focusedlabs/til-the-git-p-flag-2b1g</link>
      <guid>https://dev.to/focusedlabs/til-the-git-p-flag-2b1g</guid>
      <description>&lt;p&gt;Today I learned about the &lt;code&gt;-p&lt;/code&gt; flag in git and now I want to use it everywhere!&lt;/p&gt;

&lt;p&gt;According to the man page:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ man git-add

...
-p, --patch
Use the interactive patch selection interface to chose which changes to commit. See git-add(1) for details
...
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You can use the &lt;code&gt;-p&lt;/code&gt; flag with &lt;code&gt;checkout&lt;/code&gt;, &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;commit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lhdM239E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sdunby7qyg13pqr4f0go.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lhdM239E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sdunby7qyg13pqr4f0go.gif" alt="Git Patch!!!!!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/JSjjhv0tuiTGW6peHb/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/JSjjhv0tuiTGW6peHb/giphy.gif" alt="How cool"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>git</category>
      <category>bloggolf</category>
      <category>todayilearned</category>
      <category>commandline</category>
    </item>
    <item>
      <title>DigitalOcean App Platform Hackathon Winners, Announced!</title>
      <author>Jess Lee (she/her)</author>
      <pubDate>Fri, 15 Jan 2021 18:42:39 +0000</pubDate>
      <link>https://dev.to/devteam/digitalocean-app-platform-hackathon-winners-announced-ig0</link>
      <guid>https://dev.to/devteam/digitalocean-app-platform-hackathon-winners-announced-ig0</guid>
      <description>&lt;p&gt;In December, we announced a new challenge on DEV, in partnership with our friends at DigitalOcean: the &lt;a href="https://dev.to/devteam/announcing-the-digitalocean-app-platform-hackathon-on-dev-2i1k"&gt;App Platform Hackathon&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Our intrepid Hackathon participants were challenged to build brand new apps using DigitalOcean’s &lt;a href="https://www.digitalocean.com/products/app-platform/"&gt;App Platform&lt;/a&gt;. DigitalOcean offered them credits in order to leverage their professional tool for free. Submissions were to be filed in one of four categories: &lt;strong&gt;Personal Site/Portfolio, Program for the People, Built for Business, and last but certainly not least, Random Roulette.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The process of picking just one grand prize winner for each category and 10 total runners-up was difficult, to say the least. But somehow, the judging panels at DEV and DigitalOcean managed to narrow in on some truly standout projects. We’re thrilled to share them with you today!&lt;/p&gt;

&lt;p&gt;So, without further ado, let's meet the winners of the DigitalOcean App Platform Hackathon on DEV!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Personal Site/Portfolio: &lt;a class="comment-mentioned-user" href="https://dev.to/abhinavchawla13"&gt;@abhinavchawla13&lt;/a&gt;
&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/abhinavchawla13" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wgsrUJJi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--9ikzGOCk--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/366907/b70fb32b-1e9e-4dd9-b746-381239a82449.jpeg" alt="abhinavchawla13 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/abhinavchawla13/personal-portfolio-final-submission-bib" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Personal Portfolio: Final Submission&lt;/h2&gt;
      &lt;h3&gt;Abhinav Chawla ・ Jan  8 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#vue&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Program for the People: &lt;a class="comment-mentioned-user" href="https://dev.to/jcsmileyjr"&gt;@jcsmileyjr&lt;/a&gt;
&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/jcsmileyjr" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G__BmEHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s---GSAnrlN--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/131080/15fac64e-ae92-4124-8cee-37744492302a.jpg" alt="jcsmileyjr image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jcsmileyjr/building-a-mental-health-crisis-app-final-day-2bp1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Building a mental health crisis app, Final Day.&lt;/h2&gt;
      &lt;h3&gt;JC Smiley ・ Jan 10 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codepen&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#mentalhealth&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Built for Business: &lt;a class="comment-mentioned-user" href="https://dev.to/guild"&gt;@guild&lt;/a&gt;
&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/guild" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4QlIqF_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ad4dIL7r--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/543057/3cd1e0db-f79f-4d87-972f-8800d0bc243e.png" alt="guild image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/guild/guild-so-do-hackathon-submission-2153" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Guild.so - DO Hackathon Submission&lt;/h2&gt;
      &lt;h3&gt;Guild ・ Jan  6 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#laravel&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#php&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Random Roulette: &lt;a class="comment-mentioned-user" href="https://dev.to/dawntraoz"&gt;@dawntraoz&lt;/a&gt;
&lt;/strong&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/dawntraoz" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EB72Bnsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--b7I8gGe---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/369146/c575f3b5-6df7-4799-aafc-8081e3e52783.jpg" alt="dawntraoz image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/dawntraoz/final-submission-for-digitalocean-app-platform-hackathon-4eh3" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Final submission for DigitalOcean App Platform Hackathon&lt;/h2&gt;
      &lt;h3&gt;Alba Silvente 💃🏼 ・ Dec 23 '20 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#potatizer&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#nuxt&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tailwind&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;All Grand Prize Winners will receive&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$2,000 USD gift card or equivalent 🤑&lt;/li&gt;
&lt;li&gt;$300 USD credit to the DEV Shop 😎&lt;/li&gt;
&lt;li&gt;DigitalOcean Swag Pack 🎁&lt;/li&gt;
&lt;li&gt;DEV Sticker Pack ✨&lt;/li&gt;
&lt;li&gt;DEV “App Platform Hackathon” grand prize profile badge 🏆&lt;/li&gt;
&lt;li&gt;A Zoom meet-and-greet with DigitalOcean’s CEO, Yancey Spruill 👋&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#and-our-top-10-runnersup-in-random-order" class="anchor"&gt;
  &lt;/a&gt;
  And, our Top 10 Runners-Up, in random order!
&lt;/h3&gt;

&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/anabella"&gt;@anabella&lt;/a&gt;
 &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/anabella" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yOML8v0B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--K4v2hp55--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/70949/dce8cfb2-f200-4ce3-b590-78f538796692.png" alt="anabella image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/anabella/emoji-traffic-jam-generator-b84" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Emoji traffic jam generator!&lt;/h2&gt;
      &lt;h3&gt;anabella ・ Jan  9 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#emoji&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#art&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#generativeart&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/shiftyp"&gt;@shiftyp&lt;/a&gt;
 &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/shiftyp" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mHdQWPcy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--63-vYnth--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/110019/bd609532-0400-4b6b-91d4-0d040e82d011.jpeg" alt="shiftyp image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/shiftyp/space-themed-site-with-mini-game-1bc4" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Space Themed Site with Mini Game!&lt;/h2&gt;
      &lt;h3&gt;Ryan Lynch (he/him) ・ Dec 19 '20 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/ameysunu"&gt;@ameysunu&lt;/a&gt;
 &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/ameysunu" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6e_kP5zD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--NwbLTiiv--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/459351/4702067a-dd02-4b44-a070-d64449312655.jpg" alt="ameysunu image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ameysunu/alleviate-digitalocean-app-platform-hackathon-eap" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Alleviate - DigitalOcean App Platform Hackathon&lt;/h2&gt;
      &lt;h3&gt;Amey Sunu ・ Jan  9 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#flutter&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#docker&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/neilblaze"&gt;@neilblaze&lt;/a&gt;
 &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/neilblaze" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AGxNdcB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mfNiAJ6y--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/242559/53956bf8-66ef-4f30-a19b-7ef063401acc.jpg" alt="neilblaze image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/neilblaze/who-of-us-find-him-else-he-ll-escape-1plp" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Who-of-us? — Find else he'll escape 😉&lt;/h2&gt;
      &lt;h3&gt;Pratyay Banerjee ・ Jan 10 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#gamedev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#phaserjs&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/stephjs"&gt;@stephjs&lt;/a&gt;
 &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/stephjs" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nUKGickv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CC7EqOaT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/59731/f311e711-847c-43db-9941-6f009c927c2e.jpeg" alt="stephjs image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/stephjs/building-a-sunday-scaries-messaging-service-29np" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Building a Sunday scaries Messaging Service&lt;/h2&gt;
      &lt;h3&gt;Steph ・ Jan 11 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#lol&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/circa10a"&gt;@circa10a&lt;/a&gt;
 &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/circa10a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nvoQGz-V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--rWcThvMx--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/315518/8d842906-2c75-495f-8926-d54c508e0a4e.jpg" alt="circa10a image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/circa10a/the-mcbroken-dashboard-1eij" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The mcbroken dashboard - digitalocean hackathon entry&lt;/h2&gt;
      &lt;h3&gt;Caleb Lemoine ・ Dec 21 '20 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#monitoring&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cloud&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/shriji"&gt;@shriji&lt;/a&gt;
 &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/shriji" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pdEv7VdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6FdO-iM4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/398893/76cf7f4a-1e45-4632-b806-0552d762e7cc.jpg" alt="shriji image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/shriji/final-submission-dev-to-sapper-4ki" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Final Submission: Dev to Sapper &lt;/h2&gt;
      &lt;h3&gt;Shriji ・ Jan 10 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#svelte&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#sapper&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/abidishajia"&gt;@abidishajia&lt;/a&gt;
 &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/abidishajia" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A8-sZS-g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--fuKVCfAM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/152465/3cf5af73-6d4e-47a8-833a-58ac2fbad036.jpg" alt="abidishajia image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/abidishajia/jobamatic-automate-your-job-search-3p0p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Jobamatic - Automate your job search&lt;/h2&gt;
      &lt;h3&gt;Shajia Abidi ・ Jan 10 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/curiouspaul1"&gt;@curiouspaul1&lt;/a&gt;
 &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/curiouspaul1" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--la1jQXU2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--D67ogXww--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/544262/58554499-78d6-49c3-afd2-68ea5edce7cb.jpeg" alt="curiouspaul1 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/curiouspaul1/coveed-help-to-mitigate-stress-on-the-medical-infrastructure-3hj" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Coveed: Help to mitigate stress on the medical infrastructure.&lt;/h2&gt;
      &lt;h3&gt;Curious Paul ・ Jan  2 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#showdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#covid&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a class="comment-mentioned-user" href="https://dev.to/jasmin"&gt;@jasmin&lt;/a&gt;
 &lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/jasmin" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jo_qG8og--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--V19tSeCF--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/322836/4d3983a7-2027-4e31-b404-9480345349c4.jpeg" alt="jasmin image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jasmin/share-your-slack-messages-in-form-of-qr-code-3163" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Share your slack messages in the form of QR Code.&lt;/h2&gt;
      &lt;h3&gt;Jasmin Virdi ・ Jan  3 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#dohackathon&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;All runners-up will receive&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$200 USD gift card or equivalent 💰&lt;/li&gt;
&lt;li&gt;$150 USD credit to the DEV Shop 🌈&lt;/li&gt;
&lt;li&gt;DigitalOcean Swag Pack 🎩&lt;/li&gt;
&lt;li&gt;DEV Sticker Pack 💻&lt;/li&gt;
&lt;li&gt;DEV “App Platform Hackathon” runner-up profile badge 🌟&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#participants" class="anchor"&gt;
  &lt;/a&gt;
  Participants
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;All participants with a valid project will receive a DEV Sticker Pack and an “App Platform Hackathon” participant profile badge. 🎉&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;To &lt;em&gt;everyone&lt;/em&gt; who submitted a project for this hackathon, you should be super proud of yourselves. In the process of building your app, you’ve contributed to the DigitalOcean App Platform library and gained new experience with a professional tool.&lt;/p&gt;

&lt;p&gt;The DigitalOcean team will follow up with each winner via email about their prizes, and the DEV team will do the same within two weeks.&lt;/p&gt;

&lt;p&gt;Great work, everyone! We hope you had a blast participating in this challenge. ❤️&lt;/p&gt;

</description>
    </item>
    <item>
      <title>How I went from newbie to dream role in 225 days...</title>
      <author>lauracharvey</author>
      <pubDate>Fri, 15 Jan 2021 15:27:16 +0000</pubDate>
      <link>https://dev.to/lauracharvey/how-i-went-from-newbie-to-dream-role-in-225-days-2lal</link>
      <guid>https://dev.to/lauracharvey/how-i-went-from-newbie-to-dream-role-in-225-days-2lal</guid>
      <description>&lt;p&gt;Ahh it’s been too long since I sat down to write, I am so, so, so excited to bring you this latest instalment! &lt;/p&gt;

&lt;p&gt;As you may or may not know, I GOT MY FIRST TECH JOB 🥳&lt;/p&gt;

&lt;p&gt;225 days after starting my learning journey, I accepted a role as Developer Relations (DevRel) for Veeqo starting Monday 18th January 2021.&lt;/p&gt;

&lt;p&gt;This article follows on from my last post:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/lauracharvey" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X7f_W5vE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5UH3XW3a--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/398346/b5f9b419-8ded-4c41-96d9-8095d5d772d0.jpg" alt="lauracharvey image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/lauracharvey/my-journey-through-space-time-and-tech-so-far-248a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My journey through space, time and tech (so far).&lt;/h2&gt;
      &lt;h3&gt;lauracharvey ・ Aug 19 '20 ・ 15 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;And will cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;what I did next&lt;/li&gt;
&lt;li&gt;a bit about bootcamp&lt;/li&gt;
&lt;li&gt;what my job application process was like&lt;/li&gt;
&lt;li&gt;how I got my job&lt;/li&gt;
&lt;li&gt;job application tips&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...and of course, the burning question that you’ve just thought of, what on earth is DevRel?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-we-left-off" class="anchor"&gt;
  &lt;/a&gt;
  Where we left off
&lt;/h2&gt;

&lt;p&gt;On the 19th August 2020 I told you all I was going to carry on self-teaching, but if I’m being honest readers, it was only because I had a not so supportive partner (with no tech experience) who had told me that bootcamp was a load of &lt;strong&gt;hoo haa&lt;/strong&gt; and he wasn't prepared to support me through it.&lt;/p&gt;

&lt;p&gt;By the end of August, I had decided a career in tech was more important to me than an unsupportive partner, so I left and decided to pursue my dream alone!&lt;/p&gt;

&lt;p&gt;I passed my entry challenges and enrolled in the General Assembly &lt;a href="https://generalassemb.ly/education/software-engineering-immersive/london"&gt;Software Engineering Immersive course&lt;/a&gt; within a week and signed up for the cohort starting 21st September 2020.&lt;/p&gt;

&lt;p&gt;Turns out, when you least expect it and you’ve resigned yourself to being a lonely old spinster with 10,000 dogs, someone comes along and ruins your well-made plans…&lt;/p&gt;

&lt;p&gt;Cue Ant 🥰&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hdQebVDx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Ei89kahXsAIbF4B.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OSL7gOGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1339909309153636353/BgImwt-m_normal.jpg" alt="Laura Harvey 🧜‍♀️💻 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Laura Harvey 🧜‍♀️💻
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/lauracharvey"&gt;@lauracharvey&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I rarely post things about my personal life but I’m too happy not to share 🧡&lt;br&gt;&lt;br&gt;World, meet Ant, my biggest supporter and the reason my Twitter engagement is now through the floor 😂😘♥️ 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      21:41 PM - 27 Sep 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1310333732864372737" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1310333732864372737" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      2
      &lt;a href="https://twitter.com/intent/like?tweet_id=1310333732864372737" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      208
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#laura-im-here-for-the-tech-stuff-not-your-love-life-tell-me-about-the-bootcamp" class="anchor"&gt;
  &lt;/a&gt;
  Laura, I’m here for the tech stuff, not your love life, tell me about the bootcamp…
&lt;/h2&gt;

&lt;p&gt;I wrote about the bootcamp application process here:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/lauracharvey" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X7f_W5vE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5UH3XW3a--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/398346/b5f9b419-8ded-4c41-96d9-8095d5d772d0.jpg" alt="lauracharvey image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/lauracharvey/the-no-jargon-guide-bootcamp-edition-entry-challenges-2nkl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The No Jargon Guide - Bootcamp Edition - Entry Challenges&lt;/h2&gt;
      &lt;h3&gt;lauracharvey ・ Sep 19 '20 ・ 11 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;My course was fully remote due to COVID-19 (for anyone reading this in the future who doesn’t know, COVID-19 was like a sort of apocalypse over 2020-2021 similar to the movie Contagion where no one was allowed out of the house and people busied themselves by stockpiling toilet paper).&lt;/p&gt;

&lt;p&gt;My classes were held on Zoom with 1 tutor, 2 teaching assistants and a cohort of 23 students. We would log into class from 9:30am until around 4:30pm with a 1-hour lunch, except on project weeks where you were gifted a lay-in and didn’t have to log in until 10am!&lt;/p&gt;

&lt;p&gt;Our course was 12-weeks long and the syllabus covered:&lt;/p&gt;

&lt;p&gt;HTML&lt;br&gt;
CSS&lt;br&gt;
React.js&lt;br&gt;
Express.js&lt;br&gt;
Node.js&lt;br&gt;
MongoDB (&amp;amp; Mongoose)&lt;br&gt;
Python&lt;br&gt;
Flask&lt;br&gt;
PostgreSQL&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here’s a breakdown of the timescales:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u4SAnpJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ouXWE5e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4SAnpJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ouXWE5e.png" alt="table showing breakdown of bootcamp timescales"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-was-the-teaching-like" class="anchor"&gt;
  &lt;/a&gt;
  What was the teaching like?
&lt;/h2&gt;

&lt;p&gt;Class was a mix of sessions and “labs”, the sessions were 45 minutes or more and then the labs were mini practical exercises done in groups or alone to break up the learning. During labs we would often be put in breakout rooms on Zoom which would be a smaller group that you could chat to or solve problems with.&lt;/p&gt;

&lt;p&gt;Homework was set at the end of each day and varied in length and complexity. In the first few weeks it was going over concepts we’d learnt that day, from week-7 onwards it was replicating a full stack application that the teacher had built, adding to it each day with the things we’d learnt in class. &lt;/p&gt;

&lt;p&gt;I work better in the mornings so I would get up early and work for 2-3 hours before class, but I know most people in my cohort did theirs as soon as class was over for the day.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#go-on-how-much-did-it-cost" class="anchor"&gt;
  &lt;/a&gt;
  Go on, how much did it cost?
&lt;/h2&gt;

&lt;p&gt;It definitely wasn’t cheap.&lt;/p&gt;

&lt;p&gt;The General Assembly Software Engineering Immersive costs £9,000 if you’re a boy, unlucky. However, if you are female or identify as female you get a discount of around £1,500.&lt;/p&gt;

&lt;p&gt;BUT and this is a massive but, you HAVE to have a Mac which is obviously a huge outlay on top of the course fees.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-did-you-make-it-work" class="anchor"&gt;
  &lt;/a&gt;
  How did you make it work?
&lt;/h2&gt;

&lt;p&gt;I chose to fund the course fees from savings.&lt;/p&gt;

&lt;p&gt;I got the Mac on credit card (eeek 😬)&lt;/p&gt;

&lt;p&gt;And I’m extremely blessed to have parents who are able to help me out. Although somewhat begrudgingly, they paid me monthly “pocket money” so I could pay my bills and afford to feed myself.&lt;/p&gt;

&lt;p&gt;All I will say on this, it’s best to be prepared financially for bootcamp, it’s stressful enough without adding money worries in the mix. There are part time options which although cost around the same, you can fit them around a job so at least you don’t have to stop earning.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#is-bootcamp-worth-it" class="anchor"&gt;
  &lt;/a&gt;
  Is bootcamp worth it?
&lt;/h2&gt;

&lt;p&gt;I think this is a really personal question…what do you want to achieve and why?&lt;/p&gt;

&lt;p&gt;For me I was making slow progress with JavaScript and I wanted to go quicker, I felt like I’d put life on hold enough in the past so I wanted to do something that could help me achieve my goal of being a developer as quickly as possible.&lt;/p&gt;

&lt;p&gt;Also, after trying university before I knew that style of learning wasn’t for me.&lt;/p&gt;

&lt;p&gt;It is true that you can learn everything I learnt at bootcamp for free online, but I felt I needed the support and community learning that bootcamp brings. I loved having people to ask questions, chat with about code, check understandings and also the solidarity when thinking “I don’t get this at all…”.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-are-some-things-to-bear-in-mind" class="anchor"&gt;
  &lt;/a&gt;
  What are some things to bear in mind?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;It’s like a massive information dump for 3 months&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you don’t get something, the next day you’re onto a new topic and you have homework so it can be difficult to go back over material during the course.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It’s really intense (no, really)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I was totally unprepared for how intense bootcamp was, its 7 hours per day, 5 days a week. You have homework and you’re learning masses of information each day.&lt;/p&gt;

&lt;p&gt;The GA course also has built-in career support called “outcomes”. The outcomes team set homework and arrange networking sessions in the evenings a few times throughout the course. Once you finish the 12 weeks teaching you go straight into 2 weeks outcomes work which include work to get you job ready – CV/Resume, cover letters, LinkedIn, portfolio, READMEs and a job tracker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No one gets you a job&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are hoping going to bootcamp will magically get you job offers left, right and center and you'll be alright because bootcamps have affiliated employers, unfortunately you’re wrong. You have to put in all the work on your deliverables yourself, approach employers yourself and prepare for those technical interviews yourself.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#ok-enough-about-bootcamp-tell-me-how-did-you-get-a-job" class="anchor"&gt;
  &lt;/a&gt;
  Ok, enough about bootcamp, tell me, how did you get a job???
&lt;/h2&gt;

&lt;p&gt;I think my job search journey is a little bit unusual, so I’ll tell you, but I’ll also give you some tips for a more traditional job search.&lt;/p&gt;

&lt;p&gt;As some of you might know since starting to learn to code, I have built a Twitter following (I don’t have the secrets as to how, but I’ll do my best to share some tips in a thread another day). &lt;/p&gt;

&lt;p&gt;On the 19th December 2020, I posted my new portfolio letting everyone know I was looking for work.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uLJR3B7O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1340369515243327494/pu/img/sIDXh0a5iX-Z2UiA.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OSL7gOGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1339909309153636353/BgImwt-m_normal.jpg" alt="Laura Harvey 🧜‍♀️💻 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Laura Harvey 🧜‍♀️💻
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/lauracharvey"&gt;@lauracharvey&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      NEW PORTFOLIO!!!!!!!!! 🥳☺️&lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/arpKBlE7nd"&gt;lauracharvey.dev&lt;/a&gt;&lt;br&gt;&lt;br&gt;Built with &lt;a href="https://twitter.com/hashtag/reactjs"&gt;#reactjs&lt;/a&gt; (my new love 😍)&lt;br&gt;&lt;br&gt;I am looking for work 👀 so I'd really appreciate a retweet and if you're hiring or know of any roles going, give me a shout!&lt;br&gt;&lt;br&gt;TIA 🥰 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:11 PM - 19 Dec 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1340374223378931718" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1340374223378931718" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      358
      &lt;a href="https://twitter.com/intent/like?tweet_id=1340374223378931718" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      2071
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;I had a few people direct message me and one of them was the CEO of Veeqo who said he thought I might be a good fit for the Developer Relations role they had advertised with a link to the role.&lt;/p&gt;

&lt;p&gt;DevRel was something I knew I wanted to get into but never dreamed I could do as a junior so I jumped at the opportunity.&lt;/p&gt;

&lt;p&gt;The application was very simple, upload your CV, add a cover letter and answer a question - which CTO do you find most inspirational and why?&lt;/p&gt;

&lt;p&gt;I chose Gerri Martin-Flickinger because she's female and was the first ever CTO at Starbucks and I think her vision for technologically connected coffee shops is pretty cool 😎&lt;/p&gt;

&lt;p&gt;I was so glad to be shortlisted and the interview process was then done in 3 stages:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interview 1&lt;/strong&gt; - 15-30 minutes&lt;/p&gt;

&lt;p&gt;Chat with their Head of People about the role, Veeqo as a company, their culture and the sort of thing I was looking for to check it was a match.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interview 2&lt;/strong&gt; - 30-45 minutes&lt;/p&gt;

&lt;p&gt;Chat with the hiring manager about the role and my experience in more detail.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interview 3&lt;/strong&gt; - 45-60 minutes&lt;/p&gt;

&lt;p&gt;I was asked to give a 15-minute presentation on their API, how it works and its benefits.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-other-tech-interviews-like" class="anchor"&gt;
  &lt;/a&gt;
  What are other tech interviews like?
&lt;/h2&gt;

&lt;p&gt;I got a job quite early on in my search, but I interviewed at 4 other companies, I won’t disclose who, but I’ll give you an overview of the role, the type of business and the interview process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Full Stack Developer&lt;/strong&gt;&lt;br&gt;
Digital Agency&lt;/p&gt;

&lt;p&gt;About 3-4 weeks into bootcamp, chat about the role, my journey, the tech I was familiar with and transferable skills&lt;/p&gt;

&lt;p&gt;Outcome: Rejected&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Frontend Developer (React)&lt;/strong&gt;&lt;br&gt;
Start Up&lt;/p&gt;

&lt;p&gt;Chat about the role, my journey, the tech I was familiar with, the type of role I was looking for, transferable skills and my learning style&lt;/p&gt;

&lt;p&gt;Outcome: Withdrew&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Frontend Developer (React)&lt;/strong&gt;&lt;br&gt;
Start Up&lt;/p&gt;

&lt;p&gt;Interview 1&lt;br&gt;
Chat with the CEO&lt;/p&gt;

&lt;p&gt;Interview 2&lt;br&gt;
Chat with the CEO and backend developer&lt;/p&gt;

&lt;p&gt;Outcome: Offer Declined&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Junior Software Engineer&lt;/strong&gt;&lt;br&gt;
Start Up&lt;/p&gt;

&lt;p&gt;Interview 1&lt;br&gt;
Chat with hiring manager and technical test – create a function in any language to convert a serial number and letters in certain numerical values to find an overall check digit and check the authenticity of the serial number&lt;/p&gt;

&lt;p&gt;Interview 2&lt;br&gt;
One and a half hour pair programming session in React&lt;/p&gt;

&lt;p&gt;Outcome: Withdrew&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-did-you-find-all-these-roles" class="anchor"&gt;
  &lt;/a&gt;
  Where did you find all these roles?
&lt;/h2&gt;

&lt;p&gt;Twitter &amp;amp; LinkedIn&lt;/p&gt;

&lt;p&gt;There’s no magic trick to it unfortunately, you just have to sift through lots of roles however networking can really help bring the roles to you rather than you going looking for them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#i-have-like-1-twitter-follower-will-i-ever-get-a-job" class="anchor"&gt;
  &lt;/a&gt;
  I have like 1 Twitter follower, will I ever get a job?
&lt;/h2&gt;

&lt;p&gt;Everyone has to start somewhere and you definitely don’t need to have followers on social media to get a job in tech.&lt;/p&gt;

&lt;p&gt;Here are some practical tips for you if you’re currently searching:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Show some personality&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Job applications don’t need to be boring, you’re not a tech savvy robot, you’re a person and that is the person the hiring manager is going to have to work with on the daily should you be successful.&lt;/p&gt;

&lt;p&gt;Are you a loud or funny person? Show it!&lt;br&gt;
Are you a Warhammer enthusiast? Show it!&lt;br&gt;
Are you a dog lover? Show it! &lt;/p&gt;

&lt;p&gt;You can check my personal statement on my portfolio if you’re struggling to get started.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Show you are passionate about tech/development&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I’ve spoken to a couple of recruiters and one thing they both said was that COVID has caused a massive influx of junior developers in the market and not all of them care as much about development as you do, and it shows!&lt;/p&gt;

&lt;p&gt;Set yourself apart from other candidates by showing your passion and commitment to the developer community. Share your wins, your losses, create content and build, build, build.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Build projects without following a tutorial&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Show your creativity and willingness to strike off on your own, by all means replicate something that has been built 1000 times before but do it in your own way without copying the code line-by-line.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Have a portfolio or at least a GitHub or CodePen to showcase your work&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once you’ve built those projects find some way to showcase them, don’t worry about someone digging around in your code, firstly, you might learn something and secondly, it shows your progress from project to project&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Get your CV/resume in check&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Make sure your message is consistent across all of your platforms, don’t call yourself a Frontend dev on LinkedIn and then a Full Stack developer on your CV.&lt;/p&gt;

&lt;p&gt;For the UK market your CV should be no more than 2-pages including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your name&lt;/li&gt;
&lt;li&gt;Your current job title or job title you are hoping to achieve&lt;/li&gt;
&lt;li&gt;Your contact details&lt;/li&gt;
&lt;li&gt;Links to your other platforms i.e. Twitter, GitHub, Dev.to&lt;/li&gt;
&lt;li&gt;A personal statement&lt;/li&gt;
&lt;li&gt;Summary of your technical skills&lt;/li&gt;
&lt;li&gt;Experience including dates, projects/content created whilst in that role and a description of the role/responsibilities&lt;/li&gt;
&lt;li&gt;Education&lt;/li&gt;
&lt;li&gt;Achievements (these don't have to be tech or even job related)&lt;/li&gt;
&lt;li&gt;Hobbies and Interests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;6. Use your LinkedIn to supplement your CV and actually make an effort with your LI&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Can’t fit all your awesomeness on 2 pages?! Me either...add a little note on the bottom of your CV “for my full career history, please check my LinkedIn”&lt;/p&gt;

&lt;p&gt;Make sure your LinkedIn is up to date and consistent with your CV. Sharing on Twitter? Cross post to LI too, that way you have the chance of reaching hiring managers or decision makers on either platform.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/DThompsonDev"&gt;@DThompsonDev&lt;/a&gt; has a great guide on updating your LinkedIn, here's one to get you started...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Fv4eXWDUOYQ"&gt;HOW TO USE LINKEDIN PROFILES TO GET JOBS! Stand out where the hiring managers hang out!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Cover letters are still necessary, unfortunately&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your cover letter should be tailored to each job, it doesn’t need to be an essay, all you need is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;One paragraph about why they are the best company ever and why you want to work there&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One paragraph about what you could offer them, don’t big yourself up using statements like “I’m the best candidate”, “I’m exceptional with Python” just talk about practical skills you have and how they match the role on offer:&lt;br&gt;
“I really like working with JavaScript and particularly enjoy using different array methods…” &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One final paragraph to summarise:&lt;br&gt;
“I’ve attached my CV and would love the opportunity to talk you through my work and discuss the role you have available…”&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;8. Speculative applications might open up your options&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Found a company that you’d really love to work for, but they don’t have any open position? Apply anyway.&lt;/p&gt;

&lt;p&gt;Send a cover letter or cover note on LinkedIn and ask if they have any positions coming up or could they please consider you for any future openings.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Network, network, network&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It’s estimated that 85% of job roles are filled by networking alone so get out there talk to people and start making friends in your industry&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Put a post out on social media&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You never know that 1 follower could have your hiring manager in their contacts, what have you got to lose? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ok-last-question-what-on-earth-is-developer-relations" class="anchor"&gt;
  &lt;/a&gt;
  Ok, last question, what on earth is Developer Relations?!
&lt;/h2&gt;

&lt;p&gt;Developer Relations aka. Developer Advocacy is a growing specialism, it’s a bit of hybrid role that is different from organisation to organisation but generally you split your time between development and building a developer community around your companies’ product(s).&lt;/p&gt;

&lt;p&gt;So, Veeqo, is an inventory and shipping platform for ecommerce retailers, they can do things like stock control, picking, packing, shipping, purchasing and financial reporting all in one spot however, some retailers want to build their own bespoke app so, Veeqo has a public API that can be used in the building of apps.&lt;/p&gt;

&lt;p&gt;My new role will be looking after that API, making the API and its documentation as user friendly as possible. I will also be the go between for developers using it, getting their feedback and supporting them with any issues to make developer experience the very best.&lt;/p&gt;

&lt;p&gt;I will also support the community by creating helpful content and speaking at conferences and other events.&lt;/p&gt;

&lt;p&gt;This article from &lt;a href="https://twitter.com/lynnetye"&gt;@lynnetye&lt;/a&gt; is a really great way to learn more about more about DevRel, she chatted to 15 Developer Advocates or Dev Avocados as they lovingly call themselves, about what they do day to day.&lt;/p&gt;

&lt;p&gt;My role is being built from the ground up so I’m really excited to see where it goes, as always, I’ll keep you updated!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-little-note-from-me" class="anchor"&gt;
  &lt;/a&gt;
  A little note from me
&lt;/h3&gt;

&lt;p&gt;If you’re reading this, I assume you’re learning and/or looking to get into a tech so a massive GOOD LUCK on your journey! I love hearing from you so please feel free to reach out if you have any questions!&lt;/p&gt;

&lt;p&gt;Thanks for reading 😎&lt;/p&gt;

</description>
      <category>career</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Faster .NET CI/CD pipelines with test filters</title>
      <author>Ryan Taylor</author>
      <pubDate>Fri, 15 Jan 2021 15:26:08 +0000</pubDate>
      <link>https://dev.to/focusedlabs/faster-net-ci-cd-pipelines-with-test-filters-1k6o</link>
      <guid>https://dev.to/focusedlabs/faster-net-ci-cd-pipelines-with-test-filters-1k6o</guid>
      <description>&lt;p&gt;Sluggish integration and delivery pipelines leave developers vulnerable to distraction.  If your unit and integration tests live in one &lt;code&gt;.csproj&lt;/code&gt; and run in both CI and CD, tune your pipeline stages to run only relevant tests.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-tests" class="anchor"&gt;
  &lt;/a&gt;
  The Tests
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fact&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Trait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Category"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Unit"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;ThisTest_ShouldBeAUnitTest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;// Useful unit test&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Fact&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nf"&gt;Trait&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Category"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;"Integration"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt; &lt;span class="nf"&gt;WhenThisThingDoesX_ThatThingShouldDoY&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;// Useful integration test&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#tuning-the-pipelines" class="anchor"&gt;
  &lt;/a&gt;
  Tuning the Pipelines
&lt;/h4&gt;

&lt;p&gt;To run only unit tests in CI:&lt;br&gt;
&lt;code&gt;dotnet test --filter Category=Unit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To run only integration tests in CD:&lt;br&gt;
&lt;code&gt;dotnet test --filter Category=Integration&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;Photo credit: &lt;a href="https://www.flickr.com/photos/andrewparnell/2738598951/in/photolist-5b134i-8BnKfE-8BjGfx-8BnKBq-8BnK8u-8BnLWo-8BnKqm-8NE8Ac-ry4zJx-2hcjGDn-bsM6Ux-bpe3u2-bvf1tF-bped7T-bveZb2-bveZNX-bveSMD-bsLYKt-adbMBJ-6kN7G-5UnKjd-5VCYtc-AEJUs-gQJMj-bk1bNK-udPXub-AEJkJ-vaQKS2-AEK23-uTgm7G-AEJvf-v8wAgs-bmNiUT-uToGzc-vakqGU-vak6Xj-vb3LXa-UutpCt-6pSjdF-bpe8JT-U9zyQn-5fq7Qu-28Kj4-5fkJXp-28KgA-kTdV5-6dLnTT-5fq8b3-6dLotz-5fq7ES"&gt;Andrew Parnell&lt;/a&gt;&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>bloggolf</category>
      <category>cicd</category>
      <category>testing</category>
    </item>
    <item>
      <title>How to build your next Chrome extension with Svelte</title>
      <author>Mauro Garcia</author>
      <pubDate>Fri, 15 Jan 2021 15:25:07 +0000</pubDate>
      <link>https://dev.to/maurogarcia_19/how-to-build-your-next-chrome-extension-with-svelte-13cd</link>
      <guid>https://dev.to/maurogarcia_19/how-to-build-your-next-chrome-extension-with-svelte-13cd</guid>
      <description>&lt;p&gt;I've been working on a side project called Research Pal. It's a simple yet useful Chrome extension that lets you track and manage your researches.&lt;br&gt;
After following the basic tutorials available in the &lt;a href="https://developer.Chrome.com/docs/extensions/"&gt;Chrome Developers Portal&lt;/a&gt;, I learned that you just need HTML, CSS, and JavaScript to build an extension.&lt;/p&gt;

&lt;p&gt;But the problem is that Research Pal will have a couple of different "screens" or "sections" that will be shown based on different conditions. Besides, the user will be able to navigate between "screens" through interactions. I don't know you, but I don't want to handle all that state logic with plain JavaScript 😆&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#presenting-svelte" class="anchor"&gt;
  &lt;/a&gt;
  Presenting Svelte
&lt;/h1&gt;

&lt;p&gt;If it's the first time you hear about Svelte, I strongly recommend you to take a look at the &lt;a href="https://svelte.dev/"&gt;official website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can also check out some of my previous post about svelte:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://maurogarcia.dev/maurogarcia.dev/posts/angular-vs-svelte-card-component/"&gt;Angular vs Svelte - Card Component&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://maurogarcia.dev/maurogarcia.dev/posts/sapper-svelte-tailwindcss-boilerplate/"&gt;Sapper + Svelte + tailwindcss boilerplate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://maurogarcia.dev/maurogarcia.dev/posts/-5-things-i-love-about-svelte-/"&gt;5 things I love about Svelte&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One of the things that set Svelte apart from other JS frameworks is that instead of doing the bulk of their work in the browser, it shifts that work into a compile step that happens when you build your app.&lt;/p&gt;

&lt;p&gt;I could speak about Svelte for hours, but let's see how we can use it for our Chrome extensions.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#1-create-your-svelte-app" class="anchor"&gt;
  &lt;/a&gt;
  1. Create your Svelte app
&lt;/h1&gt;

&lt;p&gt;We need to use &lt;a href="https://www.npmjs.com/package/degit"&gt;degit&lt;/a&gt; to create our Svelte app. Run the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx degit sveltejs/template my-svelte-project
&lt;span class="nb"&gt;cd &lt;/span&gt;my-svelte-project
npm &lt;span class="nb"&gt;install
&lt;/span&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;If everything went as expected, you should be able to see your app running on &lt;a href=""&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#2-add-your-chrome-extension" class="anchor"&gt;
  &lt;/a&gt;
  2. Add your Chrome extension
&lt;/h1&gt;

&lt;p&gt;For this tutorial, we'll need to create a folder called "extension". Then, create the following files inside our new folder:&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#manifestjson" class="anchor"&gt;
  &lt;/a&gt;
  manifest.json
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Counter App"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Chrome extension + Svelte boilerplate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"permissions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"activeTab"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"browser_action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"default_popup"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"popup.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"manifest_version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#popuphtml" class="anchor"&gt;
  &lt;/a&gt;
  popup.html
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;'utf-8'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;'viewport'&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;'width=device-width,initial-scale=1'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Counter App&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- CSS Bundle generated by Svelte --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;'stylesheet'&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;'/build/bundle.css'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="c"&gt;&amp;lt;!-- JS Bundle generated by Svelte --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;defer&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;'/build/bundle.js'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;If you want to dig into Chrome extension development, please take a look at &lt;a class="comment-mentioned-user" href="https://dev.to/paulasantamaria"&gt;@paulasantamaria&lt;/a&gt;
's post:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/paulasantamaria" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WI_wFJLJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--mfEox-cB--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/61042/21d4b777-c557-4c4c-981e-4e43b0fa3037.jpg" alt="paulasantamaria image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/paulasantamaria/creating-a-simple-chrome-extension-36m" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Creating a simple Chrome extension&lt;/h2&gt;
      &lt;h3&gt;Paula Santamaría ・ Jan 12 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#chromeextension&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;br&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#3-add-logic-to-your-svelte-app" class="anchor"&gt;
  &lt;/a&gt;
  3. Add logic to your Svelte App
&lt;/h2&gt;

&lt;p&gt;Go to your &lt;code&gt;App.svelte&lt;/code&gt; and replace its content with the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Counter: {count}&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;on:click=&lt;/span&gt;&lt;span class="s"&gt;{sum}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; + &lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#4-build-your-extension" class="anchor"&gt;
  &lt;/a&gt;
  4. Build your extension
&lt;/h2&gt;

&lt;p&gt;When you run the &lt;code&gt;npm run build&lt;/code&gt; script on a Svelte project, a new folder called &lt;code&gt;public&lt;/code&gt; will appear.&lt;/p&gt;

&lt;p&gt;Because we want to include our extension files within this folder with the Svelte files, we'll need to install a library called &lt;a href="https://github.com/mysticatea/cpx"&gt;cpx&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--save&lt;/span&gt; cpx
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Cpx will allow us to move files from our extension folder to our public folder on each build.&lt;/p&gt;

&lt;p&gt;Finally, we need to update our build script within the &lt;code&gt;package.json&lt;/code&gt; file like this:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="err"&gt;{&lt;/span&gt;
  ...
  "scripts": {
&lt;span class="gd"&gt;-    "build": "rollup -c",   
&lt;/span&gt;&lt;span class="gi"&gt;+    "build": "cpx -C public/** public/** &amp;amp;&amp;amp; rollup -c &amp;amp;&amp;amp; cpx extension/**/*.* public",
&lt;/span&gt;    ...
  },
  ...
&lt;span class="err"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;With this new script, we're deleting the &lt;code&gt;public&lt;/code&gt; folder, building our Svelte app, and finally copying our extension files using cpx.&lt;/p&gt;

&lt;p&gt;That's it. Now, you can go to Google Chrome and load your extension by following these steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to chrome://extensions&lt;/li&gt;
&lt;li&gt;Click on the "Load unpacked" button&lt;/li&gt;
&lt;li&gt;Select your project's &lt;code&gt;public&lt;/code&gt; folder&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Every time you want to test an update, just run the &lt;code&gt;build&lt;/code&gt; script and your extension will be reloaded in your browser.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wkb6Mz71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/ySAqVIq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wkb6Mz71--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/ySAqVIq.gif" alt="Example of a chrome extension that uses Svelte"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#show-me-the-boilerplate" class="anchor"&gt;
  &lt;/a&gt;
  Show me the boilerplate!
&lt;/h1&gt;

&lt;p&gt;Check out my github repo to get the boilerplate:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ70wriM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mauro-codes"&gt;
        mauro-codes
      &lt;/a&gt; / &lt;a href="https://github.com/mauro-codes/chrome-extension-with-svelte"&gt;
        chrome-extension-with-svelte
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Boilerplate that includes a basic chrome extension that uses Svelte
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Building your chrome extension&lt;/h1&gt;
&lt;p&gt;Run the following commands:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell js-code-highlight"&gt;
&lt;pre&gt;npm i
npm run build&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Your extension build will be available within the &lt;code&gt;public&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;If you want to know more about this boilerplate, check out my &lt;a href="https://maurogarcia.dev/posts/how-to-build-your-next-chrome-extension-with-svelte" rel="nofollow"&gt;blog post&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mauro-codes/chrome-extension-with-svelte"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Let me know what you think in the comments below 👇&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>chromeextension</category>
    </item>
    <item>
      <title>How we extended GitLens’ Pull Request functionality in Visual Studio Code</title>
      <author>Brian Canzanella</author>
      <pubDate>Fri, 15 Jan 2021 15:23:53 +0000</pubDate>
      <link>https://dev.to/codestream/how-we-extended-gitlens-pull-request-functionality-in-visual-studio-code-42g8</link>
      <guid>https://dev.to/codestream/how-we-extended-gitlens-pull-request-functionality-in-visual-studio-code-42g8</guid>
      <description>&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens"&gt;GitLens&lt;/a&gt;, the incredible git-toolbelt extension for Visual Studio Code, recently added the ability for other VS Code extensions to tie into its user interface.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BVue05Ne--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/799/1%2A4gmSNSe3dgKh7DVFWu9c3A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BVue05Ne--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/799/1%2A4gmSNSe3dgKh7DVFWu9c3A.png" alt="We're looking at the GitLens UI. Click on the pull request icon to open this GitHub pull request with CodeStream"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Specifically, it added additional touchpoints around the ability to create and view pull requests. As a developer of an open source VS Code extension (&lt;a href="https://marketplace.visualstudio.com/items?itemName=CodeStream.codestream"&gt;CodeStream&lt;/a&gt;), this seemed like a great way to give out users additional choices with regard to how they create and view their pull requests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SWr-RtY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/797/1%2ACK4QOS5617Vn8CBPvhbayw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SWr-RtY8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/797/1%2ACK4QOS5617Vn8CBPvhbayw.png" alt="Another view in GitLens. Click the pull request icon to create a new GitHub pull request with CodeStream"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here comes the technical parts!&lt;/p&gt;

&lt;p&gt;At CodeStream, we use TypeScript, so you'll need a definition file for the GitLens api. I have this saved in @types/gitlens.d.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { Disposable } from "vscode";

export { Disposable } from "vscode";

export interface CreatePullRequestActionContext {
    readonly type: "createPullRequest";
    readonly branch: {
        readonly name: string;
        readonly remote?: {
            readonly name: string;
            readonly provider?: string;
            readonly url?: string;
        };
        readonly repoPath: string;
    };
}

export interface OpenPullRequestActionContext {
    readonly type: "openPullRequest";
    readonly pullRequest: {
        readonly id: string;
        readonly provider: string;
        readonly repoPath: string;
        readonly url: string;
    };
}

export type ActionContext = CreatePullRequestActionContext | OpenPullRequestActionContext;
export type Action&amp;lt;T extends ActionContext&amp;gt; = T["type"];

export interface ActionRunner {
    readonly label: string;

    run(context: ActionContext): void | Promise&amp;lt;void&amp;gt;;
}

export interface GitLensApi {
    registerActionRunner&amp;lt;T extends ActionContext&amp;gt;(
        action: Action&amp;lt;T&amp;gt;,
        runner: ActionRunner
    ): Disposable;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Inside your extension's &lt;code&gt;activatefunction&lt;/code&gt; is where you can create this integration. Below, I've added a simplified version of what we finally went with. The main idea is to find either the stable version of GitLens or the insiders (aka the nightly version) and listen for "openPullRequest" and "createPullRequest" attaching using the GitLens api &lt;code&gt;registerActionProvider&lt;/code&gt; method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const gitLens = extensions.getExtension&amp;lt;Promise&amp;lt;GitLensApi&amp;gt;&amp;gt;("eamodio.gitlens") ||
extensions.getExtension&amp;lt;Promise&amp;lt;GitLensApi&amp;gt;&amp;gt;("eamodio.gitlens-insiders");
if (gitlens &amp;amp;&amp;amp; gitlens.isActive) {
 const api: GitLensApi = await gitlens.exports;
 api.registerActionRunner("openPullRequest", {
  label: "CodeStream",
  run: function(context: OpenPullRequestActionContext) {
   console.log(context, "it worked!")
  }
 });
 api.registerActionRunner("createPullRequest", {
  label: "CodeStream",
  run: function(context: CreatePullRequestActionContext) {
   console.log(context, "it worked")
  }
 }); 
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Our implementation was a little more involved since we wanted to ensure that GitLens was actually active before attempting to register. There isn't a great way to truly know when another extension is active, so we used a polling mechanism. As noted in a comment in the code, there is an open issue with the VS Code team to address this.&lt;/p&gt;

&lt;p&gt;Our complete solution can be found in the &lt;a href="https://github.com/TeamCodeStream/codestream/commit/236b4843a0d48a96ae0ecfebbb524e127a68ac7d"&gt;CodeStream repo&lt;/a&gt; on GitHub or alternatively on &lt;a href="https://api.codestream.com/p/W75JY6zGmBhgt48D/HP9pe9TTRnOdG_7XJhusYA"&gt;CodeStream&lt;/a&gt; itself.&lt;/p&gt;

&lt;p&gt;Look out for this feature in the next version of &lt;a href="https://www.codestream.com/"&gt;CodeStream&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>gitlens</category>
      <category>codestream</category>
      <category>git</category>
    </item>
    <item>
      <title>Creating an Animated TextField with React Native</title>
      <author>Halil Bilir</author>
      <pubDate>Fri, 15 Jan 2021 14:23:45 +0000</pubDate>
      <link>https://dev.to/halilb/creating-an-animated-textfield-with-react-native-4jh2</link>
      <guid>https://dev.to/halilb/creating-an-animated-textfield-with-react-native-4jh2</guid>
      <description>&lt;p&gt;Five years ago, I created &lt;a href="https://github.com/halilb/react-native-textinput-effects"&gt;react-native-textinput-effects&lt;/a&gt; library. And the &lt;code&gt;Animated&lt;/code&gt; library behind that has not changed much since then. So I'm going to use the same principles, and build a new React Native &lt;code&gt;TextInput&lt;/code&gt; component from scratch.&lt;/p&gt;

&lt;p&gt;I'll implement the &lt;code&gt;material-ui&lt;/code&gt; animation this time. It's a simple one so I think it's a useful example to understand the basics of animation in React Native.&lt;/p&gt;

&lt;p&gt;You may find the full version of this component on &lt;a href="https://gist.github.com/halilb/9ac8e43e95ffbda42d52c34d420e78a4#file-textfield-tsx"&gt;Github&lt;/a&gt;. I also managed to port the React Native code into the web thanks to &lt;a href="https://github.com/necolas/react-native-web"&gt;react-native-web&lt;/a&gt;. You can play with it on my &lt;a href="https://bilir.me/blog/creating-an-animated-textfield-with-react-native"&gt;blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As you may see in the preview, the TextField has four main UI states that we are going to implement:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Empty and unfocused state&lt;/li&gt;
&lt;li&gt;Focused state&lt;/li&gt;
&lt;li&gt;Filled and unfocused state&lt;/li&gt;
&lt;li&gt;Error state&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#starting-with-a-basic-textfield" class="anchor"&gt;
  &lt;/a&gt;
  Starting with a basic TextField
&lt;/h2&gt;

&lt;p&gt;Let's start with a basic &lt;code&gt;TextField&lt;/code&gt; that extends &lt;em&gt;react-native TextInput&lt;/em&gt; and styles it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;TextInput&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-native&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// extend from native TextInput props&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Props&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ComponentProps&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;TextInput&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;TextField&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Props&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="cm"&gt;/*
   ** spread operator helps to extract style prop and assign
   ** any remaining props to the `restOfProps` variable.
   ** it is pretty handy here as we need to support
   ** all the props the native TextInput component has.
   */&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;restOfProps&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TextInput&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;restOfProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;StyleSheet&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;borderColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#B9C4CA&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;borderWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;borderRadius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontFamily&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Avenir-Medium&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;TextField&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The output is a simple TextInput with a border and placeholder text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;TextField&lt;/span&gt; &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Cardholder name"&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6c4TUXpN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bilir.me/static/images/creating-material-textfield/basic_input.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6c4TUXpN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bilir.me/static/images/creating-material-textfield/basic_input.png" alt="Basic Input"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-label" class="anchor"&gt;
  &lt;/a&gt;
  Creating the label
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;placeholder&lt;/code&gt; prop plays the label role only when the input is empty. This isn't enough for our case so we need to create our custom label that'll be displayed on top of the input.&lt;/p&gt;

&lt;p&gt;Wrapping the TextInput with a parent &lt;code&gt;View&lt;/code&gt; and creating another &lt;code&gt;View&lt;/code&gt; as a sibling for the label would give us lots of room to customize our label. We'll use &lt;code&gt;position: absolute&lt;/code&gt; style for the label to make sure it's located on top of the &lt;code&gt;TextInput&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Note that I've extended the native &lt;code&gt;TextInput&lt;/code&gt; component props with a new prop called &lt;code&gt;label&lt;/code&gt; which will be unique to the &lt;code&gt;TextField&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="gd"&gt;-type Props = React.ComponentProps&amp;lt;typeof TextInput&amp;gt;
&lt;/span&gt;&lt;span class="gi"&gt;+type Props = React.ComponentProps&amp;lt;typeof TextInput&amp;gt; &amp;amp; {
+  label: string
+}
&lt;/span&gt;
 const TextField: React.FC&amp;lt;Props&amp;gt; = (props) =&amp;gt; {
&lt;span class="gd"&gt;-  const { style, ...restOfProps } = props
&lt;/span&gt;&lt;span class="gi"&gt;+  const { label, style, ...restOfProps } = props
&lt;/span&gt;   return (
&lt;span class="gd"&gt;-    &amp;lt;TextInput
-      style={[style, styles.input]}
-      {...restOfProps}
-    /&amp;gt;
&lt;/span&gt;&lt;span class="gi"&gt;+    &amp;lt;View style={style}&amp;gt;
+      &amp;lt;TextInput style={styles.input} {...restOfProps} /&amp;gt;
+      &amp;lt;View style={styles.labelContainer}&amp;gt;
+        &amp;lt;Text style={styles.label}&amp;gt;{label}&amp;lt;/Text&amp;gt;
+      &amp;lt;/View&amp;gt;
+    &amp;lt;/View&amp;gt;
&lt;/span&gt;   )
 }

 const styles = StyleSheet.create({
&lt;span class="gi"&gt;+  labelContainer: {
+    position: 'absolute',
+    left: 16,
+    top: -6,
+    paddingHorizontal: 8,
+    backgroundColor: 'white',
+  },
+  label: {
+    fontFamily: 'Avenir-Heavy',
+    fontSize: 12,
+  },
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;TextField&lt;/code&gt; looks like this now:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bqurLf7v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bilir.me/static/images/creating-material-textfield/creating_the_label.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bqurLf7v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bilir.me/static/images/creating-material-textfield/creating_the_label.png" alt="Creating the Label"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#positioning-the-label-based-on-focused-state" class="anchor"&gt;
  &lt;/a&gt;
  Positioning the label based on focused state
&lt;/h2&gt;

&lt;p&gt;The label needs to move between the center and top of the input depending on the focused state. Let's start with simply positioning the label based on an internal &lt;code&gt;isFocused&lt;/code&gt; state without any animation.&lt;/p&gt;

&lt;p&gt;We may listen &lt;code&gt;TextInput&lt;/code&gt;s &lt;code&gt;onBlur&lt;/code&gt; and &lt;code&gt;onFocus&lt;/code&gt; methods and modify our &lt;code&gt;isFocused&lt;/code&gt; state based on them. And manipulating the &lt;code&gt;top&lt;/code&gt; style of our label based on &lt;code&gt;isFocused&lt;/code&gt; state will be enough to re-position the label. We'll also modify the label font size and color.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;const TextField: React.FC&amp;lt;Props&amp;gt; = (props) =&amp;gt; {
&lt;/span&gt;   const {
     label,
     style,
&lt;span class="gi"&gt;+    onBlur,
+    onFocus,
&lt;/span&gt;     ...restOfProps
   } = props
&lt;span class="gi"&gt;+  const [isFocused, setIsFocused] = useState(false)
&lt;/span&gt;
   return (
     &amp;lt;View style={style}&amp;gt;
&lt;span class="gd"&gt;-      &amp;lt;TextInput style={styles.input} {...restOfProps} /&amp;gt;
-      &amp;lt;View style={styles.labelContainer}&amp;gt;
-        &amp;lt;Text style={styles.label}&amp;gt;{label}&amp;lt;/Text&amp;gt;
&lt;/span&gt;&lt;span class="gi"&gt;+      &amp;lt;TextInput
+        style={styles.input}
+        {...restOfProps}
+        onBlur={(event) =&amp;gt; {
+          setIsFocused(false)
+          onBlur?.(event)
+        }}
+        onFocus={(event) =&amp;gt; {
+          setIsFocused(true)
+          onFocus?.(event)
+        }}
+      /&amp;gt;
+      &amp;lt;View
+        style={[
+          styles.labelContainer,
+          {
+            top: isFocused ? -6 : 24,
+          },
+        ]}
+      &amp;gt;
+        &amp;lt;Text
+          style={[
+            styles.label,
+            {
+              fontSize: isFocused ? 12 : 16,
+              color: isFocused ? '#080F9C' : '#B9C4CA',
+            },
+          ]}
+        &amp;gt;
+          {label}
+        &amp;lt;/Text&amp;gt;
&lt;/span&gt;       &amp;lt;/View&amp;gt;
     &amp;lt;/View&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#animating-the-label" class="anchor"&gt;
  &lt;/a&gt;
  Animating the label
&lt;/h2&gt;

&lt;p&gt;We now have a label that positions itself based on the focused state. React Native has a built-in &lt;code&gt;Animated&lt;/code&gt; component that lets you build animations and that's good enough to support our simple animation. We will create an &lt;code&gt;Animated.Value&lt;/code&gt; to represent the focused state and &lt;strong&gt;interpolate&lt;/strong&gt; that to label positioning styles.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Animated.Value&lt;/code&gt; accepts a number parameter so we need to express our &lt;code&gt;isFocused&lt;/code&gt; state with a number. I'm going to use &lt;strong&gt;0&lt;/strong&gt; for the unfocused and &lt;strong&gt;1&lt;/strong&gt; for the focused state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;   const [isFocused, setIsFocused] = useState(false)

+  const focusAnim = useRef(new Animated.Value(0)).current
&lt;span class="gi"&gt;+
+  /*
+  ** This effect will trigger the animation every
+  ** time `isFocused` value changes.
+  */
+  useEffect(() =&amp;gt; {
+    Animated.timing(focusAnim, {
+      toValue: isFocused ? 1 : 0,
+      // I took duration and easing values
+      // from material.io demo page
+      duration: 150,
+      easing: Easing.bezier(0.4, 0, 0.2, 1),
+      // we'll come back to this later
+      useNativeDriver: false,
+    }).start()
+  }, [focusAnim, isFocused])
+
&lt;/span&gt;   return (
     &amp;lt;View style={style}&amp;gt;
&lt;span class="gd"&gt;-      &amp;lt;View
&lt;/span&gt;&lt;span class="gi"&gt;+      &amp;lt;Animated.View
&lt;/span&gt;         style={[
           styles.labelContainer,
           {
&lt;span class="gd"&gt;-            top: isFocused ? -6 : 24,
&lt;/span&gt;&lt;span class="gi"&gt;+            top: focusAnim.interpolate({
+              inputRange: [0, 1],
+              outputRange: [24, -6],
+            }),
&lt;/span&gt;           },
         ]}
       &amp;gt;
&lt;span class="gd"&gt;-        &amp;lt;Text
&lt;/span&gt;&lt;span class="gi"&gt;+        &amp;lt;Animated.Text
&lt;/span&gt;           style={[
             styles.label,
             {
&lt;span class="gd"&gt;-              fontSize: isFocused ? 12 : 16,
&lt;/span&gt;&lt;span class="gi"&gt;+              fontSize: focusAnim.interpolate({
+                inputRange: [0, 1],
+                outputRange: [16, 12],
+              }),
&lt;/span&gt;               color: isFocused ? '#080F9C' : '#B9C4CA',
             },
           ]}
         &amp;gt;
           {label}
&lt;span class="gd"&gt;-        &amp;lt;/Text&amp;gt;
-      &amp;lt;/View&amp;gt;
&lt;/span&gt;&lt;span class="gi"&gt;+        &amp;lt;/Animated.Text&amp;gt;
+      &amp;lt;/Animated.View&amp;gt;
&lt;/span&gt;     &amp;lt;/View&amp;gt;
   )
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#using-the-native-driver" class="anchor"&gt;
  &lt;/a&gt;
  Using the native driver
&lt;/h2&gt;

&lt;p&gt;Our animation works perfectly right now. But there is one more thing we can do to make it more smooth on lower-end devices by passing &lt;code&gt;useNativeDriver&lt;/code&gt; parameter to the &lt;code&gt;Animated&lt;/code&gt; API.&lt;/p&gt;

&lt;p&gt;Here is the description from React Native &lt;a href="https://reactnative.dev/docs/animations#using-the-native-driver"&gt;documentation&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By using the native driver, we send everything about the animation to native before starting the animation, allowing native code to perform the animation on the UI thread without having to go through the bridge on every frame. Once the animation has started, the JS thread can be blocked without affecting the animation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The problem is: the native driver can work with a limited set of properties such as &lt;code&gt;transform&lt;/code&gt; and &lt;code&gt;opacity&lt;/code&gt;. So it doesn't work with &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;fontSize&lt;/code&gt; properties and we need to replace them with supported properties. &lt;code&gt;Animated&lt;/code&gt; throws an exception when you set &lt;code&gt;useNativeDriver: true&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PiD8_Hbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bilir.me/static/images/creating-material-textfield/top_not_supported.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PiD8_Hbs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bilir.me/static/images/creating-material-textfield/top_not_supported.png" alt="Top not supported"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fortunately, &lt;code&gt;transform&lt;/code&gt; can create the same animation behavior here. We'll use its &lt;code&gt;scale&lt;/code&gt; property to replace the &lt;code&gt;fontSize&lt;/code&gt; animation, and &lt;code&gt;translateY&lt;/code&gt; to move the label. Unfortunately, using &lt;code&gt;scale&lt;/code&gt; transform causes the label to move on the x-axis. The only solution I could find to fix it was creating an extra &lt;code&gt;translateX&lt;/code&gt; transform and undo the x-axis movement by manipulating it manually.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;         style={[
           styles.labelContainer,
           {
&lt;span class="gd"&gt;-            top: focusAnim.interpolate({
-              inputRange: [0, 1],
-              outputRange: [24, -6],
-            }),
&lt;/span&gt;&lt;span class="gi"&gt;+            transform: [
+              {
+                scale: focusAnim.interpolate({
+                  inputRange: [0, 1],
+                  outputRange: [1, 0.75],
+                }),
+              },
+              {
+                translateY: focusAnim.interpolate({
+                  inputRange: [0, 1],
+                  outputRange: [24, -12],
+                }),
+              },
+              {
+                translateX: focusAnim.interpolate({
+                  inputRange: [0, 1],
+                  outputRange: [16, 0],
+                }),
+              },
+            ],
&lt;/span&gt;           },
         ]}
       &amp;gt;
&lt;span class="gd"&gt;-        &amp;lt;Animated.Text
&lt;/span&gt;&lt;span class="gi"&gt;+        &amp;lt;Text
&lt;/span&gt;           style={[
             styles.label,
             {
&lt;span class="gd"&gt;-              fontSize: focusAnim.interpolate({
-                inputRange: [0, 1],
-                outputRange: [16, 12],
-              }),
&lt;/span&gt;               color: isFocused ? '#080F9C' : '#B9C4CA',
             },
           ]}
         &amp;gt;
           {label}
&lt;span class="gd"&gt;-        &amp;lt;/Animated.Text&amp;gt;
&lt;/span&gt;&lt;span class="gi"&gt;+        &amp;lt;/Text&amp;gt;
&lt;/span&gt;       &amp;lt;/Animated.View&amp;gt;
     &amp;lt;/View&amp;gt;
   )
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You can now start using the native driver by passing &lt;code&gt;useNativeDriver: true&lt;/code&gt; to &lt;code&gt;Animated&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-errored-state" class="anchor"&gt;
  &lt;/a&gt;
  Creating the errored state
&lt;/h2&gt;

&lt;p&gt;This is the final TextField state we need to support. We'll simply define a new prop called &lt;code&gt;errorText&lt;/code&gt; and modify the label and border-color when that prop is not empty.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="p"&gt;type Props = React.ComponentProps&amp;lt;typeof TextInput&amp;gt; &amp;amp; {
&lt;/span&gt;   label: string
&lt;span class="gi"&gt;+  errorText?: string | null
&lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;const TextField: React.FC&amp;lt;Props&amp;gt; = (props) =&amp;gt; {
&lt;/span&gt;   const {
     label,
&lt;span class="gi"&gt;+    errorText,
&lt;/span&gt;     style,
     onBlur,
     onFocus,
     ...restOfProps
   } = props

+  let color = isFocused ? '#080F9C' : '#B9C4CA'
&lt;span class="gi"&gt;+  if (errorText) {
+    color = '#B00020'
+  }
+
&lt;/span&gt;   return (
     &amp;lt;View style={style}&amp;gt;
       &amp;lt;TextInput
&lt;span class="gd"&gt;-        style={styles.input}
&lt;/span&gt;&lt;span class="gi"&gt;+        style={[
+          styles.input,
+          {
+            borderColor: color,
+          },
+        ]}
&lt;/span&gt;         {...restOfProps}
         onBlur={(event) =&amp;gt; {
           setIsFocused(false)
&lt;span class="p"&gt;@@ -72,13 +83,15 @@&lt;/span&gt; const TextField: React.FC&amp;lt;Props&amp;gt; = (props) =&amp;gt; {
           style={[
             styles.label,
             {
&lt;span class="gd"&gt;-              color: isFocused ? '#080F9C' : '#B9C4CA',
&lt;/span&gt;&lt;span class="gi"&gt;+              color,
&lt;/span&gt;             },
           ]}
         &amp;gt;
           {label}
&lt;span class="gi"&gt;+          {errorText ? '*' : ''}
&lt;/span&gt;         &amp;lt;/Text&amp;gt;
       &amp;lt;/Animated.View&amp;gt;
&lt;span class="gi"&gt;+      {!!errorText &amp;amp;&amp;amp; &amp;lt;Text style={styles.error}&amp;gt;{errorText}&amp;lt;/Text&amp;gt;}
&lt;/span&gt;     &amp;lt;/View&amp;gt;
   )
 }

 const styles = StyleSheet.create({
&lt;span class="gi"&gt;+  error: {
+    marginTop: 4,
+    marginLeft: 12,
+    fontSize: 12,
+    color: '#B00020',
+    fontFamily: 'Avenir-Medium',
+  },
&lt;/span&gt; })
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-touches" class="anchor"&gt;
  &lt;/a&gt;
  Final touches
&lt;/h2&gt;

&lt;p&gt;TextField looks great now but there are a few minor problems we should fix.&lt;/p&gt;

&lt;p&gt;The first problem is: The text we enter disappears when &lt;code&gt;isFocused: false&lt;/code&gt;. So we need to make sure we're always positioning the label at the top when the input value is not empty:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;  const {
    label,
    errorText,
&lt;span class="gi"&gt;+   value,
&lt;/span&gt;    style,
    onBlur,
    onFocus,
    ...restOfProps
  } = props
   const [isFocused, setIsFocused] = useState(false)

   const focusAnim = useRef(new Animated.Value(0)).current

   useEffect(() =&amp;gt; {
     Animated.timing(focusAnim, {
&lt;span class="gd"&gt;-      toValue: isFocused ? 1 : 0,
&lt;/span&gt;&lt;span class="gi"&gt;+      toValue: isFocused || !!value ? 1 : 0,
&lt;/span&gt;       duration: 150,
       easing: Easing.bezier(0.4, 0, 0.2, 1),
       useNativeDriver: true,
     }).start()
&lt;span class="gd"&gt;-  }, [focusAnim, isFocused])
&lt;/span&gt;&lt;span class="gi"&gt;+  // make sure you are passing `value` to the dependency array
+  // so the effect will be run anytime the value changes.
+  }, [focusAnim, isFocused, value]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The second problem is happening when you click on the label on empty input. React Native doesn't trigger the keyboard here as the clicked element is just a &lt;code&gt;Text&lt;/code&gt; rather than a &lt;code&gt;TextInput&lt;/code&gt;. So we need to turn the label into a button and trigger the input focus event manually:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// create an input ref&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputRef&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TextInput&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// pass `inputRef` to the TextInput&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TextInput&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;inputRef&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="c1"&gt;// wrap label View with `TouchableWithoutFeedback`&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;TouchableWithoutFeedback&lt;/span&gt; &lt;span class="nx"&gt;onPress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;inputRef&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;focus&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#output" class="anchor"&gt;
  &lt;/a&gt;
  Output
&lt;/h2&gt;

&lt;p&gt;Here is the gif preview of the &lt;code&gt;TextField&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GyUbYQqS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sx28993py14eu7nhum6r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GyUbYQqS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/sx28993py14eu7nhum6r.gif" alt="preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And again, you can find the full version on &lt;a href="https://gist.github.com/halilb/9ac8e43e95ffbda42d52c34d420e78a4#file-textfield-tsx"&gt;Github&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>typescript</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>How To Make An Analog Clock With HTML, CSS and Pure JavaScript</title>
      <author>erisan akorede samuel</author>
      <pubDate>Fri, 15 Jan 2021 12:53:15 +0000</pubDate>
      <link>https://dev.to/eris202/how-to-make-an-analog-clock-with-html-css-and-pure-javascript-4ap9</link>
      <guid>https://dev.to/eris202/how-to-make-an-analog-clock-with-html-css-and-pure-javascript-4ap9</guid>
      <description>&lt;p&gt;Welcome to this interesting tutorial on creating a real-time analog clock with &lt;code&gt;HTML&lt;/code&gt;, &lt;code&gt;CSS&lt;/code&gt;, and &lt;code&gt;JavaScript&lt;/code&gt;. Another interesting part of this tutorial is that no library will be used, we are making it with pure JavaScript. Before we move on, you need to have proficient &lt;a href="https://lyty.dev"&gt;knowledge of HTML, CSS&lt;/a&gt;, and JavaScript, this enables you to understand the step-by-step code as we move one. &lt;br&gt;
At the end of this tutorial, you will be able to build an awesome working analog clock like &lt;a href="https://lyty.dev/diy/javascript-clock-example-1.html"&gt;this &lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#lets-get-started" class="anchor"&gt;
  &lt;/a&gt;
  Let's get started!
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Html markup --&amp;gt;&lt;/span&gt;  
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;  
  &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;  
    &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Analog Clock&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;  
  &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;  
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&lt;/span&gt;  
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#creating-the-clock-number" class="anchor"&gt;
  &lt;/a&gt;
  Creating the clock number
&lt;/h3&gt;

&lt;p&gt;An analog clock has a 12 digitsso we are going to create a twelve &lt;code&gt;&amp;lt;div&amp;gt;'s&lt;/code&gt; with &lt;code&gt;class="clock-number"&lt;/code&gt; and each &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will be given another class according to its &lt;code&gt;nth position&lt;/code&gt;. The first &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will be &lt;code&gt;class="clock-number num1"&lt;/code&gt; and the second &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; will be &lt;code&gt;class="clock-number num2"&lt;/code&gt; till it reaches &lt;code&gt;class="clock-number num12"&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;  
            &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Analog Clock&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;  
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num7"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num9"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num10"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num11"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num12"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#inserting-the-clock-number" class="anchor"&gt;
  &lt;/a&gt;
  Inserting the clock number
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;  
            &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Analog Clock&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;  
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;4&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;6&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num7"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;7&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;8&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num9"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;9&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num10"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;10&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num11"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;11&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num12"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;12&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#inserting-other-important-elements" class="anchor"&gt;
  &lt;/a&gt;
  Inserting Other Important Elements
&lt;/h3&gt;

&lt;p&gt;Now, we will be inserting elements like the second reading and the date:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;  
            &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Analog Clock&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;  
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
              &lt;span class="c"&gt;&amp;lt;!-- Current day--&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"days"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="c"&gt;&amp;lt;!-- Second reading--&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"reading"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="c"&gt;&amp;lt;!-- Clock number--&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;4&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;6&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num7"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;7&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;8&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num9"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;9&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num10"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;10&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num11"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;11&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
              &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num12"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;12&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
          &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#styling-the-clock" class="anchor"&gt;
  &lt;/a&gt;
  Styling the clock
&lt;/h3&gt;

&lt;p&gt;The CSS is inserted in the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; in the head section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;animation-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;clock-animation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;animation-iteration-count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;animation-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;overflow-x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;cursive&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;clock-animation&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
        &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#3e5afb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  


        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#3e5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

        &lt;span class="p"&gt;}&lt;/span&gt;  

            &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
                &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.clock-container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;350px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;350px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.clock-container&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.clock-number&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.clock-number&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;13px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;13%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.clock-number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;30deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-30deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;60deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num2&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-60deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num3&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;90deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num3&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-90deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num4&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;120deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num4&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-120deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num5&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;150deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num5&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-150deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num6&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;180deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num6&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-180deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num7&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;210deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num7&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-210deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num8&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;240deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num8&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-240deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num9&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;270deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num9&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-270deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num10&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;300deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num10&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-300deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num11&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;330deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num11&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-330deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num12&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;360deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num12&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-360deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.clock-hand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.clock-hand&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.second-hand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;32%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.minute-hand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;30%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.hour-hand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.second-hand&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
            &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;-6%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.current-day&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
            &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;25%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.current-seconds&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
            &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;25%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we are done with the HTML part and also done styling the HTML &lt;br&gt;
document, let's move into building the analog clock engine.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-javascript-code" class="anchor"&gt;
  &lt;/a&gt;
  The JavaScript Code
&lt;/h3&gt;

&lt;p&gt;It is advisable you place your &lt;code&gt;script&lt;/code&gt; tag precisely before the closing tag of the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Furthermore, the JavaScript &lt;code&gt;var&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; will be used to &lt;a href="https://erisana.xyz/how-to-write-variables-in-different-programming-languages/"&gt;define a variable&lt;/a&gt; in this lesson, there we go:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;secondHand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#sec&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;minHand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#min&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hourHand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#hr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  


        &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clockRotating&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;clockRotating&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;  
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;  

            &lt;span class="nx"&gt;secondHand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rotate(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deg)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;  
            &lt;span class="nx"&gt;minHand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rotate(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deg)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;  
            &lt;span class="nx"&gt;hourHand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rotate(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deg)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;  

            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.current-day&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toDateString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.current-seconds&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

        &lt;span class="p"&gt;}&lt;/span&gt;  

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Boom, you should have a working Analog clock made with JavaScript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-full-code" class="anchor"&gt;
  &lt;/a&gt;
  The Full Code
&lt;/h3&gt;

&lt;p&gt;If you are lost the full code is written below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;  
           &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;  

        &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;animation-name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;clock-animation&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;animation-iteration-count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;animation-duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;overflow-x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;cursive&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;clock-animation&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
        &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
        &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#3e5afb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  


        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#3e5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

        &lt;span class="p"&gt;}&lt;/span&gt;  

            &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
                &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.clock-container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;350px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;350px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.clock-container&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.clock-number&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.clock-number&lt;/span&gt;&lt;span class="nd"&gt;:after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;13px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;3px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;13%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  

        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.clock-number&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num1&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;30deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num1&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-30deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;60deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num2&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-60deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num3&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;90deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num3&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-90deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num4&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;120deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num4&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-120deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num5&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;150deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num5&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-150deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num6&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;180deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num6&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-180deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num7&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;210deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num7&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-210deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num8&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;240deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num8&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-240deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num9&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;270deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num9&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-270deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num10&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;300deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num10&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-300deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.num11&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;330deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num11&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-330deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num12&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;360deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.num12&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-360deg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.clock-hand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.clock-hand&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.second-hand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;32%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.minute-hand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;30%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.hour-hand&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.second-hand&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt; &lt;span class="no"&gt;purple&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
            &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;-6%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  

        &lt;span class="nc"&gt;.current-day&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
            &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;25%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
        &lt;span class="p"&gt;}&lt;/span&gt;  
        &lt;span class="nc"&gt;.current-seconds&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;  
            &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;12px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;translateX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
            &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;25%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="no"&gt;purple&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#fff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4px&lt;/span&gt;&lt;span class="p"&gt;;}&lt;/span&gt;  
           &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;  
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"current-day"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  

                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                 &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"current-seconds"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  

                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"current-seconds"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num1"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                        &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num3"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                 &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                     &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;4&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                 &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                    &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                     &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                     &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                       &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;6&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num7"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;7&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                     &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;8&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num9"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                      &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;9&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                     &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num10"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                       &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;10&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                         &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num11"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                     &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;11&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-number num12"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                   &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;12&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                     &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-hand"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"sec"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"second-hand"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-hand"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"min"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                 &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"minute-hand"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
               &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"clock-hand"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"hr"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
                 &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"hour-hand"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
                &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  

            &lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;  

            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;secondHand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#sec&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;minHand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#min&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hourHand&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#hr&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  


        &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;clockRotating&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;clockRotating&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;  
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;  
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;  

            &lt;span class="nx"&gt;secondHand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rotate(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deg)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;  
            &lt;span class="nx"&gt;minHand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rotate(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;getMinutes&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deg)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;  
            &lt;span class="nx"&gt;hourHand&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rotate(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;getHours&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deg)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;  

            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.current-day&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toDateString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
            &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.current-seconds&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getSeconds&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  

        &lt;span class="p"&gt;}&lt;/span&gt;      
            &lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;  
        &lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;  

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Hope you gain from this lesson? Let me know by commenting below &lt;/p&gt;

</description>
      <category>html</category>
      <category>csharp</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Tutorial - Build a smooth, animated blob using SVG + JS</title>
      <author>George Francis</author>
      <pubDate>Fri, 15 Jan 2021 12:47:22 +0000</pubDate>
      <link>https://dev.to/georgedoescode/tutorial-build-a-smooth-animated-blob-using-svg-js-3pne</link>
      <guid>https://dev.to/georgedoescode/tutorial-build-a-smooth-animated-blob-using-svg-js-3pne</guid>
      <description>&lt;p&gt;Hey there! Do you love gradients, fear hard edges, maybe own an enormous collection of lava lamps? &lt;/p&gt;

&lt;p&gt;Oh… you do? &lt;/p&gt;

&lt;p&gt;You’re in the right place, my friend! &lt;/p&gt;

&lt;p&gt;I posted this CodePen on Twitter / Reddit land a couple of days ago: &lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/georgedoescode/embed/oNzamjV?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Since posting, a few folks have asked for some info about how it was made, so I thought I would write a short tutorial on the process 👓.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#prerequisites" class="anchor"&gt;
  &lt;/a&gt;
  Prerequisites ℹ️
&lt;/h2&gt;

&lt;p&gt;This tutorial is geared towards people comfortable with JavaScript, HTML and CSS. A degree of familiarity with SVG is also handy here, although this could be a good opportunity to dip your toe into the SVG ocean if you haven’t before.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#svg-markup" class="anchor"&gt;
  &lt;/a&gt;
  SVG markup
&lt;/h2&gt;

&lt;p&gt;Let’s start off by adding some markup for our &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-gradient-raw-ltlineargradientgt-endraw-" class="anchor"&gt;
  &lt;/a&gt;
  The gradient (&lt;code&gt;&amp;lt;linearGradient&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;

&lt;p&gt;One of the most important aspects of this sketch is the modulating gradient fill that you see within the blob. It is also a great starting point for our code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- Draw everything relative to a 200x200 canvas, this will then scale to any resolution --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 200 200"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;defs&amp;gt;&lt;/span&gt;
    &lt;span class="c"&gt;&amp;lt;!-- Our gradient fill #gradient --&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;linearGradient&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"gradient"&lt;/span&gt; &lt;span class="na"&gt;gradientTransform=&lt;/span&gt;&lt;span class="s"&gt;"rotate(90)"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="c"&gt;&amp;lt;!-- Use CSS custom properties for the start / stop colors of the gradient --&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;stop&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"gradientStop1"&lt;/span&gt; &lt;span class="na"&gt;offset=&lt;/span&gt;&lt;span class="s"&gt;"0%"&lt;/span&gt; &lt;span class="na"&gt;stop-color=&lt;/span&gt;&lt;span class="s"&gt;"var(--startColor)"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;stop&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"gradientStop2 "&lt;/span&gt; &lt;span class="na"&gt;offset=&lt;/span&gt;&lt;span class="s"&gt;"100%"&lt;/span&gt; &lt;span class="na"&gt;stop-color=&lt;/span&gt;&lt;span class="s"&gt;"var(--stopColor)"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/linearGradient&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/defs&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you aren’t too familiar with SVG, check out the MDN docs on &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient"&gt;linearGradient&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you check out the code, you might notice I am using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties"&gt;CSS custom properties&lt;/a&gt; for the start / stop values of the gradient, but they don’t have any values yet. &lt;strong&gt;This is fine, we are going to set them dynamically using JavaScript a little later.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-blob-shape-raw-ltpathgt-endraw-" class="anchor"&gt;
  &lt;/a&gt;
  The blob shape (&lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;)
&lt;/h3&gt;

&lt;p&gt;The blob shape you see is a single SVG &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt;. &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is a powerful SVG element that can be used to render a whole variety of shapes using a combination of curves and lines. I won’t get into it too much here to keep things brief, but &lt;a href="https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Paths"&gt;here is a great primer on MDN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s add a &lt;code&gt;&amp;lt;path /&amp;gt;&lt;/code&gt; element to our markup:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;viewBox=&lt;/span&gt;&lt;span class="s"&gt;"0 0 200 200"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  ...
  &lt;span class="c"&gt;&amp;lt;!-- Add a path with an empty data attribute, fill it with the gradient we defined earlier --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;path&lt;/span&gt; &lt;span class="na"&gt;d=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt; &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"url('#gradient')"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/path&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Right now, the &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; element has an empty &lt;code&gt;d&lt;/code&gt; attribute. &lt;code&gt;d&lt;/code&gt; stands for &lt;code&gt;data&lt;/code&gt; and is used to define what shape the path is. &lt;strong&gt;We are going to set this a little later in our JavaScript.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#style-it-out" class="anchor"&gt;
  &lt;/a&gt;
  Style it out 💅
&lt;/h2&gt;

&lt;p&gt;OK, so we have all the SVG markup we need! Nice. We shouldn’t need to touch any markup for the rest of this tutorial as we can simply manipulate our custom properties and update the &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; &lt;code&gt;data&lt;/code&gt; attribute. &lt;/p&gt;

&lt;p&gt;We could do with adding a little CSS though. Nothing too crazy, let’s just make sure our blob dimensions always fit the viewport and it is aligned perfectly centre-aligned:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;align&lt;/span&gt; &lt;span class="err"&gt;our&lt;/span&gt; &lt;span class="err"&gt;svg&lt;/span&gt; &lt;span class="err"&gt;to&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;center&lt;/span&gt; &lt;span class="err"&gt;of&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;viewport&lt;/span&gt; &lt;span class="err"&gt;both&lt;/span&gt; &lt;span class="err"&gt;horizontally&lt;/span&gt; &lt;span class="err"&gt;and&lt;/span&gt; &lt;span class="err"&gt;vertically&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;place-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nt"&gt;svg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="err"&gt;perfectly&lt;/span&gt; &lt;span class="err"&gt;square&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;svg&amp;gt;&lt;/span&gt; &lt;span class="err"&gt;element&lt;/span&gt; &lt;span class="err"&gt;that&lt;/span&gt; &lt;span class="err"&gt;will&lt;/span&gt; &lt;span class="err"&gt;never&lt;/span&gt; &lt;span class="err"&gt;overflow&lt;/span&gt; &lt;span class="err"&gt;the&lt;/span&gt; &lt;span class="err"&gt;viewport&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90vmin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;90vmin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note: I’m not actually defining any custom properties in the CSS itself, as we are going to set them dynamically using JavaScript shortly.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-main-event" class="anchor"&gt;
  &lt;/a&gt;
  The main event 🚀
&lt;/h2&gt;

&lt;p&gt;OK, awesome, we have added our markup and styles. We can’t see anything yet, but we have our blank canvas all set up and ready to start creating some beautiful blobs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-the-dependencies" class="anchor"&gt;
  &lt;/a&gt;
  Adding the dependencies
&lt;/h3&gt;

&lt;p&gt;In order to create our blob, we are going to need a few libraries: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/@georgedoescode/spline"&gt;@georgedoescode/spline&lt;/a&gt;: used to draw a smooth curve through a set of points &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.npmjs.com/package/simplex-noise"&gt;simplex-noise&lt;/a&gt;: used to generate a smooth, self-similar stream of random values &lt;em&gt;(more on this later)&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are using CodePen you can simply import these libraries like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;spline&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdn.skypack.dev/@georgedoescode/spline@1.0.1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;SimplexNoise&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://cdn.skypack.dev/simplex-noise@2.4.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you have set up your own environment, you can install these packages with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;simplex-noise @georgedoescode/spline
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And import them like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;spline&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@georgedoescode/spline&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;SimplexNoise&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;simplex-noise&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note: if you are working in your own environment, you will most likely need a bundler such as Parcel or Webpack to handle these module imports.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dom-references" class="anchor"&gt;
  &lt;/a&gt;
  DOM references
&lt;/h3&gt;

&lt;p&gt;Now that we have installed and imported all of the dependencies we need, we should store some references to the DOM so that we can manipulate the elements a little later:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// our &amp;lt;path&amp;gt; element&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// used to set our custom property values&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#creating-the-blob-shape-an-overview" class="anchor"&gt;
  &lt;/a&gt;
  Creating the blob shape, an overview
&lt;/h3&gt;

&lt;p&gt;Hooray, it’s time to start creating our blob shape! &lt;/p&gt;

&lt;p&gt;First off, let me highlight the steps needed to create/animate the blob: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create 6 equally spaced points around the circumference of a circle &lt;/li&gt;
&lt;li&gt;Over time, change the &lt;code&gt;{ x, y }&lt;/code&gt; values of each point&lt;/li&gt;
&lt;li&gt;Draw a smooth curve through each point using &lt;code&gt;spline()&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Repeat steps 2 + 3&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Don’t worry if this seems a little crazy right now, all will become clear as we write our JavaScript!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#initialise-the-blob-points" class="anchor"&gt;
  &lt;/a&gt;
  Initialise the blob points
&lt;/h3&gt;

&lt;p&gt;As mentioned in step 1 above, the first thing we need to do is create and store some &lt;code&gt;{ x, y }&lt;/code&gt; points plotted around the circumference of a circle. To do this, we can add a function &lt;code&gt;createPoints()&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createPoints&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
  &lt;span class="c1"&gt;// how many points do we need&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numPoints&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// used to equally space each point around the circle&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;angleStep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PI&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nx"&gt;numPoints&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// the radius of the circle&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;rad&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="nx"&gt;numPoints&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// x &amp;amp; y coordinates of the current point&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;theta&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;angleStep&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;rad&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;theta&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;rad&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// store the point&lt;/span&gt;
    &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="cm"&gt;/* we need to keep a reference to the point's original {x, y} coordinates 
      for when we modulate the values later */&lt;/span&gt;
      &lt;span class="na"&gt;originX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;originY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="c1"&gt;// more on this in a moment!&lt;/span&gt;
      &lt;span class="na"&gt;noiseOffsetX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;noiseOffsetY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We can then initialise our blob points like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createPoints&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#lets-render-something" class="anchor"&gt;
  &lt;/a&gt;
  Let’s render something!
&lt;/h3&gt;

&lt;p&gt;So we have some points plotted nicely around the circumference of a circle, but we still can’t see anything. I think it’s high time we change that.&lt;/p&gt;

&lt;p&gt;Let’s add an animation loop using &lt;code&gt;requestAnimationFrame&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This &lt;code&gt;animate(&lt;/code&gt;) function will call itself, then continue to do so roughly 60 times per second &lt;em&gt;(this could vary based on different monitors/devices but most often it’s going to run at around 60fps)&lt;/em&gt;. If you haven’t used &lt;code&gt;requestAnimationFrame&lt;/code&gt; before, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame"&gt;here are some useful docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Within the &lt;code&gt;animate()&lt;/code&gt; loop, we can draw a smooth spline through all of our points:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// generate a smooth continuous curve based on points, using Bezier curves. spline() will return an SVG path-data string. The arguments are (points, tension, close). Play with tension and check out the effect!&lt;/span&gt;
  &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;d&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;spline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

  &lt;span class="nx"&gt;requestAnimationFrame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Once this line has been added, you should see a kind of &lt;em&gt;almost&lt;/em&gt; circle shape appear on the screen. Delicious!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--08Pli3up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/86qwe5o7766ws4pgvlce.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--08Pli3up--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/86qwe5o7766ws4pgvlce.png" alt="A simple blob shape"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#note-about-the-raw-spline-endraw-function" class="anchor"&gt;
  &lt;/a&gt;
  Note: about the &lt;code&gt;spline()&lt;/code&gt; function
&lt;/h4&gt;

&lt;p&gt;The spline function you see here is actually a &lt;a href="https://en.wikipedia.org/wiki/Centripetal_Catmull%E2%80%93Rom_spline"&gt;Catmull-Rom spline&lt;/a&gt;. A Catmull-Rom spline is great for drawing organic shapes as it not only draws a smooth bezier curve through every &lt;code&gt;{ x, y }&lt;/code&gt; point, it also “closes” or loops back to its first point perfectly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-quick-primer-on-noise" class="anchor"&gt;
  &lt;/a&gt;
  A quick primer on noise
&lt;/h3&gt;

&lt;p&gt;Before we move onto the next step of animating our blob, it would be good to dip into the basics of “noise” and how it can be useful for animation. &lt;/p&gt;

&lt;p&gt;In a nutshell, “noise” (commonly either &lt;a href="https://en.wikipedia.org/wiki/Perlin_noise"&gt;Perlin&lt;/a&gt; or &lt;a href="https://en.wikipedia.org/wiki/Simplex_noise"&gt;Simplex&lt;/a&gt;) is used to generate a &lt;strong&gt;self similar&lt;/strong&gt; stream of random values. That is to say, &lt;strong&gt;each value returned is similar to the previous value&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;By using noise we remove large changes between random values, which in our case would result in a rather jumpy animation. &lt;/p&gt;

&lt;p&gt;Here’s an excellent diagram from Daniel Shiffman’s &lt;a href="https://natureofcode.com/"&gt;The Nature Of Code&lt;/a&gt; book that visually demonstrates the difference between the &lt;em&gt;(technically)&lt;/em&gt; pseudo-random values generated using noise vs random values generated using a method such as &lt;code&gt;Math.random()&lt;/code&gt; in JavaScript: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--54FJWjBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4tqcsvpjz488qq9xqimd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--54FJWjBf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/4tqcsvpjz488qq9xqimd.png" alt="A comparison between noise and random values"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It can be helpful to think about noise values as existing relative to a position in “time”. Here is another visual example from &lt;a href="https://natureofcode.com/"&gt;The Nature Of Code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OWVtEgHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/38qm50q8sr0rkt27rr8b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OWVtEgHR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/38qm50q8sr0rkt27rr8b.png" alt="Noise values through time diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember these values from earlier?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="na"&gt;noiseOffsetX&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;noiseOffsetY&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;These are the starting “time” positions for each of our points. We start each point’s noise values in a random position to make sure they all move in a different way. Here’s what our animation would look like if they all started from the same point in time: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RJ1-HZ6v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1omctb0rax0188yrc5as.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RJ1-HZ6v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1omctb0rax0188yrc5as.gif" alt="A moving blob on 1 axis"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A little boring, right? &lt;/p&gt;

&lt;p&gt;Note: if you would like to go deeper on noise, Daniel Shiffman can offer a far more in-depth explanation than I can over at &lt;a href="https://natureofcode.com/book/introduction/"&gt;https://natureofcode.com/book/introduction/&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lets-animate" class="anchor"&gt;
  &lt;/a&gt;
  Let’s animate!
&lt;/h3&gt;

&lt;p&gt;Now, this is where things start to get interesting. It’s time to modulate each point in our shape’s &lt;code&gt;{ x, y }&lt;/code&gt; values based on a noisy random value. &lt;/p&gt;

&lt;p&gt;Before we do this though, let’s add a quick utility function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// map a number from 1 range to another&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;start1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;end1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;start2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;end2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;start1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;end1&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;start1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;end2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;start2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;start2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This &lt;code&gt;map()&lt;/code&gt; function is incredibly useful. It simply takes a value in one range and maps it to another.&lt;/p&gt;

&lt;p&gt;For example: if we have a value of 0.5 that is usually between 0 and 1, and we map it to an output of 0 to 100, we will get a value of 50. If this is a little confusing, try copying the above function into dev tools and have a play! &lt;/p&gt;

&lt;p&gt;Let’s also create a new &lt;code&gt;SimplexNoise&lt;/code&gt; instance, add a &lt;code&gt;noiseStep&lt;/code&gt; variable and define a quick &lt;code&gt;noise()&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;simplex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SimplexNoise&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="c1"&gt;// how fast we progress through "time"&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;noiseStep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.005&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;noise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// return a value at {x point in time} {y point in time}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;simplex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;noise2D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note: the above code should be added before our &lt;code&gt;animate&lt;/code&gt; function!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;noiseStep&lt;/code&gt; simply defines how quickly we progress through “time” for our noise values. A higher value will result in a much faster-moving blob. &lt;/p&gt;

&lt;p&gt;Now that we have our &lt;code&gt;map()&lt;/code&gt; and &lt;code&gt;noise()&lt;/code&gt; functions, we can add  the following to our &lt;code&gt;animate()&lt;/code&gt; function/loop:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="c1"&gt;// for every point...&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;point&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;points&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;

    &lt;span class="c1"&gt;// return a pseudo random value between -1 / 1 based on this point's current x, y positions in "time"&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nX&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;noise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;noiseOffsetX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;noiseOffsetX&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;nY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;noise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;noiseOffsetY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;noiseOffsetY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// map this noise value to a new value, somewhere between it's original location -20 and it's original location + 20&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;originX&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;originX&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;originY&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;originY&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// update the point's current coordinates&lt;/span&gt;
    &lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// progress the point's x, y values through "time"&lt;/span&gt;
    &lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;noiseOffsetX&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;noiseStep&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;noiseOffsetY&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;noiseStep&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Drumroll, please… &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JX8M4A6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vttevj65ij9x77vmn75s.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JX8M4A6y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vttevj65ij9x77vmn75s.gif" alt="A wobbling blob shape"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aww yeah, check out that blobby goodness! Nice work. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adding-the-gradient" class="anchor"&gt;
  &lt;/a&gt;
  Adding the gradient
&lt;/h3&gt;

&lt;p&gt;We now have an awesome animated blob shape. The only thing missing is color! In order to create a beautiful gradient fill, we are going to: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Choose a base hue based on another noise value (somewhere between 0 and 360)&lt;/li&gt;
&lt;li&gt;Choose another hue 60 degrees away from the base hue (thanks to Adam Argyle for &lt;a href="https://twitter.com/argyleink/status/1199043350008958976"&gt;this tip!&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Assign the base hue to our custom property &lt;code&gt;--startColor&lt;/code&gt; and the complementary hue to our custom property &lt;code&gt;--stopColor&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; background color to a darkened version of &lt;code&gt;--stopColor&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;(hopefully) Marvel at the gradient beauty! &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To add this to our code, let’s first define a &lt;code&gt;hueNoiseOffset&lt;/code&gt; variable above our &lt;code&gt;animate&lt;/code&gt; loop (this is the hue’s position in “time”, just like our point’s &lt;code&gt;noiseOffsetX&lt;/code&gt;/&lt;code&gt;noiseOffsetY&lt;/code&gt; values but for 1 dimension)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hueNoiseOffset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We can then progress &lt;code&gt;hueNoiseOffset&lt;/code&gt; through time as our &lt;code&gt;animate()&lt;/code&gt; loop runs:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="c1"&gt;// we want the hue to move a little slower than the rest of the shape&lt;/span&gt;
  &lt;span class="nx"&gt;hueNoiseOffset&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;noiseStep&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now that &lt;code&gt;hueNoiseOffset&lt;/code&gt; is moving nicely through time, we can add the following code to perform steps 2 / 4:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;animate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hueNoise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;noise&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hueNoiseOffset&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hueNoiseOffset&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hueNoise&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;--startColor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`hsl(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hue&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, 100%, 75%)`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;--stopColor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`hsl(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, 100%, 75%)`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;background&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`hsl(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;hue&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, 75%, 5%)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;With a bit of luck, you should now see something like this: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sv4JLh1P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6ut4p4kqrtp8374tr85e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sv4JLh1P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6ut4p4kqrtp8374tr85e.gif" alt="A colorful morphing blob"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#bonus-round-interaction" class="anchor"&gt;
  &lt;/a&gt;
  Bonus round… Interaction! 👉
&lt;/h2&gt;

&lt;p&gt;Our blob is all done! There is one more thing we could add though… &lt;/p&gt;

&lt;p&gt;It would be cool if when you hover over the blob, it responded in some way. Perhaps by moving a little faster? &lt;/p&gt;

&lt;p&gt;We can easily achieve this by simply increasing the &lt;code&gt;noiseStep&lt;/code&gt; value when hovering over the blob:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mouseover&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;noiseStep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.01&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mouseleave&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;noiseStep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.005&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;When &lt;code&gt;noiseStep&lt;/code&gt; moves quicker through time, so do our random noise values. This gives the impression of the shape moving faster. Neat! &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thank-you-for-reading" class="anchor"&gt;
  &lt;/a&gt;
  Thank you for reading! 👋
&lt;/h2&gt;

&lt;p&gt;I hope you enjoyed this article and learned something new. If you got a little stuck at any point, please check out the &lt;a href="https://codepen.io/georgedoescode/pen/oNzamjV"&gt;end result CodePen&lt;/a&gt;. If this isn’t quite enough to help you out, feel free to get in touch. I’m always happy to chat! &lt;/p&gt;

&lt;p&gt;If you dig this content and would like to be kept up to date with more of my posts / CodePens / generative art material follow me on Twitter &lt;a href="https://twitter.com/georgedoescode"&gt;@georgedoescode&lt;/a&gt; ❤️&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
