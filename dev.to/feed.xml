<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The End of Dawn - “Let's Encrypt” certificate expiration.</title>
      <author>pramit_marattha</author>
      <pubDate>Wed, 29 Sep 2021 07:17:33 +0000</pubDate>
      <link>https://dev.to/aviyel/the-end-of-dawn-let-s-encrypt-certificate-expiration-4587</link>
      <guid>https://dev.to/aviyel/the-end-of-dawn-let-s-encrypt-certificate-expiration-4587</guid>
      <description>&lt;p&gt;HTTPS is the Web's cryptographic backbone, offering an encrypted and authorized version of HTTP over TLS. The primary use cases for HTTPS when it was first introduced by Netscape twenty-seven years ago were to protect financial transactions and login credentials, but users today face a growing range of threats from hostile networks, including government mass surveillance and censorship, ISP customer profiling, and ad injection, and network device insertion of malicious code, all of which make HTTPS increasingly important. A huge chunk of cryptographic problems in Transport Layer Security have been uncovered and fixed, but low HTTPS adoption posed an even greater threat: recently in 2015, 55–70 percent of browser page loads were still using unencrypted HTTP.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDi9w9l6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1632896647965-untitledletencrypt-resized.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDi9w9l6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://aviyel.com/assets/uploads/files/1632896647965-untitledletencrypt-resized.png" alt="Http vs Https"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The deployment of HTTPS was complicated, expensive, and error-prone for server operators, which was a key hurdle to wider adoption. Interactions with Certificate Authorities, which are trusted by Web browsers to confirm a server's identification and provide a digitally signed certificate that binds the identity to the server's public key, were the most difficult part. A server operator had to employ esoteric key generating software and configuration directives, follow laborious processes to show possession of the domain name, and complete a payment transaction to a CA to receive and install a certificate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-lets-encrypt-"&gt;
  &lt;/a&gt;
  Why "Let’s Encrypt" ?.
&lt;/h2&gt;

&lt;p&gt;Let's Encrypt was established to remove these hurdles, encourage widespread adoption of HTTPS, and improve security for all Web users. Let's Encrypt is a free, open, and automated HTTPS certificate authority that was developed to help the entire Web embrace HTTPS it provides domain-validated certificates to server operators using a standard protocol at no cost. Let's Encrypt has grown to become the world's largest HTTPS Certificate Authority since its inception in late 2015, with more presently valid certificates than all other browser-trusted CAs combined altogether. It is the first browser-trusted Certificate Authority built for complete automation: identity validation and certificate issuance are fully automated, with no manual steps required by Web server operators or CA staff. Let's Encrypt uses automation to achieve a number of objectives. It considerably decreases the amount of human effort necessary for HTTPS deployment on the Web server, as well as the possibility of configuration errors that can lead to security issues.&lt;/p&gt;

&lt;p&gt;Let's Encrypt support has been automated in Web server software, Internet of Things devices, big hosting platforms, and Content Delivery Networks. In the Certificate Authority sector, automation improves security by lowering the chances of human mistakes, which has been a common cause of misuse in the past. Let's Encrypt can only validate a domain and issue a certificate using the standard API; there is no manual override. Furthermore, by minimizing human interference, Let's Encrypt is able to keep the cost-per-certificate low and offer certificates for free. This removes two major roadblocks to HTTPS adoption: budgetary constraints and payment friction.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-implication-of-lets-encrypt"&gt;
  &lt;/a&gt;
  The implication of Let’s Encrypt.
&lt;/h2&gt;

&lt;p&gt;Let’s Encrypt has issued billions of certificates covering millions of domain names in barely over six years of existence. Let's Encrypt has issued more valid browser-trusted certificates than all other Certificate Authorities combined altogether. It is governed and run by the Internet Security Research Group, a non-profit organization (ISRG). Operating a CA necessitates a 24-hour operations personnel, physically secure server infrastructure, and frequent security and compliance audits, all of which are overseen by ISRG. ACME, a protocol for handling CA–server interactions such as certificate requests, domain validation, issuance, renewal, and revocation, is at the heart of Let's Encrypt's automation. Boulder, an open-source ACME-based Certificate Authority implementation designed for security, scalability, and high dependability, is at the core of Let's Encrypt.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aviyel.com/post/997/the-end-of-dawn-let-s-encrypt-certificate-expiration"&gt;Click Here for full article&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow &lt;a href="https://twitter.com/AviyelHq"&gt;@aviyelHQ&lt;/a&gt; or &lt;a href="https://aviyel.com/discussions"&gt;sign-up&lt;/a&gt; on Aviyel for early access if you are a project maintainer, contributor, or just an Open Source enthusiast.&lt;/p&gt;

&lt;p&gt;Twitter =&amp;gt;&lt;a href="https://twitter.com/AviyelHq"&gt;https://twitter.com/AviyelHq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Official Site =&amp;gt; &lt;a href="https://aviyel.com/discussions"&gt;https://aviyel.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>certificates</category>
      <category>security</category>
      <category>letsencrypt</category>
      <category>dstrootca3</category>
    </item>
    <item>
      <title>Learn blockchain, apps that make your life easier, SEO, freelancing, and more</title>
      <author>Pasca Vlad</author>
      <pubDate>Wed, 29 Sep 2021 06:36:50 +0000</pubDate>
      <link>https://dev.to/pascavld/learn-blockchain-apps-that-make-your-life-easier-seo-freelancing-and-more-161e</link>
      <guid>https://dev.to/pascavld/learn-blockchain-apps-that-make-your-life-easier-seo-freelancing-and-more-161e</guid>
      <description>&lt;p&gt;&lt;em&gt;If you found value in this thread you will most likely enjoy my tweets too so make sure you follow me on &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;  for more information about web development and how to improve as a developer. This article was first published on my &lt;a href="https://vladpasca.hashnode.dev/"&gt;Blog&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Always make health the main priority&lt;/p&gt;

&lt;p&gt;By shrutibalasa &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--4ExO4pGa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1329475394714537986/MXGt0d_h_normal.jpg" alt="Shruti Balasa profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Shruti Balasa
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/shrutibalasa"&gt;@shrutibalasa&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      If you can invest your time in something today, invest in your health…&lt;br&gt;&lt;br&gt;Make self care a priority well before you are left with no choice!
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:23 PM - 22 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1440683268525813777" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1440683268525813777" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1440683268525813777" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Thread for learning everything you need about blockchain&lt;/p&gt;

&lt;p&gt;By codingyuri &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--Zzs5I0LM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1422596481542885377/JSdAU3-R_normal.jpg" alt="Yuri 🇰🇷 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Yuri 🇰🇷
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/codingyuri"&gt;@codingyuri&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Blockchain is the FUCKING future🔥&lt;br&gt;&lt;br&gt;NOW is the time to learn Web3 + blockchain development!!&lt;br&gt;&lt;br&gt;A roadmap for blockchain development + resources👇&lt;br&gt;&lt;br&gt;A thread 🧵
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      11:37 AM - 23 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1441003819777896452" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1441003819777896452" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1441003819777896452" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Building an online presence is the best thing you can do as a developer&lt;/p&gt;

&lt;p&gt;By Insharamin&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--DirQh20m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1420754747665965068/r90wqB2S_normal.jpg" alt="Insha profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Insha
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @insharamin
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      5 months back I had no clue what I was supposed to do with my life.&lt;br&gt;&lt;br&gt;Fast forward 5 months&lt;br&gt;&lt;br&gt;- Built a community of over 28k+ people 🔥&lt;br&gt;- Made 1000$+ online 💵&lt;br&gt;- Working as a Technical Writer &lt;br&gt;- Getting job offers everyday&lt;br&gt;&lt;br&gt;That's the power of building an Online presence 💪
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      05:23 AM - 22 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1440547192859594764" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1440547192859594764" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1440547192859594764" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Learn SEO&lt;/p&gt;

&lt;p&gt;By VittoStack &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--4QS2CbIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1413887811737038851/_HImxcYU_normal.png" alt="Vitto 🥑 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Vitto 🥑
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/vittostack"&gt;@vittostack&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Learn Search Engine Optimization(SEO) and skyrocket your revenue!&lt;br&gt;&lt;br&gt;- Bring your website on top of Google search.&lt;br&gt;- Get viewed by 1000s potential customers&lt;br&gt;&lt;br&gt;A Developer-friendly SEO guide to growing your online business in 2021.&lt;br&gt;&lt;br&gt;A thread ↓
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:47 PM - 23 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1441066749676380162" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1441066749676380162" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1441066749676380162" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Developing on the blockchain is a lot easier than you think&lt;/p&gt;

&lt;p&gt;By PrasoonPratham &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--cz1mr_9W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1430826920623497219/7ITE1sWA_normal.jpg" alt="Pratham profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Pratham
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/prasoonpratham"&gt;@prasoonpratham&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      You mainly need two things to develop on the blockchain.&lt;br&gt;&lt;br&gt;A. Python or JavaScript: Interacting with the Ethereum blockchain.&lt;br&gt;B. Rust (Solana) or Solidity (Ethereum) to make smart contracts.&lt;br&gt;&lt;br&gt;It's certainly not very easy to learn, but not rocket science either.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      14:52 PM - 24 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1441415183369261056" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1441415183369261056" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1441415183369261056" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;10 awesome apps that can make your life a lot easier&lt;/p&gt;

&lt;p&gt;By georgemoller &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--K0o6ch8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1409915212157833223/OX8dfCpn_normal.jpg" alt="George Moller profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        George Moller
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @_georgemoller
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      10 apps &amp;amp; tools that make my life a whole lot easier:&lt;br&gt;&lt;br&gt;1. VS Code&lt;br&gt;2. iTerm2&lt;br&gt;3. Figma&lt;br&gt;4. Notion&lt;br&gt;5. Toggle track&lt;br&gt;6. Toggle plan&lt;br&gt;7. Slack&lt;br&gt;8. Affinity Designer&lt;br&gt;9. Numi&lt;br&gt;10. Spark&lt;br&gt;&lt;br&gt;Do you have any favorite app or tool you use daily?
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      18:41 PM - 24 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1441472918563610633" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1441472918563610633" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1441472918563610633" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;JavaScript in the industry&lt;/p&gt;

&lt;p&gt;By SimonHoiberg &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OnIFOjRH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1439851738027249667/pu/img/6fyT9mapBQ_oBCVT.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--YwnLqj39--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1430792058944507905/dgSCf2K8_normal.jpg" alt="Simon Høiberg profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Simon Høiberg
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @simonhoiberg
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      🚨🥳 LAUNCH 🥳🚨&lt;br&gt;&lt;br&gt;I published a new e-book:&lt;br&gt;JavaScript In The Industry.&lt;br&gt;&lt;br&gt;Learn how professional teams want you to write JavaScript!&lt;br&gt;&lt;br&gt;An e-book about coding style, best practices, and JavaScript conventions in 2021.&lt;br&gt;&lt;br&gt;⚡ 35% off - in this week only ⚡&lt;br&gt;&lt;br&gt;🔗 &lt;a href="https://t.co/lY7Kb9qhjQ"&gt;simonhoiberg.com/ebooks/javascr…&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      07:21 AM - 20 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1439852233563197440" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1439852233563197440" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1439852233563197440" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Simple way to start your web development journey&lt;/p&gt;

&lt;p&gt;By Prathkum &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--xSEDLE0---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1418652395119153153/dvMUbHmM_normal.jpg" alt="Pratham profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Pratham
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/prathkum"&gt;@prathkum&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Start your Web Development journey with the right steps: 👇&lt;br&gt;&lt;br&gt;1. HTML and CSS - Build projects &lt;br&gt;2. JavaScript - Build projects&lt;br&gt;3. Git and GitHub&lt;br&gt;4. JavaScript Frameworks&lt;br&gt;5. API - Build projects using &lt;a href="https://twitter.com/Rapid_API"&gt;@Rapid_API&lt;/a&gt;&lt;br&gt;6. Node.js &lt;br&gt;7. KEEP EXPLORING 🔍
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      21:13 PM - 22 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1440786262495940611" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1440786262495940611" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1440786262495940611" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Freelancing is not all about programming&lt;/p&gt;

&lt;p&gt;By study_web_dev &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--RHr1l2Tu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1387758016716578821/Srn36e3M_normal.png" alt="Kyle Prinsloo profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Kyle Prinsloo
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/study_web_dev"&gt;@study_web_dev&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I don't know JavaScript, but I do pretty well as a freelancer.&lt;br&gt;&lt;br&gt;The highest-paid freelancers I know hardly know how to code.&lt;br&gt;&lt;br&gt;Programming knowledge ≠ success as a freelancer.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      08:24 AM - 22 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1440592781165019142" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1440592781165019142" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1440592781165019142" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Great thread about the fundamentals of Blockchain&lt;/p&gt;

&lt;p&gt;By FrancescoCiull4 &lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jzh-W6ok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/FAC3B09UcAgsMeK.png" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--b783z8Av--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1439088029772230657/ei35A2BL_normal.jpg" alt="Francesco Ciulla profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Francesco Ciulla
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @francescociull4
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I studied Blockchain at University. &lt;br&gt;&lt;br&gt;Now I decided to learn it again. From Zero.&lt;br&gt;&lt;br&gt;Here is a thread to summarizes what I have studied so far.&lt;br&gt;&lt;br&gt;/thread 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:45 AM - 24 Sep 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1441353130629816321" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1441353130629816321" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1441353130629816321" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;&lt;em&gt;I hope found this useful and if you did please let me know. If you have any questions feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;._let me know. If you have any questions feel free to DM me on  &lt;a href="https://twitter.com/VladPasca5"&gt;Twitter&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Game Theory in SEO: Building A Ship of Strategy in a Sea of Tactics</title>
      <author>Erik Dietrich</author>
      <pubDate>Wed, 29 Sep 2021 06:34:53 +0000</pubDate>
      <link>https://dev.to/daedtech/game-theory-in-seo-building-a-ship-of-strategy-in-a-sea-of-tactics-cpc</link>
      <guid>https://dev.to/daedtech/game-theory-in-seo-building-a-ship-of-strategy-in-a-sea-of-tactics-cpc</guid>
      <description>&lt;p&gt;&lt;em&gt;Editorial Note: this post is part of my SEO for Non-Scumbags series, which &lt;a href="https://daedtech.com/seo-for-non-scumbags-how-to-earn-site-visitors-without-selling-your-soul/"&gt;I began here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It might seem a bit aggressive or presumptuous to write off an entire discipline as tactical.  But, I guess, here we are.&lt;/p&gt;

&lt;p&gt;I've spent the last 4 years absolutely immersed in the world of SEO, largely with one simple goal in mind.  I've wanted to make Hit Subscribe's clients happy by bringing well qualified traffic to their websites.&lt;/p&gt;

&lt;p&gt;My effort has done two things:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Worked&lt;/li&gt;
    &lt;li&gt;Exposed me to enough digital content about SEO that the electrons in it probably add up to a metric ton.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And during all of that time, I can't recall ever seeing anything that actually rises to the level of strategy.  The entire SEO world just seems to be a person blundering into a tactic that works through trial and error, doubling (tripling, hundred-ing) down on it and taking advantage of a brief arbitrage before the entire rest of the field rotely copies the tactic.  Then, repeat.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2021/09/SSStrategy.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5p7TNpgH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2021/09/SSStrategy.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;An SEO "Strategy" Case Study&lt;/h2&gt;

&lt;p&gt;To see what I mean, let's get just insanely meta and do a &lt;a href="https://www.google.com/search?q=seo+strategy&amp;amp;rlz=1C1CHBF_enUS688US688&amp;amp;oq=seo+st&amp;amp;aqs=chrome.0.69i59j69i57j0i131i433i512j0i512l2j69i60l2j69i61.872j0j7&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;google search for SEO strategy&lt;/a&gt;.  At the time of writing, well respected SEO expert Brian Dean ranks number one with &lt;a href="https://backlinko.com/seo-strategy"&gt;this article&lt;/a&gt;.  One would expect that the SEO guy who can out-SEO all other SEO guys and rank for "SEO strategy" must be some kind of God of strategy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2021/09/SEO-Strategy.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PiMj241z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2021/09/SEO-Strategy.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, let's roll up our sleeves and get ready to bask in the Sun Tzu-esque wisdom no doubt to follow.  Er, after I click out of a modal pop-up, that is.&lt;/p&gt;

&lt;h6&gt;&lt;em&gt;(As an aside, to any smartass about to suggest the Art of War is a series of tactics, I'd say it's a series of philosophies and heuristics.)&lt;/em&gt;&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2021/09/TacticsAsStrategy.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FQLVKnK7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2021/09/TacticsAsStrategy.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Excellent!  Nine, easily repeatable, paint-by-numbers steps to follow that will result in even you, dear reader, with little prior knowledge of the topic, having a strategy (a synonym for which is, apparently, "approach").&lt;/p&gt;

&lt;p&gt;Now, before we dive into multifaceted irony of the pinnacle of SEO strategy being a thing everyone reading can easily repeat, I want to be very clear about something.&lt;/p&gt;

&lt;p&gt;Brian Dean is &lt;em&gt;really, really&lt;/em&gt; good at SEO.  Full stop.&lt;/p&gt;

&lt;p&gt;Ranking in the first position for "SEO strategy" is no small feat, and he's pulled it off.  I doubt that I could pull that off, myself.&lt;/p&gt;

&lt;p&gt;But I also couldn't pull off eating 15 cheeseburgers in one sitting.  And that gluttonous activity also isn't a strategy -- it's just an impressive feat, for some definition of "impressive."&lt;/p&gt;

&lt;h2&gt;The Obligatory What Are Strategy and Tactics Section&lt;/h2&gt;

&lt;p&gt;I don't want to belabor this point too much or be too pedantic about it.  If you want to chase this rabbit all the way down its hole, Jonathan Stark has talked a lot about it, including &lt;a href="https://jonathanstark.com/daily/20200809-0152-a-more-useful-definition-of-strategy-"&gt;here&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=nTJ37Kex-Bk"&gt;here&lt;/a&gt;, and &lt;a href="https://podcast.ditchinghourly.com/episodes/blair-enns-what-is-strategy"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In fact, let's start with Jonathan's definition, which I like.&lt;/p&gt;

&lt;blockquote&gt;Strategy is a concise, high-level approach to achieving an objective by &lt;strong&gt;playing strengths against weaknesses in an unexpected way&lt;/strong&gt;.&lt;/blockquote&gt;

&lt;p&gt;Emphasis mine.  And taking the bolded alone, the absolute pinnacle of "SEO strategy" is, on its face, not strategy.  In fact, here's how I'd describe Brian Dean's post, instead:&lt;/p&gt;

&lt;blockquote&gt;[SEO] Strategy is a verbose, granular approach to achieving an objective by playing strength against strength in highly formulaic way.&lt;/blockquote&gt;

&lt;p&gt;Jonathan's definition is great, but I want to elaborate on it a bit and adapt it in a more heuristic and corporate way, to illustrate my point in this post.  That is to say, don't take my definition as a good one -- just a contextual one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2021/09/RabbitHole.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jt-mecMA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2021/09/RabbitHole-e1631686114549.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some titan of org theory, whose name escapes me and my Google-fu at the moment, talked about strategy as a means of dealing with the unprecedented and unknown.  Your over-arching strategy can have a series of sub-strategies, and so on down the line.  But sooner or later, sub-strategies simply turn into tactics.&lt;/p&gt;

&lt;p&gt;At what point does this happen, exactly?&lt;/p&gt;

&lt;p&gt;Well, at the point where the tactics are simply best practices, so to speak.  For instance, my "typing strategy" as I write this post, doesn't court the unknown or unprecedented in any meaningful way.  It's just "one hand each on home row, and let 'er rip."  I have no strategy because I'm simply executing a well-defined, battle-tested process -- a &lt;em&gt;tactic&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Rolling this up to strategy in the corporate world, the heuristic I like to use for distinguishing strategy from tactics is to prepend whatever we're talking about with "unlike anyone before us..."  So let's look at a couple of examples to see how this plays out.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Jeff Bezos: unlike anyone before us, we're going to sell books on this newfangled internet thing.&lt;/li&gt;
    &lt;li&gt;Brian Dean: unlike anyone before you (except the other tens of thousands of people reading this article), here's what you do.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;SEO Strategy Isn't Strategy -- So What?&lt;/h2&gt;

&lt;p&gt;As I've said and in complete seriousness, Brian Dean is &lt;em&gt;really, really&lt;/em&gt; good at SEO.  I might go so far as to say that he's a &lt;em&gt;master tactician&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;But this brings us to the core problem of treating tactics as strategy.  When a master tactician balls up his tactics and teaches them to you, he's giving you a blueprint for always coming in second, behind him.  Oh, and, also behind the many, many other master tacticians in the space.&lt;/p&gt;

&lt;p&gt;Recall that my purpose in writing this series is to teach Hit Subscribe's technical account strategists (engineers that are maybe, passingly interested in SEO) how to design content campaigns that bring lots of visitors to client sites.  I am nowhere near enough of a master SEO tactician to beat out Brian Dean and all those people.  Heck, I probably don't even know half of the tactics in one of the ubiqitous, granular 8 billion SEO tips, like &lt;a href="https://www.searchenginejournal.com/seo-tips/374673/#close"&gt;this one&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If I haven't bothered to learn all of these granular (frankly, waste of time, if I'm being honest) tactics, there's no way I'm going to teach them to someone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2013/01/Pawn.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IOcy57v9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2013/01/Pawn.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So what can we do instead of playing our weakness against the master tacticians' strength?&lt;/p&gt;

&lt;p&gt;We can &lt;strong&gt;[play our] strengths against [their] weaknesses in an unexpected way&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In other words, we can &lt;em&gt;form a strategy&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And that strategy, from one engineer to another, is pretty simple to articulate.  We figure out who our clients want on their sites, signing up for their betas or downloading their trials, and then we answer questions that those people ask and that nobody else is answering.&lt;/p&gt;

&lt;p&gt;Our strength (their weakness) is that neither Brian Dean nor any other SEO consultant will know that a search for "test environment" and a search for "testing environment" aren't the same thing.  As software engineers, we haven't mastered the finer points of Twitter cards or site schema (mostly because it's not worth the bother), but we &lt;em&gt;do&lt;/em&gt; know that "c# array" isn't a good search to target if you're looking to sell to advanced .NET developers.&lt;/p&gt;

&lt;p&gt;But it's more than just that.  It's more than just having an engineer's knowledge -- it's having knowledge of cost, return on investment, expected value calculations, and &lt;em&gt;game theory&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;Interlude: Explaining Game Theory Like You're 5 (Okay, Maybe 15)&lt;/h2&gt;

&lt;p&gt;During my computer science undergrad (and grad) degree, I took a series of discrete math courses, some of which touched on the idea of &lt;a href="https://en.wikipedia.org/wiki/Game_theory"&gt;game theory&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As I recall, the most iconic example of game theory is the so-called prisoner's dilemma.  And that's easy to understand.&lt;/p&gt;

&lt;blockquote&gt;Imagine that you commit a crime with an accomplice, and you're both caught.  The police offer each of you a deal, and this creates the following possible outcomes.
&lt;ol&gt;
    &lt;li&gt;Both of you stay silent, and the police throw you each in jail for 1 year.&lt;/li&gt;
    &lt;li&gt;You snitch and your accomplice stays silent, resulting in you going free and that person going to jail for 3 years.&lt;/li&gt;
    &lt;li&gt;You stay silent and your opponent snitches, which puts you in jail for 3 years while the accomplice goes free.&lt;/li&gt;
    &lt;li&gt;Both you and the accomplice snitch and do 2 years.&lt;/li&gt;
&lt;/ol&gt;
What should you do?&lt;/blockquote&gt;

&lt;p&gt;This problem, and problems like it, are interesting because your actions depend on your goal and some unknowns (to you).  Is your goal to take a moonshot to maximize your upside?  Minimize your downside?  Optimize for the expected outcome?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2016/02/HidingTheMoney-e1514491266201.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U2dwk-Am--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2016/02/HidingTheMoney-e1514491266201.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's work this out in terms of &lt;em&gt;expected value &lt;/em&gt;for each thing you could do.&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;If you snitch, there's a 50% chance you go free and a 50% chance you go to jail for 2 years, which means the &lt;em&gt;expected value &lt;/em&gt;of your jail sentence is 0.5 * 0 + 0.5 * 2 = 1 year.&lt;/li&gt;
    &lt;li&gt;If you stay quiet, there's a 50% chance you go to jail for 1 year and a 50% chance you go to jail for 3 years, which means the expected value of your sentence is 0.5 * 1 + 0.5 * 3 = 1.5 years.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So the most rational course of action is to snitch.  And that's true &lt;em&gt;even though &lt;/em&gt;&lt;em&gt;both of you cooperating would mean a better outcome than both of you snitching&lt;/em&gt;.  That last part is kind of a mind-bender.&lt;/p&gt;

&lt;p&gt;Game theory is, loosely speaking, the study of this style of decision-making theory.&lt;/p&gt;

&lt;h2&gt;(Loosely) Applying Game Theory to SEO&lt;/h2&gt;

&lt;p&gt;Let's say that you've built and are selling a headless CMS.  You and &lt;em&gt;many &lt;/em&gt;others.  As soon as you start to look at SEO, something will occur to you:&lt;/p&gt;

&lt;blockquote&gt;I should rank for "headless CMS!"&lt;/blockquote&gt;

&lt;p&gt;This is what I personally call a "yellow pages SEO play."  For those of you old enough to remember phone books, this is akin to paying to be the first plumber that shows up in the phone book when someone flips to the "P" section, looking for plumbers.&lt;/p&gt;

&lt;p&gt;I'm going to leave aside the commodifying effect of this approach as an advanced topic for this course, and instead focus on another challenge with this approach: every other headless CMS also has this same idea.  And one of them might have just retained Brian Dean to help them pummel you into SEO submission.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2017/10/Gym-Bro.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nMNyaRuF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2017/10/Gym-Bro-e1631671453467.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You're probably never going to rank for this keyword.&lt;/p&gt;

&lt;p&gt;But, if you hire an SEO firm and invite them to give you recommendations where they spend with your wallet, they're going to urge you to try.&lt;/p&gt;

&lt;blockquote&gt;"Just write a 50 billion word pillar post, buy 600 links for $3K each, commission 14 infographics, execute this 500 point SEO optimization checklist and send a candygram to Google, and you can site astride that SERP like a colossus of inefficient spending!"&lt;/blockquote&gt;

&lt;p&gt;In all seriousness, trying to out-muscle your competitors for a yellow pages keyword is really expensive.  And it might not work.  &lt;em&gt;And&lt;/em&gt; that's all to position yourself to have maybe a 4% lead qualification rate of all of the people who execute that search and click through to your page.&lt;/p&gt;

&lt;p&gt;So thinking back to the prisoner's dilemma, let's ask ourselves something.&lt;/p&gt;

&lt;p&gt;If you have to spend $20K on content and link-building to occupy that spot, which is better?&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Spend $20K for 1 piece of content that brings you 10K visitors per month and qualifies 4% (400) of them?&lt;/li&gt;
    &lt;li&gt;Or spend $20K for 20 pieces of content, each of which bring 10K visitors per month, qualifying 1% (2,000) of the total?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The answer is clear.  And the strategy lies in knowing the audience segment (engineers) well enough to understand three things:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Which non-yellow-page searches will still yield a pretty decent conversion rate by qualifying the audience well?&lt;/li&gt;
    &lt;li&gt;Of those searches, which are non-competitive enough to yield good traffic for the client?&lt;/li&gt;
    &lt;li&gt;And, of those searches, which will tee up visitors to enter a nurture sequence.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Others don't know to do this because, by enlisting engineers and not SEOs to plan, we are (say it with me) &lt;strong&gt;playing strengths against weaknesses in an unexpected way&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;Wrapping Up Until Next Time: What Marketing Really Is&lt;/h2&gt;

&lt;p&gt;Now, at this point, you're probably thinking, "Erik, you terrible writer, you just introduced a term (nurture sequence) with no preamble or definition."  And to that I say, "I will concede that I may be a terrible writer, but I actually did that on purpose.  It's a literary device!  (Or, something, I think...)"&lt;/p&gt;

&lt;p&gt;The reason I did this is because that dangling tidbit provides an excellent segue for the rest of the series.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2021/01/image-e1611066145931.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fqrQIKTm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2021/01/image-e1611066145931.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To understand a nurture sequence is to understand the core of digital marketing, so let's look at that in a bit of detail.  And let's do it by considering how the "yellow pages search" is actually, in a vacuum, a remedial form of digital marketing.&lt;/p&gt;

&lt;h3&gt;The Idealized vs Real Path to Becoming a Lead&lt;/h3&gt;

&lt;p&gt;Many people (including me, for years), think of digital marketing as this sequence of events: get someone's attention, show them some content, get them to buy/sign-up/whatever.  In other words, the purpose of content on your site is to, in one fell swoop (blog post), take them from "I've never heard of this company" to "I like the cut of your jib and would like to do business with you."  And the yellow page search reinforces this idea -- the idea that leads come into your sales funnel this way:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Google "headless CMS."&lt;/li&gt;
    &lt;li&gt;Read your blog post defining "headless CMS"&lt;/li&gt;
    &lt;li&gt;Give you money.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;But, it turns out that this rarely, if ever, happens, depending on your offering.  And, even if it does, it'll represent only the &lt;em&gt;tiniest&lt;/em&gt; fraction of how people become your customers after encountering your website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://daedtech.com/wp-content/uploads/2020/01/kid-with-lead-balloon-scaled-e1580759324677.jpg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---0Hmt080--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://daedtech.com/wp-content/uploads/2020/01/kid-with-lead-balloon-scaled-e1580759324677.jpg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Rather than googling headless CMS, reading about what it is, then buying it, your eventual customers are much more likely to do this:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Stumble across your site by accident somehow, pay no attention to who you are.&lt;/li&gt;
    &lt;li&gt;Four months later, land on your site googling something like "jamstack tutorial" and think, "huh, I feel like I've seen this site before" right before closing the tab and thinking no more of you.&lt;/li&gt;
    &lt;li&gt;A few weeks later landing on your site a third time, from a link elsewhere, and actually remembering your brand name.&lt;/li&gt;
    &lt;li&gt;Seeing some remarketing you're doing on social media about a headless CMS, and thinking "what's a headless CMS"?&lt;/li&gt;
    &lt;li&gt;Googling "headless CMS," landing on someone else's site, and learning what that is.&lt;/li&gt;
    &lt;li&gt;Stumbling across another of your articles through Google and thinking, "this company seems helpful -- I keep winding up back here."&lt;/li&gt;
    &lt;li&gt;6 months later, after changing jobs, they're at a new employer, thinking, "huh, maybe we could use a headless CMS here."&lt;/li&gt;
    &lt;li&gt;They kinda remember you, google "headless CMS" and don't actually see you, so they pivot to googling "headless CMS companies" looking for round-up articles.&lt;/li&gt;
    &lt;li&gt;There you are!  You're the 5th out of 13 entries, so they click through to your site, fill out a form asking for a demo, and become a qualified lead.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Digital Marketing is Deceptively Simple&lt;/h3&gt;

&lt;p&gt;That whole process that I've just outlined is (an admittedly immature version of) &lt;em&gt;lead nurture&lt;/em&gt;.  There are two critical moments that lead to someone becoming a customer of yours: the moment they first become aware of you by landing on your site and the moment they give you their contact information and express interest in your offering.&lt;/p&gt;

&lt;p&gt;And those moments &lt;em&gt;almost never&lt;/em&gt; occur together.  For a deep dive on this, you can check out &lt;a href="https://daedtech.com/marketing-101-marketing-isnt-what-you-think-it-is-freelancers/"&gt;this post I've written&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So here's the real, sequential essence of digital marketing:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;Grab their attention somehow, getting them to your website.&lt;/li&gt;
    &lt;li&gt;
&lt;em&gt;Nurture &lt;/em&gt;them.  Meaning, hold their attention and keep your brand in their mind, until they're ready to become a lead on their own terms.  Nurture can happen via email list, joining a community, remarketing to them, having them subscribe via RSS -- whatever.&lt;/li&gt;
    &lt;li&gt;Earn enough of their trust that they take the next step in becoming a customer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Whew, alright.  So why am I talking about all of that to close out a post in a lengthy series about SEO?  Where does SEO even fit in?&lt;/p&gt;

&lt;p&gt;Well, all SEO really does for you (except a few more advanced corner cases) is number (1).  SEO helps you get their attention, usually for the first time.&lt;/p&gt;

&lt;p&gt;This means that SEO, &lt;em&gt;itself&lt;/em&gt;, is simply a tactic for getting people's attention.  Through that same vein of thinking, "SEO strategy" is actually kinda nonsense, since SEO in a vacuum (just getting people's attention) is useless.  Without understanding how you're going to nurture people to sign up, SEO becomes completely pointless, because you don't know &lt;em&gt;who &lt;/em&gt;you want on your website and what kind of search indicates that you're getting the right person on your site.&lt;/p&gt;

&lt;p&gt;And that's where I want to leave things.  Because next up, we're going to talk about searcher psychology -- understanding how people use the search engine, and what you can learn from the searches they execute.&lt;/p&gt;

&lt;p&gt;That learning -- that searcher psychology -- is how Hit Subscribe wins over and over again at SEO, using a game theory approach.  We don't chase yellow pages searches and we certainly don't obsess over hundreds of SEO micro-tips, trying to earn any tiny edge.  (Our QA staff at Hit Subscribe does execute an SEO sanity check, so we don't ignore it, but these things matter at the margins and not the core).&lt;/p&gt;

&lt;p&gt;Rather, we leverage our deep understanding of the people we're trying to reach to understand the pains they're trying to solve with their searches. Then we earn their trust by helping them alleviate those pains.&lt;/p&gt;

&lt;p&gt;We figure out what questions they're asking and answer those questions in a way that SEO firms and marketers couldn't possibly emulate.  We &lt;strong&gt;play strength against weakness in an unexpected way.  &lt;/strong&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Weekly web development resources #89</title>
      <author>Vincent Will</author>
      <pubDate>Wed, 29 Sep 2021 06:23:53 +0000</pubDate>
      <link>https://dev.to/vincenius/weekly-web-development-resources-89-5chl</link>
      <guid>https://dev.to/vincenius/weekly-web-development-resources-89-5chl</guid>
      <description>

&lt;h2&gt;
  &lt;a href="#burdy"&gt;
  &lt;/a&gt;
  &lt;a href="https://burdy.io/"&gt;Burdy&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://burdy.io/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H8NkJKIU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/89/burdy.jpg" alt="Burdy"&gt;&lt;/a&gt;&lt;br&gt;
An open-source headless CMS, which integrates well with Next.js.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#basic-pattern-repository"&gt;
  &lt;/a&gt;
  &lt;a href="https://patterns.helloyes.dev/"&gt;Basic Pattern Repository&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://patterns.helloyes.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ssfgynHY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/89/patterns.jpg" alt="Basic Pattern Repository"&gt;&lt;/a&gt;&lt;br&gt;
A collection of hand-coded SVG 's, ready to be used in inline SVG or however you like.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-i-make-css-art"&gt;
  &lt;/a&gt;
  &lt;a href="https://yosracodes.hashnode.dev/how-i-make-css-art"&gt;How I Make CSS Art&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://yosracodes.hashnode.dev/how-i-make-css-art"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OWWtMIF4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/89/css-art.jpg" alt="How I Make CSS Art"&gt;&lt;/a&gt;&lt;br&gt;
A nice article by Yosra Emad on how she approaches CSS Art.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#cccreate"&gt;
  &lt;/a&gt;
  &lt;a href="https://cccreate.co/"&gt;cccreate&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cccreate.co/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FRp7MfJ---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/89/cccreate.jpg" alt="cccreate"&gt;&lt;/a&gt;&lt;br&gt;
A carefully curated collection of tools &amp;amp; resources for web creators.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#saveddit"&gt;
  &lt;/a&gt;
  &lt;a href="https://saveddit4reddit.herokuapp.com/"&gt;Saveddit&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://saveddit4reddit.herokuapp.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dr4WCCdQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/89/saveddit.jpg" alt="Saveddit"&gt;&lt;/a&gt;&lt;br&gt;
A tool to search and filter your saved Reddit posts and comments.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#todays-28-best-react-blogs"&gt;
  &lt;/a&gt;
  &lt;a href="https://bloggingfordevs.com/react-blogs/"&gt;Today's 28 Best React Blogs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://bloggingfordevs.com/react-blogs/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ORrdoneF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/89/react-blogs.jpg" alt="Today's 28 Best React Blogs"&gt;&lt;/a&gt;&lt;br&gt;
A list of React blogs, where you'll find news and tutorials about React.js, Gatsby, Next.js, and React Native.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#launchin30html"&gt;
  &lt;/a&gt;
  &lt;a href="https://launchin30html.carrd.co/"&gt;#launchin30HTML&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://launchin30html.carrd.co/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CCgnhysT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/89/build-product.jpg" alt="#launchin30HTML"&gt;&lt;/a&gt;&lt;br&gt;
A project by Lucian Tartea, where he builds and launches a product in 30 days with just HTML and CSS.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#animated-backgrounds"&gt;
  &lt;/a&gt;
  &lt;a href="https://animatedbackgrounds.me/"&gt;Animated Backgrounds&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://animatedbackgrounds.me/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y50s-tYh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/89/backgrounds.jpg" alt="Animated Backgrounds"&gt;&lt;/a&gt;&lt;br&gt;
A collection of 30+ animated backgrounds for websites and blogs.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#guide-to-browser-cookies"&gt;
  &lt;/a&gt;
  &lt;a href="https://prateeksurana.me/blog/javascript-developer-guide-to-browser-cookies/"&gt;Guide to browser cookies&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://prateeksurana.me/blog/javascript-developer-guide-to-browser-cookies/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nb_bIUMJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/89/browser-cookies.jpg" alt="Guide to browser cookies"&gt;&lt;/a&gt;&lt;br&gt;
Learn how browser cookies work and how you can access, manipulate and control their visibility across browser with JavaScript.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#partytown"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/BuilderIO/partytown"&gt;Partytown&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/BuilderIO/partytown"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2w9PGAgf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://wweb.dev/weekly/content/89/partytown.jpg" alt="Partytown"&gt;&lt;/a&gt;&lt;br&gt;
A lazy-loaded 6kb library to help relocate resource intensive scripts into a web worker.&lt;/p&gt;




&lt;p&gt;To see all the weeklies check: &lt;a href="https://wweb.dev/weekly"&gt;wweb.dev/weekly&lt;/a&gt;&lt;/p&gt;

</description>
      <category>weekly</category>
      <category>webdev</category>
    </item>
    <item>
      <title>RxJS - Error Handling Operators</title>
      <author>Luca Del Puppo</author>
      <pubDate>Wed, 29 Sep 2021 06:03:31 +0000</pubDate>
      <link>https://dev.to/this-is-learning/rxjs-error-handling-operators-57op</link>
      <guid>https://dev.to/this-is-learning/rxjs-error-handling-operators-57op</guid>
      <description>&lt;p&gt;One of the best practice in our work is handle the errors, so today I'll show you some operators in RxJS to handle the errors.&lt;br&gt;
Let's start :)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://rxjs.dev/api/operators/catchError"&gt;catchError&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Catches errors on the observable to be handled by returning a new observable or throwing an error.&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;catchError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs/operators&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;b&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;c&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;d&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toUpperCase&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
    &lt;span class="nx"&gt;catchError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;B&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;D&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;A
B
C
D
n.toUpperCase is not a function
A
B
C
D
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This operator is used to catch the errors during the execution of the observables.&lt;br&gt;
This operator helps us to handle the errors and prevent a bad flow of our users.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://rxjs.dev/api/operators/retry"&gt;retry&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;retry&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs/operators&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;}):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;never&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toString of&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0.6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toString of&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;failed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;toString failed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;retry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;toString of 1
toString of 1 failed
toString of 1
toString of 1 failed
toString of 1
1
toString of 2
toString of 2 failed
toString of 1
toString of 1 failed
toString failed
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This operator is used to retry the execution of an observable if it raises an error. We can indicate the max number of retries. If during the execution an observable raises a number of errors greater than the indicated value, the retry operator doesn't try anymore but goes out and raise the error.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://rxjs.dev/api/operators/retryWhen"&gt;retryWhen&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Returns an Observable that mirrors the source Observable with the exception of an error. If the source Observable calls error, this method will emit the Throwable that caused the error to the Observable returned from notifier. If that Observable calls complete or error then this method will call complete or error on the child subscription. Otherwise this method will resubscribe to the source Observable.&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;timer&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;delayWhen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;retryWhen&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tap&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;rxjs/operators&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="nx"&gt;retryWhen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;errors&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;errors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pipe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;tap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`Value &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; was too high!`&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
      &lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="nx"&gt;delayWhen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;timer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;subscribe&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;0
1
2
3
4
5
Value 6 was too high!
0
1
2
3
4
5
Value 6 was too high!
0
1
2
3
4
5
Value 6 was too high!
0
1
2
3
4
5
Value 6 was too high!
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This operator is used to retry the execution of an observable and it allows us to indicate the strategy of the retry.&lt;/p&gt;

&lt;p&gt;I hope you have all the means now to better handle errors in your code.&lt;br&gt;
It's all for today.&lt;br&gt;
You can find all the code of this article &lt;a href=""&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See you soon,&lt;br&gt;
Bye Bye! &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>rxjs</category>
    </item>
    <item>
      <title>JavaScript Package Manager — Yarn vs NPM</title>
      <author>RaftLabs - Product Development Agency</author>
      <pubDate>Wed, 29 Sep 2021 06:02:11 +0000</pubDate>
      <link>https://dev.to/raftlabs/javascript-package-manager-yarn-vs-npm-2lol</link>
      <guid>https://dev.to/raftlabs/javascript-package-manager-yarn-vs-npm-2lol</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1V6QVvzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6p1iu4nvztmxvkyrzyxx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1V6QVvzn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6p1iu4nvztmxvkyrzyxx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
A package manager is a collection of software tools that keeps track of what computer program is installed on your computer and allows you to easily install, upgrade to newer versions, or remove computer programs that you previously installed. As the name suggests, package managers deal with packages, distributions of software, and data in archive files. It helps to create project environments and easily import external dependencies.&lt;/p&gt;

&lt;p&gt;Two of the most popular package managers among JavaScript (and Node.js) developers are npm and Yarn.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is%C2%A0npm"&gt;
  &lt;/a&gt;
  What is npm?
&lt;/h4&gt;

&lt;p&gt;npm (Node Package Manager) is a package manager for the JavaScript programming language. npm is the default package manager for the JavaScript runtime environment Node.js. It consists of three components: the website to manage various aspects of your npm experience, Command Line Interface (CLI) to interact with npm via the terminal, and registry to access an extensive public database of JavaScript software.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is%C2%A0yarn"&gt;
  &lt;/a&gt;
  What is Yarn?
&lt;/h4&gt;

&lt;p&gt;Yarn (Yet Another Resource Negotiator) and is a package manager just like npm. It was developed by Facebook in 2016 and is now open-source. The intention behind creating Yarn was to address some of the performance and security shortcomings of working with npm&lt;/p&gt;

&lt;p&gt;So as now you got the basic idea about npm and yarn, Let's compare npm --- Yarn similarities and differences.‍&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-installation"&gt;
  &lt;/a&gt;
  1. Installation
&lt;/h4&gt;

&lt;p&gt;Installing npm seems much easier than that of Yarn --- npm comes already bundled with your Node.js installation, so there'll be no need to install it.&lt;/p&gt;

&lt;p&gt;Yarn is available as an npm package. So, you can install it by running the following command on the terminal:&lt;/p&gt;

&lt;p&gt;npm install --- global yarn‍&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-managing-dependencies"&gt;
  &lt;/a&gt;
  2. Managing dependencies
&lt;/h4&gt;

&lt;p&gt;Yarn and npm have nearly the same ways of managing dependencies. They both provide the package.json file in their project's working directory. This file keeps all the relevant metadata associated with the project. It assists in managing the project's dependencies version, scripts, and more. Both the package managers store dependency files into the node_modules folder and auto-generate Lock files (package-lock.json in npm and yarn.lock in yarn).‍&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-performance"&gt;
  &lt;/a&gt;
  3. Performance
&lt;/h4&gt;

&lt;p&gt;One of the main differences between NPM and Yarn is how they handle the package installation process. Yarn installs packages in parallel. Yarn is optimized to fetch and install multiple packages simultaneously. If you install five packages, and two of them take a long time to install, Yarn will go over and install the package's side by side.&lt;/p&gt;

&lt;p&gt;On the other hand, NPM would install each package one at a time. It fetches every package independently. This means that if you install a list of five packages, NPM will perform a serial installation process. Parallel installation is one of the reasons why Yarn beats NPM in Performance.‍&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-security"&gt;
  &lt;/a&gt;
  4. Security
&lt;/h4&gt;

&lt;p&gt;While Yarn was initially regarded as more secure, the npm team has made commendable comebacks with the introduction of significant security improvements. If you try installing code with a known security vulnerability, npm will automatically issue a warning. Also, a new command, npm audit, has been introduced to assist you in recursively assessing your dependency tree to identify anomalies.&lt;/p&gt;

&lt;p&gt;On the other hand, Yarn checks behind the scenes and ensures that you're not downloading rogue scripts or stuff that can conflict with your project dependencies. Security is one of Yarn's core features.‍&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-fetching%C2%A0packages"&gt;
  &lt;/a&gt;
  5. Fetching packages
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;npm:&lt;/strong&gt; npm fetches dependencies from the npm registry during every 'npm install' command.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;yarn:&lt;/strong&gt; yarn stores dependencies locally and fetches from the disk during a 'yarn add' command (assuming the dependency(with the specific version) is present locally).‍&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-license%C2%A0checker"&gt;
  &lt;/a&gt;
  6. License Checker
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;npm:&lt;/strong&gt; npm doesn't have a license checker that can give a handy description of all the licenses that a project is bound with due to installed dependencies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;yarn:&lt;/strong&gt; Yarn has a neat license checker. To see them, run yarn licenses list.‍&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-popularity%E2%80%8D"&gt;
  &lt;/a&gt;
  7. Popularity‍
&lt;/h4&gt;

&lt;p&gt;Choosing a widely adopted technology can help you get faster when experiencing any implementation challenges. Since Yarn is newer compared to npm, many people are much skeptical about using Yarn over npm because it is much older. However, with time, Yarn is gaining more popularity than npm&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Top 10 Windows keyboard Shortcut Keys 🚀🚀</title>
      <author>Shubham Jadhav</author>
      <pubDate>Wed, 29 Sep 2021 05:54:39 +0000</pubDate>
      <link>https://dev.to/dev_shubham/top-10-windows-keyboard-shortcut-keys-4o7g</link>
      <guid>https://dev.to/dev_shubham/top-10-windows-keyboard-shortcut-keys-4o7g</guid>
      <description>&lt;p&gt;Hello Guys, Today in this article I am showing top 10 windows shortcut key for beginners. &lt;br&gt;
  So, Let's start today's article... &lt;/p&gt;

&lt;p&gt;• Top 10 Windows Keyboard &lt;br&gt;
  Shortcut key 👇&lt;br&gt;
  ( "Win" mean Windows Key )&lt;/p&gt;

&lt;p&gt;👉 Win + E :- &lt;br&gt;
   This shortcut key quickly open your file manager.&lt;/p&gt;

&lt;p&gt;👉 Win + UP/DOWN Arrow :- &lt;br&gt;
   Win + Down arrow key minimize working window and Win + Up arrow used to full screen working window. &lt;/p&gt;

&lt;p&gt;👉 Win + Left/Right Arrow :- &lt;br&gt;
   This short cut key used to split screen in two parts when you press Win + Left arrow keys working window take place in left side of screen and when you press Win + Right arrow working window in right side of screen. &lt;/p&gt;

&lt;p&gt;👉 Win + D :- &lt;br&gt;
   This keys use for minimize all open tabs or window in your pc.&lt;/p&gt;

&lt;p&gt;👉 Ctrl + N :- &lt;br&gt;
   Quick creating new file in your desktop. &lt;/p&gt;

&lt;p&gt;👉 Ctrl + Shift + N :- &lt;br&gt;
   This keys create quick new folder in your desktop. &lt;/p&gt;

&lt;p&gt;👉 Win + ";" :- &lt;br&gt;
   How to open emoji panel in your desktop?? Then press Win + ";" and see your emoji panel. &lt;/p&gt;

&lt;p&gt;👉 Win + Shift + S :- &lt;br&gt;
   Take a advance screenshot in your pc by using Win + Shift + S. You can take rectangle, square and free-form screen shots.&lt;/p&gt;

&lt;p&gt;👉 Win + V :- &lt;br&gt;
   You need copied text which you copy 5-6 hours before then press Win + V and see your clipboard history. &lt;/p&gt;

&lt;p&gt;👉 Win + L :- &lt;br&gt;
   Lock your pc quickly by pressing Win + L keys. &lt;/p&gt;

&lt;p&gt;🙏 Thanks for reading.... &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Is there any way on how we can integrate todoist or any Kanban board service in our laravel app? </title>
      <author>SYAUQIZAIDAN KHAIRAN KHALAF</author>
      <pubDate>Wed, 29 Sep 2021 05:28:28 +0000</pubDate>
      <link>https://dev.to/syaufy/is-there-any-way-on-how-we-can-integrate-todoist-or-any-kanban-board-service-in-our-laravel-app-35hi</link>
      <guid>https://dev.to/syaufy/is-there-any-way-on-how-we-can-integrate-todoist-or-any-kanban-board-service-in-our-laravel-app-35hi</guid>
      <description>&lt;p&gt;Right now, I would love to have a kanban board feature in my laravel app. But most tutorials on the internet explain how we make it with vue, where my application is built with laravel completely without vue. Then I thought what if we look for a kanban board application that provides integration services on our website?&lt;/p&gt;

&lt;p&gt;Therefore I want to ask, is there a way or is there an application that provides this service? if so, can you show me how?&lt;/p&gt;

&lt;p&gt;Regards, Syauqi&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>todoist</category>
      <category>api</category>
    </item>
    <item>
      <title>Replace std::find_if in 80% of the cases</title>
      <author>Sandor Dargo</author>
      <pubDate>Wed, 29 Sep 2021 05:25:52 +0000</pubDate>
      <link>https://dev.to/sandordargo/replace-std-findif-in-80-of-the-cases-2kl2</link>
      <guid>https://dev.to/sandordargo/replace-std-findif-in-80-of-the-cases-2kl2</guid>
      <description>&lt;p&gt;If you've been following the posts on this blog, you know that &lt;a href="https://www.sandordargo.com/blog/2020/05/13/loops-vs-algorithms"&gt;I'm a big fan of using standard algorithms&lt;/a&gt; in any programming language, in particular in C++.&lt;/p&gt;

&lt;p&gt;They contain fewer bugs, in general they have better performance and the standard algorithms are more expressive.&lt;/p&gt;

&lt;p&gt;The last point on expressiveness is very important to me and after I saw a not-so-ideal example of using &lt;code&gt;std::find_if&lt;/code&gt; in our codebase, I wanted to have a deeper look.&lt;/p&gt;

&lt;p&gt;So I went through all our usages of &lt;code&gt;find_if&lt;/code&gt; and I found that it was only used in a proper way in about 20% of all the cases.&lt;/p&gt;

&lt;p&gt;This means that the Pareto principle applies here too. In 80% of the cases, &lt;code&gt;std::find_if&lt;/code&gt; should not have been used.&lt;/p&gt;

&lt;p&gt;But what else should have been used? And why?&lt;/p&gt;

&lt;p&gt;I brought some examples, where I changed the variable names.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-there-any-such-element"&gt;
  &lt;/a&gt;
  Is there any such element?
&lt;/h2&gt;

&lt;p&gt;Here is the first example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;myCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
           &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;find_if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;myCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="n"&gt;myType&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;anItem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;anItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;m_code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;ENUM_ELEMENT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
              &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You might also see a close variant of the above example in your code base. Sometimes, there is a temporary variable to store the returned value of &lt;code&gt;find_if&lt;/code&gt;, even if it's used only once:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;foundElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;find_if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;myCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="n"&gt;myType&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;anItem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;anItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;m_code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;ENUM_ELEMENT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;myCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;foundElement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So what goes on here? &lt;/p&gt;

&lt;p&gt;First of all, what does &lt;code&gt;find_if&lt;/code&gt; return? &lt;/p&gt;

&lt;p&gt;It returns an iterator to the first element of the searched range that satisfies the condition. If there is no such item, it returns an iterator pointing beyond the last element, in other words, to &lt;code&gt;end()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The function's return value in the above examples is a boolean, we simply compare whether &lt;code&gt;find_if&lt;/code&gt; returns anything else than the &lt;code&gt;end()&lt;/code&gt; of the examined collection. In other words, it checks whether the &lt;code&gt;find _if&lt;/code&gt; returns an iterator to any of the elements in &lt;code&gt;myCollection&lt;/code&gt;. Yet in other words, we check if &lt;em&gt;any of&lt;/em&gt; &lt;code&gt;myCollection&lt;/code&gt;'s elements satisfy the condition passed to &lt;code&gt;find_if&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Alright, this last sentence should give us the hint. We can replace the above expression with &lt;code&gt;std::any_of&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;any_of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;myCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;myCollection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;[](&lt;/span&gt;      &lt;span class="n"&gt;myType&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;anItem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;anItem&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;m_code&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;ENUM_ELEMENT&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What did we gain? We have a comparison less and potentially a temporary variable less as well. At the same time, our code is shorter, more expressive and we didn't even have to touch the lambda we wrote.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#there-is-no-such-element"&gt;
  &lt;/a&gt;
  There is no such element!
&lt;/h2&gt;

&lt;p&gt;A bit different, yet similar example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;aPotentialItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;find_if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;iName&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;anItem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;iName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aPotentialItem&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;nullptr&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;aPotentialItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this example, we don't use &lt;code&gt;!=&lt;/code&gt; as a comparison between the &lt;code&gt;end()&lt;/code&gt; of the collection and the return value of &lt;code&gt;find_if&lt;/code&gt;, but &lt;code&gt;==&lt;/code&gt; instead. Which means that we check whether there is no element in a given range complying to our condition.&lt;/p&gt;

&lt;p&gt;In other words, we check whether &lt;em&gt;none of&lt;/em&gt; the elements satisfy our condition.&lt;/p&gt;

&lt;p&gt;You guessed it right, in such cases we can replace &lt;code&gt;find_if&lt;/code&gt; with &lt;code&gt;none_of&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;none_of&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;iName&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="n"&gt;Item&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;anItem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inItem&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_name&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;iName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});)&lt;/span&gt; &lt;span class="o"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;nullptr&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;aPotentialItem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our gains are similar. We still spare comparison and potentially a temporary as well. Besides, our code is more terse, more expressive and we didn't even have to touch the lambda we use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-to-do"&gt;
  &lt;/a&gt;
  So what to do?
&lt;/h2&gt;

&lt;p&gt;Based on the cases I saw, I came up with this rule rule of thumb:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;if the result of &lt;code&gt;find_if&lt;/code&gt; is compared using &lt;code&gt;!= end()&lt;/code&gt; use &lt;code&gt;any_of&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;if the result of &lt;code&gt;find_if&lt;/code&gt; is compared using &lt;code&gt;== end()&lt;/code&gt; use &lt;code&gt;none_of&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Keep &lt;code&gt;find_if&lt;/code&gt; only if you want to interact with the object pointed by the returned iterator. If the outcome is just a boolean, like in the above example, you have an alternative still in the standard library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This was a short post on how to use the C++ standard algorithms in a better way than often it is used. &lt;code&gt;std::find_if&lt;/code&gt; is often misused, probably because it's something more people know about than the alternatives.&lt;/p&gt;

&lt;p&gt;In the vast majority of the cases I saw, it can be replaced either with &lt;code&gt;std::any_of&lt;/code&gt; or &lt;code&gt;std::none_of&lt;/code&gt; which improves the readability of the given piece of code a lot.&lt;/p&gt;

&lt;p&gt;Go and check in your codebases how &lt;code&gt;std::find_if&lt;/code&gt; is used. Do you have similar findings?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-deeper"&gt;
  &lt;/a&gt;
  Connect deeper
&lt;/h2&gt;

&lt;p&gt;If you liked this article, please &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;hit on the like button,
&lt;/li&gt;
&lt;li&gt;
&lt;a href="http://eepurl.com/gvcv1j"&gt;subscribe to my newsletter&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;and let's connect on &lt;a href="https://twitter.com/SandorDargo"&gt;Twitter&lt;/a&gt;!&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cpp</category>
      <category>stl</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>I made 100 CSS loaders for your next project</title>
      <author>Tous</author>
      <pubDate>Wed, 29 Sep 2021 05:24:42 +0000</pubDate>
      <link>https://dev.to/hyshah/i-made-100-css-loaders-for-your-next-project-16m2</link>
      <guid>https://dev.to/hyshah/i-made-100-css-loaders-for-your-next-project-16m2</guid>
      <description>&lt;p&gt; &lt;span&gt;You either make a super fast website/application or you use loaders. I think most of us fall into the second category.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now the question is: what loader should I use? the "loading" text, the 3 dots, a progress bar, the Batman symbol??&lt;/p&gt;
&lt;p&gt;You no more need to bother yourself searching for loaders. Find below a collection of 100 different CSS loaders. From the simple one to the more fancy one, you will find the most suitable for your project.&lt;/p&gt;
&lt;p&gt;Each loader is done using a &lt;span&gt;single&lt;/span&gt; element. Yes, only one &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, nothing more. You don't have to copy a ton of code. Add a class to your div and start loading! &lt;/p&gt;

&lt;p&gt;Read More:&lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwjRwJLBuKPzAhX9xzgGHRRPBagQFnoECCIQAQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt; I made 100 CSS loaders for your next project &lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwjRwJLBuKPzAhX9xzgGHRRPBagQFnoECCIQAQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;&lt;br&gt;&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;





</description>
      <category>css</category>
    </item>
    <item>
      <title>Create Blazor Polar and Radar Charts in Just 10 Minutes</title>
      <author>Techguy</author>
      <pubDate>Wed, 29 Sep 2021 05:23:20 +0000</pubDate>
      <link>https://dev.to/syncfusion/create-blazor-polar-and-radar-charts-in-just-10-minutes-4i3b</link>
      <guid>https://dev.to/syncfusion/create-blazor-polar-and-radar-charts-in-just-10-minutes-4i3b</guid>
      <description>&lt;p&gt;Learn how easily you can create and configure &lt;a href="https://www.syncfusion.com/blazor-components/blazor-charts"&gt;Syncfusion Blazor polar and radar charts&lt;/a&gt; in a Blazor WebAssembly app using Visual Studio 2019. &lt;/p&gt;

&lt;p&gt;In this video, you will learn how to add simple Blazor polar and radar charts to a Blazor WebAssembly app. You will see how to render the Blazor radar and polar charts with basic features like data markers, series plotting types, and tooltips. &lt;/p&gt;

&lt;p&gt;Explore our tutorial videos: &lt;a href="https://bit.ly/3zOI1l3"&gt;https://bit.ly/3zOI1l3&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Download example from GitHub link: &lt;a href="https://bit.ly/2XZnAFk"&gt;https://bit.ly/2XZnAFk&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/-Y90SKMpot8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>blazor</category>
      <category>webdev</category>
      <category>csharp</category>
      <category>dotnet</category>
    </item>
    <item>
      <title>7 Best Tools For Developers - They Can't Live Without It</title>
      <author>Tous</author>
      <pubDate>Wed, 29 Sep 2021 05:11:53 +0000</pubDate>
      <link>https://dev.to/hyshah/7-best-tools-for-developers-they-can-t-live-without-it-13mb</link>
      <guid>https://dev.to/hyshah/7-best-tools-for-developers-they-can-t-live-without-it-13mb</guid>
      <description>&lt;p&gt; &lt;span&gt;The&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;b&gt;best tools for developers &lt;/b&gt;&lt;span&gt;are a priority for them to work. As a developer, he always works with code editors, browsers, terminals, etc. to improve his productivity. VS Code is one of the best editors, every developer would like to work with it. I've also listed the&lt;/span&gt;&lt;span&gt; &lt;/span&gt;VS Code extensions for JS &lt;span&gt;that are useful for a developer. And browser extensions are also a great way to improve productivity and I've also listed&lt;/span&gt;&lt;span&gt; &lt;/span&gt;&lt;b&gt;Chrome extensions for a developer&lt;/b&gt;&lt;span&gt;.&lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;If you are a junior programmer, this will give you an idea the improve your coding skills, and if you are a senior developer, you are still learn something new from it. Extensions are one the &lt;b&gt;best tools for developers.&lt;/b&gt;&lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/span&gt;&lt;span&gt;Let's see the best tools for developers.&lt;/span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/7-best-tools-for-developers-they-cant-live-without-it/"&gt;7 Best Tools For Developers - They Can't Live Without It&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
  </channel>
</rss>
