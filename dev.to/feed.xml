<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Fetch Data in React from a GraphQL API</title>
      <author>Reed Barger</author>
      <pubDate>Wed, 12 May 2021 20:42:53 +0000</pubDate>
      <link>https://dev.to/reedbarger/how-to-fetch-data-in-react-from-a-graphql-api-2m5n</link>
      <guid>https://dev.to/reedbarger/how-to-fetch-data-in-react-from-a-graphql-api-2m5n</guid>
      <description>&lt;p&gt;Here is the simplest way to start working with a GraphQL API from your React app using the Fetch API. No external libraries needed!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ready-for-the-next-step-join-the-react-bootcamp"&gt;
  &lt;/a&gt;
  Ready for the next step? Join The React Bootcamp
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="http://bit.ly/join-react-bootcamp"&gt;The React Bootcamp&lt;/a&gt;&lt;/strong&gt; takes everything you should know about learning React and bundles it into one comprehensive package, including videos, cheatsheets, plus special bonuses.&lt;/p&gt;

&lt;p&gt;Gain the insider information hundreds of developers have already used to master React, find their dream jobs, and take control of their future:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://bit.ly/join-react-bootcamp"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w2usNUi9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://reedbarger.nyc3.digitaloceanspaces.com/react-bootcamp-banner.png" alt="The React Bootcamp"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Click here to be notified when it opens&lt;/em&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>graphql</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Javascript local storage - beginner's guide</title>
      <author>Arika O</author>
      <pubDate>Wed, 12 May 2021 20:42:46 +0000</pubDate>
      <link>https://dev.to/arikaturika/javascript-local-storage-beginner-s-guide-1gk1</link>
      <guid>https://dev.to/arikaturika/javascript-local-storage-beginner-s-guide-1gk1</guid>
      <description>&lt;p&gt;Before going into any kind of explanation, we need to understand the difference between &lt;code&gt;server side storage&lt;/code&gt; and &lt;code&gt;client side storage&lt;/code&gt; when it comes to websites and applications. Server side means that we store our data on a server, using a database, cleint side consists of JavaScript APIs that allow you to store data on the client (in the browser).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WHAT IS LOCAL STORAGE?&lt;/strong&gt;&lt;br&gt;
In simple terms, the &lt;code&gt;local storage&lt;/code&gt; can be compared to a data base, except it's found in a browser and not on a server. It's basically a huge Javascript object inside which we are able to store data in the form of &lt;code&gt;key-value&lt;/code&gt; pairs. Not only we can store data, we can also delete or retrieve it (a complete list of browsers which have a &lt;code&gt;localStorage&lt;/code&gt; cant be found &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage"&gt;here&lt;/a&gt;). The data you store in the &lt;code&gt;localStorage&lt;/code&gt; never leaves you machine (doesn't get sent back to the server, unlike with &lt;code&gt;cookies&lt;/code&gt;, which will discuss in a future article), and depending on the browser, you can store up to 5MB of data. &lt;/p&gt;

&lt;p&gt;In technical terms, &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;the localStorage read-only property of the &lt;code&gt;window&lt;/code&gt; interface allows you to access a &lt;code&gt;Storage&lt;/code&gt; object for the &lt;code&gt;Document's&lt;/code&gt; origin; &lt;br&gt;
the stored data is saved across browser sessions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;WHY USE IT?&lt;/strong&gt;&lt;br&gt;
Local storage lets us cache some application data in the browser, for later usage. Therefore, it is very useful if we want to speed applications up (since the data is stored totally on the client it does not travel between the client and server on each request or response). This way we can allow an user, for example, to continue a game where they left off or serve them relevant content based on their previous visit of our website.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I'm mostly using it when I'm building static websites. Since I don’t need any backend language or logic to store data in the browser, my web pages can run independently of any web server.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;There are two types of storages, &lt;code&gt;local&lt;/code&gt; and &lt;code&gt;session&lt;/code&gt;, but for now the only difference you should remember is that the &lt;code&gt;local storage&lt;/code&gt; has no expiration date (meaning that the data will stay in there until we remove it manually), whereas the &lt;code&gt;session&lt;/code&gt; one gets cleared once we close the browser (session).&lt;/p&gt;

&lt;p&gt;I will be using &lt;code&gt;Chrome&lt;/code&gt; browser for this article, but generally, accessing the localStorage of any browser is pretty similar. We open the console (F12), navigate to the &lt;code&gt;Application&lt;/code&gt; tab and in the menu on the left we'll see &lt;code&gt;Local storage&lt;/code&gt; under the &lt;code&gt;Storage&lt;/code&gt; tab. Something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ik8S68Mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7a6mjcf6y7y2dalupgi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ik8S68Mb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f7a6mjcf6y7y2dalupgi.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we expand the &lt;code&gt;Local storage&lt;/code&gt; dropdown, we'll get to this view:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a0gS0FNn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6yuq3uix5qvy1mzk6nx.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a0gS0FNn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e6yuq3uix5qvy1mzk6nx.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have two columns, &lt;code&gt;Key&lt;/code&gt; and &lt;code&gt;Value&lt;/code&gt;, and usually they're filled with data, which I just removed before taking the screen shot.&lt;/p&gt;

&lt;p&gt;The way we can access this &lt;code&gt;storage&lt;/code&gt; object and populate the two columns is by making use of some specific methods. Remember, &lt;code&gt;local storage&lt;/code&gt; is &lt;code&gt;read-only&lt;/code&gt;, meaning we can add, read and delete data from it but we can't modify it (at most, we can overwrite the previous value of a key, by re-adding to the storage, using the same key and the new value we want to store). For access we should use the following syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt; 
&lt;span class="c1"&gt;//or &lt;/span&gt;
&lt;span class="nx"&gt;localStorage&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we want to add something, we can do it like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;value&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To access a value, we write this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;localStorage.getItem("key");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And lastly, we can delete one specific value:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;key&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or we can clear the whole local storage:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's try to actually write some code. I will use my console, for simplicity's sake. Let's add an item:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;city&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Toronto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, local storage looks like this: &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H4ml1P5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5sli70mak2rpyuadqf02.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H4ml1P5c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5sli70mak2rpyuadqf02.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One important thing to remember is that the &lt;code&gt;localStorage&lt;/code&gt; can store only strings. To store objects, we must first convert them to strings using the JSON. stringify() method. And we convert the strings back into objects, after we retrieve them from the localStorage, using the JSON.parse().&lt;/p&gt;

&lt;p&gt;Let's add some more values, using different types of data as keys and values:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Alan&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// returns "{\"name\":\"Alan\",\"age\":32}"&lt;/span&gt;
&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;person&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Alan&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;age&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:32}&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the local storage will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jcE-s0Th--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zo19v2tc4b79shq1qpwc.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jcE-s0Th--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zo19v2tc4b79shq1qpwc.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can add as many key-value pairs as we want as long as the data doesn't exceed &lt;code&gt;5MB&lt;/code&gt;. Now let's retrieve the value of the &lt;code&gt;person&lt;/code&gt; key, convert it to an object and print it to the console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;windows&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;person&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// returns {"name":"Alan","age":32}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;objectResult&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;objectResult&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// returns {name: "Alan", age: 32}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DhRgHJsr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ep78mzwuae493xg5rgy3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DhRgHJsr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ep78mzwuae493xg5rgy3.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, let's delete one item only, followed by clearing the whole &lt;code&gt;localStorage&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;windows&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;removeItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vBP1eblr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j10zau4tl0e4eroe6wm.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vBP1eblr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j10zau4tl0e4eroe6wm.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;windows&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;localStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vCmS7ZGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmio0l7maaovcyyxnwz6.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vCmS7ZGd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cmio0l7maaovcyyxnwz6.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;THINGS TO REMEMBER ABOUT THE LOCAL STORAGE&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it is tab specific, meaning each browser tab we open will have different data in the &lt;code&gt;localStorage&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;some browsers, when used in &lt;code&gt;incognito mode&lt;/code&gt; don't allow for setting data in the &lt;code&gt;localStorage&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;it is synchronous, meaning each operation will execute one after the other (this might work for small projects, but it will impact the runtime of the more complex ones)&lt;/li&gt;
&lt;li&gt;it can only store data string data (this is fine for small projects, but it can be cumbersome to &lt;code&gt;serialize&lt;/code&gt; data in complex ones)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;SUPER IMPORTANT THING TO REMEMBER&lt;/strong&gt;&lt;br&gt;
Local storage should under no circumstances be used to store sensitive information (e.g. passwords or personal details), since the data inside it can be accessed from anywhere on the page (it has no real protection and it's susceptible to cross-site scripting).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image source: ThisIsEngineering/ @thisisengineering on Pexels&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Announcing Tauri Beta - More efficient crossplatform apps with better features</title>
      <author>nothingismagick</author>
      <pubDate>Wed, 12 May 2021 20:26:41 +0000</pubDate>
      <link>https://dev.to/tauri/announcing-tauri-beta-more-efficient-crossplatform-apps-with-better-features-1nbd</link>
      <guid>https://dev.to/tauri/announcing-tauri-beta-more-efficient-crossplatform-apps-with-better-features-1nbd</guid>
      <description>&lt;p&gt;Hello fellow engineers, project managers, and technocrats! Today, after exactly two years of work, we are proud to announce the Beta release of Tauri 1.0. &lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;Github Repository: &lt;a href="https://github.com/tauri-apps/tauri"&gt;https://github.com/tauri-apps/tauri&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Website: &lt;a href="https://tauri.studio"&gt;https://tauri.studio&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#so-what-is-tauri"&gt;
  &lt;/a&gt;
  So, what Is Tauri?
&lt;/h2&gt;

&lt;p&gt;Tauri enables you to make apps using the Webview technology stack that each operating system provides. It empowers you to call into the app backend using a JS api, which gives you opt-in access to things like the filesystem. All of this is done without needing to ship a localhost server and while maintaining a secure context for your application.&lt;/p&gt;

&lt;p&gt;Tauri apps can have custom menus and tray-type interfaces. They can be updated securely, and are managed by the user's operating system as expected. Their ultimate binaries are very small, because they not only use the system's webview, they also do not need to ship a runtime (like Node.js), since the final binary is compiled from Rust. This makes Tauri apps quite small and performant, and also turns the reversing of Tauri apps into a task that is neither trivial nor fun.&lt;/p&gt;

&lt;p&gt;If you want to find out more, we recommend checking out the &lt;a href="https://tauri.studio/en/docs/about/intro"&gt;intro on our website&lt;/a&gt; or diving into the &lt;a href="https://github.com/tauri-apps/tauri/tree/dev/ARCHITECTURE.md"&gt;architectural design document&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;In short, Tauri is a toolkit for creating smaller, faster, and more secure desktop apps with a web frontend. Tauri's core system is written in stable Rust and currently uses that for the main process. However, you do not need to write Rust code to interact. Nevertheless, we plan on providing bindings to other languages after the full 1.0 release. &lt;/p&gt;

&lt;p&gt;We are finally happy enough with its shape and approach that we are marking its status as Beta. This means that over the course of the next several months a few things are going to happen:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We will make sure it builds properly on all the platforms we want to support. This includes the major Desktops and the Major Mobile operating systems.&lt;/li&gt;
&lt;li&gt;We will employ a third-party security consultancy to perform a horizontal security audit so that we can be confident that the core libraries are safe to use.&lt;/li&gt;
&lt;li&gt;We will fix bugs that arise and work on reducing final bundle sizes as much as possible.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#whats-new"&gt;
  &lt;/a&gt;
  What's New?
&lt;/h2&gt;

&lt;p&gt;So many things have changed that we can't fit the full list here. Instead, we'll just be summarising the biggest changes. If you want the gory details, visit our &lt;a href="https://tauri.studio/en/release-notes"&gt;Release Notes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, if you already started a Tauri project back in the Alpha days, check out this &lt;a href="https://tauri.studio/en/docs/usage/guides/migration"&gt;migration page&lt;/a&gt; to get informed as to what you have to do to get back in the saddle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wry-webview-rendering-library"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/tauri-apps/wry"&gt;WRY&lt;/a&gt; (Webview Rendering librarY)
&lt;/h3&gt;

&lt;p&gt;Tauri Alpha used bindings to &lt;a href="https://github.com/webview/webview"&gt;webview/webview&lt;/a&gt;, a C++ library. While these got the job done, they were quite buggy on Windows and were lacking a lot of features we wanted. We've replaced these with WRY, a new, pure Rust Webview library we developed for Tauri. WRY has proven to be much more stable on Windows, and adds the following features to all platforms:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom window styles: frameless, transparent, invisible, always-on-top&lt;/li&gt;
&lt;li&gt;Height and width constraints&lt;/li&gt;
&lt;li&gt;Draggable regions&lt;/li&gt;
&lt;li&gt;Programmatic setting of: size and size constraints, window styles, minimized/maximized, title&lt;/li&gt;
&lt;li&gt;Custom app menus&lt;/li&gt;
&lt;li&gt;System tray support&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tao"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/tauri-apps/tao"&gt;TAO&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;For the first part of its existence, WRY depended on &lt;a href="https://github.com/rust-windowing/winit"&gt;winit&lt;/a&gt;, the amazing Windowing provider for many operating systems. As time went on, however, we also need some advanced features like menubar and system tray which &lt;a href="https://github.com/rust-windowing/winit/pull/1921"&gt;contradicted&lt;/a&gt; with &lt;a href="https://github.com/rust-windowing/winit/blob/v0.24.0/FEATURES.md#winit-scope"&gt;their vision&lt;/a&gt;, and thus we made the hard decision to fork &lt;code&gt;winit&lt;/code&gt; and republish it under a different name: TAO.&lt;/p&gt;

&lt;p&gt;This means that the TAuri Organisation controls all first-order dependencies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rust-cli"&gt;
  &lt;/a&gt;
  Rust CLI
&lt;/h3&gt;

&lt;p&gt;We've moved almost every command to a new CLI, written in Rust. This means Node.js is no longer required for developing Tauri apps, although it is recommended for now (unless you have problems with node.js and compiling some of the libraries for imagemin). We'll be moving the final commands over soon, making the JS CLI a thing of the past. Want to test it while we are still in beta?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;% cargo install tauri-cli --version ^1.0.0-beta
% cargo tauri --version
cargo-tauri 1.0.0-beta.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-cargo-run-endraw-support"&gt;
  &lt;/a&gt;
  &lt;code&gt;cargo run&lt;/code&gt; Support
&lt;/h3&gt;

&lt;p&gt;It is now possible to run your Tauri application with &lt;code&gt;cargo run&lt;/code&gt; instead of through the Tauri CLI. This is possible through a new internal codegen crate that can generate everything required from your Tauri config file. This still requires you to have a valid &lt;code&gt;tauri.conf.json&lt;/code&gt; along with whatever assets inside your &lt;code&gt;distDir&lt;/code&gt; already generated. For the time being, the codegen will &lt;strong&gt;not&lt;/strong&gt; run your &lt;code&gt;beforeBuildCommand&lt;/code&gt; or &lt;code&gt;beforeDevCommand&lt;/code&gt; from the config.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-web-content-loader"&gt;
  &lt;/a&gt;
  New Web Content Loader
&lt;/h3&gt;

&lt;p&gt;We've removed both the no-server and embedded-server modes, and replaced them with a new custom protocol loader. This combines the security of the no-server mode with the stability of the embedded-server, and is more performant than both.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multiwindow"&gt;
  &lt;/a&gt;
  Multiwindow
&lt;/h3&gt;

&lt;p&gt;It's finally here! Thanks to WRY's improved interface, we've been able to add one of the most requested features to Tauri. You can now create multiple windows, either at launch through &lt;code&gt;tauri.conf.json&lt;/code&gt; or programatically through Rust. We've used this in our new &lt;a href="https://tauri.studio/en/docs/usage/guides/visual/splashscreen"&gt;Splashscreen Guide&lt;/a&gt;, which allows your app's web contents to load in the background while a splashscreen is displayed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improved-command-handling"&gt;
  &lt;/a&gt;
  Improved Command Handling
&lt;/h3&gt;

&lt;p&gt;We've added some macros that makes creating Rust commands as simple as writing a function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Defining commands is no longer a multi-file mess
#[tauri::command]
fn my_custom_command() {
  println!("I was invoked from JS!");
}

fn main() {
  tauri::Builder::default()
    // No need to write a fancy handler, either
    // Just pass in a list of all your commands
    .invoke_handler(tauri::generate_handler![my_custom_command])![generate](https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gpkroh61gxeho4aq1ivk.png)

    .run(tauri::generate_context!())
    .expect("error while running application");
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Calling your commands is super easy as well
import { invoke } from '@tauri-apps/api/tauri'
invoke('my_custom_command')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Tauri's command feature also supports passing arguments, returning values and errors, and running async functions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#updater"&gt;
  &lt;/a&gt;
  Updater
&lt;/h3&gt;

&lt;p&gt;We've added a new updater feature, allowing you to easily ship updates to your Tauri apps. You can create a custom update notification and progress indicator, or use the builtin update prompts. Updates are signed on publish and verified before installing, so users can be sure they aren't getting a malicious version of your app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#external-audit"&gt;
  &lt;/a&gt;
  External Audit
&lt;/h3&gt;

&lt;p&gt;We are working together with &lt;a href="https://doyensec.com"&gt;Doyensec&lt;/a&gt; to undertake a complete horizontal audit of the critical components of Tauri, Tao &amp;amp; Wry. Doyensec has a long history of analysing Electron apps, so they are extraordinarily qualified to investigate the issues surrounding desktop apps. Once the audit is completed and we have resolved any and all concerns raised by the auditors, we will have crossed the threshold to a stable ecosystem and the 1.0 release will follow. If you plan to use Tauri in production, please consider making a donation to our &lt;a href="https://opencollective.com/tauri"&gt;Open Collective&lt;/a&gt; fundraising campaign to support this expensive endeavour. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-started-with-tauri"&gt;
  &lt;/a&gt;
  Get Started With Tauri
&lt;/h2&gt;

&lt;p&gt;If you'd like to get started making apps with Tauri, check out our &lt;a href="https://tauri.studio/en/docs/getting-started/intro"&gt;getting started guide&lt;/a&gt;. Within a few minutes, you'll have your first Tauri app up and running.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hvKVssCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4i4ern24qx4wldcmm37t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hvKVssCB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4i4ern24qx4wldcmm37t.png" alt="generate"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-tauri-does-not"&gt;
  &lt;/a&gt;
  What Tauri does not
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Tauri does not use Internet Explorer based Webviews, so there is no outdated Internet Explorer code being shipped in your app. (Seriously, stop spreading FUD.)&lt;/li&gt;
&lt;li&gt;Tauri does not ship Node.js by default, and actually you don't even need to have Node.js installed on your machine to build Tauri apps. (You can in fact just use the Rust CLI, and even build your entire frontend with a WASM based system like YEW).&lt;/li&gt;
&lt;li&gt;Tauri does not run a devserver for your HTML/CSS/JS framework. There are just too many of them and they change all the time, so it is not worth the maintenance burden.&lt;/li&gt;
&lt;li&gt;Tauri does not want you to build your assets using any kind of nodejs based SSR server, because that doesn't make sense.&lt;/li&gt;
&lt;li&gt;Tauri does not always have a problem when things don't work, sometimes it is the framework or the human operator.&lt;/li&gt;
&lt;li&gt;Tauri does not claim fitness for any purpose, because it is open source software maintained by volunteers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#who-is-tauri"&gt;
  &lt;/a&gt;
  Who is Tauri
&lt;/h2&gt;

&lt;p&gt;The Tauri organisation aims to be a sustainable collective based on principles that guide &lt;a href="https://sfosc.org"&gt;sustainable free and open software communities&lt;/a&gt;. To this end it is currently becoming a Programme within the &lt;a href="https://commonsconservancy.org/"&gt;Commons Conservancy&lt;/a&gt;, and you can contribute financially via &lt;a href="https://opencollective.com/tauri"&gt;Open Collective&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's Next?
&lt;/h2&gt;

&lt;p&gt;We've got a lot planned for Tauri, like Arm/Android/iOS support, a testing framework, and binding to other languages for the main process. See &lt;a href="https://tauri.studio/en/#roadmap"&gt;our roadmap&lt;/a&gt; for the full list. If you'd like to help add these features to Tauri (or if you have any questions), we'd love for your to join our Discord Server at &lt;a href="https://discord.gg/tauri"&gt;https://discord.gg/tauri&lt;/a&gt; . Let us know that you want to contribute, and we'll find a good task for you and guide you along.&lt;/p&gt;

&lt;p&gt;You can also help us out by donating to our &lt;a href="https://opencollective.com/tauri"&gt;Open Collective&lt;/a&gt;, however if your company actually turns a profit using Tauri, you should really consider the benefits of becoming a platinum sponsor. And speaking of sponsoring... how many open source projects do you sponsor? We hear that Babel needs support.&lt;/p&gt;




&lt;p&gt;Title Graphic: Alve Larsson&lt;/p&gt;

</description>
      <category>tauri</category>
      <category>opensource</category>
      <category>rust</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Be careful when you using an input "number" field in your web app</title>
      <author>lakshmanan-arumugam</author>
      <pubDate>Wed, 12 May 2021 19:04:39 +0000</pubDate>
      <link>https://dev.to/lakshmananarumugam/be-careful-when-you-using-an-input-number-field-in-your-web-app-104d</link>
      <guid>https://dev.to/lakshmananarumugam/be-careful-when-you-using-an-input-number-field-in-your-web-app-104d</guid>
      <description>&lt;p&gt;Recently I faced one &lt;em&gt;interesting issue&lt;/em&gt; when I working on my web application. I thoughts it will help others.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt; is one of the HTML tags and has some types are text, number, password..etc., So, a user able to give a value through to the input. Each input type field has some generic behavior. Input number type field rejects non-numerical entries. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technical-use-case"&gt;
  &lt;/a&gt;
  Technical use case:
&lt;/h2&gt;

&lt;p&gt;If a user is able to create a custom number field in your product and add the field inside a product form(Add contact form). Inside the Contact form, the number field value will have an auto-generated large number of digits.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#problem"&gt;
  &lt;/a&gt;
  Problem
&lt;/h2&gt;

&lt;p&gt;If an input field has without limit the min and max length of the number. if the user is able to more than 20 digits number value, the javascript engine only accepts as specified in &lt;code&gt;IEEE 754&lt;/code&gt; remainings will automatically change 0.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GIcpRcgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0o17me6ueffw3q0bt6o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GIcpRcgF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j0o17me6ueffw3q0bt6o.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is an issue.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#solution-1"&gt;
  &lt;/a&gt;
  Solution 1
&lt;/h3&gt;

&lt;p&gt;By default, limit the number field max length and before save the field validation also.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input type="number" min="-9007199254740991" max="9007199254740991"/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#solution-2"&gt;
  &lt;/a&gt;
  Solution 2
&lt;/h3&gt;

&lt;p&gt;Whenever we save the user number field value before the two conditions need to check.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function saveNumber(value) {
   if( Number.MIN_SAFE_INTEGER &amp;lt;= value &amp;amp;&amp;amp; Number.MAX_SAFE_INTEGER &amp;gt;= value)
     //do save stuff
   }else {
     // Throw error
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Done and thanks for reading this post...&lt;/p&gt;

</description>
      <category>help</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>What was the worst feedback you got from code review? </title>
      <author>Pavel Polívka</author>
      <pubDate>Wed, 12 May 2021 19:04:26 +0000</pubDate>
      <link>https://dev.to/pavel_polivka/what-was-the-worst-feedback-you-got-from-code-review-336i</link>
      <guid>https://dev.to/pavel_polivka/what-was-the-worst-feedback-you-got-from-code-review-336i</guid>
      <description>&lt;p&gt;What was the worst feedback you got from code review?&lt;br&gt;
How did you dealt with it? &lt;br&gt;
Was the reviewer jerk to you? &lt;br&gt;
Did you fight back? &lt;/p&gt;

</description>
      <category>discuss</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>Kubernetes Operator</title>
      <author>Payalsasmal</author>
      <pubDate>Wed, 12 May 2021 19:01:05 +0000</pubDate>
      <link>https://dev.to/payalsasmal/kubernetes-operator-171o</link>
      <guid>https://dev.to/payalsasmal/kubernetes-operator-171o</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-kubernetes-or-k8s"&gt;
  &lt;/a&gt;
  What is Kubernetes or k8s?
&lt;/h3&gt;

&lt;p&gt;Kubernetes is an open source containerized orchestration platform. Which basically help you to deploy, manage and scale your application automatically. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-kubernetes-operator"&gt;
  &lt;/a&gt;
  What is Kubernetes operator?
&lt;/h3&gt;

&lt;p&gt;Kubernetes operator is method of deploying, managing, scaling and packaging k8s application.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Now the confusion come up, both are deploying, managing, scaling the application then what is the difference between them.🤔 Let's see how both works&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-kubernetes-works"&gt;
  &lt;/a&gt;
  How Kubernetes works
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt; automate the lifecycle of a &lt;a href="https://www.redhat.com/en/topics/cloud-native-apps/stateful-vs-stateless"&gt;stateless application&lt;/a&gt; like web application, Mobile application etc. So, it does not store the previous user's state to the server. &lt;br&gt;
As server does not store the state, so when one application pod fail then Kubernetes can replace it with another pod automatically and Kubernetes does not have to configure extra things for stateless application.&lt;/p&gt;

&lt;p&gt;Now question is how does Kubernetes knows I have deployed application with these number of replicas(let's say 3 replicas) and I always be having my desired number of replicas(3 replicas) up and running (feature of auto-scaling)? 😮&lt;/p&gt;

&lt;p&gt;So Kubernetes &lt;strong&gt;master&lt;/strong&gt; is having &lt;strong&gt;controller component&lt;/strong&gt; which is responsible to implement &lt;strong&gt;control-loop&lt;/strong&gt;. Control-loop always observe the desire state and actual state of the cluster. If there is any difference then fix that immediately.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ibFLqSy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi1ck6ixg6qbeap6inkl.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ibFLqSy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi1ck6ixg6qbeap6inkl.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even though Kubernetes does not have &lt;strong&gt;domain/application knowledge&lt;/strong&gt;, It can deploy your application without any knowledge of your application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-kubernetes-operator-works"&gt;
  &lt;/a&gt;
  How Kubernetes Operator works
&lt;/h3&gt;

&lt;p&gt;Now think, you want to deploy &lt;a href="https://www.redhat.com/en/topics/cloud-native-apps/stateful-vs-stateless"&gt;Stateful application&lt;/a&gt; or complex application where you want storage, networking, cluster connection and pod should have their own volume.&lt;br&gt;
You want that Kubernetes should deploy the application automatically With these requirements. But Kubernetes does not have domain/application knowledge right?&lt;/p&gt;

&lt;p&gt;Now the &lt;strong&gt;Kubernetes operator&lt;/strong&gt; come into the picture. &lt;strong&gt;Kubernetes Operator&lt;/strong&gt; can manage above requirements of your application using &lt;strong&gt;Custom Resource(CR)&lt;/strong&gt;.&lt;br&gt;
If we use any type of &lt;strong&gt;CR&lt;/strong&gt; we first have to register that CR to Kubernetes cluster, To register the CR we use Custom Resource Definition(CRD). This CRD handled by K8s API.&lt;/p&gt;

&lt;p&gt;Now if I want to deploy my application and I want auto-scaling for my application as same Kubernetes did for stateless application. So &lt;strong&gt;Kubernetes Operator&lt;/strong&gt; is a &lt;strong&gt;custom Kubernetes Controller&lt;/strong&gt; (implement control-loop) which watch the CR and It takes action to match the desired state.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;The action Kubernetes Operator takes almost everything like scale-up the complex application, upgrade the new version of application, configure application endpoints etc.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I hope these blog gives little bit idea about the difference between Kubernetes and Kubernetes Operator. And how they work differently.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/PayalSasmal10"&gt;GitHub&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/payalsasmal"&gt;Twitter&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/payal-sasmal-64204311a/"&gt;Linkedin&lt;/a&gt;&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>kubernetesoperator</category>
      <category>cloud</category>
      <category>cloudnative</category>
    </item>
    <item>
      <title>The Forem Product Roadmap — with Lisa Sy &amp; Vaidehi Joshi </title>
      <author>Ben Halpern</author>
      <pubDate>Wed, 12 May 2021 18:55:00 +0000</pubDate>
      <link>https://dev.to/devteam/the-forem-product-roadmap-with-lisa-sy-vaidehi-joshi-5620</link>
      <guid>https://dev.to/devteam/the-forem-product-roadmap-with-lisa-sy-vaidehi-joshi-5620</guid>
      <description>&lt;p&gt;We're kicking off the new season of the DevDiscuss podcast with a topic one could say is near and dear to my heart — and very relevant to all of us here on DEV.&lt;/p&gt;


&lt;div class="podcastliquidtag"&gt;
  &lt;div class="podcastliquidtag__info"&gt;
    &lt;a href="/devdiscuss/s5-e1-revealing-the-forem-2021-product-roadmap"&gt;
      &lt;h1 class="podcastliquidtag__info__episodetitle"&gt;S5:E1 -  Revealing the Forem 2021 Product Roadmap&lt;/h1&gt;
    &lt;/a&gt;
    &lt;a href="/devdiscuss"&gt;
      &lt;h2 class="podcastliquidtag__info__podcasttitle"&gt;
        DevDiscuss  

      &lt;/h2&gt;
    &lt;/a&gt;
  &lt;/div&gt;
  &lt;div id="record-s5-e1-revealing-the-forem-2021-product-roadmap" class="podcastliquidtag__record"&gt;
    &lt;img class="button play-butt" id="play-butt-s5-e1-revealing-the-forem-2021-product-roadmap" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png" alt="play"&gt;
    &lt;img class="button pause-butt" id="pause-butt-s5-e1-revealing-the-forem-2021-product-roadmap" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png" alt="pause"&gt;
    &lt;img class="podcastliquidtag__podcastimage" id="podcastimage-s5-e1-revealing-the-forem-2021-product-roadmap" alt="DevDiscuss" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZtvK04RF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j-SdIkjZ--/c_fill%2Cf_auto%2Cfl_progressive%2Cq_auto/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
  &lt;/div&gt;

  &lt;div class="hidden-audio" id="hidden-audio-s5-e1-revealing-the-forem-2021-product-roadmap"&gt;
  
    
    Your browser does not support the audio element.
  
  &lt;div id="progressBar" class="audio-player-display"&gt;
    &lt;a href="/devdiscuss/s5-e1-revealing-the-forem-2021-product-roadmap"&gt;
      &lt;img id="episode-profile-image" alt="S5:E1 -  Revealing the Forem 2021 Product Roadmap" width="420" height="420" src="https://res.cloudinary.com/practicaldev/image/fetch/s--zTELFWpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--otY2jCJh--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_420%2Cq_auto%2Cw_420/https://dev-to-uploads.s3.amazonaws.com/uploads/podcast/image/235/08786d8b-7ef4-4c00-bc40-f4b3cbca5834.jpg"&gt;
      &lt;img id="animated-bars" src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzrPEFmt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev.to/assets/animated-bars-4e8c57c8b58285fcf7d123680ad8af034cd5cd43b4d9209fe3aab49d1e9d77b3.gif" alt="animated volume bars"&gt;
    &lt;/a&gt;
    &lt;span id="barPlayPause"&gt;
      &lt;img class="butt play-butt" alt="play" src="https://res.cloudinary.com/practicaldev/image/fetch/s--1SirfZpJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/playbutt-5e444a2eae28832efea0dec3342ccf28a228b326c47f46700d771801f75d6b88.png"&gt;
      &lt;img class="butt pause-butt" alt="pause" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YU2a2mP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/pausebutt-bba7cb5f432cfb16510e78835378fa22f45fa6ae52a624f7c9794fefa765c384.png"&gt;
    &lt;/span&gt;
    &lt;span id="volume"&gt;
      &lt;span id="volumeindicator" class="volume-icon-wrapper showing"&gt;
        &lt;span id="volbutt"&gt;
          &lt;img alt="volume" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--vTou7JP3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-cd20707230ae3fc117b02de53c72af742cf7d666007e16e12f7ac11ebd8130a7.png"&gt;
        &lt;/span&gt;
        &lt;span class="range-wrapper"&gt;
          
        &lt;/span&gt;
      &lt;/span&gt;
      &lt;span id="mutebutt" class="volume-icon-wrapper hidden"&gt;
        &lt;img alt="volume-mute" class="icon-img" height="16" width="16" src="https://res.cloudinary.com/practicaldev/image/fetch/s--OX5NjT0t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/volume-mute-8f08ec668105565af8f8394eb18ab63acb386adbe0703afe3748eca8f2ecbf3b.png"&gt;
      &lt;/span&gt;
      &lt;span class="speed" id="speed"&gt;1x&lt;/span&gt;
    &lt;/span&gt;
    &lt;span class="buffer-wrapper" id="bufferwrapper"&gt;
      &lt;span id="buffer"&gt;&lt;/span&gt;
      &lt;span id="progress"&gt;&lt;/span&gt;
      &lt;span id="time"&gt;initializing...&lt;/span&gt;
      &lt;span id="closebutt"&gt;×&lt;/span&gt;
    &lt;/span&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;


&lt;p&gt;We're talking Forem — the open-source software that powers DEV and a &lt;a href="//forem.com/discover"&gt;growing number of online communities&lt;/a&gt; interested in transparency, accessibility, and authentic connection. &lt;/p&gt;

&lt;p&gt;More specifically, this episode is dedicated to the Forem product roadmap — the plan we're following to accomplish critical goals as a community-building tool and business. Our product roadmap is two things in one: a 10 thousand foot view to help us arrive at the bigger picture &lt;em&gt;and&lt;/em&gt; a 50-foot view to help us identify the granular details required to make it all happen. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-this-episode-i-was-joined-by-two-brilliant-guests-from-the-forem-team"&gt;
  &lt;/a&gt;
  In this episode, I was joined by two brilliant guests from the Forem team...
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="//dev.to/lisasy"&gt;Lisa Sy&lt;/a&gt;&lt;/strong&gt;, Lead Product Designer &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="//dev.to/vaidehijoshi"&gt;Vaidehi Joshi&lt;/a&gt;&lt;/strong&gt;, Lead Software Engineer&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/lisasy"&gt;@lisasy&lt;/a&gt;
, &lt;a class="mentioned-user" href="https://dev.to/vaidehijoshi"&gt;@vaidehijoshi&lt;/a&gt;
, and I also dove into the differences between a product roadmap, vision, and strategy — and talked about the various audiences for this roadmap.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whether-you-are-active-in-our-codebase-or-youre-brand-new-to-dev-i-hope-that-this-episode-helps-you-contextualize-where-forem-is-headed-and-how-your-participation-here-is-helping-us-drive-the-future-of-connection-online"&gt;
  &lt;/a&gt;
  Whether you are active in &lt;a href="https://github.com/forem/forem"&gt;our codebase&lt;/a&gt; or you're brand new to DEV, I hope that this episode helps you contextualize where Forem is headed and how your participation here is helping us drive the future of connection online.
&lt;/h3&gt;




&lt;p&gt;&lt;em&gt;You can &lt;a href="//dev.to/devdiscuss"&gt;follow DevDiscuss&lt;/a&gt; to get episode notifications and listen right in your feed&lt;/em&gt; — or subscribe on your platform of choice! Plus, if you leave us a review, we'll send you a free pack of thank-you stickers. Details &lt;a href="https://airtable.com/shr8oKAIMZgdYnBxx"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-listening-links"&gt;
  &lt;/a&gt;
  Quick Listening Links
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.apple.com/us/podcast/devdiscuss/id1513053883"&gt;Apple Podcasts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://open.spotify.com/episode/6sy6NFihVzs1mwZw5S5kQq"&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.google.com/feed/aHR0cHM6Ly9mZWVkcy5kZXZwb2RzLmRldi9kZXZkaXNjdXNzX3BvZGNhc3QueG1s/episode/aHR0cHM6Ly9kZXZwb2RzLmRldi9wb2RjYXN0cy9kZXZkaXNjdXNzLzM0?sa=X&amp;amp;ved=0CAQQkfYCahcKEwiYgvSG58TwAhUAAAAAHQAAAAAQCA"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.listennotes.com/podcasts/devdiscuss-dev-xtQvoDylAUg/"&gt;Listen Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tunein.com/podcasts/Technology-Podcasts/DevDiscuss-p1324596/?topicId=162993365"&gt;TuneIn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://feeds.codenewbie.org/devnews_podcast.xml"&gt;RSS Feed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devpods.herokuapp.com/podcasts/devdiscuss/episodes/161"&gt;DEV Pods Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;em&gt;Acknowledgements&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a class="mentioned-user" href="https://dev.to/levisharpe"&gt;@levisharpe&lt;/a&gt;
 for producing &amp;amp; mixing the show&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Our season five sponsors: &lt;a href="//cockroachlabs.com/devdiscuss"&gt;CockroachDB&lt;/a&gt;, &lt;a href="https://www.cloudways.com/en/?id=893892"&gt;Cloudways&lt;/a&gt;, &amp;amp; &lt;a href="https://rudderstack.com/?utm_source=devto&amp;amp;utm_medium=podcast&amp;amp;utm_campaign=CMPGN_3_PS&amp;amp;utm_content=None&amp;amp;utm_term=%7Bkeyword%7D&amp;amp;raid=6dbc05eeb293b421f68d02ce12648240"&gt;Rudderstack&lt;/a&gt;!&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  🗣️🗣️🗣️
&lt;/h1&gt;

</description>
      <category>discuss</category>
      <category>podcast</category>
      <category>forem</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Build Entity-Friendly react-router Paths Generator with Typescript</title>
      <author>Volodymyr Yepishev</author>
      <pubDate>Wed, 12 May 2021 18:52:08 +0000</pubDate>
      <link>https://dev.to/bwca/build-entity-friendly-react-router-paths-generator-with-typescript-fpd</link>
      <guid>https://dev.to/bwca/build-entity-friendly-react-router-paths-generator-with-typescript-fpd</guid>
      <description>&lt;p&gt;So the other day I was thinking if it is possible to create a route generator that would be of any use and would respect entities in URLS, i.e. &lt;code&gt;:entity(post|article)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Naturally, &lt;code&gt;react-router&lt;/code&gt; provides means of generating paths, the &lt;code&gt;generatePath&lt;/code&gt; function, and while the &lt;code&gt;@types/react-router&lt;/code&gt; types package does pretty decent job securing the param names, as of yet, it leaves entities vulnerable, without any kind of restrictions, they are treated same as any other param, meaning you can drop &lt;code&gt;string | number | boolean&lt;/code&gt; into them.&lt;/p&gt;

&lt;p&gt;Let's fix that with typescript's 4+ template literal types and generics.&lt;/p&gt;

&lt;p&gt;First of all let's figure out what types we want to be allowed to be passed to our parameters. We could go with &lt;code&gt;string&lt;/code&gt; in &lt;code&gt;string&lt;/code&gt; out attitude, since when we extract params they are strings, but for the sake of compatibility and tribute to the original &lt;code&gt;@types/react-router&lt;/code&gt; let's go with union &lt;code&gt;string | number | boolean&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;AllowedParamTypes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's a nice start. Now, we need a type that would represent our union of values for entities, into which we will be dropping all possible values for our entity and recursively adding them to the union:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;EntityRouteParam&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="cm"&gt;/** if we encounter a value with a union */&lt;/span&gt;
  &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;V&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;R&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="cm"&gt;/* we grab it and recursively apply the type to the rest */&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;V&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;EntityRouteParam&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;R&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cm"&gt;/** and here we have the last value in the union chain */&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we need a param type that can be either an entity which is limited to a union of values, or just a regular param, which is simply an allowed type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;RouteParam&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="cm"&gt;/** if we encounter an entity */&lt;/span&gt;
  &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;U&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;
  &lt;span class="cm"&gt;/** we take its values in union */&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;EntityRouteParam&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="cm"&gt;/** if it's an optional entity */&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?`&lt;/span&gt;
  &lt;span class="cm"&gt;/** we make its values optional as well */&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;Partial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;AllowedParamTypes&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cm"&gt;/** in case it's merely a param, we let any allowable type */&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;k&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;AllowedParamTypes&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now to craft a generic that can break down an url into fragments and extract an interface of params:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;RouteParamCollection&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="cm"&gt;/** encounter optional parameter */&lt;/span&gt;
  &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;`/:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;?/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;R&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="cm"&gt;/** pass it to param type and recursively apply current type
   *  to what's left */&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nb"&gt;Partial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;RouteParam&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;RouteParamCollection&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;`/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;R&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cm"&gt;/** same stuff, but when the param is optional */&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;`/:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;R&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;RouteParam&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;RouteParamCollection&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;`/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;R&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cm"&gt;/** we encounter static string, not a param at all */&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;`/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;R&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="cm"&gt;/** apply current type recursively to the rest */&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;RouteParamCollection&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="s2"&gt;`/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;R&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cm"&gt;/** last case, when param is in the end of the url */&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;`/:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;RouteParam&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cm"&gt;/** unknown case, should never happen really */&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;unknown&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's basically all the magic we need. Now all that's needed is to create a couple of wrapper functions that would provide us with more type safety and run &lt;code&gt;generatePath&lt;/code&gt; from &lt;code&gt;react-router&lt;/code&gt; inside under their hoods.&lt;/p&gt;

&lt;p&gt;A function for path generation with param and entity hints is pretty simple and you can even use enums with it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;routeBuilder&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;K&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;routeParams&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RouteParamCollection&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;generatePath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;routeParams&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;routeBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/user/:userId/:item(post|article)/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;article&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="c1"&gt;// ^ will get angry if 'item' receives something else than 'post' or 'article'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can come up with even more advanced function that could generate route fragments of even longer route, and provide same type safety.&lt;/p&gt;

&lt;p&gt;In order to craft such function we first need to make a couple of types for crafting path fragments of a given route, respecting the params in it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;RouteFragment&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Prefix&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;Prefix&lt;/span&gt;&lt;span class="p"&gt;}${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;Prefix&lt;/span&gt;&lt;span class="p"&gt;}${&lt;/span&gt;&lt;span class="nx"&gt;RouteFragmentParam&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;RouteFragment&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;Prefix&lt;/span&gt;&lt;span class="p"&gt;}${&lt;/span&gt;&lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/`&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;RouteFragmentParam&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;`:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;U&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)`&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;EntityRouteParam&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="s2"&gt;`:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;E&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;infer&lt;/span&gt; &lt;span class="nx"&gt;U&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;)?`&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;EntityRouteParam&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;U&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;T&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And obviously now we need a factory to produce our path builder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fragmentedRouteBuilderFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;K&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;RouteFragment&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;routeParams&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RouteParamCollection&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;K&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;routeBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;routeParams&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fragmentRouteBuilder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fragmentedRouteBuilderFactory&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/user/:userId/:item(post|article)/:id/:action(view|edit)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;fragmentRouteBuilder&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/user/:userId/:item(post|article)/:id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;userId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;article&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Doesn't look that difficult now, does it? :)&lt;/p&gt;

&lt;p&gt;Oh, you can also check it out in the &lt;a href="https://www.typescriptlang.org/play?#code/C4TwDgpgBAggNnA9gdwgEwAoEMBOWC2AKuBAM5QC8UpwOAlgHYDmUAPlAwK74BGEObKD0SI4ELAwDcAKGmhIUAKINgdUACVEnYBGx58AHkJQIADx0M05GvWYA+StKhQA9ACo3UOgDMoqEwwAxloq-FBYUABuWHCc0MhqABbhUJwMdIgMUG4uTlDGZhZWUAAGACQA3ozeYQBqAL6sldVh6vUlee5+0Ex4PF7A4ZZQOBCBnDikdJEQcCDhYGBzUMCJ0PLriCtrI2SDOXkA-FC1gsqqGlo6egQG6nadHkNoUGuj3a9YM9vQcFg0URicS8WVW0DSGSygUSWEY2VyzgAXPkZHkNlBNNpdLhbgVzBBLNZaIwmA4KI9PD4PgTgmkdAIJAELvMDs48UVyOUqgwagJFPUABTNHlhACq9QAlB1nO5PP5gFgANbQNTkaKxMgg1LpTLwo5QCpQADaiq1igAusjzmoQJjrjjDKKHPUKV5fGoAOTkRmIMCqTIxJk2vVI-ImfGE0rC3lKeqHaWuJ7+fBKlXANVAzW+-0MQP-boIENQY56VQxAyGk1my2wBAodA3Igkcj1B4yp5wwL-NNeqD4fizeYRMAOgA0HzEgwkQ7ryCwPDEKxIReRldNcMINfgSFQmAdxEgLdRznRdux+gAwqIxIEc0ZwxzqMT7I5254aSF6VBs5DAyP9BAX6smGhQEsUJQuIi0ZhBgcYuNBAhtAmspQCOpDkGoKxbP+BBLgoEgvKM4yTNMg4LEs8zEaMKh4RAeTZCeWzIDCwC9mI3j7AixZQKWdDlmejYGBgdgOAAZBiVzngQV4IGMd4QZUSFtomnikAQ0A0Jw3jeOOPDaH4aygjsOH4F45A-gGcAriBEbgZBCE8fU8HcjGSH6gJDpCWJElYo2Mk3vJzlKa6-gfnSYQ0FgqiBE+thMOODCIFOqEOuEU6FsByLsmBnLOS0AgAPpOQ5blvuRyxUQSgzokRExTDMyzAFsYK7ACwHHB5l7XnJkIGApFTBWVfwAl2pAQOOzEEil+hmVqLVgd+vgtRMVmZTZj4QVBLkwe07mSYJwmumkiqJcgULduOpCJFocAvAwEAzAIMKLFNowxMsa3HadUiyM43hpLekIjJJABCnB0Ld-AGAA0g+OWxSSdgCjgknItD44o75DqkMinXSd1gOZDDdgSsiNgkgaeSjMAExZEwBL8FF2KrMjkkY-t2PhN6DAgBK0gupjOhgxDaD8AKHouJwY04JBUv8AAkmgkFqBA+ACmAiA0KwuDRWIEouB646Gir+DIh6Ot0IEYiG6k0uK8iABMUCSjILguFAAB6fgQ1Z9NTswODzFSHomx6uyBBApHWIg-arBTsxjdsjIehrNBh4gAjmzgusQB6sinpJABieBMP2Kj3qBkbk8w44YKM3h0KYcNV8+LBUAARC47dkut8NcnXEAN6Y9QObBeUioVu3OMc-f143I8DUXJdl8AB12O0ghnsXWCl1VRjjrPg-z5UY8lMpWVOHIy5b8vVWCdlLdxT3D-gVt+WxkK20COKUr6talxY30AYJ0eQsrN1fg5fkn934-3jH-FQNo8aOnPvkX6UB-pBBzOg2+oQ0BnmFpDHAhcsC3gziACutkiRPwFBKSmzhqa0ygDDcB5Ab47xXkYESrMsRo3ZoAggOMfL2i6rJQmDBiakwRswSgDgKj0V2DTHAWRBYQAIaLHA3CdB8OEQIrmQxeZ5BdC6YIDAATeBwcAfB4NCGUGwewqq6ArEi34MQ0hgcDCdzljLREXjFbKx0GrVOwBtbZ0tnrZWStEQkJzAKSIdAIDIFYOgNQEpu40JkOY+xKgnGEPFpLaWss7aRJNurTWwSLZWwgPrREdA0A20NL4tAjsACM44TZmwqdbNpTSoDNKdi7IAA"&gt;typescript playground&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>typescript</category>
      <category>react</category>
    </item>
    <item>
      <title>Pairing with Jhey Tompkins</title>
      <author>Nick Taylor (he/him)</author>
      <pubDate>Wed, 12 May 2021 18:38:25 +0000</pubDate>
      <link>https://dev.to/devteam/pairing-with-jhey-tompkins-2k85</link>
      <guid>https://dev.to/devteam/pairing-with-jhey-tompkins-2k85</guid>
      <description>&lt;p&gt;On &lt;time&gt;April 28th&lt;/time&gt;, DEV Community member Jhey Tompkins joined &lt;a class="mentioned-user" href="https://dev.to/coffeecraftcode"&gt;@coffeecraftcode&lt;/a&gt;
 and I on the pairing stream to have some fun and help us build out a Twitch overlay using our mascot, Sloan!&lt;/p&gt;


&lt;center&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i2M_gxNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urutyzau41a6gfovx9ze.png" class="article-body-image-wrapper"&gt;&lt;img alt="dev.to's mascot Sloan" src="https://res.cloudinary.com/practicaldev/image/fetch/s--i2M_gxNR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urutyzau41a6gfovx9ze.png"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/center&gt;

&lt;p&gt;Watch the pairing session with Jhey below to catch up on what you missed:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DDJB8KSh-Sw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#on-this-stream-we-talked-about"&gt;
  &lt;/a&gt;
  On this stream, we talked about:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Sloan, DEV's awesome mascot!&lt;/li&gt;
&lt;li&gt;Twitch overlays&lt;/li&gt;
&lt;li&gt;ComfyJS (which allows folks to interact with a Twitch stream via chat commands)&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/instafluff"&gt;
        instafluff
      &lt;/a&gt; / &lt;a href="https://github.com/instafluff/ComfyJS"&gt;
        ComfyJS
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Comfiest Twitch Chat Module for Coding Cafe
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Comfy.JS&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/d0a22a382aedd0a70cf8b532cb6501ced152fb6d013d2d898722b50f7ff27759/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f636f6d66792e6a733f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/d0a22a382aedd0a70cf8b532cb6501ced152fb6d013d2d898722b50f7ff27759/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f636f6d66792e6a733f7374796c653d666c61742d737175617265" alt="npm"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/a9385dd5b3fc5e7cc9e71da207c3b2c4b936d95db63b2c1578618a5d2f5ffb03/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f696e737461666c7566662f636f6d66796a733f7374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/a9385dd5b3fc5e7cc9e71da207c3b2c4b936d95db63b2c1578618a5d2f5ffb03/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f696e737461666c7566662f636f6d66796a733f7374796c653d666c61742d737175617265" alt="GitHub"&gt;&lt;/a&gt; &lt;a href="https://www.jsdelivr.com/package/npm/comfy.js" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/bbea3b6876782a735ba2d95ffdac32493d98fe7a8babbb929170619a5abff377/68747470733a2f2f646174612e6a7364656c6976722e636f6d2f76312f7061636b6167652f6e706d2f636f6d66792e6a732f6261646765" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We built this Comfy Twitch Chat Module live on Twitch for Coding Cafe!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Special Thanks:&lt;/strong&gt; &lt;em&gt;Comfy.JS is possible thanks to &lt;a href="https://tmijs.com/" rel="nofollow"&gt;tmi.js&lt;/a&gt; maintained by &lt;a href="https://github.com/AlcaDesign"&gt;@AlcaDesign&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Comfy.JS&lt;/strong&gt; lets you integrate with Twitch chat for your Twitch channel &lt;em&gt;&lt;strong&gt;SUPER EASILY&lt;/strong&gt;&lt;/em&gt; in just a few lines of code. Here's a quick 3-min video on how to use it: (Click image to open video)&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=oXpPwnUQCCk" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fc0decdb1f55f52612634e4ca8f1713018166ca446e60650f1b3acacea5182ae/68747470733a2f2f696d672e796f75747562652e636f6d2f76692f6f587050776e555143436b2f687164656661756c742e6a7067" alt="ComfyJS How-To Video"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Instafluff&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Like these projects? The best way to support my open-source projects is by becoming a Comfy Sponsor on GitHub!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/sponsors/instafluff"&gt;https://github.com/sponsors/instafluff&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Come and hang out with us at the Comfiest Corner on Twitch!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://twitch.tv/instafluff" rel="nofollow"&gt;https://twitch.tv/instafluff&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
Instructions&lt;/h2&gt;
&lt;h4&gt;
Node&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Install &lt;code&gt;comfy.js&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="snippet-clipboard-content position-relative"&gt;
&lt;pre&gt;&lt;code&gt;npm install comfy.js --save
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="zeroclipboard-container position-absolute right-0 top-0"&gt;
  
    

    

  
&lt;/div&gt;
&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Respond to !commands your channel&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-js position-relative js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-v"&gt;ComfyJS&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;"comfy.js"&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-v"&gt;ComfyJS&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;onCommand&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-kos"&gt;(&lt;/span&gt; &lt;span class="pl-s1"&gt;user&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;command&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;message&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;flags&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s1"&gt;extra&lt;/span&gt; &lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-c1"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-k"&gt;if&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt; &lt;span class="pl-s1"&gt;flags&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-c1"&gt;broadcaster&lt;/span&gt; &lt;span class="pl-c1"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="pl-s1"&gt;command&lt;/span&gt; &lt;span class="pl-c1"&gt;===&lt;/span&gt; &lt;span class="pl-s"&gt;"test"&lt;/span&gt; &lt;span class="pl-kos"&gt;)&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;
    &lt;span class="pl-smi"&gt;console&lt;/span&gt;&lt;span class="pl-kos"&gt;.&lt;/span&gt;&lt;span class="pl-en"&gt;log&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt; &lt;span class="pl-s"&gt;"!test was typed&lt;/span&gt;&lt;/pre&gt;…
&lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/instafluff/ComfyJS"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Thanks again for coming on the stream, Jhey!&lt;/p&gt;


&lt;center&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/NEvPzZ8bd1V4Y/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/NEvPzZ8bd1V4Y/giphy.gif" alt="Man in the woods being zoomed in on as he nods as if to say he agrees"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/center&gt;
&lt;h3&gt;
  &lt;a href="#you-can-also-find-the-three-of-us-all-over-the-web-here"&gt;
  &lt;/a&gt;
  You can also find the three of us all over the web here:
&lt;/h3&gt;


&lt;div class="ltag__user ltag__user__id__288872"&gt;
  
    .ltag__user__id__288872 .follow-action-button {
      background-color: #663399 !important;
      color: #fdf9f3 !important;
      border-color: #663399 !important;
    }
  
    &lt;a href="/jh3y" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--waa_7ngq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Be0q_Hkr--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/288872/9f557ca6-9b98-4a65-87c5-ca8eee1028d3.jpg" alt="jh3y image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/jh3y"&gt;Jhey Tompkins&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/jh3y"&gt;I make awesome things for awesome people!&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/jh3yy"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jhey.dev/links"&gt;Jhey everywhere&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag__user ltag__user__id__9597"&gt;
  
    .ltag__user__id__9597 .follow-action-button {
      background-color: #fb4881 !important;
      color: #ffffff !important;
      border-color: #fb4881 !important;
    }
  
    &lt;a href="/nickytonline" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BmhzwLSV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--zhsA-ZEm--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/9597/68d6245f-3152-4ed2-a245-d015fca4160b.jpeg" alt="nickytonline image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/nickytonline"&gt;Nick Taylor (he/him)&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/nickytonline"&gt;Lead software engineer at Forem. Caught the live coding bug on Twitch at livecoding.ca&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/nickytonline"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iamdeveloper.com/"&gt;Website&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://livecoding.ca"&gt;livecoding.ca&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtube.iamdeveloper.com"&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag__user ltag__user__id__129358"&gt;
  
    .ltag__user__id__129358 .follow-action-button {
      background-color: #f0065c !important;
      color: #ffffff !important;
      border-color: #f0065c !important;
    }
  
    &lt;a href="/coffeecraftcode" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yuBMmi-P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--u8pzDZEU--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/129358/190252c3-ce2d-4df8-b4b1-b42f7ae7d08a.png" alt="coffeecraftcode image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/coffeecraftcode"&gt;Christina Gorton&lt;/a&gt;
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/coffeecraftcode"&gt;Open Source Community Manager, Technical Writer,  Developer, and Instructor. 
Courses on LinkedIn, Egghead, Design+Code, and Skillshare. 

https://egghead.io/instructors/christina-gorton/?af=1c6fpu&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/coffeecraftcode"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We hope to see you on future DEV streams! If you're interested in pairing, fill out &lt;a href="https://iamdeveloper.com/pair"&gt;this form&lt;/a&gt;. Christina and I would love to tackle an issue with you that the whole community could learn from.&lt;/p&gt;

&lt;p&gt;P.S. &lt;a href="https://twitch.tv/thepracticaldev"&gt;Follow DEV on Twitch&lt;/a&gt; to be notified when future streams begin and catch old streams on &lt;a href="https://www.youtube.com/c/thepracticaldevteam"&gt;YouTube&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devstream</category>
      <category>pairprogramming</category>
      <category>greensock</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Moving From Tailwind To Vanilla-er CSS</title>
      <author>Mike Rogers ✈️</author>
      <pubDate>Wed, 12 May 2021 18:24:48 +0000</pubDate>
      <link>https://dev.to/mikerogers0/moving-from-tailwind-to-vanilla-er-css-2ghh</link>
      <guid>https://dev.to/mikerogers0/moving-from-tailwind-to-vanilla-er-css-2ghh</guid>
      <description>&lt;p&gt;I've been playing around with Tailwind CSS a lot since it's release, and so far it's been really impressive to see its growth over the last few years, along with some of the neat things people are making with it.&lt;/p&gt;

&lt;p&gt;Overall I've been pretty happy with it, I even purchased a licence for &lt;a href="https://tailwindui.com/"&gt;Tailwind UI&lt;/a&gt; to help me develop with it more quickly. However, sometimes I find myself a little frustrated at it, so I decided it would be fun to rebuild the frontend on my &lt;a href="https://ruby-meetup-calendar.mikerogers.io/"&gt;Ruby Calendar project&lt;/a&gt; to see if I can pinpoint my annoyances.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-love-about-tailwind-css"&gt;
  &lt;/a&gt;
  What I love about Tailwind CSS
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The documentation! Seriously Adam Wathan done a fantastic job with it. Often when I just want to check how to do something in plain CSS, I use their documentation as a reference point.&lt;/li&gt;
&lt;li&gt;Responsive utility variants are very cool. Being able to apply a CSS class to just big screens by using &lt;code&gt;lg:&lt;/code&gt; before my class names is super lovely!&lt;/li&gt;
&lt;li&gt;Using &lt;code&gt;@apply&lt;/code&gt; within my regular CSS. It feels like such a concise way to write CSS, I'm a big fan of it.&lt;/li&gt;
&lt;li&gt;Less context switching between CSS &amp;amp; HTML files. I didn't realise how much cognitive load I had from jumping between different file types all day. Being able to just look at a single file for everything I was working on helped me get into that awesome "hyper focus" zone a lot more easily.&lt;/li&gt;
&lt;li&gt;The examples I can copy &amp;amp; paste (which look the same in my project), is a massive time saver. It feels like I can very quickly cobble together a frontend MVP for a project without too much effort.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-i-dont-love"&gt;
  &lt;/a&gt;
  What I don't love
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Preflight. I always find it's super aggressive, this is probably because I come from a background where I've used &lt;a href="https://necolas.github.io/normalize.css/"&gt;normalize.css&lt;/a&gt; a lot. Having to setup base styling for semantic HTML feels tedious.&lt;/li&gt;
&lt;li&gt;JavaScript Dependencies. I had a project on Tailwind V1 which used React, which I upgraded to V2. Unfortunately I had an out of date library which made upgrading harder then I expected. In the end, I was deep in JavaScript code trying to figure out why my CSS wasn't working. It made me feel super unproductive.&lt;/li&gt;
&lt;li&gt;Other developers use it inconsistently. I've picked up a few projects using Tailwind, and it takes a lot time to feel "at home" in the codebase. In one project, I felt like the other developer just used every class everywhere, which made it very hard to achieve that "Happy Developer" moment.&lt;/li&gt;
&lt;li&gt;CSS Purging. I've been caught out in the past by setting up the purging, then moving a few files around to only discover I quietly broken a few pages in production. I think better CI tooling could solve this, but I'm also feeling I'd rather avoid the risk to start with.&lt;/li&gt;
&lt;li&gt;Staying visually consistent. I'm the worst for using all the sizing &amp;amp; colour variants available to me, I need a limitations to avoid making an inconsistent monster.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#replacing-it-with-vanillaer-css"&gt;
  &lt;/a&gt;
  Replacing it with vanilla-er CSS
&lt;/h2&gt;

&lt;p&gt;My plan was to remove Tailwind over a weekend, using a mix of &lt;code&gt;normalize.css&lt;/code&gt;, CSS Variables &amp;amp; mixins, all combined into a single CSS file using PostCSS.&lt;/p&gt;

&lt;p&gt;I had already started converting my CSS to follow the &lt;a href="https://en.bem.info/"&gt;BEM approach&lt;/a&gt; using &lt;code&gt;@apply&lt;/code&gt;, so I was able to take my purged CSS &amp;amp; break it into smaller files. I then went through and moved all the things like spacing, fonts &amp;amp; colours I was using into CSS Variables.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-vanillaer-css"&gt;
  &lt;/a&gt;
  Why vanilla-er CSS?
&lt;/h3&gt;

&lt;p&gt;I wanted to be as close to simple vanilla CSS as possible, the reason is I worked on a project which hadn't had the styling touched in about 5 years, and then when I edited the &lt;code&gt;styles.css&lt;/code&gt; file...it just changed what I expected it  to. It was a really interesting "Oh? Would you look at that!" type experience.&lt;/p&gt;

&lt;p&gt;Obviously, I do like a few low touch tools to help reduce duplication. But I do want to aim for a codebase where in 5 years time, it'll be easy to pickup. I think the best way to do that is by keeping things as simple as possible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#naming-css-variables"&gt;
  &lt;/a&gt;
  Naming CSS Variables
&lt;/h3&gt;

&lt;p&gt;Naming was pretty hard! For my fonts &amp;amp; spacing, I ended up copying the approach of using numbered a scale which is often used in Tailwind.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* variables/fonts.css */&lt;/span&gt;

&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--fonts-serif&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ui-sans-serif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;system-ui&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;-apple-system&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlinkMacSystemFont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;'Segoe UI'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Roboto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Helvetica Neue'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Noto Sans'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;'Apple Color Emoji'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Segoe UI Emoji'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Segoe UI Symbol'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'Noto Color Emoji'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="py"&gt;--font-size-1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.875rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.125rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--font-size-7&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.875rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* variables/spacing.css */&lt;/span&gt;

&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-3&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.75rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-4&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-5&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--spacing-6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#naming-colours"&gt;
  &lt;/a&gt;
  Naming Colours
&lt;/h4&gt;

&lt;p&gt;Naming the colours was a tad harder. I've never been a fan of calling a variable "blue", then making it the colour blue. The reason is often in the future that "blue" may end up not being blue, which makes things messy.&lt;/p&gt;

&lt;p&gt;Instead I copied the approach of &lt;a href="https://getbootstrap.com/docs/5.0/customize/color/"&gt;Bootstrap&lt;/a&gt; of having "Primary", "Secondary" &amp;amp; "Tertiary" colours, however I explicitly named the variables to hint that the colour is intended to be used as a background or text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* variables/colours.css */&lt;/span&gt;

&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--background-primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3c2aaa&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-secondary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#1d2938&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-secondary-lightest&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#3f4a5b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-secondary-light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#232c39&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-secondary-dark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#0f192c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-tertiary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#d0d5dc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--background-tertiary-light&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ffffff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="py"&gt;--text-primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f9fafb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--text-primary-darker&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#a1a1ab&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="py"&gt;--link-primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#c5d1ff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="py"&gt;--border-primary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#273241&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I did also add &lt;code&gt;*-light&lt;/code&gt; &amp;amp; &lt;code&gt;*-dark&lt;/code&gt; variations of these colours (For use within hovers &amp;amp; whatnot), though I do want to come back and improve the suffixes I chose.&lt;/p&gt;

&lt;p&gt;Ideally I want to achieve variable names which make other developers say out loud "This is so obvious, I know exactly what this is for". If anyone has any ideas please let me know :)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#media-queries"&gt;
  &lt;/a&gt;
  Media Queries
&lt;/h3&gt;

&lt;p&gt;I wanted a way to pre-define the common screen sizes I'd use when building out my responsive designs.&lt;/p&gt;

&lt;p&gt;To solve this I used &lt;a href="https://github.com/csstools/postcss-preset-env#postcss-preset-env-"&gt;postcss-preset-env&lt;/a&gt;, which allowed me to define a "custom-media" with the name &lt;code&gt;--viewport-lg&lt;/code&gt; and the value &lt;code&gt;(min-width: 1024px)&lt;/code&gt;. As &lt;code&gt;postcss-preset-env&lt;/code&gt; also supported nested CSS this allowed for some pretty readable CSS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* components/footer.css */&lt;/span&gt;

&lt;span class="nc"&gt;.footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;padding-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-6&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;viewport-lg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="na"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nf"&gt;minmax&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1fr&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mixins"&gt;
  &lt;/a&gt;
  Mixins
&lt;/h3&gt;

&lt;p&gt;Pretty soon I did feel like I was duplicating CSS &amp;amp; mixing utility classes with my semantically named classes within my HTML.&lt;/p&gt;

&lt;p&gt;However, I found the solution was to use mixins via &lt;a href="https://github.com/postcss/postcss-mixins"&gt;postcss-mixins&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* mixins/list-inline.css */&lt;/span&gt;

&lt;span class="k"&gt;@define-mixin&lt;/span&gt; &lt;span class="nt"&gt;list-inline&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;list-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="m"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;inline-block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nf"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;spacing-2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight scss"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* components/navbar.css */&lt;/span&gt;

&lt;span class="cm"&gt;/**
 * @markup
 *  &amp;lt;ul class="navbar__links"&amp;gt;
 *    &amp;lt;li&amp;gt;&amp;lt;a href="/groups"&amp;gt;All Groups&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 *    &amp;lt;li&amp;gt;&amp;lt;a href="/add-event"&amp;gt;Add Event&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
 *  &amp;lt;/ul&amp;gt;
 */&lt;/span&gt;
&lt;span class="nc"&gt;.navbar__links&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;@mixin&lt;/span&gt; &lt;span class="nf"&gt;list-inline&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;viewport-md&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This allowed me to have semantic looking class names which included common CSS snippets, while being able to override things as required. It also gave me the potential to &lt;a href="https://css-tricks.com/options-programmatically-documenting-css/"&gt;programmatically generate a styleguide&lt;/a&gt; from the comments within my CSS file, which I'm wildly excited about.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#easier-importing"&gt;
  &lt;/a&gt;
  Easier Importing
&lt;/h3&gt;

&lt;p&gt;As my project grew, I found I could glob import files via &lt;a href="https://github.com/dimitrinicolas/postcss-import-ext-glob"&gt;postcss-import-ext-glob&lt;/a&gt;, which made my &lt;code&gt;index.css&lt;/code&gt; file much more maintainable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* index.css */&lt;/span&gt;

&lt;span class="k"&gt;@import-glob&lt;/span&gt; &lt;span class="s1"&gt;"variables/*.css"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c"&gt;/* External Libraries imported from node_modules */&lt;/span&gt;
&lt;span class="k"&gt;@import-glob&lt;/span&gt; &lt;span class="s2"&gt;'normalize.css'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;@import-glob&lt;/span&gt; &lt;span class="s1"&gt;"base/*.css"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import-glob&lt;/span&gt; &lt;span class="s1"&gt;"components/*.css"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import-glob&lt;/span&gt; &lt;span class="s1"&gt;"utilities/*.css"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Overall, I'm very happy with this CSS &amp;amp; HTML approach. I can look at a snippet of HTML, see the CSS classes being used &amp;amp; know exactly which files I need to edit to change them. I feel very in control of the CSS I'm writing as a result of that.&lt;/p&gt;

&lt;p&gt;While reviewing my new HTML &amp;amp; CSS, I really like that I'm not staring at a wall of CSS class names any more. Plus if I wanted to make any changes to the colours, spacing or fonts, I feel confident that I won't need to change lots of files to see the desired visual change. Instead I can open the &lt;code&gt;variables/&lt;/code&gt; folder, then the appropriately named file &amp;amp; edit just a few lines of CSS.&lt;/p&gt;

&lt;p&gt;I also found the final size of the generated CSS was about the same as before, so I'm very happy with that.&lt;/p&gt;

&lt;p&gt;I did come to appreciate how much time Tailwind had saved me while I was prototyping my design (and how it made me think more in a component mindset), but I think it's also a very sharp tool which requires a lot of discipline to use effectively on projects.&lt;/p&gt;

&lt;p&gt;Finally, I think I'd still be happy to work on a Tailwind based project. However, I totally feel a bit more confident in saying "We could just use CSS Variables &amp;amp; Mixins instead if we wanted".&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Publicando Aplicações Estáticas com Static Web Apps &amp; Azure DevOps!</title>
      <author>Glaucia Lemos</author>
      <pubDate>Wed, 12 May 2021 18:10:42 +0000</pubDate>
      <link>https://dev.to/glaucia86/publicando-aplicacoes-estaticas-com-static-web-apps-azure-devops-4c1o</link>
      <guid>https://dev.to/glaucia86/publicando-aplicacoes-estaticas-com-static-web-apps-azure-devops-4c1o</guid>
      <description>&lt;p&gt;Fala Coders! Hoje vamos falar do lançamento de um serviço do Azure que estava em Preview e enfim, será um &lt;strong&gt;&lt;a href="https://azure.microsoft.com/blog/announcing-azure-portal-general-availability/?WT.mc_id=javascript-23665-gllemos"&gt;General Available&lt;/a&gt;&lt;/strong&gt; do Serviço &lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/app-service/static/?WT.mc_id=javascript-23665-gllemos"&gt;Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt; agora no dia 12/05/2021!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Se vocês desejarem saber um pouco mais sobre o lançamento oficial do Azure Static Web Apps que está acontecendo hoje (12/05/2021), há um blog oficial explicando o que vem de diferente da versão Preview para General Available &lt;strong&gt;&lt;a href="https://azure.microsoft.com/blog/develop-production-scale-modern-web-apps-quickly-with-azure-static-web-apps/?WT.mc_id=javascript-23665-gllemos"&gt;AQUI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;E, vamos ter inúmeras mudanças significativas nesse serviço, que estava na sua versão Preview!&lt;/p&gt;

&lt;p&gt;Mas, vamos tentar relembrar a todos(as) vocês sobre esse serviço?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#o-que-veremos-nesse-artigo"&gt;
  &lt;/a&gt;
  O que veremos nesse Artigo?!
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#o-que-%C3%A9-azure-static-web-apps"&gt; O que é Azure Static Web Apps?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#o-que-vamos-fazer"&gt; O que vamos fazer?!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#demo-time"&gt; Demo Time!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#conta-azure-for-students-%EF%B8%8F"&gt; Conta - Azure for Students ⭐️&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#usando-o-azure-devops"&gt; Usando o Azure DevOps!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#passo-01-criar-um-projeto-no-azure-devops"&gt; Passo 01 - Criando um projeto no Azure DevOps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#passo-02-importando-o-projeto-no-github-para-o-azure-devops"&gt; Passo 02 - Importando o projeto no GitHub para o Azure DevOps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#passo-03-criando-a-aplica%C3%A7%C3%A3o-est%C3%A1tica-no-azure"&gt; Passo 03 - Criando a Aplicação Estática no Azure&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#passo-04-criando-os-pipelines-task-no-azure-devops-para-a-nossa-aplica%C3%A7%C3%A3o-est%C3%A1tica"&gt; Passo 04 - Criando os Pipelines Task no Azure DevOps para a nossa Aplicação Estática!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#passo-05-retornando-ao-portal-azure"&gt; Passo 05 - Retornando ao Portal Azure&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#recursos-amp-links-importantes"&gt; Recursos &amp;amp; Links Importantes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#palavras-finais"&gt; Palavras Finais&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#generated-with-summaryze-forem"&gt;
  &lt;/a&gt;
  generated with &lt;a href="https://summaryze-forem.vercel.app/"&gt;Summaryze Forem 🌱&lt;/a&gt;
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-azure-static-web-apps"&gt;
  &lt;/a&gt;
  O que é Azure Static Web Apps?
&lt;/h2&gt;

&lt;p&gt;O &lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/app-service/static/?WT.mc_id=javascript-23665-gllemos"&gt;Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt; é um serviço que cria e implanta automaticamente aplicações Web completa no Azure desde um repositório de códigos, que nesse caso é usado o &lt;strong&gt;&lt;a href="https://docs.github.com/pt/actions"&gt;GitHub Actions&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/3yJRFVTz"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4DH5txVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/9fy7CHNX/swa-overview.png" alt="swa-overview.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Com esse serviço, te permite realizar deploy automático, de maneira rápida, fácil e totalmente gratuita usando quaisquer bibliotecas ou frameworks mais conhecidos do mercado, tais como: &lt;strong&gt;&lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://pt-br.reactjs.org/"&gt;React&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;&lt;/strong&gt; ou até mesmo usando o &lt;strong&gt;&lt;a href="https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor?WT.mc_id=javascript-23665-gllemos"&gt;Blazor&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Já no lado do Back-End, você pode integrar a sua aplicação estática usando o &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/azure-functions/functions-overview?WT.mc_id=javascript-23665-gllemos"&gt;Azure Functions&lt;/a&gt;&lt;/strong&gt;, que te permitirá criar uma API de uma maneira muito mais rápida, dinâmica, resiliente e escalonável!&lt;/p&gt;

&lt;p&gt;Se, vocês desejarem, temos inúmeros treinamentos de Azure Static Web Apps totalmente gratuitos na plataforma &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/?WT.mc_id=javascript-23665-gllemos"&gt;Microsoft Learn&lt;/a&gt;&lt;/strong&gt;! Para listar alguns aqui...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/paths/azure-static-web-apps/?WT.mc_id=javascript-23665-gllemos"&gt;Cursos Grátis - Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/paths/azure-static-web-apps/?WT.mc_id=javascript-23665-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zWP9_mD4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/3wgQBtWb/Captura-de-Tela-2021-05-07-a-s-22-52-58.png" alt="Captura-de-Tela-2021-05-07-a-s-22-52-58.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api/?WT.mc_id=javascript-23665-gllemos"&gt;Publicando uma Aplicação JavaScript em Angular, React, Svelte ou Vue com o Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api/?WT.mc_id=javascript-23665-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mjLBwteY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Bb4yM3Rj/Captura-de-Tela-2021-05-07-a-s-22-38-46.png" alt="Captura-de-Tela-2021-05-07-a-s-22-38-46.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api-dotnet/?WT.mc_id=javascript-23665-gllemos"&gt;Publicando uma Aplicação WebAssembly Blazor e uma API do .NET com Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api-dotnet/?WT.mc_id=javascript-23665-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qtGlPMca--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/pTZkVF1d/Captura-de-Tela-2021-05-07-a-s-22-42-42.png" alt="Captura-de-Tela-2021-05-07-a-s-22-42-42.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/create-deploy-static-webapp-gatsby-app-service/?WT.mc_id=javascript-23665-gllemos"&gt;Criando e Publicando uma Aplicação Web Estática com o Gatsby com Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/create-deploy-static-webapp-gatsby-app-service/?WT.mc_id=javascript-23665-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SrXYubyA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/05hZkPVD/Captura-de-Tela-2021-05-07-a-s-22-47-37.png" alt="Captura-de-Tela-2021-05-07-a-s-22-47-37.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-static-web-app-api-preview-url/?WT.mc_id=javascript-23665-gllemos"&gt;Publicando uma API no Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-static-web-app-api-preview-url/?WT.mc_id=javascript-23665-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3etnV3AU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Hn1JNZtc/Captura-de-Tela-2021-05-07-a-s-22-51-21.png" alt="Captura-de-Tela-2021-05-07-a-s-22-51-21.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora que vocês já sabem o que é o Azure Static Web Apps, agora é o momento de focarmos no tema principal desse post: 'Como podemos publicar um site estático usando o Azure Static Web Apps integrando com a poderosa ferramenta do &lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/devops/?WT.mc_id=javascript-23665-gllemos"&gt;Azure DevOps&lt;/a&gt;&lt;/strong&gt;? &lt;/p&gt;

&lt;p&gt;Vamos começar a fazer um hands-on com um tutorial? Aqui vamos nós!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#o-que-vamos-fazer"&gt;
  &lt;/a&gt;
  O que vamos fazer?!
&lt;/h2&gt;

&lt;p&gt;Bom, nesse tutorial vamos aprender a fazer uma plublicação de um site estático em Vue.Js usando o Azure Static Web e integrando com o Azure DevOps. Na versão preview isso não era possível (de uma certa forma, não... mas tem gente que conseguiu). Mas, agora com GA do Serviço, isso agora é super possível e é justamente o que estarei ensinando à todas as pessoas aqui!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo-time"&gt;
  &lt;/a&gt;
  Demo Time!
&lt;/h2&gt;

&lt;p&gt;Para essa demo, vamos precisar dos seguintes recursos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://code.visualstudio.com/?WT.mc_id=javascript-23665-gllemos"&gt;Visual Studio Code&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://azure.microsoft.com/free?WT.mc_id=javascript-23665-gllemos"&gt;Conta Azure&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://github.com/"&gt;Conta no GitHub&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#conta-azure-for-students-%EF%B8%8F"&gt;
  &lt;/a&gt;
  Conta - Azure for Students ⭐️
&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;Caso você seja um(a) estudante de alguma Instituição de Ensino de Faculdade ou Universidade, poderá criar sua conta no &lt;strong&gt;&lt;a href="https://azure.microsoft.com/pt-br/free/students/?WT.mc_id=javascript-23665-gllemos"&gt;Azure for Students&lt;/a&gt;&lt;/strong&gt;. Essa conta te dará o benefício em possuir crédito de USD 100,00 para usar os serviços de maneira gratuita, sem necessidade de possuir um cartão de crédito. Para ativar essa conta, bastam acessar o link ao lado: &lt;strong&gt;&lt;a href="https://azure.microsoft.com/pt-br/free/students/?WT.mc_id=javascript-23665-gllemos"&gt;AQUI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para fins de demo, estaremos fazendo uso do recurso do GitHub: &lt;strong&gt;&lt;a href="https://help.github.com/pt/github/creating-cloning-and-archiving-repositories/creating-a-template-repository"&gt;GitHub Templates&lt;/a&gt;&lt;/strong&gt;. Se deseja saber mais como criar um template e entender o que é bastam acessar &lt;strong&gt;&lt;a href="https://help.github.com/pt/github/creating-cloning-and-archiving-repositories/creating-a-repository-from-a-template"&gt;AQUI&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Cliquem nesse link &lt;strong&gt;&lt;a href="https://github.com/staticwebdev/vue-basic/generate"&gt;https://github.com/staticwebdev/vue-basic/generate&lt;/a&gt;&lt;/strong&gt; e logo em seguida crie um nome para esse repositório, conforme segue a imagem abaixo: &lt;strong&gt;(vocês podem escolher o nome que desejarem. Não necessariamente igual o meu.)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/56trBmYj"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O6eopVYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/tCdHHS9d/Captura-de-Tela-2021-05-07-a-s-23-51-03.png" alt="Captura-de-Tela-2021-05-07-a-s-23-51-03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Logo em seguida clique no botão: &lt;strong&gt;Create Repository from Template&lt;/strong&gt;. Após isso, estará já criada uma aplicação modelo em Vue.js para que possamos testar a nossa aplicação!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usando-o-azure-devops"&gt;
  &lt;/a&gt;
  Usando o Azure DevOps!
&lt;/h2&gt;

&lt;p&gt;Vamos agora começar a fazer a integração da aplicação recém criada no GitHub e usar o &lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/devops/?WT.mc_id=javascript-23665-gllemos"&gt;Azure DevOps&lt;/a&gt;&lt;/strong&gt;. Para isso, entre no link abaixo, para começar a usar o Azure DevOps de maneira gratuita!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://azure.microsoft.com/pricing/details/devops/azure-devops-services/?WT.mc_id=javascript-23665-gllemos"&gt;Criando um Projeto - Azure DevOps&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Escolha as opções gratuitas. No meu caso, estou escolhendo a opção: Plano Básico - Free. Depois de você incluir as suas informações de dados, aparecerá a seguinte imagem abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/2VzGpd4m"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QmSk_hiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ncmPD0rs/Captura-de-Tela-2021-05-08-a-s-00-08-06.png" alt="Captura-de-Tela-2021-05-08-a-s-00-08-06.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vamos no passo a passo a partir de agora!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passo-01-criando-um-projeto-no-azure-devops"&gt;
  &lt;/a&gt;
  Passo 01 - Criando um projeto no Azure DevOps
&lt;/h3&gt;

&lt;p&gt;Crie o projeto e coloque de acordo com a imagem abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/mPj0f2cp"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XKk6jDIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/cJGZ3vdW/Captura-de-Tela-2021-05-08-a-s-00-19-01.png" alt="Captura-de-Tela-2021-05-08-a-s-00-19-01.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depois que você preencher todas as informações do seu Projeto, clique no botão: &lt;strong&gt;Create a Project&lt;/strong&gt;. Depois de clicar nesse botão, a tela terá a seguinte formato:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/svqJMkkf"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_N-Z9kTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/3xJfc79G/Captura-de-Tela-2021-05-08-a-s-00-23-17.png" alt="Captura-de-Tela-2021-05-08-a-s-00-23-17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passo-02-importando-o-projeto-no-github-para-o-azure-devops"&gt;
  &lt;/a&gt;
  Passo 02 - Importando o projeto no GitHub para o Azure DevOps
&lt;/h3&gt;

&lt;p&gt;Vamos agora implementar o código (template padrão) da aplicação Vue.js criada recentemente lá no GitHub e integrar no Azure DevOps. Vão em: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Repos&lt;/li&gt;
&lt;li&gt;Files&lt;/li&gt;
&lt;li&gt;Import a Repository&lt;/li&gt;
&lt;li&gt;Import&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Aí abrirá uma nova janela, ali colocaremos, justo o GitClone da nossa aplicação (.git) e depois clicar no botão: &lt;strong&gt;Import&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Se não entenderem como proceder, mais abaixo terá um vídeo desse tutorial que gravei ensinando passo a passo, justo para ajudar todos vocês. E, também uma imagem que também auxiliará vocês nesse passo a passo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/HcYNSGsD"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7XavMhPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/hjTqtgkj/Captura-de-Tela-2021-05-08-a-s-00-25-25.png" alt="Captura-de-Tela-2021-05-08-a-s-00-25-25.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No final, o seu Azure DevOps estará da seguinte forma:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/KkWd4qF6"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rN27Iz8X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SRQqT3Px/Captura-de-Tela-2021-05-08-a-s-00-33-40.png" alt="Captura-de-Tela-2021-05-08-a-s-00-33-40.png"&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Se estiver dessa forma, é porque você integrou com sucesso a sua aplicação Vue.js no Azure DevOps. Agora, vamos dar continuidade!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#passo-03-criando-a-aplica%C3%A7%C3%A3o-est%C3%A1tica-no-azure"&gt;
  &lt;/a&gt;
  Passo 03 - Criando a Aplicação Estática no Azure
&lt;/h3&gt;

&lt;p&gt;Nesse passo precisaremos de uma &lt;strong&gt;&lt;a href="https://azure.microsoft.com/free/?WT.mc_id=javascript-23665-gllemos"&gt;Conta Azure&lt;/a&gt;&lt;/strong&gt;, que inclusive vocês podem estar criando de maneira gratuita! Só precisa incluir os dados do seu cartão de crédito para fazer uso dos 12 meses gratuitos dos inúmeros serviços gratuitos disponíveis!&lt;br&gt;
Aqui nesse post já mencionei sobre uma conta &lt;strong&gt;&lt;a href="https://azure.microsoft.com/pt-br/free/students/?WT.mc_id=javascript-23665-gllemos"&gt;Azure for Students&lt;/a&gt;&lt;/strong&gt;, que dão a vocês estudantes, vários benefícios de fazerem uso da Conta Azure de graça sem necessidade de incluir dados de cartão de crédito!&lt;/p&gt;

&lt;p&gt;Depois que criar uma conta no Azure, você deverá acessar o &lt;strong&gt;&lt;a href="https://portal.azure.com/"&gt;Portal Azure&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sigam os seguintes passos:&lt;/p&gt;

&lt;p&gt;1 - Clicar em &lt;strong&gt;Create a Resource&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/PLpbT23p"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Ab3UVHs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/VN4K9hXR/Captura-de-Tela-2021-05-08-a-s-00-43-46.png" alt="Captura-de-Tela-2021-05-08-a-s-00-43-46.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2 - Depois, na parte da busca, digitem: &lt;strong&gt;Static Web Apps&lt;/strong&gt;. E, em seguida cliquem no botão: &lt;strong&gt;Create&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/c6NzknCM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_a85C04E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/v81dB7dj/Captura-de-Tela-2021-05-08-a-s-00-45-45.png" alt="Captura-de-Tela-2021-05-08-a-s-00-45-45.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3 - Preencha todos os dados necessários nessa tela, que são:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Resource Groups&lt;/li&gt;
&lt;li&gt;Static Web Apps Details -&amp;gt; Name (aqui o nome deverá ser único e nunca igual)&lt;/li&gt;
&lt;li&gt;Region: CENTRAL US (vocês podem escolher outras regiões também)&lt;/li&gt;
&lt;li&gt;Deployments Details - Others (escolha essa opção! Pois estaremos usando o Azure DevOps e não o GitHub Actions!)&lt;/li&gt;
&lt;li&gt;E, por último, clicar no botão: &lt;strong&gt;Review + Create -&amp;gt; Create&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/zLCCyVN8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VLl-vXCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/8C3tn6nJ/Captura-de-Tela-2021-05-08-a-s-00-48-17.png" alt="Captura-de-Tela-2021-05-08-a-s-00-48-17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/4KsKFwCR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BeACSjlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/FKJjznDz/Captura-de-Tela-2021-05-08-a-s-00-53-06.png" alt="Captura-de-Tela-2021-05-08-a-s-00-53-06.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Se tudo der certo, aparecerá a seguinte imagem abaixo. Caso sim, bastam clicar em: &lt;strong&gt;Go to resource&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/YGjCJsbZ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1XzXY3UV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/k4vRtr8J/Captura-de-Tela-2021-05-08-a-s-00-58-37.png" alt="Captura-de-Tela-2021-05-08-a-s-00-58-37.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora, vamos fazer algumas modificações importantes. Vá até:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Overview&lt;/li&gt;
&lt;li&gt;Manage Deployment token&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Aparecerá uma nova janela com um token gigantesco. Copie e cole esse token em algum notepad de sua preferência. Pois vamos precisar dele posteriormente! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/4K2Jb1s5"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5fKMg2Mw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Y9Mh7XPJ/Captura-de-Tela-2021-05-08-a-s-01-00-17.png" alt="Captura-de-Tela-2021-05-08-a-s-01-00-17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/v1Ks6Ht2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lvwwfQdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SsSN3n24/Captura-de-Tela-2021-05-08-a-s-01-03-18.png" alt="Captura-de-Tela-2021-05-08-a-s-01-03-18.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#passo-04-criando-os-pipelines-task-no-azure-devops-para-a-nossa-aplica%C3%A7%C3%A3o-est%C3%A1tica"&gt;
  &lt;/a&gt;
  Passo 04 - Criando os Pipelines Task no Azure DevOps para a nossa Aplicação Estática!
&lt;/h3&gt;

&lt;p&gt;Agora vamos usar o poder que o serviço do Azure DevOps nos proporciona integrado com o SWA!Retorne ao seu Projeto hospedado no Azure DevOps e vá até o botão: &lt;strong&gt;Set up Build&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/mcBwNQ8t"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s1IpyKi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wBsGz2Nc/Captura-de-Tela-2021-05-08-a-s-01-07-29.png" alt="Captura-de-Tela-2021-05-08-a-s-01-07-29.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depois disso, aparecerá uma nova janela. Escolha a opção: &lt;strong&gt;Starter Pipeline&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/s1QpW6sT"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DroW3ybr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Vs443pTP/Captura-de-Tela-2021-05-08-a-s-01-09-42.png" alt="Captura-de-Tela-2021-05-08-a-s-01-09-42.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copiem e colem o YAML abaixo e coloquem no pipeline de vocês:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;

&lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;vmImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

&lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;checkout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;self&lt;/span&gt;
    &lt;span class="na"&gt;submodules&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AzureStaticWebApp@0&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;app_location&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/'&lt;/span&gt;
      &lt;span class="na"&gt;api_location&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;api'&lt;/span&gt;
      &lt;span class="na"&gt;output_location&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;dist'&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;azure_static_web_apps_api_token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$(deployment_token)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Na parte de &lt;strong&gt;output_location&lt;/strong&gt; precisaremos alterar! Pois em Vue.js a pasta de artefato, que é a pasta que gera os arquivos estáticos é a pasta &lt;strong&gt;dist&lt;/strong&gt;. Para diferentes frameworks são nomes de pastas diferentes. Caso queira saber do framework que você esteja usando, temos uma lista dessas pastas &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/front-end-frameworks?WT.mc_id=javascript-23665-gllemos"&gt;AQUI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Agora, vamos incluir aquele token criado lá no Portal Azure. Para isso, vamos usar um recurso bastante interessante no Azure DevOps: &lt;strong&gt;Variables&lt;/strong&gt;.&lt;br&gt;
Vá até:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Variables &lt;/li&gt;
&lt;li&gt;New Variable &lt;/li&gt;
&lt;li&gt;Name (deployment_token) &lt;/li&gt;
&lt;li&gt;Value (o valor do token)&lt;/li&gt;
&lt;li&gt;Clicar no botão: &lt;strong&gt;Ok -&amp;gt; Save&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/rzrfTF0y"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MFA9LdJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Vs7pjJzt/Captura-de-Tela-2021-05-08-a-s-01-26-28.png" alt="Captura-de-Tela-2021-05-08-a-s-01-26-28.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/nCxGtKfT"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NpwrmAX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/8PJKMwK8/Captura-de-Tela-2021-05-08-a-s-01-28-10.png" alt="Captura-de-Tela-2021-05-08-a-s-01-28-10.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/ygXXJWF0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftDO8TXf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/d1gWxy3N/Captura-de-Tela-2021-05-08-a-s-01-29-32.png" alt="Captura-de-Tela-2021-05-08-a-s-01-29-32.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Agora que já salvamos o nosso &lt;em&gt;deployment_token&lt;/em&gt; vem o momento mais esperado: executar essa trigger e ver a coisa funcionar! Cliquem no botão: &lt;strong&gt;Save and Run&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/KKttV4pC"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AYez84Rj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/yNbnDZm6/Captura-de-Tela-2021-05-08-a-s-01-32-19.png" alt="Captura-de-Tela-2021-05-08-a-s-01-32-19.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/6ySRpCDD"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pWlOvHbC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/y86TnPnY/Captura-de-Tela-2021-05-08-a-s-01-34-16.png" alt="Captura-de-Tela-2021-05-08-a-s-01-34-16.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feito isso, veremos o Pipeline da nossa aplicação estática sendo executado (job):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/xckJhccg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GB9EJlll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/5NgBHz1c/Captura-de-Tela-2021-05-08-a-s-01-36-22.png" alt="Captura-de-Tela-2021-05-08-a-s-01-36-22.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Se o (job) ou Build da aplicação der os checks todos verdes é porque o build foi executado com sucesso!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/SYYSTYDM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOUx0Nx4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SRDnKW9D/Captura-de-Tela-2021-05-08-a-s-01-39-04.png" alt="Captura-de-Tela-2021-05-08-a-s-01-39-04.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#passo-05-retornando-ao-portal-azure"&gt;
  &lt;/a&gt;
  Passo 05 - Retornando ao Portal Azure
&lt;/h3&gt;

&lt;p&gt;Agora que o build foi executado com sucesso no Azure DevOps, é aquele momento de sabermos se a nossa aplicação foi devidamente publicada no Azure! Retorne ao recurso criado da aplicação no Azure e clique no link, conforme a imagem abaixo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/fkdQPsMm"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XnRCxeAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/qBbBzBYb/Captura-de-Tela-2021-05-08-a-s-01-41-55.png" alt="Captura-de-Tela-2021-05-08-a-s-01-41-55.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/NKshLrmk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7HnhrmWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/VkMzGqNp/Captura-de-Tela-2021-05-08-a-s-01-42-19.png" alt="Captura-de-Tela-2021-05-08-a-s-01-42-19.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E, como podem ver, o deploy foi realizado e integrado com sucesso com Azure DevOps!&lt;/p&gt;

&lt;p&gt;Se vocês desejarem, estou disponibilizando o link da aplicação disponível na web &lt;strong&gt;&lt;a href="https://gray-forest-0b4ba2410.azurestaticapps.net/"&gt;Aplicação Todo-List em Vue -AQUI&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#recursos-amp-links-importantes"&gt;
  &lt;/a&gt;
  Recursos &amp;amp; Links Importantes
&lt;/h2&gt;

&lt;p&gt;Sempre ao final dos meus tutoriais, deixo recursos e links importantes, caso desejam saber mais sobre o assunto:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/?WT.mc_id=javascript-23665-gllemos"&gt;Documentação Oficial do Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/paths/build-applications-with-azure-devops/?WT.mc_id=javascript-23665-gllemos"&gt;Curso Grátis - Azure DevOps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/learn/modules/publish-app-service-static-web-app-api/?WT.mc_id=javascript-23665-gllemos"&gt;Curso Grátis - Publique uma Aplicação Estática no Angular, React, Vue ou Javascript &amp;amp; API&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/learn/modules/create-deploy-static-webapp-gatsby-app-service/?WT.mc_id=javascript-23665-gllemos"&gt;Curso Grátis - Crie e Publique um site estático com Gatsby&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-gatsby/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no Gatsby&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-hugo/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no Hugo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-vuepress/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no VuePress&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/azure/static-web-apps/deploy-nextjs/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no Next.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/deploy-nuxtjs/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no Nuxt.js&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/azure/static-web-apps/publish-jekyll/?WT.mc_id=javascript-23665-gllemos"&gt;Implementando Azure Static Web Apps no Jekyll&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#palavras-finais"&gt;
  &lt;/a&gt;
  Palavras Finais
&lt;/h2&gt;

&lt;p&gt;Espero que esse tutorial de SWA + Azure DevOps seja de grande ajuda à todas as pessoas! Abaixo segue o vídeo explicativo desse tutorial, para àquelas pessoas que preferem seguir tutorial em formato de vídeo:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3pnIBJWoRjM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Ah! Já ia esquecer de falar aqui! Não deixem de se inscrever no meu Canal do Youtube! Estou criando inúmeras séries incríveis para esse ano de 2021! &lt;/p&gt;

&lt;p&gt;Só como spoiler, teremos &lt;strong&gt;(a partir de Junho)&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;😃 &lt;strong&gt;Microsoft Learn Live Sessions&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;😃 &lt;strong&gt;Open Mic com a Comunidade durante as Lives!&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;😃 &lt;strong&gt;Tutoriais semanais de Node.js, TypeScript &amp;amp; JavaScript&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;😃 &lt;strong&gt;E muitos Live Codings&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Se são conteúdos que você curte, então não deixa de se inscrever e ative o sininho para ficar sabendo quando teremos vídeo novo!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/youtube-canal-glaucialemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJTWdv_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/pr3TL4Pd/Screen-Shot-12-31-20-at-01-06-AM.png" alt="Screen-Shot-12-31-20-at-01-06-AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E para ficarem por dentro de várias outras novidades, não deixem de me seguir lá no twitter!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/glaucia_lemos86"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8TRF6AJa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code4coders.files.wordpress.com/2019/05/image-12.png" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nos vemos! Até a próxima pessoal! 😍 &lt;/p&gt;

</description>
      <category>azure</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Publicación de Aplicaciones Estáticas con Azure Static Web Apps y Azure DevOps.</title>
      <author>Glaucia Lemos</author>
      <pubDate>Wed, 12 May 2021 18:10:20 +0000</pubDate>
      <link>https://dev.to/glaucia86/publicacion-de-aplicaciones-estaticas-con-azure-static-web-apps-y-azure-devops-5c63</link>
      <guid>https://dev.to/glaucia86/publicacion-de-aplicaciones-estaticas-con-azure-static-web-apps-y-azure-devops-5c63</guid>
      <description>&lt;p&gt;¡Hola Desarrolladores(as)! Hoy vamos a hablar sobre el lanzamiento de un servicio de Azure (12/05/2021) que estaba en versión Preview y finalmente, ¡será un &lt;strong&gt;&lt;a href="https://azure.microsoft.com/blog/announcing-azure-portal-general-availability/?WT.mc_id=javascript-23666-gllemos"&gt;General Available&lt;/a&gt;&lt;/strong&gt;, del servicio &lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/app-service/static/?WT.mc_id=javascript-23666-gllemos"&gt;Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Si desea saber un poco más sobre el lanzamiento oficial de Azure Static Web Apps que está ocurriendo hoy (12/05/2021), hay un blog oficial que explica en qué se diferencia de la versión Preview para General Available &lt;strong&gt;&lt;a href="https://azure.microsoft.com/blog/develop-production-scale-modern-web-apps-quickly-with-azure-static-web-apps/?WT.mc_id=javascript-23666-gllemos"&gt;AQUÍ&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;¡Y vamos a tener innumerables cambios significativos en este servicio, que estaba en su versión Preview!&lt;/p&gt;

&lt;p&gt;Pero, primero vamos a recordar algunas caracteristicas de este servicio.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tabla-de-contenido"&gt;
  &lt;/a&gt;
  Tabla de Contenido
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#tabla-de-contenido"&gt; Tabla de Contenido&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#generated-with-summaryze-forem"&gt; generated with Summaryze Forem 🌱&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#qu%C3%A9-es-azure-static-web-apps"&gt; ¿Qué es Azure Static Web Apps?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#qu%C3%A9-vamos-a-hacer"&gt; ¿Qué vamos a hacer?&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#es-hora-del-demo"&gt; ¡Es hora del Demo!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#azure-for-students-%EF%B8%8F"&gt; Azure for Students ⭐️&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#usando-azure-devops"&gt; ¡Usando Azure DevOps!&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#paso-01-creaci%C3%B3n-de-un-proyecto-en-azure-devops"&gt; Paso 01: Creación de un proyecto en Azure DevOps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#paso-02-importar-el-proyecto-desde-github-a-azure-devops"&gt; Paso 02: Importar el proyecto desde GitHub a Azure DevOps&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#paso-03-creaci%C3%B3n-de-la-aplicaci%C3%B3n-est%C3%A1tica-en-azure"&gt; Paso 03: creación de la aplicación estática en Azure&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#paso-04-creaci%C3%B3n-de-los-pipelines-task-en-azure-devops-para-nuestra-aplicaci%C3%B3n-est%C3%A1tica"&gt; Paso 04: Creación de los Pipelines Task en Azure DevOps para nuestra aplicación estática.&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#paso-05-regreso-al-portal-azure"&gt; Paso 05 - Regreso al Portal Azure&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#recursos-y-enlaces-importantes"&gt; Recursos y Enlaces Importantes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="#ultimas-palabras"&gt; Ultimas Palabras&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;h6&gt;
  &lt;a href="#generated-with-summaryze-forem"&gt;
  &lt;/a&gt;
  generated with &lt;a href="https://summaryze-forem.vercel.app/"&gt;Summaryze Forem 🌱&lt;/a&gt;
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#qu%C3%A9-es-azure-static-web-apps"&gt;
  &lt;/a&gt;
  ¿Qué es Azure Static Web Apps?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/app-service/static/?WT.mc_id=javascript-23666-gllemos"&gt;Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;  es un servicio que crea e implementa automáticamente aplicaciones web completas en Azure desde un repositorio de código, en cuyo caso se usa &lt;strong&gt;&lt;a href="https://docs.github.com/pt/actions"&gt;GitHub Actions&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/3yJRFVTz"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4DH5txVj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/9fy7CHNX/swa-overview.png" alt="swa-overview.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Con este servicio, permite realizar despliegues automáticos, de forma rápida, sencilla y totalmente gratuita utilizando cualquiera de las librerías o frameworks más conocidos del mercado, como: &lt;strong&gt;&lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://pt-br.reactjs.org/"&gt;React&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;&lt;/strong&gt; o incluso utilizando &lt;strong&gt;&lt;a href="https://dotnet.microsoft.com/apps/aspnet/web-apps/blazor?WT.mc_id=javascript-23666-gllemos"&gt;Blazor&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;En el lado del Back-End, puede integrar su aplicación estática usando &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/azure-functions/functions-overview?WT.mc_id=javascript-23666-gllemos"&gt;Azure Functions&lt;/a&gt;&lt;/strong&gt;, lo que le permitirá crear una API de una manera mucho más rápida, resistente y escalable.&lt;/p&gt;

&lt;p&gt;Si lo desea, tenemos numerosas capacitaciones de Azure Static Web Apps totalmente gratuitas en la plataforma &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/?WT.mc_id=javascript-23666-gllemos"&gt;Microsoft Learn&lt;/a&gt;&lt;/strong&gt;. Para enumerar algunos aquí ...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/paths/azure-static-web-apps/?WT.mc_id=javascript-23666-gllemos"&gt;Cursos Gratuitos - Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/paths/azure-static-web-apps/?WT.mc_id=javascript-23666-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k8cBEg_N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/L6QK86x9/Captura-de-Tela-2021-05-09-a-s-18-55-00.png" alt="Captura-de-Tela-2021-05-09-a-s-18-55-00.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api/?WT.mc_id=javascript-23666-gllemos"&gt;Publicación de una aplicación de JavaScript de Angular, React, Svelte o Vue con Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api/?WT.mc_id=javascript-23666-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sWNqVIOU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ZngcXgLS/Captura-de-Tela-2021-05-09-a-s-18-56-56.png" alt="Captura-de-Tela-2021-05-09-a-s-18-56-56.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api-dotnet/?WT.mc_id=javascript-23666-gllemos"&gt;Publicación de una aplicación WebAssembly de Blazor y una API de .NET con Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-app-service-static-web-app-api-dotnet/?WT.mc_id=javascript-23666-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---1f0-RLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/43Z5Cppm/Captura-de-Tela-2021-05-09-a-s-18-59-03.png" alt="Captura-de-Tela-2021-05-09-a-s-18-59-03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/create-deploy-static-webapp-gatsby-app-service/?WT.mc_id=javascript-23666-gllemos"&gt;Creación y publicación de una aplicación web estática con Gatsby y Azure Static Web Apps
&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/create-deploy-static-webapp-gatsby-app-service/?WT.mc_id=javascript-23666-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bu-X0yaN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/QdZg5c40/Captura-de-Tela-2021-05-09-a-s-19-00-41.png" alt="Captura-de-Tela-2021-05-09-a-s-19-00-41.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-static-web-app-api-preview-url/?WT.mc_id=javascript-23666-gllemos"&gt;Publicación de una API en Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://docs.microsoft.com/learn/modules/publish-static-web-app-api-preview-url/?WT.mc_id=javascript-23666-gllemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rbY-cJKf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SsPCK9YL/Captura-de-Tela-2021-05-09-a-s-19-02-12.png" alt="Captura-de-Tela-2021-05-09-a-s-19-02-12.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ahora que sabe qué es Azure Static Web Apps, ahora es el momento de centrarse en el tema principal de esta publicación: '¿Cómo podemos publicar un sitio web estático utilizando Azure Static Web Apps mediante la integración con la poderosa herramienta &lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/devops/?WT.mc_id=javascript-23666-gllemos"&gt;Azure DevOps&lt;/a&gt;&lt;/strong&gt;?&lt;/p&gt;

&lt;p&gt;Vamos a empezar a hacer una práctica de este servicio con un tutorial paso a paso? ¡Aquí vamos!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#qu%C3%A9-vamos-a-hacer"&gt;
  &lt;/a&gt;
  ¿Qué vamos a hacer?
&lt;/h2&gt;

&lt;p&gt;Bueno, en este tutorial vamos a aprender cómo publicar un sitio web estático en Vue.Js usando Azure Static Web e integrándolo con Azure DevOps. En la versión de vista previa esto no era posible (en cierto modo, no ... pero hay personas que lo hicieron). Pero, ahora con Service GA, esto es muy posible y eso es exactamente lo que les estaré enseñando a todo(a)s aquí.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#es-hora-del-demo"&gt;
  &lt;/a&gt;
  ¡Es hora del Demo!
&lt;/h2&gt;

&lt;p&gt;Para esta demostración, necesitaremos los siguientes recursos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://code.visualstudio.com/?WT.mc_id=javascript-23666-gllemos"&gt;Visual Studio Code&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://azure.microsoft.com/free?WT.mc_id=javascript-23666-gllemos"&gt;Cuenta de Azure&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;✅ &lt;strong&gt;&lt;a href="https://github.com/"&gt;Cuenta de GitHub&lt;/a&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#azure-for-students-%EF%B8%8F"&gt;
  &lt;/a&gt;
  Azure for Students ⭐️
&lt;/h5&gt;

&lt;blockquote&gt;
&lt;p&gt;Si es estudiante de un colegio o universidad, puede crear su cuenta con Azure para estudiantes. Esta cuenta te dará el beneficio de tener un crédito de USD 100.00 para utilizar los servicios de forma gratuita, sin necesidad de tener una tarjeta de crédito. Para activar esta cuenta, simplemente acceda al enlace al costado: &lt;strong&gt;&lt;a href="https://azure.microsoft.com/pt-br/free/students/?WT.mc_id=javascript-23666-gllemos"&gt;AQUÍ&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Para fines de demostración, usaremos la función de GitHub: &lt;strong&gt;&lt;a href="https://help.github.com/pt/github/creating-cloning-and-archiving-repositories/creating-a-template-repository"&gt;Plantillas de GitHub&lt;/a&gt;&lt;/strong&gt;. Si desea saber más sobre cómo crear &lt;em&gt;plantilla&lt;/em&gt; y comprender qué es, simplemente vaya &lt;strong&gt;&lt;a href="https://help.github.com/pt/github/creating-cloning-and-archiving-repositories/creating-a-repository-from-a-template"&gt;AQUÍ&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Haga clic en este enlace &lt;strong&gt;&lt;a href="https://github.com/staticwebdev/vue-basic/generate"&gt;https://github.com/staticwebdev/vue-basic/generate&lt;/a&gt;&lt;/strong&gt; y luego cree inmediatamente un nombre para este repositorio, como se muestra en la imagen a continuación: (puede elegir el nombre que desee. No necesariamente el mismo que mía.)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/56trBmYj"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O6eopVYT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/tCdHHS9d/Captura-de-Tela-2021-05-07-a-s-23-51-03.png" alt="Captura-de-Tela-2021-05-07-a-s-23-51-03.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luego haga clic en el botón: &lt;strong&gt;Create Repository from Template&lt;/strong&gt;(Crear repositorio a partir de plantilla). Después de eso, se creará una aplicación modelo en Vue.js para que podamos probar nuestra aplicación.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usando-azure-devops"&gt;
  &lt;/a&gt;
  ¡Usando Azure DevOps!
&lt;/h2&gt;

&lt;p&gt;Ahora comenzaremos a integrar la aplicación recién creada en GitHub y usaremos &lt;strong&gt;&lt;a href="https://azure.microsoft.com/services/devops/?WT.mc_id=javascript-23665-gllemos"&gt;Azure DevOps&lt;/a&gt;&lt;/strong&gt;. Para hacer esto, vaya al enlace a continuación para comenzar a usar Azure DevOps de forma gratuita.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://azure.microsoft.com/pricing/details/devops/azure-devops-services/?WT.mc_id=javascript-23666-gllemos"&gt;Creación de un proyecto: Azure DevOps&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Elija las opciones gratuitas. En mi caso, elijo la opción: Plan Básico - Gratis. Después de incluir la información de sus datos, aparecerá la siguiente imagen a continuación:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/Q90wQqTb"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s5gY7uZP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/ZnSmh7Y1/Captura-de-Tela-2021-05-09-a-s-19-39-47.png" alt="Captura-de-Tela-2021-05-09-a-s-19-39-47.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;¡Vayamos paso a paso a partir de ahora!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paso-01-creaci%C3%B3n-de-un-proyecto-en-azure-devops"&gt;
  &lt;/a&gt;
  Paso 01: Creación de un proyecto en Azure DevOps
&lt;/h3&gt;

&lt;p&gt;Crea el proyecto y colócalo de acuerdo con la imagen a continuación:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/mPj0f2cp"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XKk6jDIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/cJGZ3vdW/Captura-de-Tela-2021-05-08-a-s-00-19-01.png" alt="Captura-de-Tela-2021-05-08-a-s-00-19-01.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Una vez que haya completado toda la información de su proyecto, haga clic en el botón: &lt;strong&gt;Create a Project&lt;/strong&gt;(Crear un proyecto). Después de hacer clic en este botón, la pantalla tendrá el siguiente formato:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/svqJMkkf"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_N-Z9kTw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/3xJfc79G/Captura-de-Tela-2021-05-08-a-s-00-23-17.png" alt="Captura-de-Tela-2021-05-08-a-s-00-23-17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paso-02-importar-el-proyecto-desde-github-a-azure-devops"&gt;
  &lt;/a&gt;
  Paso 02: Importar el proyecto desde GitHub a Azure DevOps
&lt;/h3&gt;

&lt;p&gt;Ahora implementaremos el código (plantilla estándar) de la aplicación Vue.js creada recientemente en GitHub y la integraremos con Azure DevOps. Entra a:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Repos (Repositorios)&lt;/li&gt;
&lt;li&gt;Files (Archivos)&lt;/li&gt;
&lt;li&gt;Import a Repository (Importar un repositorio)&lt;/li&gt;
&lt;li&gt;Import (Importar)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Con eso, se abrirá una nueva ventana, allí pondremos, solo el GitClone de nuestra aplicación (.git) y luego damos clic en el botón: &lt;strong&gt;Import&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Aquí tenemos una imagen que también te ayuda en este paso a paso:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/HcYNSGsD"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7XavMhPI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/hjTqtgkj/Captura-de-Tela-2021-05-08-a-s-00-25-25.png" alt="Captura-de-Tela-2021-05-08-a-s-00-25-25.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Al final, su Azure DevOps se verá así:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/KkWd4qF6"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rN27Iz8X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SRQqT3Px/Captura-de-Tela-2021-05-08-a-s-00-33-40.png" alt="Captura-de-Tela-2021-05-08-a-s-00-33-40.png"&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Si es así, es porque ha integrado correctamente su aplicación Vue.js en Azure DevOps. ¡Ahora continuemos!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paso-03-creaci%C3%B3n-de-la-aplicaci%C3%B3n-est%C3%A1tica-en-azure"&gt;
  &lt;/a&gt;
  Paso 03: creación de la aplicación estática en Azure
&lt;/h3&gt;

&lt;p&gt;En este paso, necesitaremos una &lt;strong&gt;&lt;a href="https://azure.microsoft.com/free/?WT.mc_id=javascript-23666-gllemos"&gt;Cuenta Azure&lt;/a&gt;&lt;/strong&gt;, ¡que incluso puede crear de forma gratuita! ¡Solo necesita incluir los datos de su tarjeta de crédito para hacer uso de los 12 meses gratuitos de los numerosos servicios gratuitos disponibles!&lt;/p&gt;

&lt;p&gt;Después de crear una cuenta en Azure, deberá acceder al &lt;a href="https://portal.azure.com/"&gt;Portal Azure&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sigue estos pasos:&lt;/p&gt;

&lt;p&gt;1 - Haga clic en: &lt;strong&gt;Create a Resource&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/PLpbT23p"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9Ab3UVHs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/VN4K9hXR/Captura-de-Tela-2021-05-08-a-s-00-43-46.png" alt="Captura-de-Tela-2021-05-08-a-s-00-43-46.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2 - Luego, en la parte de búsqueda, escriba: &lt;strong&gt;Static Web Apps&lt;/strong&gt;. Y luego haga clic en el botón: &lt;strong&gt;Create&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/c6NzknCM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_a85C04E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/v81dB7dj/Captura-de-Tela-2021-05-08-a-s-00-45-45.png" alt="Captura-de-Tela-2021-05-08-a-s-00-45-45.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3 - Complete todos los datos necesarios en esta pantalla, que son:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Resource Groups&lt;/li&gt;
&lt;li&gt;Static Web Apps Details -&amp;gt; Name (aquí el nombre debe ser único y nunca el mismo)&lt;/li&gt;
&lt;li&gt;Region: CENTRAL US (se puede elegir también otras regiones)&lt;/li&gt;
&lt;li&gt;Deployments Details - Others (¡elige esa opción! ¡Usaremos Azure DevOps y no GitHub Actions!)&lt;/li&gt;
&lt;li&gt;Y finalmente, haga clic en el botón: &lt;strong&gt;Review + Create -&amp;gt; Create&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/zLCCyVN8"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VLl-vXCL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/8C3tn6nJ/Captura-de-Tela-2021-05-08-a-s-00-48-17.png" alt="Captura-de-Tela-2021-05-08-a-s-00-48-17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/4KsKFwCR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BeACSjlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/FKJjznDz/Captura-de-Tela-2021-05-08-a-s-00-53-06.png" alt="Captura-de-Tela-2021-05-08-a-s-00-53-06.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si todo va bien, la siguiente imagen aparecerá. Si es así, simplemente haga clic en: &lt;strong&gt;Go to resource&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/YGjCJsbZ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1XzXY3UV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/k4vRtr8J/Captura-de-Tela-2021-05-08-a-s-00-58-37.png" alt="Captura-de-Tela-2021-05-08-a-s-00-58-37.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ahora, hagamos algunos cambios importantes. Vaya a:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Overview&lt;/li&gt;
&lt;li&gt;Manage Deployment token&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Aparecerá una nueva ventana con un token gigante. Copie y pegue este token y copie en su bloc de notas. ¡Lo necesitaremos más tarde!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/4K2Jb1s5"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5fKMg2Mw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Y9Mh7XPJ/Captura-de-Tela-2021-05-08-a-s-01-00-17.png" alt="Captura-de-Tela-2021-05-08-a-s-01-00-17.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/v1Ks6Ht2"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lvwwfQdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SsSN3n24/Captura-de-Tela-2021-05-08-a-s-01-03-18.png" alt="Captura-de-Tela-2021-05-08-a-s-01-03-18.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paso-04-creaci%C3%B3n-de-los-pipelines-task-en-azure-devops-para-nuestra-aplicaci%C3%B3n-est%C3%A1tica"&gt;
  &lt;/a&gt;
  Paso 04: Creación de los Pipelines Task en Azure DevOps para nuestra aplicación estática.
&lt;/h3&gt;

&lt;p&gt;¡Ahora usemos el poder que nos brinda el servicio Azure DevOps integrado con SWA! Regrese a su proyecto alojado en Azure DevOps y vaya al botón: &lt;strong&gt;Set up Build&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/mcBwNQ8t"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s1IpyKi_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/wBsGz2Nc/Captura-de-Tela-2021-05-08-a-s-01-07-29.png" alt="Captura-de-Tela-2021-05-08-a-s-01-07-29.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Después de eso, aparecerá una nueva ventana. Elige la opción: &lt;strong&gt;Starter Pipeline&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/s1QpW6sT"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DroW3ybr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Vs443pTP/Captura-de-Tela-2021-05-08-a-s-01-09-42.png" alt="Captura-de-Tela-2021-05-08-a-s-01-09-42.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copie y pegue el archivo YAML. Y ponlo en tu pipeline:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;main&lt;/span&gt;

&lt;span class="na"&gt;pool&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;vmImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-latest&lt;/span&gt;

&lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;checkout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;self&lt;/span&gt;
    &lt;span class="na"&gt;submodules&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;task&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;AzureStaticWebApp@0&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;app_location&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;/'&lt;/span&gt;
      &lt;span class="na"&gt;api_location&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;api'&lt;/span&gt;
      &lt;span class="na"&gt;output_location&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;dist'&lt;/span&gt;
    &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;azure_static_web_apps_api_token&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;$(deployment_token)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;¡En la parte &lt;strong&gt;output_location&lt;/strong&gt; tendremos que cambiarlo! En Vue.js, la carpeta de artefactos, que es la carpeta que genera archivos estáticos, es la carpeta &lt;strong&gt;dist&lt;/strong&gt;. Para diferentes frameworks, hay diferentes nombres de carpetas. Si desea conocer la carpeta del framework que está utilizando, tenemos una lista de estas carpetas &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/front-end-frameworks?WT.mc_id=javascript-23666-gllemos"&gt;AQUÍ&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Ahora, incluyamos ese token creado allí en el Portal de Azure. Vamos a utilizar uno recurso muy interesante en Azure DevOps: &lt;strong&gt;Variables&lt;/strong&gt;. Vaya a:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Variables &lt;/li&gt;
&lt;li&gt;New Variable &lt;/li&gt;
&lt;li&gt;Name (deployment_token) &lt;/li&gt;
&lt;li&gt;Value (o valor do token)&lt;/li&gt;
&lt;li&gt;Clicar no botão: &lt;strong&gt;Ok -&amp;gt; Save&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/rzrfTF0y"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MFA9LdJb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/Vs7pjJzt/Captura-de-Tela-2021-05-08-a-s-01-26-28.png" alt="Captura-de-Tela-2021-05-08-a-s-01-26-28.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/nCxGtKfT"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NpwrmAX2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/8PJKMwK8/Captura-de-Tela-2021-05-08-a-s-01-28-10.png" alt="Captura-de-Tela-2021-05-08-a-s-01-28-10.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/ygXXJWF0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ftDO8TXf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/d1gWxy3N/Captura-de-Tela-2021-05-08-a-s-01-29-32.png" alt="Captura-de-Tela-2021-05-08-a-s-01-29-32.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ahora que hemos guardado nuestro &lt;strong&gt;deployment_token&lt;/strong&gt;, llega el momento más esperado: ¡ejecute este disparador y vea cómo funciona! Haga clic en el botón: &lt;strong&gt;Save and Run&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/KKttV4pC"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AYez84Rj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/yNbnDZm6/Captura-de-Tela-2021-05-08-a-s-01-32-19.png" alt="Captura-de-Tela-2021-05-08-a-s-01-32-19.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/6ySRpCDD"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pWlOvHbC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/y86TnPnY/Captura-de-Tela-2021-05-08-a-s-01-34-16.png" alt="Captura-de-Tela-2021-05-08-a-s-01-34-16.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hecho esto, veremos el Pipeline de nuestra aplicación estática ejecutándose (job):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/xckJhccg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GB9EJlll--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/5NgBHz1c/Captura-de-Tela-2021-05-08-a-s-01-36-22.png" alt="Captura-de-Tela-2021-05-08-a-s-01-36-22.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si la aplicación (job) o la compilación dan todos los cheques en verde, ¡es porque la compilación se ejecutó con éxito!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/SYYSTYDM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOUx0Nx4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/SRDnKW9D/Captura-de-Tela-2021-05-08-a-s-01-39-04.png" alt="Captura-de-Tela-2021-05-08-a-s-01-39-04.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#paso-05-volviendo-al-portal-azure"&gt;
  &lt;/a&gt;
  Paso 05 - Volviendo al Portal Azure
&lt;/h3&gt;

&lt;p&gt;Ahora que la compilación se ha ejecutado correctamente en Azure DevOps, es el momento de averiguar si nuestra aplicación se ha publicado correctamente en Azure. Regrese al recurso creado a partir de la aplicación en Azure y haga clic en el enlace, como se muestra en la imagen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/fkdQPsMm"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XnRCxeAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/qBbBzBYb/Captura-de-Tela-2021-05-08-a-s-01-41-55.png" alt="Captura-de-Tela-2021-05-08-a-s-01-41-55.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://postimg.cc/NKshLrmk"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7HnhrmWa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/VkMzGqNp/Captura-de-Tela-2021-05-08-a-s-01-42-19.png" alt="Captura-de-Tela-2021-05-08-a-s-01-42-19.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Y, como puede ver, la implementación se implementó e integró con éxito con Azure DevOps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recursos-y-enlaces-importantes"&gt;
  &lt;/a&gt;
  Recursos y Enlaces Importantes
&lt;/h2&gt;

&lt;p&gt;Siempre al final de mis tutoriales, dejo importantes recursos y enlaces, por si quieres saber más sobre el tema:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/?WT.mc_id=javascript-23666-gllemos"&gt;Documentación de Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/learn/paths/build-applications-with-azure-devops/?WT.mc_id=javascript-23666-gllemos"&gt;Curso Gratuito - Azure DevOps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/es-es/learn/modules/publish-app-service-static-web-app-api/?WT.mc_id=javascript-23666-gllemos"&gt;Curso Gratuito - Publicación de una aplicación de JavaScript de Angular, React, Svelte o Vue con Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/pt-br/learn/modules/create-deploy-static-webapp-gatsby-app-service/?WT.mc_id=javascript-23666-gllemos"&gt;Curso Gratuito - Creación y publicación de una aplicación web estática con Gatsby y Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-hugo/?WT.mc_id=javascript-23666-gllemos"&gt;Tutorial: Publicación de un sitio de Hugo en Azure Static Web Apps, versión preliminar&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-vuepress/?WT.mc_id=javascript-23666-gllemos"&gt;Tutorial: Publicar um site do VuePress en el Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/publish-vuepress/?WT.mc_id=javascript-23666-gllemos"&gt;Implementación de sitios web de Next.js representados de forma estática en la versión preliminar de Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;✅ &lt;strong&gt;&lt;a href="https://docs.microsoft.com/azure/static-web-apps/deploy-nuxtjs/?WT.mc_id=javascript-23666-gllemos"&gt;Implementación de sitios web de Nuxt.js representados por el servidor en Azure Static Web Apps&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusi%C3%B3n"&gt;
  &lt;/a&gt;
  Conclusión
&lt;/h2&gt;

&lt;p&gt;Espero que este tutorial de SWA + Azure DevOps sea de gran ayuda para todos los(as) desarrolladores(as).&lt;/p&gt;

&lt;p&gt;¡Ah! ¡Me iba a olvidar de hablar aquí! ¡Asegúrate de suscribirte a mi canal de Youtube! ¡Estoy creando innumerables series increíbles para este año 2021!&lt;/p&gt;

&lt;p&gt;A modo de spoiler, tendremos &lt;strong&gt;(a partir de junio)&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;😃 Microsoft Learn Sessions&lt;/li&gt;
&lt;li&gt;😃 Open Mic con la comunidad durante las vidas!&lt;/li&gt;
&lt;li&gt;😃 Tutoriales semanales de Node.js, TypeScript y JavaScript&lt;/li&gt;
&lt;li&gt;😃 Y muchas codificaciones en vivo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si es contenido que te gusta, asegúrate de suscribirte y activar la campana para saber cuándo tendremos un nuevo video. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/youtube-canal-glaucialemos"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DJTWdv_O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.postimg.cc/pr3TL4Pd/Screen-Shot-12-31-20-at-01-06-AM.png" alt="Screen-Shot-12-31-20-at-01-06-AM.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Y para conocer estas y más novedades no olvides seguirme en twitter!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/glaucia_lemos86"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8TRF6AJa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://code4coders.files.wordpress.com/2019/05/image-12.png" alt="Twitter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No vemos! Hasta muy pronto! 😍 &lt;/p&gt;

</description>
      <category>azure</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
