<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>WordPress Maintenance Mode</title>
      <author>shoaiyb sysa</author>
      <pubDate>Tue, 25 May 2021 09:39:53 +0000</pubDate>
      <link>https://dev.to/shoaiyb/wordpress-maintenance-mode-19c8</link>
      <guid>https://dev.to/shoaiyb/wordpress-maintenance-mode-19c8</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-wordpress-maintenance-mode"&gt;
  &lt;/a&gt;
  What is WordPress Maintenance Mode?
&lt;/h2&gt;

&lt;p&gt;Maintenance mode makes your website temporarily unavailable to visitors.&lt;br&gt;&lt;br&gt;
It replaces your website with a page that displays a message to the visitor that the site is under maintenance or temporarily unavailable.          &lt;/p&gt;

&lt;p&gt;Maintenance mode is primarily used to run updates, make changes to design, or fix a security issue, move WordPress site to root, but is not limited to this.    &lt;/p&gt;

&lt;p&gt;There are different reasons why you might want to put your site into maintenance mode.&lt;br&gt;&lt;br&gt;
For example, you may have just &lt;a href="https://sysa.ml/buy-domain-name/"&gt;bought a domain&lt;/a&gt; and &lt;a href="https://sysa.ml/best-wordpress-hosting/"&gt;hosting plan&lt;/a&gt;.&lt;br&gt;&lt;br&gt;
While you build your website, you would like for visitors not to view an incomplete site.&lt;br&gt;&lt;br&gt;
Such situations make maintenance mode a nifty little feature.          &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#when-to-use-wordpress-maintenance-mode"&gt;
  &lt;/a&gt;
  When To Use WordPress Maintenance Mode?
&lt;/h2&gt;

&lt;p&gt;As much as I’d like zero downtime for my sites, there are times when it’s unavoidable and I need to enter into maintenance mode.&lt;br&gt;&lt;br&gt;
But I have also witnessed WordPress users choosing maintenance mode and experiencing downtime when it could be avoided.        &lt;/p&gt;

&lt;p&gt;So here, I address when it’s a good idea to put WordPress site in maintenance mode:         &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bug:&lt;br&gt;&lt;br&gt;
You’ve found a bug on your site and you need to fix it, especially if it’s affecting your site majorly.          &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hacked:&lt;br&gt;&lt;br&gt;
Your WordPress site is hacked and you need to fix it.&lt;br&gt;&lt;br&gt;
While you restore your backup, you can activate maintenance mode so that your visitors will be blocked from accessing your site.           &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Under Construction:&lt;br&gt;&lt;br&gt;
If you’re just starting out and building your website, you should put it in maintenance mode that displays ‘Coming Soon’ or ‘Under Construction’ to the visitor.    &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Updates:&lt;br&gt;&lt;br&gt;
If you have missed updating a plugin/theme that has a vulnerability and you need to update your site, you should put it in maintenance mode.&lt;br&gt;&lt;br&gt;
This way, your visitors will not be put at risk while you install the new version with the security patch.         &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#how-to-put-your-wordpress-site-in-maintenance-mode"&gt;
  &lt;/a&gt;
  How to Put Your WordPress Site in Maintenance Mode
&lt;/h2&gt;

&lt;p&gt;There are various ways to implement maintenance mode on your website including a default setting in WordPress.         &lt;/p&gt;

&lt;p&gt;If you like doing it the easy way, you can install one of the many plugins available in the WordPress repository.&lt;br&gt;&lt;br&gt;
But if you prefer going the technical way, then you can proceed with the manual method.          &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#with-plugins"&gt;
  &lt;/a&gt;
  With plugins
&lt;/h3&gt;

&lt;p&gt;There are several plugins available to put your site into maintenance mode and they are very easy to use.&lt;br&gt;&lt;br&gt;
However, with all plugins, they vary in features, pricing, and reliability.&lt;br&gt;&lt;br&gt;
I’ve listed five plugins I think do a great job at setting up maintenance mode:         &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#coming-soon"&gt;
  &lt;/a&gt;
  Coming Soon
&lt;/h4&gt;

&lt;p&gt;This plugin is by far the most popular one among maintenance mode plugins.&lt;br&gt;&lt;br&gt;
It enables you to create a simple page that mentions ‘Coming Soon’, ‘Under Construction’, or ‘Maintenance Mode’.&lt;br&gt;&lt;br&gt;
It has over 1 million active installations and is available in 15 languages.        &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
There’s a free version.&lt;br&gt;&lt;br&gt;
The pro version starts at $29 per year.        &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;:       &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compatible with any WordPress theme.
&lt;/li&gt;
&lt;li&gt;Customize the look and feel of the page
&lt;/li&gt;
&lt;li&gt;Supports Multisite
&lt;/li&gt;
&lt;li&gt;Easily add Custom CSS and HTML
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#maintenance"&gt;
  &lt;/a&gt;
  Maintenance
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jqBU3_Lk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/maintenance-wp-plugin.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jqBU3_Lk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/maintenance-wp-plugin.webp" alt="maintenance"&gt;&lt;/a&gt;         &lt;/p&gt;

&lt;p&gt;This easy-to-use plugin is loved by over 400,000 active users.&lt;br&gt;&lt;br&gt;
As a site admin, you can close your website and enable a temporary page to be displayed.&lt;br&gt;&lt;br&gt;
Maintenance partnered with Weglot to offer the plugin in over 100 languages.&lt;br&gt;&lt;br&gt;
Plus, you get access to Security Ninja to take care of your site’s security.          &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Free.      &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;:       &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Retina-ready layouts (Both in HTML and CSS).
&lt;/li&gt;
&lt;li&gt;Upload you own logo.
&lt;/li&gt;
&lt;li&gt;Customize content, fonts, icons, backgrounds, and color.
&lt;/li&gt;
&lt;li&gt;Supports Google Analytics.
&lt;/li&gt;
&lt;li&gt;Supports all popular caching plugins.
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#cmp"&gt;
  &lt;/a&gt;
  CMP
&lt;/h4&gt;

&lt;p&gt;The CMP plugin stands apart from the rest of the plugins because it offers premium features for free.&lt;br&gt;&lt;br&gt;
It’s easy to set up a customized maintenance mode page and even add videos and images to it.        &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Free.       &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;:        &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1-click activation of the maintenance page.
&lt;/li&gt;
&lt;li&gt;Readymade predefined layouts available.
&lt;/li&gt;
&lt;li&gt;Customizable logo, background, text, graphics, and content.
&lt;/li&gt;
&lt;li&gt;Add YouTube videos or Unsplash images.
&lt;/li&gt;
&lt;li&gt;Add subscriber form and social media icons.
&lt;/li&gt;
&lt;li&gt;Works with all themes.
&lt;/li&gt;
&lt;li&gt;Supports Google Analytics.
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#minimal-coming-soon"&gt;
  &lt;/a&gt;
  Minimal Coming Soon
&lt;/h4&gt;

&lt;p&gt;This plugin is a simple plugin that works with any WordPress theme or plugin.&lt;br&gt;&lt;br&gt;
It’s easy to integrate it with the MailChimp API so you can collect emails from visitors.&lt;br&gt;&lt;br&gt;
It’s packed with features and is used by over 80,000 WordPress sites.           &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
There’s a free version.&lt;br&gt;&lt;br&gt;
The premium starts at $39.        &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;:         &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Collect leads and subscribers through the maintenance page.
&lt;/li&gt;
&lt;li&gt;Compatible with all WordPress themes and plugins.
&lt;/li&gt;
&lt;li&gt;Completely customizable.
&lt;/li&gt;
&lt;li&gt;Drag and drop to rearrange page elements.
&lt;/li&gt;
&lt;li&gt;Supports Google Analytics.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, we know there are instances where a plugin may not be your first choice.&lt;br&gt;&lt;br&gt;
In this case, you can insert a snippet of code into your WordPress files.          &lt;/p&gt;

&lt;p&gt;We show you how to do it the manual way next.          &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#manually"&gt;
  &lt;/a&gt;
  Manually
&lt;/h3&gt;

&lt;p&gt;Enabling maintenance mode isn’t too technical and anyone should be able to handle the process.&lt;br&gt;&lt;br&gt;
However, anytime you make manual changes to the backend of your WordPress site, there’s a risk of breaking your site.&lt;br&gt;&lt;br&gt;
Any small error can cause major problems.          &lt;/p&gt;

&lt;p&gt;I recommend taking a complete backup of your site.&lt;br&gt;&lt;br&gt;
Once you have a backup in place, you can move on to the steps of enabling maintenance mode on your own.          &lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#enable"&gt;
  &lt;/a&gt;
  Enable
&lt;/h4&gt;

&lt;p&gt;There are four ways you can enable maintenance mode on your WordPress site:                 &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using .maintenance file:
&lt;strong&gt;Step 1&lt;/strong&gt;:
Log into your hosting account.
Access &lt;code&gt;cPanel &amp;gt; File Manager &amp;gt; public_html&lt;/code&gt;.
&lt;strong&gt;Step 2&lt;/strong&gt;:
Click on New File and name it &lt;code&gt;.maintenance&lt;/code&gt; (ensure you add the period (.) before the word).
Click on Create New File.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Select the .maintenance file, right-click and select Edit.&lt;br&gt;&lt;br&gt;
In case you cannot see the .maintenance file, click on Settings and select Show hidden files.          &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Enter the following snippet of code in the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

 &lt;span class="nv"&gt;$upgrading&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now check your site, it should display the following prompt:        &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NScF1Yjm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/promt.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NScF1Yjm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/promt.jpg" alt="prompt"&gt;&lt;/a&gt;          &lt;/p&gt;

&lt;p&gt;This code won’t allow anyone to access the front end of the site till you remove the .maintenance file.          &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Using the function.php file of your theme
You can add customized messages to your maintenance mode page using the functions.php file.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Log into your hosting account.&lt;br&gt;&lt;br&gt;
Access &lt;code&gt;cPanel &amp;gt; File Manager &amp;gt; public_html&lt;/code&gt;.         &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Go to &lt;code&gt;wp-content &amp;gt; Themes&lt;/code&gt; and select your active theme’s folder.        &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Right-click on the functions.php file and select Edit.         &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Add this snippet of code to the end of the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Activate WordPress Maintenance Mode&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;wp_maintenance_mode&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nf"&gt;current_user_can&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;edit_themes&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nf"&gt;is_user_logged_in&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="nf"&gt;wp_die&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Under&lt;/span&gt; &lt;span class="nc"&gt;Maintenance&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;br&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="nc"&gt;Website&lt;/span&gt; &lt;span class="n"&gt;under&lt;/span&gt; &lt;span class="n"&gt;planned&lt;/span&gt; &lt;span class="n"&gt;maintenance&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nc"&gt;Please&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt; &lt;span class="n"&gt;back&lt;/span&gt; &lt;span class="n"&gt;later&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nf"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;get_header&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;‘&lt;/span&gt;&lt;span class="n"&gt;wp_maintenance_mode&lt;/span&gt;&lt;span class="err"&gt;’&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 5&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Save Changes and close the file.&lt;br&gt;&lt;br&gt;
You can visit your site in Incognito mode and you’ll see the following prompt:         &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#disable"&gt;
  &lt;/a&gt;
  Disable
&lt;/h4&gt;

&lt;p&gt;To disable maintenance mode, you simply need to delete the .maintenance file.&lt;br&gt;&lt;br&gt;
If you want to activate maintenance mode on a regular basis, you can keep the file and rename it to .maintenance-disabled.&lt;br&gt;&lt;br&gt;
When you want to activate maintenance mode, simply rename this file back to .maintenance.          &lt;/p&gt;

&lt;p&gt;If you used the functions.php method, to deactivate maintenance mode, simply remove the code snippet from the functions.php file.            &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#default-maintenance-mode"&gt;
  &lt;/a&gt;
  Default Maintenance Mode
&lt;/h3&gt;

&lt;p&gt;WordPress has a default maintenance mode enabled on every WordPress site.&lt;br&gt;&lt;br&gt;
When you run updates, WordPress automatically makes your site temporarily unavailable until the update is complete.            &lt;/p&gt;

&lt;p&gt;It enables and disables automatically when you run an update.&lt;/p&gt;

&lt;p&gt;And that’s the different ways you can implement maintenance mode on your WordPress site.&lt;br&gt;&lt;br&gt;
Now that you know the methods, it’s important to also understand if it’s the right option to use on your site.&lt;br&gt;&lt;br&gt;
Next, we discuss disadvantages that come along with maintenance mode and the common problems that users incur.        &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-maintenance-mode"&gt;
  &lt;/a&gt;
  Disadvantages Of Maintenance Mode
&lt;/h3&gt;

&lt;p&gt;Maintenance mode is great because you can make changes without visitors privately.&lt;br&gt;&lt;br&gt;
But there are a few disadvantages:         &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;When you use maintenance mode, your site will experience downtime.&lt;br&gt;&lt;br&gt;
This means you lose visitors and revenue for the duration you keep your site in maintenance mode.        &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sometimes, you may not anticipate how long changes are going to take and this can result in prolonged downtime.          &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sometimes, maintenance mode deactivates SSL.&lt;br&gt;&lt;br&gt;
This can jeopardize the safety of your website.          &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Added to this, there are a couple of problems that arise frequently when you use maintenance mode.        &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#common-problems-that-arise-when-using-maintenance-mode"&gt;
  &lt;/a&gt;
  Common Problems That Arise When Using Maintenance Mode
&lt;/h3&gt;

&lt;p&gt;WordPress support forums and other popular forums have a long list of problems under ‘maintenance mode’.&lt;br&gt;&lt;br&gt;
This is not to say maintenance mode is not a good option.&lt;br&gt;&lt;br&gt;
We don’t discourage you from using it.&lt;br&gt;&lt;br&gt;
But we want you to be fully aware of problems that ensue so that you can be fully prepared for them.          &lt;/p&gt;

&lt;p&gt;I’ve listed common problems faced while using maintenance mode along with their solutions:          &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#unable-to-deactivate-maintenance-mode"&gt;
  &lt;/a&gt;
  Unable to deactivate maintenance mode
&lt;/h4&gt;

&lt;p&gt;Many users face this issue where they are unable to bring their sites out of maintenance mode both when using a plugin or the manual method.&lt;br&gt;&lt;br&gt;
The solution to this is quite simple.&lt;br&gt;&lt;br&gt;
This is usually a caching issue which means older content is being served.&lt;br&gt;&lt;br&gt;
You simply need to clear your cache.&lt;br&gt;&lt;br&gt;
Refresh your page and try again.          &lt;/p&gt;

&lt;p&gt;Alternatively, use Incognito mode to check if your website is being displayed correctly to visitors.             &lt;/p&gt;

&lt;p&gt;If the problem persists, you need to contact the plugin developer or seek help in WordPress forums.            &lt;/p&gt;

&lt;p&gt;Read my comprehensive guide on solving &lt;a href="https://sysa.ml/wordpress-stuck-in-maintenance-mode/"&gt;WordPress Stuck in Maintenance Mode&lt;/a&gt; issues.           &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#maintenance-mode-page-is-different-than-what-you-set-up"&gt;
  &lt;/a&gt;
  Maintenance Mode page is different than what you set up
&lt;/h4&gt;

&lt;p&gt;Users also complain that they have set up a maintenance page but a different one is being displayed.&lt;br&gt;&lt;br&gt;
This could be an issue that is specific to the plugin being used.&lt;br&gt;&lt;br&gt;
You can contact the developer to get guidance on how to fix it.         &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#google-still-showing-maintenance-mode-in-serps"&gt;
  &lt;/a&gt;
  Google still showing maintenance mode in SERPs
&lt;/h4&gt;

&lt;p&gt;Another very common issue is that after maintenance mode is deactivated, it still shows up on Google search results.             &lt;/p&gt;

&lt;p&gt;Google crawls and indexes your website’s pages regularly.&lt;br&gt;&lt;br&gt;
You would just need to wait for Google to crawl your website again.           &lt;/p&gt;

&lt;p&gt;If you’re in a hurry, you can request for reindexing using Google Webmasters.          &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#unable-to-access-wpadmin-page-in-maintenance-mode"&gt;
  &lt;/a&gt;
  Unable to access wp-admin page in maintenance mode
&lt;/h4&gt;

&lt;p&gt;There have been instances where users have been locked out of their website after activating maintenance mode.            &lt;/p&gt;

&lt;p&gt;They aren’t able to access the frontend of their site nor the wp-admin login page.         &lt;/p&gt;

&lt;p&gt;The solution to this issue is to use wp-login page.&lt;br&gt;&lt;br&gt;
Some plugins create a new page called wp-login instead of wp-admin. For example, to access your site you would need to use &lt;a href="https://yourdomain.com/wp-login"&gt;https://yourdomain.com/wp-login&lt;/a&gt;.         &lt;/p&gt;

&lt;p&gt;If this doesn’t work, you’ll need to manually disable the plugin.&lt;br&gt;&lt;br&gt;
Go to your hosting &lt;code&gt;account -&amp;gt; cPanel -&amp;gt; File Manager &amp;gt; public_html&lt;/code&gt; folder.         &lt;/p&gt;

&lt;p&gt;Look for a folder named wp-content and inside access the plugins folder.&lt;br&gt;&lt;br&gt;
Find the maintenance mode plugin folder.&lt;br&gt;&lt;br&gt;
Rename this folder to nameofplugin_disable.           &lt;/p&gt;

&lt;p&gt;Now go back to yourdomain.com/wp-admin.&lt;br&gt;&lt;br&gt;
You should be able to log back in.          &lt;/p&gt;

&lt;p&gt;For all other miscellaneous problems related to maintenance mode, it’s best to contact the developer directly or ask for help on the WordPress support forum.&lt;br&gt;&lt;br&gt;
WordPress has a very active community that’s ever ready to help a fellow WordPress user.          &lt;/p&gt;

&lt;p&gt;That brings us to the end of our guide to WordPress maintenance mode.&lt;br&gt;&lt;br&gt;
We’re confident that you are now equipped to use maintenance mode with ease on your site.&lt;br&gt;&lt;br&gt;
Before we leave you, we want to give you one more tip on an alternative to maintenance mode that you can use in certain cases.          &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#an-alternative-to-maintenance-mode-wordpress-staging"&gt;
  &lt;/a&gt;
  An Alternative To Maintenance Mode: WordPress Staging
&lt;/h3&gt;

&lt;p&gt;Maintenance mode is great because you can hide your site while you make changes.&lt;br&gt;&lt;br&gt;
But there are some circumstances where you don’t need maintenance mode at all.&lt;br&gt;&lt;br&gt;
You can make your changes without experiencing any downtime.&lt;br&gt;&lt;br&gt;
And this is made possible through staging environments.         &lt;/p&gt;

&lt;p&gt;Here’s when I recommend you use a staging site instead of maintenance mode:          &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;When you want to change your WordPress theme and test out different themes.&lt;br&gt;&lt;br&gt;
You’ll need to make sure the theme looks and functions the way you want to before you make it live.&lt;br&gt;&lt;br&gt;
Using maintenance mode for this can mean extended downtime that can stretch into days or weeks.           &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When you want to install a new plugin but you want to test its compatibility and functionality.         &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For any unscheduled changes such as finding content errors on your site.        &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When you want to test and run updates that are available on your site.         &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When there’s an error on your site and you need to troubleshoot.&lt;br&gt;&lt;br&gt;
You can create a staging site to troubleshoot the issue there.&lt;br&gt;&lt;br&gt;
In the meantime, you can restore your backup to get your site back to normal for your visitors.           &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Under all these circumstances and more, a staging site comes in handy.&lt;br&gt;&lt;br&gt;
It acts as a WordPress testing environment that enables you to experiment with your site and test out changes.&lt;br&gt;&lt;br&gt;
Only once you’re confident that the changes are working for you, then you can make the changes on your live site.          &lt;/p&gt;

&lt;p&gt;The best part is you don’t have to replicate your work all over again.&lt;br&gt;&lt;br&gt;
You can use a feature called Merge to Live.&lt;br&gt;&lt;br&gt;
This feature is available with all popular plugins like BlogVault and even with some hosting providers.&lt;br&gt;&lt;br&gt;
It pushes the changes you made on the staging site to your live site.          &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h3&gt;

&lt;p&gt;No matter how well we run our websites, there are times when we need to use maintenance mode.&lt;br&gt;&lt;br&gt;
It’s something that’s unavoidable and it’s best to be prepared.            &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remember&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
Always take a backup of your site before installing a plugin, running updates, or making major changes to your site.&lt;br&gt;&lt;br&gt;
Use a staging site when you don’t want downtime.&lt;br&gt;&lt;br&gt;
Keep maintenance mode reserved for unavoidable circumstances.         &lt;/p&gt;

&lt;p&gt;I hope this guide answers all your pressing queries and doubts about maintenance mode.&lt;br&gt;&lt;br&gt;
You can bookmark this guide and come back to it when you need to.&lt;br&gt;&lt;br&gt;
And make sure you follow me on Twitter &lt;a href="https://twitter.com/shoaiybsysa"&gt;@shoaiybsysa&lt;/a&gt; and sign up to my &lt;a href="https://sysa.ml/#newsletter"&gt;newsletter&lt;/a&gt;.        &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Best Sites With High Quality Free Stock Photos</title>
      <author>shoaiyb sysa</author>
      <pubDate>Tue, 25 May 2021 09:33:42 +0000</pubDate>
      <link>https://dev.to/shoaiyb/best-sites-with-high-quality-free-stock-photos-c41</link>
      <guid>https://dev.to/shoaiyb/best-sites-with-high-quality-free-stock-photos-c41</guid>
      <description>&lt;h2&gt;
  &lt;a href="#pixabay"&gt;
  &lt;/a&gt;
  Pixabay
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6tfFVOdw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/pixabay.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6tfFVOdw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/pixabay.png" alt="pixabay"&gt;&lt;/a&gt;      &lt;/p&gt;

&lt;p&gt;&lt;a href="https://pixabay.com" rel="nofollow noreferrer"&gt;Pixabay&lt;/a&gt; offers a large collection of free stock photos, vectors and art illustrations.&lt;br&gt;&lt;br&gt;
All photos are released under Creative Commons CC0.       &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pexels"&gt;
  &lt;/a&gt;
  Pexels
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XVJ9Y1pv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/pexels.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XVJ9Y1pv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/pexels.png" alt="pexels"&gt;&lt;/a&gt;      &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.pexels.com" rel="nofollow noreferrer"&gt;Pexels&lt;/a&gt; provides high quality and completely free stock photos licensed under the Creative Commons Zero (CC0) license.&lt;br&gt;&lt;br&gt;
All photos are nicely tagged, searchable and also easy to discover through their discover pages.        &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#unsplash"&gt;
  &lt;/a&gt;
  Unsplash
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--39Avr89i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/unsplash.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--39Avr89i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/unsplash.jpeg" alt="unsplash"&gt;&lt;/a&gt;         &lt;/p&gt;

&lt;p&gt;&lt;a href="https://unsplash.com" rel="nofollow noreferrer"&gt;Unsplash&lt;/a&gt; offers a large collection of free high-resolution photos and has become one of the best sources for stock images.&lt;br&gt;&lt;br&gt;
The Unsplash team combs through new submissions and features the very best photos on their homepage.&lt;br&gt;&lt;br&gt;
All photos are released for free under the Unsplash license.       &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#burst-by-shopify"&gt;
  &lt;/a&gt;
  Burst (by shopify)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cJtdUTpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/burst.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cJtdUTpX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/burst.jpg" alt="burst"&gt;&lt;/a&gt;        &lt;/p&gt;

&lt;p&gt;&lt;a href="https://burst.shopify.com" rel="nofollow noreferrer"&gt;Burst&lt;/a&gt; is a free stock photo platform for entrepreneurs by Shopify.&lt;br&gt;&lt;br&gt;
The images are both free and royalty-free. (Burst has a cool section of business ideas, with tips and high-resolution images for getting your business started.)        &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#canva"&gt;
  &lt;/a&gt;
  Canva
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wy6_3Lz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/canva.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wy6_3Lz7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/canva.png" alt="canva"&gt;&lt;/a&gt;       &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.canva.com/photos/free/" rel="nofollow noreferrer"&gt;Canva&lt;/a&gt; is an online graphic design tool that also offers free stock photos.&lt;br&gt;&lt;br&gt;
One advantage of using Canva is that you can quickly turn an image into a custom graphic to use on social media or your blog.    &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#crello"&gt;
  &lt;/a&gt;
  Crello
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gyvAOoiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/crello.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gyvAOoiq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/crello.png" alt="crello"&gt;&lt;/a&gt;     &lt;/p&gt;

&lt;p&gt;Similar to Canva, &lt;a href="https://crello.com" rel="nofollow noreferrer"&gt;Crello&lt;/a&gt; is a free graphic design tool by Depositphotos, which has many free images for you to use.      &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#free-images"&gt;
  &lt;/a&gt;
  Free Images
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lz98pTfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/freeimages.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lz98pTfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/freeimages.png" alt="freeimages"&gt;&lt;/a&gt;     &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.freeimages.com" rel="nofollow noreferrer"&gt;Free Images&lt;/a&gt; provides over 300,000 free stock images under its own &lt;a href="https://www.freeimages.com/license" rel="nofollow noreferrer"&gt;license&lt;/a&gt;.&lt;br&gt;&lt;br&gt;
The license allows a very broad range of uses, though it does list several restricted use cases (which are quite common for most free images sites).        &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#kaboompics"&gt;
  &lt;/a&gt;
  Kaboompics
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0e0zmNQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/kaboompics.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0e0zmNQD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/kaboompics.png" alt="kaboompics"&gt;&lt;/a&gt;       &lt;/p&gt;

&lt;p&gt;&lt;a href="https://kaboompics.com" rel="nofollow noreferrer"&gt;Kaboompics&lt;/a&gt; uses its own &lt;a href="https://kaboompics.com/page/license-and-faq" rel="nofollow noreferrer"&gt;license&lt;/a&gt;, which is similar to Creative Commons Zero except that you cannot redistribute its photos.&lt;br&gt;&lt;br&gt;
There are two things that I love about Kaboompics: one, it allows me to search by color, and two, it provides a complementary palette of colors in the photo.      &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stocksnap"&gt;
  &lt;/a&gt;
  Stocksnap
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9v2lZsPh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/stocksnap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9v2lZsPh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/stocksnap.png" alt="stocksnap"&gt;&lt;/a&gt;      &lt;/p&gt;

&lt;p&gt;&lt;a href="https://stocksnap.io" rel="nofollow noreferrer"&gt;Stocksnap&lt;/a&gt; uses the Creative Commons CC0 license so its photos are free to download, edit, and use for both commercial and non-commercial projects.      &lt;/p&gt;

</description>
      <category>stock</category>
      <category>photos</category>
      <category>blogger</category>
      <category>shoaiyb</category>
    </item>
    <item>
      <title>React Hook Form Validation example | react-hook-form 7</title>
      <author>Tien Nguyen</author>
      <pubDate>Tue, 25 May 2021 09:20:32 +0000</pubDate>
      <link>https://dev.to/tienbku/react-hook-form-validation-example-react-hook-form-7-2b9j</link>
      <guid>https://dev.to/tienbku/react-hook-form-validation-example-react-hook-form-7-2b9j</guid>
      <description>&lt;p&gt;In this tutorial, I will show you how to implement React Hook Form Validation and Submit using &lt;a href="https://react-hook-form.com/"&gt;react-hook-form 7&lt;/a&gt; and Bootstrap 4.&lt;/p&gt;

&lt;p&gt;Full Article: &lt;a href="https://bezkoder.com/react-form-validation-hooks/"&gt;https://bezkoder.com/react-form-validation-hooks/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Overview of React Hook Form Validation example&lt;/h2&gt;

&lt;p&gt;We will implement validation for a React Form using &lt;a href="https://react-hook-form.com/"&gt;React Hook Form&lt;/a&gt; 7. The form has:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Full Name: required&lt;/li&gt;
    &lt;li&gt;Username: required, from 6 to 20 characters&lt;/li&gt;
    &lt;li&gt;Email: required, email format&lt;/li&gt;
    &lt;li&gt;Password: required, from 6 to 40 characters&lt;/li&gt;
    &lt;li&gt;Confirm Password: required, same as Password&lt;/li&gt;
    &lt;li&gt;Accept Terms Checkbox: required&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nL8hblvQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etipnegi18ovfr5bc2fg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nL8hblvQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etipnegi18ovfr5bc2fg.png" alt="react-form-validation-hooks-example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some fields could be wrong:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EFB7jp1R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6a8pnxz5g2w2ui30amr9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EFB7jp1R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6a8pnxz5g2w2ui30amr9.png" alt="react-form-validation-hooks-example-submit-error"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Successful Submission will look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KHpZauC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2lbp93nylv3v2jfa0lk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KHpZauC1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z2lbp93nylv3v2jfa0lk.png" alt="react-form-validation-hooks-example-submit"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For instruction and source code, please visit:&lt;br&gt;
&lt;a href="https://bezkoder.com/react-form-validation-hooks/"&gt;https://bezkoder.com/react-form-validation-hooks/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Technology&lt;/h2&gt;

&lt;p&gt;We're gonna use following modules:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;react 17/16&lt;/li&gt;
    &lt;li&gt;bootstrap 4&lt;/li&gt;
    &lt;li&gt;react-hook-form 7&lt;/li&gt;
    &lt;li&gt;yup&lt;/li&gt;
    &lt;li&gt;@hookform/resolvers 2.4.0&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#further-reading"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;p&gt;You can also use the Form Validation in following posts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-hooks-crud-axios-api/"&gt;React Hooks CRUD example with Axios and Web API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-hooks-jwt-auth/"&gt;React Hooks: JWT Authentication (without Redux) example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-hooks-redux-login-registration-example/"&gt;React Hooks + Redux: JWT Authentication example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;More Practice:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-pagination-hooks/"&gt;React Pagination using Hooks example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-hooks-file-upload/"&gt;React Hooks File Upload example with Axios &amp;amp; Progress Bar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-table-example-hooks-crud/"&gt;React Table example: CRUD App | react-table 7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Serverless with Firebase:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-firebase-hooks-crud/"&gt;React Hooks + Firebase Realtime Database: CRUD App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-hooks-firestore/"&gt;React Hooks + Firestore example: CRUD app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fullstack:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-spring-boot-crud/"&gt;React + Spring Boot + MySQL: CRUD example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/spring-boot-react-postgresql/"&gt;React + Spring Boot + PostgreSQL: CRUD example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-spring-boot-mongodb/"&gt;React + Spring Boot + MongoDB: CRUD example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-node-express-mysql/"&gt;React + Node.js + Express + MySQL: CRUD example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bezkoder.com/react-node-express-postgresql/"&gt;React + Node.js + Express + PostgreSQL example&lt;/a&gt;
&lt;a href="https://bezkoder.com/react-redux-mysql-crud/"&gt;React Redux + Node.js + Express + MySQL: CRUD example&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-node-express-mongodb-mern-stack/"&gt;React + Node.js + Express + MongoDB example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/django-react-hooks/"&gt;React + Django + Rest Framework example&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Serverless with Firebase:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-firebase-hooks-crud/"&gt;React Hooks + Firebase Realtime Database: CRUD App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-hooks-firestore/"&gt;React Hooks + Firestore example: CRUD app&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>todayilearned</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Solution: Evaluate Reverse Polish Notation</title>
      <author>seanpgallivan</author>
      <pubDate>Tue, 25 May 2021 09:11:45 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-evaluate-reverse-polish-notation-192l</link>
      <guid>https://dev.to/seanpgallivan/solution-evaluate-reverse-polish-notation-192l</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/evaluate-reverse-polish-notation/discuss/1229403"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-150-medium-evaluate-reverse-polish-notation"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/evaluate-reverse-polish-notation/"&gt;Leetcode Problem #150 (&lt;em&gt;Medium&lt;/em&gt;): Evaluate Reverse Polish Notation&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Evaluate the value of an arithmetic expression in Reverse Polish Notation.&lt;/p&gt;

&lt;p&gt;Valid operators are &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, and &lt;code&gt;/&lt;/code&gt;. Each operand may be an integer or another expression.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that division between two integers should truncate toward zero.&lt;/p&gt;

&lt;p&gt;It is guaranteed that the given RPN expression is always valid. That means the expression would always evaluate to a result, and there will not be any division by zero operation.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;tokens = ["2","1","+","3","*"]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;((2 + 1) * 3) = 9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;tokens = ["4","13","5","/","+"]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;(4 + (13 / 5)) = 6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 3:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;tokens = ["10","6","9","3","+","-11","&lt;em&gt;","/","&lt;/em&gt;","17","+","5","+"]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;((10 * (6 / ((9 + 3) * -11))) + 17) + 5&lt;br&gt;= ((10 * (6 / (12 * -11))) + 17) + 5&lt;br&gt;= ((10 * (6 / -132)) + 17) + 5&lt;br&gt;= ((10 * 0) + 17) + 5&lt;br&gt;= (0 + 17) + 5&lt;br&gt;= 17 + 5&lt;br&gt;= 22&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= tokens.length &amp;lt;= 10^4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;tokens[i]&lt;/code&gt; is either an operator: &lt;code&gt;"+"&lt;/code&gt;, &lt;code&gt;"-"&lt;/code&gt;, &lt;code&gt;"*"&lt;/code&gt;, or &lt;code&gt;"/"&lt;/code&gt;, or an integer in the range &lt;code&gt;[-200, 200]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reverse Polish Notation&lt;/strong&gt; was designed specifically to make computing easier with the more efficient use of a &lt;strong&gt;stack&lt;/strong&gt;. So we can use a &lt;strong&gt;stack&lt;/strong&gt; here to store numbers until they're used, and then each operand will use the top two values of the &lt;strong&gt;stack&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Since the order of the numbers is still important for subtraction and division, we'll have to make sure that the two numbers are processed in their original order, which is the opposite order of the &lt;strong&gt;stack&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;After each successful operation, the result should be pushed back onto the &lt;strong&gt;stack&lt;/strong&gt; until it's used. After iteration is complete, the remaining value in the &lt;strong&gt;stack&lt;/strong&gt; will be our answer, so we should &lt;strong&gt;return stack[0]&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;tokens&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; for the length of the &lt;strong&gt;stack&lt;/strong&gt;, up to &lt;strong&gt;N / 2 + 1&lt;/strong&gt; values&lt;/em&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;or &lt;strong&gt;O(1)&lt;/strong&gt; with the use of an &lt;strong&gt;in-place stack&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Javascript object values can be functions, so we can store the operations directly in an evaluate object as &lt;strong&gt;lambda&lt;/strong&gt; functions.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;evaluate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;~~&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;evalRPN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="nx"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evaluate&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;]())&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;evalRPN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;}:&lt;/span&gt;
                &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;trunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;Set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ops&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashSet&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;(&lt;/span&gt;&lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;evalRPN&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Stack&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Stack&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;contains&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parseInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nf"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nf"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;push&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
            &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pop&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;static&lt;/span&gt; &lt;span class="n"&gt;unordered_set&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;evalRPN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;auto&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;ops&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;stoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"+"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"-"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;stack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Another 100 CSS loaders for your next project</title>
      <author>Temani Afif</author>
      <pubDate>Tue, 25 May 2021 09:02:36 +0000</pubDate>
      <link>https://dev.to/afif/another-100-css-loaders-for-your-next-project-352l</link>
      <guid>https://dev.to/afif/another-100-css-loaders-for-your-next-project-352l</guid>
      <description>&lt;p&gt;Ready for the second set of loaders? Yes, it's again me with another collection of 100 CSS loaders. Now you have a total of 200 different loaders!&lt;/p&gt;

&lt;p&gt;Like the previous one, only &lt;strong&gt;one&lt;/strong&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; per loader.&lt;/p&gt;

&lt;p&gt;Happy loading! 🙃 &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of content
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#the-classic-ii"&gt;The Classic II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-dots-ii"&gt;The Dots II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-hypnotic"&gt;The Hypnotic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-spinner-ii"&gt;The Spinner II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-shuriken"&gt;The Shuriken&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-progress-ii"&gt;The Progress II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-flipping"&gt;The Flipping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-wobbling-ii"&gt;The Wobbling II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-shapes-ii"&gt;The Shapes II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-arcade"&gt;The Arcade&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#the-classic-ii"&gt;
  &lt;/a&gt;
  The Classic II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/oNZwvye?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-dots-ii"&gt;
  &lt;/a&gt;
  The Dots II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/VwpWZBr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-hypnotic"&gt;
  &lt;/a&gt;
  The Hypnotic
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/poewzOz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-spinner-ii"&gt;
  &lt;/a&gt;
  The Spinner II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/yLMXBRL?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-shuriken"&gt;
  &lt;/a&gt;
  The Shuriken
&lt;/h3&gt;

&lt;p&gt;Even "Ninja" Developers need loaders 😉&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/jOBwNeg?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-progress-ii"&gt;
  &lt;/a&gt;
  The Progress II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/JjWJPwN?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-flipping"&gt;
  &lt;/a&gt;
  The Flipping
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/KKWqPJP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-wobbling-ii"&gt;
  &lt;/a&gt;
  The Wobbling II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/wvJewNO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-shapes-ii"&gt;
  &lt;/a&gt;
  The Shapes II
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/wvJewOO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-arcade"&gt;
  &lt;/a&gt;
  The Arcade
&lt;/h3&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/PopjYgx?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#thats-it"&gt;
  &lt;/a&gt;
  That's it!
&lt;/h3&gt;

&lt;p&gt;See you next collection. Yes, there will be another collection with more fancy loaders so stay tuned and don't forget to ❤🦄 This one!&lt;/p&gt;

&lt;p&gt;Until then I invite you to check some of my old collections:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/afif" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jSZolrIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5k2bquNj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/577896/343fde9f-609b-419b-95d1-07d16b320a37.png" alt="afif image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/afif/another-100-underline-overlay-animations-the-extended-css-collection-574c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Another 100 underline/overlay  animations | The extended CSS collection 🥇🥈&lt;/h2&gt;
      &lt;h3&gt;Temani Afif ・ Mar 30 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codepen&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
 

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
    </item>
    <item>
      <title>Difference Between WordPress.org And WordPress.com</title>
      <author>shoaiyb sysa</author>
      <pubDate>Tue, 25 May 2021 08:43:02 +0000</pubDate>
      <link>https://dev.to/shoaiyb/difference-between-wordpress-org-and-wordpress-com-473j</link>
      <guid>https://dev.to/shoaiyb/difference-between-wordpress-org-and-wordpress-com-473j</guid>
      <description>&lt;p&gt;It is a very common thing to confuse WordPress.org and WordPress.com.&lt;br&gt;&lt;br&gt;
Both services may seem similar at a first glance, but in fact, they differ greatly.           &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wordpressorg"&gt;
  &lt;/a&gt;
  WordPress.org
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PKbgiv5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/wordpress.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PKbgiv5m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/wordpress.jpg" alt="wordpressorg"&gt;&lt;/a&gt;           &lt;/p&gt;

&lt;p&gt;WordPress.org is a service where you can get a copy of the WordPress blog software.&lt;br&gt;&lt;br&gt;
In this case, you will need to take care of the hosting service for your website.&lt;br&gt;&lt;br&gt;
You receive full control over the WordPress software and your website; you are limited only by the resources provided with your hosting plan.&lt;br&gt;&lt;br&gt;
WordPress.org offers documentation and a community forum where you can ask for help and find answers to different questions and issues you come across.&lt;br&gt;&lt;br&gt;
Also, you can find applications, plugins, themes for your website.         &lt;/p&gt;

&lt;p&gt;No registration is required with WordPress.org.          &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wordpresscom"&gt;
  &lt;/a&gt;
  WordPress.com
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rwi-503v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/wordpress.com.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rwi-503v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://sysa.ml/assets/images/wordpress.com.webp" alt="wordpresscom"&gt;&lt;/a&gt;          &lt;/p&gt;

&lt;p&gt;WordPress.com is a commercial service where you can host your website for free.&lt;br&gt;&lt;br&gt;
However, different limitations are applied to your account.&lt;br&gt;&lt;br&gt;
While you can create a free website, you also need to pay for upgrades in order to enjoy such perks as:         &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom domain usage
&lt;/li&gt;
&lt;li&gt;Extensive customization of your website
&lt;/li&gt;
&lt;li&gt;HD videos upload
&lt;/li&gt;
&lt;li&gt;Automatic security updates, etc.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to use WordPress.com hosting, you just need to sign up, select your blog name and create your website.&lt;br&gt;&lt;br&gt;
All software and hosting management are powered by WordPress, and you don’t have to worry about it.&lt;br&gt;&lt;br&gt;
Everything is staffed by full-time developers, designers, and support engineers.          &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#compare"&gt;
  &lt;/a&gt;
  Compare
&lt;/h2&gt;

&lt;p&gt;Comparing WordPress.org and WordPress.com.            &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cost"&gt;
  &lt;/a&gt;
  Cost
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;WordPress.org&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
The WordPress.org, CMS can be downloaded for free, but the highest expenses for the website creation and maintenance come from domain registration and hosting service.           &lt;/p&gt;

&lt;p&gt;There are many optional premium themes and plugins which are provided for extra charge, and the price varies a lot.         &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WordPress.com&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
While the Basic WordPress.com plan, which is provided for free, can become rather expensive when it comes to upgrades.&lt;br&gt;&lt;br&gt;
For example:           &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Domain registration:
Starting from $18/year
&lt;/li&gt;
&lt;li&gt;Domain mapping:
$13 (always required for newly registered domains)
&lt;/li&gt;
&lt;li&gt;Domain privacy:
$8/year per domain
&lt;/li&gt;
&lt;li&gt;Premium theme:
From $20
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#maintenance-and-development"&gt;
  &lt;/a&gt;
  Maintenance and Development
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;WordPress.org&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
With WordPress.org, you are fully responsible for your website, in other words, for:           &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installing and setting up your WordPress website.
&lt;/li&gt;
&lt;li&gt;Making backups. Use this guide to learn &lt;a href="https://sysa.ml/backup-wordpress-installation/"&gt;how to back up your WordPress installation&lt;/a&gt;.
&lt;/li&gt;
&lt;li&gt;Regularly updating your themes and plugins.
&lt;/li&gt;
&lt;li&gt;Updating your WordPress version.
&lt;/li&gt;
&lt;li&gt;Keeping your site secure for your visitors and protecting your site against hacker attempts and spam. Check out these useful tips on &lt;a href="https://sysa.ml/improve-wordpress-site-security/"&gt;improving the security of your WordPress website&lt;/a&gt;.
&lt;/li&gt;
&lt;li&gt;Dealing with all issues occurring on the website.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;WordPress.com&lt;/strong&gt;:&lt;br&gt;&lt;br&gt;
WordPress.com maintenance and development of your website are handled by the WordPress team, including breaking after upgrade, issues with plugins and themes, upgrading to the latest versions, backups, etc.          &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;It’s easy to get lost in details when you are not very familiar with something.&lt;br&gt;&lt;br&gt;
Same goes here, If you’re still undecided which platform is the best option for your next website, let’s make things even simpler.       &lt;/p&gt;

&lt;p&gt;So, is it WordPress.org or WordPress.com?         &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;WordPress.org:&lt;br&gt;&lt;br&gt;
Is for website owners who want to be independent.&lt;br&gt;&lt;br&gt;
That means that you build everything on your own from the ground up.&lt;br&gt;&lt;br&gt;
Most importantly, you’re free to install any tools you like and control the overall website functionality.&lt;br&gt;&lt;br&gt;
This is the best choice if you want to be completely on your own.             &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WordPress.com:&lt;br&gt;&lt;br&gt;
Is good for you if you don’t want to get your hands dirty with hosting, third-party tools, and custom website functionality.&lt;br&gt;&lt;br&gt;
You just sign up and get an online space of your own instantly.&lt;br&gt;&lt;br&gt;
The downside is that you won’t be able to customize it much unless you go with an expensive plan.           &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;If you want full control over your site and the best possible options, go with WordPress.org.&lt;br&gt;&lt;br&gt;
If the setup part is what scares you, I recommend Bluehost, a popular host that will install WordPress for you during the checkout. You sign up for a monthly $2.95 and your WordPress site will be ready to use in just a few minutes. I'm always vouching for Bluehost because it’s cheap and basically does all the ugly work for you. Plus, you get a domain name for free.&lt;br&gt;&lt;br&gt;
-- shoaiyb sysa       &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If this post really help you please make sure to follow me on Twitter &lt;a href="https://twitter.com/shoaiybsysa"&gt;@shoaiybsysa&lt;/a&gt; and subscribe to my &lt;a href="https://sysa.ml/#newsletter"&gt;news letter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>guide</category>
      <category>blogging</category>
      <category>tutorials</category>
    </item>
    <item>
      <title>Scoped CSS for React Components with TypeScript</title>
      <author>Dominik Liebler</author>
      <pubDate>Tue, 25 May 2021 08:17:54 +0000</pubDate>
      <link>https://dev.to/domnikl/scoped-css-for-react-components-with-typescript-31a4</link>
      <guid>https://dev.to/domnikl/scoped-css-for-react-components-with-typescript-31a4</guid>
      <description>&lt;p&gt;React applications are being composed of small components that can be used individually and in best case scenario can be reused across multiple applications. But what about the CSS that they need for layouting elements inside them?&lt;/p&gt;

&lt;p&gt;Often you end up inventing a system for it, something like that: you group CSS rules by a class name for each component and everything that is specific to a component goes in there. It's a start but it's not perfect. Soon you start renaming stuff or you want to apply styles from a global perspective.&lt;/p&gt;

&lt;p&gt;Coming from the Vue.js world, I especially liked the approach of &lt;a href="https://vuejs.org/v2/guide/single-file-components.html"&gt;Single File Components&lt;/a&gt; - everything that belongs to that component goes into one file, CSS, HTML and JavaScript or TypeScript and I wanted to have this in React too, so I took of into the world of CSS-in-JS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-modules"&gt;
  &lt;/a&gt;
  CSS Modules
&lt;/h2&gt;

&lt;p&gt;I came to React, looking for Single File Components all over the place and as it turns out, it's not that easy 😔 What I did find though, is &lt;a href="https://github.com/css-modules/css-modules"&gt;CSS Modules&lt;/a&gt; 🥳&lt;br&gt;
It works like this: you import the CSS as a JavaScript module , which have been mapped from your CSS class names and assign those as &lt;code&gt;className&lt;/code&gt; properties in the JSX. I used the npm package &lt;code&gt;typescript-plugin-css-modules&lt;/code&gt; for this. This is how a Component styled with it looks like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styles&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./foo.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;FooComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;className&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myClassName&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Hello, World!&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I still wasn't satisfied with this approach as there were still two files to edit when the component needs to be modified. Then I learned about &lt;a href="https://emotion.sh/"&gt;Emotion&lt;/a&gt; in &lt;a href="https://twitter.com/jlengstorf?"&gt;Jason Lengstorf&lt;/a&gt;'s &lt;a href="https://frontendmasters.com/courses/gatsby/"&gt;Introduction to Gatsby&lt;/a&gt; course on Frontend Masters and it was exactly what I was looking for. I was intruiged 😁&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#emotion-to-the-rescue"&gt;
  &lt;/a&gt;
  Emotion to the rescue
&lt;/h2&gt;

&lt;p&gt;To style React components with emotion, there are several options to choose from depending on your preferences and what you want to achieve. The one I like most as a starting point, is using the &lt;code&gt;css&lt;/code&gt;-template string helper that lets you write CSS like you would in a CSS file. This is a sample component using it to set a &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;background-color&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="cm"&gt;/** @jsxImportSource @emotion/react */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;css&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@emotion/react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Card&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
      &lt;span class="na"&gt;css&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="s2"&gt;`
        width: 100px;
        height: 100px;
        background-color: red;
      `&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      using the css template string helper
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Card&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Really simple, huh? The first line &lt;code&gt;/** @jsxImportSource @emotion/react */&lt;/code&gt; tells the TypeScript compiler, how to resolve the css helper and it took me quite a while to figure it out!&lt;/p&gt;

&lt;p&gt;But it can get quite messy when the component grows and contains more tags than just this one div. For this occasion, you can refactor the component and use styled components like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@emotion/styled&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ListItem&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;li&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;`
  font-weight: bold;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;ListProps&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;ListProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ListItem&lt;/span&gt; &lt;span class="na"&gt;key&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ListItem&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;List&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, &lt;code&gt;ListItem&lt;/code&gt; uses the &lt;code&gt;styled&lt;/code&gt; function to create a styled component that only adds CSS to a &lt;code&gt;li&lt;/code&gt; element and automatically renders its children in it.&lt;/p&gt;

&lt;p&gt;Now I got to the point where I was satisfied. At least until I realized that I wanted to have kind of like a theming, where I would store colors, definitions of borders and such things that I would need over and over again in a central location. Emotion provides a Theming API, why not try that?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#theming"&gt;
  &lt;/a&gt;
  Theming
&lt;/h2&gt;

&lt;p&gt;To start with the theme, I implemented a new class for it and created a new instance of it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Theme&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="nx"&gt;primaryColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Theme&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Theming then works like this: you provide the Theme to your components using a &lt;code&gt;&amp;lt;ThemeProvider&amp;gt;&lt;/code&gt; and access the theme in the actual component using the &lt;code&gt;useTheme&lt;/code&gt; hook provided by &lt;code&gt;@emotion/react&lt;/code&gt;. Here's my App, that does exactly that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ThemeProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@emotion/react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;ThemeProvider&lt;/span&gt; &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;MyComponentWithTheme&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nc"&gt;ThemeProvider&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here is &lt;code&gt;MyComponentWithTheme&lt;/code&gt;, which uses both the Theme and the &lt;code&gt;css&lt;/code&gt; template string helper:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight tsx"&gt;&lt;code&gt;&lt;span class="cm"&gt;/** @jsxImportSource @emotion/react */&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;css&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@emotion/react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useTheme&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@emotion/react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Theme&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;../App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ComponentWithTheme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useTheme&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Theme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;
      &lt;span class="na"&gt;css&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="s2"&gt;`
        width: 100px;
        height: 100px;
        background: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;primaryColor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
      `&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      Component using the Theme provided in App
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;ComponentWithTheme&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Using that, I found a way to write the CSS I need for my components directly in the components. I still need to figure out what parts of the style sheets go into a component or into a global style sheet, but it's a start.&lt;/p&gt;

&lt;p&gt;Of course emotion does a lot more than that (like adding vendor prefixes and stuff) but I am still learning about it and find it very interesting and fun. I am looking forward for your tips and tricks around emotion and CSS-in-JS in common!&lt;/p&gt;

</description>
      <category>react</category>
      <category>css</category>
    </item>
    <item>
      <title>useEffect - react hook</title>
      <author>abhmohan</author>
      <pubDate>Tue, 25 May 2021 07:26:49 +0000</pubDate>
      <link>https://dev.to/abhmohan/useeffect-react-hook-5d4c</link>
      <guid>https://dev.to/abhmohan/useeffect-react-hook-5d4c</guid>
      <description>&lt;p&gt;Hello guys,&lt;/p&gt;

&lt;p&gt;In this article I will explain how does &lt;strong&gt;useEffect&lt;/strong&gt; work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h3&gt;

&lt;p&gt;Before you dive into the article, it is important you understand what react hooks are. If you are new to react hooks, I will strongly recommend to go through the official documentation. Here is the link(&lt;a href="https://reactjs.org/docs/hooks-intro.html"&gt;hooks&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Let's start.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;useEffect&lt;/strong&gt; is a react hook which is used to perform side effects(updating DOM, making asynchronous calls...). It basically accepts two arguments.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;callback function&lt;/li&gt;
&lt;li&gt;dependencies array(which is optional and it actually decides when the callback function be fired)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Below is the syntax of useEffect.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dependency1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dependency2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we can have three scenarios with dependencies array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. No dependency array&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this scenario, the callback gets fired &lt;strong&gt;after the initial rendering and everytime any of the component state changes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Empty dependency array&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this scenario, the callback gets fired &lt;strong&gt;only once after the initial rendering&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. With dependencies&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;dependency1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dependency2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this scenario, the callback gets fired &lt;strong&gt;after the initial rendering and every time any of the dependencies in the dependencies array changes&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Let's try to justify above scenarios.&lt;/p&gt;

&lt;p&gt;Below I have a component MyApp which basically renders couple of buttons. The first button increments the increment value where as the second button decrements the decrement value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;MyApp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setIncrement&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setDecrement&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// useEffect 1, 1st scenario&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;without dependency array&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="c1"&gt;// useEffect 2, 2nd scenario&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;empty dependency array&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;

  &lt;span class="c1"&gt;// useEffect 3, 3rd scenario&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;with dependency/ies&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;decrement&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;incrementCounter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setIncrement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;increment&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;decrementCounter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setDecrement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;decrement&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;incrementCounter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Increment&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;decrementCounter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Decrement&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Also I have 3 &lt;strong&gt;useEffects&lt;/strong&gt; describing the 3 scenarios(discussed above).&lt;/p&gt;

&lt;p&gt;Now let's try to understand what happens when I click different buttons, what gets logged to console and why.&lt;/p&gt;

&lt;p&gt;When the MyApp component is loaded for the first time, we will see&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  0 "without dependency array"
  0 "empty dependency array"
  0 "with dependency/ies"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;logged to the console because we have 3 useEffects and each one is called after the initial rendering.&lt;/p&gt;

&lt;p&gt;Now I click the Increment button. What do you think will be logged to console?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;without dependency array&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What happened here!!!&lt;br&gt;
The increment counter was changed to 1 from 0.That means component state changed. So... &lt;/p&gt;

&lt;p&gt;Callback of &lt;strong&gt;useEffect 1&lt;/strong&gt; was fired. Therefore &lt;strong&gt;1 "without dependencies array"&lt;/strong&gt; was logged to console.&lt;/p&gt;

&lt;p&gt;Callback of &lt;strong&gt;useEffect 2&lt;/strong&gt; was not fired because the dependencies array is an empty one.&lt;/p&gt;

&lt;p&gt;Callback of &lt;strong&gt;useEffect 3&lt;/strong&gt; was not fired because the dependencies array does not include &lt;strong&gt;increment&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Now I click the Decrement button. What should be logged to console?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;without dependency array&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;with dependency/ies&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What happened here!!!&lt;br&gt;
The decrement counter was changed to -1 from 0.That means component state changed. So...&lt;/p&gt;

&lt;p&gt;Callback of the &lt;strong&gt;useEffect 1&lt;/strong&gt; was fired. Therefore &lt;strong&gt;1 "without dependencies array"&lt;/strong&gt; was logged to console.&lt;/p&gt;

&lt;p&gt;Callback of &lt;strong&gt;useEffect 2&lt;/strong&gt; was not fired because the dependencies array is an empty one.&lt;/p&gt;

&lt;p&gt;Callback &lt;strong&gt;useEffect 3&lt;/strong&gt; was fired because the &lt;strong&gt;decrement&lt;/strong&gt; is in the dependencies array. Therefore &lt;strong&gt;-1 "with dependency/ies"&lt;/strong&gt; was logged to console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;So to conclude, we can say the callback function of the useEffect hook is fired based on how and what we supply into the dependencies array.&lt;/p&gt;

&lt;p&gt;That's all for this article. Hope this article was helpful in understanding how the &lt;strong&gt;useEffect&lt;/strong&gt; hook behaves based on the dependencies array.&lt;/p&gt;

&lt;p&gt;Please leave any feedback, comment or suggestion.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
    </item>
    <item>
      <title>CSS ::placeholder and :placeholder-shown</title>
      <author>Suprabha</author>
      <pubDate>Tue, 25 May 2021 07:16:30 +0000</pubDate>
      <link>https://dev.to/suprabhasupi/css-placeholder-and-placeholder-shown-2cpk</link>
      <guid>https://dev.to/suprabhasupi/css-placeholder-and-placeholder-shown-2cpk</guid>
      <description>&lt;p&gt;&lt;span&gt;T&lt;/span&gt;he `:placeholder-shown` CSS pseudo-class represents any `` or `` element that is currently displaying placeholder text.&lt;/p&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"some text"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;"Baloo 2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;cursive&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yaWxGFIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/EHH1pYC.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yaWxGFIi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/EHH1pYC.gif" alt="placeholder shown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In above snippet, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If user has not typed anything then placeholder shown background color will be pink&lt;/li&gt;
&lt;li&gt;When user has typed something then there will be no placeholder shown and the background color will be transparent&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;📝 NOTE: &lt;code&gt;:placeholder-shown&lt;/code&gt; won't work if there will be no placeholder text&lt;/p&gt;

&lt;p&gt;🗓 &lt;b&gt;Example:&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;❌ The above snippet doesn't work&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#placeholdershown-vs-placeholder"&gt;
  &lt;/a&gt;
  :placeholder-shown vs ::placeholder 🔥
&lt;/h3&gt;

&lt;p&gt;We can use &lt;code&gt;:placeholder-shown&lt;/code&gt; to style the input element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, we set &lt;code&gt;color: blue&lt;/code&gt;, but it didn't work. That's because &lt;code&gt;:placeholder-shown&lt;/code&gt; will only target the input itself. But for the actual placeholder text, you have to use the pseudo-element &lt;code&gt;::placeholder&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;::placeholder&lt;/code&gt; pseudo-element can be used to style the placeholder text in &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;::placeholder&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f-ClNjBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/lga0bsF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f-ClNjBN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/lga0bsF.png" alt="placeholder"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you wanted to add styles for empty placeholder, we can pass empty string &lt;code&gt;" "&lt;/code&gt; as placeholder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vdNhg4WW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BE4piBr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vdNhg4WW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/BE4piBr.png" alt="placeholder shown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now, why don't we combine two selector &lt;code&gt;:not&lt;/code&gt; and &lt;code&gt;:placeholder-shown&lt;/code&gt;.&lt;br&gt;
So we can target if the input is not empty then we can apply css.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"some text"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Check with empty!"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;:placeholder-shown&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4AB_VoiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/ybliArD.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4AB_VoiZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/ybliArD.gif" alt="placeholder not shown"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In above snippet, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If the input has value then the &lt;code&gt;background-color&lt;/code&gt; will get applied&lt;/li&gt;
&lt;li&gt;If the input is empty then &lt;code&gt;background-color&lt;/code&gt; not applies&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;📝 NOTE: &lt;code&gt;::placeholder&lt;/code&gt; does not work with &lt;code&gt;:not&lt;/code&gt; selector.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reference"&gt;
  &lt;/a&gt;
  Reference 🧐
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::placeholder"&gt;MDN Doc Placeholder&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:placeholder-shown"&gt;MDN Doc placeholder-shown&lt;/a&gt;&lt;a&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://caniuse.com/css-placeholder-shown"&gt;caniuse - placeholder-shown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;
        🌟 &lt;a href="https://twitter.com/suprabhasupi"&gt; Twitter&lt;/a&gt;
      &lt;/td&gt;
      &lt;td&gt;
        👩🏻‍💻 &lt;a href="https://www.suprabha.me/"&gt; suprabha.me&lt;/a&gt;
      &lt;/td&gt;
&lt;td&gt;
        🌟 &lt;a href="https://www.instagram.com/suprabhasupi/"&gt; Instagram&lt;/a&gt;
      &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

</description>
      <category>css</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Blog Project with Go, Gin, MySQL and Docker - Part 1</title>
      <author>Umesh Chaudhary</author>
      <pubDate>Tue, 25 May 2021 07:13:22 +0000</pubDate>
      <link>https://dev.to/umschaudhary/blog-project-with-go-gin-mysql-and-docker-part-1-3cg1</link>
      <guid>https://dev.to/umschaudhary/blog-project-with-go-gin-mysql-and-docker-part-1-3cg1</guid>
      <description>&lt;h2&gt;
  &lt;a href="#contents"&gt;
  &lt;/a&gt;
  Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#target-audience"&gt;Target Audience&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#learning-objectives"&gt;Learning Objectives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#getting-started"&gt;Getting Started&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#getting-up-hello-world-server"&gt;Getting Up Hello World Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setting-up-docker"&gt;Setting up Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#setting-up-the-database"&gt;Setting up the database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#environment-variables"&gt;Environment Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#docker-compose-file"&gt;Docker Compose file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#wrap-up"&gt;Wrap Up&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#target-audience"&gt;
  &lt;/a&gt;
  Target Audience
&lt;/h2&gt;

&lt;p&gt;This Series doesn't focuses on fundamentals of Go. It focuses on how to build backend services. Indiviuals interested in learning web development with Gin Framework are ideal candidates.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-objectives"&gt;
  &lt;/a&gt;
  Learning Objectives
&lt;/h2&gt;

&lt;p&gt;This Series teaches you the fundamental of building Rest APIs with Go. After completing this series you will know how to do the following : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setup Golang with MySQL and Docker for Local Development&lt;/li&gt;
&lt;li&gt;Gin Framework for CRUD APIs.&lt;/li&gt;
&lt;li&gt;Domain Driven Development&lt;/li&gt;
&lt;li&gt;Dependency Injection with Go&lt;/li&gt;
&lt;li&gt;Authentication with Firebase and so. on&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Go Installed ( version : go1.16.3 linux/amd64 )&lt;/li&gt;
&lt;li&gt;Docker ( version 20.10.6 ) &amp;amp; Docker-compose ( version 1.29.1). &lt;/li&gt;
&lt;li&gt;Prefarrably Linux Machine ( As i will be using linux but any would be fine )&lt;/li&gt;
&lt;li&gt;General Understanding of Restful Services/APIs.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above mentioned versions are installed on my machine.&lt;br&gt;
You can find the full source of the series in this &lt;a href="https://github.com/umschaudhary/hashnode-series"&gt;repository&lt;/a&gt;, feel free to fork it:&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;Let's start by creating a &lt;code&gt;blog&lt;/code&gt; folder in your preferred location. Then initialize a new &lt;a href="https://blog.golang.org/using-go-modules"&gt;Go module&lt;/a&gt; inside &lt;code&gt;blog&lt;/code&gt; folder with following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;go mod init blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command creates a &lt;code&gt;go.mod&lt;/code&gt; file. It will allow you to manage project dependencies. Let's add some dependencies.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;go get github.com/gin-gonic/gin
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will install &lt;a href="https://github.com/gin-gonic/gin"&gt;Gin Framework&lt;/a&gt; and &lt;a href="https://gorm.io/"&gt;Gorm&lt;/a&gt; and create &lt;code&gt;go.sum&lt;/code&gt; file. This file stores info about the dependencies and their versions. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gin&lt;/strong&gt;  is lightweight, well-documented and fast HTTP web framework. The creators claims that Gin is 40 times faster than other similar framework to Gin&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-up-hello-world-server"&gt;
  &lt;/a&gt;
  Getting Up Hello world Server
&lt;/h3&gt;

&lt;p&gt;Create a &lt;code&gt;main.go&lt;/code&gt; file in the root level; open up your favorite editor  and write up the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="s"&gt;"net/http"&lt;/span&gt;
  &lt;span class="s"&gt;"github.com/gin-gonic/gin"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;router&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;//new gin router initialization&lt;/span&gt;
  &lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Hello World !"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;    
  &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="c"&gt;// first endpoint returns Hello World&lt;/span&gt;
  &lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":8000"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c"&gt;//running application, Default port is 8080&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's go through the code in &lt;code&gt;main.go&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;package main&lt;/strong&gt; : Each go file is a package. The main package is always an entry point for gin project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;** import ** : Imports project dependenices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;** func main ** : Main function is triggered whenever you run the application. Inside the function, a new &lt;code&gt;Gin router&lt;/code&gt; is initialized  to the &lt;code&gt;router&lt;/code&gt; variable. A new endpoint &lt;code&gt;/&lt;/code&gt; is set on the router.&lt;br&gt;
*&lt;em&gt;Setting up a route/endpoint requires two things : *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Endpoint&lt;/strong&gt; : It is the path from where data is fetched. For instance, if the visitor wants to get all posts, they’d fetch the &lt;code&gt;/posts&lt;/code&gt; endpoint.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Handler&lt;/strong&gt; : It determines how you provide the data to endpoint. Business logic, like getting/saving data from/to the database, validating the user input, and so on. JSON method of context object is used to send data in JSON format. This method takes an HTTP &lt;a href="https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"&gt;status code&lt;/a&gt; and a JSON response as the parameters.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Use the following command to start the server.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;go run main.go
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you see output similar to the following that means you are good to go.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;[GIN-debug] GET    /                         --&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;main.main.func1 &lt;span class="o"&gt;(&lt;/span&gt;3 handlers&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;[GIN-debug] Environment variable PORT is undefined. Using port :8080 by default
[GIN-debug] Listening and serving HTTP on :8000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;visit &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt; on your browser. You should see &lt;code&gt;{"data":"Hello World !"}&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-docker"&gt;
  &lt;/a&gt;
  Setting Up Docker
&lt;/h3&gt;

&lt;p&gt;The above method of running the server is the Go way of running applications. Let's setup it via the Docker way.&lt;br&gt;
Create a file &lt;code&gt;Dockerfile&lt;/code&gt; at the project root with the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight docker"&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="s"&gt; golang:alpine&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; /app

&lt;span class="k"&gt;WORKDIR&lt;/span&gt;&lt;span class="s"&gt; /app&lt;/span&gt;

&lt;span class="k"&gt;ADD&lt;/span&gt;&lt;span class="s"&gt; go.mod .&lt;/span&gt;
&lt;span class="k"&gt;ADD&lt;/span&gt;&lt;span class="s"&gt; go.sum .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;go mod download
&lt;span class="k"&gt;ADD&lt;/span&gt;&lt;span class="s"&gt; . .&lt;/span&gt;

&lt;span class="k"&gt;RUN &lt;/span&gt;go get github.com/githubnemo/CompileDaemon

&lt;span class="k"&gt;EXPOSE&lt;/span&gt;&lt;span class="s"&gt; 8000&lt;/span&gt;

&lt;span class="k"&gt;ENTRYPOINT&lt;/span&gt;&lt;span class="s"&gt; CompileDaemon --build="go build main.go" --command=./main&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To build the docker container from above &lt;code&gt;Dockerfile&lt;/code&gt; use the below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;docker build -t hello_world :1.0 .
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;containers can be listed out with &lt;code&gt;docker ps -a&lt;/code&gt; on your terminal. You should see containers with other infomation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;CONTAINER ID   IMAGE                    COMMAND                  CREATED          STATUS                      PORTS     NAMES
62cddf7c2659   hello_world:1.0      &lt;span class="s2"&gt;"/bin/sh -c 'Compile…"&lt;/span&gt;   23 minutes ago   Exited &lt;span class="o"&gt;(&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt; 23 minutes ago             gifted_kilby
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To spin up the container use the below command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;docker run -p 8000:8000 hello_world:1.0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;visit &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt; on your browser. You should see &lt;code&gt;{"data":"Hello World !"}&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lets-review-docker-commands-mentioned-above-in-dockerfile-"&gt;
  &lt;/a&gt;
  Let’s Review Docker Commands mentioned above in Dockerfile :
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;FROM&lt;/strong&gt;  :  FROM refers which base image to use for the container. The golang:1.16  image is a Linux-based image which has golang installed and no other additional programs or software.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;WORKDIR&lt;/strong&gt; :  WORKDIR Changes the working directory. In our case to /app. It sets a working directory for subsequent  commands. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ADD&lt;/strong&gt; :  ADD instruction literally copies the file from one location to another. &lt;code&gt;ADD [SOURCE] [DESTINATION]&lt;/code&gt; is the syntax of the command. Similary, there is also a COPY command for similar purpose. Here, we are copying the go.sum and go.mod file first so that we will have all the libraries installed before copying all the files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;RUN&lt;/strong&gt; :  RUN instruction will execute any commands in a new layer on top of the current image and commit the results. The resulting committed image will be used for the next step in the Dockerfile.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;EXPOSE&lt;/strong&gt; : EXPOSE instructs that services running on Docker container is available in port 8000.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ENTRYPOINT&lt;/strong&gt; :  Entrypoint runs the command inside the container once a container is  created from an image. You can only have one Entrypoint instruction in a &lt;code&gt;Dockerfile&lt;/code&gt;. If multiple Entrypoint instructions are used, the last one will be executed. Here, once the container is created, the Entrypoint command will run our golang project.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#setting-up-the-database"&gt;
  &lt;/a&gt;
  Setting Up The Database
&lt;/h3&gt;

&lt;p&gt;MySQL package is needed to connect the database with the application. Install it with following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;go get gorm.io/driver/mysql gorm.io/gorm
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Gorm&lt;/strong&gt;  is fantastic ORM library for Golang.&lt;br&gt;
As connecting database is essential/building part of application. Let's create a folder &lt;code&gt;infrastructure&lt;/code&gt; and &lt;code&gt;db.go&lt;/code&gt; file inside &lt;code&gt;infrastructure&lt;/code&gt;. Let's write some come inside &lt;code&gt;db.go&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;infrastructure&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"fmt"&lt;/span&gt;
    &lt;span class="s"&gt;"os"&lt;/span&gt;
    &lt;span class="s"&gt;"time"&lt;/span&gt;
    &lt;span class="s"&gt;"gorm.io/driver/mysql"&lt;/span&gt;
    &lt;span class="s"&gt;"gorm.io/gorm"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;//Database struct&lt;/span&gt;
&lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="n"&gt;Database&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;DB&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;gorm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DB&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;//NewDatabase : intializes and returns mysql db&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;NewDatabase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="n"&gt;Database&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;USER&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DB_USER"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;PASS&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DB_PASSWORD"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;HOST&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DB_HOST"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;DBNAME&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"DB_NAME"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;URL&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Sprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s:%s@tcp(%s)/%s?charset=utf8&amp;amp;parseTime=True&amp;amp;loc=Local"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;USER&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;PASS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;HOST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;DBNAME&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;gorm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;URL&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;panic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Failed to connect to database!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;fmt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Database connection established"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Database&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;DB&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside &lt;code&gt;NewDatabase&lt;/code&gt; function the following work is being done : &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;database credentials USER, PASS, HOST and DBNAME is fetched from &lt;a href="#environment-variables"&gt;environment variables&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Database url is constructed utilizing environment variables and saving it to &lt;code&gt;URL&lt;/code&gt; variable&lt;/li&gt;
&lt;li&gt;A new &lt;code&gt;mysql&lt;/code&gt; connection is opened with the &lt;code&gt;gorm.Open&lt;/code&gt; method from &lt;code&gt;URL&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Lastly, Database struct is returned with gorm database instance as parameter, which is used later on the application to access the database.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#environment-variables"&gt;
  &lt;/a&gt;
  Environment Variables
&lt;/h3&gt;

&lt;p&gt;There are two type of variables in the project &lt;code&gt;program variables&lt;/code&gt; and &lt;code&gt;environment variables&lt;/code&gt;. Program variables are normal variables that stores values withing the code block or module, where as environment variables is available globally through the project. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#setting-up-environment-variables"&gt;
  &lt;/a&gt;
  Setting Up Environment Variables
&lt;/h4&gt;

&lt;p&gt;Environment variables can be set up using various ways. Here, we will be using &lt;code&gt;.env&lt;/code&gt; file to set them. Create &lt;code&gt;.env&lt;/code&gt; file on the project root and add below variables.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root
&lt;span class="nv"&gt;DB_USER&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;user
&lt;span class="nv"&gt;DB_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Password@123
&lt;span class="nv"&gt;DB_HOST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;db
&lt;span class="nv"&gt;DB_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;3306
&lt;span class="nv"&gt;DB_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;golang
&lt;span class="nv"&gt;SERVER_PORT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;8000
&lt;span class="nv"&gt;ENVIRONMENT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#reading-environment-variables"&gt;
  &lt;/a&gt;
  Reading Environment Variables
&lt;/h4&gt;

&lt;p&gt;Now, let's write code to read &lt;code&gt;.env&lt;/code&gt; file. Create a file &lt;code&gt;env.go&lt;/code&gt; in &lt;code&gt;infrastructure&lt;/code&gt; folder and fill up with following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;package&lt;/span&gt; &lt;span class="n"&gt;infrastructure&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;"log"&lt;/span&gt;
    &lt;span class="s"&gt;"github.com/joho/godotenv"&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;//LoadEnv loads environment variables from .env file&lt;/span&gt;
&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;LoadEnv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;godotenv&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;".env"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="no"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;log&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Fatalf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"unable to load .env file"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install godotenv package by following command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;go get github.com/joho/godotenv
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;*&lt;em&gt;In order to load &lt;code&gt;.env&lt;/code&gt; file and database we need to edit &lt;code&gt;main.go&lt;/code&gt; as below *&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;func&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="n"&gt;router&lt;/span&gt; &lt;span class="o"&gt;:=&lt;/span&gt; &lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Default&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;GET&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;infrastructure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LoadEnv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  &lt;span class="c"&gt;//loading env&lt;/span&gt;
        &lt;span class="n"&gt;infrastructure&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NewDatabase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c"&gt;//new database connection&lt;/span&gt;
        &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;StatusOK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;gin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"data"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Hello World !"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;router&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;":8000"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#docker-compose-file"&gt;
  &lt;/a&gt;
  Docker Compose file
&lt;/h3&gt;

&lt;p&gt;We need docker compose for defining and running multi-container Docker applications. In our case Database and our Gin application. Create a file &lt;code&gt;docker-compose.yml&lt;/code&gt; at project level and fill up with following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;3'&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;db&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mysql/mysql-server:5.7&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;3305:3306"&lt;/span&gt;
    &lt;span class="na"&gt;environment&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MYSQL_USER=${DB_USER}"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MYSQL_PASSWORD=${DB_PASSWORD}"&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;MYSQL_DATABASE=${DB_NAME}"&lt;/span&gt;   
  &lt;span class="na"&gt;web&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;build&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;.&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;8000:8000"&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;.:/app"&lt;/span&gt;
    &lt;span class="na"&gt;depends_on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;db&lt;/span&gt;
    &lt;span class="na"&gt;links&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;db:database"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let’s review terms mentioned inside compose file.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;version ‘3’&lt;/strong&gt;: Docker compose version, Latest is 3.7&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;services&lt;/strong&gt;: The services section defines all the different containers that are to be created. We have two services namely, &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;db&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;web&lt;/strong&gt;: This is the name of our Gin app service. It can be anything. Docker Compose will create containers with this name.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;build&lt;/strong&gt;: This clause specifies the Dockerfile location. &lt;code&gt;.&lt;/code&gt; represents the current directory where the docker-compose.yml file is located and Dockerfile is used to build an image and run the container from it. We can also enter a path to Dockerfile there.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;ports&lt;/strong&gt;: The ports clause is used to map or expose the container ports to the host machine. Here mapping port &lt;code&gt;"8000:8000"&lt;/code&gt; , so that we can access our services on &lt;code&gt;8000&lt;/code&gt; port of host machine.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;volumes&lt;/strong&gt;: Here, we are attaching our code files directory to the containers, ./app directory so that we don’t have to rebuild the images for every change in the files. This will also help in auto-reloading the server when running in debug mode.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;links&lt;/strong&gt;: Links literally links one service to another. Here, we are linking the database container to the web container, so that our web container can reach the database in the bridge network. (Networking alert !!). Please if you want to learn about network in docker in detail do refer to : Network containers  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;image&lt;/strong&gt;: If we don’t have a Dockerfile and want to run a service directly using an already built image, we can specify the image location using the ‘image’ clause. Compose will pull the image and fork a container from it. In our case We mentioned mysql/mysql-server:5.7 to our database service&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;environment&lt;/strong&gt;: Any environment variable that needs to be set up in the container can be created using the ‘environment’ clause.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;   environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The value &lt;code&gt;${MYSQL_ROOT_PASSWORD}&lt;/code&gt; and other variables are read from &lt;code&gt;.env&lt;/code&gt;.&lt;br&gt;
You are now all set to spin up the containers. Start build and run with the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; docker-compose up --build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you see something like below on your terminal that means, you have server running up:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="go"&gt;db_1   | 2021-05-24T09:18:02.841094Z 0 [Note] Event Scheduler: Loaded 0 events
db_1   | 2021-05-24T09:18:02.841370Z 0 [Note] mysqld: ready for connections.
db_1   | Version: '5.7.34'  socket: '/var/lib/mysql/mysql.sock'  port: 3306  MySQL Community Server (GPL)
web_1  | 2021/05/24 09:18:06 Running build command!
web_1  | 2021/05/24 09:18:17 Build ok.
web_1  | 2021/05/24 09:18:17 Restarting the given command.
web_1  | 2021/05/24 09:18:17 stdout: [GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.
web_1  | 2021/05/24 09:18:17 stdout:
web_1  | 2021/05/24 09:18:17 stdout: [GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
web_1  | 2021/05/24 09:18:17 stdout:  - using env:      export GIN_MODE=release
web_1  | 2021/05/24 09:18:17 stdout:  - using code:     gin.SetMode(gin.ReleaseMode)
web_1  | 2021/05/24 09:18:17 stdout:
&lt;/span&gt;&lt;span class="gp"&gt;web_1  | 2021/05/24 09:18:17 stdout: [GIN-debug] GET    /                         --&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;main.main.func1 &lt;span class="o"&gt;(&lt;/span&gt;3 handlers&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="go"&gt;web_1  | 2021/05/24 09:18:17 stdout: [GIN-debug] Listening and serving HTTP on :8000
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Navigate to &lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt; and check on terminal,  &lt;code&gt;Database connection established&lt;/code&gt; should be printed on standard output.&lt;/p&gt;

&lt;p&gt;The repository of this series can be found &lt;a href="https://github.com/umschaudhary/hashnode-series"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap Up
&lt;/h2&gt;

&lt;p&gt;That's it for part 1 of the series.&lt;br&gt;
In the next part we will be working on : &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Adding models (structs) to the application&lt;/li&gt;
&lt;li&gt;Adopting Domain Driven Development pattern&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to follow me to get the update for the next part or subscribe so that you never miss my upcoming articles. &lt;/p&gt;

&lt;p&gt;Thank you !!&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>docker</category>
      <category>go</category>
      <category>mysql</category>
    </item>
    <item>
      <title>Build a COVID-19 Tracker Application using HTML,CSS and JavaScript [interesting features included]</title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 25 May 2021 07:07:43 +0000</pubDate>
      <link>https://dev.to/thenerdydev/build-a-covid-19-tracker-application-using-html-css-and-javascript-interesting-features-included-23ld</link>
      <guid>https://dev.to/thenerdydev/build-a-covid-19-tracker-application-using-html-css-and-javascript-interesting-features-included-23ld</guid>
      <description>&lt;p&gt;Hey everyone 👋🏻,&lt;/p&gt;

&lt;p&gt;In this article, I will show you how you can make a &lt;strong&gt;COVID-19&lt;/strong&gt; Tracker Application with interesting features. To learn how you can create one, check the video provided down below. You can also have a look at the live link of the project that we make in this video.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#images"&gt;
  &lt;/a&gt;
  Images
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D3amNX_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dk34v9h3zudzo554vv11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D3amNX_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dk34v9h3zudzo554vv11.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ezipn3kX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lxp4ldumdhnc8qpmn1dq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ezipn3kX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lxp4ldumdhnc8qpmn1dq.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Clustering of points based on the countries and each cluster will represent a set of locations within it that are prone to COVID19. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Reverse Geocoding using Latitude and Longitude to get the place name and getting the number of deaths and number of confirmed cases for each location that is present within the country. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Live Link&lt;/strong&gt;: &lt;a href="https://covid2019-tracker.netlify.com/"&gt;https://covid2019-tracker.netlify.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Learn how to make one with same features in this video: &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lX0vHaqtk6M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;👉🏻 &lt;strong&gt;PS&lt;/strong&gt; : I am working on a &lt;strong&gt;BRAND&lt;/strong&gt; new &lt;strong&gt;FREE&lt;/strong&gt;- &lt;strong&gt;Web Developer Full Course&lt;/strong&gt; on YouTube , check the below article to know more about the topics that we cover in this course:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Apr 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;👉🏻 Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Follow me on:&lt;br&gt;
👉 Twitter: &lt;a href="https://twitter.com/thenerdydev"&gt;https://twitter.com/thenerdydev&lt;/a&gt;&lt;br&gt;
👉 YouTube: &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Understanding Promise.all, Promise.race and Promise.allSettled </title>
      <author>The Nerdy Dev</author>
      <pubDate>Tue, 25 May 2021 07:01:41 +0000</pubDate>
      <link>https://dev.to/thenerdydev/understanding-promise-all-promise-race-and-promise-allsettled-2g1g</link>
      <guid>https://dev.to/thenerdydev/understanding-promise-all-promise-race-and-promise-allsettled-2g1g</guid>
      <description>&lt;p&gt;Hey everyone 👋🏻,&lt;/p&gt;

&lt;p&gt;In this article, let us discuss some very important methods that we have in the Promise API - &lt;strong&gt;Promise.all&lt;/strong&gt;,&lt;strong&gt;Promise.allSettled&lt;/strong&gt;, &lt;strong&gt;Promise.race&lt;/strong&gt;. &lt;br&gt;
So let's start with &lt;strong&gt;Promise.all&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#promiseall"&gt;
  &lt;/a&gt;
  Promise.all
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Promise.all()&lt;/strong&gt; method takes an &lt;em&gt;iterable of promises&lt;/em&gt; as an input, and returns a single Promise that resolves to an array of the results of the input promises. This returned promise will resolve when all of the input's promises have resolved, or if the input iterable contains no promises. It rejects immediately upon any of the input promises rejecting or non-promises throwing an error, and will reject with this first rejection message / error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKxWhrzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0iwykriw2238hzwsoqp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZKxWhrzi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s0iwykriw2238hzwsoqp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/8urrd"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#promiseallsettled"&gt;
  &lt;/a&gt;
  Promise.allSettled
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Promise.allSettled()&lt;/strong&gt; method returns a promise that resolves after all of the given promises have either fulfilled or rejected, with an array of objects that each describes the outcome of each promise.&lt;/p&gt;

&lt;p&gt;It is typically used when you have multiple asynchronous tasks that are not dependent on one another to complete successfully, or you'd always like to know the result of each promise.&lt;/p&gt;

&lt;p&gt;In comparison, the Promise returned by Promise.all() may be more appropriate if the tasks are dependent on each other / if you'd like to immediately reject upon any of them rejecting.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uqx6jyo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqszxmvdljcz817uhorj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uqx6jyo_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jqszxmvdljcz817uhorj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/6svwn"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#promiserace"&gt;
  &lt;/a&gt;
  Promise.race
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;Promise.race()&lt;/strong&gt; method returns a promise that fulfills or rejects as soon as one of the promises in an iterable fulfills or rejects, with the value or reason from that promise.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s30sCUZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abqfz4jai1fiqqobk206.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s30sCUZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/abqfz4jai1fiqqobk206.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/zol1c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;So this is it for this article, I do have a video that covers the same with a lot of interesting examples, so feel free to check that : &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yVwukhqoThg"&gt;
&lt;/iframe&gt;
 &lt;/p&gt;

&lt;p&gt;If you are looking to learn Web Development, I have curated a &lt;strong&gt;FREE&lt;/strong&gt; course for you on my YouTube Channel, check the below article :&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/2021-web-developer-full-course-html-css-javascript-node-js-and-mongodb-27pb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;(2021) - Web Developer Full Course : HTML, CSS, JavaScript, Node.js and MongoDB&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Apr 28 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#html&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#node&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;If you have spare 2 hours, then utilize them by creating these &lt;strong&gt;10 JavaScript Projects in under 2 Hours&lt;/strong&gt; &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenerdydev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvgjnxQX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j2i8W0Wf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/297820/e861379b-e75a-48e5-bc39-44b3e940c086.png" alt="thenerdydev image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenerdydev/10-javascript-projects-in-2-hours-3p1c" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 JavaScript Projects in 2 Hours&lt;/h2&gt;
      &lt;h3&gt;The Nerdy Dev ・ Oct 26 '20 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;👉🏻 Follow me on Twitter : &lt;a href="https://twitter.com/The_Nerdy_Dev"&gt;https://twitter.com/The_Nerdy_Dev&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;👉🏻 Check out my YouTube Channel : &lt;a href="https://youtube.com/thenerdydev"&gt;https://youtube.com/thenerdydev&lt;/a&gt; &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>100daysofcode</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
