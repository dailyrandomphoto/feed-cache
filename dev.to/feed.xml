<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Redux 101</title>
      <author>Rawan Eltobgy</author>
      <pubDate>Fri, 18 Dec 2020 22:17:40 +0000</pubDate>
      <link>https://dev.to/rawaneltobgy/redux-101-a5e</link>
      <guid>https://dev.to/rawaneltobgy/redux-101-a5e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#whats-redux" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What's Redux?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Redux is a predictable state management library designed to help you write JavaScript apps that behave consistently across client, server, and native environments and are easy to test.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-think-about-using-redux" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why should you think about using Redux?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;According to Redux official docs:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Redux helps you manage "global" state - state that is needed across many parts of your application.&lt;/p&gt;

&lt;p&gt;The patterns and tools provided by Redux make it easier to understand when, where, why, and how the state in your application is being updated, and how your application logic will behave when those changes occur. Redux guides you towards writing code that is predictable and testable, which helps give you confidence that your application will work as expected."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-problem-redux-trying-to-solve" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is the problem Redux trying to solve?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;The problem Redux wanted to solve is &lt;strong&gt;predictable state updates&lt;/strong&gt; as knowing where and why the state changes and having a "single source of truth" can be an advantage.&lt;/p&gt;

&lt;p&gt;Redux allows you to debug the application easily, how? &lt;br&gt;
by separating the UI layer away from the data, that helps you to be able to understand what is going with the application at all times.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-are-redux-main-principles" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What are Redux main principles?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;We can summarize the intent behind Redux's design in three core concepts:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eHkkRggE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/i9xda1s5bhi0z42ebu7f.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eHkkRggE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/i9xda1s5bhi0z42ebu7f.jpeg" alt="One-Truth"&gt;&lt;/a&gt;&lt;br&gt;
1.&lt;strong&gt;Single Source of Truth&lt;/strong&gt;&lt;br&gt;
Everything that changes in the app (data, UI)state is contained in a single object (*state tree/store *)&lt;/p&gt;

&lt;p&gt;The initial state of the store is up to you but it's typically an &lt;strong&gt;Object&lt;/strong&gt; -like a model- and it doesn't need a setter in order to set it initially.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#store" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Store:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;An object that holds the whole state tree of the app, it has a few methods on it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getState()&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dispatch(action)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;subscribe(listener)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;replaceReducer(nextReducer)&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will talk more about the store and its methods in later on.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-create-your-redux-store" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;How to create your redux store?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Pass your root reducer function to createStore, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const userReducer = function(state = [], action) {
  if (action.type === 'ADD_USER') {
    var newState = state.concat([action.user]);
    return newState;
  }
  return state;
}
const store = createStore(users, ['Use Redux'])
store.dispatch({
  type: 'ADD_USER',
  user: {name: 'Rawan', language: 'EN'}
})
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;&lt;code&gt;createStore(reducer, [preloadedState], [enhancer])&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;We would only now talk about the "preloadedState" and we would explain the reducer later on.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;em&gt;[preloadedState]:&lt;/em&gt;&lt;/em&gt; the application's initial state.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s----BTdy-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hxcyw1mmcl8b0v9fik5b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s----BTdy-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hxcyw1mmcl8b0v9fik5b.jpg" alt="Read-only"&gt;&lt;/a&gt;&lt;br&gt;
2.&lt;strong&gt;State is read-only&lt;/strong&gt;&lt;br&gt;
State-Tree is read-only and the only way to change the state (&lt;em&gt;send data from your application to your Redux store&lt;/em&gt;) is to &lt;em&gt;dispatch&lt;/em&gt; an &lt;strong&gt;&lt;em&gt;action&lt;/em&gt;&lt;/strong&gt;, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const action = {
  type: 'ADD_USER',
  user: {name: 'Rawan', language: 'EN'}
};

store.dispatch(action);
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#what-does-it-mean-to-dispatch-an-action" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What does it mean to dispatch an action?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You can think of dispatching actions as "triggering an event" in the application. Something happened, and we want the store to know about it.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#action" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Action:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Is a plain JS object describing the change, with a type field to indicate the type of action to be performed.&lt;br&gt;
The type field should be a descriptive string, in the format of "domain/eventName" like &lt;em&gt;" users/userLogin"&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;An action object can have other fields with additional information about what happened. We call that a "payload".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const userLoginAction = {
  type: 'users/USER_LOGIN',
   payload: {
    username: "Adam",
    password: "pass1234"
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As you can see we declared the action as an object that has a type and payload.&lt;/p&gt;

&lt;p&gt;3.&lt;strong&gt;Changes are made with pure functions (Reducers)&lt;/strong&gt;&lt;br&gt;
To specify how the state tree is transformed by dispatched action, we write pure functions called &lt;strong&gt;Reducers&lt;/strong&gt; to do so.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#pure-function" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Pure function:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;Is a function which, given the same input, will always return the same output (state) and Its return value depends solely on the values of its parameters. &lt;br&gt;
&lt;em&gt;for example:&lt;/em&gt; If you pass 1 and 4 to a summation function, you’ll always get 5.&lt;/p&gt;

&lt;p&gt;Also, the pure function should have no side-effects like: &lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#mutating-your-input-network-calls-changing-the-filesystem-fs-querying-the-dom-setting-an-async-timer-modifying-some-state-that-exists-outside-of-a-function-or-mutating-arguments-to-a-function-generating-random-numbers-or-unique-random-ids-such-as-mathrandom-or-datenow-etc" class="anchor"&gt;
  &lt;/a&gt;
  &lt;em&gt;Mutating your input, Network calls, Changing the filesystem (fs), Querying the DOM, Setting an async timer, Modifying some state that exists outside of a function, or mutating arguments to a function, generating random numbers or unique random IDs (such as Math.random() or Date.now()) ...etc&lt;/em&gt;
&lt;/h5&gt;

&lt;h4&gt;
  &lt;a href="#reducer" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Reducer:&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;A reducer takes in the &lt;strong&gt;current state&lt;/strong&gt; and an &lt;strong&gt;action&lt;/strong&gt; object as arguments and can only modify the state by returning a new state.&lt;/p&gt;

&lt;p&gt;and as redux docs state:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You can think of a reducer as an event listener that handles events based on the received action (event) type.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Reducers have 3 important rules:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Should only calculate the new state value based on the state and action arguments.&lt;/li&gt;
&lt;li&gt;They are not allowed to modify the existing state. &lt;/li&gt;
&lt;li&gt;They can only make immutable updates, by copying the existing state and making changes to the copied values.
They must not do any asynchronous logic, calculate random values, or cause other "side effects".&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you can see, the rules of reducer match those of a pure function, but why should we follow these rules? &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Code predictability, when a function's output is only calculated from the input arguments, it's easier to understand how that code works and to test it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If a function modifies other values, including its arguments(( the current state, action )), that can change the way the application works unexpectedly. This can be a common source of bugs, such as "I updated my state, but now my UI isn't updating when it should!"&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Some of the Redux DevTools capabilities depend on having your reducers follow these rules correctly.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#in-conclusion" class="anchor"&gt;
  &lt;/a&gt;
  &lt;strong&gt;In Conclusion,&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Redux stores all the app state in one place which is a single source of truth called "store", in order to change the state, components can "dispatch"  an action  to  change the store change, then the components that need to be aware of state changes can “subscribe” to the store to get the state change, as shown:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oe7bIZhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/iet8xz2spiegjjndxz4g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oe7bIZhb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/iet8xz2spiegjjndxz4g.png" alt="Redux-StateManagment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Finally, here's a brief summary of what happens using redux:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wmgj5KaK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wpspfkmdzz7wvimro2zu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wmgj5KaK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/wpspfkmdzz7wvimro2zu.png" alt="Redux-Flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it for this article, this is just an intro to redux main concepts, I hope you learned something :)&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://redux.js.org/"&gt;https://redux.js.org/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>redux</category>
      <category>javascript</category>
    </item>
    <item>
      <title>High reusability with high order components!</title>
      <author>Christian Ipanaque</author>
      <pubDate>Fri, 18 Dec 2020 21:54:12 +0000</pubDate>
      <link>https://dev.to/chrisipanaque/high-reusability-with-high-order-components-j0k</link>
      <guid>https://dev.to/chrisipanaque/high-reusability-with-high-order-components-j0k</guid>
      <description>&lt;p&gt;You have launched the best React application in the world, your users love it, but as the skilled software engineer that you are, you notice that you have created too many components that have similar functionality, resulting in a lot of duplicate code. It is now time to use one of the most powerful patterns in React, HOCs (high order components).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/glmRyiSI3v5E4/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/glmRyiSI3v5E4/giphy.gif" alt="what?"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The purpose of a HOC is to enhance a given component with shared functionality and then returns a new component. This reusable HOC component is used to avoid creating too many similar components with that same enhanced functionality. It also improves the code of your application to become more extendable as you hire new engineers for your team to add new features for your users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/2aAcLrYtiX8YM/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/2aAcLrYtiX8YM/giphy.gif" alt="yay!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To help you identify opportunities to remove duplicate code in your application, we'll create an example HOC that will enhance its input components with a common shared functionality, toggling. The toggling functionality is useful in the following scenarios:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Displaying/hiding a component&lt;/li&gt;
&lt;li&gt;Collapsing/expanding a list of components&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this post we will using the toggling functionality to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Toggle between a text and an input field. This will allow the user to toggle between editing and displaying a post title&lt;/li&gt;
&lt;li&gt;Toggle between collapsed/expanded list&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both of these cases need the same toggling functionality. We first implement the logic of toggling once when creating the HOC, and reuse this new HOC as many times as we want to create new components that will take advantage of using that same logic.&lt;/p&gt;




&lt;p&gt;Lets start by creating the new HOC with the name &lt;code&gt;withToggle&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// withToggle.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setToggleStatus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setToggleStatus&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prevToggleStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;prevToggleStatus&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;What this HOC does is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It accepts a Component as an input&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It returns a component that has a toggleStatus state with an initial value of false, and toggle function that is used to update the toggleStatus state&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It returns the given Component input with two additional props&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;toggleStatus&lt;/li&gt;
&lt;li&gt;toggle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and a deconstructured props that enables us to pass any additional props from the user.&lt;/p&gt;

&lt;p&gt;Overall this simple HOC returns the same component input but with two additional props, a boolean and a function to update that boolean.&lt;/p&gt;




&lt;p&gt;Lets now use this HOC to implement our first use case:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ViewEditToggle.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./withToggle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ViewEditToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt; : &amp;lt;p&amp;gt;{title}&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cancel&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Edit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ViewEditToggle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;When the toggleStatus state is updated to true, we display an input field and if false we display a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tag containing the title prop.&lt;/p&gt;

&lt;p&gt;The toggle prop is passed in to the onClick handler of the button, which allows us to toggle the toggleStatus state when we click the button.&lt;/p&gt;

&lt;p&gt;This example can be used to update the value of a post title. The user would click the toggle button and write a new value for the post title. The functionality to handle the change of the input and to submit a new value, can be achieved by creating an additional HOC.&lt;/p&gt;

&lt;p&gt;Also, notice that we are exporting the &lt;code&gt;withToggle&lt;/code&gt; function with the &lt;code&gt;ViewEditToggle&lt;/code&gt; component as its input, and when we render &lt;code&gt;ViewEditToggle&lt;/code&gt; it will get its initial toggling props from the &lt;code&gt;withToggle&lt;/code&gt; HOC.&lt;/p&gt;

&lt;p&gt;We can now use this component anywhere within our codebase with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ViewEditToggle&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My first post&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;p&gt;Lets now use this HOC again to implement our second use case:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// CollapseExpand.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./withToggle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;CollapseExpand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;List&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Collapse&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Expand&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;))}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;CollapseExpand&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;As with the first use case, the CollapseExpand component gets enhanced with the toggleStatus prop and the toggle function to achieve the toggling functionality.&lt;/p&gt;

&lt;p&gt;We can now use this component anywhere within our codebase with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Angular&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CollapseExpand&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#control-props" class="anchor"&gt;
  &lt;/a&gt;
  Control props
&lt;/h2&gt;

&lt;p&gt;Lets add a controller prop &lt;code&gt;initialToggleStatus&lt;/code&gt; to control the initialization of the toggleStatus state if a user needs to have the list initially expanded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// withToggle.js&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;withToggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;initialToggleStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setToggleStatus&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;initialToggleStatus&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setToggleStatus&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;prevToggleStatus&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;prevToggleStatus&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggleStatus&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{...&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If we pass the initialToggleStatus prop to the CollapseExpand component, we can now set the initial value of toggleStatus:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Vue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Angular&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;React&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CollapseExpand&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;initialToggleStatus&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;a href="https://i.giphy.com/media/3oxHQwe86QN6TMOEEw/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3oxHQwe86QN6TMOEEw/giphy.gif" alt="done!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>hoc</category>
      <category>reusability</category>
    </item>
    <item>
      <title>The Survival Guide to the #100DaysOfHardware Challenge</title>
      <author>Fabian Hinsenkamp</author>
      <pubDate>Fri, 18 Dec 2020 20:51:44 +0000</pubDate>
      <link>https://dev.to/hinsencamp/the-survival-guide-to-the-100daysofhardware-challenge-1ph4</link>
      <guid>https://dev.to/hinsencamp/the-survival-guide-to-the-100daysofhardware-challenge-1ph4</guid>
      <description>&lt;p&gt;Let's be honest, starting to learning about electronics, microcontrollers and hardware can be very hard, especially with a lot of experience in Software- but none in Hardware development.  &lt;/p&gt;

&lt;p&gt;I personally never managed to get a grip on hardware topics at all, not till I started this challenge…&lt;/p&gt;

&lt;p&gt;Actually, about &lt;strong&gt;80% of people fail&lt;/strong&gt; in the attempt to pickup a meaningful new habit (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/2980864/"&gt;source&lt;/a&gt;). The main reasons are, &lt;strong&gt;lack of accountability, company and a clear path to success&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;It's most often a lonely battle we fight, trying to keep ourselves accountable for achieving a not clearly defined goal. This makes it just too easy to slip.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To overcome the known pattern of self-deception, I created the #100DaysOfHardware challenge and this survival guide!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The guide is builds-up on my condensed learnings from my 100 days long journey into the fascinating world of hardware! I hope to encourage you to start your own journey and to provide enough resources and guidance to help you successfully complete it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of%C2%A0content" class="anchor"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#How-does-the-#100DaysOfHardware-Challenge-work?"&gt;How does the #100DaysOfHardware Challenge work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#The-Origin?"&gt;The Origin?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Why-join-this-public-Challenge?"&gt;Why join this public Challenge?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Who-should-join-the-Challenge?"&gt;Who should join the Challenge?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-to-find-Time-in-your-Daily-Routine?"&gt;How to find Time in your Daily Routine?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-to-join-the-Challenge?"&gt;How to join the Challenge?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#What-Hardware-do-I-need-to-buy-for-the-Challenge?"&gt;What hardware do I need to buy for the Challenge?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-to-Structure-the-Challenge?"&gt;How to Structure the Challenge?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#What-to%20learning-about-Electronics?"&gt;What to learning about Electronics? (Day 0–30)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#What-to-learning-about-Arduino?"&gt;What to learning about Arduino? (Day 31–50)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-to-build-your-own-Projects?"&gt;How to build your own Projects? (Day 51–100)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-does-the-100daysofhardware-challenge-work" class="anchor"&gt;
  &lt;/a&gt;
  How does the #100DaysOfHardware Challenge work? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The rules of #100DaysOfHardware are very simple. Each Day for &lt;br&gt;
100 Days, you do:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Learn about electronics and hardware for at least one hour.&lt;/li&gt;
&lt;li&gt;Tweet your progress with the hashtag: &lt;a href="https://twitter.com/search?q=%23100Daysofhardware"&gt;#100DaysOfHardware&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Reach out to someone from the maker community on Twitter.&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;
  &lt;a href="#the-origin" class="anchor"&gt;
  &lt;/a&gt;
  The Origin &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;The #100DaysOfHardware challenge originates from my personal desire to learn a lot about electronics and hardware, fast.&lt;br&gt;
Why?&lt;/p&gt;

&lt;p&gt;I got the opportunity to work for Microsoft at the intersection of software and hardware development. I knew taking the offer, would mean to enter a whole new world. Even though, being a software engineer by trade, I never touched any electronics or even an Arduino microcontroller before. I really had to start at zero.&lt;/p&gt;

&lt;p&gt;So, to make myself stick to the plan, I went for the battle-proven "100 days of x" challenge format, hopping for the magic of a public commit to carry me on my journey.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FhtvzQGZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/tweet_video_thumb/EcQ6IVdXkAAi2v1.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Today, I'm launching the very first &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt; challenge! 😎 &lt;br&gt;&lt;br&gt;Find new &lt;a href="https://twitter.com/hashtag/tutorials"&gt;#tutorials&lt;/a&gt; about &lt;a href="https://twitter.com/hashtag/electronics"&gt;#electronics&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/microcontrollers"&gt;#microcontrollers&lt;/a&gt; and &lt;a href="https://twitter.com/hashtag/IoT"&gt;#IoT&lt;/a&gt; on &lt;br&gt;&lt;br&gt;&lt;a href="https://t.co/FbLatnbw3y"&gt;100daysofhardware.com&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:06 PM - 06 Jul 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1280216487265959936" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1280216487265959936" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      13
      &lt;a href="https://twitter.com/intent/like?tweet_id=1280216487265959936" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      36
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;The format is extremely popular, since it was invented in 2016 by &lt;a href="https://twitter.com/ka11away"&gt;Alexander Kallaway&lt;/a&gt;, thousands of people have successfully learned how to code, exercise or mediate.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#why-join-this-public-challenge" class="anchor"&gt;
  &lt;/a&gt;
  Why join this public Challenge? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;To me, three main benefit of this kind of learning challenge stood out&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-increased-accountability" class="anchor"&gt;
  &lt;/a&gt;
  1. Increased Accountability
&lt;/h3&gt;

&lt;p&gt;Very quickly, when the number of my follows started to rise, I had a very strong feeling of being hold accountable. I wasn't only learning for myself anymore, there were other people being interested to watch me succeed. Very motivating!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-personal%C2%A0advice" class="anchor"&gt;
  &lt;/a&gt;
  2. Personal Advice
&lt;/h3&gt;

&lt;p&gt;During my journey, I got to know the maker community on twitter. When I got frustrated because some circuit didn't work or I couldn't wrap my head around a complex topics, there was someone more experienced I could ask for advice. Saved me at least twice from giving up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-inspiration" class="anchor"&gt;
  &lt;/a&gt;
  3. Inspiration
&lt;/h3&gt;

&lt;p&gt;The maker community on twitter is a global one. I drew a lot of inspiration from other people's projects and ideas. It really reassured me that, there isn't a right or wrong way to learn and apply electronics. The variety of projects is just stunning!&lt;/p&gt;

&lt;p&gt;Besides these main benefits, I started to appreciate the long time commitment. It really helped me to take my time to build a habit of in-depth learning, instead of just binging some shallow tutorials whenever I could find some free time. If you are serious about starting something new, I really can recommend the format.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#who-should-join-the-challenge" class="anchor"&gt;
  &lt;/a&gt;
  Who should join the Challenge? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;If you are unsure, if it makes sense for you to learn about hardware, electronics, Arduino and the Internet of Things, here are a couple of reasons people have to dive into this area:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You are looking for an effective way to complement your education to land a job in an electronics oriented environment like a hardware startup, wearable manufacturer or industry 4.0 consultancy.&lt;/li&gt;
&lt;li&gt;You want to refresh your knowledge and get back the joy of hands-on tinkering, as you graduated from college quite some time ago.&lt;/li&gt;
&lt;li&gt;You are a college major in electrical-, software- or a related engineering field and want to get some hands-on experience besides all the theory.
You are simply fascinated by electronics, circuits, hardware etc. and want to make tinkering with technology your new hobby.&lt;/li&gt;
&lt;li&gt;You have a dream hardware project, you feared to start building till now.&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#how-to-find-time-in-your-daily-routine" class="anchor"&gt;
  &lt;/a&gt;
  How to find Time in your Daily Routine? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Finding the time is probably the toughest question to answer when considering to join the challenge. Especially, when you are working full time, plus you also have a family or other responsibilities.&lt;/p&gt;

&lt;p&gt;As a general learning, it's most importantly to commit to a realistic amount of time you can put in learning on a daily bases.&lt;/p&gt;

&lt;p&gt;Don't overcommit, e.g. making yourself spend 3h a day on the challenge , while you actually don't have as much time. Exploiting yourself and letting other responsibilities slip will likely lead to frustration and endanger reaching Day 100 . Remember, the challenge is about building a healthy habit of learning and personal growth.&lt;/p&gt;

&lt;p&gt;In my case, my weekends are always pretty packed, so I had to limit my commitment to weekdays only.&lt;/p&gt;

&lt;p&gt;However, I must warn you - currently there is a bit of a problem. Researching learning material, projects and hardware components that can keep up with your constantly increasing level of knowledge will take extra time, besides the time you spend actually tinkering and learning.&lt;/p&gt;

&lt;p&gt;I hope to solve this problem soon by build-up &lt;a href="https://100daysofhardware.com/"&gt;100DaysOfHardware.com&lt;/a&gt; as a learning hub, to get you the right resources at the right time, so you can successfully participate in the challenge with only an investment of one hour a day.&lt;/p&gt;

&lt;p&gt;If you want to get notified about project updates, signup here:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://eepurl.com/g9mmhP"&gt;Get notified about all upcoming bite-sized challenge guides&lt;/a&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#how-to-join-the-challenge" class="anchor"&gt;
  &lt;/a&gt;
  How to join the Challenge? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Nothing is easier than this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Order your basic hardware kit.&lt;/li&gt;
&lt;li&gt;As soon as your kit arrives &lt;a href="https://ctt.ac/C916K"&gt;tweet out your commitment.&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's it, you are all set!&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#what-hardware-do-i-need-to-buy-for-the-challenge" class="anchor"&gt;
  &lt;/a&gt;
  What hardware do I need to buy for the Challenge? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;First of all, let me debunked the common belief that you need tons of expensive equipment to event start learning about electronics. This is simply not true.&lt;/p&gt;

&lt;p&gt;You can get away with spending &lt;strong&gt;less than 100$&lt;/strong&gt; for all equipment and components you need for the whole challenge. It mostly depends on the complexity of your own projects and how much optional equipment you want to get.&lt;/p&gt;

&lt;p&gt;In electronics equipment there is a very wide price range. You can get a basic version of a certain item for very cheap, while there is mostly also a standard and a high end version available for 10x the price of the basic version. Therefore, I will link you an option for all price ranges. In most cases, the the basic or medium version is totally sufficient for the challenge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#must-have" class="anchor"&gt;
  &lt;/a&gt;
  Must Have
&lt;/h2&gt;

&lt;p&gt;The following items are absolute must haves to get through the first 50 days of the challenge. Also in the later stages, they will be a solid foundation to build upon.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basic-hardware-kit%C2%A01399" class="anchor"&gt;
  &lt;/a&gt;
  Basic Hardware Kit (13–99$)
&lt;/h3&gt;

&lt;p&gt;To kickoff your challenge, it makes sense to get a plain electronics starter kit. These kits include a variety of basic electronics components that will fuel your initial learning phase focused on pure electronics.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Basic&lt;/em&gt; Electronics Basic Kit, 350pcs - 13.5$ (&lt;a href="https://www.amazon.com/REXQualis-Electronics-Breadboard-Resistor-Raspberry/dp/B078XV3RK2/ref=sr_1_2_sspa?dchild=1&amp;amp;keywords=electronics+kit&amp;amp;qid=1607418281&amp;amp;refinements=p_36%3A1253503011&amp;amp;rnid=386442011&amp;amp;s=electronics&amp;amp;sr=1-2-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUEzTlU4S1NROEVRWDRGJmVuY3J5cHRlZElkPUEwMzkwODE3NVBRUDJZQkJYQVVUJmVuY3J5cHRlZEFkSWQ9QTAwMTQ2NjUyTUo1VjJQUzRaRzNZJndpZGdldE5hbWU9c3BfYXRmJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ=="&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium&lt;/em&gt; Electronics Component Fun Kit, 500pcs - 16$ (&lt;a href="https://www.amazon.com/REXQualis-Electronics-tie-Points-Breadboard-Potentiometer/dp/B073ZC68QG/ref=pd_sbs_328_11?_encoding=UTF8&amp;amp;pd_rd_i=B073ZC68QG&amp;amp;pd_rd_r=5acaf08e-52ff-4daa-ac1e-d72f2582d83b&amp;amp;pd_rd_w=6azML&amp;amp;pd_rd_wg=MtjdJ&amp;amp;pf_rd_p=ed1e2146-ecfe-435e-b3b5-d79fa072fd58&amp;amp;pf_rd_r=MA924EBY2ZXPKW5EVR5N&amp;amp;psc=1&amp;amp;refRID=MA924EBY2ZXPKW5EVR5N"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;High-end&lt;/em&gt; Electronic Component Assortment, 2000pcs - 99$ (&lt;a href="https://www.amazon.com/Interstellar-Electronic-Assortment-Transistors-Potentiometer/dp/B07D1HVZ15/ref=sr_1_4?dchild=1&amp;amp;keywords=electronics+kit&amp;amp;qid=1607417626&amp;amp;sr=8-4"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If possible, try to get a large breadboard, your circuits will outgrow the small once very quickly. Most of these kits come with 5V power supplies, however you probably need to get an additional power cord. Instead of spending another 5$ on one of these, it's a good idea to get your microcontroller directly and use it as a power source, as Arduinos almost always come with an USB cable to power it from your computer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#microcontroller-724" class="anchor"&gt;
  &lt;/a&gt;
  Microcontroller (7–24$)
&lt;/h3&gt;

&lt;p&gt;Latest when you reach the second section of the challenge covering digital electronics, you need to get a microcontroller. Arduino is the goto brand for microcontrollers. But there are also Arduino clones available which are fully compatible with other Arduino and ship for a cheaper price by still remaining a good product quality. If you have decided for a basic electronics kit initially, you should get a microcontroller from the get go to use it as your power source - saves you some bugs for another power cord.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Basic&lt;/em&gt; Seeduino (Arduino Uno Clone) - 7$ (&lt;a href="https://www.seeedstudio.com/Seeeduino-V4-2-p-2517.html?utm_source=blog&amp;amp;utm_medium=blog"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium&lt;/em&gt; Elegroo Uno R3 (Arduino Uno Clone) - 14$ (&lt;a href="https://www.amazon.com/ELEGOO-Board-ATmega328P-ATMEGA16U2-Compliant/dp/B01EWOE0UU/ref=sr_1_1_sspa?dchild=1&amp;amp;keywords=arduino+uno+chip&amp;amp;qid=1607419792&amp;amp;sr=8-1-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUExSzhaTE1GVTFCREEmZW5jcnlwdGVkSWQ9QTAxNDM4OTMyT0NEMVFNVzFIVFcwJmVuY3J5cHRlZEFkSWQ9QTA0ODM4MzMxSUg3UjhZVFIzTDVSJndpZGdldE5hbWU9c3BfYXRmJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ=="&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;High-end&lt;/em&gt; Original Arduino Uno - $24(&lt;a href="https://www.amazon.com/Arduino-A000066-ARDUINO-UNO-R3/dp/B008GRTSV6/ref=sr_1_3?dchild=1&amp;amp;keywords=arduino+uno&amp;amp;qid=1607419745&amp;amp;sr=8-3"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#electronic-components" class="anchor"&gt;
  &lt;/a&gt;
  Electronic Components
&lt;/h3&gt;

&lt;p&gt;During my own challenge I got to the point, where my projects required additional electronic components and sensors which where not included in my basic starter kit. Probably, when starting to fiddle with your own project you will get there too. I used three different options to get my parts. None of them is perfect, they all come with pros and cons.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cheap-amp-unreliable-aliexpress-wish-amp-ebay" class="anchor"&gt;
  &lt;/a&gt;
  Cheap &amp;amp; Unreliable: AliExpress, Wish &amp;amp; Ebay
&lt;/h4&gt;

&lt;p&gt;You can get your components directly from Chinese suppliers. I tried out AliExpress, Wish and Ebay. They all allowed me to cut out the middle man and save 20–40% on some items. So it's definitely the cheapest source, unfortunately that's the only positive aspect of it. However, I had to wait very long for my orders, did not get any tracking ids and had to pay quite some shipping fees which mitigated the initial cost savings.&lt;/p&gt;

&lt;p&gt;I was lucky to find some quality suppliers there, and got nice additional breadboards.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7idNTYgX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Eii4KGdWAAAU-3r.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 57 of &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt;, guess what was in the mail today...&lt;br&gt;&lt;br&gt;Ordered a set of mini breadboards from wish. Quality is outstanding! Did not expect that at all!  &lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Arduino"&gt;#Arduino&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/electronics"&gt;#electronics&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/raspberrypi"&gt;#raspberrypi&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:07 PM - 22 Sep 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1308498181647486984" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1308498181647486984" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      3
      &lt;a href="https://twitter.com/intent/like?tweet_id=1308498181647486984" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      6
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Looking back, I would definitely recommend it as a source for simple, non critical parts. For everything you need in time to continue your learning, I wouldn't use any of those sources. As it's not worth killing your learning routine for some cheap parts.&lt;/p&gt;

&lt;p&gt;More complex (e.g. ICs) parts or tools (e.g. soldering iron, multimeter) I also wouldn't buy there at all. Especially since these suppliers do not have to comply to any of your local safety or quality standards. I personally don't want to risk soldering components which might include toxic raw materials or have a soldering Iron start doing funny things while I am using it.&lt;/p&gt;

&lt;p&gt;Here you find the links&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.wish.com/"&gt;Wish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.aliexpress.com/"&gt;AliExpress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ebay.com"&gt;Ebay&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#online-electronics-shops" class="anchor"&gt;
  &lt;/a&gt;
  Online Electronics Shops
&lt;/h4&gt;

&lt;p&gt;When I had a complete parts list for my own project, I tried out some well established online electronics shops, quite a good experience! They really offer a tremendously large selection of components. There is probably nothing you can't find in their inventories. However, you will need to know exactly what you are looking for, otherwise you drown in pages and pages of identically looking components, just differing in some technical detail.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2cT2-i5r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EfZJoB7XgAIsn76.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Expert question: Is it really the most economical way to ship ICs in a very long thin strip?&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/electronics"&gt;#electronics&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:00 PM - 14 Aug 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1294302896885059592" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1294302896885059592" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      0
      &lt;a href="https://twitter.com/intent/like?tweet_id=1294302896885059592" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      0
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
 

&lt;p&gt;These electronics retails are quite expensive, especially when only ordering small quantities, their shipping cost were ax expensive as ordering directly from China. However, the quality was up to the mark.&lt;br&gt;
So, I'd recommend to get specific and complex components there. If possible batch order, to mitigate the high shipping cost. &lt;/p&gt;

&lt;p&gt;The largest and globally operating shops are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.mouser.com/"&gt;Mouser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rs-online.com/"&gt;RS Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reichelt.com/"&gt;Reichelt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;
  &lt;a href="#local-electronics-shops" class="anchor"&gt;
  &lt;/a&gt;
  Local Electronics Shops
&lt;/h4&gt;

&lt;p&gt;For some urgent needs I also checked out my local electronics store. Wasn't a bad experience at all. It is great to have someone you can talk to in person about your project and if in doubt about the component you need, you can definitely get some advice. &lt;br&gt;
However, I had the experience that they had a very limited selection of components instantly available, even rather generic components like a simple IC holder wasn't available when I was there. Might have been a coincident, but clearly they can't compete with global online shops when it comes to range of available products. &lt;/p&gt;

&lt;p&gt;Their big strength is personal service, instant availability and no shipping costs, so even picking up small quantities is makes sense.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#nice-to%C2%A0have" class="anchor"&gt;
  &lt;/a&gt;
  Nice to have
&lt;/h2&gt;

&lt;p&gt;There are also a couple of items which are nice to have, but definitely not required to successfully complete your challenge.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#microcontroller-kit-3690" class="anchor"&gt;
  &lt;/a&gt;
  Microcontroller Kit (36$-90$)
&lt;/h3&gt;

&lt;p&gt;A basic electronics kit + extra Arduino will get you very far already. Alternatively, there are also a lot of dedicated Arduino Starter Kits, however I wouldn't recommend going for one of them. These come already with a microcontroller and many complex electronics components like sensors, motors, bluetooth remote controls etc. Even though all these toys are very tempting to play with, they will not help you grow as much has mastering a wide range of basic components first. Nevertheless, here are some good option if you want to go down that road:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Basic&lt;/em&gt; Elegroo (Arduino Clone) Kit - 36$ (&lt;a href="https://www.amazon.com/ELEGOO-Project-Tutorial-Controller-Projects/dp/B01D8KOZF4/ref=sr_1_1_sspa?dchild=1&amp;amp;keywords=arduino+kit&amp;amp;qid=1607418827&amp;amp;sr=8-1-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUExV1pGN1kxU0JPQk8yJmVuY3J5cHRlZElkPUEwMjY4MTQ2UFJDTEZZRk44WTNQJmVuY3J5cHRlZEFkSWQ9QTEwMDEzNzYzVFNPV0pHQ01HTlNCJndpZGdldE5hbWU9c3BfYXRmJmFjdGlvbj1jbGlja1JlZGlyZWN0JmRvTm90TG9nQ2xpY2s9dHJ1ZQ=="&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium&lt;/em&gt; Elegroo (Arduino Clone) Kit - 53$ (&lt;a href="https://www.amazon.com/EL-KIT-001-Project-Complete-Starter-Tutorial/dp/B01CZTLHGE/ref=sr_1_9?dchild=1&amp;amp;keywords=arduino+kit&amp;amp;qid=1607418827&amp;amp;sr=8-9"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;High-end&lt;/em&gt; original Arduino Kit - 90$ (&lt;a href="https://www.amazon.com/Arduino-Starter-Kit-English-Official/dp/B009UKZV0A/ref=sr_1_3?dchild=1&amp;amp;keywords=arduino+kit&amp;amp;qid=1607418827&amp;amp;sr=8-3"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#multimeter-1162" class="anchor"&gt;
  &lt;/a&gt;
  Multimeter (11–62$)
&lt;/h3&gt;

&lt;p&gt;The multimeter is one of the more useful "nice to have" items. It allows you to measure current, voltage, resistance and continuity. I got mine probably during day 10–20 and it helped me big time to verify assumptions I made based on circuit theory I learned at that time.&lt;/p&gt;

&lt;p&gt;Later on it also helped me to debug my own project, as unfortunately you can't see whats goes wrong with your circuit, only some times a component goes up in smoke, indicating that something is wrong.&lt;/p&gt;

&lt;p&gt;A basic meter will definitely carry you though the challenge, however I recommend to pick the medium one, as it's still affordable and "auto ranging", meaning it finds the most suitable range to display your measured value automatically - very convenient.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Basic&lt;/em&gt; digital Multimeter - 11.50$ (&lt;a href="https://www.amazon.com/Etekcity-Multimeter-MSR-R500-Electronic-Multimeters/dp/B01N9QW620/ref=sr_1_20?crid=2XENJ92B4O8E1&amp;amp;dchild=1&amp;amp;keywords=self+ranging+multimeter&amp;amp;qid=1607421362&amp;amp;sprefix=multimeter+self%2Caps%2C269&amp;amp;sr=8-20"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium&lt;/em&gt; digital Multimeter - 23$ (&lt;a href="https://www.amazon.com/INNOVA-3320-Auto-Ranging-Digital-Multimeter/dp/B000EVYGZA/ref=sr_1_5?crid=2XENJ92B4O8E1&amp;amp;dchild=1&amp;amp;keywords=self%2Branging%2Bmultimeter&amp;amp;qid=1607421362&amp;amp;sprefix=multimeter%2Bself%2Caps%2C269&amp;amp;sr=8-5&amp;amp;th=1"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;High-end&lt;/em&gt; digital Multimeter - 62$ (&lt;a href="https://www.amazon.com/Mastech-MS8229-Auto-Range-Multi-Functional-Multimeter/dp/B000JKMTDM/ref=sr_1_4?crid=2XENJ92B4O8E1&amp;amp;dchild=1&amp;amp;keywords=self+ranging+multimeter&amp;amp;qid=1607421362&amp;amp;refinements=p_36%3A1253530011&amp;amp;rnid=1243644011&amp;amp;s=hi&amp;amp;sprefix=multimeter+self%2Caps%2C269&amp;amp;sr=1-4"&gt;link&lt;/a&gt;))&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#soldering-iron%C2%A01570" class="anchor"&gt;
  &lt;/a&gt;
  Soldering Iron (15–70$)
&lt;/h3&gt;

&lt;p&gt;Soldering is skill I did not expect to pickup myself. I believed I could stick to using solderless breadboards for all my 100 days. When I got to build my own more complex project though, I was struggling, as many issues were caused my wiring mistakes. Learning to solder allowed me to hardwire connections and be sure they will remain function correctly while moving on. For me it was a worthy invest of time and money.&lt;/p&gt;

&lt;p&gt;The price range of soldering equipment is just crazy. You can get a full set with plenty of accessories for 9$, while you can also spend 50$ to just get a plain soldering iron. If you can afford it, I'd recommend to go with the one from the mid price range. The cheapest will just be a gamble on how long it lasts, while the expensive one is a good choice when you expect to use it excessively. Keep in mind will need some more accessories like Helping Hands, Desoldering Pump and a Roll of Solder.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Basic&lt;/em&gt; Soldering Kit - 9$, (&lt;a href="https://www.amazon.com/Soldering-Kit-Temperature-Desoldering-Electronics/dp/B07XKZVG8Z/ref=sr_1_5?crid=3VDYE6IE69XPF&amp;amp;dchild=1&amp;amp;keywords=soldering+iron&amp;amp;qid=1607501736&amp;amp;sprefix=soldering+%2Caps%2C260&amp;amp;sr=8-5"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium&lt;/em&gt; Soldering Kit - 25$ (&lt;a href="https://www.amazon.com/YIHUA-Adjustable-Temperature-Soldering-428-896%E2%84%89/dp/B07RY6HS6G/ref=sr_1_36?crid=3VDYE6IE69XPF&amp;amp;dchild=1&amp;amp;keywords=soldering+iron&amp;amp;qid=1607502533&amp;amp;refinements=p_36%3A1253529011%2Cp_72%3A1248909011&amp;amp;rnid=1248907011&amp;amp;s=hi&amp;amp;sprefix=soldering+%2Caps%2C260&amp;amp;sr=1-36"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Medium+&lt;/em&gt; Soldering Station + 5 Soldering Tips - 40$ (&lt;a href="https://www.amazon.com/Soldering-Additional-392%E2%84%89-896%E2%84%89-Temperature-Adjustable/dp/B07Z3KCVCL/ref=sr_1_75?crid=3VDYE6IE69XPF&amp;amp;dchild=1&amp;amp;keywords=soldering+iron&amp;amp;qid=1607501736&amp;amp;sprefix=soldering+%2Caps%2C260&amp;amp;sr=8-75"&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#oscilloscope" class="anchor"&gt;
  &lt;/a&gt;
  Oscilloscope
&lt;/h3&gt;

&lt;p&gt;A Oscilloscope is an advanced diagnostics tool that shows you a visual wave graph of an electronic signal. They have tons of sophisticated analysis applications, so you could use it for visualizing the time and voltage values of a signal or verify whether or not a malfunctioning component is distorting the signal. &lt;br&gt;
Initially I believed, that I would need one, but to be honest, getting an oscilloscopes for tinkering with starter kits and smaller projects is a bit over the top. Especially, since proper once start at about 300$.&lt;br&gt;
Long story short, get a good multimeter, that will be more than enough.&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#how-to-structure-the-challenge" class="anchor"&gt;
  &lt;/a&gt;
  How to Structure the Challenge? &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;When I started my challenge run, the sheer width and depth of the hardware topic completely overwhelmed me. Hence, I recommend you to structure you challenge in the following three main sections, especially when you are completely new to the field.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--663vEJBq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EdZWixvWkAM9gEi.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 11 of &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt; - As &lt;a href="https://twitter.com/hashtag/capacitors"&gt;#capacitors&lt;/a&gt; are focus of this week,  &lt;a href="https://twitter.com/hashtag/Circuit"&gt;#Circuit&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Analysis"&gt;#Analysis&lt;/a&gt; is becoming a thing! Got to know enough &lt;a href="https://twitter.com/hashtag/equations"&gt;#equations&lt;/a&gt; and a &lt;a href="https://twitter.com/hashtag/multimeter"&gt;#multimeter&lt;/a&gt; - feeling very confident about this! 💪💪 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:25 PM - 20 Jul 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1285309900684439558" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1285309900684439558" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      0
      &lt;a href="https://twitter.com/intent/like?tweet_id=1285309900684439558" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      4
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#1-learn-electronics-day-130" class="anchor"&gt;
  &lt;/a&gt;
  1. Learn Electronics (Day 1–30)
&lt;/h2&gt;

&lt;p&gt;The idea is, to first learn about electronics. This includes, components types, how to build circuits, and some other practical skills. A clear project-based learning path is very valuable here, as you can get lost in complexity very easily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-learn-arduino-day-3150" class="anchor"&gt;
  &lt;/a&gt;
  2. Learn Arduino (Day 31–50)
&lt;/h2&gt;

&lt;p&gt;Next, you should transition into digital electronics by learning about the microcontrollers. the Arduino platform is a great starting point, as it's really user friends and there is plenty of simple projects out there which build upon the Arduino.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-build-your-own-projects-day-51100" class="anchor"&gt;
  &lt;/a&gt;
  3. Build your own Projects (Day 51–100)
&lt;/h2&gt;

&lt;p&gt;In the second half of the challenge, I recommend to use all the knowledge you acquired, to build projects you really care about. Thereby, it's much easier to keep up the motivation and you will learn much more than strictly following shallow tutorials.&lt;/p&gt;

&lt;p&gt;I personally build a control board for an old mechanical flip-dot display as my project 50+ project. It was definitely the most valuable project I worked on during the whole time, as I really wanted it to work in the end.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0slGiZdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1312163519580835840/pu/img/V0jc-oC5aaIqQ7y0.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 65 of &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt;,&lt;br&gt;&lt;br&gt;Finally 8x8 dots are mastered! 😎&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Arduino"&gt;#Arduino&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/electronics"&gt;#electronics&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/raspberrypi"&gt;#raspberrypi&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:52 PM - 02 Oct 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1312163585020235776" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1312163585020235776" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      12
      &lt;a href="https://twitter.com/intent/like?tweet_id=1312163585020235776" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      14
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
 

&lt;p&gt;As general advice, don't make to detailed plans for day 50+ in advance. Your growing knowledge will spawn new ideas and increase clarity on existing once. So give yourself plenty of room to adapt. Just note your current ideas and believes, to review when it's time to decide what project to start next.&lt;/p&gt;


&lt;h1&gt;
  &lt;a href="#what-to-learning-about-electronicsday-030" class="anchor"&gt;
  &lt;/a&gt;
  What to learning about Electronics?(Day 0–30) &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;I believe, it is crucial to give yourself plenty of time initially really dig into electronics to learn and digest the core principles. During my own challenge, I made the mistake to move into too complex topics too early. As a result, I got very frustrated later on and almost quit, as I couldn't comprehend what was going wrong.&lt;/p&gt;

&lt;p&gt;There are some important concepts you should definitely cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Voltage, Current, Resistance&lt;/li&gt;
&lt;li&gt;Direct Current (DC) and Alternating Current (AC)&lt;/li&gt;
&lt;li&gt;Parallel vs. Serial Circuits&lt;/li&gt;
&lt;li&gt;Ohm's Law&lt;/li&gt;
&lt;li&gt;Kirchhoff's circuit law&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will come across many very technical and math heavy tutorials and articles when researching these topics. Don't get hung up on it. It is helpful to get some basic skills of circuit analysis so you can understand, e.g. why you can measure a certain level of voltage at a specific component. &lt;/p&gt;

&lt;p&gt;The theory beyond those basics, is helpful but not required at this point in time. Building real projects will teach you much more than studying all dry theory beforehand.&lt;/p&gt;

&lt;p&gt;You should also get a good grasp of the following basic electronic components:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Resistor&lt;/li&gt;
&lt;li&gt;LED&lt;/li&gt;
&lt;li&gt;mechanical Button&lt;/li&gt;
&lt;li&gt;Potentiometer&lt;/li&gt;
&lt;li&gt;Capacitor&lt;/li&gt;
&lt;li&gt;Diode&lt;/li&gt;
&lt;li&gt;RGB LED&lt;/li&gt;
&lt;li&gt;Transistor&lt;/li&gt;
&lt;li&gt;Photoresistor&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While tinkering with these components, it will inevitably be helpful to pickup some additional skills:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How to use a bread board&lt;/li&gt;
&lt;li&gt;How to read technical "data sheets" of components&lt;/li&gt;
&lt;li&gt;How to read circuit diagrams&lt;/li&gt;
&lt;li&gt;Learn how to use a multimeter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The most effective and fun way to consolidate your new knowledge is by building increasingly complex bread board projects.&lt;/p&gt;

&lt;p&gt;A good starting point would be a simply blinking LED circuit which you then extend with every freshly mastered component&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MqTbamHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1281309706145992705/pu/img/YsuY7DRV3smBLpfA.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 04 - Well, this escalated quickly! not even 5 of 100 days complete, and I already started to extend tutorial to my style 🤣 that’s how you learn the power of &lt;a href="https://twitter.com/hashtag/parallel"&gt;#parallel&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/circuits"&gt;#circuits&lt;/a&gt;!&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      19:30 PM - 09 Jul 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1281309731236335616" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1281309731236335616" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      0
      &lt;a href="https://twitter.com/intent/like?tweet_id=1281309731236335616" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      1
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;After you have a good grasp of basic electronics, there are some more advanced components called integrated circuits (ICs) which are worth exploring. Here are two very important once, used in many application contexts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;555 timer&lt;/li&gt;
&lt;li&gt;shift register&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#what-to-learning-about-arduinoday-3150" class="anchor"&gt;
  &lt;/a&gt;
  What to learning about Arduino?(Day 31-50) &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;After you got a solid understanding of electronics in general, it's a good point in time leap into digital electronics. While so far, our power source was static, now we get to know micro controllers which allow us to programatically control the flow of current.&lt;/p&gt;

&lt;p&gt;As a software engineer, it won't be hard to wrap your head around how to program the Arduino.&lt;br&gt;
Thanks to the extensive Arduino libraries it, it feels like a simplified version of c. Even though, I have never written c before, I did struggle to achieve my goals. &lt;/p&gt;

&lt;p&gt;The Arduino in general, is a very user friendly microcontroller and makes it easy to learn the basics of programming on the fly.&lt;/p&gt;

&lt;p&gt;Nevertheless, I recommend you to start off with a course on Arduino, to get a feel for this technology.&lt;/p&gt;

&lt;p&gt;Most importantly though, find yourself small projects to build. As with basic electronic components, this will make learning and understanding the Arduino technology much easier than just reading about theory or watching shallow tutorials.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NfIaYBT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1300826091112796167/pu/img/UZQWQirvBQoCsmyo.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 42 of &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt;, now that I got 2 dots flipping, there is only 446 missing 😅 Started to learn about shift registers! First demo circuit is up and running!&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/flipdot"&gt;#flipdot&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/Arduino"&gt;#Arduino&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/electronics"&gt;#electronics&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:01 PM - 01 Sep 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1300826121018191872" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1300826121018191872" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      5
      &lt;a href="https://twitter.com/intent/like?tweet_id=1300826121018191872" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      11
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;When you are getting closer to the end of your microcontroller days , you will have learned quite a lot about digital electronics. That's when it gets really interesting! &lt;/p&gt;

&lt;p&gt;You could for example start to control advanced electronics components like a shift register with an Arduino.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#how-to-build-your-own-projectsday-51100" class="anchor"&gt;
  &lt;/a&gt;
  How to build your own Projects?(Day 51–100) &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;As mentioned before, In the second half of the challenge, I recommend to use all the knowledge you acquired, to build projects you really care about. Now, I'd like to extend that advice and say, even pick a project you consider to be very challenging, almost impossible to master at your current level of knowledge.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Why is such a bolt move is a good idea?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let your curiosity drive you, only a project you deeply care about will motivate you to continue, thrive for perfection and let you outgrow all the initial unknowns.&lt;br&gt;
You have a lot of time, so no reason to be afraid of the skills and knowledge the project needs and you don't have yet. You can gain all of them during the next weeks.&lt;/p&gt;

&lt;p&gt;Keep in mind, this challenge is about personal growth, even if you couldn't fully complete the project in time, you are achieving your initial goal of establishing a daily routine of learning and personal growth.&lt;/p&gt;

&lt;p&gt;My project of building a control board for my old mechanical flipdot display, eventually came together quite nicely. On the way there, I even learned to read complex schematics and how to solder. Did I believed, that I could fit this into my challenge? No of course not!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S603-w9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1329811670487740418/pu/img/guN8xnUYQd_cmWqo.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8YqTYULO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1018568074553851904/JultPTPi_normal.jpg" alt="Fabian Hinsenkamp profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Fabian Hinsenkamp
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="comment-mentioned-user" href="https://dev.to/hinsencamp"&gt;@hinsencamp&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P4t6ys1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Day 85 of &lt;a href="https://twitter.com/hashtag/100DaysOfHardware"&gt;#100DaysOfHardware&lt;/a&gt;, &lt;br&gt;&lt;br&gt;Hardware debugging done right! My soldered control board is starting to work just fine 🥳&lt;br&gt;&lt;br&gt;&lt;a href="https://twitter.com/hashtag/Arduino"&gt;#Arduino&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/100DaysOfCode"&gt;#100DaysOfCode&lt;/a&gt; &lt;a href="https://twitter.com/hashtag/raspberrypi"&gt;#raspberrypi&lt;/a&gt; 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:39 PM - 20 Nov 2020
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1329811686379941892" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-reply-action.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1329811686379941892" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-retweet-action.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      4
      &lt;a href="https://twitter.com/intent/like?tweet_id=1329811686379941892" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="/assets/twitter-like-action.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
      7
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;How to find your own passion project, that triggers your curiosity and keeps you moving?&lt;/p&gt;

&lt;p&gt;Here is a small overview of real world use cases for DIY electronics and hardware:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#computer-electronics" class="anchor"&gt;
  &lt;/a&gt;
  Computer Electronics
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;8-bit Computer&lt;/li&gt;
&lt;li&gt;Retro gaming&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#sound-music-production" class="anchor"&gt;
  &lt;/a&gt;
  Sound / music production
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;guitar paddels&lt;/li&gt;
&lt;li&gt;synthesizers&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#home-automation" class="anchor"&gt;
  &lt;/a&gt;
  Home automation
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Plant watering system&lt;/li&gt;
&lt;li&gt;Remote Light control&lt;/li&gt;
&lt;li&gt;Security system&lt;/li&gt;
&lt;li&gt;connect home appliances to the web (ioT)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#visual-art" class="anchor"&gt;
  &lt;/a&gt;
  Visual Art
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;LED cube&lt;/li&gt;
&lt;li&gt;LED walls&lt;/li&gt;
&lt;li&gt;Flipdot displays&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#vehiclesrobots" class="anchor"&gt;
  &lt;/a&gt;
  Vehicles/robots
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Drones&lt;/li&gt;
&lt;li&gt;self-diving (toy) cars&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#videofilm-making" class="anchor"&gt;
  &lt;/a&gt;
  Video/Film making
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Kamera Slider&lt;/li&gt;
&lt;li&gt;Turntable display&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To get a better idea about the different areas of application, you can use Youtube, Pinterest, Instagram or just plane google for your initial research. &lt;/p&gt;

&lt;p&gt;You will find all kinds of projects other makers create in these fields. Unfortunately, it can be hard to find a detailed list of components and resources for the projects on these platforms.&lt;/p&gt;

&lt;p&gt;As soon as you know which area you are interested in, it is time to check out some websites especially dedicated to makers. There, people share their projects in great detail often including a parts list.&lt;/p&gt;

&lt;p&gt;My favourite makes websites are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://hackaday.io/"&gt;HackAday&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackster.io/"&gt;Hackster.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.instructables.com/circuits/"&gt;Instructables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.electromaker.io"&gt;Electromaker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also made the experience that you can easily approach creators on these platforms get some more details and open questions answered.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#summary" class="anchor"&gt;
  &lt;/a&gt;
  Summary &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;To conclude this guide, I believe the "100 days of x" challenge format is a great fit for getting started with electronics, Arduino and hardware projects in general. Personally, I had a great time, and learned more than I anticipated before I started.&lt;/p&gt;

&lt;p&gt;However, it's still a big challenge to find suitable resources so if you are on a tight schedule it will be challenging to learn, research theory &amp;amp; projects every day.&lt;/p&gt;

&lt;p&gt;To change this, I am building up 100DaysOfHardware.com as a learning hub, to allow everyone even with a tight schedule (max. 1h a day) to successfully complete the challenge!&lt;/p&gt;

&lt;p&gt;&lt;a href="http://eepurl.com/g9mmhP"&gt;Get notified about all upcoming bite-sized challenge guides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks to everyone from the community who supported, inspired and motivated me! &lt;/p&gt;

&lt;p&gt;I'd be happy if I could give back, so don't hesitate to reach out to me, when you any questions about the challenge or you need more support to get it going!&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="//twitter.com/hinsencamp"&gt;twitter.com/hinsencamp&lt;/a&gt;&lt;/p&gt;

</description>
      <category>challenge</category>
      <category>arduino</category>
      <category>electronics</category>
      <category>guide</category>
    </item>
    <item>
      <title>Everything you need to Know about  Firebase 
</title>
      <author>Mughees Mb</author>
      <pubDate>Fri, 18 Dec 2020 18:48:56 +0000</pubDate>
      <link>https://dev.to/mugybro/integrating-firebase-with-react-part-1-51ma</link>
      <guid>https://dev.to/mugybro/integrating-firebase-with-react-part-1-51ma</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-firebase" class="anchor"&gt;
  &lt;/a&gt;
  What is Firebase?
&lt;/h1&gt;

&lt;p&gt;Firebase is essentially a Backend-as-a-Service (BaaS) mobile and web application development platform developed by Firebase, Inc in 2011 and then acquired by Google in 2014. It provides users with hosted backend services such as a real-time database, cloud storage, authentication, crash reporting, remote configuration, and hosting for static files.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As you know Full-Stack applications need a front-end and back-end Service and Using a Back-End  Service like Firebase you get all the benefits of a back-end without the complications of setting one up from scratch.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h1&gt;
  &lt;a href="#benefits-of-using-the-firebase-top-ones" class="anchor"&gt;
  &lt;/a&gt;
  Benefits of Using the Firebase (Top Ones)
&lt;/h1&gt;

&lt;p&gt;In many cases, we want a fully functioning application up and running in as little time as possible. With Firebase, you can dramatically cut development time.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#realtime-database" class="anchor"&gt;
  &lt;/a&gt;
  Realtime DataBase
&lt;/h4&gt;

&lt;p&gt;Cloud Firestore database updates all connected clients in realtime. This is excellent for many types of applications. The ability to get realtime updates makes applications a lot easier to implement.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#authentication" class="anchor"&gt;
  &lt;/a&gt;
  Authentication
&lt;/h4&gt;

&lt;p&gt;Firebase backend service offers a powerful authentication feature. It comes equipped with simple SDKs and easy to use libraries to integrate authentication feature with any mobile or web app.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#storage" class="anchor"&gt;
  &lt;/a&gt;
  Storage
&lt;/h4&gt;

&lt;p&gt;Firebase storage feature is powered by Google Cloud Storage and allows users to easily download media files and visual contents. This feature is also helpful in making use of user-generated content.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#security" class="anchor"&gt;
  &lt;/a&gt;
  Security
&lt;/h4&gt;

&lt;p&gt;Firebase ships with built in far-reaching security. When configured correctly your app will be an impenetrable fortress. Without Firebase security is extremely hard to configure correctly.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#hosting" class="anchor"&gt;
  &lt;/a&gt;
  Hosting
&lt;/h4&gt;

&lt;p&gt;The hosting feature of Firebase allows developers to update their contents in the Content Delivery Network (CDN) during production. Firebase offers full hosting support with a custom domain, Global CDN, and an automatically provided SSL Certificate.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#high-speed-caching" class="anchor"&gt;
  &lt;/a&gt;
  High Speed Caching
&lt;/h4&gt;

&lt;p&gt;How fast your site loads not only helps with SEO but creates a better user experience. When you deploy using Firebase hosting your app gets cached on solid state drives (SSD) throughout the world. This makes site loading time extremely fast.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#the-firebase-api" class="anchor"&gt;
  &lt;/a&gt;
  The Firebase API
&lt;/h1&gt;

&lt;p&gt;As a programmers, we communicate with the back-end using an application programming interface (API). Firebase is certainly no exception.&lt;br&gt;
Each method in the firebase object represents a different service. For example, by invoking the &lt;strong&gt;firebase.firestore()&lt;/strong&gt; method you can get access to Cloud Firestore. It’s a database that you can use to store and retrieve information. by invoking &lt;strong&gt;firebase.auth()&lt;/strong&gt; method you will have access to Authentication services. by invoking &lt;strong&gt;firebase.storage()&lt;/strong&gt;  user can store and manage media generated by web and mobile app users. &lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#firebase-services" class="anchor"&gt;
  &lt;/a&gt;
  Firebase Services
&lt;/h1&gt;

&lt;p&gt;These are the core services of Firebase. With them, you will be able to leverage Firebase to build fast, highly effective web applications.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cloud Firestore 

&lt;ul&gt;
&lt;li&gt;Realtime&lt;/li&gt;
&lt;li&gt;NoSQL&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Hosting

&lt;ul&gt;
&lt;li&gt;SSL for Every Site&lt;/li&gt;
&lt;li&gt;Cached on SSDs&lt;/li&gt;
&lt;li&gt;Deploy From CLI&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Authentication

&lt;ul&gt;
&lt;li&gt;Email and Password Authentication&lt;/li&gt;
&lt;li&gt;OAuth Authentication&lt;/li&gt;
&lt;li&gt;User Security&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Storage

&lt;ul&gt;
&lt;li&gt;Can Handle Large File Sizes&lt;/li&gt;
&lt;li&gt;File Security&lt;/li&gt;
&lt;li&gt;Any File Type&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h1&gt;
  &lt;a href="#is-firebase-free-to-use" class="anchor"&gt;
  &lt;/a&gt;
  Is Firebase Free to use?
&lt;/h1&gt;

&lt;p&gt;Firebase has two pricing levels. &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#-spark-plan-free" class="anchor"&gt;
  &lt;/a&gt;
  - Spark Plan (Free).
&lt;/h6&gt;

&lt;h6&gt;
  &lt;a href="#-blaze-plan-pay-as-you-go" class="anchor"&gt;
  &lt;/a&gt;
  – Blaze Plan (Pay as you go).
&lt;/h6&gt;

&lt;p&gt;The first one incorporates a limited Free tier, and it’s an excellent option for development and small applications. The second tier works on a pay as you grow model, and it’s ideal for production applications.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#in-spark-plan-firebase-provides-us-with-several-products-that-can-be-used-for-free-such-as" class="anchor"&gt;
  &lt;/a&gt;
  In Spark Plan Firebase provides us with several products that can be used for free such as:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Authentication&lt;/li&gt;
&lt;li&gt;A/B Testing&lt;/li&gt;
&lt;li&gt;Analytics&lt;/li&gt;
&lt;li&gt;Cloud Messaging (FCM)&lt;/li&gt;
&lt;li&gt;Crashlytics&lt;/li&gt;
&lt;li&gt;Performance Monitoring&lt;/li&gt;
&lt;li&gt;Remote Config&lt;/li&gt;
&lt;li&gt;Dynamic Links&lt;/li&gt;
&lt;li&gt;Firebase Invites&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#in-blaze-plan-it-provides-developers-with-a-wide-variety-of-paid-infrastructure-products-such-as" class="anchor"&gt;
  &lt;/a&gt;
  In Blaze Plan ,it provides developers with a wide variety of paid infrastructure products such as:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Real-time Database&lt;/li&gt;
&lt;li&gt;Phone Auth&lt;/li&gt;
&lt;li&gt;Firebase Storage&lt;/li&gt;
&lt;li&gt;Hosting&lt;/li&gt;
&lt;li&gt;Test Lab&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;There are so many services available that it can feel overwhelming, but trust me when I tell you that each service is easy to work with. Firebase documentation is pretty good as far as the documentation is concerned. I also use Firebase in all of my apps which is why I wanted to get the word out about how awesome it is.&lt;/p&gt;

</description>
      <category>firebase</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>5 Ways to Improve Communication on a Remote Team</title>
      <author>Ana Vela</author>
      <pubDate>Fri, 18 Dec 2020 17:45:52 +0000</pubDate>
      <link>https://dev.to/anaveecodes/5-ways-to-improve-communication-on-a-remote-team-2p2f</link>
      <guid>https://dev.to/anaveecodes/5-ways-to-improve-communication-on-a-remote-team-2p2f</guid>
      <description>&lt;p&gt;After working on a remote team for over 2 years, I've gained some insights about what it takes to communicate without being in an actual office together. My role at this startup ranged from web development to operations management where I was involved in a variety of projects. I've also collaborated remotely with other developers working on some code and even general support as we are improving our skills. &lt;/p&gt;

&lt;p&gt;In just about any project, focusing on creating shared documentation is at the heart of making this work well. After reflecting on these remote work experiences, I've noticed a few key components that have helped make communication smoother. These 5 tips are useful if you are working with a partner, a group of students working on a project, or a business setting.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-detailed-plan-with-specific-tasks" class="anchor"&gt;
  &lt;/a&gt;
  Create a Detailed Plan with Specific Tasks
&lt;/h2&gt;

&lt;p&gt;When working on a project together, there needs to be a clear roadmap as an overview of the project. Some questions to ask at the beginning are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the goals of this project?&lt;/li&gt;
&lt;li&gt;What is the scope and top priority features?&lt;/li&gt;
&lt;li&gt;What problems does this project solve?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once these elements have been established, then you can create specific tasks and who should be assigned to each one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#track-tasks-and-deadlines-efficiently" class="anchor"&gt;
  &lt;/a&gt;
  Track Tasks and Deadlines Efficiently
&lt;/h2&gt;

&lt;p&gt;Once specific tasks have been identified and assigned to team members, organize them in a way where they can be tracked. Using tools such as Asana, Trello, or Notion are good ways to accomplish this. Each task should be clearly outlined with details and who is assigned to each task. Keep deadlines realistic and revise them when needed. Make this information available to all team members to help avoid misunderstandings and in case a task needs to be assigned to someone else in the future.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#schedule-regular-checkins-meetings" class="anchor"&gt;
  &lt;/a&gt;
  Schedule Regular Check-Ins Meetings
&lt;/h2&gt;

&lt;p&gt;Once these tasks have been established, set up regular meetings to check-in regarding progress made. These meetings should have an agenda and timeframe. Figure out a good meeting routine by establishing a set of questions such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What's working?&lt;/li&gt;
&lt;li&gt;Any roadblocks?&lt;/li&gt;
&lt;li&gt;Do you need help with anything?&lt;/li&gt;
&lt;li&gt;What are the next actionable tasks?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#take-meeting-notes-and-make-them-accessible-to-team-members" class="anchor"&gt;
  &lt;/a&gt;
  Take Meeting Notes and Make Them Accessible to Team Members
&lt;/h2&gt;

&lt;p&gt;Have a record of each meeting to keep track of any decisions made and what is expected for the next meeting.  Any team member can refer back to the notes at any time to get clarification. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#keep-flexible-open-communication" class="anchor"&gt;
  &lt;/a&gt;
  Keep Flexible, Open Communication
&lt;/h2&gt;

&lt;p&gt;Think about ways to incorporate casual interactions between team members. Are there a few minutes before the start of a meeting to chat about fun topics or mention something new and exciting? You could also have a virtual happy hour once a month to have time to get to know each other better and build rapport.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts" class="anchor"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Improving communication can take time. There are many tools that can help you stay organized to work at a steady pace to complete a project. In most of my remote work, I used Google Docs, Google Sheets, Trello, and Asana. I have recently discovered Notion which has become my favorite tool this year. Notion is powerful because you can manage tasks, notes, calendars, and so much more all in one workspace. I created a &lt;a href="https://www.notion.so/Project-Planning-and-Documentation-Template-7ce9a2a6927c495ba28790180b1cca3b"&gt;simple Notion template&lt;/a&gt; as an example of a shared document that can serve as a source of truth for a particular project. You can duplicate this template and customize it for your specific needs.  Let me know if you have any questions about the template or how to use Notion for your next project plan.&lt;/p&gt;

&lt;p&gt;Have any of these tips worked well for you before while working remotely with others? Are you also a fan of Notion? Add a comment to let me know.&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Photo by &lt;a href="https://unsplash.com/@comparefibre?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Compare Fibre&lt;/a&gt; on &lt;a href="https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>communication</category>
      <category>remotework</category>
      <category>teams</category>
      <category>productivity</category>
    </item>
    <item>
      <title>JS Gotchas! (map with parseInt)</title>
      <author>Dimritium</author>
      <pubDate>Fri, 18 Dec 2020 16:46:48 +0000</pubDate>
      <link>https://dev.to/dimritium/js-gotchas-map-with-parseint-52d8</link>
      <guid>https://dev.to/dimritium/js-gotchas-map-with-parseint-52d8</guid>
      <description>&lt;p&gt;In this series we would be discussing on some of the gotchas that I encounter while working with JavaScript. As evident from the title, in this one we would be looking at a problem statement related to &lt;code&gt;Array.prototype.map&lt;/code&gt; and &lt;code&gt;parseInt&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Please do not confuse with &lt;code&gt;Map&lt;/code&gt; object that holds key value pair, I will refer &lt;code&gt;Array.prototype.map&lt;/code&gt;as map in this article&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#the-problem-statement" class="anchor"&gt;
  &lt;/a&gt;
  The problem statement:
&lt;/h3&gt;

&lt;p&gt;Let’s try to figure out the output of the following snippet:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="mi"&gt;2020&lt;/span&gt;&lt;span class="err"&gt;–&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="err"&gt;–&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-output" class="anchor"&gt;
  &lt;/a&gt;
  The output:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[2020, NaN, 1]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Interesting, isn’t it? 2020 was as expected but what happened to other elements of &lt;code&gt;res&lt;/code&gt; ? Why the other elements failed to parse as integers?&lt;/p&gt;

&lt;p&gt;Now lets dive into how JS interpreted the statement.&lt;/p&gt;

&lt;p&gt;When we apply &lt;code&gt;map&lt;/code&gt; operation on an array in JS, it expects a callback function and that callback function we have provided that is &lt;code&gt;parseInt&lt;/code&gt;. In addition to that &lt;code&gt;map&lt;/code&gt; always passes 3 arguments to the callback function. These 3 arguments being:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; The element itself&lt;/li&gt;
&lt;li&gt; index of the element&lt;/li&gt;
&lt;li&gt; the whole array&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want to confirm this you can run the following snippet in the console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The output will be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2 0 [2, 3, 4]  
3 1 [2, 3, 4]  
4 2 [2, 3, 4]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Thus it is clear that this is the way map works.&lt;/p&gt;

&lt;p&gt;Now let’s get back to our initial problem statement&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;parseInt&lt;/code&gt; accepts 2 agruments:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; &lt;code&gt;string&lt;/code&gt;: the value to parse&lt;/li&gt;
&lt;li&gt; radix(optional): an integer between 2 and 36 denoting the base in mathematical numeral system&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Since map passes the 3 arguments, the first &lt;em&gt;(the element)&lt;/em&gt; and second &lt;em&gt;(element’s index)&lt;/em&gt; is picked up by the &lt;code&gt;parseInt&lt;/code&gt; but the third &lt;em&gt;(the array)&lt;/em&gt; is neglected.&lt;/p&gt;

&lt;p&gt;Thus the radix value is being set as the index of the element. Thus in our initial problem, following iterations are performed for &lt;code&gt;parseInt&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//first iteration  &lt;/span&gt;
&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2020&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;//second iteration  &lt;/span&gt;
&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;12&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      

&lt;span class="c1"&gt;//third iteration:  &lt;/span&gt;
&lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;12&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;And since we need to have radix as 10 (if working with decimal number system), our expected result is not met.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-solution%C2%A0maybe" class="anchor"&gt;
  &lt;/a&gt;
  The solution (maybe):
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// modified res  &lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note: Be careful with the above solution as &lt;code&gt;parseInt&lt;/code&gt; implementation is up to the browser and not all browser have default radix set to 10, thus it is always advised to pass radix value whenever using &lt;code&gt;parseInt&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#other-solutions" class="anchor"&gt;
  &lt;/a&gt;
  Other Solutions:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// passing radix value explicitly for the sake of browsers  &lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// using Number  &lt;/span&gt;
&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;That’s it for this article, I hope you liked it.&lt;br&gt;
This was my first article related to JS, let me know your thoughts in the comment section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Referenced articles:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map"&gt;Map — JavaScript | MDN (mozilla.org)&lt;/a&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt"&gt;parseInt() — JavaScript | MDN (mozilla.org)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://unsplash.com/@gamell?utm_source=unsplash"&gt;Cover Photo by Joan Gamell on unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Node.js - File System</title>
      <author>Matthew Eddy</author>
      <pubDate>Fri, 18 Dec 2020 16:41:11 +0000</pubDate>
      <link>https://dev.to/meddy672/node-js-file-system-ngl</link>
      <guid>https://dev.to/meddy672/node-js-file-system-ngl</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--krPxIog3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tvigldg8iwg7st1w0uq2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--krPxIog3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/tvigldg8iwg7st1w0uq2.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#overview" class="anchor"&gt;
  &lt;/a&gt;
  Overview
&lt;/h4&gt;

&lt;p&gt;This article is &lt;strong&gt;Part 5&lt;/strong&gt; of &lt;a href="https://dev.to/meddy672/series/9792"&gt;Working With NodeJS&lt;/a&gt;, a series of articles to help simplify learning Node.js. In this topic I will cover working with the file system.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h4&gt;

&lt;p&gt;To be able to work with the file system using Node.js you need to understand the &lt;a href="https://nodejs.org/dist/latest-v15.x/docs/api/fs.html#fs_file_system"&gt;fs&lt;/a&gt; and &lt;a href="https://nodejs.org/dist/latest-v15.x/docs/api/path.html#path_path"&gt;path&lt;/a&gt; modules. These  modules provide the means to interact with a file system. The &lt;strong&gt;path&lt;/strong&gt; module is important for path manipulation and normalization across platforms, and the &lt;strong&gt;fs&lt;/strong&gt; module provides APIs for reading, writing, file system meta-data, and file system watching.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#paths" class="anchor"&gt;
  &lt;/a&gt;
  Paths
&lt;/h4&gt;

&lt;p&gt;When navigating a file system it is helpful to have a reference point. The &lt;strong&gt;__dirname&lt;/strong&gt; and &lt;strong&gt;__filename&lt;/strong&gt; variables can provide such a point. These two variables are defined whenever Node.js executes a &lt;a href="https://nodejs.org/dist/latest-v15.x/docs/api/modules.html#modules_the_module_wrapper"&gt;modules code&lt;/a&gt;. The &lt;em&gt;__filename&lt;/em&gt; variable holds the absolute path to the currently executing file, and &lt;em&gt;__dirname&lt;/em&gt; holds the absolute path to the directory where the currently executing file resides.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Path to current working directory&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Path to current executing file&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;With these reference points, we can build paths for files and directories programmatically. The most commonly used method to build a path is the &lt;code&gt;join&lt;/code&gt; method. The &lt;a href="https://nodejs.org/dist/latest-v15.x/docs/api/path.html#path_path_join_paths"&gt;join&lt;/a&gt; method joins all given path segments together using the platform-specific separator as a delimiter, then normalizes the resulting path.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The above code snippet will output the absolute path for &lt;em&gt;out.txt&lt;/em&gt; to the console. You can add as many segments to the path as you need. Lets say you wanted to construct the path for &lt;em&gt;out.txt&lt;/em&gt; so the path leads to a subdirectory called &lt;strong&gt;text&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the above code snippet, the segment &lt;em&gt;text&lt;/em&gt; is now apart of the absolute path for out.txt. Its important to know the &lt;code&gt;join&lt;/code&gt; method does not create the directory &lt;em&gt;text&lt;/em&gt;, but only a path which leads to it. There are other methods within the path module which can be used to construct a path, however, the &lt;code&gt;join&lt;/code&gt; method is the most commonly used. In addition to path builders, there are path deconstructors. A path deconstructor will break down a path into its properties.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;parse&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/home/user/dir/file.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#output" class="anchor"&gt;
  &lt;/a&gt;
  output
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;root&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;dir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/home/user/dir&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;file.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;ext&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;file&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the above code snippet, the &lt;code&gt;parse&lt;/code&gt; method is used to deconstruct the path into the segments which compose it. The important thing to understand about the &lt;a href="https://nodejs.org/dist/latest-v15.x/docs/api/path.html#path_windows_vs_posix"&gt;path&lt;/a&gt; module is that its platform specific. This means if you are working on a different operating system all the methods within the module are still applicable.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#files-reading-and-writing" class="anchor"&gt;
  &lt;/a&gt;
  Files - Reading and Writing
&lt;/h4&gt;

&lt;p&gt;The &lt;a href="https://nodejs.org/dist/latest-v15.x/docs/api/fs.html#fs_file_system"&gt;fs&lt;/a&gt; module provides methods for interacting with file system. The module contains both synchronous and asynchronous methods. All the names of synchronous methods in the fs module end with &lt;strong&gt;Sync&lt;/strong&gt;. This important to remember because synchronous methods will block the main process until the operation has completed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readFileSync&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#output" class="anchor"&gt;
  &lt;/a&gt;
  output
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Buffer 27 75 73 65 20 73 74 72 69 63 74 27 0a 63 6f 6e 73
74 20 7b 20 72 65 61 64 46 69 6c 65 53 79 6e 63 20 7d 20 3d
20 72 65 71 75 69 72 65 28 27 66 73 27 ... 66 more bytes&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the above code snippet, the &lt;code&gt;readFileSync&lt;/code&gt; is used to read its own file contents. If no encoding is specified then a Buffer is returned. The encoding can be set by configuring an options object on &lt;code&gt;readFileSync&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readFileSync&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;utf8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the above code snippet, the encoding was set to &lt;em&gt;utf8&lt;/em&gt; which will allow a string to be returned instead of a Buffer. Some encoding options you can set for read methods are: &lt;em&gt;ascii, base64, hex, utf8, and binary&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Writing synchronously can be accomplished using the &lt;code&gt;writeFileSync&lt;/code&gt; method. At a minimum the method takes a filename and the data to be written to the file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;writeFileSync&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;writeFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If the file already exists then the operation will replace the file, and if not the file will be created. Like the read method, &lt;code&gt;writeFileSync&lt;/code&gt; can be configured with options as well. If instead of replacing the entire file you wish to add to it, you can configure &lt;code&gt;writeFileSync&lt;/code&gt; with the &lt;strong&gt;flag&lt;/strong&gt; option and set it to append.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;writeFileSync&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;writeFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;For a full list of supported flags, see &lt;a href="https://nodejs.org/dist/latest-v12.x/docs/api/fs.html#fs_file_system_flags"&gt;File System Flags&lt;/a&gt; section of the Node.js Documentation. It is important to remember that synchronous read and write operations should be surrounded with &lt;code&gt;try/catch&lt;/code&gt; blocks for error handling.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readFileSync&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;noFile.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#output" class="anchor"&gt;
  &lt;/a&gt;
  output
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ENOENT: no such file or directory, open 'noFile.txt'
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Up to this point, the reading and writing methods have been synchronous operations. However, Node.js is single threaded and therefore works best with asynchronous operations. The &lt;strong&gt;fs&lt;/strong&gt; module provides both callback and promise based methods to perform asynchronous operations.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readFile&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;utf8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the above code snippet, the &lt;code&gt;readFile&lt;/code&gt; method is used instead of the &lt;code&gt;readFileSync&lt;/code&gt; method. Both methods perform the same operation, however, &lt;code&gt;readFile&lt;/code&gt; is an asynchronous operation. Let see an asynchronous writing operation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;writeFile&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;writeFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;flag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Write Successful&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the above code snippet, the &lt;code&gt;writeFile&lt;/code&gt; method performs the same operation as the &lt;code&gt;writeFileSync&lt;/code&gt;, but now its an asynchronous operation. The &lt;strong&gt;important&lt;/strong&gt; thing to remember is that Node.js is single threaded so you want to avoid using operations that block further execution of code. All methods within the &lt;strong&gt;fs&lt;/strong&gt; module that will block further execution of code end in &lt;strong&gt;Sync&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;fs&lt;/strong&gt; module also supports promise based asynchronous operations. To use the promise based operations append the &lt;em&gt;.promises&lt;/em&gt; on the &lt;code&gt;require('fs')&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;writeFile&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;promises&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the above code snippet, the both &lt;code&gt;readFile&lt;/code&gt; and &lt;code&gt;writeFile&lt;/code&gt; are asynchronous operations, but now they now return promises. This is useful because now &lt;code&gt;async/await&lt;/code&gt; can be used. This gives the code a cleaner and traditional look. Lets see an example. I'll use the &lt;code&gt;readFile&lt;/code&gt; method to read its own content and then use the &lt;code&gt;writeFile&lt;/code&gt; method to write the content to the file &lt;em&gt;out.txt&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;writeFile&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;promises&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;readFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;utf8&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;out&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;writeFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;out&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#outtxt" class="anchor"&gt;
  &lt;/a&gt;
  out.txt
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'use strict';
const { join } = require('path');
const { readFile, writeFile } = require('fs').promises;
async function run () {
  const contents = await readFile(__filename, {encoding: 'utf8'});
  const out = join(__dirname, 'out.txt');
  await writeFile(out, contents);
}

run().catch((err) =&amp;gt; {
    console.error(err);
});
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#file-streams" class="anchor"&gt;
  &lt;/a&gt;
  File Streams
&lt;/h4&gt;

&lt;p&gt;Remember the &lt;strong&gt;fs&lt;/strong&gt; module has four API types: &lt;em&gt;Synchronous, Callback-based, Promise-based, and Stream-based&lt;/em&gt;. The &lt;strong&gt;fs&lt;/strong&gt; module has &lt;code&gt;createReadStream&lt;/code&gt; and &lt;code&gt;createWriteStream&lt;/code&gt; methods which allow us to read and write files in chunks. Streams are ideal when handling very large files that can be processed incrementally.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;pipeline&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;stream&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createReadStream&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;createWriteStream&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;pipeline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;createReadStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__filename&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nx"&gt;createWriteStream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Finished writing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the above code snippet, its the same as before, we read the content of the file and write it to &lt;em&gt;out.txt&lt;/em&gt;, but now we are using streams. Quick note, notice that we didn't pass any content to &lt;code&gt;createWriteStream&lt;/code&gt; like we did for &lt;code&gt;writeFile&lt;/code&gt;. This is because we're using a &lt;code&gt;pipeline&lt;/code&gt; and the data is automatically passed from one phase of the pipe to the next.&lt;/p&gt;

&lt;p&gt;Before moving on to directories lets take a look at some other useful file methods within the &lt;strong&gt;fs&lt;/strong&gt; module.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#change-the-permissions-of-a-file" class="anchor"&gt;
  &lt;/a&gt;
  change the permissions of a file
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;chmodSync&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;readFileSync&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;chmodSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mo"&gt;0o000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The above code snippet uses the &lt;code&gt;chmodSync&lt;/code&gt; to change the permissions of the file &lt;em&gt;out.txt&lt;/em&gt;. When the &lt;code&gt;readFileSync&lt;/code&gt; method is used an error is thrown &lt;em&gt;EACCES: permission denied, open 'out.txt'&lt;/em&gt;. To learn more about &lt;code&gt;chmod&lt;/code&gt; or &lt;code&gt;chmodSync&lt;/code&gt; see &lt;a href="https://nodejs.org/dist/latest-v15.x/docs/api/fs.html#fs_fs_chmod_path_mode_callback"&gt;Node.js Documentation&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#change-the-owner-of-a-file" class="anchor"&gt;
  &lt;/a&gt;
  change the owner of a file
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;chown&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;chown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6101&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Owner changed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#copying-a-file" class="anchor"&gt;
  &lt;/a&gt;
  copying a file
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;copyFile&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;copyFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.backup.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;File copied successful&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#deleting-a-file" class="anchor"&gt;
  &lt;/a&gt;
  deleting a file
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;rm&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;rm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;out.backup.txt&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;File deleted&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#directories" class="anchor"&gt;
  &lt;/a&gt;
  Directories
&lt;/h4&gt;

&lt;p&gt;The &lt;em&gt;fs&lt;/em&gt; module provides the means for working with directories. Similar to files, the &lt;em&gt;fs&lt;/em&gt; module provides three main operations to read the content of a directory.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Synchronous&lt;/li&gt;
&lt;li&gt;Callback&lt;/li&gt;
&lt;li&gt;Promise&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To read the content of a directory you can use the &lt;code&gt;readdirSync&lt;/code&gt;, &lt;code&gt;readdir&lt;/code&gt; which is callback based, or its asynchronous counterpart &lt;code&gt;readdir&lt;/code&gt; which is promise-based obtained through &lt;code&gt;require('fs').promises&lt;/code&gt;. Lets see some examples.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#synchronous" class="anchor"&gt;
  &lt;/a&gt;
  Synchronous
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readdirSync&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readdirSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#callback" class="anchor"&gt;
  &lt;/a&gt;
  Callback
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readdir&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;readdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;callback&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#promise" class="anchor"&gt;
  &lt;/a&gt;
  Promise
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readdir&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;promises&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;readdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;promise&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the above code snippets, all three snippets do the same thing, that is read the content of the directory of the currently executing file. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#file-meta-data" class="anchor"&gt;
  &lt;/a&gt;
  File Meta Data
&lt;/h4&gt;

&lt;p&gt;Metadata about files can be obtained with the following methods:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fs.stat, fs.statSync, fs.promises.stat&lt;/li&gt;
&lt;li&gt;fs.lstat, fs.lstatSync, fs.promises.lstat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The only difference between the stat and lstat methods is that stat follows symbolic links, and lstat will get meta data for symbolic links instead of following them. Lets see an example of how we could read the content of a directory and determine wether if the content returned was a file or directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readdirSync&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;statSync&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;readdirSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;statSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;typeLabel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isDirectory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dir: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;file: &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;typeLabel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#watching-files-and-directories" class="anchor"&gt;
  &lt;/a&gt;
  Watching Files and Directories
&lt;/h4&gt;

&lt;p&gt;The &lt;strong&gt;fs&lt;/strong&gt; module has the capabilities for watching changes to a file or directory using the &lt;code&gt;watch&lt;/code&gt; method. Whenever changes are made the &lt;code&gt;watch&lt;/code&gt; method is triggered and its callback function is executed. Let see a simple example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;watch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;watch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The callback function of the &lt;code&gt;watch&lt;/code&gt; method takes an &lt;strong&gt;event&lt;/strong&gt; and &lt;strong&gt;filename&lt;/strong&gt; as parameters. Both parameters correspond to the file or directory in which the change happened. For the final example we'll use a combination of what we learned in conjunction with the &lt;code&gt;watch&lt;/code&gt; method. We'll create a small program(index.js) that will monitor the content of our working directory.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#indexjs" class="anchor"&gt;
  &lt;/a&gt;
  index.js
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;watch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;readdirSync&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;statSync&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;readdirSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;watch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__dirname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;ctimeMs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;mtimeMs&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;statSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;evt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;created&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ctimeMs&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;mtimeMs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;evt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;content-updated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;evt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;status-updated&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ENOENT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;finally&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the above code snippet, we use &lt;code&gt;Set&lt;/code&gt;, (a unique list), initializing it with the array of &lt;code&gt;files&lt;/code&gt; already present in the current workings directory. To get the current working directory the &lt;code&gt;resolve(__dirname)&lt;/code&gt; method is used. Alternatively, one could have used &lt;code&gt;resolve('.')&lt;/code&gt; to achieve the same effect. Next, we begin to &lt;code&gt;watch&lt;/code&gt; our current working directory. If a change is emitted within our working directory, we'll extract the &lt;code&gt;ctimeMs&lt;/code&gt; and &lt;code&gt;mtimeMs&lt;/code&gt; properties of the file using the &lt;code&gt;statSync&lt;/code&gt; method. If the file is not apart of our list then we set the &lt;code&gt;evt&lt;/code&gt; variable to &lt;strong&gt;created&lt;/strong&gt; and add the filename using the &lt;code&gt;add&lt;/code&gt; method. However, if the file is apart of our list then we'll check to see if the &lt;code&gt;ctimeMs&lt;/code&gt; and &lt;code&gt;mtimeMs&lt;/code&gt; are equal. If both properties are equal &lt;code&gt;evt&lt;/code&gt; is set to &lt;strong&gt;content-updated&lt;/strong&gt; and if not &lt;code&gt;evt&lt;/code&gt; is set to &lt;strong&gt;status-updated&lt;/strong&gt;. Finally, we log the &lt;strong&gt;event&lt;/strong&gt; and &lt;strong&gt;filename&lt;/strong&gt; to the console with within the &lt;code&gt;finally&lt;/code&gt; block.&lt;/p&gt;

&lt;p&gt;There is a lot more to discover within the &lt;a href="https://nodejs.org/dist/latest-v15.x/docs/api/path.html#path_path"&gt;path&lt;/a&gt; and &lt;a href="https://nodejs.org/dist/latest-v15.x/docs/api/fs.html#fs_file_system"&gt;fs&lt;/a&gt; modules of Node.js and you should take some time to explore the full power of its APIs. As always thank you for taking time to read this article and if you found it helpful subscribe to the series because more is on the way. Take care.&lt;/p&gt;

</description>
      <category>development</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>Nokia 1100 Simulation</title>
      <author>Khang</author>
      <pubDate>Fri, 18 Dec 2020 16:15:04 +0000</pubDate>
      <link>https://dev.to/khangnd/nokia-1100-simulation-2hef</link>
      <guid>https://dev.to/khangnd/nokia-1100-simulation-2hef</guid>
      <description>&lt;p&gt;Heya, welcome to another brief article of mine.&lt;/p&gt;

&lt;p&gt;This time I would like to share a silly, just-for-fun, unfinished, and never-to-be-finished pen I wrote back when I first started learning web dev - a simulation of the Nokia 1100 in pure HTML, CSS, and JS. Enjoy.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/khangnd/embed/abmWpaY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>html</category>
      <category>javascript</category>
      <category>css</category>
    </item>
    <item>
      <title>Create a Dynamic Sitemap with Next.js</title>
      <author>Corey O'Donnell</author>
      <pubDate>Fri, 18 Dec 2020 15:01:06 +0000</pubDate>
      <link>https://dev.to/codebycorey/create-a-dynamic-sitemap-with-next-js-14do</link>
      <guid>https://dev.to/codebycorey/create-a-dynamic-sitemap-with-next-js-14do</guid>
      <description>&lt;p&gt;One of the best ways to drive traffic to your website is to have strong Search Engine Optimization (SEO). You can provide search engines with all the URLs for your website using a &lt;strong&gt;Sitemap&lt;/strong&gt;. This allows for easier indexing and more efficient crawling by the search engines.&lt;/p&gt;

&lt;p&gt;Maintaining a static sitemap can be tedious and more work if your website is always changing. The best solution is to dynamically create one.&lt;/p&gt;

&lt;p&gt;Let's check out a couple of ways we can accomplish this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-sitemap-using-a-script-at-build-time" class="anchor"&gt;
  &lt;/a&gt;
  Create a sitemap using a script at build time
&lt;/h2&gt;

&lt;p&gt;If all of your content and pages are local in your project, you can easily use a script at build time to create a &lt;code&gt;sitemap.xml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;My blog uses &lt;a href="https://mdxjs.com/"&gt;MDX&lt;/a&gt; files instead of a CMS, so I do not have to worry about my content changing after build time.&lt;/p&gt;

&lt;p&gt;My script uses &lt;code&gt;globby&lt;/code&gt; to traverse the file system and return all my routes. First thing we need to do is install it as a dev dependency.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm i -D globby
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Then we can create the script:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;scripts/generate-sitemap.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;globby&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;globby&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;generateSitemap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Fetch all routes based on patterns&lt;/span&gt;
  &lt;span class="c1"&gt;// Your folder structure might be different so change bellow to match your needs&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;globby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pages/**/*.{ts,tsx,mdx}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// All routes inside /pages&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_content/**/*.mdx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// All MDX files inside my /_content&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!pages/**/[*.{ts,tsx}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Ignore my dynamic route index Example /pages/blog/[slug].tsx&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!pages/_*.{ts,tsx}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Ignore next.js files&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!pages/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Ignore API routes&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!pages/admin.tsx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// Ignore pages not meant to be indexed&lt;/span&gt;
  &lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="nx"&gt;urlSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Remove none route related parts of filename.&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pages&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_content&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;.tsx|.ts&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.mdx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="c1"&gt;// Remove the word index from route&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;route&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/index&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="c1"&gt;// Build url portion of sitemap.xml&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;url&amp;gt;&amp;lt;loc&amp;gt;https://codebycorey.com&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/loc&amp;gt;&amp;lt;/url&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Add urlSet to entire sitemap string&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sitemap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&amp;lt;urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;urlSet&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/urlset&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// Create sitemap file&lt;/span&gt;
  &lt;span class="nx"&gt;fs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;writeFileSync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;public/sitemap.xml&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sitemap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;generateSitemap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;To run the script at build time, you can create a &lt;code&gt;next.config.js&lt;/code&gt; file. This will modify Next.js build process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;generateSitemap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./scripts/generate-sitemap&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;generateRSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./scripts/generate-rss&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;webpack&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;isServer&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isServer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;generateSitemap&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now when you build your website, you should see a freshly created &lt;code&gt;public/sitemap.xml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lastly, I recommend adding &lt;code&gt;public/sitemap.xml&lt;/code&gt; to your &lt;code&gt;.gitignore&lt;/code&gt; since it is a generated file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-sitemap-using-a-route" class="anchor"&gt;
  &lt;/a&gt;
  Create a sitemap using a route
&lt;/h2&gt;

&lt;p&gt;You cannot create a &lt;code&gt;sitemap&lt;/code&gt; at build time When you are using a content management system (CMS). It might work when you first build your project, but if you push out new content after the build, your &lt;code&gt;sitemap&lt;/code&gt; will be outdated.&lt;/p&gt;

&lt;p&gt;What we could do is create an API route to fetch the data, and we rewrite the sitemap request to use the API route.&lt;/p&gt;

&lt;p&gt;First create the API route:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;pages/api/sitemap.ts&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Fetch data from a CMS.&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MOCK_URL&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;externalPosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;externalPosts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`/posts/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;localRoutes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;globby&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pages/**/*.{ts,tsx,mdx}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// All routes inside /pages&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!pages/**/[*.{ts,tsx}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Ignore my dynamic route index Example /pages/blog/[slug].tsx&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!pages/_*.{ts,tsx}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Ignore next.js files&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!pages/api&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// Ignore API routes&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;!pages/admin.tsx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// Ignore pages not meant to be indexed&lt;/span&gt;
  &lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;concat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;localRoutes&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;urlSet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// Remove none route related parts of filename.&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;pages&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_content&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;.tsx|.ts&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.mdx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="c1"&gt;// Remove the word index from route&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;route&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/index&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="c1"&gt;// Build url portion of sitemap.xml&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;url&amp;gt;&amp;lt;loc&amp;gt;https://codebycorey.com&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/loc&amp;gt;&amp;lt;/url&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// Add urlSet to entire sitemap string&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sitemap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;&amp;lt;urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;urlSet&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/urlset&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="c1"&gt;// set response content header to xml&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Content-Type&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text/xml&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="c1"&gt;// write the sitemap&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sitemap&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we can create a route rewrite to make &lt;code&gt;/sitemap.xml&lt;/code&gt; actually call &lt;code&gt;/api/sitemap&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;next.config.js&lt;/code&gt; and add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;rewrites&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/sitemap.xml&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/sitemap&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now when you navigate to &lt;code&gt;http://localhost:3000/sitemap.xml&lt;/code&gt;, you should see your sitemap based on local files and your CMS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-robotstxt" class="anchor"&gt;
  &lt;/a&gt;
  Bonus: Robots.txt
&lt;/h2&gt;

&lt;p&gt;One additional thing you can add to your website to improve SEO is a &lt;code&gt;robots.txt&lt;/code&gt; (AKA robots exclusion standard). This basically tells search engines which routes they are not allowed to index.&lt;/p&gt;

&lt;p&gt;Create &lt;code&gt;public/robots.txt&lt;/code&gt; and add&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;User-agent: *
Disallow:

Sitemap: https://your-url.com/sitemap.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This will tell search engines they are welcome to crawl your entire website.&lt;/p&gt;

&lt;p&gt;If you would like to block any pages from being indexed, add it as disallow field.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;User-agent: *
Disallow: /admin
Disallow: /secret-page

Sitemap: https://your-url.com/sitemap.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;ul&gt;
&lt;li&gt;Follow me on &lt;a href="https://twitter.com/CodeByCorey"&gt;Twitter&lt;/a&gt; for random posts about tech and programming. I am also documenting my journey learning design.&lt;/li&gt;
&lt;li&gt;Nest.js &lt;a href="https://nextjs.org/docs/getting-started"&gt;Docs&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>nextjs</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
    </item>
    <item>
      <title>Testing is important: three ways to easily improve test quality</title>
      <author>Douglas Parsons</author>
      <pubDate>Fri, 18 Dec 2020 14:39:00 +0000</pubDate>
      <link>https://dev.to/dglsparsons/testing-is-important-three-ways-to-easily-improve-test-quality-4pak</link>
      <guid>https://dev.to/dglsparsons/testing-is-important-three-ways-to-easily-improve-test-quality-4pak</guid>
      <description>&lt;p&gt;It’s no secret that testing is important. We rely on tests to describe intended behaviour, catch any subtle bugs and prevent regressions in our code. But why are tests always such a pain to write well? In mature codebases tests quickly become convoluted and, in my experience, testing is one of the most challenging aspects of software engineering.&lt;/p&gt;

&lt;p&gt;This is because we don’t hold our tests – unit tests, integration tests, end-to-end tests or smoke-tests – to the same standards production code. Poor testing can make a codebase even more difficult to maintain than having no tests at all. Despite this, good testing practice flies under the radar and is easily neglected.&lt;/p&gt;

&lt;p&gt;Let's challenge this and look at three qualities we expect of good production code, and apply this same thinking to test code – where such quality control is often absent.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-dont-repeat-yourself-dry" class="anchor"&gt;
  &lt;/a&gt;
  1) Don’t Repeat Yourself (DRY) 🔁
&lt;/h2&gt;

&lt;p&gt;People are obsessed with DRY when it comes to production code, often taking it &lt;a href="https://dev.to/wuz/stop-trying-to-be-so-dry-instead-write-everything-twice-wet-5g33"&gt;too far&lt;/a&gt;. This same anti-repeating is rarely applied to tests. Instead, testing becomes a haven for duplication, with information copied all-over the place. This is most prevalent in two forms.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Asserting&lt;/strong&gt; – Often there are a tonne of very similar tests, copy pasted with minor tweaks. In reality, they often cover the same test case, with the rationale that it’s “making extra sure”.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Setup&lt;/strong&gt; – Some tests require laborious setup. Creating mock users, seeding test-data and making sure any dependencies are stubbed out. This setup often gets duplicated between tests or test-suites, with only minor tweaks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Duplicating assertions and setup both have the same knock-on impact. Bug-fixes, feature tweaks or refactoring quickly becomes a headache. Instead of being able to make a simple modification, a change becomes a game of whack-a-mole, wading through duplicated logic with seemingly unrelated tests starting to fail. You then notice some mocks are wrong, some tests don’t even work. We end up feeling like we need a sledgehammer rather than a scalpel.&lt;/p&gt;

&lt;p&gt;Dave Cheney published a brilliant micro-blog on this very topic - you should definitely &lt;a href="https://dave.cheney.net/2020/12/15/the-story-of-the-one-line-fix"&gt;check it out&lt;/a&gt;. It summarises the mentality behind most duplication far better than I can.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-scrutinize-tests-the-same-as-any-other-code" class="anchor"&gt;
  &lt;/a&gt;
  2) Scrutinize tests the same as any other code 🔍
&lt;/h2&gt;

&lt;p&gt;I recently &lt;a href="https://dev.to/dglsparsons/don-t-write-utils-how-to-become-an-amazing-programmer-by-naming-carefully-m1m"&gt;wrote a post on&lt;/a&gt; one of the larger projects I’ve worked on during my career. This project, despite having some talented engineers working on it, was a complete mess. In particular, let's talk about code reviews and tests.&lt;/p&gt;

&lt;p&gt;We all worked in the same physical office, so pull-requests were usually reviewed face-to-face.&lt;/p&gt;

&lt;p&gt;This was great and worked really well – it was much easier to have open discussions, loop in people who should be involved, or to get answers to questions. I once overheard a discussion over a pull-request between two experienced developers. Their conversation bounced around discussing sensible topics – the high-level approach to solving a problem, justifying the design and making sure it was efficient. They then delved into the low-level, technical details – making suggestions for improving variables names, neatening up some abstractions, adhering to best practices and agreed standards.&lt;/p&gt;

&lt;p&gt;Then it came to &lt;del&gt;reviewing&lt;/del&gt; the tests.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"Yeah, it has tests"&lt;/em&gt; said one engineer to the other. &lt;em&gt;"Do they pass?"&lt;/em&gt;, the second questioned. &lt;em&gt;"Yes"&lt;/em&gt;, replied the first. &lt;em&gt;"That's good"&lt;/em&gt;, confirmed the second, as both engineers sat nodding to each other as they absent-mindedly scrolled through several hundred lines of tests.&lt;/p&gt;

&lt;p&gt;Let's look at the real problem here: the measure of quality had nothing to do with the tests, beyond them simply existing and passing. There was no discussion around edge cases. Were they testing the right things? Was the generation of the test data suitable? Did they take the right approach to mocking? Did the tests even accurately describe what they're doing.&lt;/p&gt;

&lt;p&gt;It came to no surprise to anyone, certainly myself, that the majority of tests on the project were useless. Needlessly so, too. By asking simple questions and caring enough to review the tests properly, they could have saved hours of work later down the line, for the sake of five minutes now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-avoid-mocking-integrations-in-integration-tests" class="anchor"&gt;
  &lt;/a&gt;
  3) Avoid mocking integrations in integration tests 🔗
&lt;/h2&gt;

&lt;p&gt;It sounds obvious when it’s written out like that, right? But you’d be amazed how often this happens. Consider that we are writing a function responsible for adding new users to a mailing list for a product. A test for this might look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;mailing list list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;beforeEach&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spyOn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emailStorage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;save&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="nx"&gt;jest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spyOn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emailStorage&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;rollback&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
  &lt;span class="p"&gt;})&lt;/span&gt; 

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should add an email to a mailing list&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mockEmail&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;mailingList&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEmail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toEqual&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; 
      &lt;span class="na"&gt;email&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
      &lt;span class="na"&gt;subscribed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; 
    &lt;span class="p"&gt;})&lt;/span&gt; 
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emailStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toHaveBeenCalledTimes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emailStorage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rollback&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toNotHaveBeenCalled&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This looks fairly typical, right? Although you could say that’s a lot of mocking for one test. It prompts the question:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“What are we actually testing here?”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Are we &lt;em&gt;unit&lt;/em&gt; testing the logic the function contains? Or are we testing that it &lt;em&gt;integrates&lt;/em&gt; properly with the email storage?&lt;/p&gt;

&lt;p&gt;If it's a unit test, you’d argue to mock as much as you can so you are just testing the logic. We seem to be asserting on the mocks a lot though, which wouldn’t be the case if we weren’t also testing the integration.&lt;/p&gt;

&lt;p&gt;In this case, how useful really is this test? It’s attempting to test an integration by integrating with a mock. This test looks a lot like it’s not really testing any behaviour at all - it’s just checking that the code does what the code does, at the same level of abstraction.&lt;/p&gt;

&lt;p&gt;Say for example, that the email storage didn’t behave the way we expected it to. Would this test fail? Should this test fail? If we rewrote the test to use the real email storage, and then tested it worked in reality, would this be more valuable?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-remarks" class="anchor"&gt;
  &lt;/a&gt;
  Closing Remarks 💬
&lt;/h2&gt;

&lt;p&gt;Tests are just more code. More code that you should treat with the same level of respect as any other code. Write them well, and they can be a powerful asset that help you safely refactor and add new features. Write them poorly, and they will quickly become a burden. Every change you make becomes wading through mud, sledgehammer in hand. We must think carefully how to write our tests, and be as meticulous with testing as we are with the rest of our code. Unless we do this, tests are a nightmare.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>testing</category>
      <category>beginners</category>
      <category>javascript</category>
    </item>
    <item>
      <title>December 18th, 2020: What did you learn this week?</title>
      <author>Nick Taylor (he/him)</author>
      <pubDate>Fri, 18 Dec 2020 13:50:31 +0000</pubDate>
      <link>https://dev.to/nickytonline/december-18th-2020-what-did-you-learn-this-week-458j</link>
      <guid>https://dev.to/nickytonline/december-18th-2020-what-did-you-learn-this-week-458j</guid>
      <description>&lt;p&gt;It's that time of the week again.&lt;/p&gt;

&lt;p&gt;So wonderful devs, what did you learn this week? It could be programming tips, career advice etc.&lt;/p&gt;


&lt;center&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/w7fJO4TOqiaSQ/giphy-downsized-large.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/w7fJO4TOqiaSQ/giphy-downsized-large.gif" alt="Deadpool and his cohorts chatting"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/center&gt;

&lt;p&gt;Feel free to comment with what you learnt and/or reference your TIL post to give it some more exposure.&lt;/p&gt;


&lt;div class="ltag__tag ltag__tag__id__5305"&gt;
  
    .ltag__tag__id__5305 .follow-action-button{
      background-color: #ffedc9 !important;
      color: #820000 !important;
      border-color: #ffedc9 !important;
    }
  
    &lt;div class="ltag__tag__content"&gt;
      &lt;h2&gt;#&lt;a href="/t/todayilearned" class="ltag__tag__link"&gt;todayilearned&lt;/a&gt; 
&lt;/h2&gt;
      &lt;div class="ltag__tag__summary"&gt;
        Summarize a concept that is new to you.
      &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;And remember, if something you learnt was a big win for you, then you know where to drop it as well.👇👇🏻👇🏼👇🏽👇🏾👇🏿&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/graciegregory" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O_NJBg3J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--W9v1So-5--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/342975/98b7a8ed-aa91-48a3-bcc0-ebe2c13b5893.png" alt="graciegregory image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devteam/what-was-your-win-this-week-2a9p" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What was your win this week?&lt;/h2&gt;
      &lt;h3&gt;Gracie Gregory (she/her) ・ Dec 18 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#weeklyretro&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



&lt;center&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/U6pavBhRsbNbPzrwWg/giphy-downsized-large.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/U6pavBhRsbNbPzrwWg/giphy-downsized-large.gif" alt="Big win. Danny Devito walking away from a huge explosion"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;/center&gt;

</description>
      <category>weeklylearn</category>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>My Commitment to "Commit"</title>
      <author>Avery Swafford</author>
      <pubDate>Fri, 18 Dec 2020 12:41:11 +0000</pubDate>
      <link>https://dev.to/aswaff/my-commitment-to-commit-3b3p</link>
      <guid>https://dev.to/aswaff/my-commitment-to-commit-3b3p</guid>
      <description>&lt;p&gt;I had been coding on my project for hours, and it was starting to get late in the day. I decided it was time to finally come out of my office at home, and focus on other (non coding) things before the night was over. As my wife and I were getting ready for bed, the power randomly went out. When I say "randomly" there were no storms, no wind, just a completely random power outage. Thankfully, our power disruption was short lived, and we had our power back in less than 5 minutes. &lt;/p&gt;

&lt;p&gt;I began to think about my project I had coding on my desktop, which of course lost power. I remembered committing my code and pushing to GitHub before leaving my office, which was a relief to know that all of my work no matter what, was safe.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#git-may-not-feel-necessary-for-us-that-dont-code-full-time" class="anchor"&gt;
  &lt;/a&gt;
  Git May Not Feel Necessary for Us That Don’t Code Full Time
&lt;/h2&gt;

&lt;p&gt;I don’t code full time, as I’m sure many of you may not either. I’m not a part of a professional work project or team. So if I don’t use a remote repository or any form of version control on my projects, it doesn’t affect anyone else. When I first started to develop, I almost never used git or GitHub, unless I wanted to test with a site live. &lt;/p&gt;

&lt;p&gt;But guess what? This was a bad coding habit. I found myself coming back to projects I had worked on months prior that I had not used git, wondering where I had left off, or trying find my project in another directory location. &lt;/p&gt;

&lt;p&gt;It’s easy I think for beginners to think of git as just a team tool.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-importance-of-git" class="anchor"&gt;
  &lt;/a&gt;
  The importance of git
&lt;/h2&gt;

&lt;p&gt;The importance of git, and a remote repository can’t be stressed enough. Not only can local files be lost on a project, but also version control, collaboration and even personal motivation. &lt;/p&gt;

&lt;p&gt;What if you want to come back to a project later, or share with a developer friend, or even roll back to a previous code base you had? &lt;/p&gt;

&lt;p&gt;I think the importance of git isn’t only for teams and developers that do this for a living, but also developers that do this in their spare time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-personal-commitment" class="anchor"&gt;
  &lt;/a&gt;
  My personal commitment
&lt;/h2&gt;

&lt;p&gt;One thing I love about GitHub is the contribution section in your profile overview. It shows all of your activity in your projects separated by day. This is a great way to see your progress, and to see days where you have accomplished a lot. &lt;/p&gt;

&lt;p&gt;I use GitHub as motivation to keep learning. I try to make at least a commit (and push) a day. Even if it’s Sunday at 9pm it’s just cleaning up a readme, it has to be something. It forces me daily to think about what I am going to work on, and gets me in front of code daily. This has helped me also in sticking to a development schedule.&lt;/p&gt;

&lt;p&gt;When we make a habit of coding, it helps us who are self-taught to keep learning and continually get better.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>git</category>
      <category>beginners</category>
      <category>github</category>
    </item>
  </channel>
</rss>
