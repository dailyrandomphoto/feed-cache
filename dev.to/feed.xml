<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Top 5 Paid Open Source Programs for Student Developers</title>
      <author>Nomadevüíªüî±</author>
      <pubDate>Tue, 09 Nov 2021 07:34:01 +0000</pubDate>
      <link>https://dev.to/thenomadevel/top-5-paid-open-source-programs-for-student-developers-53h5</link>
      <guid>https://dev.to/thenomadevel/top-5-paid-open-source-programs-for-student-developers-53h5</guid>
      <description>&lt;p&gt;Hello, everyone  &lt;a href="https://twitter.com/thenomadevel"&gt;Nomadev&lt;/a&gt;  here, back with another blog on tech. Today I will be sharing the top paid open-source programs for student developers. Open source is source code that is made freely available for possible modification and redistribution. &lt;br&gt;
Contribution to open source is a great way to get real-world software development and other domain experience. The main motto of most programs is to help students to get some experience in open source development. so let's start&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-google-summer-of-code-gsoc"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://summerofcode.withgoogle.com"&gt;Google Summer of Code, GSoC&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;GSoC is a program started by Google that aims to promote open-source development among university students and it runs for 10 weeks. It helps organizations connect with students and get them started with their open-source projects. The stipend offered is &lt;strong&gt;1500 - 3300$&lt;/strong&gt; depending upon the region. In the process, code is created and released for all. The acceptance rate for GSoC is around 20 to 25 percent and hence the competition is intense and gets more intense with every passing year.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RyolQ2qw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636441589088/4tbqcI6cD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RyolQ2qw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636441589088/4tbqcI6cD.png" alt="gsoc.png" width="804" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-outreachy"&gt;
  &lt;/a&gt;
  2. &lt;a href="//outreachy.org"&gt;Outreachy&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Outreachy is a diversity initiative that provides paid, remote internships to people subject to systemic bias and impacted by underrepresentation in the technical industry where they are living.&lt;/p&gt;

&lt;p&gt;Outreachy internships are:&lt;/p&gt;

&lt;p&gt;üíµ Paid - $6,000 USD total internship stipend&lt;/p&gt;

&lt;p&gt;üåç Remote - both interns and mentors work remotely&lt;/p&gt;

&lt;p&gt;üï∞ 3 months - internships run May to August, or December to March&lt;/p&gt;

&lt;p&gt;Outreachy interns work with experienced mentors from open source communities. Outreachy internship projects may include programming, user experience, documentation, graphical design, data science, marketing, user advocacy, or community event planning.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--thr7UTla--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636441618913/K1r1SWx4U.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--thr7UTla--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636441618913/K1r1SWx4U.png" alt="outreachy.png" width="757" height="323"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-mlh-fellowship"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://fellowship.mlh.io"&gt;MLH Fellowship&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It is a 12-week internship for aspiring technologists. Programs pair fun, educational curriculum with practical experience that you can put on your resume right away. It's collaborative, remote, and happens under the guidance of mentors.&lt;br&gt;
As an MLH Fellow on the Open Source Track, you'll contribute to the type of Open Source projects that every company depends on. You'll experience what it's like to work on a real software engineering team first-hand.&lt;br&gt;
All students, as well as non-student professionals, can apply to the MLH Fellowship. If required, a need-based stipend of up to** $5000** is available depending on your time commitment, the country you reside in, your living conditions, and whether you are able to afford basic necessities like food, shelter, and childcare.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OdfhE2Wq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636441655206/Wl2G2pKKs.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OdfhE2Wq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636441655206/Wl2G2pKKs.jpeg" alt="mlh.jpg" width="880" height="462"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-google-season-of-docs"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://developers.google.com/season-of-docs"&gt;Google Season Of Docs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;It provides support for open source projects to improve their documentation and gives professional technical writers an opportunity to gain experience in open source.&lt;br&gt;
You will work closely with an open-source community, solving real problems with high-quality documentation. Learn about open source and new technologies. Add will more skills to your resume. It can be a plus for you if you are already into technical writing.&lt;/p&gt;

&lt;p&gt;üíµ Paid - 2400 - 6600$ USD total internship stipend&lt;/p&gt;

&lt;p&gt;üåç Remote - both interns and mentors work remotely&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---2iJyDxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636441663679/rH1nFg6xR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---2iJyDxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636441663679/rH1nFg6xR.png" alt="gsod.png" width="690" height="256"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-reinforcement-learning%E2%80%AFopen-source-fest"&gt;
  &lt;/a&gt;
  5. Reinforcement Learning‚ÄØOpen Source Fest
&lt;/h2&gt;

&lt;p&gt;The Reinforcement Learning (RL) Open Source Fest is a global online program focused on introducing students to open source reinforcement learning programs and software development while working alongside researchers, data scientists, and engineers on the Real World Reinforcement Learning team at Microsoft Research NYC. Students will work on a four-month research programming project during their break from university (May-August 2021). Accepted students will receive a &lt;strong&gt;$10,000&lt;/strong&gt; USD stipend.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nkbKznEQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636441705202/ODmr6FiX6.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nkbKznEQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636441705202/ODmr6FiX6.jpeg" alt="micro.jpg" width="800" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These can be a great kickstart to your open source journey, I would also like to clarify that I don't favour the thing that you should only contribute to open source only if you are getting paid. Open Souce is like a family, so you need to maintain the decorum and work voluntarily, just enjoy OSS and contribute, paid opportunities are not far. If you will target only outreach, GSoC ..... You will fail in the end. And remember always mentors will choose a guy who is mixed but knows nothing over one who is arrogant but knows things. So behave properly and contribute as much as you can :)&lt;/p&gt;

&lt;p&gt;You can also follow me on  &lt;a href="https://twitter.com/thenomadevel"&gt;Twitter&lt;/a&gt; where I post daily threads on Programming, Open Source, and on Getting better remote job opportunities&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-are-a-few-check-these-out"&gt;
  &lt;/a&gt;
  Here are a few, check these out
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://twitter.com/thenomadevel/status/1448187696367636483"&gt;Top 10 Websites where you can master programming for Free&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/thenomadevel/status/1453810075445841920"&gt;TOP 7 digit seven VS Code Extension for Developers&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://twitter.com/thenomadevel/status/1451082698500362244"&gt;The Best VS Code Extensions to Supercharge Your Git&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://twitter.com/thenomadevel/status/1450355811268448261"&gt;Top 5 Sites To Find Remote Developer Jobs&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://twitter.com/thenomadevel/status/1449253111235629057"&gt;MOST USED GIT COMMANDS YOU MUST LEARN &lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to like, comment, and follow&lt;br&gt;
Happy coding!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KotxRVew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636442907133/XUigDBX1G.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KotxRVew--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636442907133/XUigDBX1G.gif" alt="follow.gif" width="800" height="600"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>opensource</category>
      <category>github</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Toggle dark mode of a page in a blink</title>
      <author>Ankur Kedia</author>
      <pubDate>Tue, 09 Nov 2021 07:24:59 +0000</pubDate>
      <link>https://dev.to/theankurkedia/toggle-dark-mode-of-a-page-in-a-blink-279m</link>
      <guid>https://dev.to/theankurkedia/toggle-dark-mode-of-a-page-in-a-blink-279m</guid>
      <description>&lt;p&gt;This article is about how you can add blink detection in your project using &lt;a href="https://www.tensorflow.org/"&gt;TensorFlow.js&lt;/a&gt;. As an example, we will toggle the dark mode on a page. It's just a fun project to get started with Machine Learning and TensorFlow.js. Here is the result.&lt;/p&gt;


        
        Sorry, your browser does not support embedded videos.
      

&lt;h2&gt;
  &lt;a href="#what-should-you-know-before-starting"&gt;
  &lt;/a&gt;
  What should you know before starting?
&lt;/h2&gt;

&lt;p&gt;Well, nothing as such. In simple terms, you can think of &lt;a href="https://github.com/tensorflow/tensorflow"&gt;TensorFlow&lt;/a&gt; as a library that infers patterns from data and identify those patterns when they occur. You can either use &lt;a href="https://github.com/tensorflow/tfjs-models#models"&gt;pre-trained models&lt;/a&gt; or train your models with &lt;a href="https://teachablemachine.withgoogle.com"&gt;Teachable Machine&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-get-started-and-set-up-a-tensorflowjs-project"&gt;
  &lt;/a&gt;
  Let's get started and set up a TensorFlow.js project
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Load model&lt;/strong&gt;: You need to load the model to be able to use it. In this case, we are using &lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/face-landmarks-detection"&gt;face landmarks detection&lt;/a&gt; model.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;faceLandmarksDetection&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tensorflow-models/face-landmarks-detection&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;tf&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tensorflow/tfjs-core&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tensorflow/tfjs-backend-webgl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;loadModel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;tf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setBackend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;webgl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;faceLandmarksDetection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;faceLandmarksDetection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SupportedPackages&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediapipeFacemesh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;maxFaces&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Setup camera&lt;/strong&gt;: To detect the face, the model needs a video stream. We will create a video element and pass its stream to estimate features on the face.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setUpCamera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;videoElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;videoElement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mediaDevices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enumerateDevices&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;defaultWebcam&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;device&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;videoinput&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;device&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Built-in&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cameraId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;defaultWebcam&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;defaultWebcam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;deviceId&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mediaDevices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getUserMedia&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;audio&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;video&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;facingMode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;deviceId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cameraId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;srcObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;play&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Start estimation&lt;/strong&gt;: For estimation, we will have to continuously monitor the face and keep checking if the user is blinking or not.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;predictions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;estimateFaces&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;returnTensors&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;flipHorizontal&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;predictIrises&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This returned prediction is an array of objects with values &lt;code&gt;likefaceInViewConfidence&lt;/code&gt;, &lt;code&gt;boundingBox&lt;/code&gt;, &lt;code&gt;mesh&lt;/code&gt;, &lt;code&gt;scaledMesh&lt;/code&gt;, &lt;code&gt;annotations&lt;/code&gt;. The &lt;a href="https://github.com/tensorflow/tfjs-models/blob/master/face-landmarks-detection/README.md#keypoints"&gt;facemesh keypoints&lt;/a&gt; can be obtained from the &lt;code&gt;annotations&lt;/code&gt; key.&lt;/p&gt;

&lt;p&gt;These were the common steps you will need to do to set up a &lt;a href="https://github.com/tensorflow"&gt;TensorFlow.js&lt;/a&gt; project with the face landmarks detection model. If all goes well, the browser should ask for camera permission when you run the project to be able to detect live video, and once the model is loaded, it starts predicting!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-blink-detection"&gt;
  &lt;/a&gt;
  Adding blink detection
&lt;/h2&gt;

&lt;p&gt;With the keypoints, we can calculate the Eye Aspect Ratio(EAR) with the following formula.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;EAR = (|| p2 - p6 || + || p3 - p5 ||) / (2 * (|| p1 - p4||))&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here, &lt;code&gt;|| d ||&lt;/code&gt; represents the &lt;a href="https://en.wikipedia.org/wiki/Euclidean_distance"&gt;Euclidean distance&lt;/a&gt; which is essentially the length of a line segment between the two points. And the points p1, p2 and so on, used here are mapped on the facemesh in the image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8bVgCH6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1wab4fcnms9bi0dzlbs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8bVgCH6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a1wab4fcnms9bi0dzlbs.png" alt="EAR points" width="880" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, when the person blinks, the EAR will drop close to zero. To detect the blink, the EAR will have to be lesser than a threshold which is close to zero. So, I used an EAR threshold that works for varying distances between the user and the camera. Once the EAR drops below the threshold, we know that eye is blinked. We have separate keypoints for both the eyes, so we can detect both eyes' blink separately.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#to-the-dark-side"&gt;
  &lt;/a&gt;
  To the dark side
&lt;/h2&gt;

&lt;p&gt;Some time back, I read about an easy way to force the dark mode, which uses the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme"&gt;&lt;code&gt;CSS filter&lt;/code&gt;&lt;/a&gt; property. Coupling it with the &lt;a href="https://www.w3schools.com/cssref/css3_pr_filter.asp"&gt;&lt;code&gt;color-scheme&lt;/code&gt;&lt;/a&gt; property, we can add dark mode to a majority of the pages. So, I would add these CSS properties to the root HTML element.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;filter&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;invert&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;hue-rotate&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="err"&gt;180&lt;/span&gt;&lt;span class="nt"&gt;deg&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="nt"&gt;color-scheme&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;dark&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;blockquote&gt;
&lt;p&gt;Note: There are some caveats to this method. But this works well enough for us to learn the basics. And hey, you get the dark mode with two lines of CSS. Which I think is pretty cool.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#blink-detection"&gt;
  &lt;/a&gt;
  Blink Detection
&lt;/h2&gt;

&lt;p&gt;To be able to reuse the logic, I created an NPM package named &lt;a href="https://www.npmjs.com/package/blink-detection"&gt;Blink Detection&lt;/a&gt; which does the calculations and returns the result.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;blink&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blink-detection&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;blinkPrediction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;blink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getBlinkPrediction&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Here, the blinkPrediction will be an object with the keys &lt;code&gt;blink&lt;/code&gt;, &lt;code&gt;wink&lt;/code&gt;, &lt;code&gt;longBlink&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;rate&lt;/code&gt;. Each key except &lt;code&gt;rate&lt;/code&gt; will be a boolean value.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#challenges"&gt;
  &lt;/a&gt;
  Challenges
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;With the &lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/face-landmarks-detection#keypoints"&gt;face landmarks detection&lt;/a&gt; model, you will need to manually map &lt;a href="https://github.com/tensorflow/tfjs-models/blob/master/face-landmarks-detection/README.md#keypoints"&gt;facemesh keypoints&lt;/a&gt; on a graph from the data readings. There are a lot of annotations that can be used, but I could not find any source explaining them.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;To decide the EAR(Eye-Aspect-Ratio) threshold, I had to try different values. I use the one that works the best for different distances between the user and the camera. So, it is not bullet-proof.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#more-ideas-with-blink-detection"&gt;
  &lt;/a&gt;
  More ideas with blink detection
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chrome extension&lt;/strong&gt;: You can create a chrome extension for the same demo. Another extension idea is to gauge the eye blink rate and use it for different purposes.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Blink rate&lt;/strong&gt;: There have been &lt;a href="https://scholar.google.co.in/scholar?hl=en&amp;amp;as_sdt=0%2C5&amp;amp;as_vis=1&amp;amp;q=blink+rate"&gt;numerous studies&lt;/a&gt; on how blinking patterns can measure or apprise certain aspects of an individual or a situation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Wink detection&lt;/strong&gt;: Similar to blinking, wink detection can also be used to perform some actions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h2&gt;

&lt;p&gt;That's it! Overall, this project wasn't really about toggling dark mode. I wanted to play around with TensorFlow and create something while doing it! Also, I could not find any project related to blink detection in Javascript, so I developed the &lt;a href="https://www.npmjs.com/package/blink-detection"&gt;package&lt;/a&gt;. Check out the &lt;a href="https://blink-detection.vercel.app/"&gt;demo&lt;/a&gt; and the code.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/theankurkedia"&gt;
        theankurkedia
      &lt;/a&gt; / &lt;a href="https://github.com/theankurkedia/blink-detection"&gt;
        blink-detection
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Detect the user's blink and wink using machine learning
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h2&gt;

&lt;p&gt;I found the following resources helpful. If you want to experiment and create something similar, you can start here.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/tensorflow/tfjs-models#models"&gt;Pre-trained TensorFlow.js models&lt;/a&gt; for different use cases.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you are using the face landmarks detection model, the &lt;a href="https://github.com/tensorflow/tfjs-models/tree/master/face-landmarks-detection#keypoints"&gt;facemesh keypoints&lt;/a&gt; can help you map the points needed for your use case.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This &lt;a href="https://charliegerard.dev/blog/toggle-dark-mode-clapping-hands-chrome-extension/"&gt;amazing project&lt;/a&gt; was a great starting point. Honestly, I just cloned the repo and started experimenting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://codelabs.developers.google.com/codelabs/tensorflowjs-object-detection"&gt;TensorFlow.js object detection - Codelabs&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://teachablemachine.withgoogle.com"&gt;Teachable Machine&lt;/a&gt; to train your models.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.pyimagesearch.com/2017/04/24/eye-blink-detection-opencv-python-dlib/"&gt;Eye blink detection with OpenCV, Python, and dlib&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading. Hope you found it helpful! Happy coding!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tensorflow</category>
      <category>machinelearning</category>
      <category>opensource</category>
    </item>
    <item>
      <title>OOP Series: Abstraction and Interface In Java</title>
      <author>Suleiman Ibrahim</author>
      <pubDate>Tue, 09 Nov 2021 07:19:01 +0000</pubDate>
      <link>https://dev.to/princeibs/oop-series-abstraction-and-interface-in-java-104g</link>
      <guid>https://dev.to/princeibs/oop-series-abstraction-and-interface-in-java-104g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  INTRODUCTION
&lt;/h2&gt;

&lt;p&gt;Abstraction is one of the four basic principles of Object-Oriented Programming (OOP). It enables us to give structure to our programs and applications. Abstract classes are used to create structure or design in which all other subclasses must follow. &lt;br&gt;
Consider a smartphone, for example, smartphones have a screen that the user can touch to interact with the phone. Other properties of the smartphone are camera, speaker, battery, earphones, buttons, etc., and a smartphone can do some things like play music, make a call, receive a call, take pictures/ videos, etc. Considering some models of phones like Android, iOS, Blackberry, etc. An android phone, for instance, must at least be able to make a call, receive a call and browse the internet before we can consider it a smartphone. &lt;br&gt;
For us to consider Android, iOS, and Blackberry in the class of phones, they must also be able to perform the basic functionalities listed above. Then can we conclude that we have abstracted Android and iOS from the Phone.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#content"&gt;
  &lt;/a&gt;
  CONTENT
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Prerequisite&lt;/li&gt;
&lt;li&gt;Abstraction&lt;/li&gt;
&lt;li&gt;Abstract class and Concrete class&lt;/li&gt;
&lt;li&gt;Abstraction vs Encapsulation&lt;/li&gt;
&lt;li&gt;Code Example&lt;/li&gt;
&lt;li&gt;Interface &lt;/li&gt;
&lt;li&gt;Properties of Interface&lt;/li&gt;
&lt;li&gt;Code example&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  PREREQUISITE
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Basic understanding of OOP - Methods, Classes and Objects&lt;/li&gt;
&lt;li&gt;Some OOP principles - &lt;a href="https://dev.to/princeibs/oop-series-inheritance-in-java-4bn"&gt;Inheritance&lt;/a&gt;, &lt;a href="https://dev.to/princeibs/oop-series-encapsulation-in-java-1n51"&gt;Encapsulation&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#abstraction"&gt;
  &lt;/a&gt;
  ABSTRACTION
&lt;/h2&gt;

&lt;p&gt;Abstraction in Java is the process of creating abstract classes and methods which define the structure of subclasses. We can achieve abstraction in Java by adding the keyword &lt;code&gt;abstract&lt;/code&gt; to a class declaration name and providing abstract methods to the class. &lt;br&gt;
It is also achieved using interfaces and abstract classes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;An abstract method is an instance method that is declared with the keyword &lt;em&gt;abstract&lt;/em&gt; and does not have a body i.e. it is delimited by a semicolon.&lt;br&gt;
&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;testMethod&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Below are some of the properties of an abstract class: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You must declare it with the keyword &lt;code&gt;abstract&lt;/code&gt;. Classes declared without the abstract keyword but containing at least one abstract method will throw a compilation error.&lt;/li&gt;
&lt;li&gt;It cannot be instantiated. We cannot create objects of the class using the &lt;code&gt;new&lt;/code&gt; keyword.&lt;/li&gt;
&lt;li&gt;All subclasses inheriting from the abstract class must provide an implementation for the superclass abstract methods.&lt;/li&gt;
&lt;li&gt;It can be sub-classed. Abstract classes can also act as a subclass and inherit the properties of a superclass.&lt;/li&gt;
&lt;li&gt;It can contain zero or more abstract methods.&lt;/li&gt;
&lt;li&gt;It can contain concrete methods. Concrete methods are methods with a body and implementation, unlike abstract methods that are delimited by a semicolon and do not provide an implementation.&lt;/li&gt;
&lt;li&gt;All other members of the abstract class like instance variables and concrete methods continue to abide by the rules of inheritance. Subclasses handle them as they will for other concrete classes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#abstract-class-and-concrete-class"&gt;
  &lt;/a&gt;
  Abstract class and Concrete class
&lt;/h2&gt;

&lt;p&gt;An abstract class is any class declared with the keyword abstract and contains some abstract methods. Some of the properties of the abstract class are listed above. A concrete class is somewhat opposite to an abstract class. A concrete class is a class that is not declared with the keyword abstract and does not contain any abstract method. While an abstract class cannot be instantiated, a concrete class can be instantiated. &lt;br&gt;
Meanwhile, a concrete subclass inheriting from an abstract superclass must implement all of the superclass abstract methods otherwise the subclass must also be declared as an abstract class.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#abstraction-vs-encapsulation"&gt;
  &lt;/a&gt;
  Abstraction Vs Encapsulation
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;You can achieve encapsulation without abstraction but cannot achieve abstraction without encapsulation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Abstraction and encapsulation are two of the most misused concepts of OOP. Abstraction focuses on the design of the object in focus, while encapsulation focuses on the implementation. &lt;br&gt;
The key to understanding the difference between the two is&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Abstract all the things you need&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Encapsulate all the things you don‚Äôt need.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Consider a car, for example, some of the basic necessities of a car are the steering wheel, accelerator pedal, brake pedal, gear selector, etc. Since a car needs all these things to be classified as a car, we can conclude that these things are being abstracted from the car. This is because a car can't do without them. &lt;br&gt;
But the functionalities of these parts of the car are not made visible to the driver and the driver does not need to know how the steering wheel rotates the tire, or how the accelerator and brake pedal controls the speed of the car. This is known as encapsulation. The implementation and the details of these parts are hidden from the driver so the driver only interacts with the few parts made available by the car like the parts listed above. In this case, we are hiding the complexities from the driver, which is encapsulation.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#code-example"&gt;
  &lt;/a&gt;
  Code Example
&lt;/h2&gt;

&lt;p&gt;The three programs below explain the concept of abstraction in Java using three classes. The &lt;code&gt;Phone&lt;/code&gt; abstract class and two other concrete classes - the &lt;code&gt;Android&lt;/code&gt; class and &lt;code&gt;IOS&lt;/code&gt; class.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-phone-class"&gt;
  &lt;/a&gt;
  The Phone Class
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cng8_q2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oguu8qbq2o6b49ydwsqt.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cng8_q2f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oguu8qbq2o6b49ydwsqt.JPG" alt="Phone class" width="761" height="477"&gt;&lt;/a&gt;&lt;br&gt;
The image depicts the Phone class hierarchy. The Phone class is blurred in the image to signify it is an abstract class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;Abstraction&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Phone&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// initialize instance variables&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Phone&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;brand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// set and get methods&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setColor&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getColor&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setBrand&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;brand&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getBrand&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// abstract methods&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;makeCall&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;receiveCall&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;abstract&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;browseInternet&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="c1"&gt;// overrides Object's method&lt;/span&gt;
    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s specs"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getBrand&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Phone class starts by adding an abstract class declaration in its signature with the keyword &lt;code&gt;abstract&lt;/code&gt;. This is the default syntax for declaring a class as abstract in Java. &lt;br&gt;
The class moves on to declare its instance variables and then to the constructor used to initialize these variables, followed by setters and getters methods used to access and modify these instance variables.&lt;br&gt;
The next set of methods includes the abstract methods &lt;code&gt;makeCall()&lt;/code&gt;, &lt;code&gt;receiveCall()&lt;/code&gt;, and &lt;code&gt;browseInternet()&lt;/code&gt; that demonstrates the &lt;em&gt;must have&lt;/em&gt; of a smartphone. This is similar to the smartphones we use in real life, most smartphones perform these three basic functionalities. Every other type of phone inheriting the properties of our Phone class must be able to make a call, receive a call, and browse the internet. The implementation of these methods might vary, but functionality must be the same.&lt;br&gt;
One thing to note here is that the Phone class contains concrete methods with implementations along with its abstract methods.&lt;br&gt;
The next two classes will be inheriting these properties of the Phone class.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-android-class"&gt;
  &lt;/a&gt;
  The Android Class
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;Abstraction&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Android&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Phone&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// android version&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Android&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// initialize superclass variables&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// initialize instance variable&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// set and get methods&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setVersion&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getVersion&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// abstract methods implementation&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;makeCall&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Calling with Android ..."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Call ended."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;receiveCall&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Calling with Android ..."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Call ended."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;browseInternet&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Browsing with iPhone ..."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Session ended."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s%nVersion: %s%nColor: %s%n"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;getVersion&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getColor&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The Android class like any other regular subclass class inherits from a superclass which is the Phone class using the keyword &lt;code&gt;extends&lt;/code&gt; (similar to inheritance) in its class declaration. It includes an instance variable and a constructor to initialize the variable, then the setter and getter method to manipulate the variable. &lt;br&gt;
Our focus here are the methods &lt;code&gt;makeCall()&lt;/code&gt;, &lt;code&gt;receiveCall()&lt;/code&gt;, and &lt;code&gt;browseInternet()&lt;/code&gt;. They override the superclass methods using the &lt;code&gt;@Override&lt;/code&gt; annotation. Here, the Android class must override these abstract methods and provide implementation (a body) in order to be called a concrete method. This is because the Phone class it is inheriting from contains these abstract methods.&lt;br&gt;
This is very useful in designing smartphones in real life where each smartphone has a basic requirement they must meet. Because of these design constraints, users won't be overwhelmed by the variations of smartphone design each brand is producing.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-ios-class"&gt;
  &lt;/a&gt;
  The IOS Class
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;Abstraction&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IOS&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Phone&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;camera&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// number of camera&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;IOS&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;camera&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;brand&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// initialize superclass variables&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;camera&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// initialize instance variable&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// set and get methods&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setCamera&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;camera&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;camera&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;camera&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// get the number of camera&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;getCamera&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;camera&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// abstract methods implementation&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;makeCall&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Calling with iPhone ..."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Call ended."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;receiveCall&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Receiving call with iPhone ..."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Call ended."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;browseInternet&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Browsing with iPhone ..."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Session ended."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;// override Object's method&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"%s%nColor: %s%nNumber of Camera: %d%n"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
                &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;toString&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getColor&lt;/span&gt;&lt;span class="o"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;getCamera&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The IOS class above is similar in structure to the Android class. It contains an instance variable, a constructor to initialize the instance variable, and a setter and getter method to manipulate the instance variable. &lt;br&gt;
The main difference between the Android class and the IOS class is the implementation of the inherited abstract methods. In this case, both have similar methods and prints different message which in real life it might be some block of code with actual functionalities. But for the sake of this article, we are keeping things simple by printing some text to the console. Now, if a user is to transition from an IOS to an Android device, they won't be much difference in the functionalities of the two devices. Because from the onset, both share the same design. This is another good advantage of abstraction in the real world.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-phonetest-class"&gt;
  &lt;/a&gt;
  The PhoneTest Class
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;Abstraction&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PhoneTest&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// create objects&lt;/span&gt;
        &lt;span class="nc"&gt;Android&lt;/span&gt; &lt;span class="n"&gt;android&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Android&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Android"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Diamond Black"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"8.9.9"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="no"&gt;IOS&lt;/span&gt; &lt;span class="n"&gt;ios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="no"&gt;IOS&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"iOS"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Pale Blue"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// display objects&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ios&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

        &lt;span class="c1"&gt;// perform action with objects&lt;/span&gt;
        &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;makeCall&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"--------------------------------------"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// white space&lt;/span&gt;
        &lt;span class="n"&gt;ios&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;receiveCall&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We use the &lt;code&gt;PhoneTest&lt;/code&gt; Class above to test the implementation of the three classes created above - &lt;code&gt;Phone&lt;/code&gt;, &lt;code&gt;Android&lt;/code&gt;, and &lt;code&gt;IOS&lt;/code&gt; class.&lt;br&gt;
It starts by creating objects of both the Android and IOS classes and initializing their instance variables by passing the values into their constructor call.&lt;br&gt;
The next set of statements display the string representation of the respective objects created above. Note that we printed the objects without any helper methods but rather with the help of the &lt;code&gt;toString()&lt;/code&gt; method overridden inside each class. It helps to display objects of that class in a custom way.&lt;br&gt;
The next statements perform some actions with the objects by making a call with the &lt;code&gt;android&lt;/code&gt; object and then receiving a call with the &lt;code&gt;ios&lt;/code&gt; object, and the implementation of each method is printed in the console.&lt;/p&gt;

&lt;p&gt;Below is the output of executing the PhoneTest class.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ztWUSpWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pux5959dqsj435h8ox51.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ztWUSpWp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pux5959dqsj435h8ox51.JPG" alt="PhoneTest output - abstraction" width="616" height="325"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#interface"&gt;
  &lt;/a&gt;
  INTERFACE
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Interface specifies &lt;em&gt;what&lt;/em&gt; to do and not &lt;em&gt;how&lt;/em&gt; to do it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An interface in Java is a type that contains static constants and abstract methods and defines the behavior of classes. Interface is an extreme case of abstraction and is used to achieve 100% abstraction. This implies that interfaces cannot contain concrete methods and all the abstract methods it contains must be implemented by the concrete subclass. &lt;br&gt;
Interface comes into play when classes that are not related need to share a common design. This happens when we need objects of different classes to respond to the same method call. &lt;br&gt;
Interface in Java acts as an &lt;em&gt;interface&lt;/em&gt; between different classes sharing a common design. Consider the TV remote control, for example, most remote control contains at least one button, so if a particular model/brand of remote control is to implement the remote interface, it must contain at least one button because the default design of a remote includes at least one button.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#properties-of-interface"&gt;
  &lt;/a&gt;
  Properties of Interface
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Similar to abstract classes, interfaces cannot be instantiated. An object of an interface cannot be created using the &lt;code&gt;new&lt;/code&gt; keyword.&lt;/li&gt;
&lt;li&gt;All fields in an interface are implicitly public, static, and final.&lt;/li&gt;
&lt;li&gt;Interface cannot have concrete methods.&lt;/li&gt;
&lt;li&gt;Interface cannot extend other classes.&lt;/li&gt;
&lt;li&gt;All methods in an interface are implicitly public and abstract methods. &lt;/li&gt;
&lt;li&gt;A class must implement all of the methods of an interface, otherwise it must be declared abstract.&lt;/li&gt;
&lt;li&gt;Interface can extend (but cannot implement) other interfaces.&lt;/li&gt;
&lt;li&gt;A class can implement multiple interfaces. This is done using a comma-separated list of interfaces after the keyword &lt;code&gt;implements&lt;/code&gt; in the class declaration.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;public class &lt;em&gt;&lt;code&gt;className&lt;/code&gt;&lt;/em&gt; extends &lt;em&gt;&lt;code&gt;superClassName&lt;/code&gt;&lt;/em&gt; implements &lt;em&gt;&lt;code&gt;interface1&lt;/code&gt;&lt;/em&gt;, &lt;em&gt;&lt;code&gt;interface2&lt;/code&gt;&lt;/em&gt;, &lt;em&gt;&lt;code&gt;interface3&lt;/code&gt;&lt;/em&gt;, ...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#code-example"&gt;
  &lt;/a&gt;
  Code Example
&lt;/h2&gt;

&lt;p&gt;The code snippets below explain the concept of interfaces in Java.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-camera-class"&gt;
  &lt;/a&gt;
  The Camera Class
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nn"&gt;Abstraction&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;Camera&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;takePicture&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;flashlight&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;       

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The program above contains an interface &lt;code&gt;Camera&lt;/code&gt; that has only two methods. As seen from the program, the class declaration includes the keyword &lt;code&gt;interface&lt;/code&gt; they are no concrete methods here because interface in Java does not accept it. The methods that this interface has included some of the basic functionalities of a camera. So any class that wants to implement a Camera interface must be able to take a picture and includes a flashlight (at least).&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#modification-to-the-android-class"&gt;
  &lt;/a&gt;
  Modification to the Android Class
&lt;/h3&gt;

&lt;p&gt;The two snippets below modify the Android class to implement the Camera interface.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Android&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;Phone&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;Camera&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The snippet above implements the Camera interface using the Android class by adding the keyword &lt;code&gt;implements&lt;/code&gt; followed by the name of the interface to implement, in this case; Camera is the interface to implement. This is the default syntax for implementing an interface in Java. In real life, for an Android phone to have a camera interface, it must be able to take pictures along with a flashlight, this is exactly what our Camera class is doing here - enforcing the Camera design on Android.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="c1"&gt;// overridden interface methods&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt; 
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;takePicture&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Taking picture ..."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Picture taken"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;flashlight&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Flashlight is turned on ..."&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Flashlight is now off"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The snippet above shows another modification done to the Android class. All other parts of the program remain the same except for these two methods added to the class because of the interface the class is implementing. &lt;br&gt;
The two methods above provide implementation to the &lt;code&gt;takePicture()&lt;/code&gt; and &lt;code&gt;flashlight()&lt;/code&gt; methods in the Camera interface. As seen from the properties of an interface, &lt;strong&gt;all&lt;/strong&gt; of the methods must be implemented in the Android class else the compiler will throw an error.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;        &lt;span class="n"&gt;android&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;flashlight&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above line of code was added to the phone test class to demonstrate one of the methods the Android class is implementing.&lt;/p&gt;

&lt;p&gt;Below is an output of running the PhoneTest class with the modifications done to the android class.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tGMiDQRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3e6mijxhl4zl77k3zec.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tGMiDQRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t3e6mijxhl4zl77k3zec.JPG" alt="PhoneTest output - interface" width="639" height="373"&gt;&lt;/a&gt;&lt;br&gt;
The output above remains similar to the first output except for the last two lines that display the output of implementing the &lt;code&gt;flashlight()&lt;/code&gt; method.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;This article starts by introducing the concept of abstraction in Java and its properties as well. The knowledge of Abstraction is a very valuable concept in OOP and programming as a whole because of its numerous advantages and applications in the real world.&lt;/p&gt;

&lt;p&gt;Interface, on the other hand, is an extreme case of abstraction. Most software engineers encourage the use of interface as it helps to preserve design and also helps in modeling software.&lt;br&gt;
This article briefly introduces the concept of abstraction and interface in Java. Visit the &lt;a href="https://docs.oracle.com/javase/tutorial/java/IandI/abstract.html"&gt;official Java documentation&lt;/a&gt; to know more about the concepts discussed here.&lt;/p&gt;

</description>
      <category>java</category>
      <category>oop</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How To Master Python</title>
      <author>Mark Vassilevskiy</author>
      <pubDate>Tue, 09 Nov 2021 07:18:18 +0000</pubDate>
      <link>https://dev.to/abstract/how-to-master-python-4l79</link>
      <guid>https://dev.to/abstract/how-to-master-python-4l79</guid>
      <description>&lt;p&gt;Python is one of the most popular and friendly programming languages, I learn Python myself a few years ago and it was my first programming language too, however, there weren't any roadmaps or quick tutorials/courses on how to learn Python.&lt;br&gt;
That's why I provide you these top tips that helped me and 100% will help you of learning not only Python but any other subject that you want.&lt;/p&gt;

&lt;p&gt;At the end of this article, I'll leave a link to my roadmap that I built for you, where you can find all sites, book, courses which I will tell you about in this article.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-understand-why"&gt;
  &lt;/a&gt;
  1. Understand Why
&lt;/h2&gt;

&lt;p&gt;Firstly, you need to know why you want to learn Python and whom you want to become when you will already know Python. The reason like: I want to learn Python because it's easy (actually not so easy) and earn millions of dollars per year. That doesn't work so.&lt;/p&gt;

&lt;p&gt;When I just started learning Python I really enjoyed the idea of automating everything and building your own robot or AI. Find something that will inspire you and if it's not Machine Learning, Automatization, Web, or other things that you can easily do with Python, then it's not your language.&lt;br&gt;
When you are completely sure that you need to learn Python and you understand why then this will give you an accurate idea in which direction you should move and help you not to lose motivation to study it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-learn-how-to%C2%A0learn"&gt;
  &lt;/a&gt;
  2. Learn How to¬†Learn
&lt;/h2&gt;

&lt;p&gt;As I said some of these tips will help you not only with Python. Learning how to learn is a very common part, you should define which way of learning is better for you, for instance, watching YouTube videos/course, read books, or other ways.&lt;/p&gt;

&lt;p&gt;Actually, they will all be used in some amount, but basically, you should study the method that suits you best (especially I watch videos or courses).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-fundamentals"&gt;
  &lt;/a&gt;
  3. Fundamentals
&lt;/h2&gt;

&lt;p&gt;If you won't get the fundamentals of Python you also won't get more difficult things like Data Science. It's obviously the easiest part of learning Python, just watch some Crash Course of Python on Udemy, Coursera, Codecademy or read Python Crash Course, Automate the Boring Stuff with Python, of course, you can learn from your own sources.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#theres-the-list-of-fundamentals-that-you-should-learn-first"&gt;
  &lt;/a&gt;
  There's the list of Fundamentals that you should learn first:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Variables&lt;/li&gt;
&lt;li&gt;Operators&lt;/li&gt;
&lt;li&gt;If, Else&lt;/li&gt;
&lt;li&gt;Loops&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;li&gt;Data Types&lt;/li&gt;
&lt;li&gt;Classes and Objects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Make sure you understand all of these points.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-practice"&gt;
  &lt;/a&gt;
  4. Practice
&lt;/h2&gt;

&lt;p&gt;If you've read tons of books and watched tons of courses but still don't understand how to write a function that will sort your array list, that you need way more practice.&lt;br&gt;
Hopefully, for you, there're many sites where you can find problems that you should solve and not only. Even if you know how to sort your array, then practice at such sites as Codewars, HackerRank, LeetCode, TopCoder, etc., on these websites you can train your muscle memory to write faster easy code and train programmer thinking (Algorithms and act.).&lt;br&gt;
Also, you can help other people to solve their problems at StackOverflow.¬†.If you want to master Python then you should integrate practice into your daily routine, it's useful only where you do it repeatedly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-diving-into-community"&gt;
  &lt;/a&gt;
  5. Diving into Community
&lt;/h2&gt;

&lt;p&gt;You need to understand that you actually can't do anything alone, anyway, for big projects you'll need some group of people that will help you and inspire you, even such companies as Google and Apple weren't build by only one person.&lt;br&gt;
It means that you should know where to get new programmer friends. In a nutshell, you can just join the Discord Server of Python and just talk to other programmers or when you are stuck at the problem at Codewars you can easily ask for help and solve this problem with someone else. Another way to find new friends is to take part in different ways of Hackathons.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-libraries-and-frameworks"&gt;
  &lt;/a&gt;
  6. Libraries and Frameworks
&lt;/h2&gt;

&lt;p&gt;Soon as you learned all basics and have more hours of practice and can easily write some sort of algorithm, then you should learn Libraries and Frameworks in the direction in which you want to develop further, as I said earlier it can be Machine Learning, Automatization or Web-Development.&lt;br&gt;
There's top of the most popular and effective Frameworks that you should learn: Top Machine Learning Frameworks To Use in 2021, Best Python Frameworks, and many others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-share-your-knowledge"&gt;
  &lt;/a&gt;
  7. Share Your Knowledge
&lt;/h2&gt;

&lt;p&gt;If you ever hear of Richard Feynman that you probably know that he had a technic that helped him to learn everything and to reach truly amazing heights in physics and not only if you want to understand something yourself better explain it to someone else.&lt;/p&gt;

&lt;p&gt;Start making courses, YouTube videos, Write Medium articles, or you can start a blog on different kinds of platforms. I taught my friends and now they are making cool projects on Python like me.&lt;/p&gt;

&lt;p&gt;Making a repository on GitHub or Uploading your own game into App Store or Play Market is a way of sharing knowledge too, don't worry that someone will criticize you, and don't worry that your first project won't be great, over time, the experience will come and it will become much faster and easier for you to do this&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The latest advice that I can give you is to grow in your direction and have the fun of it, don't worry about what will say to others, and make this world better.&lt;br&gt;
As I promised at the start of this article, I will give a link to my own Machine Learning Roadmap which contains many links to different kinds of resources, books, concepts. Also, there's written how to learn Linux, Math¬†:) You can also add me at Discord: MarkFusion#2903&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Is No-Code the Future of Creating Websites?</title>
      <author>Kyle Prinsloo</author>
      <pubDate>Tue, 09 Nov 2021 07:13:22 +0000</pubDate>
      <link>https://dev.to/study_web_dev/is-no-code-the-future-of-creating-websites-4pjn</link>
      <guid>https://dev.to/study_web_dev/is-no-code-the-future-of-creating-websites-4pjn</guid>
      <description>&lt;p&gt;&lt;a href="https://studywebdevelopment.com/creating-websites.html"&gt;Creating websites&lt;/a&gt; these days has become effortless. &lt;/p&gt;

&lt;p&gt;Many successful businesses have awesome websites using different programs where they do not have to write any code, and you can do it too. &lt;/p&gt;

&lt;p&gt;With the popularity of no-code, questions such as &lt;strong&gt;‚Äúis no-code the future of creating websites?‚Äù&lt;/strong&gt; are starting to pop up in people‚Äôs minds.&lt;/p&gt;

&lt;p&gt;In this article, I will be discussing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What is No-Code?&lt;/li&gt;
&lt;li&gt;The No-Code Movement&lt;/li&gt;
&lt;li&gt;Pros &amp;amp; Cons of No-Code Platforms&lt;/li&gt;
&lt;li&gt;No-Code Platform Features&lt;/li&gt;
&lt;li&gt;Building Websites Without Coding&lt;/li&gt;
&lt;li&gt;Services That Allow You to Make a Website Without Coding&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nocode"&gt;
  &lt;/a&gt;
  What is No-Code?
&lt;/h2&gt;

&lt;p&gt;No-code is an approach in software development that allows non-programmers or those who have no technical skill to build websites or applications without writing codes. &lt;/p&gt;

&lt;p&gt;Instead, you can do the process visually through a graphical interface and configuration.&lt;/p&gt;

&lt;p&gt;It requires zero programming or coding skills to build a website. If you are not into the technical side of things, no-code can help you build a website by simply dragging and dropping software elements.&lt;/p&gt;

&lt;p&gt;For non-technical folks, no-code removes the barrier mainly by making the process of building a website easier and accessible.&lt;/p&gt;

&lt;p&gt;Many small businesses cannot hire a software developer or outsource to build their website because of financial setbacks. &lt;/p&gt;

&lt;p&gt;With this innovation, you can now create a website of your own with a few steps. &lt;/p&gt;

&lt;p&gt;No-code will be the go-to and alternative solution especially business owners who want to build a website of their own but can‚Äôt afford to pay for it. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-nocode-movement"&gt;
  &lt;/a&gt;
  The No-Code Movement
&lt;/h2&gt;

&lt;p&gt;No-code movement has transformed the technological landscape and this "revolution" primarily helps the community by providing an alternative solution to programming and coding setbacks most of us have. &lt;/p&gt;

&lt;p&gt;In business, product promotion and development can be frustrating when you need to update everything manually. &lt;/p&gt;

&lt;p&gt;With manual coding, progress is slow. Your primary concern as a business owner will be the time it will take to get everything done, as it can affect the user experience of your customers. &lt;/p&gt;

&lt;p&gt;Using no-code, you now have the opportunity to build whatever marketplace set-up you want faster and more affordable too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-amp-cons-of-nocode-platforms"&gt;
  &lt;/a&gt;
  Pros &amp;amp; Cons of No-Code Platforms
&lt;/h2&gt;

&lt;p&gt;Today, no-code is widely used worldwide because of its user-friendliness. Workflows tend to get done fast and easily.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pros-of-nocode-platforms"&gt;
  &lt;/a&gt;
  Pros of No-Code Platforms
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An immediate solution to problems you have in terms of website development because you will be able to create software solutions without having to hire expert programmers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Regardless of your degree, career, or position in a business, you can now build a website by yourself that will add value to your craft or business.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Building a website is faster and cheaper. Hiring developers will cost you a lot of money and with no-code, you will be able to cut the cost.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It will save you months and months of working since you can now build a website straight away without the need to code.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will have creative freedom on what you want to add to your website since the process is more visual.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Obviously, with no-code, web developers will have less on their plates and can focus more on streamlining processes or creating new innovations.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cons-of-nocode-platforms"&gt;
  &lt;/a&gt;
  Cons of No-Code Platforms
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Security breaches with no-code are unavoidable, and once the platform you are using is affected by this factor, your website will be compromised as well.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You don't have the full authority with using no-code networks, so basically you are taking a risk in using such platforms.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You will not be able to customize software using the no-code platform.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You have to adapt your business process based on the capability feature of the no-code network or platform you are using.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#nocode-platform-features"&gt;
  &lt;/a&gt;
  No-Code Platform Features
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#draganddrop-interface"&gt;
  &lt;/a&gt;
  Drag-and-drop interface
&lt;/h3&gt;

&lt;p&gt;With no-code, you can simply grab virtual objects or elements on your screen and drag them to different locations or onto other elements you want to use. &lt;/p&gt;

&lt;p&gt;It is a simple and easy feature most users enjoy as it's similar to imitating physical movement.&lt;/p&gt;

&lt;p&gt;Whether you're new to building or designing a website, this feature is the main reason it is convenient to use no-code development platforms. With a quick drag and drop function, you can ensure the efficiency of your work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-connections"&gt;
  &lt;/a&gt;
  Data connections
&lt;/h3&gt;

&lt;p&gt;The majority of no-code systems are string along with database and server-side programs. Some systems also give you an option to connect to your preferred database. &lt;/p&gt;

&lt;p&gt;This feature is helpful because it allows you to store underlying data or information when analyzing massive amounts of data.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#user-interface-builder"&gt;
  &lt;/a&gt;
  User interface builder
&lt;/h3&gt;

&lt;p&gt;User Interface (UI) builder is another great feature of no-code platforms. With this feature, you will be able to create pre-configured elements to build your website quickly. &lt;/p&gt;

&lt;p&gt;With a UI builder, it's easier to access, understand, and facilitate your actions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#visual-modeling"&gt;
  &lt;/a&gt;
  Visual modeling
&lt;/h3&gt;

&lt;p&gt;With no-code, everything is visually modeled. You will be provided with information in a readable, visually presented form and is suited for users with no tech skills. &lt;/p&gt;

&lt;p&gt;This visual model makes it easier see how your website will look like after all the drag-and-dropping; thus, making edits as you see fit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#building-websites-without-coding"&gt;
  &lt;/a&gt;
  Building Websites Without Coding
&lt;/h2&gt;

&lt;p&gt;Creating a website is an essential skill you have to master, especially when planning to start a small business. &lt;/p&gt;

&lt;p&gt;Knowing how to build a website on your own will save you from spending a significant portion of your hard-earned cash and time.  &lt;/p&gt;

&lt;p&gt;Work smarter, not harder.&lt;/p&gt;

&lt;p&gt;Since no-code doesn‚Äôt require programming skills, you can just follow through these steps and build your own website. Here‚Äôs a guide if you‚Äôre a starter.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#choose-a-website-builder-platform"&gt;
  &lt;/a&gt;
  Choose A Website Builder Platform
&lt;/h3&gt;

&lt;p&gt;In choosing a website building platform, the first thing to consider is the familiarity of its interface. Many platforms offer simple and easy to grasp interface, similar to creating simple documents, so you might as well start with a platform like that. The important thing is that it has some easy-to-use tools for editing. I recommend you use WordPress for an easy start. Plus, it‚Äôs free.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pick-a-domain"&gt;
  &lt;/a&gt;
  Pick A Domain
&lt;/h3&gt;

&lt;p&gt;Picking a domain or name for your website may sound easy, and yes, it is fun and easy, but it still needs some brainstorming. While you have the freedom to use any name, picking the right domain can be a considerable part of your success, mainly for your brand awareness.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pick-a-theme-or-appearance"&gt;
  &lt;/a&gt;
  Pick A Theme or Appearance
&lt;/h3&gt;

&lt;p&gt;Theme is the overall look of your website; it will create the whole context of your website. You don't have to be an expert in design to stand out. One thing to consider in choosing a theme is its cleanliness, not hard on the eye, professional-looking yet straightforward.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#customize-your-theme"&gt;
  &lt;/a&gt;
  Customize Your Theme
&lt;/h3&gt;

&lt;p&gt;Once you have set your theme, further customization is the next thing you have to do. It's more like doing some tweaks here and there to improve your website's overall look and feel. You can use your own creative approach as always and polish every element.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-pages"&gt;
  &lt;/a&gt;
  Create Pages
&lt;/h3&gt;

&lt;p&gt;Pages are a vital part of the overall usability and technicality of your website. Visitors who visit your website normally land on your homepage, and when they want to look for more information, an easy-to-navigate menu page will guide them to find what they are looking for. Aside from the homepage, you must also have an About page, a Contact page, and of course, your product or service pages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#adjust-navigation"&gt;
  &lt;/a&gt;
  Adjust Navigation
&lt;/h3&gt;

&lt;p&gt;Adjusting your site navigation is the next step you have to work on after you finish working on your web pages. Streamline your menus and widgets to make them easy to navigate for your site visitors. Once they find your website easy to navigate, there's a big chance they will find what they are looking for, and that may ultimately mean a conversion for you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-and-publish"&gt;
  &lt;/a&gt;
  Test and Publish
&lt;/h3&gt;

&lt;p&gt;After you finish the steps above, you can review and test everything for your final polishing to ensure everything is in place, every link is working, and each page is properly set up. If you're confident that all elements work and things look presentable, what's left to do now is publish your website.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#services-that-allow-you-to-make-a-website-without-coding"&gt;
  &lt;/a&gt;
  Services That Allow You to Make a Website Without Coding
&lt;/h2&gt;

&lt;p&gt;Running a business takes time and coding a site from scratch will take even more time. &lt;/p&gt;

&lt;p&gt;But since you will not need a programmer to build your website still, you have to figure out what platform provides the best no-code service out there.&lt;/p&gt;

&lt;p&gt;While plenty of website builder services offer solutions for your problem, choosing the best platform to use is a priority.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wix"&gt;
  &lt;/a&gt;
  Wix
&lt;/h3&gt;

&lt;p&gt;Wix is a site builder that gives you the freedom to create, design, manage, and develop your web presence precisely the way you want. With its simple interface and great templates, you can smoothly build your own high-quality website to promote your business, showcase your work, or start your own blog site.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#weebly"&gt;
  &lt;/a&gt;
  Weebly
&lt;/h3&gt;

&lt;p&gt;Weebly has great customizable web page designs and practical tools to help you build your website. You can start by creating a free website with its very user-friendly customizable drag and drop editor.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#webflow"&gt;
  &lt;/a&gt;
  Webflow
&lt;/h3&gt;

&lt;p&gt;This platform tagged itself as "the modern way to build for the web" as it allows users to build a professional website using its visual interface. It has thousands of templates you can use for your different content or e-commerce business.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#shopify"&gt;
  &lt;/a&gt;
  Shopify
&lt;/h3&gt;

&lt;p&gt;Shopify is perfect for your small e-commerce business; with hundreds of themes you can use for your branding customization. It is also compatible with both Android and iOS, so you can easily manage your business using your mobile device.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wordpress"&gt;
  &lt;/a&gt;
  WordPress
&lt;/h3&gt;

&lt;p&gt;If you're fond of writing and planning to start a blog site where you can publish your write-ups, WordPress is a go-to website builder for thousands of bloggers all over the world. &lt;/p&gt;

&lt;p&gt;With its free feature, you can choose from hundreds of templates with free plugins, so it's all up to your creativity. WordPress is also SEO-friendly and easy to install.  &lt;/p&gt;

&lt;p&gt;Here is some useful information on how to make your website SEO-friendly when you can‚Äôt code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#squarespace"&gt;
  &lt;/a&gt;
  Squarespace
&lt;/h3&gt;

&lt;p&gt;If you are looking for another comprehensive platform to build your website, Squarespace is a platform that allows users to create as they will. Using a simple click and point function, you can easily customize all features you want.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Progress and development take place to improve our living conditions. &lt;/p&gt;

&lt;p&gt;In terms of technology, changes happen because we want to find solutions to our current problems, and no-code is a solution for many who don't know how to program or write codes manually. &lt;/p&gt;

&lt;p&gt;The idea of no-code is something we shouldn't be taking too much verbally. The world has been coding and learning to code day by day and, with that, there is a massive amount of code already written.&lt;/p&gt;

&lt;p&gt;But that doesn't mean modifications are not needed. We still need someone to code regardless.&lt;/p&gt;

&lt;p&gt;One might arrive at a logical conclusion that no-code is the future. One way or another, the possibility of getting there is probable, but essentially it will take some time. &lt;/p&gt;

&lt;p&gt;To reach an age of absolute no-code, we need to outdo ourselves with artificial intelligence before anything else. &lt;/p&gt;

&lt;p&gt;Once we discover how to create programs that can create a program of its own, written codes will endure in the future.&lt;/p&gt;

&lt;p&gt;How about you? What do you think of no-code as the future of website building?&lt;/p&gt;

&lt;p&gt;Until next time,&lt;/p&gt;

&lt;p&gt;Kyle&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>codenewbie</category>
      <category>coding</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 8 Best MetaPack Competitors and Alternatives</title>
      <author>Hiteshkumarr</author>
      <pubDate>Tue, 09 Nov 2021 06:59:29 +0000</pubDate>
      <link>https://dev.to/hiteshkumarr/top-8-best-metapack-competitors-and-alternatives-eia</link>
      <guid>https://dev.to/hiteshkumarr/top-8-best-metapack-competitors-and-alternatives-eia</guid>
      <description>&lt;p&gt;MetaPack is a shipping and delivery service that has been around for many years. They provide an easy way to manage shipments, as well as streamline the eCommerce processes. The company offers services that range from international parcel delivery, warehousing, customer support to global tracking. If you are looking for competitors or alternatives to MetaPack, here are 8 of the most popular options available on the market today. This list was compiled based on user reviews and industry standards.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Top 8 MetaPack Competitors and Alternatives&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;1)AfterShip&lt;/strong&gt;&lt;br&gt;
AfterShip is a tool that provides shipment tracking information on behalf of the manufacturer after you've shipped your customer's order. AfterShip offers an easy way for ecommerce retailers to generate custom links with real-time shipping options, carrier rates, and estimated delivery dates.&lt;br&gt;
&lt;strong&gt;2)Convey&lt;/strong&gt;&lt;br&gt;
Convey provides multi-carrier shipping through integration with all carriers, inventory management, customer messaging - including email marketing and SMS messaging. Convey key feature is an easy way to create custom order notifications. If you sell products in different sizes or colors, it can use conditional logic to generate the exact wording for your message so that it doesn't just say "Thank you for your purchase" or something like that. You can use Convey for abandoned shopping carts to see what could be done to get them back on track. You can manage international shipments by using country flags next to each item shipped.&lt;br&gt;
&lt;strong&gt;3)Narvar&lt;/strong&gt;&lt;br&gt;
Narvar helps e-commerce businesses deliver an exceptional customer experience by providing proactive communications, personalization and content delivery. It provides real-time order visibility to more than 150+ retailers like Allstate, Pottery Barn, L Brands (Victoria's Secret) along with personalized messaging for positive resolutions, shipment tracking &amp;amp; notifications of late deliveries.&lt;br&gt;
&lt;strong&gt;4)WeSupplyLabs&lt;/strong&gt;&lt;br&gt;
Using WeSupplyLabs; you can easily manage orders from your online store and get them sent right to the WeShip API for shipment. It has a great feature set including tracking, return management, automation rules for shipping, multi-carrier service levels (overnight/express vs ground), rate comparison analysis (it saves money on every shipment.), and much more. With WeSupplyLabs carrier integrations, you can ship via FedEx, UPS, USPS, DHL, OnTrac, LaserShip. They offer inbound logistics like consolidation &amp;amp; de-consolidation plus inventory management both physical &amp;amp; virtual. Multi-channel ecommerce fulfillment solutions are available through their APIs or Shopping Carts and Shipwire stores.&lt;br&gt;
&lt;strong&gt;5)ParcelPerform&lt;/strong&gt;&lt;br&gt;
ParcelPerform is a MetaPack alternative that offers multi-carrier support, API integration capabilities, seamless order import, automated shipping label creation and delivery status tracking. It gives access to more than 6 major couriers which are USPS, FedEx, UPS &amp;amp; Canada Post. ParcelPerform also provides integration with over 100 shopping carts. Moreover, the customers can get real-time rates of each courier on the ParcelPerform website itself before checkout.&lt;br&gt;
This MetaPack competitor is easy to integrate with all types of online stores including the Magento eCommerce platform. This also does not require any special templates or programming skills for order data migration from the store's admin panel to the ParcelPerform dashboard. &lt;br&gt;
&lt;strong&gt;6)ClickPost&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7)AfterShip&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8)Convey&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to Choose the Best MetaPack competitor?&lt;/strong&gt;&lt;br&gt;
1.Software Area of Operation&lt;/p&gt;

&lt;p&gt;2.Software Prices and Rates&lt;/p&gt;

&lt;p&gt;3.Software Implementation and Features&lt;/p&gt;

&lt;p&gt;4.Business Priorities&lt;/p&gt;

&lt;p&gt;5.Customer Support &amp;amp; Services of Software&lt;/p&gt;

&lt;p&gt;6.Shipping Rates&lt;/p&gt;

&lt;p&gt;7.Choice of Carriers&lt;/p&gt;

&lt;p&gt;8.Tech Capabilities&lt;/p&gt;

&lt;p&gt;9.Shipping Partners&lt;/p&gt;

&lt;p&gt;10.API Integration&lt;/p&gt;

&lt;p&gt;11.eCommerce Product Returns management&lt;/p&gt;

&lt;p&gt;12.Provision of Data Analytics&lt;/p&gt;

&lt;p&gt;13.Unified Tracking Platform&lt;/p&gt;

&lt;p&gt;14.Tie Up With More Carriers&lt;/p&gt;

&lt;p&gt;15.Greater Carrier Visibility&lt;/p&gt;

&lt;p&gt;16.Customer Experience&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion:&lt;/strong&gt; MetaPack is a leading provider of e-commerce solutions that helps businesses manage their entire order fulfillment process. However, for those who want to explore additional options before signing up with this company, we‚Äôve compiled a list of the &lt;a href="https://www.clickpost.ai/top-8-best-metapack-competitors-alternatives"&gt;top 8 metapack competitors and alternatives&lt;/a&gt; below. If you need more information on any one of these companies or would like help selecting which may be best for your business needs, please contact us at (number) so we can discuss further and provide recommendations based on your unique requirements.&lt;/p&gt;

</description>
      <category>metapack</category>
      <category>metapackalternatives</category>
      <category>metapackcompetitors</category>
    </item>
    <item>
      <title>Create A Terminal Media Player</title>
      <author>Pratyush Kumar</author>
      <pubDate>Tue, 09 Nov 2021 06:52:59 +0000</pubDate>
      <link>https://dev.to/pratyushkumar/create-a-terminal-media-player-5h81</link>
      <guid>https://dev.to/pratyushkumar/create-a-terminal-media-player-5h81</guid>
      <description>&lt;p&gt;So, media players are no new thing right, we have the Windows Media Player, Apple Quicktime, and the absolute champion in media playing, VLC. So why would anyone want to create another?&lt;/p&gt;

&lt;p&gt;It's because it is in &lt;strong&gt;ASCII&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;We programmers have always been fond of TUIs (Text User Interfaces). From keeping our screensavers to the matrix code, to using Figlet to convert text to ASCII art, it just seems that ASCII art in the terminal makes anything cool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/AOSwwqVjNZlDO/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/AOSwwqVjNZlDO/giphy.gif" alt="matrix" width="360" height="227"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;So cool&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So in this post, I will describe how I created a quick and dirty media player that displays video MPEG and JPEG files as character art, and we will discuss how we can improve upon the program in small, meaningful ways.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-basics"&gt;
  &lt;/a&gt;
  üìù The Basics
&lt;/h2&gt;

&lt;p&gt;So I made this program in &lt;strong&gt;Python (version 3.9)&lt;/strong&gt;, primarily because it has excellent libraries to handle media files and images, of which I will be using &lt;strong&gt;Pillow&lt;/strong&gt; and &lt;strong&gt;OpenCV&lt;/strong&gt;. However, you can use any language you like and are comfortable with, after all, OpenCV has been ported to several languages, and for images you can use a binding of ImageMagick.&lt;/p&gt;

&lt;p&gt;Furthermore, to handle '.srt' (subtitle) files, I have used &lt;strong&gt;pysrt&lt;/strong&gt; module. However, you may parse subtitle files using regex, or some hacked up string algorithm. You may also opt not to include subtitles too.&lt;/p&gt;

&lt;p&gt;We also use a &lt;strong&gt;true-colour support POSIX terminal&lt;/strong&gt;, like GNOME terminal (the one used in all GNOME systems), Konsole (KDE based systems), iTerm (macOS), and the Windows terminal (using WSL). Basically almost all terminals, the exception being Terminal.app and Command Prompt support this. What this means is that we can use full 24 bit RGB colours in the terminal.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#taking-off"&gt;
  &lt;/a&gt;
  ‚úàÔ∏è Taking Off
&lt;/h2&gt;

&lt;p&gt;So the first thing to do is to read pixel data off a picture. We can deal with videos later, but first we need a test picture. Choose any picture on your computer that is simply enough to analyse the program and continue. To read a pixel, we first load it into Pillow and simply store the data into an array/list or a tuple.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;PIL&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;your_filename&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"RGB"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;col&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;
    &lt;span class="n"&gt;pixels&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getdata&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;OSError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Could not open file!"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So in the above code we simply take the image and read its dimensions and its pixel data, which contains the RGB values (from 0 to 255) of each pixel in the image. Now we map these RGB values to our ASCII characters, which we arrange in increasing order of brightness.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;ASCII_CHARS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"`^&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s"&gt;,:;Il!i~+_-?][}{1)(|&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&amp;amp;8%B@$"&lt;/span&gt;
&lt;span class="n"&gt;MAX_PIXEL_VALUE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;255&lt;/span&gt;

&lt;span class="n"&gt;symbol_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intensity&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;MAX_PIXEL_VALUE&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ASCII_CHARS&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The variable &lt;code&gt;intensity&lt;/code&gt; above there is what we would compute the brightness to be from the RGB values (For the time being, let &lt;code&gt;intensity = 10&lt;/code&gt;). We subtract 1 to prevent overflow of indices above the length of the character string, and we use a simple modulo operation for the mapping.&lt;/p&gt;

&lt;p&gt;However that &lt;code&gt;-1&lt;/code&gt; turns up problem when the &lt;code&gt;intensity&lt;/code&gt; is zero. Because then it becomes -1, which means we map our most intense character to a zero intensity üò±&lt;/p&gt;

&lt;p&gt;So we simply include a check against it, and solve the problem üòâ&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;symbol_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;symbol_index&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;symbol_index&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;symbol_index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We could then print the character onto the screen, and adding a newline character whenever we finish a row.&lt;/p&gt;

&lt;p&gt;Now that this is good to go, we should run and test it. This should give the output of a low intensity character for all pixels in the image.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#solving-problems"&gt;
  &lt;/a&gt;
  üß® Solving Problems
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/xTiTnGeUsWOEwsGoG4/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/xTiTnGeUsWOEwsGoG4/giphy.gif" alt="problems" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Running the program will show some outright problems, the most important being that the &lt;em&gt;image is too big!&lt;/em&gt; Even a small image is of 500 x 300 size, but a terminal typically just has 159 columns and 36 rows, even in full screen. So we would need to resize the image first. This is done by the method &lt;code&gt;img.resize(&amp;lt;length&amp;gt;, &amp;lt;width&amp;gt;)&lt;/code&gt;. However, using a few libraries and a clever line of code means that the image could be resized based upon the terminal size.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="n"&gt;size&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_terminal_size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# new_rows, new_cols defined using image's aspect ratio and the terminal size
&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;new_cols&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_rows&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So solving this, another thing we haven't yet implemented is an intensity measure, though &lt;code&gt;intensity = (pixel_red + pixel_blue + pixel_green) / 3&lt;/code&gt; works, the human eye is most sensitive to green light, and least to blue. So a better intensity formula would be&lt;/p&gt;

&lt;p&gt;&lt;code&gt;intensity = (0.299 * pixel_red_square + 0.587 * pixel_green_square + 0.114 * pixel_blue_square) ** 0.5&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/eChf44Gyj2VrO/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/eChf44Gyj2VrO/giphy.gif" alt="formula" width="320" height="137"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Yes I know, the formula is a mouthful.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Another thing is that like you must have already noticed, the &lt;em&gt;ASCII render appear squished&lt;/em&gt;. This is because, font characters aren't squares (like pixels), but rectangles. So to preserve the image, we would have to print the characters twice, or thrice. This would also mean tweaking the resizing code to realise this.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#video-time"&gt;
  &lt;/a&gt;
  üé• Video Time!
&lt;/h2&gt;

&lt;p&gt;Adding video support isn't that hard. All we have to do is to politely ask OpenCV to split the video into image frames for us, and it will comply.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
&lt;span class="n"&gt;vidcap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VideoCapture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="c1"&gt;# a frame counter
&lt;/span&gt;&lt;span class="n"&gt;frame_skip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="c1"&gt;# to control the choppiness/frame rate
&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"clear"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;vidcap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isOpened&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vidcap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;frame_skip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"frame.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="c1"&gt;# a call the old function to ASCII render image 'frame.jpg'
&lt;/span&gt;        &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;vidcap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since vidcap can also open image files, you can use the same code to even read images and then call our old methods. You can also retouch the video/frames using OpenCV. For example, you could increase contrast by &lt;code&gt;image = cv2.convertScaleAbs(image, alpha=1.5, beta=50)&lt;/code&gt; which increase contrast to 1.25 and brightness to 50% more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%F0%9F%96%8D-showing-colour"&gt;
  &lt;/a&gt;
  üñç Showing Colour
&lt;/h2&gt;

&lt;p&gt;Adding colour is by far the easiest. We are going to use the ultimate tool (apart from curses) to create TUIs in POSIX compliant systems... &lt;a href="https://en.wikipedia.org/wiki/ANSI_escape_code"&gt;ANSI escape code&lt;/a&gt; ü•Å&lt;/p&gt;

&lt;p&gt;So the ANSI escape code to change the foreground colour in 24-RGB is (spaces added for readability)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="s2"&gt;"ESC[ 38;2;&amp;lt;r&amp;gt;;&amp;lt;g&amp;gt;;&amp;lt;b&amp;gt; m"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here &lt;code&gt;"ESC"&lt;/code&gt; is actually &lt;code&gt;"\033"&lt;/code&gt; when using in code. (Since ASCII code of ESC is 033 in octal)&lt;br&gt;
and r, g, b are the 0-255 range values. So to say print something in red, we could have the following code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\033&lt;/span&gt;&lt;span class="s"&gt;[38;2;255;0;0m Hello &lt;/span&gt;&lt;span class="se"&gt;\033&lt;/span&gt;&lt;span class="s"&gt;[0m"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can output this escape code before printing the corresponding character. Just do not forget to reset all colours/settings by printing &lt;code&gt;ESC[0m&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%F0%9F%9B%A0-fine-tuning"&gt;
  &lt;/a&gt;
  üõ† Fine Tuning
&lt;/h2&gt;

&lt;p&gt;Experimenting uptil now, you must have observed that when playing a video, it sometimes gives that rolling shutter effect found in old TVs. This is because the program prints all the characters of a current frame below the ASCII render of the previous frame. However, the correct way to do things would be to replace characters in the ASCII render, overwriting them. This means we would have to navigate around the terminal to go to the first position, and then rewrite all characters upon the previous ones, which would give us a smoother, glitch free transition into frames.&lt;/p&gt;

&lt;p&gt;This is also done using ANSI escape codes, by simply going to the first position in the terminal (top left corner) every time we start printing. The ANSI code to move the cursor is (spaces for readability)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ESC[ &amp;lt;line_number&amp;gt;&lt;span class="p"&gt;;&lt;/span&gt;&amp;lt;column_number&amp;gt; H
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since this is &lt;em&gt;1-indexed&lt;/em&gt;, the code to move to start will be &lt;code&gt;ESC[1;1H&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%F0%9F%8E%99-subtitles"&gt;
  &lt;/a&gt;
  üéô Subtitles
&lt;/h2&gt;

&lt;p&gt;To add subtitles, we would first need a &lt;strong&gt;.srt&lt;/strong&gt; file. This file contains everything heard in the video, with a count and time signatures as shown below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1
00:00:00,000 --&amp;gt; 00:00:01,000
Hey, want to party?

2
00:00:01,001 --&amp;gt; 00:01:00,123
(Tense music plays)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, according to the above file, from time 0 to 1 second, the subtitle &lt;code&gt;Hey, want to party?&lt;/code&gt; should display, and then from 1.001 second (1 second, 001 millisecond) to 1 minute 123 millisecond, we should show the subtitle &lt;code&gt;(Tense music plays)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The time signatures are in the format &lt;code&gt;Hours:Minutes:Second,Milliseconds&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However, since we traverse the video frame by frame, we first get our frame's timestamp by adding the following commands to the previous frame splitting code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
&lt;span class="n"&gt;vidcap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VideoCapture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;sub_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pysrt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;subtitle_srt_file&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="c1"&gt;# a frame counter
&lt;/span&gt;&lt;span class="n"&gt;frame_skip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="c1"&gt;# to control the choppiness/frame rate
&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;system&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"clear"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="n"&gt;vidcap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isOpened&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vidcap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;frame_skip&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imwrite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"frame.jpg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;timestamp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vidcap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CAP_PROP_POS_MSEC&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="c1"&gt;# a call the old function to ASCII render image 'frame.jpg'
&lt;/span&gt;        &lt;span class="c1"&gt;# send timestamp &amp;amp; sub_file to a subtitle printing function
&lt;/span&gt;        &lt;span class="k"&gt;continue&lt;/span&gt;
    &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;vidcap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;cv2.CAP_PROP_POS_MSEC&lt;/code&gt; is an attribute that returns the current frame's time after start in milliseconds, we can directly use this in our subtitle printing function, as pysrt allows for a splice feature that selects subtitles for the specific timestamp.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;subs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sub_file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;starts_before&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'milliseconds'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;ends_after&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'milliseconds'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;subs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# print line (a string)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The slice function is pretty straightforward to use, and also supports minutes, hours and seconds attributes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts-and-improvements"&gt;
  &lt;/a&gt;
  ü§î Final Thoughts And Improvements
&lt;/h2&gt;

&lt;p&gt;So there you have it, a pretty basic in-terminal media player. This is far from a finished program however, with features like playback speed, pause and play, and seek still missing. However you are advised to implement these and experiment around, and most of all, awe at what you just made!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/yidUzHnBk32Um9aMMw/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/yidUzHnBk32Um9aMMw/giphy.gif" alt="shock" width="500" height="250"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;After all, it is the freaking terminal!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Top Websites To Find Remote Jobs</title>
      <author>Danish Saleem</author>
      <pubDate>Tue, 09 Nov 2021 06:37:57 +0000</pubDate>
      <link>https://dev.to/mrdanishsaleem/top-websites-to-find-remote-jobs-4623</link>
      <guid>https://dev.to/mrdanishsaleem/top-websites-to-find-remote-jobs-4623</guid>
      <description>&lt;h2&gt;
  &lt;a href="#we-work-remotely"&gt;
  &lt;/a&gt;
  &lt;a href="https://weworkremotely.com/"&gt;We Work Remotely&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;We Work Remotely is the¬†largest remote work community in the world.¬†With over 3M visitors, WWR is the number one destination to find and list incredible remote jobs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#virtual-vocations"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.virtualvocations.com/"&gt;Virtual Vocations&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Virtual Vocations is a small company with a big mission. We‚Äôre revolutionizing the way job-seekers find remote jobs. As a 100% remote company, we understand job-seekers unique challenges when looking for virtual work.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flexjobs"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.flexjobs.com/"&gt;FlexJobs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The #1 job site¬†to find vetted remote, work from home, and flexible job opportunities¬†since 2007.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#justremote"&gt;
  &lt;/a&gt;
  &lt;a href="https://justremote.co/"&gt;JustRemote&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Discover Remote Jobs from around the world. Give up the commute, work remotely and do what you love, daily, from anywhere. Find your perfect remote development, design, sales or marketing job today.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#remote"&gt;
  &lt;/a&gt;
  &lt;a href="https://remote.co/"&gt;Remote&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://remote.co/"&gt;Remote.co&lt;/a&gt; is a resource for companies that see remote work as an opportunity. We are focused on providing expert insight, best practices, and valuable support for organizations exploring or already embracing a remote team as a significant portion of their workforce.&lt;/p&gt;

&lt;p&gt;Let's connect!You can follow me on¬†Twitter,¬†LinkedIn¬†&amp;amp;¬†GitHub&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lets-connect"&gt;
  &lt;/a&gt;
  Let's connect!
&lt;/h2&gt;

&lt;p&gt;You can follow me on &lt;a href="https://twitter.com/MrDanishSaleem"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.linkedin.com/in/mrdanishsaleem/"&gt;LinkedIn&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/mrdanishsaleem/"&gt;GitHub&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you like this post. Kindly support me by &lt;a href="https://www.buymeacoffee.com/mrdanishsaleem"&gt;Buying Me a Coffee&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IrvJezlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0ikih5nlsqs0oops11e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IrvJezlq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v0ikih5nlsqs0oops11e.png" alt="Buy Me a Coffee" width="880" height="193"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>webdev</category>
    </item>
    <item>
      <title>a portable lightweight web crawler using Powerpage.</title>
      <author>Casualwriter</author>
      <pubDate>Tue, 09 Nov 2021 06:10:22 +0000</pubDate>
      <link>https://dev.to/casualwriter/a-portable-lightweight-web-crawler-using-powerpage-3o0p</link>
      <guid>https://dev.to/casualwriter/a-portable-lightweight-web-crawler-using-powerpage-3o0p</guid>
      <description>&lt;p&gt;Just code a portable lightweight web crawler using &lt;strong&gt;Powerpage&lt;/strong&gt;. &lt;a href="https://github.com/casualwriter/powerpage-web-crawler"&gt;Powerpage Web Crawler&lt;/a&gt; is a portable javascript-application running with &lt;a href="https://github.com/casualwriter/powerpage"&gt;Powerpage&lt;/a&gt;. It is coded by vanilla javascript in about 350 lines codes, &lt;strong&gt;without any dependency&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k8qm1Q2v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdc3tpb1hwoc47i6jcsq.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k8qm1Q2v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kdc3tpb1hwoc47i6jcsq.gif" alt="Image description" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Powerpage Web Crawler&lt;/code&gt; is a portable program, just simply download and run &lt;code&gt;powerpage.exe&lt;/code&gt;. It is a powerful and easy-to-use web-scrawler suitable for blog site crawling and offline-reading.&lt;/p&gt;

&lt;p&gt;Just simply define below, for example&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;base-url&lt;/code&gt; := &lt;code&gt;https://dev.to/casualwriter&lt;/code&gt;  // the home page of favor blog site&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;index-pattern&lt;/code&gt; := &lt;code&gt;none&lt;/code&gt;  // RegExp of the url pattern of category page&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;page-pattern&lt;/code&gt; := &lt;code&gt;/casualwriter/[a-z]&lt;/code&gt; // RegExp of the url pattern of content page&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;content-css&lt;/code&gt; := &lt;code&gt;#main-title h1, #article-body&lt;/code&gt;  //css selector for blog content. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Program will&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;crawl all category pages.&lt;/li&gt;
&lt;li&gt;find out all url of content pages.&lt;/li&gt;
&lt;li&gt;crawl content for one page, or all pages. &lt;/li&gt;
&lt;li&gt;save setting and links to database (support multiple sites)&lt;/li&gt;
&lt;li&gt;save content pages to local files.&lt;/li&gt;
&lt;li&gt;allow off-line reading from local files.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;About &lt;a href="https://github.com/casualwriter/powerpage"&gt;Powerpage&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;code&gt;Powerpage Web Crawler&lt;/code&gt; run with &lt;code&gt;PowerPage&lt;/code&gt;, which is a lightweight web browser with DB capability and windows accessibility, for quick development of javascript/html/css application. &lt;/p&gt;

&lt;p&gt;for the source code of &lt;strong&gt;Powerpage&lt;/strong&gt;, please visit &lt;a href="https://github.com/casualwriter/powerpage/tree/main/source/src"&gt;https://github.com/casualwriter/powerpage/tree/main/source/src&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By the way, sorry for beginner coding style and rough screen layout (for independence). &lt;/p&gt;

&lt;p&gt;Enjoy,&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>webcrawler</category>
      <category>powerpage</category>
    </item>
    <item>
      <title>Should You Learn Deno in 2022?</title>
      <author>Jason Shelley</author>
      <pubDate>Tue, 09 Nov 2021 05:59:42 +0000</pubDate>
      <link>https://dev.to/kinjiru09/should-you-learn-deno-in-2022-5fbf</link>
      <guid>https://dev.to/kinjiru09/should-you-learn-deno-in-2022-5fbf</guid>
      <description>&lt;p&gt;If you are a JavaScript developer, perhaps you have heard of a new JavaScript runtime called Deno. Like me, you probably thought: &lt;em&gt;‚ÄúOh no! Here we go again. Is this going to be another Nodejs vs io.js fiasco or npm vs yarn battle.‚Äù&lt;/em&gt; You might even have thought: &lt;em&gt;‚ÄúYet another tool in the JavaScript ecosystem to make our lives miserable.‚Äù&lt;/em&gt; After all, &lt;a href="https://www.freecodecamp.org/news/javascript-fatigue-fatigue-66ffb619f6ce/"&gt;JavaScript has a history of making developers feel exhausted.&lt;/a&gt; Is Deno going to be another reason for developers to dislike JavaScript?&lt;/p&gt;

&lt;p&gt;The short answer is No. In fact, it‚Äôs the exact opposite. You should definitely learn Deno in 2022. If you want to know why, continue to read this article. If you are already convinced, great! Head over to the Deno website and start learning it for 2022.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#just-another-shiny-tool"&gt;
  &lt;/a&gt;
  Just Another Shiny Tool?
&lt;/h2&gt;

&lt;p&gt;First off, let‚Äôs get this out of the way. Deno &lt;strong&gt;IS NOT&lt;/strong&gt; just a new shiny tool for JavaScript. It solves real problems that JavaScript developers face and it offers real productive tools that can help JavaScript developers in our development process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-deno"&gt;
  &lt;/a&gt;
  What is Deno?
&lt;/h2&gt;

&lt;p&gt;The official &lt;a href="https://deno.land/"&gt;Deno website&lt;/a&gt; said:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Deno (/ÀàdiÀêno ä/, pronounced dee-no) is a JavaScript/TypeScript runtime with secure defaults and a great developer experience.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For any Nodejs developer, this explanation alone should make us excited. First, Deno is a JavaScript/TypeScript runtime. Let me repeat, Deno is a JavaScript/TypeScript runtime. It supports Typescript right out of the box! There is no need to download another tool or some transpiler to run your code. Deno treats these languages &lt;a href="https://deno.land/manual@v1.15.3/typescript/migration"&gt;‚Äúpretty equally‚Äù&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The command to run JavaScript files is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;deno run YourFile.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command to run TypeScript files is also:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;deno run YourFile.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can even have files in both languages in your project. This allows developers to be extremely productive. TypeScript is extremely popular and useful in the development process. It helps developers create more clean, efficient and safe code. The Deno runtime offer this feature without any extra work from the developer. This allows developers to focus on building solutions instead of fiddling around with config files.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Äú‚Ä¶a runtime with secure defaults‚Äù.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You have to explicitly set the permissions for your script if you want it to have file, network or environment access. This means when you use a third party package, you will know what that script will access. This is really useful from a security perspective. For example, if you import a third party package named StringValidator and it wants access to the internet, you may want to double check to see what this package is really doing.&lt;/p&gt;

&lt;p&gt;Deno can import modules from any location on the web. You also have the option to import your modules from the Deno hosting service, &lt;a href="https://deno.land/x"&gt;deno.land/x&lt;/a&gt;. If you do, you are guaranteed that the module will be there. Because all uploaded module versions are immutable, to prevent breaking programs that rely on them. If you start using a newer version of the module, and find there are security risks, you can easily revert back to the previous version without worrying.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;‚Äú..a great developer experience‚Äù.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What would make Deno a better developer experience than Nodejs?&lt;/p&gt;

&lt;p&gt;It‚Äôs web compatible. This means your Javascript knowledge that you learned from writing front end apps on FireFox, Chrome, Edge, etc is transferable to Deno. You can use Fetch, Web Workers, Web Storage, Blob, FormData, WebSocket, even Web Assembly and much much more. That‚Äôs less third party modules you have to worry about, bye-bye axios.&lt;br&gt;
It has built-in utilities to make development easier. For example,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Linter (&lt;a href="https://deno.land/manual@v1.15.3/tools/linter"&gt;deno lint&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Bundler (&lt;a href="https://deno.land/manual@v1.15.3/tools/bundler"&gt;deno bundler&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Test runner (&lt;a href="https://deno.land/manual@v1.15.3/testing"&gt;deno test&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Code Formatter (&lt;a href="https://deno.land/manual@v1.15.3/tools/formatter"&gt;deno formatter&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Dependency Inspector (&lt;a href="https://deno.land/manual@v1.15.3/tools/dependency_inspector"&gt;deno info&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Documentation Generator (&lt;a href="https://deno.land/manual@v1.15.3/tools/documentation_generator"&gt;deno doc&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These are not ‚Äúnice to have‚Äù tools. These are necessary tools. When developers see the runtime they are using provides these tools without any extra crazy annoying configuration, it builds their confidence in the runtime and in their ability to use the language better.&lt;/p&gt;

&lt;p&gt;Deno also provides built-in modules that are supported by the Deno team. These modules are very useful for everyday programming tasks. For example, Collection module has functions to work with collections like groupBy, partition, union. DateTime module has functions to deal with dates. It also has a module to allow us to use Nodejs modules that do not use non-polyfilled Node APIs.&lt;/p&gt;

&lt;p&gt;These are just some of the features that make Deno compelling to learn. But we still haven‚Äôt talked about: how Deno handles package management, how Deno handles promises, extending Deno with Rust plugins, Deno Deploy (a serverless solution allowing users to quickly script distributed HTTPS servers) and even compiling your scripts into a self-contained executables!!&lt;br&gt;
Deno looks promising. It has a team of developers and investors to push it to the next level. 2022 is definitely going to be an exciting year for it. Even if it doesn‚Äôt replace Nodejs, it will definitely push everyone to a better JavaScript ecosystem.&lt;/p&gt;

</description>
      <category>deno</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Validating Kubernetes Configurations with Datree</title>
      <author>Rahul Wagh</author>
      <pubDate>Tue, 09 Nov 2021 05:50:44 +0000</pubDate>
      <link>https://dev.to/jhooq/validating-kubernetes-configurations-with-datree-58nj</link>
      <guid>https://dev.to/jhooq/validating-kubernetes-configurations-with-datree-58nj</guid>
      <description>&lt;p&gt;Working with &lt;a href="https://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; is fun when your Kubernetes cluster is up and your nodes are working as you expected. But as a DevOps enthusiast who follows the principles of Continuous Integration and Continuous Delivery, you are aware that new changes or feature requests are always coming through the &lt;a href="https://www.jenkins.io/"&gt;Jenkins Pipeline&lt;/a&gt;, and eventually, you‚Äôll have to deploy changes into the Kubernetes cluster which feeds into your production environment.&lt;/p&gt;

&lt;p&gt;In most cases, you will need to update your Kubernetes manifest YAMLs or &lt;a href="https://helm.sh/"&gt;Helm charts&lt;/a&gt;  (Deployment, Service, or Pod) and apply those changes either directly into the Production or Staging or into the Test environment.&lt;/p&gt;

&lt;p&gt;During a new release or deployment, I am generally troubled by the question: &lt;em&gt;&lt;strong&gt;Is this new Kubernetes manifest YAML change I am deploying in the production environment actually going to work?&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;No matter how seasoned or experienced a developer you are, if you are not sure about your changes, this will be a scary experience. So, is there a way to verify your Kubernetes manifest YAML and Helm charts before they reach production?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Luckily, the answer is yes.&lt;/strong&gt; You can indeed verify your Kubernetes manifest before making any changes, by using the &lt;a href="https://www.datree.io/?utm_source=rahul&amp;amp;utm_medium=article&amp;amp;utm_campaign=Validating+Kubernetes+Configurations+with+Datree&amp;amp;utm_id=influencer"&gt;Datree&lt;/a&gt; tool.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.datree.io/?utm_source=rahul&amp;amp;utm_medium=article&amp;amp;utm_campaign=Validating+Kubernetes+Configurations+with+Datree&amp;amp;utm_id=influencer"&gt;Datree&lt;/a&gt; allows developers to verify the &lt;a href="https://jhooq.com/categories/kubernetes/"&gt;Kubernetes&lt;/a&gt; configuration before applying it directly into the Production, Stage, Test, or even the Development environment.&lt;br&gt;
Datree is a command-line tool that is installed locally onto the developer‚Äôs machine so that he or she can run the CLI commands that verify the Kubernetes manifests (YAML files).&lt;/p&gt;

&lt;p&gt;Here is a short command snippet of Datree -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;datree test my-kubernetes-manifest.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this post, I will show you how to use Datree step by step, starting with installing the tool and then verifying the Kubernetes manifest file. (If you need to check your helm charts instead, this can easily be done with the Datree &lt;a href="https://hub.datree.io/helm-plugin"&gt;Helm plugin&lt;/a&gt;.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-content"&gt;
  &lt;/a&gt;
  Table of Content
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#1-how-to-install-datree"&gt;How to Install Datree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#2-how-to-test-kubernetes-manifest-using-datree"&gt;How to test Kubernetes Manifest using Datree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#3-how-to-understand-the-validation-errors-thrown-by-datree"&gt;How to understand the validation errors thrown by Datree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#4-view-and-edit-datree-policy-via-browser"&gt;View and edit Datree Policy via browser&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#5-define-policy-as-codepac"&gt;Define Policy as Code(PaC)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#6-conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;



&lt;h2&gt;
  &lt;a href="#1-how-to-install-datree"&gt;
  &lt;/a&gt;
  1. How to Install Datree
&lt;/h2&gt;

&lt;p&gt;Let‚Äôs start with the first step: &lt;em&gt;Installation&lt;/em&gt;. Datree installation is really easy. Generally, I prefer Linux distros as my development machine.&lt;/p&gt;

&lt;p&gt;On Linux, you can simply install it by running the following command -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://get.datree.io | /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5sbfxzry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uyxt2mu37yq5mifvul3d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5sbfxzry--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uyxt2mu37yq5mifvul3d.png" alt="Image description" width="780" height="312"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are using another Operating System, it‚Äôs just as easy to install -&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MacOS&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl https://get.datree.io | /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;iwr -useb https://get.datree.io/windows_install.ps1 | iex 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h2&gt;
  &lt;a href="#2-how-to-test-kubernetes-manifest-using-datree"&gt;
  &lt;/a&gt;
  2. How to test Kubernetes Manifest using Datree
&lt;/h2&gt;

&lt;p&gt;After installing the Datree, the next step is to test the Kubernetes manifest (YAML). In order to do this, you must have a copy of your Kubernetes manifest (YAML) available locally where you have already installed Datree.&lt;/p&gt;

&lt;p&gt;You can run the following command to start testing your Kubernetes manifest (YAML) &lt;em&gt;(Replace the Kubernetes manifest YAML name in the following command) -&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;datree test &amp;lt;your_kubernetes_manifest_YAML_NAME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is my Kubernetes manifest(YAML) of my &lt;a href="https://jhooq.com/deploy-spring-boot-microservices-on-kubernetes"&gt;Spring Boot application which I am trying to test by deploying it on Kubernetes Cluster&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(&lt;a href="https://github.com/rahulwagh/spring-boot-docker"&gt;Click here to clone my GitHub Repo for Spring Boot Application&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;k8s-spring-boot-deployment.yml&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  name: jhooq-springboot
spec:
  replicas: 3
  selector:
    matchLabels:
      app: jhooq-springboot
  template:
    metadata:
      labels:
        app: jhooq-springboot
    spec:
      containers:
        - name: springboot
          image: rahulwagh17/jhooq-docker-demo:jhooq-docker-demo
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: jhooq-springboot
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: jhooq-springboot 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is a command to test my Kubernetes manifest -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;datree test k8s-spring-boot-deployment.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When you run the above command, you should see the following validation error messages -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eZktqZPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kltkc6sw07gccddibbkp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eZktqZPc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kltkc6sw07gccddibbkp.png" alt="Image description" width="880" height="702"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#3-how-to-understand-the-validation-errors-thrown-by-datree"&gt;
  &lt;/a&gt;
  3. How to understand the validation errors thrown by Datree
&lt;/h2&gt;

&lt;p&gt;What I have discovered is that my Kubernetes manifest (YAML) has a lot of problems. it will work fine inside my Kubernetes cluster, it is still far from ready for the production environment.&lt;/p&gt;

&lt;p&gt;Let's start with the errors -&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#31-ensure-each-container-has-a-configured-memory-request"&gt;
  &lt;/a&gt;
  3.1  Ensure each container has a configured memory request
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚ùå  Ensure each container has a configured memory request  [2 occurrences]
‚Äî metadata.name: RELEASE-NAME-helloworld (kind: Deployment)
‚Äî metadata.name: RELEASE-NAME-helloworld-test-connection (kind: Pod)
üí°  Missing property object `requests.memory` - value should be within the accepted boundaries recommended by the organization 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This error tells me that I have neglected to add request.memory size inside the Kubernetes deployment manifest.&lt;/p&gt;

&lt;p&gt;This error can easily be fixed by adding the following request.memory attribute -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resources:
  requests:
    memory: "128Mi"
    cpu: "512m"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h4&gt;
  &lt;a href="#32-ensure-each-container-has-a-configured-cpu-request"&gt;
  &lt;/a&gt;
  3.2 Ensure each container has a configured CPU request
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚ùå  Ensure each container has a configured CPU request  [2 occurrences]
‚Äî metadata.name: RELEASE-NAME-helloworld (kind: Deployment)
‚Äî metadata.name: RELEASE-NAME-helloworld-test-connection (kind: Pod)
üí°  Missing property object `requests.cpu` - value should be within the accepted boundaries recommended by the organization 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Similar to the previous error &lt;a href="#31--ensure-each-container-has-a-configured-memory-request"&gt;3.1&lt;/a&gt;, we need to add the limit.cpu attribute.&lt;/p&gt;

&lt;p&gt;Here is the missing limit.cpu attribute along with request.memory -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;resources:
  requests:
    memory: "128Mi"
    cpu: "512m"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h4&gt;
  &lt;a href="#33-ensure-each-container-has-a-configured-memory-limit"&gt;
  &lt;/a&gt;
  3.3 Ensure each container has a configured memory limit
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚ùå  Ensure each container has a configured memory limit  [2 occurrences]
‚Äî metadata.name: RELEASE-NAME-helloworld-test-connection (kind: Pod)
‚Äî metadata.name: RELEASE-NAME-helloworld (kind: Deployment)
üí°  Missing property object `limits.memory` - value should be within the accepted boundaries recommended by the organization
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After fixing the memory and cpu requests, let‚Äôs try to fix the memory limit.&lt;/p&gt;

&lt;p&gt;Add the following memory snippet inside your deployment manifest of Kubernetes under the resource limits -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;limits:
  memory: "128Mi"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h4&gt;
  &lt;a href="#34-ensure-each-container-has-a-configured-cpu-limit"&gt;
  &lt;/a&gt;
  3.4 Ensure each container has a configured CPU limit
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚ùå  Ensure each container has a configured CPU limit  [2 occurrences]
‚Äî metadata.name: RELEASE-NAME-helloworld-test-connection (kind: Pod)
‚Äî metadata.name: RELEASE-NAME-helloworld (kind: Deployment)
üí°  Missing property object `limits.cpu` - value should be within the accepted boundaries recommended by the organization 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You also need to update the memory for the cpu, which can be done by adding the following attributes along with the previous one &lt;a href="#34-ensure-each-container-has-a-configured-cpu-limit"&gt;3.4&lt;/a&gt; -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;limits:
  memory: "128Mi"
  cpu: "512m"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h4&gt;
  &lt;a href="#35-ensure-each-container-has-a-configured-liveness-probe"&gt;
  &lt;/a&gt;
  3.5 Ensure each container has a configured liveness probe
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚ùå  Ensure each container has a configured liveness probe  [1 occurrence]
‚Äî metadata.name: RELEASE-NAME-helloworld-test-connection (kind: Pod)
üí°  Missing property object `livenessProbe` - add a properly configured livenessProbe to catch possible deadlocks 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next on the list are the liveness and readiness probes. They go hand in hand, but to keep the things simple and easy to understand, we will look at each error individually.&lt;/p&gt;

&lt;p&gt;To fix the liveness probe, you must add the following attribute inside your Kubernetes manifest (YAML) -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;livenessProbe:
  httpGet:
     path: /hello
     port: 8080
  initialDelaySeconds: 15
  periodSeconds: 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h4&gt;
  &lt;a href="#36-ensure-each-container-has-a-configured-readiness-probe"&gt;
  &lt;/a&gt;
  3.6 Ensure each container has a configured readiness probe
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚ùå  Ensure each container has a configured readiness probe  [1 occurrence]
‚Äî metadata.name: RELEASE-NAME-helloworld-test-connection (kind: Pod)
üí°  Missing property object `readinessProbe` - add a properly configured readinessProbe to notify kubelet your Pods are ready for traffic
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After fixing the liveness probe, let‚Äôs fix the readiness probe by adding the following attribute to the Kubernetes manifest (YAML) -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;readinessProbe:
  httpGet:
    path: /hello
    port: 8080
  initialDelaySeconds: 15
  periodSeconds: 10
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h4&gt;
  &lt;a href="#37-ensure-deployment-has-more-than-one-replica-configured"&gt;
  &lt;/a&gt;
  3.7 Ensure Deployment has more than one replica configured
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;‚ùå  Ensure Deployment has more than one replica configured  [1 occurrence]
‚Äî metadata.name: RELEASE-NAME-helloworld (kind: Deployment)
üí°  Incorrect value for key `replicas` - running 2 or more replicas will increase the availability of the service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Lastly, we need to fix the replica count.This can be done easily by updating the replicas attribute.&lt;/p&gt;

&lt;p&gt;It is not recommended to have a replica count of 1. Update the replica count to a number greater than 1 -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;spec:
  replicas: 2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;h4&gt;
  &lt;a href="#here-is-the-final-k8sspringbootdeploymentyml-after-all-7-fixes-have-been-made"&gt;
  &lt;/a&gt;
  Here is the final k8s-spring-boot-deployment.yml after all 7 fixes have been made:
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  name: jhooq-springboot
spec:
  replicas: 2
  selector:
    matchLabels:
      app: jhooq-springboot
  template:
    metadata:
      labels:
        app: jhooq-springboot
    spec:
      containers:
        - name: springboot
          image: rahulwagh17/kubernetes:jhooq-k8s-springboot

          resources:
            requests:
              memory: "128Mi"
              cpu: "512m"
            limits:
              memory: "128Mi"
              cpu: "512m"

          ports:
            - containerPort: 8080

          readinessProbe:
            httpGet:
              path: /hello
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10

          livenessProbe:
            httpGet:
              path: /hello
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10

          env:
            - name: PORT
              value: "8080"
---
apiVersion: v1
kind: Service
metadata:
  name: jhooq-springboot
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: jhooq-springboot 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I recommend updating your Kubernetes manifest and re-running the Datree test command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;datree test k8s-spring-boot-deployment.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here is the screenshot of the results, where you can see that all the validation errors are now gone.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ti2yH8Uw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc44sn9wg3jrk5yjou1o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ti2yH8Uw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xc44sn9wg3jrk5yjou1o.png" alt="Image description" width="780" height="313"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#4-view-and-edit-datree-policy-via-browser"&gt;
  &lt;/a&gt;
  4. View and edit Datree Policy via browser
&lt;/h2&gt;

&lt;p&gt;In addition to providing CLI to troubleshoot the errors associated with your manifest, Datree also allows you to view the policies on a browser. This is one of the coolest features offered by Datree for developers and other team members.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;How to access the datree policies in a browser?&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This too is pretty simple. Run the test command datree test k8s-spring-boot-deployment.yml and then look for the following message box into your terminal -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2R-g3tnj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lzdk2zxcntgnle2tuu0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2R-g3tnj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lzdk2zxcntgnle2tuu0.png" alt="Image description" width="780" height="298"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy the URL from the terminal and paste it in your browser. Authenticate yourself using your GitHub account and then you will see the following dashboard -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HqvJzPd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rb5eu5olk247qin8wkno.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HqvJzPd8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rb5eu5olk247qin8wkno.png" alt="Image description" width="880" height="385"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h4&gt;
  &lt;a href="#41-edit-datree-policies"&gt;
  &lt;/a&gt;
  4.1 Edit Datree Policies
&lt;/h4&gt;

&lt;p&gt;This is important because most of the time you will be working with Datree on CLI, but having a web portal where policies are accessible via browser makes the policy handling really easy.&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#411-toggle-onoff-policy"&gt;
  &lt;/a&gt;
  4.1.1. Toggle ON/OFF policy
&lt;/h6&gt;

&lt;p&gt;You can very easily toggle the policy which you want to enforce and revoke for your Kubernetes cluster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lkAjOSW7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hsrm9wkgx9nlwlgs7h6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lkAjOSW7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4hsrm9wkgx9nlwlgs7h6.png" alt="Image description" width="274" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#412-edit-policy-message"&gt;
  &lt;/a&gt;
  4.1.2. Edit Policy Message
&lt;/h6&gt;

&lt;p&gt;You can also edit policy messages so that you can add text which can help the developer troubleshoot the policy validation errors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8s2hKyQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ib7jpliwp2t6m18odfep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8s2hKyQe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ib7jpliwp2t6m18odfep.png" alt="Image description" width="780" height="253"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, save your custom message -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SfkvLkyz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8der0sxemaatn1brt28.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SfkvLkyz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/d8der0sxemaatn1brt28.png" alt="Image description" width="780" height="260"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h4&gt;
  &lt;a href="#42-datree-policies-invocation-history"&gt;
  &lt;/a&gt;
  4.2 Datree policies invocation history
&lt;/h4&gt;

&lt;p&gt;Along with edit features, you can also see the previous invocation history and the results. Simply click on the History option on the left navigation -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JKq281ov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5b1dxhhrg7r4awpvat1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JKq281ov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5b1dxhhrg7r4awpvat1.png" alt="Image description" width="880" height="503"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#5-define-policy-as-codepac"&gt;
  &lt;/a&gt;
  5. Define Policy as Code(PaC)
&lt;/h2&gt;

&lt;p&gt;One more important feature of Datree which I like the most is Policy As Code (PaC). If you have worked with &lt;a href="https://terraform.io"&gt;Terraform&lt;/a&gt; before, then you might recognize this feature, because it helps you create and save policy as code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Benefits-&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can easily version your policies under the version control&lt;/li&gt;
&lt;li&gt;Easy to share polices with version control&lt;/li&gt;
&lt;li&gt;Each policy change can be tracked and roll back with the help of version control.&lt;/li&gt;
&lt;/ol&gt;



&lt;h6&gt;
  &lt;a href="#51-enabled-datree-policy-as-code"&gt;
  &lt;/a&gt;
  5.1 Enabled Datree Policy As Code
&lt;/h6&gt;

&lt;p&gt;Under your account settings, you can find the toggle option to enable the &lt;em&gt;&lt;strong&gt;Policy As Code&lt;/strong&gt;&lt;/em&gt; -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t9TU2n-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7rvxdgz0w08yljdi5k3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t9TU2n-T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e7rvxdgz0w08yljdi5k3.png" alt="Image description" width="780" height="667"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;h6&gt;
  &lt;a href="#52-download-the-policiesyaml"&gt;
  &lt;/a&gt;
  5.2 Download the policies.yaml
&lt;/h6&gt;

&lt;p&gt;You can download the &lt;em&gt;&lt;strong&gt;policies.yaml&lt;/strong&gt;&lt;/em&gt; from the settings page.&lt;/p&gt;



&lt;h6&gt;
  &lt;a href="#53-how-to-update-the-policiesyaml"&gt;
  &lt;/a&gt;
  5.3 How to update the policies.yaml
&lt;/h6&gt;

&lt;p&gt;Keep these key components in mind before updating the policies -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;name&lt;/strong&gt; - Here you can specify the name of the policy which you want to keep&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;isDefault&lt;/strong&gt; -  If you want to keep the policies as default, then you can keep the value of the policy as true&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;identifier&lt;/strong&gt; - It should be unique in nature&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;messageOnFailure&lt;/strong&gt; - The message which you want to show upon failure&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is an example of &lt;em&gt;&lt;strong&gt;policies.yaml&lt;/strong&gt;&lt;/em&gt; -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apiVersion: v1
policies:
  - name: Default
    isDefault: true
    rules:
      - identifier: INGRESS_INCORRECT_HOST_VALUE_PERMISSIVE
        messageOnFailure: Incorrect value for key `host` - specify host instead of using a wildcard character ("*") 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above YAML is just an example in which you can either keep no policies or more than one policy, as per your need.&lt;/p&gt;



&lt;h2&gt;
  &lt;a href="#6-conclusion"&gt;
  &lt;/a&gt;
  6. Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/datreeio/datree"&gt;Datree&lt;/a&gt; is a really good framework for a DevOps person who wants to build a stable Kubernetes manifest (YAML) which is very well tested and secured with custom policies.&lt;/p&gt;

&lt;p&gt;Apart from testing the Kubernetes manifest (YAML) locally, Datree provides some out of the box integrations -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Git Hooks -&lt;/strong&gt; With Git Hooks, you can trigger the testing of Kubernetes manifest (YAML) as soon as you commit and push some new updates into your repo.&lt;/li&gt;
&lt;li&gt;**Helm Plugin - If you are using Helm Chart to manage your Kubernetes cluster, then you can install the Datree helm plugin at &lt;a href="https://github.com/datreeio/helm-datree"&gt;https://github.com/datreeio/helm-datree&lt;/a&gt; which can help you to achieve the same result which we saw earlier in the post.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://hub.datree.io/?utm_source=rahul&amp;amp;utm_medium=article&amp;amp;utm_campaign=Validating+Kubernetes+Configurations+with+Datree&amp;amp;utm_id=influencer"&gt;Datree&lt;/a&gt; has really good integration with &lt;a href="https://circleci.com/"&gt;CicleCi&lt;/a&gt;, &lt;a href="https://travis-ci.org/"&gt;TravisCi&lt;/a&gt;, &lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt;, &lt;a href="https://gitlab.com/users/sign_in"&gt;GitLab&lt;/a&gt; also.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>kubernetes</category>
      <category>devops</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>PYTHON TRICKS FOR WRITING CLEAN AND EASY READABLE CODE.</title>
      <author>Sam Sonter</author>
      <pubDate>Tue, 09 Nov 2021 05:31:57 +0000</pubDate>
      <link>https://dev.to/asapsonter/python-tricks-for-writing-clean-and-easy-readable-code-5cc0</link>
      <guid>https://dev.to/asapsonter/python-tricks-for-writing-clean-and-easy-readable-code-5cc0</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hello-everybody-today-i-am-going-state-and-explain-few-python-tricks-with-examples"&gt;
  &lt;/a&gt;
  Hello everybody, Today  I am going state and explain few python tricks with examples.
&lt;/h1&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        TERNARY OPRATORS/CONDITIONALS
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Ternary oprators/conditionals evaluate code on &lt;em&gt;True&lt;/em&gt; or &lt;em&gt;False&lt;/em&gt;. It allows a single line replacing multi-line &lt;em&gt;if&lt;/em&gt; and &lt;em&gt;else&lt;/em&gt; statements. This basicaily replaces multi-line code but still makes the code understandable. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SFzjP3XT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jubtxswrfk0jaacba6bf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SFzjP3XT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jubtxswrfk0jaacba6bf.png" alt="Image description" width="448" height="280"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Re-write using Ternary &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FjTF--MO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7tkbzfzinp4uzzcc59d1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FjTF--MO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7tkbzfzinp4uzzcc59d1.png" alt="Image description" width="566" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we have both if/else statement on a single line. Making the code simple and easier to read.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;          ENUMERATE FUNCTION
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;This is a built-in python function that eases the task of interating through lists/tuples. &lt;br&gt;
Enumerated objects can be used directly in loops or converted into tuples using list() method. Here is an example:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4LAZ1xlh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh1evduoru7v6c7kv6mc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4LAZ1xlh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qh1evduoru7v6c7kv6mc.png" alt="Image description" width="874" height="470"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am now going to state a cleaner code using Enumerate function&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NlNc7xfe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jpdybktnyoemp2l2p7i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NlNc7xfe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jpdybktnyoemp2l2p7i.png" alt="Image description" width="848" height="414"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;      WRITING SIMPLIFIED NUMERIC LITERALS
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;I will show use to use &lt;strong&gt;_&lt;/strong&gt; to simplify large numeric literals in code. &lt;br&gt;
In the following example i will use an underscore help read large numeric values and an f string for easy read of its output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TBt5LcXP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uc0vqju9a0u25lly8e33.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TBt5LcXP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uc0vqju9a0u25lly8e33.png" alt="Image description" width="866" height="502"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
