<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why is HTTP a Stateless Protocol?</title>
      <author>Srajan Gupta</author>
      <pubDate>Tue, 26 Oct 2021 12:44:39 +0000</pubDate>
      <link>https://dev.to/srajangupta__/why-is-http-a-stateless-protocol-2g7i</link>
      <guid>https://dev.to/srajangupta__/why-is-http-a-stateless-protocol-2g7i</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gxTJPeY26rs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;"HTTP Protocol is Stateless."&lt;br&gt;
This video tutorial will help you understand, what the above statement means.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>node</category>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>NodeJS + Express part 2: Route parameters</title>
      <author>Eric The Coder</author>
      <pubDate>Tue, 26 Oct 2021 12:25:57 +0000</pubDate>
      <link>https://dev.to/ericchapman/nodejs-express-part-2-route-parameters-ea3</link>
      <guid>https://dev.to/ericchapman/nodejs-express-part-2-route-parameters-ea3</guid>
      <description>&lt;p&gt;Here is a series of articles that will allow you to create backend applications with NodeJS + Express.&lt;/p&gt;

&lt;p&gt;This series is the continuation of my series on the basics of NodeJS. If you don't have basic knowledge of NodeJS read this series first: &lt;a href="https://dev.to/ericchapman/create-a-backend-in-javascript-introduction-to-node%20-js-215a"&gt;Introduction to NodeJS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Node.js is today a must, so it is essential for a developer to master it.&lt;/p&gt;

&lt;p&gt;So I will publish a new article about every two days and little by little you will learn everything there is to know about Node.js + Espress&lt;/p&gt;

&lt;p&gt;To not miss anything follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#json-data-from-a-data-file"&gt;
  &lt;/a&gt;
  JSON data from a data file
&lt;/h3&gt;

&lt;p&gt;In a real world application, the data will not be send directly in the res.json(). The data will be read from some kind of database. &lt;/p&gt;

&lt;p&gt;For the following exemples, we will create a text JSON database to help mimic a real world scenario&lt;/p&gt;

&lt;p&gt;Create a file name data.js and copy/paste this code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;650&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iWatch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;750&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Change the app.get() to send the products data&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./data.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;server is listening on port 5000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code will return all the products content.&lt;/p&gt;

&lt;p&gt;Sometime it could be handy to only return part of the products. For exemple some fields can be confidential.&lt;/p&gt;

&lt;p&gt;Here a exemple returning everything except the price&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;partial_products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;partial_products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#route-parameters"&gt;
  &lt;/a&gt;
  Route parameters
&lt;/h3&gt;

&lt;p&gt;What if you want to load only product with id 1. The convention want to route to be something like: api/products/1&lt;/p&gt;

&lt;p&gt;Espress have a easy way to manage that kind of request&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note the :productID in the route url. The :productID is a wildcard to put the content following the 'api/products/' ex: api/products/1  &lt;/p&gt;

&lt;p&gt;The productID can be retrieve from your request with the req.params.productID&lt;/p&gt;

&lt;p&gt;What append if the request contain a id not in the data. ex: 'api/products/1080' ? Nothing will be display. &lt;/p&gt;

&lt;p&gt;By convention in that situation we send a 404 Not Found status&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product not found&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#query-string"&gt;
  &lt;/a&gt;
  Query String
&lt;/h3&gt;

&lt;p&gt;It is usual for an API to allow user sending search request. For exemple if a user want all the product that the name contain the word phone he can send this request&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;GET&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Like everything else, Express have an easy way to grab the data from the query string. We can use the "req.query" to retrieve the query string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/query&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products_result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products_result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;No products matched your search&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products_result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;const name = req.query.name.toLowerCase() retrieved the query string named "name" from the URL and convert it to lower case.&lt;/p&gt;

&lt;p&gt;Then we only have to filter our products list on that value to get the products_results&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That's all for today, follow me on twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;https://twitter.com/EricTheCoder_&lt;/a&gt; to be notified of the publication of the next article (within two days).&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>express</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to Start Mining Bitcoin Gold on Your Laptop in 2021</title>
      <author>Course Probe</author>
      <pubDate>Tue, 26 Oct 2021 12:24:44 +0000</pubDate>
      <link>https://dev.to/courseprobe/how-to-start-mining-bitcoin-gold-on-your-laptop-in-2021-4bf2</link>
      <guid>https://dev.to/courseprobe/how-to-start-mining-bitcoin-gold-on-your-laptop-in-2021-4bf2</guid>
      <description>&lt;p&gt;A Step by Step Guide to Pool Mining Bitcoin Gold BTG in 2021 with a CPU or GPUs!&lt;/p&gt;

&lt;p&gt;Sometimes mining can seem to be too complex for the average computer user, so I thought about putting together a quick guide to get you excited about mining cryptocurrency and BTG in particular.&lt;/p&gt;

&lt;p&gt;Anyone can start mining Bitcoin Gold BTG with any laptop in under 5 minutes using this guide, regardless of your technical skill level you will be able to increase your crypto knowledge and start mining BTG with your CPU and GPU today!!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;BTG is a cryptocurrency with Bitcoin fundamentals, mined on common GPUs instead of specialty ASICs.&lt;/p&gt;

&lt;p&gt;ASICs tend to monopolize mining to a few big players, but GPU mining means anyone can mine again - restoring decentralization and independence. GPU mining rewards go to individuals worldwide, instead of mostly to ASIC warehouse owners, recreating network effects that Bitcoin used to have.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;Now let's get you started !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1:&lt;/strong&gt; Get yourself a Wallet.&lt;/p&gt;

&lt;p&gt;I recommend getting Guarda or Atomic Wallet to get a BTG public address and be able to receive funds.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; Download the Unmineable Miner Software&lt;/p&gt;

&lt;p&gt;Before downloading the file, set some folder exclusions on Windows Defender, in your antivirus and also in your browser so you can download the file without being bothered with notifications of dangerous files.&lt;/p&gt;

&lt;p&gt;Official Unmineable software can be downloaded from this site: &lt;a href="https://www.unmineable.com/miner"&gt;Unmineable Download&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Download the MFI version (Miners files included).&lt;/p&gt;

&lt;p&gt;The unmineable software is just one executable file, it already contains all the configurations so it is the best and easiest way to mine BTG.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Run the file as an Administrator in windows.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It looks exactly like this when you run it: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sp9_YtUv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/udmfa63w1l5cccquxx45.png" alt="Unmineable Start Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can select GPU cards or CPU.&lt;/p&gt;

&lt;p&gt;It will take you to the second screen where you will enter your Bitcoin Gold BTG Address and also &lt;strong&gt;the code which will allow you to drop your Dev Fee from 1% to 0.75%&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Use the code: &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; to drop your Dev Fee from 1% to 0.75% (it makes a difference).&lt;/p&gt;

&lt;p&gt;Your screen should look like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cTE_bN6U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1d5vuwmmxqk3xmxgmfu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cTE_bN6U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1d5vuwmmxqk3xmxgmfu.png" alt="Unmineable BTG mining"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you click on the Start button, you should see a similar screen:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lwOl1eL2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4yl8vk15ykllxe309mdb.png" alt="Unmineable Mining Screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At this point I would recommend you to click the option at the bottom to display the logs (Looks like a sheet of paper), here click Force Stop. &lt;/p&gt;

&lt;p&gt;Then click the Settings Icon (Looks like a cog wheel), in the screen that pops up you want to double check a few things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure the algorithm selected is ETCHASH if you are mining with 4GB cards, use ETHASH for cards with 6GB or more, if you selected CPU everything is ready to start mining no need to select anything.&lt;/li&gt;
&lt;li&gt;Make sure the Code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt; is showing in the referral box (Recommended, not mandatory).&lt;/li&gt;
&lt;li&gt;Set a name for your worker (The computer you are mining from).&lt;/li&gt;
&lt;li&gt;Set your mining Intensity at the top, I would recommend High for those periods when you are not using the computer.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It looks similar to this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wjec4Fte--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rjrpff038akqg461zb7w.png" alt="Unmineable Settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click on the Save &amp;amp; Restart button to start mining !!&lt;/p&gt;

&lt;p&gt;Once it starts you can check the speed of your Graphic card which shows as the Current Hashrate.&lt;/p&gt;

&lt;p&gt;Also you can click on the stats button on the top right to go directly to the Unmineable website where you can check your balance and request a manual payment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt; it is recommended you change a few settings in Windows, there's people that disable the Updates and also disable sleeping mode, hibernation or anything that could turn off the computer while it is not in use.&lt;/p&gt;

&lt;p&gt;When using a Laptop, make sure it has some battery or is plugged so it won't shut down.&lt;/p&gt;

&lt;p&gt;Congrats, if you are using Unmineable you are now a miner !!&lt;/p&gt;




&lt;p&gt;If you want a bit more of control over the mining software and configurations then you can download the miners and manually set them up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with CPU then you could follow below:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Go to the xmrig site to download the latest version (MSVC) or from the oficial github repository: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/xmrig/xmrig/releases"&gt;https://github.com/xmrig/xmrig/releases&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you download the latest version you would have to edit a file named "pool_mine_example.bat" or "start.com" or "start.bat" Inside this file you need to modify 2 lines.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;if the file doesn't exists you would have to create it&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It could look similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd %~dp0
xmrig.exe -o rx.unmineable.com:3333 -u BTG:GK18bp4UzC6wqYKKNLkaJ3hzQazTc3TWBw.wrkID#e4xd-wmzl -p x
pause
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the second line after the -o you can see the Pool URL, in this case all you have to do depending on your location is to use one of the following URLs (select the one closer to your location).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;USA:&lt;/strong&gt; rx-us.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Europe:&lt;/strong&gt; rx-eu.unmineable.com:3333&lt;br&gt;
&lt;strong&gt;Asia:&lt;/strong&gt; rx-asia.unmineable.com:3333&lt;/p&gt;

&lt;p&gt;Then, the third line is where you will enter your wallet's public address (copied in STEP 1), place it after the XRP: and before the first dot "." .&lt;/p&gt;

&lt;p&gt;The general structure of the address needs to be:&lt;/p&gt;

&lt;p&gt;[COIN]:[Wallet address].[workerID]#[Code to lower mining fee]&lt;/p&gt;

&lt;p&gt;The workerID is any name you want to give to each computer where you are running the miner so it can easily be identified later on under the pool stats.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The code after the # is important&lt;/strong&gt; because mining with that code will drop the Mining Fee from 1% to 0.75% (it makes a difference). You can start mining using that code &lt;strong&gt;e4xd-wmzl&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Run the file as an administrator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hcb4pCSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ca69fmuxwfmtc83gfqhh.jpg" alt="XMRig Mining"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If everything goes well, you are now running XMRig and are mining. Congrats !!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For those of you mining with GPU:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I would recommend you to get: Teamredminer (AMD cards), Phoenixminer (AMD/NVIDIA) or Trex (Nvidia).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Download these miner from the oficial sites:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Phoenix miner: &lt;a href="https://bitcointalk.org/index.php?topic=2647654.0"&gt;Bitcoin Talk forum&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Teamred miner: &lt;a href="https://github.com/todxx/teamredminer/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Trex: &lt;a href="https://github.com/trexminer/T-Rex/releases"&gt;Github&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then set them up with a smilar Start.bat file as mentioned in the CPU section above. &lt;/p&gt;

&lt;p&gt;Pay attention to some changes you would need to implement: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 4gb cards you need to set the algo on the miner to ETCHASH and the coin to ETC. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;if you are mining with 6gb cards or more then you need to set the algo on the miner to ETHAS and the coin to ETH. (check for miner CLI parameters)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure to also set the pool url accordingly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ETCHASH: etchash.unmineable.com:3333&lt;/li&gt;
&lt;li&gt;ETHASH:  ethash.unmineable.com:3333&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once done, run the file as administrator.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now you can Log into Unmineable to check your stats:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Unmineable.com is a mining Pool which allows you to mine with your CPU using RandomX or GPUS using Etchash or Ethash and pay you in any coin you select. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oeNp10_x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/op60aj3tql1phg4l63q5.jpg" alt="Unmineable Site"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Remember when you set up the address inside the Miner starter file ? &lt;/p&gt;

&lt;p&gt;Well, there you just let Unmineable know the coin you want to be paid in, in this example XRP and then the address where they will transfer the mined coins.&lt;/p&gt;

&lt;p&gt;In order to check your balance, log into &lt;a href="https://unmineable.com"&gt;Unmineable&lt;/a&gt; and then select the coin you want to mine. In this example, Ripple XRP.&lt;/p&gt;

&lt;p&gt;Then you can select the Tab that reads RandomX or ETCHAS or ETHASH depending on your algo, and enter your address in the box that reads "Enter your address to check your stats:". &lt;/p&gt;

&lt;p&gt;After doing this you will see the balance on your account and you will even be able to request a payment.&lt;/p&gt;




&lt;p&gt;Congrats, you are a miner now! &lt;/p&gt;

&lt;p&gt;I recommend downloading some software to monitor the running temperature of your CPU and GPU, a good and free one is Hardware Monitor.&lt;/p&gt;

&lt;p&gt;Try not to exceed the temperature more than 90 degrees celsius. In case you are mining with a laptop, change the thermal paste of your CPU, get it cleaned inside, and get some heat extractors for laptops.&lt;/p&gt;

&lt;p&gt;If you take care of the temperature your computer should work very well, the amount of coins you can mine will depend on the hashrate of your CPU and GPUs. &lt;/p&gt;

&lt;p&gt;For GPUS download MSI Afterburner and set the appropriate Overclocking profile so you can get higher hashrates.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Remember to use a valid address for each coin, for example if you want to be paid in ADA then you need a valid Cardano blockchain address. In this example Binance Smart Chain is used and you would receive a CAKE token on the BSC blockchain.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;em&gt;If you are having any difficulties, please join me on discord so I can help you further&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://discord.gg/sPbV8kcK"&gt;https://discord.gg/sPbV8kcK&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you are looking for more information into CPU mining, there's a good guide in a PDF ebook and is Free, get it at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DdgD3-9j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39cvnfjj6uzqatvoshn8.png" alt="Mining with CPU"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;Referral Disclosure:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Please read the Unmineable Referral Policy at the following link to better understand How the referral code works in detail &lt;a href="https://www.unmineable.com/referrals"&gt;Unmineable Referrals&lt;/a&gt;&lt;/p&gt;

</description>
      <category>crypto</category>
      <category>bitcoin</category>
      <category>mining</category>
    </item>
    <item>
      <title>NodeJS + Express partie 2 : Route Parameters</title>
      <author> Eric Le Codeur</author>
      <pubDate>Tue, 26 Oct 2021 12:22:38 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/nodejs-express-partie-2-route-parameters-3n12</link>
      <guid>https://dev.to/ericlecodeur/nodejs-express-partie-2-route-parameters-3n12</guid>
      <description>&lt;p&gt;Voici une série d'articles qui vous permettra créer des applications backend avec NodeJS + Express.&lt;/p&gt;

&lt;p&gt;Cette série est la suite de ma série sur les bases de NodeJS. Si vous n'avez pas les connaissances de bases en NodeJS lisez cette série d'abord : &lt;a href="https://dev.to/ericlecodeur/creer-un-backend-en-javascript-introduction-a-node-js-3014"&gt;Introduction à NodeJS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Node.js est aujourd'hui un incontournable, il est donc essentiel pour un développeur de le maitriser.&lt;/p&gt;

&lt;p&gt;Je vais donc publier un nouvel article environ au deux jours et petit à petit vous apprendrez tout ce qu'il y a à savoir sur Node.js + Espress&lt;/p&gt;

&lt;p&gt;Pour ne rien manquer suivez moi sur twitter : &lt;a href="https://twitter.com/EricLeCodeur"&gt;https://twitter.com/EricLeCodeur&lt;/a&gt;&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#donn%C3%A9es-provenant-dun-fichier-de-donn%C3%A9es-json"&gt;
  &lt;/a&gt;
  Données provenant d'un fichier de données JSON
&lt;/h3&gt;

&lt;p&gt;Dans une application réelle, les données ne seront pas envoyées directement dans le res.json(). Les données seront lues à partir d'une base de données.&lt;/p&gt;

&lt;p&gt;Pour les exemples suivants, nous allons créer une base de données texte JSON pour aider à imiter ce scénario.&lt;/p&gt;

&lt;p&gt;Créez un nom de fichier data.js et copiez/collez ce code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPhone&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;800&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iPad&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;650&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;iWatch&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;price&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;750&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Changez le app.get() pour envoyer les données des produits&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;express&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./data.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;server is listening on port 5000&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ce code renverra tout le contenu des produits.&lt;/p&gt;

&lt;p&gt;Parfois, il peut être pratique de ne renvoyer qu'une partie des produits. Par exemple certains champs peuvent être confidentiels.&lt;/p&gt;

&lt;p&gt;Voici un exemple retournant tout sauf le prix&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;partial_products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;partial_products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#route-parameters"&gt;
  &lt;/a&gt;
  Route Parameters
&lt;/h3&gt;

&lt;p&gt;Que se passe-t-il si vous souhaitez charger uniquement le produit avec l'ID #1. La convention veut que le chemin URL soit quelque chose comme : api/products/1&lt;/p&gt;

&lt;p&gt;Espress a un moyen simple de gérer ce genre de demande&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notez le :productID dans l'URL de la route. Le :productID est un "wildcard" pour mettre le contenu après le 'api/products/' ex: api/products/1&lt;/p&gt;

&lt;p&gt;Le productID peut être récupéré à partir de votre demande avec le req.params.productID&lt;/p&gt;

&lt;p&gt;Qu'est-ce qui s'ajoute si la demande contient un identifiant qui n'est pas dans les données. ex : 'api/produits/1080' ? Rien ne sera affiché.&lt;/p&gt;

&lt;p&gt;Par convention dans cette situation, nous renvoyons un statut 404 Not Found&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/products/:productID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;params&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;productID&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Product not found&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#query-string"&gt;
  &lt;/a&gt;
  Query String
&lt;/h3&gt;

&lt;p&gt;Il est courant qu'une API autorise l'utilisateur à faire une requête de recherche. Par exemple si un utilisateur veut tous les produits dont le nom contient le mot "phone" il peut envoyer cette demande&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;GET&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;phone&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Comme tout le reste, Express dispose d'un moyen simple de récupérer les données de la chaîne de requête. Nous pouvons utiliser le "req.query" pour récupérer la chaîne de requête.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/api/query&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;query&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products_result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products_result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;No products matched your search&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products_result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;const name = req.query.name.toLowerCase() a récupéré la chaîne de requête nommée "name" à partir de l'URL et la convertit en minuscules.&lt;/p&gt;

&lt;p&gt;Ensuite, nous n'avons qu'à filtrer notre liste de produits sur cette valeur pour obtenir les products_results&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;C'est tout pour aujourd'hui, suivez moi sur twitter : &lt;a href="https://twitter.com/EricLeCodeur"&gt;https://twitter.com/EricLeCodeur&lt;/a&gt; afin d'être avisé de la parution du prochain article (d'ici deux jours).&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>node</category>
      <category>express</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Replacing characters in a string using Python</title>
      <author>hrishikesh1990</author>
      <pubDate>Tue, 26 Oct 2021 12:16:18 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/replacing-characters-in-a-string-using-python-28b2</link>
      <guid>https://dev.to/hrishikesh1990/replacing-characters-in-a-string-using-python-28b2</guid>
      <description>&lt;p&gt;In this short tutorial, we look at how you could use Python to replace a character in a string. We break down the code to help you understand the function.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#python-replace"&gt;Python replace()&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-and-explanation"&gt;Code and Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#closing-thoughts"&gt;Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unlike lists, Python strings are immutable and hence they cannot be changed once initialized. Because of this, methods used to edit lists cannot be used on a string. However, Python has a few functions that can replace characters in strings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-replace"&gt;
  &lt;/a&gt;
  Python replace():
&lt;/h2&gt;

&lt;p&gt;The Python replace() method is used to find and replace characters in a string. It requires a substring to be passed as an argument; the function finds and replaces it. The replace() method is commonly used in data cleaning.&lt;/p&gt;

&lt;p&gt;However, given strings are immutable, the function replaces characters on a copy of the original string. So ensure you save the new string in case you intend to further use it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#syntax-of-replace"&gt;
  &lt;/a&gt;
  Syntax of replace():
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;old&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here “string” refers to the string you are looking to replace characters with.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#parameter"&gt;
  &lt;/a&gt;
  Parameter:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Old - Required, the substring you are looking to replace. &lt;/li&gt;
&lt;li&gt;New - Required, the substring you are looking to replace the old string with.&lt;/li&gt;
&lt;li&gt;Count - Optional, specifies the number of times you want the string to be replaced. If left empty, all occurrences will be replaced.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# use of replace() method 
&lt;/span&gt;
&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Join our community of top freelancers"&lt;/span&gt;

&lt;span class="c1"&gt;# replace "top" with "top 1%"
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"top"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"top 1%"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# printing the original string
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code snippet outputs the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Join our community of top 1% freelancers
Join our community of top freelancers
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see the substring was replaced but the original string still remains the same. Also, given we did not specify a count argument, all the occurrences were replaced.&lt;/p&gt;

&lt;p&gt;Let us look at a case where we replace multiple instances of a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"python is a programming language"&lt;/span&gt;

&lt;span class="c1"&gt;# replace "p" with "P" once
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"p"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"P"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# replace "p" with "P" once
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"p"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"P"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code snippet, we have first replaced “p” only once whereas in the second print statement we have not passed a counter-argument. This means all the occurrences would be replaced.&lt;/p&gt;

&lt;p&gt;The output is as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Python is a programming language
Python is a Programming language
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing thoughts:
&lt;/h2&gt;

&lt;p&gt;There are other methods that can be used apart from the replace method to replace characters in strings. However, these methods would involve typecasting or slicing, and concatenation. Although these methods work, they are not preferred over the replace() method.&lt;/p&gt;

&lt;p&gt;However, I would recommend you give them a read and understand the concept.&lt;/p&gt;

</description>
      <category>python</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>DIY dowtime monitor with NodeRED </title>
      <author>Mangirdas Judeikis</author>
      <pubDate>Tue, 26 Oct 2021 11:52:43 +0000</pubDate>
      <link>https://dev.to/mjudeikis/diy-dowtime-monitor-with-nodered-g99</link>
      <guid>https://dev.to/mjudeikis/diy-dowtime-monitor-with-nodered-g99</guid>
      <description>&lt;p&gt;"Black box" monitoring is one of the key concepts, when monitoring any application. We will show how to deploy a free DIY downtime monitoring stack, using NodeRed and Synpse.&lt;/p&gt;

&lt;p&gt;Similar pattern could be used to do almost any home automation. So go crazy! We use this pattern as its easy to modify, and not does not require much of the maintenance.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Synpse is an end-to-end platform to manage your device fleet that can grow to hundreds of thousands of devices, perform OTA software updates, collect metrics, logs, deploy your containerized applications and facilitate tunnel-based SSH access to any of your device. You can find a Quick Start here .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#technologies-used"&gt;
  &lt;/a&gt;
  Technologies used
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://cloud.synpse.net/"&gt;Synpse&lt;/a&gt; for hosting and running applications anywhere&lt;br&gt;
&lt;a href="https://nodered.org/"&gt;NodeRED&lt;/a&gt; for instrumenting our monitoring&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#nodered"&gt;
  &lt;/a&gt;
  NodeRED
&lt;/h2&gt;

&lt;p&gt;We will use NodeRED as instrumentation tool to “write code without writing any code” and monitor our web pages availability. If downtime is detected, we will notify administrators via slack or discord message.&lt;/p&gt;

&lt;p&gt;First lets deploy NodeRED into Synpse enable IoT device we own. We use simple RPI4 under the desk at home:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;NodeRed&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Low-code programming for event-driven applications&lt;/span&gt;
&lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;container&lt;/span&gt;
&lt;span class="na"&gt;scheduling&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Selector&lt;/span&gt;
  &lt;span class="c1"&gt;# More on selectors https://docs.synpse.net/synpse-core/applications/scheduling&lt;/span&gt;
  &lt;span class="na"&gt;selectors&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;nodered&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;master&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nodered&lt;/span&gt;
    &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nodered/node-red:latest-minimal&lt;/span&gt;
    &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;root&lt;/span&gt;
    &lt;span class="na"&gt;ports&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;1880:1880"&lt;/span&gt;
    &lt;span class="na"&gt;volumes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/data/nodered:/data&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/etc/localtime:/etc/localtime&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s"&gt;/root/.ssh:/root/.ssh&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Access the remote device via Synpse proxy CLI command to configure it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;synpse device proxy &amp;lt;device_name&amp;gt; --port 1880
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Open the browser page &lt;a href="http://localhost:1880"&gt;http://localhost:1880&lt;/a&gt;. You should be able to see NodeRed running.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#downtime-flow"&gt;
  &lt;/a&gt;
  Downtime flow
&lt;/h2&gt;

&lt;p&gt;We use Discord webhook integration to send a messages and alert our developers once page is down. Discord webhook documentation can be found &lt;a href="https://discord.com/developers/docs/resources/webhook"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XxMZV59c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/utdi3di8qhk8mo6ndecy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XxMZV59c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/utdi3di8qhk8mo6ndecy.png" alt="Discord webhook"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flow we created is very simple:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Each 5s call cloud.synpse.net health url&lt;/li&gt;
&lt;li&gt;If response is not 200, go to next phase, else drop&lt;/li&gt;
&lt;li&gt;Rate limit to send only 1 message each 5 min&lt;/li&gt;
&lt;li&gt;Create a Webhook payload&lt;/li&gt;
&lt;li&gt;Send POST request to webhook URL&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Flow itself looks like this (we have left if 200 branch too, in case you want to re-use it for other purposes). Full json flow can be found bellow for you to reuse.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tFgvzmKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7k6v8n4pyoe081roheh2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tFgvzmKn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7k6v8n4pyoe081roheh2.png" alt="NodeRED flow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Press “deploy” and you are done :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xAd9HcKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uef3gj0bww7ke9qp6w3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xAd9HcKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uef3gj0bww7ke9qp6w3.png" alt="Message"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is very simple way to monitor your applications or construct any other automation flows. In addition you cab deploy same application to different agents, across the globe, and you have free Region based downtime monitoring!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapupsh"&gt;
  &lt;/a&gt;
  ./wrap_up.sh
&lt;/h2&gt;

&lt;p&gt;If you have any questions or suggestions, feel free to start a new discussion in our forum or drop us a line on &lt;a href="https://discord.gg/dkgN4vVNdm"&gt;Discord&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Originallu published at &lt;a href="https://synpse.net/blog/nodered/downtime-monitor-nodered/"&gt;Synpse.net blog&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#full-flow"&gt;
  &lt;/a&gt;
  Full flow
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"tab"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"NodeRed on Synpse"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"disabled"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"info"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ef34b5db67c67385"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"http request"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;PAGE_TO_CHECK_NAME&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"method"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"GET"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ret"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"paytoqs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ignore"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;PAGE_TO_CHECK_URL&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"tls"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"persist"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"proxy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"authType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;370&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"2109536ce55f85cf"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"1aae7673af94fb6c"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"3c39826c5c2c418b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"inject"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ticker 5s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"props"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"p"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"payload"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"p"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"topic"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"vt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"str"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"repeat"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"crontab"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"once"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"onceDelay"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"topic"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"payload"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"payloadType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"ef34b5db67c67385"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2109536ce55f85cf"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"switch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"if not 200"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"property"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"statusCode"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"propertyType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"msg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"t"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"neq"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"v"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"200"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"vt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"str"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"checkall"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"repair"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;580&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"758156729b55665f"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1aae7673af94fb6c"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"switch"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"if  200"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"property"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"statusCode"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"propertyType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"msg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"rules"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"t"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eq"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"v"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"200"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="nl"&gt;"vt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"str"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"checkall"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"repair"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;570&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"758156729b55665f"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"delay"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"pauseType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"rate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"timeout"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"timeoutUnits"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"seconds"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"rate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"nbRateUnits"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"rateUnits"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"minute"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"randomFirst"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"randomLast"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"randomUnits"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"seconds"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"drop"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"allowrate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;740&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"a062d51eb49713f9"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2452ffaa52e6333f"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"http request"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"discord webhook"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"method"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"POST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ret"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"paytoqs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ignore"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;DISCORD_WEBHOOK_URL&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"tls"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"persist"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"proxy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"authType"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1110&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"a062d51eb49713f9"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"function"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"z"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"90902c5d92f08930"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"payload"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"func"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"var payload = {&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Downtime BOT&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;avatar_url&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;https://i.imgur.com/zEGYUVs.jpeg&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;content&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;cloud.synpse.net Downtime detected. Next check in 5 min&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;msg.payload = payload&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;return msg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"outputs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"noerr"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"initialize"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"finalize"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"libs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"x"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;920&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"y"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;260&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"wires"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
                &lt;/span&gt;&lt;span class="s2"&gt;"2452ffaa52e6333f"&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>iot</category>
      <category>devicemanagement</category>
      <category>internetofthings</category>
      <category>synpsenodered</category>
    </item>
    <item>
      <title>Announcement: Book release!!</title>
      <author>Bruno Oliveira</author>
      <pubDate>Tue, 26 Oct 2021 11:50:03 +0000</pubDate>
      <link>https://dev.to/brunooliveira/announcement-book-release-2491</link>
      <guid>https://dev.to/brunooliveira/announcement-book-release-2491</guid>
      <description>&lt;p&gt;As the title says: &lt;/p&gt;

&lt;p&gt;Inspired by my series of Flask posts, I decided to structure them more, add a lot of details regarding the deployment process, and, as a result, I have just released my first book:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://brunooliv.gumroad.com/l/YAjWX"&gt;https://brunooliv.gumroad.com/l/YAjWX&lt;/a&gt;&lt;/p&gt;

</description>
      <category>books</category>
      <category>python</category>
      <category>flask</category>
      <category>webdev</category>
    </item>
    <item>
      <title>20+ JavaScript Utilities to Boost Your Productivity As a Developer</title>
      <author>Olubisi Idris Ayinde💡</author>
      <pubDate>Tue, 26 Oct 2021 11:44:36 +0000</pubDate>
      <link>https://dev.to/olanetsoft/20-javascript-utilities-to-boost-your-productivity-as-a-developer-494n</link>
      <guid>https://dev.to/olanetsoft/20-javascript-utilities-to-boost-your-productivity-as-a-developer-494n</guid>
      <description>&lt;p&gt;In software development, utilities are software tools that add functionality to your code or improve the performance of your application.&lt;/p&gt;

&lt;p&gt;In this article, we'll go through a fantastic selection of tools that will help you be more productive as a software developer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-webpack"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://www.npmjs.com/package/webpack"&gt;Webpack&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A module bundler is Webpack. Its primary function is to bundle JavaScript files for browser use, but it may also convert, bundle, or package almost any resource or object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-cypress"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.npmjs.com/package/cypress"&gt;Cypress&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Cypress is a modern web-based next-generation front-end testing tool.&lt;/p&gt;

&lt;p&gt;Although Cypress is frequently compared to Selenium, the two are fundamentally and structurally distinct. Cypress isn't limited in the same way that Selenium is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-rxjs"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://www.npmjs.com/package/rxjs"&gt;RXJs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;RxJS is a reactive programming library that uses Observables to make asynchronous or callback-based applications easier to compose. This project rebuilds Reactive-Extensions/RxJS, improving efficiency, modularity, and debugability while remaining mainly backward compatible, with some breaking changes that minimize the API surface.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-jest"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://www.npmjs.com/package/jest"&gt;Jest&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Jest is a fun JavaScript testing framework with a focus on ease of use.&lt;/p&gt;

&lt;p&gt;It works with Babel, TypeScript, Node, React, Angular, Vue, and more frameworks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-nestjs"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.npmjs.com/package/@nestjs/core"&gt;NestJs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Nest is a framework for creating Node.js server-side applications that are both efficient and scalable. It is designed with TypeScript (to maintain compatibility with pure JavaScript) and incorporates parts of OOP (Object Oriented Programming), FP (Functional Programming), and FRP (Functional Resource Programming) (Functional Reactive Programming).&lt;/p&gt;

&lt;p&gt;Nest uses Express behind the hood, but it also has interoperability with various other libraries, such as Fastify, allowing for easy usage of the numerous third-party plugins available.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-datefns"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://www.npmjs.com/package/date-fns"&gt;Date-fns&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;date-fns is a suite of tools for manipulating JavaScript dates in a browser and Node.js that are extensive and consistent.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-electron"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://www.npmjs.com/package/electron"&gt;Electron&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The Electron framework lets you write cross-platform desktop applications using JavaScript, HTML, and CSS. It is based on Node.js and Chromium and is used by the Atom editor and many other apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-ngmocks"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://www.npmjs.com/package/ng-mocks"&gt;NG-Mocks&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Mock components, services, and more out of annoying dependencies for simplification of Angular testing&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-webpack"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://www.npmjs.com/package/webpack"&gt;Webpack&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A module bundler is Webpack. Its primary function is to bundle JavaScript files for browser use, but it may also convert, bundle, or package almost any resource or object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-nanoid"&gt;
  &lt;/a&gt;
  10. &lt;a href="https://www.npmjs.com/package/nanoid"&gt;Nanoid&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A tiny, secure, URL-friendly, unique string ID generator for JavaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#11-redux"&gt;
  &lt;/a&gt;
  11. &lt;a href="https://www.npmjs.com/package/redux"&gt;Redux&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Redux is a state management system for JavaScript programs.&lt;br&gt;
(Not to be confused with the Redux Framework, a WordPress framework.)&lt;/p&gt;

&lt;p&gt;It enables you to create apps that operate consistently across environments (client, server, and native) and are simple to test. It also offers a fantastic developer experience, with live code editing and a time-traveling debugger.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#12-husky"&gt;
  &lt;/a&gt;
  12. &lt;a href="https://www.npmjs.com/package/husky"&gt;Husky&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Husky improves your commits and more.&lt;/p&gt;

&lt;p&gt;When you commit or push, you can use it to lint your commit messages, run tests, lint code, etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#13-axios"&gt;
  &lt;/a&gt;
  13. &lt;a href="https://www.npmjs.com/package/axios"&gt;Axios&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Promise based HTTP client for the browser and node.js&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#14-faker"&gt;
  &lt;/a&gt;
  14. &lt;a href="https://www.npmjs.com/package/faker"&gt;Faker&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;faker.js - generate massive amounts of fake data in the browser and node.js&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#15-dayjs"&gt;
  &lt;/a&gt;
  15. &lt;a href="https://www.npmjs.com/package/dayjs"&gt;DayJs&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Day.js is a minimalist JavaScript library that parses, validates, manipulates, and displays dates and times for modern browsers with an essentially Moment. Js-compatible API. If you use Moment.js, you already know how to use Day.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#16-webpack"&gt;
  &lt;/a&gt;
  16. &lt;a href="https://www.npmjs.com/package/webpack"&gt;Webpack&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;A module bundler is Webpack. Its primary function is to bundle JavaScript files for browser use, but it may also convert, bundle, or package almost any resource or object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#17-puppeteer"&gt;
  &lt;/a&gt;
  17. &lt;a href="https://www.npmjs.com/package/puppeteer"&gt;Puppeteer&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Puppeteer is a Node module that allows you to manipulate Chrome or Chromium using the DevTools Protocol. Puppeteer is configured to run full (non-headless) Chrome or Chromium by default, although this can be changed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#18-light-house"&gt;
  &lt;/a&gt;
  18. &lt;a href="https://www.npmjs.com/package/lighthouse"&gt;Light House&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Lighthouse analyzes web apps and web pages, collecting current performance metrics and insights on developer best practices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#19-react-query"&gt;
  &lt;/a&gt;
  19. &lt;a href="https://www.npmjs.com/package/react-query"&gt;React Query&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Hooks for fetching, caching, and updating asynchronous data in React&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#20-nodemon"&gt;
  &lt;/a&gt;
  20. &lt;a href="https://www.npmjs.com/package/nodemon"&gt;Nodemon&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Nodemon is a program that aids in the development of node.js apps by automatically restarting them when file changes in the directory are detected.&lt;/p&gt;

&lt;p&gt;No additional changes to your code or development technique are required with nodemon. nodemon is a wrapper for node.js that can be used instead of node.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#21-react-error-overlay"&gt;
  &lt;/a&gt;
  21. &lt;a href="https://www.npmjs.com/package/react-error-overlay"&gt;React Error Overlay&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;react-error-overlay&lt;/code&gt; is an overlay that displays when there is a runtime error.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#22-http-proxy-middleware"&gt;
  &lt;/a&gt;
  22. &lt;a href="https://www.npmjs.com/package/http-proxy-middleware"&gt;HTTP Proxy Middleware&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Node.js proxying made simple. Configure proxy middleware with ease for connecting, express, browser-sync, and many more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#23-underscore"&gt;
  &lt;/a&gt;
  23. &lt;a href="https://www.npmjs.com/package/underscore"&gt;Underscore&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Underscore.js is a utility-belt library for JavaScript that supports the usual functional suspects (each, map, reduce, filter.) without extending any core JavaScript objects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#24-parcel"&gt;
  &lt;/a&gt;
  24. &lt;a href="https://www.npmjs.com/package/parcel"&gt;Parcel&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;The parcel is a zero-configuration build tool for the web. It combines a tremendous out-of-the-box development experience with a scalable architecture that can take your project from just getting started to a massive production application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#25-pm2"&gt;
  &lt;/a&gt;
  25. &lt;a href="https://www.npmjs.com/package/pm2"&gt;Pm2&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;PM2 is a load balancer-assisted production process manager for Node.js applications. It lets you keep programs alive indefinitely, reload them without causing downtime, and simplify typical system administration duties.&lt;/p&gt;

&lt;p&gt;I hope you find these resources helpful 😊&lt;/p&gt;

&lt;p&gt;I'd love to connect with you at &lt;a href="https://twitter.com/olanetsoft"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/olubisi-idris-ayinde-05727b17a/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/Olanetsoft"&gt;GitHub&lt;/a&gt; | &lt;a href="https://idrisolubisi.com/"&gt;Portfolio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See you in my next blog article. Take care!!!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>👨‍💻[FirstDevRole #1] What are the Real Requirements for Becoming a Programmer?</title>
      <author>Antonio Pekeljevic</author>
      <pubDate>Tue, 26 Oct 2021 11:21:49 +0000</pubDate>
      <link>https://dev.to/antoniopk/firstdevrole-1-what-are-the-real-requirements-for-becoming-a-programmer-2e1p</link>
      <guid>https://dev.to/antoniopk/firstdevrole-1-what-are-the-real-requirements-for-becoming-a-programmer-2e1p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-this-about"&gt;
  &lt;/a&gt;
  What is this about? 🥱
&lt;/h2&gt;

&lt;p&gt;In my opinion, the point of writing a blog is to document your journey and share it with other people so hopefully someone finds the information useful. &lt;/p&gt;

&lt;p&gt;Having that said, I have decided to share my experience and what I have learned when it comes to getting a first software developer job.&lt;/p&gt;

&lt;p&gt;I have been through the process three times already so while everything is still relatively fresh and quite a few people asked me for advice on  &lt;a href="https://twitter.com/antoniopkvc"&gt;Twitter&lt;/a&gt;, I decided to document it before it all evaporates into the void.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I7ptCQBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/xT9IgvJJS1SbMQXPBm/giphy.gif%3Fcid%3D790b761196328d5fe99bcfeb3fab92f8452cd39851d53143%26rid%3Dgiphy.gif%26ct%3Dg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I7ptCQBa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media3.giphy.com/media/xT9IgvJJS1SbMQXPBm/giphy.gif%3Fcid%3D790b761196328d5fe99bcfeb3fab92f8452cd39851d53143%26rid%3Dgiphy.gif%26ct%3Dg" alt="Anxious man"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is definitely going to be a series of blog posts with no specific order where I will try to extract the most important information as it comes to me. 🤷‍♂️&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#who-is-this-for"&gt;
  &lt;/a&gt;
  Who is this for?
&lt;/h2&gt;

&lt;p&gt;Anyone who wants to make a career change to IT, is graduating from college, is struggling to get a first job as a programmer or just wants to give programming a try.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#topics-that-will-be-covered"&gt;
  &lt;/a&gt;
  Topics that will be covered
&lt;/h2&gt;

&lt;p&gt;These are some of the topics that I will definitely cover but might add more if I remember something that is important as well:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are the requirements for becoming a programmer&lt;/li&gt;
&lt;li&gt;How to write a no bullshit CV/Resume that will increase your chances of getting hired&lt;/li&gt;
&lt;li&gt;What programming language / framework to start with&lt;/li&gt;
&lt;li&gt;Where to apply for your first job and which ones to consider&lt;/li&gt;
&lt;li&gt;How to build an effective portfolio website&lt;/li&gt;
&lt;li&gt;What projects to build and how&lt;/li&gt;
&lt;li&gt;Creating an effective GitHub profile&lt;/li&gt;
&lt;li&gt;How much experience is needed to start applying to jobs&lt;/li&gt;
&lt;li&gt;When to apply to an Internship vs Real Developer role&lt;/li&gt;
&lt;li&gt;Is your code good enough&lt;/li&gt;
&lt;li&gt;What to be ready for while trying to get your first programming role&lt;/li&gt;
&lt;li&gt;Mindset and motivation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first topic is covered in this post as the title says so let's start! 🦾&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-are-the-real-requirements-for-becoming-a-programmer"&gt;
  &lt;/a&gt;
  What are the REAL Requirements for Becoming a Programmer?
&lt;/h2&gt;

&lt;p&gt;Do you need someone to tell you if you are smart enough or do you have what it takes to become a programmer?&lt;/p&gt;

&lt;p&gt;Let me tell you this: &lt;strong&gt;Programming is not for anyone and it's not enough if you can just install Windows on your laptop. It's only for extremely talented people with IQ over 200.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Anxiety kicks in?&lt;/p&gt;

&lt;p&gt;Don't worry, I'm just kidding. &lt;/p&gt;

&lt;p&gt;Let's put it this way. If you can read and comprehend what I have written up to this point then you have everything that it takes to become a programmer. You maybe won't be a great one but it's definitely enough to get a job.&lt;/p&gt;

&lt;p&gt;Physical requirements ✔️&lt;/p&gt;

&lt;p&gt;You did some googling or found this post buried deep down in the #TechTwitter history. That means you have enough interest.&lt;/p&gt;

&lt;p&gt;Interest ✔️&lt;/p&gt;

&lt;p&gt;Your friend who is incredibly smart is a software engineer and there is no way that you can be that good?&lt;/p&gt;

&lt;p&gt;Actually, you can. &lt;/p&gt;

&lt;p&gt;I actually know a few people who are generally not that intelligent but are still working as developers.&lt;/p&gt;

&lt;p&gt;If it makes it any easier for you, I had the WORST grades in informatics in elementary school and in programming on college. At least get school out of the way because it's not a valid measure for anything.&lt;/p&gt;

&lt;p&gt;So what's the thing that separates people who can and who cannot become programmers?&lt;/p&gt;

&lt;p&gt;Well, the important things are exactly those two words: CAN and &lt;strong&gt;CANNOT&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Just pick one word and fill in the sentence below to find out the answer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I ___________ become a programmer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Got it? &lt;/p&gt;

&lt;p&gt;It's REALLY a matter of decision. Do you want to become a programmer?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-it-is-a-matter-of-a-decision"&gt;
  &lt;/a&gt;
  Why it is a matter of a decision?
&lt;/h2&gt;

&lt;p&gt;Because if you don't decide firmly, you will quit somewhere along the road. Just make a decision with yourself, and even better write it somewhere, and whenever you think about quitting (which will happen a lot) just remind yourself that you have decided and that there is no way back.&lt;/p&gt;

&lt;p&gt;If you are starting from zero, don't expect a role in the next 1-2 years and be ready to dedicate A LOT of time to learn everything that is necessary to get the job. If you get it earlier than that then even better!&lt;/p&gt;

&lt;p&gt;Not a lot of people can sacrifice that much time and be that patient and that's why programming is labeled as "hard".&lt;br&gt;
It's not hard because you have to study some out of this world science, complex algorithms or math formulas - it's hard because it requires TIME and PATIENCE.&lt;/p&gt;

&lt;p&gt;So basically you have all the "skills" that you need. It is only the question if you are ready to throw yourself into the fire?&lt;/p&gt;

&lt;p&gt;If you were looking for an actual list of requirements in a video game style then here you have it:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements-for-becoming-a-software-engineer"&gt;
  &lt;/a&gt;
  Requirements for becoming a software engineer:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Having a normal functioning brain and being able to type&lt;/li&gt;
&lt;li&gt;Being ready to not being able to get a job even after learning every day for a year &lt;/li&gt;
&lt;li&gt;Basic English language knowledge&lt;/li&gt;
&lt;li&gt;Being in peace with the fact that learning will NEVER end&lt;/li&gt;
&lt;li&gt;Being in peace with the fact that you will fail a lot&lt;/li&gt;
&lt;li&gt;Being comfortable with feeling stupid at times&lt;/li&gt;
&lt;li&gt;Being ready to work on your temper and impulsive reacting&lt;/li&gt;
&lt;li&gt;Being in front of a computer every day&lt;/li&gt;
&lt;li&gt;Being ready to code every day&lt;/li&gt;
&lt;li&gt;Being ready to learn the boring stuff so you can enjoy building fun stuff later&lt;/li&gt;
&lt;li&gt;Being ready to deal with difficult people&lt;/li&gt;
&lt;li&gt;Being ready to read boring or poorly written documentation&lt;/li&gt;
&lt;li&gt;Decreased social life at times&lt;/li&gt;
&lt;li&gt;Being comfortable with dreaming code (literally)&lt;/li&gt;
&lt;li&gt;Being able to think when exhausted at times&lt;/li&gt;
&lt;li&gt;Being able to think under pressure&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And last but not least: being ready to help everyone alive with their printers or failing internet connections. (funny but true, you will see)&lt;/p&gt;

&lt;p&gt;If you can sign up for all of these points above then there is nothing else I want to tell you.&lt;/p&gt;

&lt;p&gt;You have it all and are ready to start. ✔️✔️✔️&lt;/p&gt;

&lt;p&gt;All I can tell you is good luck, DON'T QUIT and you will get your job I'm sure of that!😄 &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If there is a topic that you want me to cover please let me know in the comments and I will gladly add it to my list.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Web, backend, mobile resources and news. </title>
      <author>Developer Nation</author>
      <pubDate>Tue, 26 Oct 2021 10:54:56 +0000</pubDate>
      <link>https://dev.to/developernation/web-backend-mobile-resources-and-news-349g</link>
      <guid>https://dev.to/developernation/web-backend-mobile-resources-and-news-349g</guid>
      <description>&lt;h2&gt;
  &lt;a href="#dev-resources"&gt;
  &lt;/a&gt;
  Dev Resources
&lt;/h2&gt;

&lt;p&gt;Here are the latest articles and news from last week's biweekly  &lt;a href="https://content.developereconomics.com/developer-nation-newsletter-signup-form"&gt;newsletter&lt;/a&gt;. Enjoy!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dev-resources-amp-articles"&gt;
  &lt;/a&gt;
  Dev Resources &amp;amp; Articles
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://dev.to/scottshipp/emojis-in-commit-messages-or-2d32"&gt;Emojis in commit messages: ✅ or ❌?&lt;/a&gt; See what others think, and contribute your own opinion. [DEVTO]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dzone.com/articles/will-the-real-senior-dev-please-stand-up-2021-edit"&gt;Will the real senior dev please stand up? (2021 edition).&lt;/a&gt; An update to Tomasz Waraksa's ironic look at the realities of hiring in IT. It's 2021, have companies finally learned what a real senior developer looks like? [DZONE]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://theproductmanager.com/tools/best-product-backlog-tools/"&gt;10 best product backlog tools for backlog management.&lt;/a&gt; Without the product backlog, it would not be easy for software development teams to have a coherent idea of the processes they should be prioritizing. [THEPRODUCTMANAGER]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/kovalchuk/8-mobile-app-security-best-practices-developers-should-follow-544o"&gt;8 mobile app security best practices developers should follow.&lt;/a&gt; Best protected applications are those developed using the security by design approach when security is taken into account on the initial stages of the development process. [DEVTO]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educba.com/mvvm-vs-mvc/"&gt;Difference between MVVM vs MVC.&lt;/a&gt; The major key differences such as architecture, operation, advantages, and limitations are discussed in this article. [EDUCBA]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.engineyard.com/ios-push-notifications-via-apns"&gt;Sending iOS push notifications via APNs.&lt;/a&gt; This blog post discusses in detail the APN services, enable and register for remote notifications, device token ids, and APN node package with the help of a sample iOS. [ENGINEYARD]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://proandroiddev.com/how-i-hacked-an-android-app-for-a-premium-feature-d9ca74e797ad"&gt;How I hacked an Android app for a premium feature.&lt;/a&gt; Merab rewrote the bytecode to unlock premium features of the app on his device and now he shows you how to prevent it from happening to your apps. [PROANDROIDDEV]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/using-websockets-flutter/"&gt;Using WebSockets in Flutter.&lt;/a&gt; This article explores how we can use our own WebSockets to create applications that display real-time data to our users. [LOGROCKET]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.interviewbit.com/blog/front-end-developer-skills/"&gt;Front-end developer skills you must have.&lt;/a&gt; Front-end developers require a combination of technical and soft abilities. If you’re pursuing a career as a Front-end Developer, these are the talents you’ll need to develop. [INTERVIEWBIT]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/javarevisited/50-data-structure-and-algorithms-interview-questions-for-programmers-b4b1ac61f5b0"&gt;Top 50 data structure and algorithms interview questions for programmers.&lt;/a&gt; Frequently asked programming interview questions from different interviews for programmers at different levels of experience. [MEDIUM.JAVAREVISITED]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.bitsrc.io/javascript-worst-practices-dc78e19d6f12"&gt;JavaScript worst practices.&lt;/a&gt; Let’s take a quick look at 5 of the worst things you can do to your code while writing JavaScript. [BITSRC]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dzone.com/articles/you-cant-keep-building-on-a-broken-system-why-mana"&gt;You can’t keep building on a broken system: why managing technical debt is so important.&lt;/a&gt; Managing technical debt is important if you want to move more quickly, retain top engineering talent, and avoid re-writing your app from scratch. [DZONE]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developers.googleblog.com/2021/10/what-is-the-dev-library.html"&gt;What is Google’s Dev Library?&lt;/a&gt; Google decided to create a space where the best projects related to Google technologies can be highlighted in one place. [DEVELOPERS.GOOGLEBLOG]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/lambdatesting/what-happens-when-you-use-virtualization-in-software-testing-1l92"&gt;What is data virtualization and why use it?&lt;/a&gt; What happens when you use virtualization in software testing? [DEVTO]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stackify.com/what-are-microservices/"&gt;What are microservices? Code examples, best practices, tutorials and more.&lt;/a&gt; We’ll take a look at microservices, the benefits of using this capability, and a few code examples. [STACKIFY]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tediousjs/tedious"&gt;Node TDS module for connecting to SQL Server databases.&lt;/a&gt; Tedious is a pure-Javascript implementation of the TDS protocol, which is used to interact with instances of Microsoft's SQL Server. [TEDIOUSJS]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.serverless.com//blog/introducing-serverless-cloud-public-preview"&gt;Introducing Serverless Cloud.&lt;/a&gt; The hyper-productive #serverless app platform with single second deployments is now open to everyone. [SEVERLESS]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.bigbinary.com/blog/rails-7-adds-ability-to-use-predefined-variants"&gt;Rails 7 adds the ability to use pre-defined variants.&lt;/a&gt; See how. [BIGBINARY]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/educative/crack-the-top-40-machine-learning-interview-questions-1e2c"&gt;Crack the top 40 machine learning interview questions.&lt;/a&gt; From basic to more advanced questions. [DEVTO]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.springboard.com/blog/ai-machine-learning/machine-learning-resume/"&gt;How to build a strong machine learning resume.&lt;/a&gt; Here are several pointers to ensure that your resume is in top shape before you send it to the next recruiter or hiring manager. [SPRINGBOARD]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://machinelearningmastery.com/a-tour-of-attention-based-architectures/"&gt;A tour of attention-based architectures.&lt;/a&gt; Gain a better understanding of how the attention mechanism is incorporated into different neural architectures and for which purpose. [MACHINELEARNINGMASTERY]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.analyticsvidhya.com/blog/2021/10/mlops-and-the-importance-of-data-drift-detection/"&gt;The importance of data drift detection that data scientists do not know.&lt;/a&gt; Understand the different types of data drift and the method for detecting them. [ANALYTICSVIDHYA]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://news.mit.edu/2021/artificial-networks-learn-smell-like-the-brain-1018"&gt;Artificial networks learn to smell like the brain.&lt;/a&gt; When asked to classify odors, artificial neural networks adopt a structure that closely resembles that of the brain’s olfactory circuitry. [MIT]&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#industry-news"&gt;
  &lt;/a&gt;
  Industry News
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://machinelearningmastery.com/a-tour-of-attention-based-architectures/"&gt;A tour of attention-based architectures.&lt;/a&gt; Gain a better understanding of how the attention mechanism is incorporated into different neural architectures and for which purpose. [MACHINELEARNINGMASTERY]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.analyticsvidhya.com/blog/2021/10/mlops-and-the-importance-of-data-drift-detection/"&gt;The importance of data drift detection that data scientists do not know.&lt;/a&gt; Understand the different types of data drift and the method for detecting them. [ANALYTICSVIDHYA]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://news.mit.edu/2021/artificial-networks-learn-smell-like-the-brain-1018"&gt;Artificial networks learn to smell like the brain.&lt;/a&gt; When asked to classify odors, artificial neural networks adopt a structure that closely resembles that of the brain’s olfactory circuitry. [MIT]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.theverge.com/2021/10/12/22722130/google-ios-app-material-design-components-uikit"&gt;Google says it’s dropping Material Design components on iOS in favour of Apple’s UIKit.&lt;/a&gt; Google says the result of the switch should be less work for its iOS development team, but, more importantly, it’s likely the change will mean that Google’s iOS apps will feel less like interlopers on Apple devices. [THEVERGE]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.zdnet.com/article/thanks-to-a-nasty-gpsd-bug-real-life-time-travel-trouble-arrives-this-weekend/"&gt;Thanks to a nasty GPSD bug, real-life time travel trouble arrives this weekend.&lt;/a&gt; On October 24, 2021, some time-keeping systems are going to take a trip back in time to March 2012, unless you update your GPSD programs. Find out more. [ZDNET] - old article from last week - did you experience any issues?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://about.gitlab.com/blog/2021/10/14/gitlab-inc-takes-the-devops-platform-public/"&gt;GitLab goes public.&lt;/a&gt; GitLab was the first company to publicly live stream the entire end-to-end listing day at Nasdaq. Sid Sidbrandij shares the news and a copy of the founders letter. [GITLAB]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.inputmag.com/tech/ibm-will-offer-free-cobol-training-to-address-overloaded-unemployment-systems"&gt;IBM will offer free COBOL training to address overloaded unemployment systems.&lt;/a&gt; Many systems that process unemployment claims in the USA still run on a 60-year-old programming language that relatively few coders understand. [INPUTMAG]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.neowin.net/news/microsoft-highlights-the-ui-changes-coming-in-visual-studio-2022-including-new-icons/"&gt;Microsoft highlights the UI changes coming in Visual Studio 2022, including new icons.&lt;/a&gt; The IDE offers numerous improvements upon its predecessor, Visual Studio 2019, including the fact that it comes in a 64-bit flavor, supports .NET 6 and C++ 20, offers better performance for the core debugger, and supports text chat during Live Share sessions. [NEOWIN]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developers.googleblog.com/2021/10/announcing-devfest-2021.html"&gt;DevFest 2021.&lt;/a&gt; Hosted by Google Developer Groups (GDG) all across the globe, DevFest events are uniquely curated by their local GDG organizers to fit the needs and interests of the local community. [DEVELOPERS.GOOGLEBLOG]&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quick-hits"&gt;
  &lt;/a&gt;
  Quick Hits
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://devblogs.microsoft.com/dotnet/announcing-net-maui-preview-9/"&gt;Announcing .NET MAUI Preview 9.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://parceljs.org/blog/v2/"&gt;Parcel v2.0.0 stable is now available.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://crystal-lang.org/2021/10/14/1.2.0-released.html"&gt;Crystal 1.2.0 is released.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blog.jetbrains.com/phpstorm/2021/10/phpstorm-2021-2-3-is-released/"&gt;PhpStorm 2021.2.3 is released.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devnews</category>
      <category>webdev</category>
      <category>mobile</category>
      <category>backend</category>
    </item>
    <item>
      <title>Day 18 of 100 Days of Code &amp; Scrum: The 3Cs of User Stories and Canceled Session</title>
      <author>Rammina</author>
      <pubDate>Tue, 26 Oct 2021 10:51:54 +0000</pubDate>
      <link>https://dev.to/rammina/day-18-of-100-days-of-code-scrum-the-3cs-of-user-stories-and-canceled-session-2d4c</link>
      <guid>https://dev.to/rammina/day-18-of-100-days-of-code-scrum-the-3cs-of-user-stories-and-canceled-session-2d4c</guid>
      <description>&lt;p&gt;Hello there, everyone!&lt;/p&gt;

&lt;p&gt;Today was an irregular Tuesday for me. Firstly, my physical therapy session was canceled because of a heavy flash flood the previous day. I wasn't sure what to do with my extra four hours for the day. I'm a person who lets my own routine guide my day-to-day life, so it feels really weird when things go differently from the usual.&lt;/p&gt;

&lt;p&gt;I spent that time doing research on "The 3Cs of User Stories" which I intend to add as another section inside my &lt;a href="https://dev.to/rammina/the-art-of-writing-agile-user-stories-17o9"&gt;user story guide&lt;/a&gt;. I think I will update it tomorrow.&lt;/p&gt;

&lt;p&gt;I also found some weird paragraphs on my user story guide, which I corrected so that it reads smoothly.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VU8gaIUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jsg89bzz2ndjpf22m73w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VU8gaIUH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jsg89bzz2ndjpf22m73w.png" alt="Focus Spam"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That 3-in-a-row &lt;code&gt;focus&lt;/code&gt; was so repetitive to read, I had to update it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I posted the initial draft for my guide, &lt;a href="https://dev.to/rammina/the-art-of-writing-agile-user-stories-17o9"&gt;"The Art of Writing Agile User Stories"&lt;/a&gt;. I'm really happy and grateful that it was successful and well-received. It's actually the first serious guide I uploaded on this platform, so I was pretty worried about it. Thank you to everyone who supported me!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RRZp0dAe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7n87q224rueqdicx6db.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RRZp0dAe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o7n87q224rueqdicx6db.png" alt="3C of User Stories"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;read up on &lt;em&gt;the 3C of User Stories&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;according to the above, a user story should have:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Card&lt;/code&gt; - a written description of the story to be used for estimation and planning.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Conversation&lt;/code&gt; - ensure a clear understanding by discussing with others. This can be through asking questions, sharing ideas, and working toward solutions.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Confirmation&lt;/code&gt; - agree upon what to build, then record the said agreement. This allows for confirmation tests to ensure that the user story is completed.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;did more practice quizzes on Scrum (almost finished with Lapshin's quizzes, so I might have to get a different set soon).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you once again for everyone's support! I wish you all the best, and have a good day.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i5XyW6iO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvr6uan67gry38xpkb18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i5XyW6iO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lvr6uan67gry38xpkb18.png" alt="Thank You Banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.visual-paradigm.com/scrum/3c-and-invest-guide/"&gt;Effective User Stories&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Setting Up a Modern Windows Terminal for Developers in A Few Steps</title>
      <author>Thang Chung</author>
      <pubDate>Tue, 26 Oct 2021 10:41:07 +0000</pubDate>
      <link>https://dev.to/thangchung/modern-windows-terminal-for-developer-in-a-few-steps-170</link>
      <guid>https://dev.to/thangchung/modern-windows-terminal-for-developer-in-a-few-steps-170</guid>
      <description>&lt;p&gt;Somebody asks me to guide them setting up the better terminal for development as below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnbcLVk7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v2yqj6zljq68vqximfa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZnbcLVk7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v2yqj6zljq68vqximfa.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I answered to them several times, and I would like another people to use some kind of cool terminal just like this. So I documented it down in this post.&lt;/p&gt;

&lt;p&gt;I combine between Windows Terminal (&lt;code&gt;1.11.2921&lt;/code&gt;), nushell (&lt;code&gt;0.38.0&lt;/code&gt;), and starship (0.58.0) on Windows 10 machine.&lt;/p&gt;

&lt;p&gt;You can find the references at:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Windows Terminal: &lt;a href="https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701"&gt;https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;NuShell: &lt;a href="https://community.chocolatey.org/packages?q=nushell"&gt;https://community.chocolatey.org/packages?q=nushell&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Starship: &lt;a href="https://community.chocolatey.org/packages?q=Starship"&gt;https://community.chocolatey.org/packages?q=Starship&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After installing all of them on your Windows OS machine, you need to go to Nerd Font (&lt;a href="https://www.nerdfonts.com"&gt;https://www.nerdfonts.com&lt;/a&gt;) and install fonts there to have a better icons on your Windows Terminal.&lt;/p&gt;

&lt;p&gt;Some of configuration, you need to set to make sure &lt;code&gt;nushell&lt;/code&gt; can integrate good with &lt;code&gt;starship&lt;/code&gt; as below&lt;/p&gt;

&lt;p&gt;Go to &lt;code&gt;Windows Terminal&lt;/code&gt; settings, and open the settings file as&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zRJ6TE-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6zwafkeogjkh5w7ksv2c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zRJ6TE-m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6zwafkeogjkh5w7ksv2c.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then make sure you add the settings for &lt;code&gt;nushell&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"commandline"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"nu.exe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"fontFace"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Fira Code"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"guid"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{2b372ca1-1ee2-403d-a839-6d63077ad871}"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"hidden"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Nu Shell"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And final step, you need to open up the &lt;code&gt;C:\Users\&amp;lt;your_username&amp;gt;\AppData\Roaming\nushell\nu\config&lt;/code&gt;, and find &lt;code&gt;config.toml&lt;/code&gt; (if there is no config.toml, then you have to create one). And putting some of configuration for it as following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight toml"&gt;&lt;code&gt;&lt;span class="py"&gt;prompt&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"starship prompt"&lt;/span&gt;
&lt;span class="py"&gt;startup&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;"alias ll = ls -la"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"alias d = docker"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;"alias nw = cd D:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;github&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;northwind-minimal-apis"&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The config for &lt;code&gt;starship&lt;/code&gt; is at &lt;code&gt;C:\Users\&amp;lt;your_username&amp;gt;\.starship\config.toml&lt;/code&gt;, but you don't need to put anything more :)&lt;/p&gt;

&lt;p&gt;Close all current terminal windows, and open it up again.&lt;br&gt;
Happy hacking!!!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
