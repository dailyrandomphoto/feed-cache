<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Solution: Construct Binary Tree from Preorder and Inorder Traversal</title>
      <author>seanpgallivan</author>
      <pubDate>Tue, 08 Jun 2021 17:28:35 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-construct-binary-tree-from-preorder-and-inorder-traversal-32c5</link>
      <guid>https://dev.to/seanpgallivan/solution-construct-binary-tree-from-preorder-and-inorder-traversal-32c5</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/discuss/1258712"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-105-medium-construct-binary-tree-from-preorder-and-inorder-traversal"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/"&gt;Leetcode Problem #105 (&lt;em&gt;Medium&lt;/em&gt;): Construct Binary Tree from Preorder and Inorder Traversal&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given two integer arrays &lt;code&gt;preorder&lt;/code&gt; and &lt;code&gt;inorder&lt;/code&gt; where &lt;code&gt;preorder&lt;/code&gt; is the preorder traversal of a binary tree and &lt;code&gt;inorder&lt;/code&gt; is the inorder traversal of the same tree, construct and return &lt;em&gt;the binary tree&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[3,9,20,null,null,15,7]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Visual:&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VnCK66iM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.leetcode.com/uploads/2021/02/19/tree.jpg" alt="Example 1 Visual"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;preorder = [-1], inorder = [-1]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[-1]&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= preorder.length &amp;lt;= 3000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;inorder.length == preorder.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-3000 &amp;lt;= preorder[i], inorder[i] &amp;lt;= 3000&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;preorder&lt;/code&gt; and &lt;code&gt;inorder&lt;/code&gt; consist of unique values.&lt;/li&gt;
&lt;li&gt;Each value of &lt;code&gt;inorder&lt;/code&gt; also appears in &lt;code&gt;preorder&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;preorder&lt;/code&gt; is guaranteed to be the preorder traversal of the tree.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;inorder&lt;/code&gt; is guaranteed to be the inorder traversal of the tree.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;For this solution, we can take advantage of the order of nodes in the &lt;strong&gt;preorder&lt;/strong&gt; and &lt;strong&gt;inorder&lt;/strong&gt; traversals. A preorder traversal is &lt;strong&gt;[node, left, right]&lt;/strong&gt; while an inorder traversal is &lt;strong&gt;[left, node, right]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We know that the &lt;strong&gt;root&lt;/strong&gt; node for a tree is the first element of the preorder array (&lt;strong&gt;P&lt;/strong&gt;). We also know that every element to the left of the root element in the inorder array (&lt;strong&gt;I&lt;/strong&gt;) is on the left subtree, and everything to the right of the &lt;strong&gt;root&lt;/strong&gt; element in &lt;strong&gt;I&lt;/strong&gt; is on the right subtree.&lt;/p&gt;

&lt;p&gt;Since we know the length of the left and right subtrees by finding the &lt;strong&gt;root&lt;/strong&gt; in &lt;strong&gt;I&lt;/strong&gt;, and since we know the order of the left and right subtrees in &lt;strong&gt;P&lt;/strong&gt;, we can use that to determine the location of the &lt;strong&gt;root&lt;/strong&gt; node in &lt;strong&gt;P&lt;/strong&gt; for each of the two subtrees.&lt;/p&gt;

&lt;p&gt;With this information, we can define a &lt;strong&gt;recursive&lt;/strong&gt; helper function (&lt;strong&gt;splitTree&lt;/strong&gt;) that will split the tree into two and then recursively do the same for each subtree.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cXW3BauD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/qZZqFyY.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cXW3BauD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/qZZqFyY.gif" alt="Visual 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In order to make this work, we just need to pass left and right limits (&lt;strong&gt;ileft, iright&lt;/strong&gt;) defining the subarray of the current subtree in &lt;strong&gt;I&lt;/strong&gt;, as well as the index (&lt;strong&gt;pix&lt;/strong&gt;) of the &lt;strong&gt;root&lt;/strong&gt; node of the subtree in &lt;strong&gt;P&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;At this point, we &lt;em&gt;could&lt;/em&gt; iterate forward through &lt;strong&gt;I&lt;/strong&gt; until we found out the location (&lt;strong&gt;imid&lt;/strong&gt;) of the &lt;strong&gt;root&lt;/strong&gt; node each time, but that would push this solution to a &lt;strong&gt;time complexity&lt;/strong&gt; of &lt;strong&gt;O(N^2)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Instead, we can make a prelimanary &lt;strong&gt;index map&lt;/strong&gt; (&lt;strong&gt;M&lt;/strong&gt;) of the values in &lt;strong&gt;I&lt;/strong&gt;, so that we can look up the value for &lt;strong&gt;imid&lt;/strong&gt; in &lt;strong&gt;O(1) time&lt;/strong&gt; in each recursion. This will lower the time complexity to &lt;strong&gt;O(N)&lt;/strong&gt; at the cost of a &lt;strong&gt;space complexity&lt;/strong&gt; of &lt;strong&gt;O(N)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In the example in the graphic above, where &lt;strong&gt;P = [8,2,7,1,9,3,6]&lt;/strong&gt; and &lt;strong&gt;I = [7,2,1,8,3,9,6]&lt;/strong&gt;, the &lt;strong&gt;root&lt;/strong&gt; would be &lt;strong&gt;8&lt;/strong&gt;, so we know that &lt;strong&gt;imid&lt;/strong&gt; (its location in &lt;strong&gt;I&lt;/strong&gt;) is &lt;strong&gt;3&lt;/strong&gt;, and since we still are using the full array, &lt;strong&gt;ileft = 0&lt;/strong&gt; and &lt;strong&gt;iright = I.length-1&lt;/strong&gt;, or &lt;strong&gt;6&lt;/strong&gt;. This means that the left subtree is &lt;strong&gt;imid - ileft = 3&lt;/strong&gt; elements long (&lt;strong&gt;[7,2,1]&lt;/strong&gt; to the left of &lt;strong&gt;8&lt;/strong&gt; in &lt;strong&gt;I&lt;/strong&gt;) and the right subtree is &lt;strong&gt;iright - imid = 3&lt;/strong&gt; elements long (&lt;strong&gt;[3,9,6]&lt;/strong&gt; to the right of &lt;strong&gt;8&lt;/strong&gt; in &lt;strong&gt;I&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;We can apply those dimensions from &lt;strong&gt;I&lt;/strong&gt; to figure out the ranges of those subtrees in &lt;strong&gt;P&lt;/strong&gt;, as well. The left subtree will start right after the &lt;strong&gt;root&lt;/strong&gt; in &lt;strong&gt;P&lt;/strong&gt; (&lt;strong&gt;pix + 1&lt;/strong&gt;), and the right subtree will start once the left subtree ends (&lt;strong&gt;pix + 1 + (imid - ileft)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;At each recursion, if &lt;strong&gt;imid = ileft&lt;/strong&gt;, then there are no nodes in the left subtree, so we shouldn't call a recursion for that side. The same applies to the right side if &lt;strong&gt;imid = iright&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where &lt;strong&gt;N&lt;/strong&gt; is the length of &lt;strong&gt;P&lt;/strong&gt; and &lt;strong&gt;I&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(N)&lt;/strong&gt; for &lt;strong&gt;M&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;buildTree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;I&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;splitTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;splitTree&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ileft&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;iright&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;rval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;pix&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rval&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="nx"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rval&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;ileft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;splitTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pix&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ileft&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;iright&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;splitTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pix&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;ileft&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;iright&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;root&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;buildTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;M&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;))}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;splitTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iright&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;rval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rval&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rval&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;iright&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;splitTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iright&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;TreeNode&lt;/span&gt; &lt;span class="nf"&gt;buildTree&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;P&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;I&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;HashMap&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;I&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;put&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;I&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;splitTree&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;P&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;I&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;I&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;TreeNode&lt;/span&gt; &lt;span class="nf"&gt;splitTree&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;P&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;I&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iright&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;P&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="n"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rval&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="nc"&gt;TreeNode&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rval&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;            
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;splitTree&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;P&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;I&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;iright&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;splitTree&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;P&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;I&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="no"&gt;M&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iright&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;buildTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;unordered_map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;splitTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nl"&gt;private:&lt;/span&gt;
    &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;splitTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;unordered_map&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;iright&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rval&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;TreeNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rval&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;            
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;splitTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imid&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;iright&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;splitTree&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pix&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ileft&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;imid&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iright&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Where to upload your files 🗄 to use them via the link 🔗 (JS, CSS, Fonts, Images)</title>
      <author>Roden</author>
      <pubDate>Tue, 08 Jun 2021 17:15:55 +0000</pubDate>
      <link>https://dev.to/kerthin/where-to-upload-your-files-to-use-them-via-the-link-js-css-fonts-images-40ng</link>
      <guid>https://dev.to/kerthin/where-to-upload-your-files-to-use-them-via-the-link-js-css-fonts-images-40ng</guid>
      <description>&lt;h1&gt;Introduction&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;This article is intended for beginners, I understand that for experienced developers this topic may not be interesting, but for beginners it can help.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;During the development of our projects, we constantly use images, fonts, CSS and JS libraries. But as a rule, we use them locally, or connect them via a link from &lt;a href="https://cdnjs.com/"&gt;cdnJS&lt;/a&gt; or from the developer's site.&lt;/p&gt;

&lt;p&gt;But what if you don't have the ability to use the files locally (let's say you make your project in &lt;code&gt;CodePen&lt;/code&gt; and you don't have a PRO account) or you have your own &lt;code&gt;custom CSS or JS library&lt;/code&gt; and you can't link to them, because you haven't uploaded it anywhere. And if you have a custom font, or it costs money and you downloaded it in a not quite &lt;code&gt;decent way&lt;/code&gt;?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VPXdidTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xg4vi74ewip876mb1h9c.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VPXdidTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xg4vi74ewip876mb1h9c.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, 2 Internet services come to the rescue: &lt;strong&gt;GitHub&lt;/strong&gt; and &lt;strong&gt;Pinterest&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Rs7VM9ok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8zhahfh0ykuctapgtae.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rs7VM9ok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z8zhahfh0ykuctapgtae.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And so let's get started.&lt;/p&gt;

&lt;h1&gt;Images&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Here everything is simple, we register in Pinterest and go to your profile page. In the lower right corner, click on the round button &lt;code&gt;+&lt;/code&gt;, then select  &lt;code&gt;+ Create a Pin&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oMLSCioI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmqoa9cc707d9fwojffc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oMLSCioI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmqoa9cc707d9fwojffc.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; After that, you will see a page where you need to &lt;code&gt;upload your image&lt;/code&gt; and give it a name (this is not necessary).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---N-kUXbd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cbfs90fsx69ldzch1fi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---N-kUXbd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1cbfs90fsx69ldzch1fi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Once you have selected an image, you need to &lt;code&gt;create a board&lt;/code&gt; (folder) to which you will &lt;code&gt;upload your image&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cy73ggVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owfcdmzxkslyd9mq6g5d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cy73ggVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/owfcdmzxkslyd9mq6g5d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, you can save the image to your account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Then, on your account page, open the file you downloaded and click on your image.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q9bMQj1l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tumxtdal7qzyurzl1vnt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q9bMQj1l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tumxtdal7qzyurzl1vnt.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; As a result, your image will open to the entire page and you will only need to &lt;code&gt;copy the link&lt;/code&gt; and &lt;code&gt;paste&lt;/code&gt; it into your project.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SmvWAtMZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zikqad0futx5edcdjy0d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SmvWAtMZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zikqad0futx5edcdjy0d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You may ask, why try so hard, &lt;code&gt;why not just upload the image to your social networks and that's it&lt;/code&gt;. But the problem is that the link from social networks is &lt;code&gt;not long-lasting&lt;/code&gt;, and even more so social networks &lt;code&gt;crop the image quality&lt;/code&gt; more strongly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;Fonts&lt;/h1&gt;

&lt;p&gt;In order to use our fonts via the link, we will need to use GitHub and &lt;a href="https://raw.githack.com/"&gt;GitHack&lt;/a&gt;.&lt;br&gt;
GitHuck serves raw files directly from various source code hosting services with proper Content-Type headers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Of course, there are other similar services, but in my opinion &lt;a href="https://raw.githack.com/"&gt;GitHuck&lt;/a&gt; is more convenient.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, among other things, we will need to &lt;code&gt;create a css file&lt;/code&gt; in which we will &lt;code&gt;link to our fonts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; We need to create a &lt;code&gt;folde&lt;/code&gt;r where we will &lt;code&gt;upload our fonts&lt;/code&gt; and a &lt;code&gt;css file&lt;/code&gt; in which we simply specify the &lt;code&gt;paths to our fonts&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vxLxSzhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kgcin3y3ignw1atve1x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vxLxSzhy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5kgcin3y3ignw1atve1x.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ln3kuiiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hz1aa1in1d09ob3rw2x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ln3kuiiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0hz1aa1in1d09ob3rw2x.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Next, we upload all this to &lt;code&gt;GitHub&lt;/code&gt; (better create a &lt;code&gt;separate&lt;/code&gt; repository) and &lt;code&gt;go to the page of our css file&lt;/code&gt; (I called it &lt;code&gt;fontLinks.css&lt;/code&gt;) and &lt;code&gt;copy the link from this page&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z51pYKZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfrgp96b4hytwsue3dfj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z51pYKZY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfrgp96b4hytwsue3dfj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; We &lt;code&gt;insert the link&lt;/code&gt; to the site &lt;a href="https://raw.githack.com/"&gt;GitHack&lt;/a&gt; in the &lt;code&gt;upper input&lt;/code&gt;. And at the bottom you are offered a processed link for &lt;code&gt;production&lt;/code&gt; and for &lt;code&gt;development&lt;/code&gt; (you can take any one).&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e4lK8qaz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opm49bt111jt609fi7ru.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e4lK8qaz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/opm49bt111jt609fi7ru.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; And you just need to paste it into your css file via &lt;code&gt;@import&lt;/code&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fu7Y2ltN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yp65zgwqmklj6bqemapb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fu7Y2ltN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yp65zgwqmklj6bqemapb.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HKciihG3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sh8acgrlxenwnme5raq4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HKciihG3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sh8acgrlxenwnme5raq4.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Javascript&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Here we have exactly the same approach as with &lt;code&gt;fonts&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; We just upload the files we need to a folder and upload it to GitHub.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5CafRI1M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5b4htrfxbw7mg1d8aevi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5CafRI1M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5b4htrfxbw7mg1d8aevi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; After that, we go to the GitHub repository where we climbed our files and open the page of our js file.&lt;br&gt;
&lt;code&gt;Copy&lt;/code&gt; the link and &lt;code&gt;paste&lt;/code&gt; it into &lt;a href="https://raw.githack.com/"&gt;GitHuck&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kmnVfpUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v6teghh87iaxdbyvi30.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kmnVfpUk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0v6teghh87iaxdbyvi30.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S1j_sF08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk50c6ziz8kt2v8qyjzv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1j_sF08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lk50c6ziz8kt2v8qyjzv.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;The End&lt;/h1&gt;

&lt;p&gt;Comrades, I decided to write this article primarily for beginners who occasionally encounter similar problems when they do not know what service to use to upload their files there and use them by link.&lt;/p&gt;

&lt;p&gt;If I had met such an article earlier, it would have helped me save time and nerves that I spent searching for a solution to this problem. For I had no acquaintances who could advise such a thing. But I hope it will help you. See you later, Friends.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XgGBZi61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rb17cjjvc41t3mlyvadc.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XgGBZi61--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rb17cjjvc41t3mlyvadc.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How To: NSFW Image detection on Digital Ocean Apps</title>
      <author>Kevin Coleman</author>
      <pubDate>Tue, 08 Jun 2021 16:16:40 +0000</pubDate>
      <link>https://dev.to/kevincolemaninc/how-to-nsfw-image-detection-on-digital-ocean-apps-28gi</link>
      <guid>https://dev.to/kevincolemaninc/how-to-nsfw-image-detection-on-digital-ocean-apps-28gi</guid>
      <description>&lt;h2&gt;
  &lt;a href="#nswf-porn-detection-microservice"&gt;
  &lt;/a&gt;
  NSWF Porn detection microservice
&lt;/h2&gt;

&lt;p&gt;I built a low-cost NSFW API hosted on &lt;a href="https://docs.digitalocean.com/products/app-platform/"&gt;Digital Ocean's new App Platform&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-do-image-tagging-ml-models-work"&gt;
  &lt;/a&gt;
  How do image tagging ML models work?
&lt;/h3&gt;

&lt;p&gt;Making predictions based on images involves two basic steps: training the data and then processing the prediction. How to train the ML model can be found in the Github repo: &lt;a href="https://github.com/GantMan/nsfw_model#training-folder-contents"&gt;GantMan/nsfw_model&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The prediction API first fetches the remote image and saves the bytes to disk. Persisting to disk simplifies communicating with the ML library since the library accepts a file path, not a byte stream.&lt;/p&gt;

&lt;p&gt;Then the image is resized to fit the dimensions of the ML model. The ML algorithm needs to compare apples to apples and so resizing to match the same size of the image training data is critical for developing the right comparison.&lt;/p&gt;

&lt;p&gt;The resized image is categorized using the &lt;a href="https://github.com/KevinColemanInc/NSFW-FLASK/tree/master/mobilenet_v2_140_2240"&gt;attached model&lt;/a&gt;. This provides a float score for each of the categories: drawings, hentai, neutral, porn, and sexy. The higher the score, the more likely the image is in this category.&lt;/p&gt;

&lt;p&gt;Once the prediction is created, we clean up after ourselves by deleting the image from the disk and return the response.&lt;/p&gt;

&lt;p&gt;On the client, these scores are converted to 3 states:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Definitely Adult Content&lt;/li&gt;
&lt;li&gt;Unknown&lt;/li&gt;
&lt;li&gt;Definitely Safe Content&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The unknown state will need to be human-reviewed and bucketed into one of the "definite" categories. For my first pass, I use a combination of "sexy" and "porn" scores to determine if it's "definitely adult content" and I look at the "neutral" score to know if the image is "Definitely safe Content."&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-start"&gt;
  &lt;/a&gt;
  Quick Start
&lt;/h3&gt;

&lt;p&gt;Self-hosting and using only takes a couple of hours since the API is so simple and Digital Ocean's App Platform allows for Heroku-like deployment.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#flask-api"&gt;
  &lt;/a&gt;
  Flask API
&lt;/h4&gt;

&lt;p&gt;You will need to develop your client, but there are only 2 HTTP endpoints you would need to implement: POST &lt;code&gt;/predict&lt;/code&gt; and GET &lt;code&gt;/health&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#post-predict"&gt;
  &lt;/a&gt;
  POST /predict
&lt;/h4&gt;

&lt;p&gt;The service accepts a URL of an image to fetch and process. Instead of passing the image bytes directly, the URL reduces the workload on the client and avoids the overhead of base64 encoding images for the transfer (&lt;a href="https://lemire.me/blog/2019/01/30/what-is-the-space-overhead-of-base64-encoding/"&gt;base64 has a ~33% worse space overhead&lt;/a&gt;).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$curl -XPOST 'http://localhost:8080/predict?url=https://www.kcoleman.me/images/hills.jpg'

{"drawings":0.11510543525218964,"hentai":0.024719053879380226,"neutral":0.803202748298645,"porn":0.0172234196215868,"sexy":0.039749305695295334}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#get-health"&gt;
  &lt;/a&gt;
  GET /health
&lt;/h4&gt;

&lt;p&gt;The health endpoint helps you monitor if the service is running without needing to process an image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ curl 'http://localhost:8080/health'

{"status":"ok"}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#hosting-ml-microservices"&gt;
  &lt;/a&gt;
  Hosting ML microservices
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#heroku"&gt;
  &lt;/a&gt;
  Heroku
&lt;/h4&gt;

&lt;p&gt;Unfortunately, Heroku &lt;a href="https://devcenter.heroku.com/changelog-items/1145"&gt;limits the slug size to 500MB&lt;/a&gt;. After compilation, the flask app is 635MB (due to needing to load the ML model (250MB) and PyTorch. It is impossible to host ML services on Heroku.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#digital-ocean"&gt;
  &lt;/a&gt;
  Digital Ocean
&lt;/h4&gt;

&lt;p&gt;&lt;a href="/images/digitalocean-nsfw-flask.png" class="article-body-image-wrapper"&gt;&lt;img src="/images/digitalocean-nsfw-flask.png" alt="row of hot dogs with various sauces and condiments" title="row of hot dogs with various sauces and condiments"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The $10/mo Digital Ocean 1GB/1vCPU &lt;a href="https://docs.digitalocean.com/products/app-platform/"&gt;App Platform&lt;/a&gt; hosts this project perfectly. The first deployment takes 20+ minutes, but it will eventually startup. There is a health check endpoint at &lt;code&gt;/health&lt;/code&gt; where you can verify the service is running.&lt;/p&gt;

&lt;p&gt;This machine takes about 600ms per request and has 2 workers, so can take about 0.8 requests per second or 72,000 images per day. Not too shabby for a $10/mo ML microservice.&lt;/p&gt;

&lt;p&gt;Sample App config&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nsfw-flask&lt;/span&gt;
&lt;span class="na"&gt;region&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nyc&lt;/span&gt;
&lt;span class="na"&gt;services&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;environment_slug&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;python&lt;/span&gt;
  &lt;span class="na"&gt;github&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;branch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;master&lt;/span&gt;
    &lt;span class="na"&gt;deploy_on_push&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;repo&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;KevinColemanInc/NSFW-FLASK&lt;/span&gt;
  &lt;span class="na"&gt;health_check&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;http_path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/health&lt;/span&gt;
  &lt;span class="na"&gt;http_port&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;8080&lt;/span&gt;
  &lt;span class="na"&gt;instance_count&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
  &lt;span class="na"&gt;instance_size_slug&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;basic-s&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nsfw-flask&lt;/span&gt;
  &lt;span class="na"&gt;routes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt;
  &lt;span class="na"&gt;run_command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;gunicorn --worker-tmp-dir /dev/shm app:app&lt;/span&gt;
  &lt;span class="na"&gt;source_dir&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#special-thanks"&gt;
  &lt;/a&gt;
  Special Thanks
&lt;/h3&gt;

&lt;p&gt;The flask service is a wrapper for the &lt;a href="https://github.com/GantMan/nsfw_model"&gt;GantMan/nsfw_model&lt;/a&gt;. They performed the heavy lift of developing the ML model and the prediction code.&lt;/p&gt;

&lt;p&gt;You can play with a web host version of the model on &lt;a href="https://nsfwjs.com"&gt;nsfwjs.com&lt;/a&gt; since we use the same model.&lt;/p&gt;

</description>
      <category>howto</category>
      <category>digitalocean</category>
      <category>machinelearning</category>
      <category>nsfw</category>
    </item>
    <item>
      <title>9 Web Development Best Practices for
2021</title>
      <author>Ashok Sharma</author>
      <pubDate>Tue, 08 Jun 2021 16:09:50 +0000</pubDate>
      <link>https://dev.to/ashok83/9-web-development-best-practices-for-2021-31o1</link>
      <guid>https://dev.to/ashok83/9-web-development-best-practices-for-2021-31o1</guid>
      <description>&lt;p&gt;Web development projects range from highly complex to relatively simple. No matter the complexity of the project you're dealing with, it's inevitable that you'll have to deal with errors and debug your code. Coding standards and best practices make this task a lot easier.&lt;/p&gt;

&lt;p&gt;Aside from making debugging easier, following best practices also guarantees cleaner code and reduces unnecessary errors. They’re a part of &lt;a href="https://dev.to/krowser/must-have-skills-for-developers-in-2021-2aao"&gt;skills that every developer must possess.&lt;/a&gt; Here are 9 best practices that every web developer must follow in 2021.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Sort div Tags&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It's common to see multiple &lt;strong&gt;div tags&lt;/strong&gt; closing at the bottom of a page. While divs are cleaner than tables, leaving them unsorted only results in a mess that is hard to clean up. Indentation is a good way to organize tag closes.&lt;/p&gt;

&lt;p&gt;However, the best way to organize your &lt;strong&gt;div tags&lt;/strong&gt; is to comment on which one you're closing. For example, adding a comment such as &amp;lt;!--#header -- &amp;gt; helps the reader understand which tag you're closing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Use CSS Resets&lt;/strong&gt;&lt;br&gt;
CSS resets are a common practice in web development, but it's surprising how many beginner developers neglect to do this. The result is cross-browser rendering issues that destroy UX. &lt;/p&gt;

&lt;p&gt;A CSS reset removes individual styling from all elements, and this leaves no room for browsers to override your style element with their defaults.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Avoid @import&lt;/strong&gt;&lt;br&gt;
@import was a popular choice for many developers when it came to importing CSS files. Including a stylesheet into another is easy with this directive. Alternatively, &lt;a href="https://www.giftofspeed.com/inline-your-css-code/"&gt;CSS files can be included&lt;/a&gt; in HTML documents as well. &lt;/p&gt;

&lt;p&gt;However, as browsers drop default import support, developers have to find other ways to include external HTML files within the main file. Renaming the external HTML file extension to .shtml and using server-side includes (SSI) within the HTML is the best approach. Note that the file with the SSI command must be named with the shtml extension.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Remember Accessibility&lt;/strong&gt;&lt;br&gt;
The web is becoming a far more inclusive place, and every website should cater to differently-abled people. In the past, developers had to customize and reconfigure every element to make their websites more accessible. One classic example is adding Alt text to all images so that screen readers will understand how to interpret and explain a photo to a screen reader user. &lt;/p&gt;

&lt;p&gt;These days, AI-based &lt;a href="https://accessibe.com/"&gt;web accessibility solutions by acessiBe&lt;/a&gt; automate the process. Their AI technology scans the site every 24 hours in search of new content that has to be made accessible. The result is full ADA and WCAG compliance and continued support as your website grows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Compress and Optimize Images&lt;/strong&gt;&lt;br&gt;
Optimizing images for the web is difficult even if you use Photoshop's "save for web" commands. If you aren't worried about your site's bandwidth, then unoptimized images aren't an issue. However, when creating business websites, developers almost always have to keep bandwidth in mind.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tinyjpg.com/"&gt;Tools like TinyJPG&lt;/a&gt; and &lt;a href="https://compressjpeg.com/"&gt;compressjpeg&lt;/a&gt; are excellent free choices that developers can use. &lt;a href="https://www.imgopt.com/"&gt;Smush it&lt;/a&gt; and &lt;a href="https://riot-optimizer.com/"&gt;RIOT&lt;/a&gt; are great paid options.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Don't Mix CSS With HTML and Javascript&lt;/strong&gt;&lt;br&gt;
HTML's purpose is to organize web documents by defining headers, footers, and so on. Front-end developers sometimes use deprecated HTML attributes to style elements. However, this often precipitates into developers using the style attribute to insert CSS directly into HTML.&lt;/p&gt;

&lt;p&gt;This practice is fine in development or for a quick test, but it's hardly suitable for production. Avoid using the style attribute to insert CSS since this goes squarely against the spirit of CSS. Similarly, &lt;a href="https://www.codeconquest.com/dont-mix-html-css-javascript/"&gt;inserting Javascript into HTML is poor practice.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using unobstructed Javascript might seem tedious, but it results in cleaner HTML and better code results.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Conditional Commenting&lt;/strong&gt;&lt;br&gt;
Microsoft has announced the end of support for Internet Explorer which will make this requirement redundant in a few years. However, for now, it still exists and this means developers have to account for web pages being displayed on this obsolete browser.&lt;/p&gt;

&lt;p&gt;There are hacks you can use to customize your code, but the problem is that CSS validation fails. Instead, use conditional comments to target particular versions of Internet Explorer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Use Semantic HTML&lt;/strong&gt;&lt;br&gt;
HTML is a markup language and is used to create structured documents. Developers should use it to denote headings, paragraphs, and other design elements. It's important to use semantic HTML to give your page more meaning.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/asciiden/6-html-tags-you-might-not-know-50id"&gt;Semantic tags&lt;/a&gt; make your on-page communication clear to browsers and search engines. They allow for increased customization via the use of well-applied CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Build and Test in Parallel&lt;/strong&gt;&lt;br&gt;
Cross-browser rendering is a huge issue every web developer has to account for. Test your code while you're building it instead of rendering it in one browser and adjusting it for others afterward. You'll save time and find it easier to debug any code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.freepik.com/vectors/digital"&gt;Digital vector created by freepik - &lt;/a&gt;&lt;a href="http://www.freepik.com"&gt;www.freepik.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>discuss</category>
      <category>javascript</category>
    </item>
    <item>
      <title>PROBLEM SOLVING THINKING.</title>
      <author>MarianVelani</author>
      <pubDate>Tue, 08 Jun 2021 16:01:37 +0000</pubDate>
      <link>https://dev.to/marianvelani/problem-solving-thinking-268m</link>
      <guid>https://dev.to/marianvelani/problem-solving-thinking-268m</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aIVu55qn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l64xggzcw5eh595fuejv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aIVu55qn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l64xggzcw5eh595fuejv.png" alt="Manan Velani"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1.OBSERVATION: SEEING PROBLEMS/IDEAS.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;CONFIDENCE: ABILITY TO  TAKE ACTION WITHOUT FEAR.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HUMILITY: KNOWING YOU DON'T KNOW EVERYTHING ABOUT.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;CURIOSITY: EXPLORING AND EXPERIMENTING.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ENERGY: TO EXPLORE IDEA AND FAIL FAST ASAP AND TRY AGAIN. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ACTION: NOT JUST THINKING, BUT DOING.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>productivity</category>
      <category>beginners</category>
      <category>manan</category>
    </item>
    <item>
      <title>The Importance of Research</title>
      <author>JavaCode7</author>
      <pubDate>Tue, 08 Jun 2021 15:55:13 +0000</pubDate>
      <link>https://dev.to/javacode7/the-importance-of-research-4oo7</link>
      <guid>https://dev.to/javacode7/the-importance-of-research-4oo7</guid>
      <description>&lt;p&gt;I hate to admit it but I actually did no research when writing my JavaScript v TypeScript article 😥.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/javacode7" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DsfLJt81--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--I2MrZzMC--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/605466/cc0a55b0-35ad-42a2-b8fe-6e8f8c22c0e0.png" alt="javacode7 image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/javacode7/javascript-v-typescript-3i1g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;JavaScript v TypeScript&lt;/h2&gt;
      &lt;h3&gt;JavaCode7 ・ Jun 8 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#typescript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#healthydebate&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
While I try not to live in regret, I do not want to do this again. That is why I am writing this article.&lt;br&gt;&lt;br&gt;
Research is important ❗. Without it, although you may have &lt;em&gt;some&lt;/em&gt; correct information, other info you put in may be inaccurate. This is not good to put in any blog post, article, tutorial or video.

&lt;p&gt;Research can be done through the web 🌐, through reading 📖 and other ways as well. Always try to do research &lt;em&gt;before&lt;/em&gt; you make any content to make sure that any information there is correct.&lt;/p&gt;

&lt;p&gt;I think I'll end it here today and I just want to apologise to those people who read my JS v TS article with false information in it. It is my fault 😔.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
    </item>
    <item>
      <title>STEM &amp; Twitter: Verified Bias</title>
      <author>Cher</author>
      <pubDate>Tue, 08 Jun 2021 15:38:17 +0000</pubDate>
      <link>https://dev.to/cher/stem-twitter-verified-bias-41i3</link>
      <guid>https://dev.to/cher/stem-twitter-verified-bias-41i3</guid>
      <description>&lt;p&gt;Over the past few years, people have gotten louder and louder about Twitter's apparent bias in who they verify. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-so-important-about-verification"&gt;
  &lt;/a&gt;
  What's so important about verification?
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Validation&lt;/strong&gt;. Content on Twitter lives in an interesting juxtaposition in a state of simultaneous permanence and ephemerality. Tweeting may be fleeting, but the consequences can be lasting, and because of how quickly they churn, it is difficult to correct course. Adding the verified badge to that content is a way of validating that it can be trusted, or is the original source. It protects content creators from having their content plagiarized, by giving them the ability to reply to tweets using their work without their permission and credit themselves with reply priority. Similarly, this allows government officials, scientists, and other notable people to correct misinformation that could have reaching damage. And of course, it also protects people from being impersonated which helps combat all of those things.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support Priority&lt;/strong&gt;. Notable people, and people with high engagement, get harassed on an untenable scale. &lt;/p&gt;

&lt;p&gt;Sometimes the problem is volume of people doing the harassing. In 2018, I wrote an &lt;a href="https://medium.com/@cherp/half-a-million-people-have-seen-me-naked-e70e8b89269c"&gt;article&lt;/a&gt; revealing that I had been a part of a revenge porn hoarding scheme that went on for years a half a decade prior. It went viral, and made its way through gaming Reddit and 4chan. Eventually, some angry misogynist victim-blamers came to Twitter to harass me. I had been doxxed by this point, and people were impersonating me, posting nude photos of me they had obtained illegally, along with my name, address, and phone number. I was getting harassed from every angle, and three of these men &lt;strong&gt;came to my house&lt;/strong&gt;. Twitter Support was &lt;strong&gt;not responsive&lt;/strong&gt;. I had to file DMCA takedowns, which can't even be done via the report tool, but instead in a lengthy side &lt;a href="https://help.twitter.com/en/forms/ipi/dmca"&gt;process&lt;/a&gt;... which I had to file &lt;strong&gt;individually&lt;/strong&gt; for each tweet.&lt;/p&gt;

&lt;p&gt;Other times, it's targeted harassment, and again, Twitter Support is &lt;strong&gt;not responsive&lt;/strong&gt;. For the last three months, I have been being harassed by a single individual who has created no less than &lt;a href="https://twitter.com/cherthedev/status/1401584411221630977"&gt;100&lt;/a&gt; throw-away accounts with the sole intention of harassing me &lt;strong&gt;all day long&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OI3lifVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l326q5uyf41c0gieik8a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OI3lifVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l326q5uyf41c0gieik8a.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It took Twitter nearly a month to remove their suicide encouragement, despite multiple reports.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YH_HSrp---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ta6f3289jp71rpmwtljj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YH_HSrp---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ta6f3289jp71rpmwtljj.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What's worse is that Twitter responded to me, and multiple others, that it was &lt;a href="https://twitter.com/cherthedev/status/1392914238411354115"&gt;not a violation of their rules&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When people get this kind of harassment, year over year, it's clear that they need better tools and care from the platform. Twitter has internal signals that can recognize when this is happening. If &lt;a href="https://socialblade.com/"&gt;Social Blade&lt;/a&gt; can spot an account gaining popularity: so can Twitter. &lt;em&gt;Special shout out to the &lt;a href="https://www.forem.com/"&gt;Forem&lt;/a&gt; team for being so pro-active and personally caring when it comes to potential and actual harassment&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Notification Filtering&lt;/strong&gt;. While this is probably the least important of all of these things: I had to uninstall the Twitter application from my phone the last time I went viral because it was causing it to crash and overheat. I ended up turning them off permanently, but even opening my notifications tab with notifications from accounts that don't follow me turned off, it's &lt;strong&gt;not manageable&lt;/strong&gt;. I have to check my notifications multiple times a day to ensure I don't miss anything important. It would be nice to have a little more control. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#is-it-still-biased"&gt;
  &lt;/a&gt;
  Is it still biased?
&lt;/h1&gt;

&lt;p&gt;Obviously, we couldn't possibly know that without thorough research into every single account that has been verified, but it seems the same issue that we've been vocal about for years is still being reflected in our community. Is it the process? Is it the people doing the approving and denying not having a clear enough set of rules and having some arbitrary discretionary control? I've seen at least three accounts that aren't government officials with less than a couple thousand followers get approved for what seems to be a mistake because of political title jargon in their bios.&lt;/p&gt;

&lt;p&gt;I originally set out to call out all similar accounts that are being denied/approved, but I don't want to do that on a large scale unless someone has explicitly given me permission, because I don't want Twitter to go back and take away tools from someone who needs them.&lt;/p&gt;

&lt;p&gt;I'll make this single comparison, and if others want to share what they've seen in the comments, or in &lt;a href="https://twitter.com/cherthedev/status/1402251754503294976"&gt;this thread&lt;/a&gt;, it will help create data that can either prompt Twitter to tell us &lt;em&gt;why&lt;/em&gt; accounts that look nearly identical to accounts they've approved, aside from the physical characteristics of those individuals, are being denied, or will show us a clear bias that can be reported on to change it. I'm hopeful the bias is just because I have a confirmation bias, but either way, the lack of transparency makes it more difficult to ignore those observations.&lt;/p&gt;

&lt;p&gt;I was denied verified status on &lt;a href="https://twitter.com/cherthedev/status/1398370639170445314"&gt;May 28, 2021&lt;/a&gt;, 5 days after I applied. At the time, I had more than three articles published using my name, or my tweets, or both. And they aren't nothing. I've been quoted in &lt;a href="https://www.theverge.com/2021/5/25/22453302/apple-culture-secrecy-leak-antonio-garcia-martinez-letter"&gt;The Verge&lt;/a&gt;, &lt;a href="https://www.cnn.com/2021/05/13/tech/apple-antonio-garcia-martinez/index.html"&gt;CNN&lt;/a&gt;, &lt;a href="https://www.bloomberg.com/news/articles/2021-05-13/apple-says-ads-engineer-leaves-company-after-comments-draw-fire"&gt;Bloomberg&lt;/a&gt;, and many other &lt;a href="https://thenwire.com/apple-employees-are-going-public-about-workplace-issues-and-theres-no-going-back/"&gt;smaller publications&lt;/a&gt;. It's not the first time, either. You can find my name in many publications, like &lt;a href="https://www.businessinsider.com/1x-engineer-open-source-project-10x-engineer-myth-2020-5"&gt;Business Insider&lt;/a&gt;, &lt;a href="https://www.pcgamer.com/prominent-overwatch-moderator-apologizes-following-revenge-porn-scandal/"&gt;PC Gamer&lt;/a&gt;, &lt;a href="https://www.newsweek.com/overwatch-uncleswagg-banned-838415"&gt;Newsweek&lt;/a&gt;, &lt;a href="https://kotaku.com/popular-twitch-mod-is-sorry-for-all-the-revenge-porn-1823660711"&gt;Kotaku&lt;/a&gt;, and more dating back into &lt;a href="https://techbeacon.com/app-dev-testing/highlights-stack-overflow-2016-developer-survey"&gt;2016&lt;/a&gt; and &lt;a href="https://www.cinemablend.com/games/Red-5-Studios-Apparently-Having-Some-Serious-Issues-Get-Details-107677.html"&gt;beyond&lt;/a&gt;. I've been in numerous podcasts being interviewed over the last few years. Given talks internally, and externally, and, of course, I'm a published journalist and content creator myself, off of Twitter. I tweet frequently and actively, and have been since 2007, since 2008 on my current account. You can find me &lt;a href="https://en.wikipedia.org/wiki/Wikipedia:Red_link"&gt;red linked&lt;/a&gt; in Wikipedia.&lt;/p&gt;

&lt;p&gt;I have 31,000 followers. I'm in tech. Denied. Originally, I decided I didn't meet their follower threshold. As I watched some other tech accounts be verified with similar status to me, I have grown concerned that that is not the case. It feels like an arbitrary "you don't deserve it" that I cannot reconcile with what I'm seeing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/jsjoeio"&gt;Joe Previte&lt;/a&gt; has been gracious enough to offer himself a comparison, as he, too, is perplexed as to how he was approved when I was not, with a similar follower count, in the same industry, and even less buzz and content to show than I have.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0gAwKC_F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hb13i9q6062mdn58s67v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0gAwKC_F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hb13i9q6062mdn58s67v.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our growth comparison leads to even more questions into what internal metrics and signals Twitter is using to determine who meets their &lt;a href="https://help.twitter.com/en/managing-your-account/about-twitter-verified-accounts"&gt;criteria&lt;/a&gt;, and who does not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xe4Pe1Rr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qvkpwjqjpqr1kgqxvnjy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xe4Pe1Rr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qvkpwjqjpqr1kgqxvnjy.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;And when it's easy to lean on follower counts, even knowing there are approvals that aren't entertainers, government officials, journalists, or athletes that get approved with similar follower counts -- there are those who are in the top 99.99th percentile in follower counts, like &lt;a href="https://twitter.com/kvlly"&gt;Kelly Vaughn&lt;/a&gt; with nearly 100k followers that got &lt;a href="https://twitter.com/kvlly/status/1401883673134239746"&gt;denied&lt;/a&gt; in the same cycle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BTDImyMI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlatfxk8x979zjaw2sz5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BTDImyMI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hlatfxk8x979zjaw2sz5.png" alt="image"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;It took &lt;a href="https://twitter.com/cybernova"&gt;@cybernova&lt;/a&gt; &lt;strong&gt;years&lt;/strong&gt; to finally get verified, despite having over 100,000 followers, and being a &lt;a href="https://twitter.com/cybernova/status/1401892537493770248"&gt;public figure&lt;/a&gt; both on and off the platform. I've watched men in games with no official ties to organizations who create hardly any content with a couple thousand followers get approved over the last week (you can check &lt;a href="https://twitter.com/verified"&gt;@verified&lt;/a&gt;'s &lt;a href="https://twitter.com/verified/following"&gt;following&lt;/a&gt; for this), while &lt;a href="https://twitter.com/ComplexMinded"&gt;Cedric&lt;/a&gt; a public face for &lt;a href="https://twitter.com/survivetheark"&gt;ARK: Survival Evolved&lt;/a&gt; with 60k+ followers was denied.&lt;/p&gt;

&lt;p&gt;Why did &lt;a href="https://twitter.com/EmmaBostian"&gt;Emma Bostian&lt;/a&gt; and &lt;a href="https://twitter.com/Nithin0dha"&gt;Nithin Kamath&lt;/a&gt; have to have their decisions appealed, and worse, why did this have to be done by some unseen person waving a magic wand? How do the rest of us who feel, and Twitter as a community feels, need to be verified, get to appeal these decisions and some clarity around what criteria we aren't meeting, or what we did wrong in our applications?&lt;/p&gt;

&lt;p&gt;I want to know why all these people (in addition to those mentioned above) aren't verified. In no particular order, and certainly not all inclusive:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/gradydoctor"&gt;https://twitter.com/gradydoctor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/jacquicollins_"&gt;https://twitter.com/jacquicollins_&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/gabsmashh"&gt;https://twitter.com/gabsmashh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/lmauricecpr"&gt;https://twitter.com/lmauricecpr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/jensimmons"&gt;https://twitter.com/jensimmons&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/rachelandrew"&gt;https://twitter.com/rachelandrew&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Dixie3Flatline"&gt;https://twitter.com/Dixie3Flatline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/javavvitch"&gt;https://twitter.com/javavvitch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/BlondeHistorian"&gt;https://twitter.com/BlondeHistorian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/allisongill"&gt;https://twitter.com/allisongill&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/CajunBlueAZ1"&gt;https://twitter.com/CajunBlueAZ1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/EbonyJHilton_MD"&gt;https://twitter.com/EbonyJHilton_MD&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/DrBrittaniJ"&gt;https://twitter.com/DrBrittaniJ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ChaseTMAnderson"&gt;https://twitter.com/ChaseTMAnderson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/bordie"&gt;https://twitter.com/bordie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Potatopolitics"&gt;https://twitter.com/Potatopolitics&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/sarahdope"&gt;https://twitter.com/sarahdope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/QuinnyPig"&gt;https://twitter.com/QuinnyPig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/AntibioticDoc"&gt;https://twitter.com/AntibioticDoc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/BlondeNerd"&gt;https://twitter.com/BlondeNerd&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/steimer"&gt;https://twitter.com/steimer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/joeynoelle"&gt;https://twitter.com/joeynoelle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ParissAthena"&gt;https://twitter.com/ParissAthena&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This feels like a &lt;a href="https://twitter.com/hashtag/VerifiedBias?src=hashtag_click"&gt;#VerifiedBias&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>womenintech</category>
      <category>blacktech</category>
      <category>gamedev</category>
      <category>twitter</category>
    </item>
    <item>
      <title>Let's sync our mind around async in javaScript 🎉</title>
      <author>Sriram</author>
      <pubDate>Tue, 08 Jun 2021 15:34:58 +0000</pubDate>
      <link>https://dev.to/nothinbutblood/let-s-sync-our-mind-around-async-in-javascript-ca7</link>
      <guid>https://dev.to/nothinbutblood/let-s-sync-our-mind-around-async-in-javascript-ca7</guid>
      <description>&lt;p&gt;As we all know javaScript is single threaded, which means it can do one thing at any given time.This means that developers can focus writing code without worrying about multi-threaded issues.The problem with multi-threaded architecture is that developer has to know the order of execution of every code block that is waiting to be executed in different threads, this is not an issue in single threaded architecture because there is only one thread to worry about.However, in single threaded architecture executing long running tasks like network call will block the main thread.This is a bad user experience and this is where javaScript's asynchronous programming comes into picture.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/9uIjYTJCtMnHsMpbHW/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/9uIjYTJCtMnHsMpbHW/giphy.gif" alt="whats that Gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Asynchronous programming is a way to take a long running tasks away from normal code execution flow and showing the result of such tasks once they are done.This can be achieved by &lt;strong&gt;callbacks&lt;/strong&gt;, &lt;strong&gt;promises&lt;/strong&gt; or &lt;strong&gt;Async/Await&lt;/strong&gt; in javaScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;✔ You should be familiar with basic workings of javaScript like functions, conditional statements and so on. &lt;br&gt;
✔ No need to be familiar with asynchronous mechanisms like &lt;strong&gt;promises&lt;/strong&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#callbacks"&gt;
  &lt;/a&gt;
  Callbacks ✨
&lt;/h3&gt;

&lt;p&gt;In this section, we will be learning about callbacks to handle asychronous operations.Callbacks are nothing but functions that get run once asynchronous code is finished executing.Let's look at it with solid example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getSinger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getting singer info from the database...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;getSinger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Singer&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;singer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, we are declaring a function called &lt;strong&gt;getSinger&lt;/strong&gt; which takes &lt;em&gt;id&lt;/em&gt; and &lt;em&gt;callback&lt;/em&gt; function as arguments.In the body of the getSinger function, we are calling javaScript's built in function called setTimeout to simulate network call to fetch the data from the database.After 2000ms,setTimeout function calls the callback function with &lt;strong&gt;singer&lt;/strong&gt; data.&lt;br&gt;
While calling getSinger function we are receiving singer data and then console logging it.That's it😎.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#issues-with-callbacks"&gt;
  &lt;/a&gt;
  Issues with callbacks
&lt;/h3&gt;

&lt;p&gt;The callback pattern quickly becomes harder to read and maintain once nested callbacks are introduced. This is known as &lt;strong&gt;"callback hell"&lt;/strong&gt;. Let me show with a quick example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getSinger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getting singer info from the database...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;getSongsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singerName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getting songs list info from the database...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;songsList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getSinger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;singerName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;singer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
  &lt;span class="nx"&gt;getSongsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singerName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;songsList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;songsList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, we have added &lt;strong&gt;getSongsList&lt;/strong&gt; function which takes in &lt;em&gt;singerName&lt;/em&gt; and a &lt;em&gt;callback&lt;/em&gt; function as arguments.After setTimeout function finish running in 2000ms, the callback is called with songsList data.Finally, getSongsList is called inside getSinger's callback and then songsList data is printed to the console.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#promises"&gt;
  &lt;/a&gt;
  Promises✨
&lt;/h3&gt;

&lt;p&gt;Promises are nothing but objects that hold the eventual result of an asynchronous operation.It can have three possible states. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Pending&lt;/strong&gt;: In this state the promise kickstarts an asychronous operation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Resolved&lt;/strong&gt;: In this state the asynchronous operation is completed with a result.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Rejected&lt;/strong&gt;: In this state the asynchronous operation is completed with an error.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// resolve state demo&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// do some async work&lt;/span&gt;
         &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;//reject state demo&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// do some async work&lt;/span&gt;
        &lt;span class="c1"&gt;// resolve(result)&lt;/span&gt;
           &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;message&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;promise&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First we initialize promise object with new keyword. A promise object runs async operation and calls resolve function if there is result else it calls reject function if there is error.&lt;br&gt;
Later, &lt;strong&gt;then&lt;/strong&gt; handler is used to access result and catch handler is used access error.&lt;/p&gt;

&lt;p&gt;Now let's modify our callback example to use Promise.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getSinger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getting singer info from the database...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getSongsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singerName&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getting songs list info from the database...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;songsList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getSinger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singer&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;getSongsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;songsList&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;songsList&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code, we are returning a promise from both getSinger and getSongsList functions.Both goes to resolved state.When promise is consumed, we chain two &lt;strong&gt;then&lt;/strong&gt; handlers.This is cleaner syntax than callbacks.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#asyncawait"&gt;
  &lt;/a&gt;
  Async/Await ✨
&lt;/h3&gt;

&lt;p&gt;Async/Await is a new feature in javaScript that let's you write asynchronous code in a synchronous way. Whenever there is a function that returns a promise, you can &lt;strong&gt;await&lt;/strong&gt; that result and then wrap that code with &lt;strong&gt;async&lt;/strong&gt; modifier.Let's look at the example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getSinger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getting singer info from the database...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;getSongsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singerName&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;getting songs list info from the database...&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;songsList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;displaySongsList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;singer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getSinger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;songsList&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;getSongsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;singer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;songsList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;displaySongsList&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We declare a function called displaySongsList, and then wrap await statements in &lt;strong&gt;try&lt;/strong&gt; block, if an error occurs then it is handled by &lt;strong&gt;catch&lt;/strong&gt; block. That's it.🎉🎉&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;First we understood what asynchronous operation in javaScript is.Then we explored how &lt;strong&gt;callbacks&lt;/strong&gt; comes to the picture while dealing with async operations.Next we looked at &lt;strong&gt;Promises&lt;/strong&gt; as better alternative to callbacks. Finally we looked at &lt;strong&gt;Async/Await&lt;/strong&gt; which builds upon Promises.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Adding Markdown to your Rails application</title>
      <author>AbdUlRahman Shawareb</author>
      <pubDate>Tue, 08 Jun 2021 15:33:10 +0000</pubDate>
      <link>https://dev.to/aulr7man_sh/adding-markdown-to-your-rails-application-p73</link>
      <guid>https://dev.to/aulr7man_sh/adding-markdown-to-your-rails-application-p73</guid>
      <description>&lt;p&gt;In this guide I will show you how to add markdown to your rails application. We will use &lt;a href="https://github.com/vmg/redcarpet"&gt;redcarpet&lt;/a&gt; gem and I assume that you have created your rails application that we will work on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-redcarpet"&gt;
  &lt;/a&gt;
  Install redcarpet
&lt;/h2&gt;

&lt;p&gt;To install redcarpet gem go to your &lt;strong&gt;Gemfile&lt;/strong&gt; and add:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Gemfile &lt;/span&gt;
&lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"redcarpet"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ bundle install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#generating-a-resource"&gt;
  &lt;/a&gt;
  Generating a resource
&lt;/h2&gt;

&lt;p&gt;After we succesfully installed our gem, we need a recource to work with and test our work, so we will create Post scaffold to work with.&lt;/p&gt;

&lt;p&gt;To create the Post scaffold run the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ rails generate scaffold Post title:string body:text
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ rails db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#extracting-logic-to-a-helper"&gt;
  &lt;/a&gt;
  Extracting logic to a helper
&lt;/h2&gt;

&lt;p&gt;After we succesfully installed redcarpet gem and created our scaffold it's the time to add markdown to our application.&lt;/p&gt;

&lt;p&gt;In order to be DRY (don't repeat yourself) we will create a helper method to use whenever we want to add markdown. So in our &lt;code&gt;application_helper.rb&lt;/code&gt; we will add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;markdown&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sx"&gt;%i[
      hard_wrap autolink no_intra_emphasis tables fenced_code_blocks
      disable_indented_code_blocks strikethrough lax_spacing space_after_headers
      quote footnotes highlight underline
    ]&lt;/span&gt;
    &lt;span class="no"&gt;Markdown&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to_html&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;html_safe&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This method titeled &lt;code&gt;markdown&lt;/code&gt; will take a text as an argument and will be the output of Post &lt;code&gt;body&lt;/code&gt; feild. Notice the &lt;code&gt;options&lt;/code&gt; variable defined with an array of settings you can pass to Redcarpet. These dictate what you do and don't want when it comes to rendering markdown within your app.&lt;/p&gt;

&lt;p&gt;Now let's use this helper in our views&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"notice"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;%= notice %&amp;gt;&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  &amp;lt;strong&amp;gt;Title:&amp;lt;/strong&amp;gt;
  &amp;lt;%=&lt;/span&gt; &lt;span class="vi"&gt;@post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt; &lt;span class="sx"&gt;%&amp;gt;
&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="no"&gt;Body&lt;/span&gt;&lt;span class="ss"&gt;:&amp;lt;&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;strong&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;%= markdown(@post.body) %&amp;gt;
&amp;lt;/p&amp;gt;

&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="s1"&gt;'Edit'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;edit_post_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@post&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;%= link_to 'Back', posts_path %&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And congratulation you have added markdown to your application.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>markdown</category>
      <category>ruby</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Voici le top 6 de mes youtubers dev francophone préférés</title>
      <author> Eric Le Codeur</author>
      <pubDate>Tue, 08 Jun 2021 15:21:28 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/voici-le-top-6-de-mes-youtubers-dev-francophone-preferes-5b90</link>
      <guid>https://dev.to/ericlecodeur/voici-le-top-6-de-mes-youtubers-dev-francophone-preferes-5b90</guid>
      <description>&lt;p&gt;&lt;a href="https://twitter.com/EricLeCodeur"&gt;Suivez-moi sur Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voici le top 6 de mes youtubers francophone préférés:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Grafikart (La référence!) :&lt;br&gt;
&lt;a href="https://www.youtube.com/user/grafikarttv"&gt;https://www.youtube.com/user/grafikarttv&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lior Chamla : Un gars plein de charisme!&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UCS71mal_TkTW_PpZR9YLpIA"&gt;https://www.youtube.com/channel/UCS71mal_TkTW_PpZR9YLpIA&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Les Teachers du Net: Prend le temps de bien expliquer les concepts! Mamamia!&lt;br&gt;
&lt;a href="https://www.youtube.com/user/hounwanou1993"&gt;https://www.youtube.com/user/hounwanou1993&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Docstring: Un gars avec un soucis du détail examplaire!&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UCo2zkK2d_frGSXctIkftALw"&gt;https://www.youtube.com/channel/UCo2zkK2d_frGSXctIkftALw&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Jeremy Mouzin: Un chic type, qui met beaucoup d'effort dans ce qu'il fait.&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UCMzJVrWeaKUotLPWTdx6HuQ"&gt;https://www.youtube.com/channel/UCMzJVrWeaKUotLPWTdx6HuQ&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Yoan Dev: Une chaine avec moins d'abonné (pour le moment) mais avec une certaine pureté que l&amp;lt;on ne retrouve plus chez les vétérans...&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UCRlsJWh1XwmNGxZPFgJ0Zlw"&gt;https://www.youtube.com/channel/UCRlsJWh1XwmNGxZPFgJ0Zlw&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Merci à tous ces excellents youtubers pour leur contenu francophone!&lt;/p&gt;

</description>
      <category>french</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Useful books that Java developers should definitely read</title>
      <author>Alex</author>
      <pubDate>Tue, 08 Jun 2021 15:21:01 +0000</pubDate>
      <link>https://dev.to/alexanderkdev/useful-books-that-java-developers-should-definitely-read-1e92</link>
      <guid>https://dev.to/alexanderkdev/useful-books-that-java-developers-should-definitely-read-1e92</guid>
      <description>&lt;p&gt;Hello folks, If you are a Java developer and wondering what to read in the remaining of 2021, then you have come to the right place. In this article, I am going to share 10 books on Java, Spring, and related technology a Java developer can read.&lt;/p&gt;

&lt;p&gt;I have included books for both experienced Java developer who is more inclined to learn about architecture stuff, developing for Cloud, MicroService, Java 9 to Java 14 features, and Spring 5 features and thinking of learning Kotlin to improve their productivity.&lt;/p&gt;

&lt;p&gt;Still, I have not forgotten junior and less experienced Java developers or some who are thinking of starting their journey into the Java world in 2021. This means if you have just started learning Java or thinking to learn, those are ideal books to start (&lt;a href="https://exceed-team.com/tech/useful-books-that-java-developers-should-definitely-read?s=re&amp;amp;a=d"&gt;https://exceed-team.com/tech/useful-books-that-java-developers-should-definitely-read?s=re&amp;amp;a=d&lt;/a&gt;)&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>java</category>
      <category>webdev</category>
      <category>books</category>
    </item>
    <item>
      <title>My first NPM package for react-native</title>
      <author>Pratik P. Sanap</author>
      <pubDate>Tue, 08 Jun 2021 15:16:29 +0000</pubDate>
      <link>https://dev.to/pratik240895/my-first-npm-package-for-react-native-18j3</link>
      <guid>https://dev.to/pratik240895/my-first-npm-package-for-react-native-18j3</guid>
      <description>&lt;p&gt;After started working on javascript, I have used many npm resources to achieve the required results. Now, this is time to give back to the community. My first npm package created for react-native developers.&lt;br&gt;
I hope it will help many developers.&lt;/p&gt;

&lt;p&gt;[NPM package]&lt;a href="https://www.npmjs.com/package/rn-searchable-textinput"&gt;https://www.npmjs.com/package/rn-searchable-textinput&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>npm</category>
      <category>reactnative</category>
      <category>react</category>
    </item>
  </channel>
</rss>
