<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>OKEx clone script the best way to develop a website like OKEx</title>
      <author>arman mohammadi</author>
      <pubDate>Sat, 18 Sep 2021 10:28:30 +0000</pubDate>
      <link>https://dev.to/armantech/okex-clone-script-the-best-way-to-develop-a-website-like-okex-30o</link>
      <guid>https://dev.to/armantech/okex-clone-script-the-best-way-to-develop-a-website-like-okex-30o</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2OKZm2Pi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/OKEX-CLONE-SCRIPT.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2OKZm2Pi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/OKEX-CLONE-SCRIPT.svg" alt="okex rating"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#okex-clone-script"&gt;
  &lt;/a&gt;
  Okex clone script
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://radindev.com/okex-clone-script/"&gt;Okex clone script&lt;/a&gt;&lt;/strong&gt; is a ready-made cryptocurrency exchange website script that helps you to launch a trading website like okex.  The okex clone script describes software that has all the existing features present in the OKEx exchange platform. Because clone script is ready-made software, by using it for developing a website you will get rid of many challenges that you may face while developing a crypto exchange software. Using a clone script to develop a website will save plenty of time and energy. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#okex-website"&gt;
  &lt;/a&gt;
  Okex website
&lt;/h2&gt;

&lt;p&gt;Before we start, let’s get to know the okex exchange platform. &lt;br&gt;
Okex is a leading crypto exchange platform that provides exchange services all around the globe.&lt;br&gt;
Okex was founded in 2014. currently Okex provides exchange services in more than 200 countries around the world and about 20M users are trading on the platform. OKEx offers 24/7 online supports for its clients. Okex exchange currently supports +264 cryptocurrencies that are allowed to be exchanged on the OKEx platform.  okex has the grade A in cyber security rating.&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XoNjdFEC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/rating-1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XoNjdFEC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/rating-1.svg" alt="okex rating"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#okex-cryptocurrency-exchange-website-features"&gt;
  &lt;/a&gt;
  OKEx cryptocurrency exchange website features
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Live list of the value of the assets that contain: its last price, change of the day the chart of the change.&lt;/li&gt;
&lt;li&gt;Start your account and earn up to 50$ in crypto rewards. Okex exchange gives rewards for users who are new to the platform and want to start their trading.&lt;/li&gt;
&lt;li&gt;Synced app for android, IOS, MAC, and windows &lt;/li&gt;
&lt;li&gt;Different payments method: visa, master cards&lt;/li&gt;
&lt;li&gt;140 top quality assets &lt;/li&gt;
&lt;li&gt;400 trading pairs for trading BTC against USDT&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#tips-for-creating-a-successful-exchange-website-by-cloning-okex-platform"&gt;
  &lt;/a&gt;
  Tips for creating a successful exchange website by cloning okex platform
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Gain the complete knowledge about the features of the okex platform&lt;/li&gt;
&lt;li&gt; Find the Strengths and weaknesses of the okex platform &lt;/li&gt;
&lt;li&gt; Try to add extra  features to your exchange platform that you think will be interesting or useful for the user &lt;/li&gt;
&lt;li&gt; To understand what the traders really want Read the traders comment in related pages or social Medias to understand the users’ desire. Also reading their feedback in different platform will help you to understand what they are complaining about or what the things are they don’t like in exchange platforms and if this factor . These actions will give you a clear view of what users want.&lt;/li&gt;
&lt;li&gt; The next step is embedding their wanted feature in your platform and solve the factors or issues that the users don’t like.&lt;/li&gt;
&lt;li&gt; Check out other popular exchange websites, and figure out what features do they have that attract traders to them and try to add them to your website.&lt;/li&gt;
&lt;li&gt; Always be updated and add new features to your exchange platform.&lt;/li&gt;
&lt;li&gt; Hire patient employees for your support team to treat and guide the users patiently in order to solve their problems. &lt;/li&gt;
&lt;li&gt; Find reliable blockchain developer and  &lt;strong&gt;&lt;a href="https://radindev.com/cryptocurrency-exchange-development/"&gt;cryptocurrency exchange platform Development&lt;/a&gt;&lt;/strong&gt; company to purchase the premium clone script without security problems.&lt;/li&gt;
&lt;li&gt;Make sure the exchange development company uses the latest technology for developing your website.&lt;/li&gt;
&lt;li&gt;Some exchange websites are not available in some countries try to build an available website and offer exchange services in most of the countries.&lt;/li&gt;
&lt;li&gt;Think of the ways to encourage the users to use your platform for trading. Like some exchange platforms, you can add the rewarding system to your exchange platform. For example, reward them with some altcoins for registration, or after the first transaction give them some extra bitcoins for free and other ways to attract them to your exchange platform.&lt;/li&gt;
&lt;li&gt;Use the educational part of the website to gain more users especially new users by teaching them the helping them to learn trading subjects.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#okex-quik-summary"&gt;
  &lt;/a&gt;
  Okex Quik summary
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yhvWVQl8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/summery-data-1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yhvWVQl8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/summery-data-1.svg" alt="okex summary"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#okex-accounts"&gt;
  &lt;/a&gt;
  OKEx Accounts
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Funding Account:&lt;/strong&gt;&lt;br&gt;
A funding account is for users to deposit and withdraw their assets safely and instantly.  A funding account is used to store, save and transfer digital assets to another crypto wallet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trading account:&lt;/strong&gt;&lt;br&gt;
The first step to start trading is to transfer the crypto from the funding account to one of the following accounts:&lt;br&gt;
C2C, SPOT, margin, future, p-swap, or options account. for users to deposit and withdraw their assets safely and instantly.  A funding account is used to store, save and transfer digital assets to another crypto wallet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Saving account:&lt;/strong&gt;&lt;br&gt;
Saving account is an account where you collect the revenue of savings. With the help of saving account okex users can make good use of their coins. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mining account&lt;/strong&gt;&lt;br&gt;
Mining account is used to save the revenue of the mining process in the OKEx pool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spot account&lt;/strong&gt;&lt;br&gt;
Users can trade fiat currencies with crypto currencies according to the exchange rate of the system in spot account.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Margin account&lt;/strong&gt; &lt;br&gt;
The name of this account describes its usability Margin account is used for margin trading. Each margin trading links to one of the margin accounts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Option account&lt;/strong&gt;&lt;br&gt;
This account is used for options trading. This trading, it gives you the right to buy and sell a specific security. An option is a contract linked to an underlying asset.&lt;/p&gt;

&lt;p&gt;What is okex pool and how does it work?&lt;br&gt;
OKEx pool mining&lt;br&gt;
OKEx pool allows cryptocurrency miners to gain cryptocurrency rewards by the process of mining in the pool. The OKEX’s pool merges the trading services with the mining process. It sends the mining rewards directly to users’ mining account. Okex mining pool has 11 assets and provides daily revenue.The okex mining pool is:&lt;br&gt;
Safe and stable &lt;br&gt;
Open and flexible &lt;br&gt;
Global and reliable  &lt;/p&gt;

&lt;p&gt;The pool has three methods for mining rewards:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; complete pay for each share &lt;/li&gt;
&lt;li&gt; pay per N last share + Pay per share (pps+)&lt;/li&gt;
&lt;li&gt; pay per share (PPS)
Steps for working with okex pool:
A.  log into your okex account 
B.  enter the okex pool 
C.  set up you alias
D.  manage your mining dashboard 
E.  establish your mining settings
F.  Choose your desired cryptocurrency to mine.
G.  Connect your mining machine to the okex pool&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-features-of-okex-clone-script"&gt;
  &lt;/a&gt;
  The Features of Okex Clone Script
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; Multilingual: it supports more than 150 crypto coins and 
tokens &lt;/li&gt;
&lt;li&gt; Crypto payment gateway &lt;/li&gt;
&lt;li&gt; API security&lt;/li&gt;
&lt;li&gt; Trading engine &lt;/li&gt;
&lt;li&gt; KYC/AML verifications&lt;/li&gt;
&lt;li&gt;Margin, perpetual and futures trading with 100x leverage&lt;/li&gt;
&lt;li&gt;Multi-cryptocurrency wallet integration &lt;/li&gt;
&lt;li&gt;Liquidity API &lt;/li&gt;
&lt;li&gt;Referral program &lt;/li&gt;
&lt;li&gt;Admin and user panel&lt;/li&gt;
&lt;li&gt;Decentralized trading&lt;/li&gt;
&lt;li&gt; Easy interface for beginners and advanced traders.&lt;/li&gt;
&lt;li&gt;Fast and instant way to buy/sell crypto &lt;/li&gt;
&lt;li&gt;Supports three payment methods: credit/debit card purchases and bank transfer payments&lt;/li&gt;
&lt;li&gt;Secure online/offline  wallet &lt;/li&gt;
&lt;li&gt;Supported mobile app for IOS and android to trade anytime and anywhere &lt;/li&gt;
&lt;li&gt;Referral and affiliate system that rewards you in case you add new users to the platform .
Based on the company that you choose to develop your exchange website extra features that you want to embed in your exchange website can be added.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#perpetual-and-futures-trading"&gt;
  &lt;/a&gt;
  Perpetual and futures trading
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E61OWotl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/leverage-1.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E61OWotl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/leverage-1.svg" alt="Perpetual and futures trading "&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-okex-a-safe-platform"&gt;
  &lt;/a&gt;
  Is Okex a safe platform?
&lt;/h3&gt;

&lt;p&gt;Okex has several layers of security features to protect its client against fraud, keep their funds safe, and also prevent their information to leak. Okex offers a high-security wallet to its client. Based on the research that has been done, okex has not been involved in any exchange hack or even didn’t face any major security issue. So yes okex can be regarded as a safe exchange platform.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comparison"&gt;
  &lt;/a&gt;
  Comparison
&lt;/h2&gt;

&lt;p&gt;Let’s take a look at OKex competitors:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CKCEZAqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/competitors.svg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CKCEZAqn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://radindev.com/wp-content/uploads/2021/09/competitors.svg" alt="okex competitors"&gt;&lt;/a&gt;&lt;br&gt;
The okex offers different order types which consists of:&lt;br&gt;
• Limit order&lt;br&gt;
• Advanced limit &lt;br&gt;
• Market order &lt;br&gt;
• Stop limit &lt;br&gt;
• TWAP&lt;br&gt;
• Iceberg &lt;br&gt;
Iceberg order: seems like a unique feature for okex exchange.  These are advanced orders that are used as part of a crypto trading strategy to execute an order in potions at regular intervals of time as specified by users. This order type can reduce the effect of the market on the basket order. Last words &lt;br&gt;
If you have decided to develop your website with a clone script you better choose a reliable company with expert workers in the field of crypto exchanges that offer premium okex clone scripts. Radin dev is one of the trustworthy companies that has proved itself by the successful website that it has developed.&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>cryptocurrency</category>
      <category>exchange</category>
      <category>okex</category>
    </item>
    <item>
      <title>Do you have any abandoned projects you still have to pay for?</title>
      <author>Madza</author>
      <pubDate>Sat, 18 Sep 2021 07:47:45 +0000</pubDate>
      <link>https://dev.to/madza/do-you-have-any-abandoned-projects-you-still-have-to-pay-for-4p54</link>
      <guid>https://dev.to/madza/do-you-have-any-abandoned-projects-you-still-have-to-pay-for-4p54</guid>
      <description>&lt;p&gt;Yesterday I made a &lt;a href="https://dev.to/madza/what-are-your-recurring-expenses-as-a-developer-59p9"&gt;discussion&lt;/a&gt; about the recurring expenses as a developer. I got a great reply from &lt;a class="mentioned-user" href="https://dev.to/ben"&gt;@ben&lt;/a&gt;
, which resonated in me:&lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/ben"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--23zqxrIb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--TZxgOuTM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/1/f451a206-11c8-4e3d-8936-143d0a7e65bb.png" alt="ben profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/ben"&gt;
        &lt;span class="comment-username"&gt;Ben Halpern&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2 m:pl-0"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/ben/comment/1i5hm" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Sep 17
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;The worst expense is a project which you won't admit you'll never get back to but you're still paying that $50 a month for the collective expenses. &lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;When creating new projects (especially complex ones with multiple services involved) I always try to think about the long-term maintenance and scalability aspects, so I replied: &lt;/p&gt;


&lt;div class="liquid-comment"&gt;
    &lt;div class="details"&gt;
      &lt;a href="/madza"&gt;
        &lt;img class="profile-pic" src="https://res.cloudinary.com/practicaldev/image/fetch/s--9LQ1HlwL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--6hdTiEBf--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_50%2Cq_auto%2Cw_50/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/159737/9f8f2a93-d0a1-4d77-a1f6-c3fc67ebde90.jpg" alt="madza profile image"&gt;
      &lt;/a&gt;
      &lt;a href="/madza"&gt;
        &lt;span class="comment-username"&gt;Madza&lt;/span&gt;
      &lt;/a&gt;
      &lt;span class="color-base-30 px-2 m:pl-0"&gt;•&lt;/span&gt;

&lt;a href="https://dev.to/madza/comment/1i5mg" class="comment-date crayons-link crayons-link--secondary fs-s"&gt;
  &lt;time&gt;
    Sep 18
  &lt;/time&gt;

&lt;/a&gt;

    &lt;/div&gt;
    &lt;div class="body"&gt;
      &lt;p&gt;Excatly, I was gonna say 😀 You must think in long term in the very beginning when choosing the stack and weight all the ifs for the possible abandonment due to new projects with higher potential, etc 😉&lt;/p&gt;


    &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;For example, I'm very happy with the stack I chose for my most recent project &lt;a href="https://quizzes.madza.dev/"&gt;devQuizzes&lt;/a&gt; (a quizz platform where users can test their dev knowledge in over 500 questions across 20 categories): &lt;/p&gt;

&lt;p&gt;I picked &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; to store all the data (each question is a seperate .md file in the repo), &lt;a href="https://airtable.com"&gt;Airtable&lt;/a&gt; for users to submit new questions and submit edits for the question (I use their API for this, so the inputs are stored in their Sheets), &lt;a href="https://vercel.com"&gt;Vercel&lt;/a&gt; to host it all (which I absolutely love, no promo btw) and for the domain I created a subdomain &lt;a href="https://quizzes.madza.dev/"&gt;quizzes.madza.dev&lt;/a&gt; for the only domain I own &lt;a href="https://madza.dev"&gt;madza.dev&lt;/a&gt; (I use &lt;a href="https://namecheap.com"&gt;NameCheap&lt;/a&gt;, which I found in this &lt;a href="https://dev.to/madza/what-s-your-favorite-domain-registrar-4dcl"&gt;discussion&lt;/a&gt;, thanks to you guys), meaning I can still buy a separate domain and set up redirect to it if the project starts to become something serious.&lt;/p&gt;

&lt;p&gt;This means that the total maintenance costs for the project is zero and I am not limited to move to other projects if I want to in the future without sacrificing my bank account.&lt;/p&gt;

&lt;p&gt;The question for this discussion is:&lt;/p&gt;

&lt;p&gt;Do you have any abandoned (inactive) projects that you must pay for monthly/yearly to keep them running? Like hosting, domain, database, storage and other costs.&lt;/p&gt;

&lt;p&gt;Also, what are the key lessons you learned from it (what would you do different when setting up the same project today)?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>career</category>
      <category>business</category>
      <category>finances</category>
    </item>
    <item>
      <title>How to Automatically Run Your Laravel PestPHP Tests on Each GitHub Pull Request?</title>
      <author>Bobby Iliev</author>
      <pubDate>Sat, 18 Sep 2021 07:35:13 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/how-to-automatically-run-your-laravel-pestphp-tests-on-each-github-pull-request-3jch</link>
      <guid>https://dev.to/bobbyiliev/how-to-automatically-run-your-laravel-pestphp-tests-on-each-github-pull-request-3jch</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;PestPHP was created by &lt;a href="https://twitter.com/enunomaduro"&gt;Nuno Maduro&lt;/a&gt; who is also one of the Laravel core team members. PestPHP is an open-source PHP Testing framework created with simplicity in mind. &lt;/p&gt;

&lt;p&gt;PestPHP is being really actively developed and there are already plenty of learning materials online despite the fact that it is relatively new.&lt;/p&gt;

&lt;p&gt;In this tutorial, you will learn how to use GitHub actions in order to automate your PestPHP tests and run them on each pull request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4JKWQu5z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MBVpWq2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4JKWQu5z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/MBVpWq2.png" alt="Automated Pest PHP tests with GitHub actions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h1&gt;

&lt;p&gt;Before you start, you would need to have a Laravel application up and running.&lt;/p&gt;

&lt;p&gt;I will be using a DigitalOcean Ubuntu Droplet for this demo. If you wish, you can use my affiliate code to get &lt;a href="https://m.do.co/c/2a9bba940f39"&gt;free $100 DigitalOcean credit&lt;/a&gt; to spin up your own servers!&lt;/p&gt;

&lt;p&gt;If you do not have that yet, you can follow the steps from this tutorial on how to do that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/bobbyiliev/how-to-install-laravel-on-digitalocean-with-1-click"&gt;How to Install Laravel on DigitalOcean with 1-Click&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or you could use this awesome script to do the installation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devdojo.com/episode/laravel-on-digital-ocean-with-larasail"&gt;LaraSail&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#introductin-to-github-actions"&gt;
  &lt;/a&gt;
  Introductin to GitHub Actions
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; allow you to automate your workflow. Thanks to GitHub Actions we basically have a built in CI/CD tool directly into GitHub.&lt;/p&gt;

&lt;p&gt;If you have never used GitHub Actions, I would recommend going through this short video here:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/GqzaCZyUlzE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#automatically-run-your-pestphp-tests"&gt;
  &lt;/a&gt;
  Automatically Run your PestPHP tests
&lt;/h1&gt;

&lt;p&gt;First let's start by creating the following directories in your GitHub project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir .github/workflows/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create a yaml file in that directory called &lt;code&gt;tests.yaml&lt;/code&gt; for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch .github/workflows/tests.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And add the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Test Laravel Github action
on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: [ '8.0','7.4' ]
        dependency-stability: [ prefer-stable ]

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
    - uses: actions/checkout@v2
    - name: Install PHP versions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
    - name: Get Composer Cache Directory 2
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
     - uses: actions/cache@v2
      id: actions-cache
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
     - name: Cache PHP dependencies
      uses: actions/cache@v2
      id: vendor-cache
      with:
        path: vendor
        key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      if: steps.vendor-cache.outputs.cache-hit != 'true'
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Run Migrations
# Set environment
      env:
        SESSION_DRIVER: array
        DB_CONNECTION: sqlite
        DB_DATABASE: ":memory:"

      run: php artisan migrate

    - name: Show dir
      run: pwd
    - name: PHP Version
      run: php --version

# Code quality

    - name: Execute tests (Unit and Feature tests) via PestPHP
# Set environment
      env:
        SESSION_DRIVER: array
        DB_CONNECTION: sqlite
        DB_DATABASE: ":memory:"

      run: vendor/bin/pest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With that, everytime now anyone submits a PR to your &lt;code&gt;main&lt;/code&gt; or &lt;code&gt;develop&lt;/code&gt; branches, your Pest PHP test will be automatically triggered!&lt;/p&gt;

&lt;p&gt;The above uses SQLite, let's see how we could use MySQL instead!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#automatically-run-your-pestphp-tests-with-mysql"&gt;
  &lt;/a&gt;
  Automatically Run your PestPHP tests with MySQL
&lt;/h1&gt;

&lt;p&gt;In some cases, you might also want to use MySQL rather than SQLite when running your tests. This could happen in case that you have some more complex queries not using Laravel Eloquent and you are seeing incorrect results when using SQLite.&lt;/p&gt;

&lt;p&gt;In order to do that, you could use the following configuration.&lt;/p&gt;

&lt;p&gt;First create the following directories in your GitHub project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir .github/workflows/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then create a yaml file called &lt;code&gt;tests.yaml&lt;/code&gt; for example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch .github/workflows/tests.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And add the following content:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Laravel Tests
on:
  pull_request:
    branches:
      - main

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
# Service container Mysql mysql
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image (also with version)
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE:  testing
        ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: &amp;gt;-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: [ '7.4' ]
        dependency-stability: [ prefer-stable ]

    name: P${{ matrix.php-versions }} - L${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
    - uses: actions/checkout@v2
    - name: Install PHP versions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
    - name: Get Composer Cache Directory 2
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - uses: actions/cache@v2
      id: actions-cache
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - name: Cache PHP dependencies
      uses: actions/cache@v2
      id: vendor-cache
      with:
        path: vendor
        key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      if: steps.vendor-cache.outputs.cache-hit != 'true'
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Create storage folders
      run: mkdir -p storage/framework/{sessions,views,cache}
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Show dir
      run: pwd
    - name: PHP Version
      run: php --version

# Code quality
    - name: Execute tests (Unit and Feature tests) via PestPHP
# Set environment
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: testing
        DB_PORT: 33306
        DB_USER: root
        DB_PASSWORD: secret
      run: |
          php artisan key:generate
          vendor/bin/pest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above example uses PHP 7.4 with MySQL 5.7. Make sure to adjust this so that this matches your needs.&lt;/p&gt;

&lt;p&gt;How the action gets triggered is specified in the very beginning of the file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;name: Laravel Tests
on:
  pull_request:
    branches:
      - main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First we specify the name, and then we specify that we want to run this action &lt;code&gt;on&lt;/code&gt; a &lt;code&gt;pull_request&lt;/code&gt; for the &lt;code&gt;main&lt;/code&gt; branch. Make sure to adjust the name of the branch so that it matches your setup.&lt;/p&gt;

&lt;p&gt;Then we specify that we want to to use a MySQL container and we wait for the service to be up and running before we proceed.&lt;/p&gt;

&lt;p&gt;If you wanted to see this in action, make sure to check out this repository here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/thedevdojo/wave"&gt;PestPHP GitHub Actions Demo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It includes some Pest tests along with a GitHub action that runs on each pull request towards the &lt;code&gt;main&lt;/code&gt; branch.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#github-actions-configurator-for-your-laravel-application"&gt;
  &lt;/a&gt;
  GitHub Actions configurator for your Laravel Application
&lt;/h1&gt;

&lt;p&gt;If you are getting overwhelmed looking at the GitHub actions yaml files, do not worry, there is an amazing open-source tool created by &lt;a href="https://twitter.com/RmeetsH"&gt;Roberto B&lt;/a&gt; that let's you generate your GitHub Actions yaml for your Laravel Application automatically based on your exact needs:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n5CWcf4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/GnknXuF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n5CWcf4x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgur.com/GnknXuF.png" alt="GitHub Actions configurator for your Laravel Application"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find the tool here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://ghygen.hi-folks.dev/"&gt;GitHub Actions configurator for your Laravel Application&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use the UI to select the features that you need and it will automatically built up the YAML file for you!&lt;/p&gt;

&lt;p&gt;Make sure to support &lt;a href="https://twitter.com/RmeetsH"&gt;Roberto B&lt;/a&gt; by following him on Twitter!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;If you want to learn more about PestPHP, I would recommend going through this crash course here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devdojo.com/course/introducing-pest"&gt;Introducing Pest - An elegant PHP testing framework&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you like PestPHP make sure to star it on GitHub:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/pestphp/pest"&gt;https://github.com/pestphp/pest&lt;/a&gt;&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>php</category>
      <category>github</category>
      <category>testing</category>
    </item>
    <item>
      <title>Have you ever wondered how YouTube, Netflix shows you video/movie recommendations?</title>
      <author>Sameer Arora</author>
      <pubDate>Sat, 18 Sep 2021 06:43:17 +0000</pubDate>
      <link>https://dev.to/samfreelancer/have-you-ever-wondered-how-youtube-netflix-shows-you-video-movie-recommendations-4ob</link>
      <guid>https://dev.to/samfreelancer/have-you-ever-wondered-how-youtube-netflix-shows-you-video-movie-recommendations-4ob</guid>
      <description>&lt;p&gt;Credit: &lt;a href="https://www.mentorif.com/ment/pradipnichite9b7893bd7a?utm_source=blog&amp;amp;utm_medium=Devio&amp;amp;utm_campaign=be-or-ee&amp;amp;utm_id=be-or-ee"&gt;&lt;strong&gt;Pradip Nichte&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the techniques used to build a recommendations system is called collaborative filtering.&lt;/p&gt;

&lt;p&gt;The idea behind collaborative filtering is that if User A and User B have watched some movies in common, they have similar preferences, and User A is more likely to watch films seen by user B than any random user preferences.&lt;/p&gt;

&lt;p&gt;But how do we find similar users for a given user?&lt;/p&gt;

&lt;p&gt;We can represent users and movies using a matrix (or spreadsheet).&lt;br&gt;
Each row represents each user, and each column represents each movie.&lt;/p&gt;

&lt;p&gt;Each cell in the matrix is 1 or 0, which tells us whether the user has watched a movie or not.&lt;/p&gt;

&lt;p&gt;One way to calculate the similarity between two users (rows) is using dot product or cosine similarity.&lt;/p&gt;

&lt;p&gt;Let's pick user A; once we compare the user A row with every row, we can find the most similar row; let's call it User X.&lt;/p&gt;

&lt;p&gt;Then pick a movie from User X which A has not watched yet and Show it to user A.&lt;/p&gt;

&lt;p&gt;Can we improve the above technique?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Instead of finding one similar user, we can see the top 5 similar users and show one movie from each user or recommending a film seen by all five similar users and not watched by User A.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Represent each cell in the matrix by rating (1 to 5) given by the user for that movie instead of 1 or 0.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Since the system will be having millions of users and 1000s of movies, the matrix will become huge, we can use matrix factorization techniques to represent users and movies efficiently.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>datascience</category>
      <category>machinelearning</category>
      <category>python</category>
      <category>java</category>
    </item>
    <item>
      <title>An Overview and Setup of TypeScript as a Complete Beginner</title>
      <author>Aman Ojha</author>
      <pubDate>Sat, 18 Sep 2021 06:27:41 +0000</pubDate>
      <link>https://dev.to/coderaman07/an-overview-and-setup-of-typescript-as-a-complete-beginner-450h</link>
      <guid>https://dev.to/coderaman07/an-overview-and-setup-of-typescript-as-a-complete-beginner-450h</guid>
      <description>&lt;p&gt;In this article, we are going to have an Overview and Setup of TypeScript in our Local Environment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#typescript"&gt;
  &lt;/a&gt;
  TypeScript
&lt;/h2&gt;

&lt;p&gt;It's an Open Source Language that builds onto JavaScript by adding some Extra-features, also known as Superset as JavaScript.&lt;/p&gt;

&lt;p&gt;It can also be referred to as &lt;strong&gt;JavaScript + Some Other Features&lt;/strong&gt; &lt;em&gt;(Static Types being the Main Reason)&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-typescript-is-different"&gt;
  &lt;/a&gt;
  How TypeScript is different??
&lt;/h3&gt;

&lt;p&gt;TypeScript is having many different types of benefits listed below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It Offers additional Features to JavaScript with Static Types.&lt;/li&gt;
&lt;li&gt;Using types is completely Optional.&lt;/li&gt;
&lt;li&gt;Compiles Down to Regular JavaScript.&lt;/li&gt;
&lt;li&gt;Can also be used for Front-End JavaScript as well as Backend with Node.JS.&lt;/li&gt;
&lt;li&gt;Includes Most features from ES6, ES7 ( Classes, Arrow Functions, etc. ).&lt;/li&gt;
&lt;li&gt;Types from 3rd Party Libraries can be added with Type Definitions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So these were the basic TypeScript Benefits which a Vanilla TypeScript can Offer.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#types-of-programming-language"&gt;
  &lt;/a&gt;
  Types Of Programming Language
&lt;/h3&gt;

&lt;p&gt;In Programming there are Two Types of Programming Languages: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dynamically Typed Language&lt;/li&gt;
&lt;li&gt;Statically Typed Language&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#dynamically-typed-language"&gt;
  &lt;/a&gt;
  &lt;em&gt;Dynamically Typed Language&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;In this, the Types are associated with run time values and are not named Explicitly in your Code.&lt;/p&gt;

&lt;p&gt;Example of Dynamically Typed Language :- JavaScript, Python, Ruby, PHP&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#statically-typed-language"&gt;
  &lt;/a&gt;
  &lt;em&gt;Statically Typed Language&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;In this, the Types are Explicitly assigned to the variables, functions, parameters, return values, etc.&lt;/p&gt;

&lt;p&gt;Example of Statically Typed Language:- Java, C, C++, Rust, Go.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-whats-the-pros-and-cons-of-using-typescript-instead-of-regular-javascript"&gt;
  &lt;/a&gt;
  But what's the Pro's and Cons of using TypeScript instead of Regular JavaScript
&lt;/h3&gt;

&lt;p&gt;So there are many Pros and Cons of Using TypeScript instead of Regular JavaScript&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-pros-are-listed-below-"&gt;
  &lt;/a&gt;
  The Pros are listed Below :-
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;It is More Robust than Regular JavaScript&lt;/li&gt;
&lt;li&gt;Easily Spot Bugs&lt;/li&gt;
&lt;li&gt;Predictability&lt;/li&gt;
&lt;li&gt;Readability&lt;/li&gt;
&lt;li&gt;Popular&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever something good comes there comes some bad things with it also.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#the-cons-are-listed-below-"&gt;
  &lt;/a&gt;
  The Cons are listed Below :-
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;More Code to Write.&lt;/li&gt;
&lt;li&gt;More to Learn&lt;/li&gt;
&lt;li&gt;Required Compilations&lt;/li&gt;
&lt;li&gt;Not True Static Types ( According to Some Programmers )&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#compiling-typescript"&gt;
  &lt;/a&gt;
  Compiling TypeScript
&lt;/h3&gt;

&lt;p&gt;So Compiling TypeScript is one of the major head-ache you must be facing while working with TypeScript, So below are the benefits you might think that will come in handy while working with TypeScript.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TypeScript uses &lt;code&gt;.ts&lt;/code&gt; and &lt;code&gt;.tsx&lt;/code&gt; extension.&lt;/li&gt;
&lt;li&gt;TSC &lt;em&gt;( TypeScript Compiler )&lt;/em&gt; is used to Compile Down &lt;code&gt;.ts&lt;/code&gt; or &lt;code&gt;.tsx&lt;/code&gt; files Down to &lt;code&gt;.js&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;TSC can watch the files and report the Errors at the Compile Time.&lt;/li&gt;
&lt;li&gt;It may include &lt;code&gt;.ts&lt;/code&gt; compilation by default.&lt;/li&gt;
&lt;li&gt;Most IDE's have great support for TypeScript.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;tsconfig.json&lt;/code&gt; is used to configure how TypeScript will work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So Lets Code it Down the Real JavaScript ( Not with the Slides but the Actual Code ).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-install-typescript"&gt;
  &lt;/a&gt;
  Let's Install TypeScript
&lt;/h2&gt;

&lt;p&gt;Since I am on Windows so Let's Install it Globally as TypeScript is necessary part of all of my Projects.&lt;/p&gt;

&lt;p&gt;So Let's Try Hitting this Command&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-windows-gt-raw-npm-i-global-typescript-endraw-"&gt;
  &lt;/a&gt;
  In Windows =&amp;gt; &lt;code&gt;npm i --global typescript&lt;/code&gt;
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#in-mac-os-gt-raw-sudo-npm-i-global-typescript-endraw-"&gt;
  &lt;/a&gt;
  In Mac OS =&amp;gt; &lt;code&gt;sudo npm i --global typescript&lt;/code&gt;
&lt;/h3&gt;

&lt;p&gt;You can try the Same Command as of Mac OS in &lt;strong&gt;Linux&lt;/strong&gt; also I'm not Sure what command will be working for Linux.&lt;/p&gt;

&lt;p&gt;After Successful Installation of TypeScript you can run this command to check if it has been successfully installed or not.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsc -v&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;the output should be something like &lt;code&gt;Version 4.4.2&lt;/code&gt; as of on Date &lt;code&gt;10 September 2021&lt;/code&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#so-that-was-a-basic-setup-of-typescript-for-your-local-environment"&gt;
  &lt;/a&gt;
  So that was a Basic Setup of TypeScript for your local Environment.
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#now-lets-write-javascript-type-safety-i-mean-typescript"&gt;
  &lt;/a&gt;
  Now Let's Write JavaScript + Type Safety I mean TypeScript
&lt;/h4&gt;

&lt;p&gt;After Successful Installation Create a New Directory Named as typescript Learning ( Name it whatever do you like )&lt;/p&gt;

&lt;p&gt;then Create a New file name should be something like &lt;code&gt;&amp;lt;desiedNameHere&amp;gt;.ts&lt;/code&gt; ( Enter any name you want in place of 'desiedNameHere')&lt;/p&gt;

&lt;p&gt;So let's write normal JavaScript here&lt;br&gt;
&lt;code&gt;let id = 5;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and then fireup your Terminal and you can now type this command to convert Regular JavaScript to Regular JavaScript ( as of for now ).&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsc filename.ts&lt;/code&gt; ( file type is not mandatory just specify the name )&lt;/p&gt;

&lt;p&gt;What it will basically do is compiles your Code available in &lt;code&gt;.ts&lt;/code&gt; format filetype to Regular JavaScript to &lt;em&gt;ES5&lt;/em&gt; ( which is set by default ).&lt;/p&gt;

&lt;p&gt;Now you can check the compiled down JavaScript Code in the File Named as the same name but with &lt;code&gt;.js&lt;/code&gt; extension.&lt;/p&gt;

&lt;p&gt;Now here you can see that the TypeScript Compiles the Code to &lt;em&gt;ES5&lt;/em&gt; which is set by default and because the let and arrow functions were released with &lt;em&gt;ES6&lt;/em&gt; so it will not make use of that &lt;em&gt;( for now )&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;You can also make this TypeScript Compiler to watch this Code and Compile any of the TypeScript code we write down to Regular JavaScript.&lt;/p&gt;

&lt;p&gt;You can do this by hitting this command&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsc --watch &amp;lt;fileName&amp;gt;.ts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So For Now let's Try to convert the TypeScript Code to ES6 JavaScript&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-tsconfigjson"&gt;
  &lt;/a&gt;
  Setting up tsconfig.json
&lt;/h2&gt;

&lt;p&gt;Let's setup the TypeScript and edit the way how TypeScript Code will compile down the typescript code to Regular JavaScript.&lt;/p&gt;

&lt;p&gt;To Setup you must first hit this command in your Terminal&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsc --init&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;this will basically create a tsconfig.json file and will let you any of the Setting which might be usefull in TypeScript and the TypeScript will work on based on this file only.&lt;/p&gt;

&lt;p&gt;So now Open up you tsconfig.json and find out where &lt;em&gt;target&lt;/em&gt; is written &lt;em&gt;( Basically you will find it on Line number 7 )&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Change the Target to &lt;strong&gt;&lt;em&gt;ES6&lt;/em&gt;&lt;/strong&gt; if you want.&lt;/p&gt;

&lt;p&gt;So on my Preference I try to Locate my Compiled Regular JavaScript to another Directory and TypeScript files to another Directory.&lt;/p&gt;

&lt;p&gt;So I am gonna change the outDir setting &lt;em&gt;(you will find that on Line Number 17 )&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;and Change that setting to &lt;code&gt;./dist&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;and also Add a New Line after that and make it as rootDir and set it's value to &lt;code&gt;./src&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Root Directory is basically to get the Source TypeScript files.&lt;/p&gt;

&lt;p&gt;So Now move t=your previous TypeScript file inside of a Directory Named as &lt;code&gt;src&lt;/code&gt; where the TypeScript compiler will look TypeScript files for.&lt;/p&gt;

&lt;p&gt;and Now Let's Compile the TypeScript file, but this time we will compile all of them without specifying any particular File.&lt;/p&gt;

&lt;p&gt;Hit this command in your Terminal&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tsc --watch&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;What this Command will do is basically just watches every files inside of the SRC directory and will convert them to Regular JavaScript if it found them to be a TypeScript file.&lt;/p&gt;

&lt;p&gt;you can also just run &lt;code&gt;tsc&lt;/code&gt; that will just compile the Files and will not watch for any further change in them.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;So for Now that was a basic Setup for Vanilla TypeScript ( as my mentor Said ) and this was a basic file Structure of TypeScript for a Complete beginner.&lt;/p&gt;

&lt;p&gt;Now we will get into TypeScript more deeper but that's for some another Article.&lt;/p&gt;

&lt;p&gt;Until then I will be Write the Dev log at this platform only just be sure to check this up. &lt;/p&gt;

&lt;p&gt;BTW you can Subscribe to my Official Blog Platform &lt;a href="https://codeitdown.ml"&gt;codeitdown&lt;/a&gt; and get yourself Subscribed I will make sure whenever I get a Good Article over there I will Personally E-mail you for that without any Spam Mail.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>'1' - '1' / 2 = ? , Can you find the answer ? </title>
      <author>Heru Hartanto</author>
      <pubDate>Sat, 18 Sep 2021 06:26:40 +0000</pubDate>
      <link>https://dev.to/elukuro/1-1-2-can-you-find-the-answer-3p9o</link>
      <guid>https://dev.to/elukuro/1-1-2-can-you-find-the-answer-3p9o</guid>
      <description>&lt;p&gt;I just found out some 🙀 funny things about javascript, If someone able to explain I really appreciate&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;A&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// output 'AA'&lt;/span&gt;

&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// output '11'&lt;/span&gt;

&lt;span class="c1"&gt;// Okay that make sense but ...&lt;/span&gt;

&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="c1"&gt;// output 12 &lt;/span&gt;


&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="c1"&gt;// output 10.5&lt;/span&gt;

&lt;span class="c1"&gt;// It's start getting weird then ....&lt;/span&gt;


&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; 
&lt;span class="c1"&gt;// output 0&lt;/span&gt;

&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="c1"&gt;// output 0.5&lt;/span&gt;

&lt;span class="c1"&gt;// It's correct , but why ? &lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Tailwind group hover, the state you missed</title>
      <author>Chris Bongers</author>
      <pubDate>Sat, 18 Sep 2021 06:25:02 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/tailwind-group-hover-the-state-you-missed-dif</link>
      <guid>https://dev.to/dailydevtips1/tailwind-group-hover-the-state-you-missed-dif</guid>
      <description>&lt;p&gt;Hover states are an essential part of web development and making those final UI tweaks.&lt;/p&gt;

&lt;p&gt;If you worked with Tailwind, you might know the &lt;code&gt;hover&lt;/code&gt; states, which are amazing, but they never included sub-selectors.&lt;/p&gt;

&lt;p&gt;This is something the &lt;code&gt;group-hover&lt;/code&gt; class can help us with!&lt;/p&gt;

&lt;p&gt;You can see the end result of what we'll be building today in the CodePen below.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/OJgpqbr?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-group-hover-effect"&gt;
  &lt;/a&gt;
  Tailwind group hover effect
&lt;/h2&gt;

&lt;p&gt;Let's first take a look at how this effect works.&lt;/p&gt;

&lt;p&gt;It needs to have a &lt;code&gt;group&lt;/code&gt; class on the parent element.&lt;br&gt;
Then we can add hover classes to children of this group element by using the &lt;code&gt;group-hover:&lt;/code&gt; class.&lt;/p&gt;

&lt;p&gt;Let's try and make a super simple effect, where we have a div with two spans inside. On hover, each span will get its own color.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"group"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"group-hover:text-yellow-500 text-black"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"group-hover:text-red-500 text-black"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;World&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Try it out in the following CodePen demo:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/rebelchris/embed/KKqWEod?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-hover-card-with-tailwind-group-hover"&gt;
  &lt;/a&gt;
  Creating a hover card with Tailwind group hover
&lt;/h2&gt;

&lt;p&gt;Let's look at how we can create the card hover effect like the top demo shows.&lt;/p&gt;

&lt;p&gt;This uses the Tailwind square div effect, as seen in the article about &lt;a href="https://daily-dev-tips.com/posts/tailwind-css-responsive-square-divs/"&gt;Tailwind CSS responsive square divs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But let's sketch the high-level overview of what we'll be needing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Div element [Parent]&lt;/li&gt;
&lt;li&gt;- Child element [Background black layer]&lt;/li&gt;
&lt;li&gt;- Child element [Title element]&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These two child elements are only visible once we hover over the parent div.&lt;/p&gt;

&lt;p&gt;In the basic structure, it will look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"relative group flex justify-center w-1/2 h-0 bg-center bg-cover border-2 border-gray-300 shadow-lg pb-1-2 rounded-xl bg-image"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute bg-black w-full h-full rounded-xl bg-opacity-25 opacity-0 group-hover:opacity-100"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute p-6 text-2xl tracking-widest text-white uppercase -translate-y-1/2 bg-black bg-opacity-75 opacity-0 top-1/2 rounded-xl group-hover:opacity-100"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Tadaa 🎉
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will give us the desired effect and style of the elements, so everything will line up nicely.&lt;/p&gt;

&lt;p&gt;However, at this point, we get a pretty static flicker effect. Let's change that by adding the following two classes to our child elements: &lt;code&gt;transform transition-opacity&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;These will make sure we animate the opacity transition.&lt;/p&gt;

&lt;p&gt;You might have spotted that the black background div is an absolute positioned element, using the full width and height.&lt;br&gt;
We use a center hack for the text layer since it's not the full size of the div.&lt;br&gt;
This hack means we place the element 50% from the top and then offset the y-axis by -50%, making sure the element is perfectly centered.&lt;/p&gt;

&lt;p&gt;I hope you learned something new, as this group-hover is just a fantastic addition to Tailwind 🎉.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>css</category>
    </item>
    <item>
      <title>Simple Search Tool In HTML and JavaScript. No Server Needed!</title>
      <author>Lucretius Biah</author>
      <pubDate>Sat, 18 Sep 2021 06:23:50 +0000</pubDate>
      <link>https://dev.to/biah/simple-search-tool-in-html-and-javascript-no-server-needed-1hme</link>
      <guid>https://dev.to/biah/simple-search-tool-in-html-and-javascript-no-server-needed-1hme</guid>
      <description>&lt;p&gt;
    As I was going to make a search tool for my website, I decided to document how it could be done client-side without the use of a server.
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-we-going-to-make"&gt;
  &lt;/a&gt;
  What are we going to make?
&lt;/h2&gt;

&lt;p&gt;We are going to make a simple tool which will help us to find articles on &lt;a href="https://dev.to"&gt;dev.to&lt;/a&gt; based on the title we provide 🆒. We will use a simple lightweight javascript libary called &lt;a href="https://github.com/bvaughn/js-search"&gt;js-search&lt;/a&gt;.&lt;br&gt;
For the data, we will fetch it from &lt;a href="https://dev.to"&gt;dev.to&lt;/a&gt; using their API which will be returned in a JSON format.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#designing-the-html-and-css"&gt;
  &lt;/a&gt;
  Designing the HTML and CSS
&lt;/h2&gt;

&lt;p&gt;So we need to write down our HTML to make our page look nice, right? Yeah.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"en"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"UTF-8"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1.0"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Dev.to Article Finder&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Roboto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;center&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;#form-box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"search"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;80%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;15px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;20px&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.title&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#0F6EEF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.title&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;inherit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.description&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;gray&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nf"&gt;#results&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;flex-flow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;align-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.post&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#8888&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.post&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
      &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;#D8D8D8&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.cover_image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;150px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;@media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"search"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nc"&gt;.post&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;



  &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Dev.to Article Finder&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"form-box"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"search"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter the title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"results"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above is the HTML for our simple project.&lt;br&gt;
Your HTML page should look like this&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IYxFs8Ss--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kudadam.sirv.com/blog/search_tool_html_javascript/preview.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IYxFs8Ss--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://kudadam.sirv.com/blog/search_tool_html_javascript/preview.PNG" alt="Preview of search tool"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#now-to-the-javascript"&gt;
  &lt;/a&gt;
  Now, to the JavaScript
&lt;/h2&gt;

&lt;p&gt;Below the body tag, create a script tag and insert the following code inside&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/npm/js-search@2.0.0/dist/umd/js-search.min.js"&lt;/span&gt; &lt;span class="na"&gt;integrity=&lt;/span&gt;&lt;span class="s"&gt;"sha256-LD9UsSATk+xTzAbk8nD2gA2bjHKvetXtCMDAFkM2K5Q="&lt;/span&gt; &lt;span class="na"&gt;crossorigin=&lt;/span&gt;&lt;span class="s"&gt;"anonymous"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;get_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://dev.to/api/articles?per_page=900&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;


  &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;load&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;get_data&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;search&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;JsSearch&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;id&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addIndex&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addDocuments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input[type='search']&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;input&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
          &lt;span class="s2"&gt;`
          &amp;lt;div class='post'&amp;gt;
            &amp;lt;p class='title'&amp;gt;&amp;lt;a href="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
            &amp;lt;p class='description'&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/p&amp;gt;
          &amp;lt;/div&amp;gt;
          `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#results&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

      &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So in the first script tag, we imported the search-js module.&lt;br&gt;
Then, in the next script tag, we defined an asynchronous function called &lt;code&gt;get_data()&lt;/code&gt;, this function makes a fetch request to this URL (&lt;a href="https://dev.to/api/articles?per_page=900"&gt;https://dev.to/api/articles?per_page=900&lt;/a&gt;) and it returns a list of 900 dev.to articles in JSON format.&lt;br&gt;
To the next part, we add an event listener to the load event of the page, when the event is fired, we retrieve the articles from the &lt;code&gt;get_data()&lt;/code&gt; function, then we create a new &lt;a href="https://github.com/bvaughn/js-search"&gt;search-js&lt;/a&gt; instance. The constructor of search-js requires an identifier so we use the &lt;code&gt;id&lt;/code&gt; of the articles. The &lt;code&gt;search.addIndex('title')&lt;/code&gt; tells search-js to search for our query in the titles only, then finally, &lt;code&gt;search.addDocuments&lt;/code&gt; is used to add the articles JSON data to the search-js instance. &lt;/p&gt;

&lt;p&gt;To the next part, we added an event listener to the input event of the search box, on every input, we run a function to get the search results, &lt;code&gt;search.search(value)&lt;/code&gt; takes the user's input and tries to search for it in the JSON we provided to it earlier, it then returns a new array based on the search results.&lt;br&gt;
We then iterate over each data item and create HTML elements for them. Finally, we insert the HTML elements into the HTML documents.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#preview-of-the-project"&gt;
  &lt;/a&gt;
  Preview Of The Project
&lt;/h2&gt;

&lt;p&gt;So if you followed the tutorial correctly, your page should be working and looking like the gif bellow&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fRXQ1P8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://kudadam.sirv.com/blog/search_tool_html_javascript/preview.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fRXQ1P8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://kudadam.sirv.com/blog/search_tool_html_javascript/preview.gif" alt="Preview of the code"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>search</category>
    </item>
    <item>
      <title>6 Tips and Tricks Every Developer Should Know in Visual Studio Code 🤩</title>
      <author>Zahab Kakar</author>
      <pubDate>Sat, 18 Sep 2021 06:16:23 +0000</pubDate>
      <link>https://dev.to/zahab/6-tips-and-tricks-every-developer-should-know-in-visual-studio-code-48mo</link>
      <guid>https://dev.to/zahab/6-tips-and-tricks-every-developer-should-know-in-visual-studio-code-48mo</guid>
      <description>&lt;p&gt;One of the most common text editors used by developers is Visual Studio Code. Microsoft created it to be the first cross-platform programming tool in the Visual Studio family that supported OS, Linux, and Windows .Visual Studio Code is by far one of the most popular code editors for web, mobile, and hardware developers.&lt;/p&gt;

&lt;p&gt;In this article, we will talk about the most essential tips every developer should know in VS Code&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#go-to-definition"&gt;
  &lt;/a&gt;
  Go to Definition
&lt;/h3&gt;

&lt;p&gt;You may come across a lot of variables or methods that you are unfamiliar with when programming. By selecting the “Go to Definition” option from the right-click menu of the required variable or method in Visual Studio Code, you may quickly get to the definition.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#zen-mode"&gt;
  &lt;/a&gt;
  Zen Mode
&lt;/h3&gt;

&lt;p&gt;It's a view with no distractions. All of your window's superfluous toolboxes and bars will be gone, allowing you to concentrate just on your code. To use zen mode simple go to View &amp;gt; Appearance &amp;gt; Toggle Zen Mode&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--khcRf-cO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631944094542/wHade5sNT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--khcRf-cO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631944094542/wHade5sNT.png" alt="Screenshot 2021-09-18 at 06.48.08.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#split-view"&gt;
  &lt;/a&gt;
  Split view
&lt;/h3&gt;

&lt;p&gt;Go to the split view if you're skilled at multitasking and are working on two separate files of the same project at the same time, or if you need to compare two files. You can open as many editors as you like side by side vertically or horizontally. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FmLlOfgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631944391725/YBsuAWhiV.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FmLlOfgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631944391725/YBsuAWhiV.png" alt="Screenshot 2021-09-18 at 06.53.05.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-open"&gt;
  &lt;/a&gt;
  Quick Open
&lt;/h3&gt;

&lt;p&gt;If you want to open a file quickly without using sidebar , you can simply use quick open. To open quick open press &lt;code&gt;cmd&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt; on Mac and for Windows / Linux you can use &lt;code&gt;ctrl&lt;/code&gt; + &lt;code&gt;p&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z6jHvO-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631944955533/V1pnrVtIj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z6jHvO-e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631944955533/V1pnrVtIj.png" alt="Screenshot 2021-09-18 at 07.02.31.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#command-palette"&gt;
  &lt;/a&gt;
  Command Palette
&lt;/h3&gt;

&lt;p&gt;The command palette, allows you to quickly access any registered command, including those offered by extension. In addition, if a key binding is connected with a specific command, it will be presented in the type-to-search drop-down list.&lt;/p&gt;

&lt;p&gt;You can open Command Palette by pressing &lt;code&gt;cmd&lt;/code&gt;+&lt;code&gt;shift&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt; in Mac and &lt;code&gt;ctrl&lt;/code&gt;+&lt;code&gt;shift&lt;/code&gt;+&lt;code&gt;p&lt;/code&gt; for Windows / Linux.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0zy9gK65--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631945249539/KCyyopCSp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0zy9gK65--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631945249539/KCyyopCSp.png" alt="Screenshot 2021-09-18 at 07.07.22.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#multi-cursor-selection"&gt;
  &lt;/a&gt;
  Multi cursor selection
&lt;/h3&gt;

&lt;p&gt;You may utilise multi-cursor editing to modify several lines of text in various areas of your document. This function allows you to add, modify, or remove text by using several cursors in separate locations.&lt;/p&gt;

&lt;p&gt;You can do this by clicking anywhere in your text document while holding down the Alt or Option keys on your keyboard. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vS1-Avf7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631944700525/wPRw_UpZm.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vS1-Avf7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631944700525/wPRw_UpZm.gif" alt="MayEK.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Gif by Nacimota from SOF&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>vscode</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Empowering everyone to code with Google's Eye</title>
      <author>Aniket Pal</author>
      <pubDate>Sat, 18 Sep 2021 06:15:20 +0000</pubDate>
      <link>https://dev.to/aniket762/empowering-everyone-to-code-with-google-s-eye-49e9</link>
      <guid>https://dev.to/aniket762/empowering-everyone-to-code-with-google-s-eye-49e9</guid>
      <description>&lt;p&gt;In India, more than 95% of schools don't allow smartphones in class. Being a Computer Science teacher becomes very difficult as it is nearly impossible to check the handwritten code of each student line by line. Also talking about India, in most schools, the students don't have the privilege to have one computer each for them so that they can run their code on their own. So it becomes a nightmare for the teacher as they might have to manually type each code of each student and run it or take the risk of missing out on bugs. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Aniket762/playground"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wDZPFF-R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fat1j412eoqvjtjucz4u.png" alt="Anybody can code with playground"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;While in recent times, the world has started moving towards Codelisation, being a good programmer is not easy it requires consistency, determination, problem-solving ability, and a lot more but, most importantly it requires you to get started. I did a small survey in my community and got to know more than 80% of them started properly coding after joining university and the major reason was lack of the personal computers and laptops. In developing countries, 3 out of 10 people have access to computers in comparison to 8 out of 10 people who have access to smartphones. Let's see how project playground solves this problem and empowers even someone from a remote village in India to start coding. &lt;/p&gt;

&lt;p&gt;To solve these issues, we came up with playground!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/Hjf1hoJF9Ww"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hTO23hH---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/dguy8qpzi/image/upload/v1631711774/Screenshot_2021-09-15_at_6.45.41_PM_ohjq08.png" alt="Playground demo in youtube"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-it-works"&gt;
  &lt;/a&gt;
  How it works 🤓
&lt;/h2&gt;

&lt;p&gt;Playground empowers everyone to write code. Write on any piece of paper, take a photo and upload it. Unlike humans, computers make mistakes so we have built a code editor where the code can be edited and finally with the click of submit button the code gets compiled. Not only does this empowers students to become better coders but also helps teachers in evaluation let's see how.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-we-built-it"&gt;
  &lt;/a&gt;
  How we built it 👨‍💻
&lt;/h2&gt;

&lt;p&gt;We used Next.js in the frontend and Node.js in the backend with MongoDB as our database. Next, we used the Google Vision API for scanning the image and retrieving the handwritten text. The handwritten text was displayed in a code editor with full syntax highlighting and available for currently two languages, c++ and python. When you click submit, we generated a new code file for the corresponding language and displayed it's output on the screen.&lt;/p&gt;




&lt;p&gt;Playground was built in &lt;a href="https://organize.mlh.io/participants/events/7161-teacher-s-hack"&gt;Teacher's Hack&lt;/a&gt; powered by &lt;a href="https://mlh.io/"&gt;MLH&lt;/a&gt; in which we were the overall winner but there are a lot of features we have planned and some which need the support of community.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9qNKQUdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4k4rd799ypj5j0vsmxu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9qNKQUdj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4k4rd799ypj5j0vsmxu.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next-for-playground"&gt;
  &lt;/a&gt;
  What's next for Playground 🔥
&lt;/h2&gt;

&lt;p&gt;Next, we want to increase the support by providing more options for languages like javascript, java, c and so on. We also want to increase the variety of questions varying through a variety of topics and difficulty levels. In addition to that, we plan to create a neural search framework that will allow us to filter the questions on the basis of topic and difficulty and help you find similar questions. Lastly, we wish to build our very own OCR model for text extraction. This will solve our problems of billing while using external models.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#support-us-to-empower-everyone"&gt;
  &lt;/a&gt;
  Support us to empower everyone 🚀
&lt;/h2&gt;

&lt;p&gt;Taking this prototype to production needs your help. The code is open-sourced and would love to see your contribution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check the &lt;a href="https://github.com/Aniket762/playground"&gt;Github Repo &lt;/a&gt; 😎&lt;/li&gt;
&lt;li&gt;Fork the Repository 🍴&lt;/li&gt;
&lt;li&gt;Star the Repo ⭐️&lt;/li&gt;
&lt;li&gt;Send the PR or create an issue 🤓&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Incase you like the  &lt;a href="https://github.com/Aniket762/playground"&gt;project &lt;/a&gt; and help our community and empower everyone to code drop a star to increase the visibility. And, if you want to discuss more you can connect with me on &lt;a href="https://www.linkedin.com/in/aniket-pal/"&gt;LinkedIn&lt;/a&gt; &lt;/p&gt;

</description>
      <category>opensource</category>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Day2 : Time Complexity and Big O Notation</title>
      <author>Atul Tripathi</author>
      <pubDate>Sat, 18 Sep 2021 06:06:34 +0000</pubDate>
      <link>https://dev.to/atultrp/time-complexity-and-big-o-notation-35l4</link>
      <guid>https://dev.to/atultrp/time-complexity-and-big-o-notation-35l4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#an-analogy-to-a-reallife-issue"&gt;
  &lt;/a&gt;
  An analogy to a real-life issue:
&lt;/h2&gt;

&lt;p&gt;This morning I wanted to eat some pizza; So, I asked my brother to get me some from Dominos, which is 3 km away.&lt;br&gt;
He got me the pizza, and I was happy only to realize it was too little for 29 friends who came to my house for a surprise visit!&lt;br&gt;
My brother can get 2 pizzas for me on his bike, but pizza for 29 friends is too huge of an input for him, which he cannot handle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YY6Izdvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21lgmq3r1alm3rua0zl9.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YY6Izdvy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/21lgmq3r1alm3rua0zl9.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-time-complexity"&gt;
  &lt;/a&gt;
  What is Time Complexity?
&lt;/h2&gt;

&lt;p&gt;Time Complexity is the study of the efficiency of algorithms. It tells us how much time is taken by an algorithm to process a given input. Let's understand this concept with the help of an example:&lt;/p&gt;

&lt;p&gt;Consider two developers Shubham and Rohan, who created an algorithm to sort ‘n’ numbers independently. When I made the program run for some input size n, the following results were recorded:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;No. of elements (n)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Time Taken By Shubham’s Algo&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;Time Taken By Rohan’s Algo&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;10 elements&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;90 ms&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;122 ms&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;70 elements&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;110 ms&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;124 ms&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;110 elements&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;180 ms&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;131 ms&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;1000 elements&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;2s&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;p&gt;&lt;span&gt;800 ms&lt;/span&gt;&lt;/p&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;We can see that at first, Shubham's algorithm worked well with smaller inputs; however, as we increase the number of elements, Rohan's algorithm performs much better.&lt;/p&gt;

&lt;p&gt;Quick Quiz: Who’s algorithm is better?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-complexity-sending-gta-5-to-a-friend"&gt;
  &lt;/a&gt;
  Time Complexity: Sending GTA 5 to a friend:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Imagine you have a friend who lives 5 km away from you. You want to send him a game. Since the final exams are over and you want him to get this 60 GB file worth of game from you. How will you send it to him in the shortest time possible?&lt;/li&gt;
&lt;li&gt;Note that both of you are using JIO 4G with a 1 Gb/day data limit.&lt;/li&gt;
&lt;li&gt;The best way would be to send him the game by delivering it to his house. Copy the game to a hard disk and make it reach him physically.&lt;/li&gt;
&lt;li&gt;Would you do the same for sending some small-sized game like MineSweeper which is in KBS of size? Of Course no, because you can now easily send it via the Internet.&lt;/li&gt;
&lt;li&gt;As the file size grows, the time taken to send the game online increases linearly – O(n) while the time taken by sending it physically remains constant. O(n0) or O(1).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#calculating-order-in-terms-of-input-size"&gt;
  &lt;/a&gt;
  Calculating Order in terms of Input Size:
&lt;/h2&gt;

&lt;p&gt;In order to calculate the order(time complexity), the most impactful term containing n is taken into account (Here n refers to Size of input). And the rest of the smaller terms are ignored.&lt;/p&gt;

&lt;p&gt;Let us assume the following formula for the algorithms in terms of input size n:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_-Ib5u6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ot7igy8jn4bnhk6f5xh.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_-Ib5u6x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ot7igy8jn4bnhk6f5xh.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here, we ignored the smaller terms in algo 1 and carried the most impactful term, which was the square of the input size. Hence the time complexity became n^2. The second algorithm followed just a constant time complexity.&lt;/p&gt;

&lt;p&gt;Note that these are the formulas for the time taken by their program.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-big-o"&gt;
  &lt;/a&gt;
  What is a Big O?
&lt;/h2&gt;

&lt;p&gt;Putting it simply, big O stands for ‘order of’ in our industry, but this is pretty different from the mathematical definition of the big O. Big O in mathematics stands for all those complexities our program runs in. But in industry, we are asked the minimum of them. So this was a subtle difference.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#visualizing-big-o"&gt;
  &lt;/a&gt;
  Visualizing Big O:
&lt;/h3&gt;

&lt;p&gt;If we were to plot O(1) and O(n) on a graph, they would look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cfixFQ_7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydfmg797o5809p6do1ay.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cfixFQ_7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ydfmg797o5809p6do1ay.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, this was the basics of time complexities. You don't have to worry about things passing you by. We’ll learn more deeply in the coming videos. For now, just stay with me.&lt;/p&gt;

&lt;p&gt;Thank you for being with me throughout the tutorial. I hope you enjoyed it. If you appreciate my work, please let your friends know about this post too. &lt;br&gt;
Reference from codewithharry.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>cpp</category>
      <category>computerscience</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Calculator Function using JavaScript 🚀🚀</title>
      <author>Shubham Jadhav</author>
      <pubDate>Sat, 18 Sep 2021 05:56:30 +0000</pubDate>
      <link>https://dev.to/dev_shubham/calculator-function-using-javascript-22n0</link>
      <guid>https://dev.to/dev_shubham/calculator-function-using-javascript-22n0</guid>
      <description>&lt;p&gt;How to create calculator function in JavaScript?? &lt;/p&gt;

&lt;p&gt;Yes, Today we are making a JavaScript function which is return some mathematics output.&lt;/p&gt;

&lt;p&gt;So, let's start with JavaScript code. &lt;/p&gt;

&lt;p&gt;(1) Let's make a JavaScript &lt;br&gt;
    file and give any name &lt;br&gt;
    here I am giving index.js.&lt;br&gt;
   (Note:- We must need a &lt;br&gt;
    html file to run our JS &lt;br&gt;
    code in browser) &lt;/p&gt;

&lt;p&gt;(2) Next step make a function &lt;br&gt;
    name calculator() in js &lt;br&gt;
    file. And pass three &lt;br&gt;
    parameter x, y and o. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pj12PI9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g5l2zr1u510bmeck09c6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pj12PI9s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g5l2zr1u510bmeck09c6.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(3) Parameters explanation :- &lt;br&gt;
     (a) x is a first number&lt;br&gt;
     (b) y is a second number &lt;br&gt;
     (c)  o is a operator&lt;/p&gt;

&lt;p&gt;(4) We are using switch &lt;br&gt;
    statement as shown in &lt;br&gt;
    following code. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aQoAXvNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6acqoya88gzk981vp31.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aQoAXvNq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g6acqoya88gzk981vp31.jpg" alt="img2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;(4) Let's understand above &lt;br&gt;
   code :-&lt;br&gt;
     (a) first pass o &lt;br&gt;
      parameter because it &lt;br&gt;
      will decide which &lt;br&gt;
      mathematics operation &lt;br&gt;
      will conduct. o is &lt;br&gt;
      String and x and y &lt;br&gt;
      number &lt;br&gt;
    (b) If any user call this &lt;br&gt;
     function by passing three &lt;br&gt;
     parameters like &lt;br&gt;
     calculator(2,3,'+') then &lt;br&gt;
     the first case is &lt;br&gt;
     executed.&lt;br&gt;
   (c)  When anyone not enter &lt;br&gt;
     valid input the it will &lt;br&gt;
     return "enter valid &lt;br&gt;
     numbers".&lt;/p&gt;

&lt;p&gt;(5) Let's call the above &lt;br&gt;
   function and see output. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IL0C0kkV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwk9bhif4vgcen50o1l0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IL0C0kkV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kwk9bhif4vgcen50o1l0.jpg" alt="img3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;👉 Happy Coding... &lt;br&gt;
🙏 Thank you for reading... &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
