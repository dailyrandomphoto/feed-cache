<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>highsea : color range generator for tailwindcss</title>
      <author>Nostro</author>
      <pubDate>Fri, 24 Dec 2021 17:10:08 +0000</pubDate>
      <link>https://dev.to/nostro/highsea-color-range-generator-for-tailwindcss-4kcb</link>
      <guid>https://dev.to/nostro/highsea-color-range-generator-for-tailwindcss-4kcb</guid>
      <description>&lt;p&gt;If you like using tailwindcss, every now and then you find yourself in the position of wanting to use a specific shade, but no default color in the tailwindcss range does fit the bill, it's too greenish or to reddish or too whatnot - it just doesn't work.&lt;/p&gt;

&lt;p&gt;From there, either you build your own range manually, or find some some code somewhere that generate them.&lt;/p&gt;

&lt;p&gt;I didn't find anything easy enough for my liking, so I built it.&lt;/p&gt;

&lt;p&gt;Here comes &lt;a href="https://highsea.nostrorom.com"&gt;highsea&lt;/a&gt;, it's very barebones for now in terms of features, but it nails the heart of the matter: generate a 50-900 range for any hue, while still fitting with the existing range should you want to combine custom and default on the same project.&lt;/p&gt;

&lt;p&gt;More features will be added later on; in the meantime enjoy ! &lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>webdev</category>
      <category>svelte</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Typewriter Effect with CSS and JS </title>
      <author>Walter Nascimento</author>
      <pubDate>Fri, 24 Dec 2021 17:03:47 +0000</pubDate>
      <link>https://dev.to/walternascimentobarroso/typewriter-effect-with-css-and-js-eob</link>
      <guid>https://dev.to/walternascimentobarroso/typewriter-effect-with-css-and-js-eob</guid>
      <description>&lt;p&gt;Using JavaScript and CSS let's create a typewriter effect&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h3&gt;

&lt;p&gt;First let's create the interface, we'll do something simple, using just HTML.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"elementEl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Walter Nascimento Barroso&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's just add an h1 with an id elementEl, so it's easier to identify in both css and javascript&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#elementEl&lt;/span&gt;&lt;span class="nd"&gt;::after&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'|'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;blink&lt;/span&gt; &lt;span class="m"&gt;0.7s&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="nb"&gt;blink&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In css we take elementEl and add a slash after our h1 and finally we add the blink effect so the added slash will be blinking &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#js"&gt;
  &lt;/a&gt;
  JS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;typeWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;textArray&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;textArray&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;letter&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;95&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;typeWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;typeWriter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;elementEl&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here in our javascript we just have a function called typeWriter, which receives our elementEl.&lt;/p&gt;

&lt;p&gt;Inside our function we have a constant that divides the text of our element letter by letter, then we clear the element content and loop through our array of letters and for each letter we add we wait for the time of 95 multiplied by the index and so we have a letter at a time added&lt;/p&gt;

&lt;p&gt;Finally, we call setInterval again to call our typeWrite function again.&lt;/p&gt;

&lt;p&gt;ready simple like that. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;See below for the complete working project.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/WalterNascimento/embed/NWdebJP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;if you can't see it &lt;a href="https://codepen.io/WalterNascimento/pen/NWdebJP"&gt;click here&lt;/a&gt; and see the final result&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#youtube"&gt;
  &lt;/a&gt;
  Youtube
&lt;/h2&gt;

&lt;p&gt;If you prefer to watch it, see the development on youtube.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/lBefm1GtsZA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h2&gt;

&lt;p&gt;If you have any questions, complaints or tips, you can leave them here in the comments. I will be happy to answer!&lt;/p&gt;

&lt;p&gt;😊😊 See you later! 😊😊&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#support-me"&gt;
  &lt;/a&gt;
  Support Me
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCXm0xRtDRrdnvkW24WmkBqA"&gt;Youtube - WalterNascimentoBarroso&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/walternascimentobarroso"&gt;Github - WalterNascimentoBarroso&lt;/a&gt;&lt;br&gt;
&lt;a href="https://codepen.io"&gt;Codepen - WalterNascimentoBarroso&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Git branching simplified</title>
      <author>Kumar Kalyan </author>
      <pubDate>Fri, 24 Dec 2021 16:13:45 +0000</pubDate>
      <link>https://dev.to/kumarkalyan/git-branching-simplified-4d22</link>
      <guid>https://dev.to/kumarkalyan/git-branching-simplified-4d22</guid>
      <description>&lt;p&gt;Hi everyone, hope you guys are doing well, today in this article I will be explaining the branching concept in git. If you love this article share with your friends and collogues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-branching"&gt;
  &lt;/a&gt;
  Why branching
&lt;/h2&gt;

&lt;p&gt;Branching helps you to work isolated in a team, Let's understand this thing with an example &lt;br&gt;
Imagine a team of 4 members a,b,c and d respectively are working on a particular project. Now a is given a task to fix a bug, b and c is given a task to implement a new feature and d is the team lead. Now a will create a branch named bugfix and b and c will work on different branches and after the work is done d will review all the code in different branches and in the and at last merge everyone's code to the master branch. Now a question may arouse that, why are we using branches here?  Suppose a has not fixed the bug properly mean while b and c have made the implementation properly so it become easier for the team lead to review everyone code and merge it to the master one (the code in the master branch is used for the production)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-create-a-branch-amp-what-happens-then"&gt;
  &lt;/a&gt;
  How to create a branch &amp;amp; what happens then
&lt;/h2&gt;

&lt;p&gt;I have a repository named github tutorial now let’s  see what happens when we create a branch use &lt;code&gt;git branch &amp;lt;branch name &amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;See now we are on the main branch having 3 files in it &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jKPMqJCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpr3w7wuagm8cpujcinz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jKPMqJCI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rpr3w7wuagm8cpujcinz.png" alt="the main branch" width="880" height="461"&gt;&lt;/a&gt;&lt;br&gt;
and we only have a single branch in our repo &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sHG3UFCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3cjnfdpsgubogamzyc8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sHG3UFCg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3cjnfdpsgubogamzyc8.png" alt="github image " width="880" height="422"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now lets create abranch name &lt;code&gt;addfeature&lt;/code&gt;&lt;br&gt;
So we will use &lt;code&gt;git branch addfeature&lt;/code&gt; followed by &lt;code&gt;git checkout addfeature&lt;/code&gt; shifting  to our  new branch  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4fKjKalY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gt0o99qgf9ayjemu2bg4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4fKjKalY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gt0o99qgf9ayjemu2bg4.png" alt="branch created" width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
Ok now we are on our feature branch now let’s add a new file to it &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bzpYeeUW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j8djv7tp825rkx0n95i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bzpYeeUW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9j8djv7tp825rkx0n95i.png" alt="addednewfile" width="880" height="474"&gt;&lt;/a&gt;&lt;br&gt;
 So now we have added a new file, now let’s commit and push it &lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wILBWGub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6f1eo187dmz2v49ego6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wILBWGub--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v6f1eo187dmz2v49ego6.png" alt="added commit" width="880" height="469"&gt;&lt;/a&gt;&lt;br&gt;
 Now use &lt;code&gt;git push --set-upstream origin addfeature&lt;/code&gt; to set the remote branch to &lt;code&gt;addfeature&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2FoUJkM7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiuuv8ppcl4dstv4amt3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2FoUJkM7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kiuuv8ppcl4dstv4amt3.png" alt="push" width="880" height="429"&gt;&lt;/a&gt;&lt;br&gt;
see we have added a file to our add feature branch and now we are getting an option for &lt;code&gt;compare and pull&lt;/code&gt; i.e merging the code &lt;br&gt;
you can see that our main branch does not have the &lt;code&gt;newfile.txt&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k7vDsgHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bd4u072pgplnuvqc3lm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k7vDsgHm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bd4u072pgplnuvqc3lm.png" alt="main" width="880" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;now let's compare and make a pull request and then merge our code to the master branch&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fEL-y8A8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wamgq24odbgbbkmdo3ng.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fEL-y8A8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wamgq24odbgbbkmdo3ng.png" alt="pull request " width="880" height="428"&gt;&lt;/a&gt;&lt;br&gt;
 now lets merge the pull request &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--miaXdcrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ypw4opmqq9bmxr0dj2e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--miaXdcrn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6ypw4opmqq9bmxr0dj2e.png" alt="merge pull" width="880" height="432"&gt;&lt;/a&gt;&lt;br&gt;
now if you see the main branch, it have the new file.txt&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_HT5p4sI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j67o0gkopumhj3r9fmj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_HT5p4sI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3j67o0gkopumhj3r9fmj.png" alt="after pull" width="880" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deleting-a-branch"&gt;
  &lt;/a&gt;
  deleting a branch
&lt;/h2&gt;

&lt;p&gt;Now we have merged our code to our master branch but now I feel that we don't need this &lt;code&gt;addfeature&lt;/code&gt; branch so let's delete it and see what happens&lt;br&gt;
use &lt;code&gt;git branch -d &amp;lt;branch name &amp;gt;&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DXJhuRJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f38fqabu8bolx5fkp9xv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DXJhuRJz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f38fqabu8bolx5fkp9xv.png" alt="delete branch locally" width="880" height="461"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;this command will delete our branch from our local git repository, now to delete this branch from GitHub use &lt;code&gt;git push &amp;lt;remote&amp;gt; --delete &amp;lt;branch&amp;gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0QOkpdq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8792tis83hkq0jyxzcaw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0QOkpdq7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8792tis83hkq0jyxzcaw.png" alt="remote " width="880" height="462"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pQ6skVgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os8f61ws5o76ll8ii71w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pQ6skVgy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/os8f61ws5o76ll8ii71w.png" alt="remote github" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and if you want to delete the newfile.txt i.e. what you have, merged from the branch use &lt;code&gt;git revert &amp;lt;commitid&amp;gt;&lt;/code&gt; &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4fDQrCwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dm9tscargmvx6t3klw0b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4fDQrCwQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dm9tscargmvx6t3klw0b.png" alt="commit id" width="880" height="426"&gt;&lt;/a&gt;&lt;br&gt;
so my commit id was &lt;code&gt;b7d4b23&lt;/code&gt; so I will use &lt;code&gt;git revert b7d4b23&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BZ3UnPrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gf1hhb5jxmri742nqob.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BZ3UnPrc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gf1hhb5jxmri742nqob.png" alt="revertd commit" width="880" height="465"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n9pWj1Gi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88b6rcg8nttqxk9zz3wg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n9pWj1Gi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/88b6rcg8nttqxk9zz3wg.png" alt="reverted commit" width="880" height="463"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s7Zuxu0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azwpf4cwlxqjdmxj6m9m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s7Zuxu0z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/azwpf4cwlxqjdmxj6m9m.png" alt="commit done" width="880" height="425"&gt;&lt;/a&gt;&lt;br&gt;
 see now we don't have any the new file.txt in our GitHub repo.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  conclusion
&lt;/h2&gt;

&lt;p&gt;So this was all about the branching concepts in git, feel free to comment out if you have any queries, hit a ❤️ if you love this article . stay tuned for next, Happy Coding :)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect"&gt;
  &lt;/a&gt;
  Connect
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://linktr.ee/kumarkalyan"&gt;&lt;br&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Wgrai2sU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.jsdelivr.net/npm/simple-icons%40v3/icons/twitter.svg" width="24" height="24"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>You Don't Need To Learn ReactJS Now</title>
      <author>Elijah Trillionz</author>
      <pubDate>Fri, 24 Dec 2021 16:07:46 +0000</pubDate>
      <link>https://dev.to/elijahtrillionz/you-dont-need-to-learn-reactjs-now-2an</link>
      <guid>https://dev.to/elijahtrillionz/you-dont-need-to-learn-reactjs-now-2an</guid>
      <description>&lt;p&gt;Now, this isn't another article that tries to stop you from learning and using React and other related libraries and frameworks like VueJS. Rather it is an article that aims to help you understand what React is, when you need to learn it, and what you need to learn it.&lt;/p&gt;

&lt;p&gt;So this article will help you learn and use React at the right time. I will also provide some useful free courses/crash courses on it. Let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-react"&gt;
  &lt;/a&gt;
  What is React?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="//reactjs.org"&gt;React&lt;/a&gt; is a popular JavaScript library that is used to build user interfaces and single-page applications.&lt;/p&gt;

&lt;p&gt;With React a collection of prewritten code snippets can be used and reused to perform common JavaScript functions.&lt;/p&gt;

&lt;p&gt;That is, ReactJS allows us to create reusable UI components. These components are what make up our website.&lt;/p&gt;

&lt;p&gt;An example of a reusable UI component is the tweet section in Twitter. See what I mean in the image below.&lt;/p&gt;

&lt;p&gt;Twitter simply created a component for this section and used it for all tweets in the app. Twitter uses React for its web app.&lt;/p&gt;

&lt;p&gt;But you may ask if React is for building single-page then how the hell does Twitter have several pages?&lt;/p&gt;

&lt;p&gt;Well, there are maintained supporting packages and libraries that make building complex applications with multiple pages like Twitter with React possible.&lt;/p&gt;

&lt;p&gt;While some people still use supporting packages, others have ported to using React frameworks like &lt;a href="https://nextjs.org/"&gt;Next&lt;/a&gt; and &lt;a href="https://remix.run/"&gt;Remix&lt;/a&gt; for building simple and complex applications.&lt;/p&gt;

&lt;p&gt;Another framework to learn on top React you may say. But trust me they are pretty easy to learn. But we won't talk more about them because it is beyond the scope of this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-role-does-react-play-in-web-development"&gt;
  &lt;/a&gt;
  What role does React play in web development?
&lt;/h2&gt;

&lt;p&gt;React plays a very vital role in creating interactive web applications.&lt;/p&gt;

&lt;p&gt;If you are an aspiring front-end developer or full-stack web developer who wants to work for a company, or simply create web apps as a freelancer or a startup, then you need React.&lt;/p&gt;

&lt;p&gt;Web applications are different from websites. You don't need React to make a website (static website).&lt;/p&gt;

&lt;p&gt;Web apps are dynamic websites that look and feel like desktop or mobile applications. On these websites, you can register an account, make posts, do things that you'd usually do in an application.&lt;/p&gt;

&lt;p&gt;Without React making a dynamic website will not just be tedious for the developer but also difficult to use. Because for each page transition the browser will have to reload. But it isn't so with React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-do-i-learn-react"&gt;
  &lt;/a&gt;
  When do I learn React?
&lt;/h2&gt;

&lt;p&gt;ReactJS as you know it is a JavaScript library, and as many libraries and frameworks, they require a proper understanding of the language itself.&lt;/p&gt;

&lt;p&gt;It's no use trying to learn a tool that makes using another tool easier when you have no (or low) clue of how the primary tool works.&lt;/p&gt;

&lt;p&gt;ReactJS and other JavaScript libraries and frameworks all make use of JavaScript in it (a lot). So it is expedient for you to know vanilla JavaScript to a great extent before learning any JavaScript library/framework.&lt;/p&gt;

&lt;p&gt;Understand this, React is not a special thing to learn. It's not like a mini-language that you have to learn to build cool web apps.&lt;/p&gt;

&lt;p&gt;Learning React to me is not a matter of learning a new syntax or something, it's a matter of understanding how React has decided to work with JavaScript. And so you're like "Ok React, this is how you like it, I will play by your rule".&lt;/p&gt;

&lt;p&gt;So that means React uses JavaScript's syntax in all ramifications, and a little bit of HTML (JSX). That is why when you know JavaScript enough, you wouldn't find it difficult moving to other libraries and frameworks.&lt;/p&gt;

&lt;p&gt;So these libraries and frameworks are not replacing the JavaScript syntax, you're not going to find&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nx"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;// statement(s)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="c1"&gt;// statement(s)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;replacing JavaScript's &lt;code&gt;if and else&lt;/code&gt; in a library. For example in React, we would popularly use&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;initial&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have never worked with destructuring arrays in JavaScript, you'd think this is some kind of React's syntax; you may think "here we have the &lt;code&gt;state&lt;/code&gt; and &lt;code&gt;setState&lt;/code&gt; in an array together and assigned to the &lt;code&gt;useState&lt;/code&gt; function, ok this is React". You'd have no clue what this is.&lt;/p&gt;

&lt;p&gt;This may sound funny if you are familiar with array destructuring, but some developers are in this situation. And trust me if this is you, it's not a good place to be. But luckily there is a solution - learn enough JavaScript.&lt;/p&gt;

&lt;p&gt;So to what extent should you learn JavaScript before learning React?&lt;/p&gt;

&lt;p&gt;I think you should learn everything your course/book outlines (I will outline some things). Here is a way to learn JavaScript in such a situation - forget about React and other libraries/frameworks.&lt;/p&gt;

&lt;p&gt;Don't learn JavaScript because you wanna learn React - don't have such an attitude of learning. Learn JavaScript because you want to be a web developer who makes cool web apps. Because the truth is React may not always be here.&lt;/p&gt;

&lt;p&gt;React may be gone in 5 years or even less. You never can tell.&lt;/p&gt;

&lt;p&gt;So when you're done with your JavaScript course, that's still not the right time to jump into React. Instead try to master the JavaScript syntax you've learned with exercises, projects, and even websites (lots of them).&lt;/p&gt;

&lt;p&gt;To do this, you can google out projects for beginners, Brad Traversy has a great repository of &lt;a href="https://github.com/bradtraversy/vanillawebprojects"&gt;20 vanilla web JavaScript projects&lt;/a&gt; - try building all of them on your own.&lt;/p&gt;

&lt;p&gt;When all this is done, I believe you're 100% ready to learn React. Now am not sure which JavaScript course you took and what you've learned, but to learn React you need to know these topics (explicitly including the basics)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Data Types - string, number, booleans, arrays, objects, undefined, null.&lt;/li&gt;
&lt;li&gt;Arithmetic operators and arithmetic operations, logical operators, ternary operator, expressions, variables (const and let), scopes&lt;/li&gt;
&lt;li&gt;Conditional statements - if and else, switch and case&lt;/li&gt;
&lt;li&gt;Loops - for, for in, for of, while, do/while&lt;/li&gt;
&lt;li&gt;Functions - arrow functions, closures, callbacks&lt;/li&gt;
&lt;li&gt;Classes and other ES6 features&lt;/li&gt;
&lt;li&gt;DOM&lt;/li&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;li&gt;The global object&lt;/li&gt;
&lt;li&gt;Asynchronous JavaScript - settimeout, setinterval&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Basically everything. I'd recommend using the &lt;a href="https://www.w3schools.com/js/default.asp"&gt;W3schools JavaScript course outline&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-do-i-learn-react"&gt;
  &lt;/a&gt;
  Where do I learn React?
&lt;/h2&gt;

&lt;p&gt;This question will also answer "How do I learn React?". As I said before, React is not a special (or hard) thing to learn. This is the way I learn frameworks/libraries, and I recommend you try it too.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Follow along with a tutorial&lt;/li&gt;
&lt;li&gt;Play around with the docs&lt;/li&gt;
&lt;li&gt;Build more projects&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#follow-along-with-a-tutorial"&gt;
  &lt;/a&gt;
  Follow along with a tutorial
&lt;/h3&gt;

&lt;p&gt;This is basically coding along with a React tutorial. You can find a React crash course on YouTube for free. You don't have to pay to learn React at all.&lt;/p&gt;

&lt;p&gt;I'd recommend a crash course where there is a little bit of explanation on how React works, and then a project. I recommend this &lt;a href="https://youtu.be/w7ejDZ8SWv8"&gt;React crash course for 2021&lt;/a&gt; by Traversy Media.&lt;/p&gt;

&lt;p&gt;The crash course (this step) will help introduce you to React and how it works. It gives you a short overview of what you'd be working with&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#play-around-with-the-docs"&gt;
  &lt;/a&gt;
  Play around with the docs
&lt;/h3&gt;

&lt;p&gt;React has a very good &lt;a href="https://reactjs.org/docs/getting-started.html"&gt;documentation&lt;/a&gt; for its library. The documentation gives you more insight into the library, shows you what more you can do with it.&lt;/p&gt;

&lt;p&gt;React's documentation is designed to take you from the basics to the advanced React step by step. Playing around the docs simply means studying the docs and trying out some of the examples used.&lt;/p&gt;

&lt;p&gt;You can study React's docs like the way you study a course (in college or something). The point is, React's documentation is straight to the point, so you studying line by line or chapter by chapter is not a waste of time.&lt;/p&gt;

&lt;p&gt;Studying the docs shouldn't take more than a week for an average person.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#build-more-projects"&gt;
  &lt;/a&gt;
  Build more projects
&lt;/h3&gt;

&lt;p&gt;If you'd notice I said "more projects" rather than "a project". Now, this is because if you follow the first step you'd already built your first project in React, now you just need to build more.&lt;/p&gt;

&lt;p&gt;After building more projects, I often recommend checking out some more tutorials on basic projects - you can search for more specific projects and find a tutorial on them.&lt;/p&gt;

&lt;p&gt;This will always introduce you to a newer concept and perspective. But try not to end up doing too much tutorial (1 or 2 from different authors is fine), so you don't end up in "tutorial hell".&lt;/p&gt;

&lt;p&gt;These steps will help you cover the basics and the more you build projects, see from a different perspective, the more you will become efficient in it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-do-you-need-to-use-react"&gt;
  &lt;/a&gt;
  When do you need to use React
&lt;/h2&gt;

&lt;p&gt;I have already said this before, but I'll just re-iterate.&lt;/p&gt;

&lt;p&gt;React is not always needed. You should only use React when you are working on dynamic websites or as some developers may say "complex websites".&lt;/p&gt;

&lt;p&gt;You can always use vanilla JavaScript for small projects, and static websites.&lt;/p&gt;

&lt;p&gt;For example, if you're to build a business website for a client. The kind of website where you hard-code everything, where visitors come to see about the business like the contact info, what the business is about. For example a law firm. Such websites don't require React. No matter the pages you're to create, it would be easier for you with vanilla JavaScript.&lt;/p&gt;

&lt;p&gt;But if you're trying to build the next Twitter, DEV community, personal blog (which is always updated) then you'd need the likes of React to easily build them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;React is a cool tool for web development, and as cool as it is, it's very easy to learn. Learning it at the right time puts you at a higher advantage. To step up your web development career with React you can learn NextJS or Remix easily. You can follow the same steps I mentioned here for learning React to learn one of them. They are a lot easier to learn than React itself.&lt;/p&gt;

&lt;p&gt;Thanks for reading. You can leave a comment below to let me know what you think about this article. If you like this article, please like and share to spread love. And don't forget to please give me a shout-out and follow on Twitter &lt;a href="https://twitter.com/elijahtrillionz"&gt;@elijahtrillionz&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Single Sign-on Implementation for Enterprise Applications</title>
      <author>Andrii Sulymka</author>
      <pubDate>Fri, 24 Dec 2021 15:43:30 +0000</pubDate>
      <link>https://dev.to/andriisulymka/single-sign-on-implementation-for-enterprise-applications-m5i</link>
      <guid>https://dev.to/andriisulymka/single-sign-on-implementation-for-enterprise-applications-m5i</guid>
      <description>&lt;p&gt;Companies often face difficulties while moving toward Single Sign-on (SSO) implementation. Many of them are stuck at step one, trying to figure out SSO benefits, best practices of implementation, types, protocols, and other basic stuff. I decided to clarify the meaning of Single Sign-on, share MobiDev’s experience, and even reinvent the wheel for using SSO between mobile applications in the most convenient way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Single Sign-on (SSO)&lt;/strong&gt; is a technical approach to authentication that enables a user to log in with one set of credentials to several applications and websites. The technology is based on setting up a reliable relationship between an application, known as a service provider, and an access management system. A service provider and an access management system share a certificate with identification data, which, in the case of SSO, takes the form of tokens that include email, username, or other data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In simple terms, with SSO, users don’t need to retype name and password when switching between applications.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-types-of-sso"&gt;
  &lt;/a&gt;
  WHAT ARE TYPES OF SSO?
&lt;/h2&gt;

&lt;p&gt;SSO is part of &lt;a href="https://www.techtarget.com/searchsecurity/definition/federated-identity-management"&gt;Federated Identity Management&lt;/a&gt;(FIM) architecture.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yb92pnRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3qd4o34m5l7vse5uca1.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yb92pnRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h3qd4o34m5l7vse5uca1.jpeg" alt="SSO is a Part of Federated Identity Management Architecture" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-protocols-used-for-sso"&gt;
  &lt;/a&gt;
  WHAT ARE PROTOCOLS USED FOR SSO?
&lt;/h2&gt;

&lt;p&gt;Protocols used for SSO implementation are Security Assertion Markup Language (SAML), Web Services Federation (WS-Fed), OpenID Connect (OIDC), Lightweight Directory Access Protocol (LDAP), and Kerberos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sso-benefits"&gt;
  &lt;/a&gt;
  SSO benefits
&lt;/h2&gt;

&lt;p&gt;According to Research and Markets, the global Single Sign-on Market is predicted to reach $2.2 Billion by 2027. However, companies are concerned about potential security threats associated with one click access, and they consider SSO implementation as a means to simplify access to their applications and improve user experience.&lt;/p&gt;

&lt;p&gt;SSO benefits do not end here and include the following points:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reduced password fatigue – users only have to contend with memorizing one password&lt;/li&gt;
&lt;li&gt;Efficient B2B collaboration – B2B partnerships prosper with &lt;a href="https://www.ibm.com/docs/sk/cip?topic=access-federated-sso-overview"&gt;Federated SSO&lt;/a&gt; because users easily access services provided by different companies&lt;/li&gt;
&lt;li&gt;Boosted productivity that’s formed by the means of faster log-ins&lt;/li&gt;
&lt;li&gt;High adoption rates – SSO increases the probability that users will open an app more frequently&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;strong&gt;main disadvantage&lt;/strong&gt; is that if SSO fails, users can’t access any of the related systems. As for complexity, it is considered to be a conditional downside.&lt;/p&gt;

&lt;p&gt;Security can be listed separately.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On the one hand&lt;/strong&gt;, SSO with one set of credentials means that in case of a security breach, attackers have access to the account and linked systems, applications, and data – and the attackers’ footprint within the company increases.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;On the other hand&lt;/strong&gt;, SSO reduces the number of attack surfaces because users log in once each day and only use one set of credentials. A higher level of security may be achieved if you combine SSO with risk-based authentication (RBA), identify unusual behavior, and require users to pass additional verification.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sso-implementation-best-practices-for-enterprise-applications"&gt;
  &lt;/a&gt;
  SSO Implementation Best Practices for Enterprise Applications
&lt;/h2&gt;

&lt;p&gt;Is SSO hard to implement? The generalized vision of the problem is this: SSO deployment is a complex and time-consuming task for legacy solutions, but cloud-based SSO is different. Let me share our experience which will shed light on SSO in enterprise applications.&lt;/p&gt;

&lt;p&gt;Until quite recently, setting up federated SSO for native applications was a complex challenge. There were two options available for developers to display content in the apps with SSO: switch the user from an app to the system browser and then back or display an in-app webview for rendering html content directly in the app. These options are inconvenient for the user or they have security and privacy issues.&lt;/p&gt;

&lt;p&gt;The emergence of the third option – SFSafariViewController (iOS9+) and Chrome Custom Tabs (Android) add a web controller to provide all the advantages of the native system browser – this benefited developers.&lt;/p&gt;

&lt;p&gt;Our experience is related to the SSO implementation between two mobile applications built with different versions of NativeScript – &lt;strong&gt;app1&lt;/strong&gt; and &lt;strong&gt;app2&lt;/strong&gt;. But in fact, the described approach to SSO is identical for both native and cross-platform applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App1&lt;/strong&gt; is mobile, while &lt;strong&gt;app2&lt;/strong&gt; implies the combination of mobile and web, where problems with the transition to the new version are expected to arise. The identity provider for authorization through OpenID Connect (OIDC) Client is common within applications, which facilitates the start. We have three options to choose from: WebView, System browser, and InAppBrowser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-sso-implementation-approach-webview-with-cookie-sharing"&gt;
  &lt;/a&gt;
  1. SSO IMPLEMENTATION APPROACH: WEBVIEW WITH COOKIE SHARING
&lt;/h2&gt;

&lt;p&gt;Log in to the first application is based on &lt;a href="https://developer.android.com/reference/android/webkit/WebView"&gt;WebView&lt;/a&gt;, whereas log in the second app uses well-known – in the world of hybrid applications – &lt;a href="https://cordova.apache.org/docs/en/3.1.0/cordova/inappbrowser/inappbrowser.html"&gt;InAppBrowser&lt;/a&gt;, with Chrome Custom Tabs for Android and SafariServices/AuthenticationServices for iOS under the hood.&lt;/p&gt;

&lt;p&gt;The research revealed three accessible options to implement SSO within the prescribed conditions, though they imply the same thing for logging – WebView (sharing cookies should be envisaged).&lt;/p&gt;

&lt;p&gt;WebView is embedded in the native screen of the application (like it is an iFrame in the web), which can be perceived as the advantage of the method since the navigation during logging looks natural for the user. Animations and styles don’t stand out from the overall picture.&lt;/p&gt;

&lt;p&gt;The major issue of using WebView for logging is the delay in the callback related to the page loading. To get around that issue, developers come up with their own ideas on how to understand exactly when the login form (the web page) has been loaded and they may hide the indicator. Otherwise, it will be shown over the already loaded login screen or be hidden before the screen is loaded. The glitch can lead to problems with the review of the app submitted to the App Store. There are also problems with accessing cookies on Android, and it’s difficult to set up a common login without opening external links that use SSO.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-sso-implementation-approach-system-browser"&gt;
  &lt;/a&gt;
  2. SSO IMPLEMENTATION APPROACH: SYSTEM BROWSER
&lt;/h2&gt;

&lt;p&gt;Using a system browser may be a reliable solution, yet it implies leaving an application and opening the browser to fill out the login form. Tabs with logins remain unclosed in the browser and accumulate. However, such an approach is easy to implement because everything works the same way as on the web, and both applications will open a login form in the same environment with the same cookies that the OIDC client applies to verify the user, and with the correct setting of the server identity for both applications. In the case of the system browser, everything runs smoothly and without a delay, but isn’t comfortable for the user.&lt;/p&gt;

&lt;p&gt;Microsoft Authenticator wasn’t considered as an SSO implementation solution, since to log in, a user is supposed to leave an application, authorize in the second one, then confirm the authorization in the first application, and so on. To put it mildly, it isn’t convenient for the user, and is even worse than a system browser.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-sso-implementation-approach-inappbrowser"&gt;
  &lt;/a&gt;
  3. SSO IMPLEMENTATION APPROACH: INAPPBROWSER
&lt;/h2&gt;

&lt;p&gt;Tabs in Android and services in iOS could be customized in systems as native pop-ups with platform animations and appearance. They track redirects and are being closed if a login is entered correctly. There isn’t a problem as in the case of WebView, though the login form looks detached from the application if the design differs from the native platforms’ components. This is a recommended and safe approach to SSO implementation in mobile applications.&lt;/p&gt;

&lt;p&gt;After trial and error, we decided to opt for InAppBrowser. It has a common sandbox with cookies inside one application, so if you apply it and then open other web links in it that should login the user via SSO, which means that problems do not arise at all. But in 2 different applications, these sandboxes will be different and you need to somehow take information from one and put it in another to implement SSO between applications.&lt;/p&gt;

&lt;p&gt;For such a sharing process, we applied Keychain storage in iOS and Secure storage in Android since both of them securely store data on the device. They can isolate the store for one application or several trusted applications, yet this requires additional configuration steps in each of the mobile applications.&lt;/p&gt;

&lt;p&gt;Having configured the shared storage, we enabled data interchange between the two applications. An additional wrapper that reproduces methods of input-output in localStorage api allowed us to introduce common local storage for OIDC Client UserManager.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mobidevs-approach-to-sso-implementation"&gt;
  &lt;/a&gt;
  MobiDev’s Approach to SSO Implementation
&lt;/h2&gt;

&lt;p&gt;Implementation of these steps is enough for most applications, in which the identity provider is initially configured for SSO between applications, but since there are some difficulties with this, we had to go further to “reinvent the wheel”.&lt;/p&gt;

&lt;p&gt;Coming back to OIDC Client, I should mention that it has several different flows for login with name and password, two-factor authentication, and other things. However, SSO and session updating require the so-called code flow, which, after the user enters the credentials, returns not the session token, but the code that must be exchanged for the object with session data, namely:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Session token (sessionToken is used to access the application API)&lt;/li&gt;
&lt;li&gt;Lifetime of the token&lt;/li&gt;
&lt;li&gt;The token for refreshing the session (refreshToken for refreshing the sessionToken)&lt;/li&gt;
&lt;li&gt;Lifetime of the token&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To configure token lifetime, an identity server should be used. As usual, sessionToken lasts hours or days, and refreshToken lasts weeks or months. Long-lived refreshToken may serve for login with biometrics in the mobile app. An algorithm is as follows:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Reading of biometrics&lt;/li&gt;
&lt;li&gt;Taking a refreshToken&lt;/li&gt;
&lt;li&gt;Obtaining of the new sessionToken&lt;/li&gt;
&lt;li&gt;Letting the user to access an application&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This token update isn’t noticed by the app user, because it doesn’t imply opening of the browser, WebView, or InAppBrowser windows – a simple update of the token is granting the user access to the application. The described method makes the login run smoothly and is used in both applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;According to the documentation, using SSO between mobile applications, either way, requires opening the browser, WebView, InAppBrowser, which will log in and, after closing, open a second application. We strived to create something more convenient and found the solution that suited everyone.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--czxVT9Jr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i8paezw3pb55t36diz62.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--czxVT9Jr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i8paezw3pb55t36diz62.jpeg" alt="MobiDev's Approach to SSO Implementation" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deep-links-and-further-actions"&gt;
  &lt;/a&gt;
  DEEP LINKS AND FURTHER ACTIONS
&lt;/h2&gt;

&lt;p&gt;The solution lies in opening one application from another via the deep link functionality (deep links send the user directly to the specific in-app location) – and then the magic happens.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App1&lt;/strong&gt; opens the deep link, &lt;strong&gt;app2&lt;/strong&gt; is opened by using the deep link. Before opening a deep link when clicking, &lt;strong&gt;app1&lt;/strong&gt; generates a unique token and stores it in a common for both apps storage, and then inserts the same token into the deep link as a parameter and processes the click. This approach is implemented for security purposes. No one else has access to this shared storage, and it’s impossible to log in and automatically go inside another application by using a deep link from outside.&lt;/p&gt;

&lt;p&gt;A unique token that was generated includes a timestamp, which defines a period during which it is valid, username, data needed for security and verification of user data, and random things to prevent guessing.&lt;/p&gt;

&lt;p&gt;Obtaining a deep link with the token, &lt;strong&gt;app2&lt;/strong&gt; parses the token, compares it to the one in the shared storage, and then checks the user identity. The time from the creation of the token should be approximately one second. Only after this, &lt;strong&gt;app2&lt;/strong&gt; obtains a new token via refreshToken that uses biometric login of the app under the hood and redirects a user on the screen added in the deep link.&lt;/p&gt;

&lt;p&gt;This works only if &lt;strong&gt;app2&lt;/strong&gt; has a valid (not expired) refresh token and biometric login is enabled. Otherwise, users still have to enter their data manually, as if the token or the username does not match. Default SSO process with opening browser or WebView will have the same downsides. After logging in, it is still possible to send the user directly to the needed application screen.&lt;/p&gt;

&lt;p&gt;Each application will have its own settings and IDs that are unique in the system of the identity server. All changes will be made only by UI teams, and the solution will work with any identity providers that have code flow.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summing-up"&gt;
  &lt;/a&gt;
  Summing Up
&lt;/h2&gt;

&lt;p&gt;To sum up, companies are intensively investing in setting up SSO, while implementation approaches are driven by their needs. At MobiDev, we have relevant expertise and see good prospects for Single Sign-On, as even Google offers pre-integrated SSO with over 200 popular cloud applications. We have also invested time to come up with our own approach to using SSO between mobile applications.&lt;/p&gt;

&lt;p&gt;If you have any specific question regarding SSO implementation in your own project, feel free to ask!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>mobile</category>
      <category>webdev</category>
    </item>
    <item>
      <title>MySQL Cheat sheet</title>
      <author>Shubham Athawane</author>
      <pubDate>Fri, 24 Dec 2021 15:36:50 +0000</pubDate>
      <link>https://dev.to/shubhamathawane/mysql-cheat-sheet-2hgp</link>
      <guid>https://dev.to/shubhamathawane/mysql-cheat-sheet-2hgp</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Creating tables 📑
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;Auther&lt;/span&gt; &lt;span class="nb"&gt;VARCHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;129&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="nb"&gt;VARCHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;129&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;btype&lt;/span&gt; &lt;span class="nb"&gt;VARCHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;129&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="nb"&gt;year&lt;/span&gt; &lt;span class="nb"&gt;CHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;To drop table column
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;tableName&lt;/span&gt; &lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="k"&gt;column&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt; &lt;span class="k"&gt;DROP&lt;/span&gt; &lt;span class="n"&gt;Auther&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;How to delete Data from a MySQL table ?
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;Delete&lt;/span&gt; &lt;span class="k"&gt;Statement&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="n"&gt;used&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 

&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;column_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;VALUE&lt;/span&gt;
&lt;span class="n"&gt;EX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 
&lt;span class="k"&gt;DELETE&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'JungleBook'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Inserting Value into Table.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Column1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Column2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Column3&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;EX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Author&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;btype&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;"James Camron"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"Avatar"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"Adventure"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2006&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Update column name.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;RENAME&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="n"&gt;old_col_name&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="n"&gt;new_col_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;EX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 
&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt; &lt;span class="k"&gt;RENAME&lt;/span&gt; &lt;span class="k"&gt;COLUMN&lt;/span&gt; &lt;span class="n"&gt;btype&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="n"&gt;Book_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Add new column in table
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="k"&gt;column_name&lt;/span&gt; &lt;span class="n"&gt;DATATYPE&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;EX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; 
&lt;span class="k"&gt;ALTER&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt; &lt;span class="k"&gt;ADD&lt;/span&gt; &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="nb"&gt;INT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The Select Command : DQL- DATA QUERY LANGUAGE Command.&lt;/p&gt;

&lt;p&gt;Used to visualize the table content.&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;EX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;It&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;show&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;present&lt;/span&gt; &lt;span class="n"&gt;inside&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can use SELECT command to retrieve specific data from the table using WHERE clause . Like below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;EX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;Book_type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;"hacking"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;MySQL numeric Data types&lt;/p&gt;

&lt;p&gt;MySQL has numeric data types for Integer, Fixed-point, Floating-Point and bit etc.&lt;/p&gt;

&lt;p&gt;*Numeric can be singed or unsinged &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;1. TINYINT&lt;/th&gt;
&lt;th&gt;6. FLOAT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2. SMALLINT&lt;/td&gt;
&lt;td&gt;7. DOUBLE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. MEDIUMINT&lt;/td&gt;
&lt;td&gt;8. BIT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. INT&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5. BIGINT&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;String Data type.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;1. CHAR&lt;/th&gt;
&lt;th&gt;5. TINYBLOB&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2. VARCHAR&lt;/td&gt;
&lt;td&gt;6. MEDIUMBLOB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3. BINARY&lt;/td&gt;
&lt;td&gt;7. LONGBLOB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4. VARBINARY&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Temporal Data Types in MySQL&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;DATE&lt;/strong&gt; - A date value in 'CCYY-MM-DD'&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TIME&lt;/strong&gt;- Time in 'HH:MM:SS'&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;DATETIME&lt;/strong&gt; - Date-Time - 'CCVV-MM-DD  HH:MM:SS'&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;TIMESTAMP&lt;/strong&gt; - 'CCVV-MM-DD' HH:MM:SS&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;YEAR&lt;/strong&gt; - CCYY or YY&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create user in MySQL&lt;br&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="n"&gt;USE&lt;/span&gt; &lt;span class="s1"&gt;'user-name'&lt;/span&gt; &lt;span class="n"&gt;IDENTIFIED&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="s1"&gt;'sample-password'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;What are the "VIEWS" ?&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;→ In MySQL , A view consists of a set of rows that returned if particular query is executed.&lt;/p&gt;

&lt;p&gt;→ It also known as "Virtual Table" &lt;/p&gt;

&lt;p&gt;→ Advantages : Simplicity, security, not consume any memory, maintainability.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;How to you create &amp;amp; Execute VIEWS in MySQL ?&lt;/p&gt;

&lt;p&gt;→ We can create views using the &lt;strong&gt;CREATE VIEW&lt;/strong&gt; Statement;&lt;/p&gt;

&lt;p&gt;-&amp;gt; A view is table in  database that has no values, The views are created by joining one or more tables.&lt;br&gt;
-&amp;gt; Syntax for creating Views&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;or&lt;/span&gt; &lt;span class="k"&gt;REPLACE&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;VIEW&lt;/span&gt; &lt;span class="n"&gt;view_name&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;TABLES&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;CONDITION&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SELECT AND command.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;cust_tbl&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;f_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;"shubham"&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;cust_id&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Truncate :&lt;/strong&gt; It removes complete data without removing it’s structure. It is a DDL Command
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;TRUNCATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;EX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;TRUNCATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Update Command in MySQL.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="s1"&gt;'table_name'&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="s1"&gt;'column_name'&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'new_value'&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;CONDITION&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;EX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="s1"&gt;'Auther'&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'James Bond'&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;Auther&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;"JB"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;BETWEEN : Get values between particular condition.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;cus_tbl&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Find version of installed MySQL.&lt;/p&gt;

&lt;p&gt;Type Following Command.&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SHOW&lt;/span&gt; &lt;span class="n"&gt;VARIABLES&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="nv"&gt;"%version%"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;ENUM and SET.&lt;/p&gt;

&lt;p&gt;ENUM data type is used in the MySQL datatypes to select any one value from the predefined list. Ex&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;newEnum&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;Clients&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;INT&lt;/span&gt; &lt;span class="n"&gt;AUTO_INCREMENT&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="nb"&gt;VARCHAR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
    &lt;span class="n"&gt;memberShip&lt;/span&gt; &lt;span class="nb"&gt;ENUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'silver'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'gold'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Diamond'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;interested&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Movie'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Music'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'concert'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Cannot set multiple in ENUM but we can set multiple values in SET. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;What is different between Primary key and Foreign Key ?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;-&amp;gt; The database table uses Primary key to identify each row uniquely, It is necessary to declare a primary key on those tables that require tp create a relationship among them. - One or More field of table can be declared as primary key&lt;/p&gt;

&lt;p&gt;-&amp;gt; When primary key of any table is used in another table as the primary key or anther field for making a database relation then it is called Foreign Key.&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;strong&gt;Primary Key :&lt;/strong&gt;  Identified a record whereas foreign key refers the primary key of another tables. Primary key never accepts not null value. But Foreign key accepts null value.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Filter duplicate values.&lt;/p&gt;

&lt;p&gt;-&amp;gt; A &lt;strong&gt;DISTINCT&lt;/strong&gt; keyword is used to identify the duplicate data from table while retrieving the records. EX.&lt;br&gt;
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;output: &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;id&lt;/th&gt;
&lt;th&gt;name&lt;/th&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;th&gt;brand&lt;/th&gt;
&lt;th&gt;man_id&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;samsung&lt;/td&gt;
&lt;td&gt;mobile&lt;/td&gt;
&lt;td&gt;samsung&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;iPhone&lt;/td&gt;
&lt;td&gt;mobile&lt;/td&gt;
&lt;td&gt;apple&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Sony&lt;/td&gt;
&lt;td&gt;TV&lt;/td&gt;
&lt;td&gt;Sony&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Using &lt;strong&gt;DISTINCT&lt;/strong&gt; Keyword
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;DISTINCT&lt;/span&gt; &lt;span class="k"&gt;type&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;output:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mobile&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TV&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Which statement is used in a select query statement for partial matching ?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;→ REGEXP and LIKE statement can be used in a select query for partial matching.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;REGEXP&lt;/strong&gt; : used to Search records bases on the pattern matching&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;LIKE&lt;/strong&gt; : Is used to search any record by  matching string at beginning or end or middle of particular filed value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ex. 1. REGEXP (Search records start with ‘S’);&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;REGEXP&lt;/span&gt; &lt;span class="nv"&gt;"^s"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Ex. 2. LIKE&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;BookHistory&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;LIKE&lt;/span&gt; &lt;span class="nv"&gt;"A%"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Rename Table
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;RENAME&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="k"&gt;table_name&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="n"&gt;new_table_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;EX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;RENAME&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt; &lt;span class="k"&gt;TO&lt;/span&gt; &lt;span class="n"&gt;Products&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Retrieve a portion of any Column value by using select Query ?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;→   *  &lt;strong&gt;SUBSTR()&lt;/strong&gt; Function is used to retrieve the portion of any column. EX&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OR we can we ‘&lt;strong&gt;SUBSTRING&lt;/strong&gt;’ keyword&lt;/p&gt;


&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;SUBSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Products&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;output: &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Samsu&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;iPhon&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sony&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Calculate Sum of any Column of table ?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;→ &lt;strong&gt;SUM() Function is used to calculate the sum of any column. EX.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;DISTINCT&lt;/span&gt; &lt;span class="n"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;EX&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Products&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;output:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;total&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2109.00&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#-the-practical-approach-"&gt;
  &lt;/a&gt;
  ———— &lt;strong&gt;The Practical Approach ————&lt;/strong&gt;
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Fetch FIRST_NAME from worker table.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;First_name&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;worker_name&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;Woker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="s1"&gt;'s
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Fetch FIRST_NAME as Upper Case
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;First_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Will&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;all&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;upper&lt;/span&gt; &lt;span class="k"&gt;case&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Fetch unique Values from Department
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;DISTINCT&lt;/span&gt; &lt;span class="n"&gt;department&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;output : &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;department&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;HR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ADMIN&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ACCOUNT&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;Find position of alphabets (”a”) in first_name column ‘Amitabh’ from worker.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;INSTR&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;BINARY&lt;/span&gt;&lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;worker&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;"Amitabh"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;output :&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;INSTR( first_name, BINARY ’a’ )&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Remove white Spaces &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;RTRIM&lt;/strong&gt; : To remove white spaces from right side. EX
&lt;/li&gt;
&lt;/ol&gt;

&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;RTRIM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;p&gt;b. &lt;strong&gt;LTRIM&lt;/strong&gt; : To remove white spaces from left side. EX&lt;br&gt;
&lt;/p&gt;

&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;LTRIM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Department&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;




&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Query to print &lt;strong&gt;&lt;code&gt;first_name&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;salary&lt;/code&gt;&lt;/strong&gt; from worker table into a single column NAME_SALARY&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;→ We use CONCAT() keyword to get combined result from two or more tables. EX&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;CONCAT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"="&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Salary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="s1"&gt;'NAME_SALARY'&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Query to print all worker details from worker table order by First_Name Ascending.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt; &lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="n"&gt;First_Name&lt;/span&gt; &lt;span class="k"&gt;ASC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Print details for worker with First_name as ‘Shubham’ and ‘NICK’ from worker table.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;First_Name&lt;/span&gt; &lt;span class="k"&gt;In&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Shubham'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'NICK'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Query to fetch the count of employee working in the department ‘admin’.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;→ The count function return cunt of given queries : EX.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Admin'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;output : &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;count(4)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;h1&gt;
  &lt;a href="#aggregate-functions-"&gt;
  &lt;/a&gt;
  AGGREGATE FUNCTIONS : -
&lt;/h1&gt;

&lt;p&gt;SQL Aggregate functions is used to perform calculations on multiple row of a single column of a table it return single value.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;COUNT()&lt;/li&gt;
&lt;li&gt;SUM()&lt;/li&gt;
&lt;li&gt;AVG()&lt;/li&gt;
&lt;li&gt;MAX()&lt;/li&gt;
&lt;li&gt;MIN()&lt;/li&gt;
&lt;/ol&gt;




&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;COUNT()&lt;/strong&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;→ Count the number of rows in  database; It uses function COUNT(*) that return all rows&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;Department&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Admin'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;count(4)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;SUM()&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;→ SUM() Function is used to calculate the sum of all selected columns. it only work on numeric values.  Syntax: sum();&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;salary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;or&lt;/span&gt; 
&lt;span class="k"&gt;SELECT&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;(will upload remaining one, sorry for inconvenience im running out of time nowadays)&lt;/p&gt;

</description>
      <category>mysql</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>database</category>
    </item>
    <item>
      <title>5 Programming Games To Improve Your Coding Skills</title>
      <author>Sk Shoyeb</author>
      <pubDate>Fri, 24 Dec 2021 15:30:19 +0000</pubDate>
      <link>https://dev.to/shoyeb001/5-programming-games-to-improve-your-coding-skills-4cam</link>
      <guid>https://dev.to/shoyeb001/5-programming-games-to-improve-your-coding-skills-4cam</guid>
      <description>&lt;p&gt;In this article I will discuss about the &lt;strong&gt;5 best coding games&lt;/strong&gt; that can improve your skills. We love challenges. So These coding game challenges will increase your interest in coding. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#untrusted"&gt;
  &lt;/a&gt;
  Untrusted
&lt;/h2&gt;

&lt;p&gt;Untrusted is an &lt;strong&gt;online adventure game for coders&lt;/strong&gt;. You can practice your Javascript skills. You have to use javascript commands to play the game and win the game. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#robocode"&gt;
  &lt;/a&gt;
  Robocode
&lt;/h2&gt;

&lt;p&gt;Robocode is also a &lt;strong&gt;programming battle ground game&lt;/strong&gt;. Here you have to develop tanks using Java and .NET to battle against other tanks. You have to write AI codes for the robots to make them understand what to do and how to reacts with the events happening in the battle. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#checkio"&gt;
  &lt;/a&gt;
  CheckIO
&lt;/h2&gt;

&lt;p&gt;CheckIO is a &lt;strong&gt;coding game&lt;/strong&gt; which helps you to develop your coding skills in Python and Typescript. If you are a beginner you can play the game. The game contains many levels. As you increase your leves your coding challenges get harder. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screeps"&gt;
  &lt;/a&gt;
  Screeps
&lt;/h2&gt;

&lt;p&gt;Screeps is an &lt;strong&gt;online real time strategy game&lt;/strong&gt;. If you are a beginner in programming you can play this game. Here you have to create your colony in a particular world shared with all players. The colony will be able to mine resource, build unites etc. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-dinner"&gt;
  &lt;/a&gt;
  CSS Dinner
&lt;/h2&gt;

&lt;p&gt;CSS dinner is a** programming game** where you can practice and master your CSS skills. You will learn CSS properties and selectors from this game. It also contains levels. As levels ups you challenges get harder. &lt;/p&gt;

&lt;p&gt;If you want to be a good programmer it is not necessary to play these games. But you want to improve your skills in fun way then you can join any platform. &lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
      <category>css</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to connect your Dapps to Metamask extension</title>
      <author>NerdyDave2017</author>
      <pubDate>Fri, 24 Dec 2021 15:28:18 +0000</pubDate>
      <link>https://dev.to/nerdydave2017/how-to-connect-your-dapps-to-metamask-extension-137f</link>
      <guid>https://dev.to/nerdydave2017/how-to-connect-your-dapps-to-metamask-extension-137f</guid>
      <description>&lt;p&gt;One of the most in demand technology today is blockchain technology and I will be showing an example of how to connect your frontend app to Metamask browser extension. I noticed the lack of adequate information for developers on blockchain technology as it's a relatively new space.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-metamask"&gt;
  &lt;/a&gt;
  What is Metamask
&lt;/h2&gt;

&lt;p&gt;MetaMask is a software cryptocurrency wallet used to interact with the Ethereum blockchain. It allows users to access their Ethereum wallet through a browser extension or mobile app, which can then be used to interact with decentralized applications.&lt;br&gt;
reference: &lt;a href="https://en.wikipedia.org/wiki/MetaMask"&gt;https://en.wikipedia.org/wiki/MetaMask&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#decentralized-applicationsdapps"&gt;
  &lt;/a&gt;
  Decentralized Applications(Dapps)
&lt;/h2&gt;

&lt;p&gt;A Dapp in simple language is an application that interacts with and leverages on a decentralized network such as Ethereum, Solana etc. A decentralized application (dapp) is an application built on a decentralized network that combines a smart contract and a frontend user interface. On Ethereum, smart contracts are accessible and transparent; Dapp = frontend + smart contract backend.&lt;br&gt;
reference: &lt;a href="https://ethereum.org/en/developers/docs/dapps/"&gt;https://ethereum.org/en/developers/docs/dapps/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements&lt;/strong&gt;&lt;br&gt;
Some of the requirements include:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;Some CSS(we'll be using TailwindCss)&lt;/li&gt;
&lt;li&gt;Knowledge of JavaScript&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Editor/ IDE&lt;/li&gt;
&lt;li&gt;Install Metamask browser extension&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;br&gt;
Let's get going 🚀🚀🚀.&lt;br&gt;
First we create an Html file and let's name it Connect.html. Since we'll be using TailwindCss, let's head to &lt;a href="https://cdnjs.com/libraries/tailwindcss"&gt;https://cdnjs.com/libraries/tailwindcss&lt;/a&gt; and copy the very first tag and add it to our Html header. &lt;br&gt;
To make this short, we'll be writing the Javascript code in the Html file  😅😉. Bellow is the code snippet of what we'll be doing.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Web3 Metamask Login&amp;lt;/title&amp;gt;
    &amp;lt;link
      href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css"
      rel="stylesheet"
    /&amp;gt;
  &amp;lt;/head&amp;gt;

  &amp;lt;body class="flex w-screen h-screen justify-center items-center"&amp;gt;
    &amp;lt;div class="flex-col space-y-2 justify-center items-center"&amp;gt;
      &amp;lt;button
        id="loginButton"
        onclick=""
        class="mx-auto rounded-md p-2 bg-green-500 text-white"
      &amp;gt;
        Login with MetaMask
      &amp;lt;/button&amp;gt;
      &amp;lt;p id="userWallet" class="text-lg text-gray-600 my-2"&amp;gt;&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;script&amp;gt;
      window.userWalletAddress = null;
      const loginButton = document.getElementById("loginButton");
      const userWallet = document.getElementById("userWallet");

      function toggleButton() {
        if (!window.ethereum) {
          loginButton.innerText = "MetaMask is not installed";
          loginButton.classList.remove("bg-purple-500", "text-white");
          loginButton.classList.add(
            "bg-gray-500",
            "text-gray-100",
            "cursor-not-allowed"
          );
          return false;
        }

        loginButton.addEventListener("click", loginWithMetaMask);
      }

      async function loginWithMetaMask() {
        const accounts = await window.ethereum
          .request({ method: "eth_requestAccounts" })
          .catch((e) =&amp;gt; {
            console.error(e.message);
            return;
          });
        if (!accounts) {
          return;
        }

        window.userWalletAddress = accounts[0];
        userWallet.innerText = window.userWalletAddress;
        loginButton.innerText = "Sign out of MetaMask";

        loginButton.removeEventListener("click", loginWithMetaMask);
        setTimeout(() =&amp;gt; {
          loginButton.addEventListener("click", signOutOfMetaMask);
        }, 200);
      }

      function signOutOfMetaMask() {
        window.userWalletAddress = null;
        userWallet.innerText = "";
        loginButton.innerText = "Sign in with MetaMask";

        loginButton.removeEventListener("click", signOutOfMetaMask);
        setTimeout(() =&amp;gt; {
          loginButton.addEventListener("click", loginWithMetaMask);
        }, 200);
      }

      window.addEventListener("DOMContentLoaded", () =&amp;gt; {
        toggleButton();
      });
    &amp;lt;/script&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So let's test our code. Open your html file in your browser(make sure you have Metamask extension installed).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OMEKCtQr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lffznc8ex4iqhg4zur0l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OMEKCtQr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lffznc8ex4iqhg4zur0l.jpg" alt="connect" width="880" height="437"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After clicking the button, the Metamask window pops up;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AUNVIdiv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t59u3l7j7hpofae3krz1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AUNVIdiv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t59u3l7j7hpofae3krz1.jpg" alt="popup" width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On granting permision to connect, we display the wallet address, we also replace the "Signin with Metamask" to a "Sign out of Metamask" button.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--w6fBM8d9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/albszxjcacab1kff55tq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w6fBM8d9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/albszxjcacab1kff55tq.jpg" alt="display address" width="880" height="439"&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This explanation above is just a simple way of connecting your frontend to Metamask 😀😁. Thanks!!! more content about blockchain coming up so click the follow button.....&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>metamask</category>
      <category>javascript</category>
      <category>dapps</category>
    </item>
    <item>
      <title>A complete AWS Architecture for Module-federated micro-frontends</title>
      <author>Antonio Lagrotteria</author>
      <pubDate>Fri, 24 Dec 2021 15:21:52 +0000</pubDate>
      <link>https://dev.to/aws-builders/a-complete-aws-architecture-for-module-federated-micro-frontends-2meg</link>
      <guid>https://dev.to/aws-builders/a-complete-aws-architecture-for-module-federated-micro-frontends-2meg</guid>
      <description>&lt;p&gt;&lt;strong&gt;Follow me on Medium to stay tuned for more articles in this area ;)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Original article: &lt;a href="https://levelup.gitconnected.com/a-complete-aws-architecture-for-module-federated-micro-frontends-a0306ba466e3"&gt;https://levelup.gitconnected.com/a-complete-aws-architecture-for-module-federated-micro-frontends-a0306ba466e3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My next series of articles presents a complete server-less architecture aiming at deploying and hosting client-side mono-repo micro-frontends on AWS, based on &lt;a href="https://webpack.js.org/concepts/module-federation/"&gt;Webpack Module Federation&lt;/a&gt; plugin and &lt;a href="https://github.com/lerna/lerna"&gt;Lerna&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All AWS resources will be provisioned via CDK, meaning that in a matter of minutes, you will get a production-ready, reliable, and scalable infrastructure deployed to your AWS account, allowing your teams to scale independently and deliver fast business iterations via their independent micro-frontends.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-architecture"&gt;
  &lt;/a&gt;
  The Architecture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--00PwjEPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3342/1%2AT_OrAE8h81-7u_2x5DWJIw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--00PwjEPH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/3342/1%2AT_OrAE8h81-7u_2x5DWJIw.png" alt="High level architecture" width="880" height="455"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The architecture consists of 3 main parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Mono-repo code changes triggering specific deployment pipelines.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Deployment pipelines building and deploying bundle artifacts to target AWS resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Globally scalable hosting infrastructure tailored for client-side micro-frontends.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#a-bit-on-monorepo-setup"&gt;
  &lt;/a&gt;
  A bit on Mono-repo setup
&lt;/h2&gt;

&lt;p&gt;Micro-frontends are part of a mono-repo setup, aka a single repository with sub folders including independent web apps, glued together through the Webpack Module Federation plugin and Lerna. A sneak peek of repo structure can be seen below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r0VZWW2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AWJ7j1CvzaZ9Dn5CNY4doPQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r0VZWW2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AWJ7j1CvzaZ9Dn5CNY4doPQ.png" alt="Mono-repo structure" width="226" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are impatient, you can see how micro-frontends are represented via Module Federation systems in the below gist, which will be discussed in detail in near future.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
&lt;br&gt;
In a nutshell, the above code allows us to model micro-frontends as systems which can be lazily loaded as Web components in your app. The trick is to dynamically inject each micro-frontend script in the app page so that they can be remotely loaded by the host /shell app. As said, more to come in the upcoming article. For now, we will look at the 3 sub-architectures mentioned early.

&lt;h2&gt;
  &lt;a href="#monorepo-triggers"&gt;
  &lt;/a&gt;
  Mono-repo triggers
&lt;/h2&gt;

&lt;p&gt;The goal of this first step is to capture individual micro-frontend repos changes and trigger them for later use by server-less components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NJx_SzcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A8bLIHFGWteY4F7u_OJsafA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NJx_SzcE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2A8bLIHFGWteY4F7u_OJsafA.png" alt="Mono-repo triggers from GitHub" width="501" height="385"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Developers push the changes to their belonging micro-frontend via Github, though the same can be accomplished for other well known versioning source platforms such as BitBucket. Via a &lt;a href="https://docs.github.com/en/developers/webhooks-and-events/webhooks/about-webhooks"&gt;Github webhook&lt;/a&gt;, changes are handled by a Lambda function exposed as Restful api via an ApiGateway. Main goal of Lambda is to associate the micro-frontend code change with their destination pipeline. A manual walkthrough of this approach can be appreciated &lt;a href="https://levelup.gitconnected.com/a-server-less-ci-cd-approach-for-mono-rep-micro-frontends-e91261bbdf69"&gt;here&lt;/a&gt;, while its CDK implementation will be part of the next article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#deployment-pipeline"&gt;
  &lt;/a&gt;
  Deployment pipeline
&lt;/h2&gt;

&lt;p&gt;The goal of the second step is to make sure that individual micro-frontend repo changes trigger individual code pipelines. This encourages team independence as if only a micro-frontend is modified (e.g.: mfe-app1), we only want to trigger its related pipeline, and not all the others.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zvYLf2s1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AvQTICQ0SDtJg4VKNL4PAeg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zvYLf2s1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AvQTICQ0SDtJg4VKNL4PAeg.png" alt="Deployment CI/CD" width="656" height="592"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once a code change is associated, an AWS Code Pipeline gets started. This includes four main steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Code Pipeline&lt;/em&gt; itself, which manages the GitHub connection and fetches the associated GitHub source code&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Code Build&lt;/em&gt;, which builds the receiving source code into a build artifact. As micro-frontends are JavaScript based, they will leverage yarn to build them into a set of bundles to be used in the next step.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Code Deploy&lt;/em&gt;. This step takes the built bundled files from previous steps and deploys them to a single Simple Storage Service (S3). Each micro-frontend will be stored in an independent “folder” (or key), so that they can be deployed individually.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;em&gt;Code Build Cache Invalidation&lt;/em&gt;. The last step is yet another Code Build step which ensures that CloudFront cache gets invalidated every time we publish and deploy new artifacts on S3.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#hosting-infrastructure"&gt;
  &lt;/a&gt;
  Hosting infrastructure
&lt;/h2&gt;

&lt;p&gt;Last but not least, foundational AWS resources need to be provisioned. The goal of this last step is to make sure this happens with a scalable, simple yet smart and reliable architecture.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OD9y3zsJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AzK1QOLn0giIQ_85rkUEUAw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OD9y3zsJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2000/1%2AzK1QOLn0giIQ_85rkUEUAw.png" alt="Hosting infrastructure with S3 and Cloudfront" width="601" height="502"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With above sub-architecture, end-users will access the web application via a CloudFront distribution &lt;a href="https://aws.amazon.com/waf/"&gt;protected by WAF&lt;/a&gt; , given the micro-frontends are customer-facing optimized applications. CloudFront connects to the private S3 bucket via an &lt;a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html"&gt;OAI &lt;/a&gt;identity, ensuring data is publicly accessible only via the CDN and not directly from the bucket. CloudFront uses a &lt;a href="https://aws.amazon.com/lambda/edge/"&gt;Lambda@Edge&lt;/a&gt; function for proper dispatching towards different origins coming from the single bucket.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cdk-to-rule-them-all"&gt;
  &lt;/a&gt;
  CDK to rule them all
&lt;/h2&gt;

&lt;p&gt;All above will be provisioned via a CDK application which includes three stacks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The foundation stack. This provisions the foundational AWS resources used to host the app including S3 bucket, a Lambda@Edge function, a CloudFront distribution and various IAM policies, roles and OAI to support correct privacy and security.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The second stack is an implicit one because it gets created when provisioning the Lambda@Edge function via the CDK Experimental CloudFront API, as it has to deploy the Lambda@Edge on a specific AWS region (us-east-1 is used by default for all edge functions).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The ci/cd deploymemt stack. Its job is to provision all AWS resources associated to ApiGateway and the Code Pipeline.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;This article leaves intentionally a cliffhanger feeling as there is a lot to cover. It gives an high level overview of a de-facto server-less AWS architecture for hosting and deploying mono-repo micro-frontends based on Module Federation Webpack plugin. Following articles will deep dive in how this was achieved, so better stay tuned ;)&lt;/p&gt;

</description>
      <category>aws</category>
      <category>microfrontends</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Configuration As Code Using Amazon EC2 Systems Manager</title>
      <author>Swapnil Pawar</author>
      <pubDate>Fri, 24 Dec 2021 15:19:15 +0000</pubDate>
      <link>https://dev.to/spawar1991/configuration-as-code-using-amazon-ec2-systems-manager-3iej</link>
      <guid>https://dev.to/spawar1991/configuration-as-code-using-amazon-ec2-systems-manager-3iej</guid>
      <description>&lt;p&gt;Amazon EC2 Systems Manager (SSM) lets you configure, manage and automate your AWS and on-premises resources at scale. You can perform safe and secure operations without SSH access or bastion hosts using Systems Manager Run Command, mitigate configuration drift using Systems Manager State Manager, and create an access-controlled environment with full auditing. &lt;/p&gt;

&lt;p&gt;With SSM Documents, you can author your configurations as code and enable centralized management across accounts, enforcing best practices. Systems Manager provides a number of public documents for common management scenarios, or you can create your own document for deployment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-configuration-as-code"&gt;
  &lt;/a&gt;
  What Is Configuration as Code?
&lt;/h2&gt;

&lt;p&gt;Configuration as code is the practice of managing configuration files in a repository. Config files establish the parameters and settings for applications, operating systems, etc. By managing your config files alongside your code, you can help streamline your release pipeline.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#benefits-of-using-configuration-as-code"&gt;
  &lt;/a&gt;
  Benefits of Using Configuration as Code?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Scalability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Maintaining configuration changes as code allows to edit, update and create from the central location using a consistent deployment strategy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Standardization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you write configuration as code, you can implement other operations like testing, scanning, and linting. Having config files reviewed and tested before they are committed ensures that changes follow your team’s standards. If you have a complex microservices architecture, this can keep your configurations stable and consistent. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Traceability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By storing configuration as code in the repository, we get the benefit of tracking changes in code and config files. If a bug does slip in, you have the ability to trace the source of the problem. You can diff the versioned config files to see what went wrong and fix it quickly.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Configuration As Code acts as a Single Source of Truth for your build pipeline.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#other-things-you-can-do-"&gt;
  &lt;/a&gt;
  Other things you can do :
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Execute various types of scripts&lt;/em&gt; written in Python, Ruby, or PowerShell. You can also run configurations such as Ansible playbooks. You can pretty much-run anything on your instances as long as the software (e.g., Python 3.8 or Ansible) is installed on your instance and recognized by Shell on Linux and PowerShell on Windows.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Download scripts&lt;/em&gt; stored in private or public GitHub repositories, or on Amazon S3 onto your instances for execution.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Run multiple files&lt;/em&gt; by downloading a complete GitHub directory or an S3 bucket.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#use-case"&gt;
  &lt;/a&gt;
  Use Case:
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Find the AWS-RunRemoteScript document for execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On the AWS SSM console, on the navigation pane at the left, under Node Management Services, choose Run Command. Choose Run a Command, and then select the &lt;em&gt;AWS-RunRemoteScript&lt;/em&gt; document and the instances you want to execute this document on (whether a list of instances or tag-queries).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reference-the-python-playbook-located-on-github"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Reference the python playbook located on GitHub&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Enter the parameters for the &lt;em&gt;AWS-RunRemoteScript&lt;/em&gt; Document to reference the Ansible playbook.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Source Type: Location of the script – GitHub, S3. In this case, choose GitHub.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Source Info: Provides location information for accessing the content.  In this example, since the repository is private, you need to provide an access token from GitHub, the owner, repository, and the path to the python script. So we’ll download the script, which includes an example.py script file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#run-python-script-from-private-github-repository"&gt;
  &lt;/a&gt;
  Run Python Script from private GitHub repository
&lt;/h2&gt;

&lt;p&gt;Now, I’ll show you how to execute scripts from private GitHub repositories. Let’s assume that the custom python script in this example is stored in a private GitHub repository. To access this script, you need to create a private access token on GitHub and store it in Amazon EC2 Systems Manager Parameter Store.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-create-your-github-personal-access-token"&gt;
  &lt;/a&gt;
  Step 1: Create your GitHub personal access token
&lt;/h3&gt;

&lt;p&gt;Create a personal access token for your private GitHub repo to give the Systems Manager access to the playbook. Personal API tokens are a way to provide access to systems to access information from your private GitHub repository. These tokens provide limited access to a subset of repository data as well as the ability to revoke access when needed. You can create a personal access token from the information provided here and then save the token value.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-store-the-tokens-in-parameter-store"&gt;
  &lt;/a&gt;
  Step 2: Store the tokens in Parameter Store
&lt;/h3&gt;

&lt;p&gt;After creating the personal access token, go to Parameter Store on the SSM console. On the Parameter Store page (Under Application Management), create a parameter and add the token you created on GitHub here, in the Value text box.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HfkcrL13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5olkxaflbzbmyc4f31gs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfkcrL13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5olkxaflbzbmyc4f31gs.png" alt="AWS SSM Parameter Store" width="880" height="323"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-reference-the-python-script-located-on-github"&gt;
  &lt;/a&gt;
  Step 3: Reference the Python script located on GitHub
&lt;/h3&gt;

&lt;p&gt;Along with owner, repository, and path, we will add “tokenInfo” which refers to the example-token secure string parameter that we just created. The reference is made using the ssm-secure prefix.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e4qBWSdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vi0ahyt0t04moc5zvlzn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e4qBWSdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vi0ahyt0t04moc5zvlzn.png" alt="SSM GitHub Source Config" width="790" height="489"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;{&lt;br&gt;
    "owner": "spawar1991",&lt;br&gt;
    "repository": "AWS-SSM-Demos",&lt;br&gt;
    "getOptions": "branch:dev",&lt;br&gt;
    "path": "scripts/python",&lt;br&gt;
    "tokenInfo": "{{ssm-secure:&amp;lt;Parameter-Store-Parameter-Name&amp;gt;}}"&lt;br&gt;
}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Select the targets where you want to execute the script and click on the run command.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jLSfueuZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxx066e7d46qqjccybs7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jLSfueuZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gxx066e7d46qqjccybs7.png" alt="Create Run Command Operation" width="880" height="452"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ENhhfHnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1515ibb54uq7s0pji1l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ENhhfHnK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x1515ibb54uq7s0pji1l.png" alt="Create Run Command Operation" width="880" height="472"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to write command output to the S3 bucket or Cloudwatch Logs, under the Output options section, you can mention the log group.&lt;/p&gt;

&lt;p&gt;You can also view the Run command output in the SSM console. Go to Systems Manager → NOde Management → Run Command&lt;/p&gt;

&lt;p&gt;Click on the “Command history” Tab. Open the last run command → check Targets &amp;amp; output section&lt;/p&gt;

&lt;p&gt;Now, Click on Instance Id column and you’ll be able to see the execution steps with output and error section. You can expand each section to see the output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i2zj6hMs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yltvl3xcffkaoxmg09r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i2zj6hMs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6yltvl3xcffkaoxmg09r.png" alt="Run Command History Output" width="880" height="509"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;In this, I showed you how AWS Systems Manager is a management platform that lets you use your existing tools to manage your AWS resources and environments. I showed you how to use Systems Manager to run a Python Script on your EC2 instances from a public and private GitHub repository. Using the AWS-RunRemoteScript public document and aws:runShellScript plugins, you can run any script such as Python, Ruby, or even PowerShell scripts or modules.  &lt;/p&gt;

</description>
      <category>cloudnative</category>
      <category>devops</category>
      <category>aws</category>
      <category>github</category>
    </item>
    <item>
      <title>Log Container image scan from Amazon ECR in CloudWatch</title>
      <author>Learn2Skills</author>
      <pubDate>Fri, 24 Dec 2021 14:58:32 +0000</pubDate>
      <link>https://dev.to/aws-builders/log-container-image-scan-from-amazon-ecr-in-cloudwatch-5133</link>
      <guid>https://dev.to/aws-builders/log-container-image-scan-from-amazon-ecr-in-cloudwatch-5133</guid>
      <description>&lt;p&gt;In order to pull the scan findings from ECR, a DescribeImageScanFindings API call is used by the AWS Lambda function, which will be triggered each time a scan is completed by ECR. A log group is created for each repository with the name format ‘/aws/ecr/image-scan-findings/repo-name’. Then, the findings for each image inside the repository will be sorted by severity. A log stream will be created for each severity found on this image (‘LOW’, ‘MEDIUM’, etc.), in addition to a summary log stream for all of the findings count. The Lambda function finally puts the sorted findings to the corresponding log stream.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Solution overview:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A client (could be a user or machine) triggers a scan for an image. This can be done manually (using the AWS Management Console, CLI, or SDK), or after the push of an image to the repository that has scan on push enabled.&lt;/li&gt;
&lt;li&gt;Amazon ECR scans the image. After the scan is complete, an event is sent to Amazon EventBridge confirming the completion of the scan.&lt;/li&gt;
&lt;li&gt;An EventBridge rule triggers a Lambda function based on matching the previous event with an expression.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Lambda function will:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Analyze the event. The function fetches the account ID, image details (digest and tag), and repository name.
2. Use fetched information to request a DescribeImageScanFindings API call.
3. Create a log group for the corresponding repository, if one does not exist already.
4. Create log streams for each severity found in the findings, and puts each finding in the related log stream, in addition to a summary log stream.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After a successful scan and logging attempt by the solution, you can view all image scan findings from CloudWatch logs &amp;gt; the corresponding log group ‘/aws/ecr/image-scan-findings/repo-name’, with the ability to search for a specific vulnerability in all of the images associated with this repository.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Optional steps include:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Create CloudWatch alarms based on string matching to a vulnerability name, or a specific severity.
2. Create subscription filters for the log group such as Elasticsearch, Kinesis, and Lambda.
3. Archive the findings in S3.
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wTrQFmGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crmhqorycpxymclfpptb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wTrQFmGD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crmhqorycpxymclfpptb.png" alt="Image description" width="880" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;br&gt;
The provided CloudFormation template will need the following permissions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a CloudFormation stack.&lt;/li&gt;
&lt;li&gt;Create an IAM execution role for the Lambda function that has the following actions:
ecr:DescribeImageScanFindings
logs:CreateLogStream
logs:GetLogEvents
logs:PutLogEvents
logs:CreateLogGroup&lt;/li&gt;
&lt;li&gt;Create a Lambda function and resource-based permission to allow EventBridge to trigger this Lambda function.&lt;/li&gt;
&lt;li&gt;Create an EventBridge rule and set the trigger to be the Lambda function.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#deploying-the-solution-using-the-cloudformation-template"&gt;
  &lt;/a&gt;
  Deploying the solution using the CloudFormation template:
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Download the &lt;a href="https://github.com/aws-samples/ecr-image-scan-findings-logger"&gt;CloudFormation template&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;With the required permissions listed above, upload the CloudFormation template and create a stack.&lt;/li&gt;
&lt;li&gt;Test the solution by scanning an image on ECR. Then, go to CloudWatch and check log groups starting with ‘/aws/ecr/image-scan-findings/repository name’.&lt;/li&gt;
&lt;li&gt;Feel free to modify the Lambda function code within the template and/or create the resources manually.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>aws</category>
      <category>docker</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Useful AWS Training Resources</title>
      <author>Robin Ford</author>
      <pubDate>Fri, 24 Dec 2021 14:45:20 +0000</pubDate>
      <link>https://dev.to/aws-builders/useful-aws-training-resources-p96</link>
      <guid>https://dev.to/aws-builders/useful-aws-training-resources-p96</guid>
      <description>&lt;p&gt;One thing I think is important in technology is to never stop learning. For me change in technology is like a river, it never stops flowing, and at times such as re:invent it can feel like a flood. Things are changing so rapidly if you don't keep up to date you will drown in all the announcements and changes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uizBE4Aq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ols9yay9qas5ljiy69o4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uizBE4Aq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ols9yay9qas5ljiy69o4.png" alt="Skillbuilder Website" width="880" height="388"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hopefully you have all heard about the &lt;strong&gt;&lt;a href="https://explore.skillbuilder.aws/learn"&gt;skillbuilder.aws&lt;/a&gt;&lt;/strong&gt; website that has over two and a half thousand digital courses in 16 languages. What you may not know is that there is a raft of other training material out there either direct from AWS or others that can help with your learning journey.&lt;/p&gt;

&lt;p&gt;My goal here is not to provide a definitive list or endorse any resources but to provide a list of resources that are often hard to find or topics I think are important to know. Hopefully you'll find this list useful. It is not meant to be exhaustive but it you feel there is a site or channel I really should include let me know. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-sites"&gt;
  &lt;/a&gt;
  Web Sites
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;AWS managed sites.&lt;/strong&gt;&lt;br&gt;
As well as the skill builder website and service documentation there are 3 resources libraries on the AWS website as well as over 400 hands on tutorials.&lt;br&gt;
&lt;a href="https://aws.amazon.com/developer"&gt;- AWS Developer Centre&lt;/a&gt;&lt;br&gt;
&lt;a href="https://aws.amazon.com/architecture"&gt;- AWS Architecture Centre&lt;/a&gt;&lt;br&gt;
&lt;a href="https://aws.amazon.com/builders-library"&gt;- AWS Builders Library&lt;/a&gt;&lt;br&gt;
&lt;a href="https://aws.amazon.com/getting-started/hands-on/"&gt;- AWS hands-on Tutorials&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS then do a really good job at providing labs. A lot of these are not highly publicized, although can be found on Google, but instead referenced in immersion days, AWS events and the like. A useful source for hands-on with explanation aimed at all levels of knowledge and skills.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://workshops.aws/"&gt;AWS workshops&lt;/a&gt; is the main site with 100's of workshops you can follow in areas ranging from astronomy to zero-trust.&lt;br&gt;
&lt;a href="https://awsworkshop.io/"&gt;AWSworkshop.io&lt;/a&gt; is focused on modernization workshops and currently has just over 50 labs to follow.&lt;br&gt;
&lt;a href="https://awssecworkshops.com/"&gt;AWS Security Workshops&lt;/a&gt; as the name indicates is focused purely on security related labs and workshops.&lt;br&gt;
&lt;a href="https://wellarchitectedlabs.com/"&gt;AWS Well-Architected Labs&lt;/a&gt; has labs in the 5 pillars, hopefully sustainability will be added next year. The goal for these labs is to improve your posture in each area and become "well architected".&lt;br&gt;
&lt;a href="https://controltower.aws-management.tools/"&gt;Control Tower Tools&lt;/a&gt; for those of you wanting to gain more insight to AWS Control Tower this is the place to be. It's based on the immersion day but has so much more including integration with ITSM tools and customizations.&lt;/p&gt;

&lt;p&gt;If your going serverless, which you probably should at least be thinking about, then &lt;a href="https://serverlessland.com/"&gt;Serverless Land&lt;/a&gt; is the place to head to. It is a hub  of information and contains it's own content, such as over 100 design pattern templates, in addition to pointing to to other resources such as AWS Blogs and videos.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other sites.&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://acloudguru.com/"&gt;acloudguru&lt;/a&gt; and &lt;a href="https://cloudacademy.com/"&gt;cloudacademy&lt;/a&gt; are two of the more popular learning platforms for both individuals and organizations. Although aiming at paid members they do offer an incredible amount for free.&lt;br&gt;
&lt;a href="https://www.codecademy.com/"&gt;codecademy&lt;/a&gt; is focused purely on code skills, but again has a free tier as well as paid options for individuals and businesses.&lt;br&gt;
&lt;a href="https://cloudonaut.io/"&gt;cloudonaut.io&lt;/a&gt; is two brothers with a passion for AWS. They have code examples, videos and a podcast.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#youtube-channels"&gt;
  &lt;/a&gt;
  YouTube Channels
&lt;/h2&gt;

&lt;p&gt;As you would expect there is a lot of content on YouTube while the quality of some content is dubious there is a lot of good content both official from AWS or partners as well as individuals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Channels&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/c/amazonwebservices"&gt;Amazon Web Services&lt;/a&gt; is the main channel for AWS and is a mixture of PR and Technical content.&lt;br&gt;
&lt;a href="https://www.youtube.com/c/AWSEventsChannel"&gt;AWS Events Channel&lt;/a&gt; focuses on AWS events such as re:Invent and Summits. It has both keynotes and breakouts as well a AWS on Air.&lt;br&gt;
&lt;a href="https://www.youtube.com/c/AWSOnlineTechTalks"&gt;AWS Online Tech Talks&lt;/a&gt; features talks with AWS experts in a wide range of topic.&lt;br&gt;
&lt;a href="https://www.youtube.com/c/elementaltech"&gt;AWS Elemental Tech&lt;/a&gt; is one of a couple of industry focused channels looking in this case at the Media and Entertainment industry.&lt;br&gt;
&lt;a href="https://www.youtube.com/c/AWSPublicSector"&gt;AWS Public Sector&lt;/a&gt; is the other industry channel for Public Sector clients.&lt;/p&gt;

&lt;p&gt;There are a number of other channels including regional channels for native language resources so be sure to look for related channels.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Other Channels&lt;/strong&gt;&lt;br&gt;
As well as the AWS channels there are numerous other channels that I often refer to. I've split these into 3 categories.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Training Providers&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/c/AcloudGuru/"&gt;acloudguru&lt;/a&gt; is the channel for the acloud.guru learning site. They offer a lot for free and not just AWS but technologies such as Kubernettes and Networking.&lt;br&gt;
&lt;a href="https://www.youtube.com/c/LinuxAcademycom"&gt;Linux Academy&lt;/a&gt; although acquired by acloud.guru there is a lot of previous content that is very useful.&lt;br&gt;
&lt;a href="https://www.youtube.com/c/Cloudacademy"&gt;Cloudacademy&lt;/a&gt; is the another training provider that puts a lot of information on YouTube for free and well worth a look.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vendors&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/c/UbuntuOS"&gt;UbuntuOS&lt;/a&gt; and &lt;a href="https://www.youtube.com/c/redhat"&gt;Redhat&lt;/a&gt; both offer lots of content for use of their OS's.&lt;br&gt;
&lt;a href="https://www.youtube.com/c/KubernetesCommunity"&gt;Kubernetes Community&lt;/a&gt; channel is jam backed with advice and resources to get you started and progress your container knowledge.&lt;br&gt;
Although you might only use &lt;a href="https://www.youtube.com/c/CiscoSystems"&gt;Cisco&lt;/a&gt; on premise they offer a lot of networking fundamental videos.&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UC7c3Kb6jYCRj4JOHHZTxKsQ"&gt;Git Hub&lt;/a&gt; and &lt;a href="https://www.youtube.com/channel/UCnMGQ8QHMAnVIsI3xJrihhg"&gt;Git Lab&lt;/a&gt; both offer both product resources and general DevOps advice.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Others&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/channel/UC9x0AN7BWHpCDHSm9NiJFJQ"&gt;Network Chuck&lt;/a&gt; is not only just for networking but covers a range of topics in an relaxed and easy to follow manner.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>beginners</category>
      <category>help</category>
    </item>
  </channel>
</rss>
