<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>WordPress - Minify CSS, HTML, JS files using PHP</title>
      <author>Deepak Singh</author>
      <pubDate>Tue, 09 Nov 2021 09:55:46 +0000</pubDate>
      <link>https://dev.to/techmesh/wordpress-minify-css-html-js-files-using-php-2pb9</link>
      <guid>https://dev.to/techmesh/wordpress-minify-css-html-js-files-using-php-2pb9</guid>
      <description>&lt;p&gt;As web developers or designers, we all have an enemy which is called Site Speed. There are so many ways to speed up your web page, we are going to discuss one of those ways. Minifying HTML, CSS &amp;amp; JavaScript.&lt;/p&gt;

&lt;p&gt;Minifying means removing redundant or unnecessary data such as spacing, well-named variables, and comments.&lt;/p&gt;

&lt;p&gt;The minified version of the code [HTML, CSS, JavaScript] is 48% smaller in general. In some cases, minification can reduce the file size by as much as 60%. For example, there's a 176 kb difference between the original and minified version of the jQuery/JavaScript library.&lt;/p&gt;

&lt;p&gt;It reduces web page load times and bandwidth usage on websites and improves website speed and accessibility.&lt;/p&gt;

&lt;p&gt;So, we are going to minify WordPress using a simple PHP function. Add below codes to your functions.php, if your are using child theme add in side child-theme/functions.php.&lt;/p&gt;

&lt;p&gt;Step One Create a Class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class WP_HTML_Compression{
    protected $wp_compress_css = true;
    protected $wp_compress_js = true;
    protected $wp_info_comment = true;
    protected $wp_remove_comments = true;
    protected $html;
    public function __construct($html)
    {
        if (!empty($html)) {
            $this-&amp;gt;wp_parseHTML($html);
        }
    }
    public function __toString()
    {
        return $this-&amp;gt;html;
    }
    protected function wp_bottomComment($raw, $compressed)
    {
        $raw = strlen($raw);
        $compressed = strlen($compressed);
        $savings = ($raw - $compressed) / $raw * 100;
        $savings = round($savings, 2);
        return '&amp;lt;!--HTML compressed, size saved ' . $savings . '%. From ' . $raw . ' bytes, now ' . $compressed . ' bytes--&amp;gt;';
    }
    protected function wp_minifyHTML($html)
    {
        $pattern = '/&amp;lt;(?&amp;lt;script&amp;gt;script).*?&amp;lt;\/script\s*&amp;gt;|&amp;lt;(?&amp;lt;style&amp;gt;style).*?&amp;lt;\/style\s*&amp;gt;|&amp;lt;!(?&amp;lt;comment&amp;gt;--).*?--&amp;gt;|&amp;lt;(?&amp;lt;tag&amp;gt;[\/\w.:-]*)(?:".*?"|\'.*?\'|[^\'"&amp;gt;]+)*&amp;gt;|(?&amp;lt;text&amp;gt;((&amp;lt;[^!\/\w.:-])?[^&amp;lt;]*)+)|/si';
        preg_match_all($pattern, $html, $matches, PREG_SET_ORDER);
        $overriding = false;
        $raw_tag = false;
        $html = '';
        foreach ($matches as $token) {
            $tag = (isset($token['tag'])) ? strtolower($token['tag']) : null;
            $content = $token[0];
            if (is_null($tag)) {
                if (!empty($token['script'])) {
                    $strip = $this-&amp;gt;wp_compress_js;
                } else if (!empty($token['style'])) {
                    $strip = $this-&amp;gt;wp_compress_css;
                } else if ($content == '&amp;lt;!--wp-html-compression no compression--&amp;gt;') {
                    $overriding = !$overriding;
                    continue;
                } else if ($this-&amp;gt;wp_remove_comments) {
                    if (!$overriding &amp;amp;&amp;amp; $raw_tag != 'textarea') {
                        $content = preg_replace('/&amp;lt;!--(?!\s*(?:\[if [^\]]+]|&amp;lt;!|&amp;gt;))(?:(?!--&amp;gt;).)*--&amp;gt;/s', '', $content);
                    }
                }
            } else {
                if ($tag == 'pre' || $tag == 'textarea') {
                    $raw_tag = $tag;
                } else if ($tag == '/pre' || $tag == '/textarea') {
                    $raw_tag = false;
                } else {
                    if ($raw_tag || $overriding) {
                        $strip = false;
                    } else {
                        $strip = true;
                        $content = preg_replace('/(\s+)(\w++(?&amp;lt;!\baction|\balt|\bcontent|\bsrc)="")/', '$1', $content);
                        $content = str_replace(' /&amp;gt;', '/&amp;gt;', $content);
                    }
                }
            }
            if ($strip) {
                $content = $this-&amp;gt;wp_removeWhiteSpace($content);
            }
            $html .= $content;
        }
        return $html;
    }
    public function wp_parseHTML($html)
    {
        $this-&amp;gt;html = $this-&amp;gt;wp_minifyHTML($html);
        if ($this-&amp;gt;wp_info_comment) {
            $this-&amp;gt;html .= "\n" . $this-&amp;gt;wp_bottomComment($html, $this-&amp;gt;html);
        }
    }
    protected function wp_removeWhiteSpace($str)
    {
        $str = str_replace("\t", ' ', $str);
        $str = str_replace("\n",  '', $str);
        $str = str_replace("\r",  '', $str);
        $str = str_replace(" This function requires postMessage and CORS (if the site is cross domain).", '', $str);
        while (stristr($str, '  ')) {
            $str = str_replace('  ', ' ', $str);
        }
        return $str;
    }
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step Two call the functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function wp_html_compression_finish($html)
 {
    return new WP_HTML_Compression($html);
 }
 function wp_wp_html_compression_start()
 {
    ob_start('wp_html_compression_finish');
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Final step call Wp hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;add_action('get_header', 'wp_wp_html_compression_start');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All to getherL&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class WP_HTML_Compression{
    protected $wp_compress_css = true;
    protected $wp_compress_js = true;
    protected $wp_info_comment = true;
    protected $wp_remove_comments = true;
    protected $html;
    public function __construct($html)
    {
        if (!empty($html)) {
            $this-&amp;gt;wp_parseHTML($html);
        }
    }
    public function __toString()
    {
        return $this-&amp;gt;html;
    }
    protected function wp_bottomComment($raw, $compressed)
    {
        $raw = strlen($raw);
        $compressed = strlen($compressed);
        $savings = ($raw - $compressed) / $raw * 100;
        $savings = round($savings, 2);
        return '&amp;lt;!--HTML compressed, size saved ' . $savings . '%. From ' . $raw . ' bytes, now ' . $compressed . ' bytes--&amp;gt;';
    }
    protected function wp_minifyHTML($html)
    {
        $pattern = '/&amp;lt;(?&amp;lt;script&amp;gt;script).*?&amp;lt;\/script\s*&amp;gt;|&amp;lt;(?&amp;lt;style&amp;gt;style).*?&amp;lt;\/style\s*&amp;gt;|&amp;lt;!(?&amp;lt;comment&amp;gt;--).*?--&amp;gt;|&amp;lt;(?&amp;lt;tag&amp;gt;[\/\w.:-]*)(?:".*?"|\'.*?\'|[^\'"&amp;gt;]+)*&amp;gt;|(?&amp;lt;text&amp;gt;((&amp;lt;[^!\/\w.:-])?[^&amp;lt;]*)+)|/si';
        preg_match_all($pattern, $html, $matches, PREG_SET_ORDER);
        $overriding = false;
        $raw_tag = false;
        $html = '';
        foreach ($matches as $token) {
            $tag = (isset($token['tag'])) ? strtolower($token['tag']) : null;
            $content = $token[0];
            if (is_null($tag)) {
                if (!empty($token['script'])) {
                    $strip = $this-&amp;gt;wp_compress_js;
                } else if (!empty($token['style'])) {
                    $strip = $this-&amp;gt;wp_compress_css;
                } else if ($content == '&amp;lt;!--wp-html-compression no compression--&amp;gt;') {
                    $overriding = !$overriding;
                    continue;
                } else if ($this-&amp;gt;wp_remove_comments) {
                    if (!$overriding &amp;amp;&amp;amp; $raw_tag != 'textarea') {
                        $content = preg_replace('/&amp;lt;!--(?!\s*(?:\[if [^\]]+]|&amp;lt;!|&amp;gt;))(?:(?!--&amp;gt;).)*--&amp;gt;/s', '', $content);
                    }
                }
            } else {
                if ($tag == 'pre' || $tag == 'textarea') {
                    $raw_tag = $tag;
                } else if ($tag == '/pre' || $tag == '/textarea') {
                    $raw_tag = false;
                } else {
                    if ($raw_tag || $overriding) {
                        $strip = false;
                    } else {
                        $strip = true;
                        $content = preg_replace('/(\s+)(\w++(?&amp;lt;!\baction|\balt|\bcontent|\bsrc)="")/', '$1', $content);
                        $content = str_replace(' /&amp;gt;', '/&amp;gt;', $content);
                    }
                }
            }
            if ($strip) {
                $content = $this-&amp;gt;wp_removeWhiteSpace($content);
            }
            $html .= $content;
        }
        return $html;
    }
    public function wp_parseHTML($html)
    {
        $this-&amp;gt;html = $this-&amp;gt;wp_minifyHTML($html);
        if ($this-&amp;gt;wp_info_comment) {
            $this-&amp;gt;html .= "\n" . $this-&amp;gt;wp_bottomComment($html, $this-&amp;gt;html);
        }
    }
    protected function wp_removeWhiteSpace($str)
    {
        $str = str_replace("\t", ' ', $str);
        $str = str_replace("\n",  '', $str);
        $str = str_replace("\r",  '', $str);
        $str = str_replace(" This function requires postMessage and CORS (if the site is cross domain).", '', $str);
        while (stristr($str, '  ')) {
            $str = str_replace('  ', ' ', $str);
        }
        return $str;
    }
 }
 function wp_html_compression_finish($html)
 {
    return new WP_HTML_Compression($html);
 }
 function wp_wp_html_compression_start()
 {
    ob_start('wp_html_compression_finish');
 }
 add_action('get_header', 'wp_wp_html_compression_start');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Conclusion:&lt;br&gt;
Instead of using plugins to minify simply add this function to your WordPress site and see the magic🏃‍♂️.&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>php</category>
      <category>html</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Day 32 of 100 Days of Code &amp; Scrum: Branching, Merging, and More Physical Therapy</title>
      <author>Rammina</author>
      <pubDate>Tue, 09 Nov 2021 09:47:49 +0000</pubDate>
      <link>https://dev.to/rammina/day-32-of-100-days-of-code-scrum-branching-merging-and-more-physical-therapy-4m12</link>
      <guid>https://dev.to/rammina/day-32-of-100-days-of-code-scrum-branching-merging-and-more-physical-therapy-4m12</guid>
      <description>&lt;p&gt;Hello there!&lt;/p&gt;

&lt;p&gt;Like every Tuesday, wasn't that productive today because I was impeded by my Physical Therapy session.&lt;/p&gt;

&lt;p&gt;I didn't have much time for coding, and the best that I could do where make a desktop breakpoint for my navbar, re-factor my code, and then do a pull request to merge it with my main branch. Next, I have to make a Services section, so I was looking at the websites of web agencies to use as a reference for design. I did not start coding it yet, but I already made another branch for it.&lt;/p&gt;

&lt;p&gt;Anyway, let's move on to my daily report!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#yesterday"&gt;
  &lt;/a&gt;
  Yesterday
&lt;/h2&gt;

&lt;p&gt;I learned about &lt;code&gt;react-css-modules&lt;/code&gt; and used it to make it easier to code CSS. Also, I finished the mobile version of my navigation menu.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;p&gt;Here are the things I learned and worked on today:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;remembered to use &lt;code&gt;&amp;lt;Image /&amp;gt;&lt;/code&gt; for images in Next.js as it comes with optimization such as lazy loading.&lt;/li&gt;
&lt;li&gt;I also learned that if you want to style &lt;code&gt;&amp;lt;Link /&amp;gt;&lt;/code&gt; with a className, you can insert &lt;code&gt;&amp;lt;a className={styles.link}&amp;gt;link text&amp;lt;/a&amp;gt;&lt;/code&gt; like this:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Link href="/"&amp;gt;
  &amp;lt;a className={styles.link}&amp;gt;Home&amp;lt;/a&amp;gt;
&amp;lt;/Link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;and that you can't do it like this (INVALID):
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Link href="/" className={styles.link}&amp;gt;Home&amp;lt;/Link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;read some horror stories about Scrumbags (really bad Scrum Masters).&lt;/li&gt;
&lt;li&gt;I did some practice flashcards for Scrum.&lt;/li&gt;
&lt;li&gt;reviewed some of the things I've learned before.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I want to make some time for studying Typescript, but maybe tomorrow onwards.&lt;/p&gt;

&lt;p&gt;Have a good day, everyone!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/learn/basics/create-nextjs-app?utm_source=next-site&amp;amp;utm_medium=nav-cta&amp;amp;utm_campaign=next-website"&gt;Official Next.js tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typescriptlang.org/docs/handbook/intro.html"&gt;The Typescript Handbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;The 2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mlapshin.com/index.php/scrum-quizzes/"&gt;Mikhail Lapshin's Scrum Quizzes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#cover-image"&gt;
  &lt;/a&gt;
  Cover Image
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unsplash.com/photos/7NBO76G5JsE?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditShareLink"&gt;Meriç Dağlı&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>About FLASH BITCOIN TRANSACTION (Core Network)</title>
      <author>ppyto00</author>
      <pubDate>Tue, 09 Nov 2021 09:47:36 +0000</pubDate>
      <link>https://dev.to/ppyto00/about-flash-bitcoin-transaction-core-network-2afd</link>
      <guid>https://dev.to/ppyto00/about-flash-bitcoin-transaction-core-network-2afd</guid>
      <description>&lt;p&gt;Flash BTC Transaction (Core Network) 4.0.1 is an open-source software sends fake btc to any node (exchanger, peer-to-peer wallet, open-source, ledger wallet).&lt;/p&gt;

&lt;p&gt;The features of FLASH BTC TRANSACTION (Core Network) 4.0.1&lt;/p&gt;

&lt;p&gt;-Work in all countries, no ip address restriction&lt;br&gt;
-Send transactions with confirmation&lt;br&gt;
-No transaction limit per day&lt;br&gt;
-No amount limit per day&lt;br&gt;
-Can send up to 100 BTC per transaction&lt;br&gt;
-Stay in the wallet for more than 30 days&lt;br&gt;
-100% Anonymous (clears your history after each transaction)&lt;br&gt;
-You can edit transaction fees&lt;br&gt;
-you can receive the balance automatically without confirmation.&lt;br&gt;
-Transferable from one wallet to another&lt;/p&gt;

&lt;p&gt;What you need to use this software:&lt;/p&gt;

&lt;p&gt;-A computer with a windows system (windows 7 at least)&lt;br&gt;
-It also works on RDP&lt;br&gt;
-Good bandwidth&lt;/p&gt;

&lt;p&gt;We are not responsible for your use of this software, we only have the copyright.&lt;/p&gt;

&lt;p&gt;Admin: @ppyto&lt;/p&gt;

&lt;p&gt;Whatsapp:  +33 7 80 98 02 05&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>javascript</category>
      <category>firstpost</category>
    </item>
    <item>
      <title>Inner classes or nested classes in java</title>
      <author>DALLINGTON ASINGWIRE</author>
      <pubDate>Tue, 09 Nov 2021 09:45:48 +0000</pubDate>
      <link>https://dev.to/dallington256/inner-classes-or-nested-classes-in-java-4m8d</link>
      <guid>https://dev.to/dallington256/inner-classes-or-nested-classes-in-java-4m8d</guid>
      <description>&lt;p&gt;&lt;b&gt;An inner class&lt;/b&gt; is a class that is declared inside a class or interface. Inner classes are used to logically group classes or interfaces in one place in order to improve readability and maintainability.&lt;br&gt;
&lt;b&gt;Syntax of inner class&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;X1&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// code&lt;/span&gt;
  &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;X2&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// code&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Advantages of using inner classes&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Because inner classes logically group classes and interfaces in one place only, they improve readability and maintainability.&lt;/li&gt;
&lt;li&gt;minimises coding efforts since there is less code to write thus facilitating code optimisation.&lt;/li&gt;
&lt;li&gt;Inner classes are a representation of a particular type of relationship in that an inner class can access all the members(data members and methods) of an outer class including one declared private.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;Why need an inner class?&lt;/b&gt;&lt;br&gt;
There might be a program where a class must not be accessed by other class so in that case, you include it in another class.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Types of inner classes&lt;/b&gt;&lt;br&gt;
There are 4 types of nested/inner classes i.e member(nested inner class), static member(static nested class), anonymous inner class and local inner class.&lt;br&gt;
&lt;b&gt;A) Static member inner classes&lt;/b&gt;&lt;br&gt;
A static member inner class is an inner class which is declared static. &lt;br&gt;
&lt;b&gt;Syntax for a static inner class&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;  &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainClass&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// code&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StaticInnerClass&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
     &lt;span class="c1"&gt;// code&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code snippet, StaticInnerClass is a static inner class.&lt;br&gt;
This class can't refer directly to their instance variables or methods defined in its enclosing class since they use them only by an object reference. They are accessed by the use of class name.&lt;br&gt;
&lt;b&gt;Note: Syntax for creating an object of a static inner class&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MainClass.StaticInnerClass objectname 
= new MainClass.StaticInnerClass();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Example:&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;parent_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"A"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;B&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;whoami&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
      &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;print&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"I am static inner class B
          and my parent class is"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;parent_name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
     &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
 &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  
      &lt;span class="o"&gt;{&lt;/span&gt;  
        &lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;B&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="no"&gt;A&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;B&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;whoami&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
      &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Output&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;I am static inner class B and my parent class is A
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, B is a static inner class and an instance method like &lt;b&gt;whoami()&lt;/b&gt; is accessed by using class name &lt;b&gt;B&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;B. Member inner class&lt;/b&gt;&lt;br&gt;
A member inner class is a class created within a class and outside a method. A member inner class is non-static.&lt;br&gt;
A member inner class refers directly to its instance variables or methods defined in its enclosing class. Also, because an inner class is associated with an instance, it cannot define any static members itself.&lt;br&gt;
&lt;b&gt;Syntax for a member inner class&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MainClass&lt;/span&gt;
  &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// code&lt;/span&gt;
    &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;InnerClass&lt;/span&gt;
      &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// code&lt;/span&gt;
      &lt;span class="o"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Note: Syntax for creating an object of a non-static member inner class&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;MainClass m = new MainClass();
MainClass.InnerClass innerObj = m.new InnerClass();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Example&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;X&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
     &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;parent_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"X"&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
     &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
       &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;message&lt;/span&gt;&lt;span class="o"&gt;(){&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Hey, I am an non-static inner 
             class Y and my parent class is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;parent_name&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
     &lt;span class="o"&gt;}&lt;/span&gt; 
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  
      &lt;span class="o"&gt;{&lt;/span&gt;  
        &lt;span class="no"&gt;X&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="no"&gt;X&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="no"&gt;X&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Y&lt;/span&gt; &lt;span class="n"&gt;innerObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;Y&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="n"&gt;innerObj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;message&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;  
      &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Output&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Hey, I am an non-static inner class Y and my parent class is X
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;C. Anonymous inner class&lt;/b&gt;&lt;br&gt;
Anonymous inner class is one that is created for implementing an interface or extending a class. Thereafter, anonymous class must implement an interface or extend an abstract class but you don't use keywords &lt;b&gt;extend&lt;/b&gt; or &lt;b&gt;implement&lt;/b&gt; to create anonymous class.&lt;br&gt;
&lt;b&gt;Syntax for creating anonymous class&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;new interface-or-class-name{
  // code
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Example:&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.Random&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AnonymousClassExample&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;Food&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;choose&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;whichFood&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;eat&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// Anonymous class&lt;/span&gt;
  &lt;span class="nc"&gt;Food&lt;/span&gt; &lt;span class="n"&gt;birdsFoodPreference&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Food&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;choose&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;whichFood&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;whichFood&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
     &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;foodItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Insects"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Maize"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"G.nuts"&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
      &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Birds like eating 
                         "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;getRandomFoodChoice&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foodItems&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;};&lt;/span&gt;

    &lt;span class="c1"&gt;// Anonymous class&lt;/span&gt;
    &lt;span class="nc"&gt;Food&lt;/span&gt; &lt;span class="nc"&gt;MansFoodPreference&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Food&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;choose&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;whichFood&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;whichFood&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
   &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;foodItems&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"Meat"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Posho"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Rice"&lt;/span&gt;&lt;span class="o"&gt;};&lt;/span&gt;
    &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Man likes eating 
                   "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;getRandomFoodChoice&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foodItems&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
        &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;};&lt;/span&gt;

    &lt;span class="n"&gt;birdsFoodPreference&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;choose&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="nc"&gt;MansFoodPreference&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;choose&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="nc"&gt;AnonymousClassExample&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;AnonymousClassExample&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;eat&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="nf"&gt;getRandomFoodChoice&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;rnd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Random&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;nextInt&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;rnd&lt;/span&gt;&lt;span class="o"&gt;];&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Output&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Birds like eating Insects
Man likes eating Posho
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Key facts about anonymous inner classes&lt;/b&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Anonymous class cannot have a constructor. Thus, you cannot pass parameters to an anonymous class when you instantiate it.&lt;/li&gt;
&lt;li&gt;Anonymous class can access any variables visible to the block within which anonymous class is declared, including local variables.&lt;/li&gt;
&lt;li&gt;Anonymous class can also access methods of a class that contains it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;b&gt;D. Local inner class&lt;/b&gt; &lt;br&gt;
A local class is a class that is defined in a block, which is a group of zero or more statements between balanced braces. You typically find local classes defined in the body of a method.&lt;br&gt;
&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;java.util.*&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Bank&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;getTotalPayable&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;bank&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; 
              &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;principal&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;

        &lt;span class="c1"&gt;// local class named Interest&lt;/span&gt;
         &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Interest&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
           &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;bank_interest_rate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;

               &lt;span class="nc"&gt;Interest&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt; &lt;span class="n"&gt;bank&lt;/span&gt;&lt;span class="o"&gt;){&lt;/span&gt;
                 &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bank&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
                   &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;"Centenary"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                      &lt;span class="n"&gt;bank_interest_rate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;3.2&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                      &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                   &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;"Stanbic"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                         &lt;span class="n"&gt;bank_interest_rate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;2.8&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                     &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                   &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s"&gt;"Equity"&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                         &lt;span class="n"&gt;bank_interest_rate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;3.15&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                     &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
                       &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
                         &lt;span class="n"&gt;bank_interest_rate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// method in local class that returns interest&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="nf"&gt;getInterestRate&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;bank_interest_rate&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

 &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;Interest&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Interest&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bank&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;round&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;principal&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
               &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInterestRate&lt;/span&gt;&lt;span class="o"&gt;()*&lt;/span&gt;&lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="o"&gt;)));&lt;/span&gt;

&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"The total amount payable
 for principal "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;principal&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" after
 "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" years in "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;bank&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;" bank
 whose interest is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInterestRate&lt;/span&gt;&lt;span class="o"&gt;()+&lt;/span&gt;&lt;span class="s"&gt;"
 is "&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

 &lt;span class="o"&gt;}&lt;/span&gt;


    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;double&lt;/span&gt; &lt;span class="n"&gt;amt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;getTotalPayable&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Centenary"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;amt&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;getTotalPayable&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Stanbic"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;amt&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;getTotalPayable&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Equity"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;amt&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;years&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

    &lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;Output&lt;/b&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;The total amount payable for principal 100000.0 after 3 years in Centenary bank whose interest is 3.2 is 1060000.0
The total amount payable for principal 100000.0 after 3 years in Stanbic bank whose interest is 2.8 is 940000.0
The total amount payable for principal 100000.0 after 3 years in Equity bank whose interest is 3.15 is 1045000.0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So that's the concept of inner classes in java, thank you to taking time to read through this post. See you in the next one!&lt;/p&gt;

</description>
    </item>
    <item>
      <title>📷 New Luos feature: "Gate discovering"
</title>
      <author>Emanuel Allely</author>
      <pubDate>Tue, 09 Nov 2021 09:41:40 +0000</pubDate>
      <link>https://dev.to/luos/new-luos-feature-gate-discovering-45n4</link>
      <guid>https://dev.to/luos/new-luos-feature-gate-discovering-45n4</guid>
      <description>&lt;p&gt;📷 feature: "Gate discovering"&lt;/p&gt;

&lt;p&gt;Some of you struggle to find a device Gate over USB or IP. We add a feature to gate that allows you to list all the gates available on your embedded system, directly from the opensource Luos Python library Pyluos.&lt;/p&gt;

&lt;p&gt;→ &lt;a href="https://docs.luos.io/docs/tools/gate/"&gt;https://docs.luos.io/docs/tools/gate/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N7udkWt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0basokn4ijxut18hgzf0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N7udkWt3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0basokn4ijxut18hgzf0.png" alt="Image description" width="653" height="378"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>luos</category>
      <category>opensource</category>
      <category>embedded</category>
      <category>python</category>
    </item>
    <item>
      <title>RIP Copy and Paste from Stackoverflow! 🚨 (+Trojan Source Solution)</title>
      <author>Dotnetsafer</author>
      <pubDate>Tue, 09 Nov 2021 09:27:25 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/rip-copy-and-paste-from-stackoverflow-trojan-source-solution-4p8f</link>
      <guid>https://dev.to/dotnetsafer/rip-copy-and-paste-from-stackoverflow-trojan-source-solution-4p8f</guid>
      <description>&lt;p&gt;According to a recent research by &lt;a href="https://arxiv.org/abs/2111.00169"&gt;Cambridge University's Nicholas Boucher and Ross Anderson&lt;/a&gt;, there are &lt;strong&gt;two vulnerabilities that impact most code compilers.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These sorts of vulnerabilities have an &lt;strong&gt;impact on software supply chains&lt;/strong&gt;; for example, if an attacker successfully commits code injection by deceiving human reviewers, future software is likely to inherit the vulnerability.&lt;/p&gt;

&lt;p&gt;But let's look at the technique:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Extended strings:&lt;/strong&gt; make sections of string literals seem as code, having the same impact as comments and causing string comparison to fail.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Comment out:&lt;/strong&gt; forces a comment to appear as code, which is then ignored.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Early returns:&lt;/strong&gt; bypass a function by running a return statement that seems to be inside a comment.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-happens%C2%A0next"&gt;
  &lt;/a&gt;
  What happens next?
&lt;/h3&gt;

&lt;p&gt;The compilers support this unique code that you do not see, when compiling your application they interpret it &lt;strong&gt;creating a compiled application different from the one you see in your IDE.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-trojan-source%C2%A0works"&gt;
  &lt;/a&gt;
  How Trojan Source works?
&lt;/h2&gt;

&lt;p&gt;In this example I (Juan) will be an attacker, imagine that I publish a solution in &lt;a href="https://dev.to/dotnetsafer"&gt;Devto&lt;/a&gt;, in some course or in our &lt;a href="https://dotnetsafer.com/blog/"&gt;Dotnetsafer blog&lt;/a&gt; teaching you how to do something (For example; I teach you how to check if a user is admin).&lt;/p&gt;

&lt;p&gt;Let's suppose a different scenario, you or your company have an &lt;strong&gt;open source project&lt;/strong&gt; of something. I help you to develop some parts and I make a pull request with my contributions (I have provided a check so that certain action can only be done by Administrators, and you have added my code to your project).&lt;/p&gt;

&lt;p&gt;Here you have the &lt;strong&gt;example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;access_level&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;access_level&lt;/span&gt; &lt;span class="p"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;"user"&lt;/span&gt;&lt;span class="err"&gt;⁦&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;//Check if admin &lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;    
  &lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"You are an admin."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The vulnerability is that this code contains &lt;strong&gt;Unicode characters that your IDE does not show you&lt;/strong&gt;, let's see this with a text editor that shows the hidden characters.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Anfqly3I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AGnsdQSrKCA35-g1kuUVTiQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Anfqly3I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AGnsdQSrKCA35-g1kuUVTiQ.png" alt="code" width="479" height="84"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These characters modify the position, order, direction and so on of the text you see. So, &lt;strong&gt;what you see is not what it is.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can read about how it works at &lt;a href="https://www.compart.com/en/unicode/U+2066"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Well, now that you have accepted or copied my code, your project looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J0kMGkH_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AdMZXM4tlDOVWIm853QeVag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J0kMGkH_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AdMZXM4tlDOVWIm853QeVag.png" alt="code" width="653" height="399"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apparently all is well, right?&lt;/p&gt;

&lt;p&gt;Let's run the application then:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X1W5m_SV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AfQwY8QrRZxVo4kbBq41ENQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X1W5m_SV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AfQwY8QrRZxVo4kbBq41ENQ.png" alt="code" width="570" height="289"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But… &lt;strong&gt;HOW?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If it's clear that &lt;code&gt;access_level&lt;/code&gt; is &lt;code&gt;"user"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And we are comparing whether it is &lt;strong&gt;different&lt;/strong&gt; to &lt;code&gt;"user"&lt;/code&gt;&lt;br&gt;
 &lt;br&gt;
So…&lt;/p&gt;

&lt;p&gt;How the hell is &lt;code&gt;"user"&lt;/code&gt; going to be different from &lt;code&gt;"user"&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Because the compilation &lt;strong&gt;has been done after interpreting the hidden characters.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's see this decompiled application &lt;strong&gt;(IL code):&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lzy-xYwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AXNpnLvyhvPZlYbEr9RVTzg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lzy-xYwj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AXNpnLvyhvPZlYbEr9RVTzg.png" alt="code" width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we can see in the compilation, the code is saying that if:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;"user" ≠ "user // check if admin"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The Admin instruction will be executed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;Console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;WriteLine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"You are an admin."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Obviously this is fulfilled, and it will be executed that we are admin (although in the source code we see the opposite).&lt;/p&gt;

&lt;p&gt;Let's see the result of the compilation in C#:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XHiqQW6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2A__YdKfii7IocCriJ3Nm-Lg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XHiqQW6N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2A__YdKfii7IocCriJ3Nm-Lg.png" alt="code" width="507" height="176"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Completely different from the original… (But you have not realized this and now I am going to take advantage of it to execute functions of Admin on your application although I am not).&lt;/p&gt;

&lt;p&gt;This example is simple, but I can &lt;strong&gt;inject a thousand instructions&lt;/strong&gt; like this on your application in production and &lt;strong&gt;this is very dangerous.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-solve%C2%A0it"&gt;
  &lt;/a&gt;
  How to solve it?
&lt;/h2&gt;

&lt;p&gt;Fortunately, platforms like &lt;strong&gt;Github&lt;/strong&gt; are warning users about this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OFNYhlGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2A7XwyDRYsw-y67lwvxtFWag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OFNYhlGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2A7XwyDRYsw-y67lwvxtFWag.png" alt="code" width="880" height="181"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-should-i%C2%A0do"&gt;
  &lt;/a&gt;
  What should I do?
&lt;/h2&gt;

&lt;p&gt;Interpreters, unicode-aware compilers and compiler pipelines &lt;strong&gt;must provide warnings or errors&lt;/strong&gt; for unterminated bidirectional control characters in &lt;strong&gt;string literals or comments&lt;/strong&gt;, as well as identifiers containing misleading mixed scripting characters.&lt;/p&gt;

&lt;p&gt;Unterminated bidirectional string literals in comments and control characters &lt;strong&gt;should be explicitly forbidden&lt;/strong&gt; by language requirements.&lt;/p&gt;

&lt;p&gt;Mixed-script confused characters and bidirectional control &lt;strong&gt;characters should be highlighted&lt;/strong&gt; with visual warnings or symbols in &lt;strong&gt;repository interfaces&lt;/strong&gt; and &lt;strong&gt;code editors.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-check-if-i-have-been-affected-by-this-vulnerability"&gt;
  &lt;/a&gt;
  How to check if I have been affected by this vulnerability?
&lt;/h2&gt;

&lt;p&gt;It's all very well for &lt;strong&gt;Github&lt;/strong&gt; to start notifying us about this, but… What if it has already happened to us?&lt;/p&gt;

&lt;p&gt;Thinking about what solutions we could take in our team, I thought not the best, but the simplest.&lt;/p&gt;

&lt;p&gt;In the end, the vulnerability is about &lt;strong&gt;injection of hidden characters&lt;/strong&gt; in our source code, right, let's check if in our source there is any file that &lt;strong&gt;contains something hidden.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As you are probably a .NET developer (&lt;em&gt;you are reading the article of a cybersecurity community for .NET&lt;/em&gt;) we are going to &lt;strong&gt;create a small tool&lt;/strong&gt; in .NET, to check this problem in our projects (guess which ones?) YES! &lt;strong&gt;.NET.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's go 🚀&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  ✅ Solution
&lt;/h3&gt;

&lt;p&gt;First, let's check &lt;strong&gt;how to know&lt;/strong&gt; if there are any &lt;strong&gt;hidden characters&lt;/strong&gt; in a file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;nonRenderingCategories&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;UnicodeCategory&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;UnicodeCategory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Control&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="n"&gt;UnicodeCategory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OtherNotAssigned&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="n"&gt;UnicodeCategory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="n"&gt;UnicodeCategory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Surrogate&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We use the &lt;code&gt;enum&lt;/code&gt; of the &lt;code&gt;UnicodeCategory&lt;/code&gt; we want to detect in our files.&lt;br&gt;
We have more info on what they are in &lt;a href="https://docs.microsoft.com/es-es/dotnet/api/system.globalization.unicodecategory?view=net-5.0"&gt;Microsoft Docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As I have determined the unicode characters that could be associated with this vulnerability are of type:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control:&lt;/strong&gt; with a Unicode value of U+007F, either in the range of U+0000 to U+001F or U+0080 to U+009F.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;OtherNotAssigned:&lt;/strong&gt; Character that is not assigned to any Unicode category.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Format:&lt;/strong&gt; A format character that affects the layout of text or the operation of text processing, but is not normally present.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Surrogate:&lt;/strong&gt; Low substitute or high substitute character.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, the only thing we will do is, read a &lt;code&gt;.cs&lt;/code&gt; file (&lt;strong&gt;C# source code file&lt;/strong&gt;) where this vulnerability can be found:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;nonRenderingCategories&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;UnicodeCategory&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="n"&gt;UnicodeCategory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Control&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;UnicodeCategory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OtherNotAssigned&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;UnicodeCategory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Format&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;UnicodeCategory&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Surrogate&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;using&lt;/span&gt; &lt;span class="nn"&gt;StreamReader&lt;/span&gt; &lt;span class="n"&gt;sr&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nf"&gt;StreamReader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dotnetFile&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Peek&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Read&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Char&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetUnicodeCategory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;isPrintable&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Char&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;IsWhiteSpace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;||&lt;/span&gt;
    &lt;span class="p"&gt;!&lt;/span&gt;&lt;span class="n"&gt;nonRenderingCategories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(!&lt;/span&gt;&lt;span class="n"&gt;isPrintable&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nf"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dotnetFile&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;issuesCount&lt;/span&gt;&lt;span class="p"&gt;++;&lt;/span&gt;
    &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Close&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;sr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Dispose&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the file contains one of these characters, &lt;strong&gt;we will suspect it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Because the range of character types I have used is not exact, it may generate &lt;strong&gt;false positives&lt;/strong&gt; if a file contains:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Characters from other alphabets&lt;/strong&gt;, such as &lt;strong&gt;Arabic&lt;/strong&gt;: أعطني 3 تصفيق&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Special characters&lt;/strong&gt; such as emoji: 🦄&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This solution will not be perfect, but it will warn you about possible problems and then you will evaluate if the file suffers the vulnerability.&lt;/p&gt;

&lt;p&gt;This tool is finished and published in: &lt;a href="https://github.com/dotnetsafer/TrojanSourceDetector4Dotnet"&gt;TrojanSourceDetector4Dotnet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The tool allows you to &lt;strong&gt;scan one or more .NET projects&lt;/strong&gt; for problems with this particular vulnerability.&lt;/p&gt;

&lt;p&gt;As we at Dotnetsafer are developers and we know how hard your life is, we offer you to &lt;strong&gt;install this tool through the console&lt;/strong&gt; so that you don't have to do anything and check in a few seconds all your projects.&lt;/p&gt;

&lt;p&gt;Just open your &lt;strong&gt;CMD&lt;/strong&gt; or &lt;strong&gt;Poweshell&lt;/strong&gt; and type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;dotnet&lt;/span&gt; &lt;span class="n"&gt;tool&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="p"&gt;--&lt;/span&gt;&lt;span class="k"&gt;global&lt;/span&gt; &lt;span class="n"&gt;TrojanSourceDetector&lt;/span&gt; &lt;span class="p"&gt;--&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="m"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CqxjK4gD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2A1WwijIlqXi7Aaqo7HFDeEg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CqxjK4gD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2A1WwijIlqXi7Aaqo7HFDeEg.png" alt="install" width="764" height="89"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you will be able at any time to scan a directory where your .NET projects are located, to do this use:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;TrojanSourceDetector&lt;/code&gt; and when it asks you for the directory indicate the &lt;strong&gt;full path.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For example place the &lt;strong&gt;CMD&lt;/strong&gt; in your repository folder and run the command:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V0sxivqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AjzQTd0SHlUG8MRYCKniNcw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0sxivqU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AjzQTd0SHlUG8MRYCKniNcw.png" alt="command" width="823" height="638"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When finished, it will tell you &lt;strong&gt;which files may contain something suspicious:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_YpDKQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AMeZx1jiuqHBAVs3_vXaP8w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_YpDKQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1200/1%2AMeZx1jiuqHBAVs3_vXaP8w.png" alt="result" width="880" height="186"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and that's it!&lt;/p&gt;




&lt;p&gt;All thanks to &lt;a href="https://www.trojansource.codes/"&gt;https://www.trojansource.codes/&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;@article&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;boucher_trojansource_2021&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Trojan&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Source&lt;/span&gt;&lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Invisible&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Vulnerabilities&lt;/span&gt;&lt;span class="p"&gt;}},&lt;/span&gt;
    &lt;span class="n"&gt;author&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Nicholas&lt;/span&gt; &lt;span class="n"&gt;Boucher&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;Ross&lt;/span&gt; &lt;span class="n"&gt;Anderson&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;2021&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;journal&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Preprint&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;eprint&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="m"&gt;2111.00169&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;archivePrefix&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;arXiv&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;primaryClass&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;cs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CR&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//arxiv.org/abs/2111.00169}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>programming</category>
      <category>security</category>
    </item>
    <item>
      <title>What is Solana?</title>
      <author>Analytics steps</author>
      <pubDate>Tue, 09 Nov 2021 09:13:28 +0000</pubDate>
      <link>https://dev.to/analyticsstepss/what-is-solana-33m0</link>
      <guid>https://dev.to/analyticsstepss/what-is-solana-33m0</guid>
      <description>&lt;p&gt;&lt;a href="https://www.analyticssteps.com/blogs/what-solana-features-and-working-system"&gt;Solana&lt;/a&gt; is a crypto computing platform that aims to achieve high transaction speeds without sacrificing decentralization. It employs a bundle of novel approaches, including the “proof of history” mechanism. Solana’s native cryptocurrency is SOL, which is used to pay transaction fees and for staking. It also gives holders the right to vote in future upgrades.&lt;/p&gt;

&lt;p&gt;It is the fastest blockchain in the world and the fastest-growing ecosystem in crypto, with over 400 projects spanning Defi, NFTs, Web3, and more.&lt;/p&gt;

&lt;p&gt;Because Solana is so fast, congestion and fees remain low. Developers hope high speeds and low fees will eventually enable Solana to scale to compete with centralized payment processors like Visa. &lt;/p&gt;

&lt;p&gt;Solana can quickly add multiple properties to its existing network, whether its building applications or mining SOL tokens, this network can perform it all within microseconds. This cryptocurrency is often hailed as “ethereum’s competitor”. &lt;/p&gt;

</description>
    </item>
    <item>
      <title>Media Queries Simplified</title>
      <author>Ansub Khan</author>
      <pubDate>Tue, 09 Nov 2021 09:07:22 +0000</pubDate>
      <link>https://dev.to/ansub/media-queries-simplified-4lj6</link>
      <guid>https://dev.to/ansub/media-queries-simplified-4lj6</guid>
      <description>&lt;p&gt;Media queries were introduced in CSS3 and it uses &lt;code&gt;@media&lt;/code&gt; rule to include CSS when certain conditions are true.&lt;/p&gt;

&lt;p&gt;Media Queries allows you to target any platform you want and write specific styles for that platform, for example, you can change the layout of CSS for a mobile platform where the user opens the app in the mobile platform, this is also called responsive styles because it is responding to different devices differently. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#for-example"&gt;
  &lt;/a&gt;
  for example:
&lt;/h2&gt;

&lt;p&gt;this is the example of the webpage which has a screen size of 1200px: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Bg8m9yea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636269510301/M21XPL9Ex.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bg8m9yea--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636269510301/M21XPL9Ex.png" alt="@media query 1.png" width="880" height="626"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;when we are going to change the screen size of this to 500px screen size using this code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// if the browser window is smaller than 300px, the color of the font will be changed to red.

@media only screen and (max-width: 500px) {
body{
    color:red;
}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;it is going to look like this:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JtypnINl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1636269672509/bWuTKuxoq.png" alt="@media query 2.png" width="612" height="903"&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#media-query-breakpoints"&gt;
  &lt;/a&gt;
  Media Query Breakpoints
&lt;/h2&gt;

&lt;p&gt;these are some of the breakpoints for different devices:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Extra Small Phones&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@media only screen and (max-width: 600px) {
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;*Portrait Tablets and large Phones *&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@media only screen and (min-width: 600px){

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Landscape Tablets*
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@media only screen and (min-width: 768px){
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Laptops and Desktop&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@media only screen and (min-width: 992px){
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Large Laptops and Desktops *
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@media only screen and (min-width: 1200px){
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>html</category>
      <category>javascript</category>
      <category>css</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Internet</title>
      <author>Atul Tripathi</author>
      <pubDate>Tue, 09 Nov 2021 09:02:08 +0000</pubDate>
      <link>https://dev.to/atultrp/internet-31hk</link>
      <guid>https://dev.to/atultrp/internet-31hk</guid>
      <description>&lt;h2&gt;
  &lt;a href="#how-does-the-internet-work"&gt;
  &lt;/a&gt;
  How does the Internet work?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The Internet is a network of networks. It works by using a technique called packet switching, and by relying on standardized networking protocols that all computers can interpret.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-http"&gt;
  &lt;/a&gt;
  What is HTTP?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A protocol standardizes communication over the internet. The Hypertext Transfer Protocol (HTTP) is used to transfer resources (e.g., HTML files, audio files, images, etc.) between a client and a server. A client is a machine that initiates the communication, and a server is a machine that needs to be contacted. HTTP runs over TCP.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-web-browser-work"&gt;
  &lt;/a&gt;
  How does a web browser work?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;When the web browser fetches data from an internet connected server, it uses a piece of software called a rendering engine to translate that data into text and images. This data is written in Hypertext Markup Language (HTML) and web browsers read this code to create what we see, hear and experience on the internet.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NDJxLspH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q0h3w48z12ntnvm4tbon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NDJxLspH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q0h3w48z12ntnvm4tbon.png" alt="DNS" width="343" height="147"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-dns-how-dns-works"&gt;
  &lt;/a&gt;
  What is DNS? | How DNS works?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The Domain Name System (DNS) is the phonebook of the Internet. Humans access information online through domain names, like nytimes.com or espn.com. Web browsers interact through Internet Protocol (IP) addresses. DNS translates domain names to IP addresses so browsers can load Internet resources.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The process of DNS resolution involves converting a hostname (such as &lt;a href="http://www.example.com"&gt;www.example.com&lt;/a&gt;) into a computer-friendly IP address (such as 192.168.1.1). An IP address is given to each device on the Internet, and that address is necessary to find the appropriate Internet device - like a street address is used to find a particular home. When a user wants to load a webpage, a translation must occur between what a user types into their web browser (example.com) and the machine-friendly address necessary to locate the example.com webpage.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZrBYBp9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kfsib7xsxws79l02c1y.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZrBYBp9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6kfsib7xsxws79l02c1y.jpeg" alt="Domain Name" width="299" height="168"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-domain-name"&gt;
  &lt;/a&gt;
  What is a domain name?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;A domain name is a unique, easy-to-remember address used to access websites, such as ‘google.com’, and ‘facebook.com’. Users can connect to websites using domain names thanks to the DNS system.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kHQ7sEa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdzewpah4f42kf55jbh2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kHQ7sEa8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wdzewpah4f42kf55jbh2.png" alt="Web Hosting" width="290" height="174"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-web-hosting"&gt;
  &lt;/a&gt;
  What is web hosting?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Web hosting is an online service that allows you to publish your website files onto the internet. So, anyone who has access to the internet has access to your website. In practice, it usually refers to the service you get from a web hosting provider like one.com.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;While you can theoretically host an actual server for your website at home, relying on a web hosting service provider offers lots of benefits.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-does-web-hosting-work"&gt;
  &lt;/a&gt;
  How does web hosting work?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In summary, companies like us rent out services and technologies to host your websites on the internet. Once you’ve chosen your domain name and signed up to a hosting plan, then your website is accessible on the internet.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When you use web hosting services, your web host is responsible for making sure your server is up and running. Not only that, but it is also a hosts job to prevent any security breaches and store all your files, assets and databases onto the server.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Hawk project</title>
      <author>Paulo Medeiros</author>
      <pubDate>Tue, 09 Nov 2021 09:01:00 +0000</pubDate>
      <link>https://dev.to/medpaf/hawk-project-3ld7</link>
      <guid>https://dev.to/medpaf/hawk-project-3ld7</guid>
      <description>&lt;p&gt;Hawk is a network and pentest utility that I developed so that I could perform different kinds of task using the same suite, instead of jumping from one tool to another.&lt;br&gt;
Currently, this script can perform a good variety of tasks such as ifconfig, ping, traceroute, port scans (including SYN, TCP, UDP, ACK, comprehensive scan, host discovery (scan for up devices on a local network), MAC address detection (get MAC address of a host IP on a local network), banner grabbing, DNS checks (with geolocation information), WHOIS, subdomain enumeration, vulnerability reconnaissance, packet sniffing, MAC spoofing, IP spoofing, SYN flooding, deauth attack and brute-force attack (beta).&lt;br&gt;
Other features are still being implemented. Future implementations may include WAF detection, DNS enumeration, traffic analysis, XSS vulnerability scanner, ARP cache poisoning, DNS cache poisoning, MAC flooding, ping of death, network disassociation attack (not deauth attack), OSINT, exploits, some automated tasks and others.&lt;br&gt;
If you want to become a contributor, make a pull request or issue.&lt;br&gt;
Waiting for your feedback. Kudos&lt;/p&gt;

&lt;p&gt;Link to the repository: &lt;a href="https://github.com/medpaf/hawk"&gt;https://github.com/medpaf/hawk&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>showdev</category>
      <category>security</category>
      <category>python</category>
    </item>
    <item>
      <title>What is Azure IoT Hub and how do I use it?</title>
      <author>Mangirdas Judeikis</author>
      <pubDate>Tue, 09 Nov 2021 08:51:18 +0000</pubDate>
      <link>https://dev.to/mjudeikis/what-is-azure-iot-hub-and-how-do-i-use-it-2fcn</link>
      <guid>https://dev.to/mjudeikis/what-is-azure-iot-hub-and-how-do-i-use-it-2fcn</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Synpse is an end-to-end platform to manage your device fleet that can grow to hundreds of thousands of devices, perform OTA software updates, collect metrics, logs, deploy your containerized applications and facilitate tunnel-based SSH access to any of your device. You can find a &lt;a href="https://docs.synpse.net/start-here/quick-start-web-user"&gt;Quick Start here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Tck3AEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p3yvcrvwzqi4dce4wc5a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Tck3AEg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p3yvcrvwzqi4dce4wc5a.png" alt="Azure landing page" width="880" height="562"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intro-into-azure-iot-hub"&gt;
  &lt;/a&gt;
  Intro into Azure IoT Hub
&lt;/h2&gt;

&lt;p&gt;We often get questions how Synpse is compared or competes with &lt;a href="https://azure.microsoft.com/en-us/overview/iot/"&gt;Azure IoT Hub&lt;/a&gt; service. The short answer is that they operate in slightly different domains. Azure IoT hub focuses on application connectivity of the devices while Synpse targets deployment of the applications that may or may not be using services such as IoT Core.&lt;/p&gt;

&lt;p&gt;The best results are achieved when solutions are used together. For example, when you build an application locally that utilizes AWS IoT Core message broker or device state services and then use Synpse to distribute your application to thousands of devices. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-application"&gt;
  &lt;/a&gt;
  Example application
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we will deploy a simple open-source application that collects metrics and send them to AWS IoT Core for further processing. All code for this blog post can be found at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/synpse-hq/metrics-nats-example-app"&gt;https://github.com/synpse-hq/metrics-nats-example-app&lt;/a&gt; - Sample metrics application&lt;br&gt;
&lt;a href="https://github.com/synpse-hq/azure-iot-hub-example"&gt;https://github.com/synpse-hq/azure-iot-hub-example&lt;/a&gt; - Azure IoT Hub example&lt;/p&gt;

&lt;p&gt;Steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create Azure IoT hub&lt;/li&gt;
&lt;li&gt;Configure rules to forward results into Azure blob storage&lt;/li&gt;
&lt;li&gt;Create Azure "Thing"/IoT device for Synpse&lt;/li&gt;
&lt;li&gt;Demo Synpse application from 3 microservices - Metrics demo, NATs messaging, Azure IoT python forwarder containers&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#technologies-used"&gt;
  &lt;/a&gt;
  Technologies used
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://cloud.synpse.net"&gt;Synpse&lt;/a&gt; - manage devices and deploy applications to them&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://nats.io/"&gt;NATs&lt;/a&gt; - a lightweight message broker that can run on-prem&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://azure.microsoft.com/en-gb/services/iot-hub/"&gt;Azure IoT Hub&lt;/a&gt; - message broker between all devices and Azure &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Contrary to &lt;a href="https://synpse.net/blog/clouds/aws-iot-core/"&gt;AWS&lt;/a&gt;, Azure was easy to configure using CLI. All steps here will be done using Azure CLI.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#azure-iot-hub"&gt;
  &lt;/a&gt;
  Azure IoT Hub
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Create Azure IoT hub:
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;az iot hub create &lt;span class="nt"&gt;--resource-group&lt;/span&gt; MyResourceGroup &lt;span class="nt"&gt;--name&lt;/span&gt; MyIotHub &lt;span class="nt"&gt;--location&lt;/span&gt; eastus &lt;span class="nt"&gt;--tags&lt;/span&gt; &lt;span class="nv"&gt;synpse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Create certificate based on &lt;a href="https://docs.microsoft.com/en-us/azure/iot-hub/tutorial-x509-self-sign"&gt;Azure documentation&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Upload the certificates for Azure device by creating "device-identity"&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Thumbprint 1: SHA1 &lt;span class="nv"&gt;Fingerprint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;56:0E:78:56:74:F1:1B:60:73:AA:7C:8E:12:73:C4:62:01:D5:A3:10 
Thumbprint 2: SHA1 &lt;span class="nv"&gt;Fingerprint&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;81:EB:0B:27:BB:3F:BB:D8:91:AF:38:28:BE:83:E5:46:C3:0F:4D:DE

&lt;span class="c"&gt;# remove colons ':' from the fingerprints&lt;/span&gt;

az iot hub device-identity create &lt;span class="nt"&gt;-n&lt;/span&gt; MyIotHub &lt;span class="nt"&gt;-d&lt;/span&gt; synpse &lt;span class="nt"&gt;--am&lt;/span&gt; x509_thumbprint &lt;span class="nt"&gt;--ptp&lt;/span&gt; &lt;span class="s2"&gt;"560E785674F11B6073AA7C8E1273C46201D5A310"&lt;/span&gt; &lt;span class="nt"&gt;--stp&lt;/span&gt; &lt;span class="s2"&gt;"81EB0B27BB3FBBD891AF3828BE83E546C30F4DDE"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For this example, we gonna create a message route to the storage account blob.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create storage account:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;az storage account create &lt;span class="nt"&gt;-n&lt;/span&gt; MyStorageAccountName &lt;span class="nt"&gt;-g&lt;/span&gt; MyResourceGroup &lt;span class="nt"&gt;-l&lt;/span&gt; eastus
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Create container/bucket for results:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;az storage container create &lt;span class="nt"&gt;--account-name&lt;/span&gt; MyStorageAccountName &lt;span class="nt"&gt;-n&lt;/span&gt; metrics
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Create IoT hub endpoint for message routing:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;storageConnectionString&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;az storage account show-connection-string &lt;span class="nt"&gt;--name&lt;/span&gt; MyStorageAccountName &lt;span class="nt"&gt;--query&lt;/span&gt; connectionString &lt;span class="nt"&gt;-o&lt;/span&gt; tsv&lt;span class="si"&gt;)&lt;/span&gt;

az iot hub routing-endpoint create &lt;span class="nt"&gt;--resource-group&lt;/span&gt; MyResourceGroup &lt;span class="nt"&gt;--hub-name&lt;/span&gt; MyIotHub &lt;span class="se"&gt;\&lt;/span&gt;
        &lt;span class="nt"&gt;--endpoint-name&lt;/span&gt; storage &lt;span class="nt"&gt;--endpoint-type&lt;/span&gt; azurestoragecontainer &lt;span class="nt"&gt;--endpoint-resource-group&lt;/span&gt; MyResourceGroup &lt;span class="se"&gt;\&lt;/span&gt;
        &lt;span class="nt"&gt;--endpoint-subscription-id&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;az account show | jq &lt;span class="nt"&gt;-r&lt;/span&gt; .id&lt;span class="si"&gt;)&lt;/span&gt; &lt;span class="nt"&gt;--connection-string&lt;/span&gt; &lt;span class="nv"&gt;$storageConnectionString&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
        &lt;span class="nt"&gt;--container-name&lt;/span&gt; metrics &lt;span class="nt"&gt;--batch-frequency&lt;/span&gt; 60 &lt;span class="nt"&gt;--chunk-size&lt;/span&gt; 10 &lt;span class="se"&gt;\&lt;/span&gt;
        &lt;span class="nt"&gt;--ff&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;iothub&lt;span class="o"&gt;}&lt;/span&gt;-&lt;span class="o"&gt;{&lt;/span&gt;partition&lt;span class="o"&gt;}&lt;/span&gt;-&lt;span class="o"&gt;{&lt;/span&gt;YYYY&lt;span class="o"&gt;}&lt;/span&gt;-&lt;span class="o"&gt;{&lt;/span&gt;MM&lt;span class="o"&gt;}&lt;/span&gt;-&lt;span class="o"&gt;{&lt;/span&gt;DD&lt;span class="o"&gt;}&lt;/span&gt;-&lt;span class="o"&gt;{&lt;/span&gt;HH&lt;span class="o"&gt;}&lt;/span&gt;-&lt;span class="o"&gt;{&lt;/span&gt;mm&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Use routing in question with our HUB (endpoint name is same as --endpoint-name)
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;az iot hub route create &lt;span class="nt"&gt;-g&lt;/span&gt; MyResourceGroup &lt;span class="nt"&gt;--hub-name&lt;/span&gt; MyIotHub &lt;span class="nt"&gt;--endpoint-name&lt;/span&gt; storage &lt;span class="nt"&gt;--source-type&lt;/span&gt; DeviceMessages &lt;span class="nt"&gt;--route-name&lt;/span&gt; Route &lt;span class="nt"&gt;--condition&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="nt"&gt;--enabled&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deploy-an-application"&gt;
  &lt;/a&gt;
  Deploy an application
&lt;/h3&gt;

&lt;p&gt;Deploy an application. Modify application YAML with your thing endpoint.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create certificate secrets
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;synpse secret create azure-crt &lt;span class="nt"&gt;-f&lt;/span&gt; device1.crt
synpse secret create azure-key &lt;span class="nt"&gt;-f&lt;/span&gt; device1.key
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Deploy the application. You will need to modify other values inside YAML file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;synpse deploy &lt;span class="nt"&gt;-f&lt;/span&gt; synpse-azure-example.yaml
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where &lt;code&gt;synpse-azure-example.yaml&lt;/code&gt; is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Azure-IoT-Hub&lt;/span&gt;
&lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Azure IoT Hub Synpse example&lt;/span&gt;
&lt;span class="na"&gt;scheduling&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Conditional&lt;/span&gt;
  &lt;span class="na"&gt;selectors&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;# device selector&lt;/span&gt;
    &lt;span class="na"&gt;azure&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;iot&lt;/span&gt;
&lt;span class="na"&gt;spec&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;containers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nats&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nats&lt;/span&gt;
      &lt;span class="na"&gt;restartPolicy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;metrics&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;quay.io/synpse/metrics-nats-example-app&lt;/span&gt;
      &lt;span class="na"&gt;restartPolicy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;azure-iot&lt;/span&gt;
      &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;quay.io/synpse/azure-iot-hub-example&lt;/span&gt;
      &lt;span class="na"&gt;command&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/server/azure.py&lt;/span&gt;
      &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;NATS_HOSTNAME&lt;/span&gt;
          &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;nats&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;HOSTNAME&lt;/span&gt;
          &lt;span class="c1"&gt;# IoT hub DNS name&lt;/span&gt;
          &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;mj-hub.azure-devices.net"&lt;/span&gt;
        &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;DEVICE_ID&lt;/span&gt;
          &lt;span class="c1"&gt;# device id used when creating a device&lt;/span&gt;
          &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;synpse"&lt;/span&gt;
      &lt;span class="na"&gt;secrets&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;azure-crt&lt;/span&gt;
        &lt;span class="na"&gt;filepath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/server/device1.crt&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;azure-key&lt;/span&gt;
        &lt;span class="na"&gt;filepath&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;/server/device1.key&lt;/span&gt;
      &lt;span class="na"&gt;restartPolicy&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see messages coming into the Azure IoT Hub&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WkqxweK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xejg3wpoelc9w626t62.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WkqxweK8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8xejg3wpoelc9w626t62.png" alt="message flow" width="795" height="405"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once running, you should see the application running and data coming into Azure storage account blob.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jXnyoZBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fcowa6qkjtm9hu796gp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jXnyoZBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fcowa6qkjtm9hu796gp.png" alt="Message flow" width="880" height="299"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#things-to-look-for"&gt;
  &lt;/a&gt;
  Things to look for
&lt;/h3&gt;

&lt;p&gt;Certificate configuration path is painful. But this is the common pattern between cloud offering. Azure offers shared private key authentication. This makes multiple device provisioning easier. If you are not interested in cloud portability - this might be easier way to deal with complexities.&lt;/p&gt;

&lt;p&gt;Events land into a storage account without visibility how and the default data structure cannot easily adjust. Sometimes it takes a few minutes, sometimes multiple minutes. We assume this is due to the ETL (Extract, Transform, Load) process, which is not visible to users. &lt;strong&gt;But on the other hand, on GCP it was very visible and VERY expensive. Not sure if both here are possible :)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Overall Azure experience was quite pleasant. API and CLI consistent, documentation is quite well written. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#go-run-wrapupgo"&gt;
  &lt;/a&gt;
  go run ./wrap_up.go
&lt;/h2&gt;

&lt;p&gt;This is a simple way to use Azure IoT Hub with Synpse. When it comes to consuming and managing a lot of data, constructing complex applications and integrating seamlessly into your current technological infrastructure - nothing can beat the public cloud. But where the cloud is lacking is - IoT device and application management.&lt;/p&gt;

&lt;p&gt;Public cloud providers are built on assumption that they will manage infrastructure for you. When it comes to devices themselves - they are yours and yours only. And this is where Public cloud providers lack influence and where Synpse comes into the picture.&lt;/p&gt;

&lt;p&gt;If you have any questions or suggestions, feel free to start a new discussion in our &lt;a href="https://github.com/synpse-hq/synpse/discussions"&gt;forum&lt;/a&gt; or drop us a line on &lt;a href="https://discord.gg/dkgN4vVNdm"&gt;Discord&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Originally published at &lt;a href="https://synpse.net/blog"&gt;https://synpse.net/blog&lt;/a&gt;&lt;/p&gt;

</description>
      <category>azure</category>
      <category>synpse</category>
      <category>iot</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Candlestick &amp; Awesome Oscillator</title>
      <author>Dera Okeke</author>
      <pubDate>Tue, 09 Nov 2021 08:45:03 +0000</pubDate>
      <link>https://dev.to/chideraao/candlestick-awesome-oscillator-nco</link>
      <guid>https://dev.to/chideraao/candlestick-awesome-oscillator-nco</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/chideraao/embed/yLoEyzw?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Beautifully styled candlestick with awesome oscillator and acceleration bands&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>frontend</category>
      <category>javascript</category>
      <category>datavisualisation</category>
    </item>
  </channel>
</rss>
