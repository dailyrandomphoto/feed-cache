<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Por que decidi aprender (e ensinar) Clojure</title>
      <author>Marcio Frayze</author>
      <pubDate>Tue, 26 Oct 2021 15:35:31 +0000</pubDate>
      <link>https://dev.to/marciofrayze/por-que-decidi-aprender-e-ensinar-clojure-1j6m</link>
      <guid>https://dev.to/marciofrayze/por-que-decidi-aprender-e-ensinar-clojure-1j6m</guid>
      <description>&lt;p&gt;Em 2017 comecei a me aprofundar no universo da Programação Funcional. Este paradigma já ganhava bastante popularidade e cada vez mais as principais linguagens de programação orientadas a objetos incluíam recursos inspirados neste paradigma, inclusive a linguagem que eu mais utilizava: Java.&lt;/p&gt;

&lt;p&gt;Após o lançamento da versão 8 da JDK, em março de 2014, passou a ser cada vez mais comum ouvir as pessoas desenvolvedoras Java usando termos como: programação funcional, &lt;em&gt;streams&lt;/em&gt;, &lt;em&gt;optional&lt;/em&gt;, &lt;em&gt;map&lt;/em&gt;, &lt;em&gt;flat map&lt;/em&gt;, etc. Mas muitas pessoas em meu entorno ainda ignoravam estes novos recurso e, confesso, demorei para adotar essas novidades. As ideias pareciam muita interessantes, mas colocá-las em prática se mostrou mais difícil do que eu esperava.&lt;/p&gt;

&lt;p&gt;Depois de muita tentativa e erro, resolvi me aprofundar nos conceitos. O livro &lt;a href="https://www.oreilly.com/library/view/functional-thinking/9781449365509/"&gt;Functional Thinking&lt;/a&gt; me ajudou a dar os primeiros passos na direção correta.&lt;/p&gt;

&lt;p&gt;Em paralelo decidi que iria aprender uma linguagem funcional mais pura ao invés de tentar aplicar o paradigma funcional em uma linguagem orientada a objetos. Depois de pesquisar bastante, optei por aprender &lt;a href="https://elm-lang.org"&gt;Elm&lt;/a&gt;. O fato de ser uma linguagem funcional pura e imutável me chamou atenção. Alem disso, ela é focada no desenvolvimento de &lt;em&gt;webapps&lt;/em&gt; e, até então, eu não havia encontrado nenhuma solução para desenvolvimento de páginas web que me agradasse. &lt;/p&gt;

&lt;p&gt;Depois de passar por todo &lt;a href="https://guide.elm-lang.org"&gt;Guia de introdução à linguagem Elm&lt;/a&gt; e ler o livro &lt;a href="https://www.manning.com/books/elm-in-action"&gt;Elm in Action&lt;/a&gt;, já me sentia bastante confortável em desenvolver &lt;em&gt;webapps&lt;/em&gt; neste paradigma. Gostei tanto de Elm que iniciei um projeto para ensinar programação para iniciantes usando esta linguagem e disponibilizei as primeiras aulas no site &lt;a href="https://elm.dev.br"&gt;elm.dev.br&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Mas havia um problema sério que ainda precisava encarar: Elm é uma linguagem concebida para desenvolvimento de &lt;em&gt;webapps&lt;/em&gt; e funciona muito bem para isso, mas eu buscava uma solução de uso geral, que pudesse ser utilizada também no desenvolvimento de &lt;em&gt;backends&lt;/em&gt;. Por isso voltei a estudar as alternativas.&lt;/p&gt;

&lt;p&gt;Elm é uma linguagem estaticamente tipada e inspirada em &lt;a href="https://www.haskell.org"&gt;Haskell&lt;/a&gt;. O passo natural seria utilizar Elm no &lt;em&gt;frontend&lt;/em&gt; e Haskell no &lt;em&gt;backend&lt;/em&gt;. E foi o que tentei fazer. Li com certa dificuldade o livro &lt;em&gt;Learn You a Haskell for Great Good!&lt;/em&gt; (disponível gratuitamente &lt;a href="http://learnyouahaskell.com"&gt;aqui&lt;/a&gt;) e aprendi muita coisa legal. Mas criar um &lt;em&gt;backend&lt;/em&gt; completo usando Haskell mostrou-se um passo maior do que eu conseguiria dar naquele momento. Resolvi então procurar outras alternativas...&lt;/p&gt;

&lt;p&gt;Durante todo esse processo a palavra &lt;a href="https://pt.wikipedia.org/wiki/Lisp"&gt;Lisp&lt;/a&gt; não saía da minha cabeça! De tempos em tempos esbarrava em algum vídeo de alguma pessoa influente na comunidade falando sobre ela (como &lt;a href="https://www.youtube.com/watch?v=Uooh0Y9fC_M#t=4876ab_channel=IGN"&gt;este vídeo&lt;/a&gt; ou &lt;a href="https://twitter.com/ID_AA_Carmack/status/577877590070919168"&gt;este twit&lt;/a&gt; do &lt;a href="https://pt.wikipedia.org/wiki/John_Carmack"&gt;John Carmack&lt;/a&gt;, fundador da &lt;em&gt;id Software&lt;/em&gt;). Parecia algo místico. E o fato do &lt;a href="https://building.nubank.com.br/working-with-clojure-at-nubank"&gt;Nubank ter adotado Clojure&lt;/a&gt; trouxe um estudo de caso bastante real e pragmático do uso de um dialeto de Lisp no Brasil. &lt;/p&gt;

&lt;p&gt;Até então estava postergando estudá-la pois estava priorizando linguagens estaticamente tipadas e os dialetos mais famosos de Lisp são linguagens dinâmicas. Mas no começo de 2021 resolvi finalmente dar uma chance. Escolhi a linguagem &lt;a href="https://clojure.org%7CClojure"&gt;Clojure&lt;/a&gt; e comecei a ler o livro &lt;a href="https://pragprog.com/titles/roclojure/getting-clojure"&gt;Getting Clojure&lt;/a&gt;. Ao contrário dos meus estudos de Haskell, consegui ler este livro em poucos dias! Em paralelo comecei a fazer as aulas da &lt;a href="https://www.alura.com.br/formacao-clojure"&gt;Formação Clojure da Alura&lt;/a&gt;, que me ajudaram a ver mais na prática como programar nesta linguagem. Foi uma boa combinação: no livro eu aprendia mais a fundo os conceitos da linguagem e no curso revisava estes conceitos e aprendia a parte um pouco mais prática.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#principais-caracter%C3%ADsticas-de-clojure"&gt;
  &lt;/a&gt;
  Principais características de Clojure
&lt;/h2&gt;

&lt;p&gt;Lisp não é uma linguagem de programação, mas uma família de linguagens com diversos &lt;em&gt;dialetos&lt;/em&gt;. Os dialetos mais famosos incluem a &lt;a href="https://lisp-lang.org"&gt;Common Lisp&lt;/a&gt;, &lt;a href="https://clojure.org"&gt;Clojure&lt;/a&gt;, &lt;a href="https://groups.csail.mit.edu/mac/projects/scheme"&gt;Scheme&lt;/a&gt; e &lt;a href="https://racket-lang.org"&gt;Racket&lt;/a&gt;. Desta forma, após decidir que iria aprender Lisp, precisaria escolher um de seus dialetos.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://clojure.org"&gt;Clojure&lt;/a&gt; se destacou para mim por duas razões:  &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ela utiliza a máquina virtual do Java, possibilitando interoperabilidade com aplicações Java (que como disse no início do artigo, é a linguagem que costumo utilizar no &lt;em&gt;backend&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;ela utiliza predominantemente o paradigma funcional. Alguns dialetos de Lisp (como o Common Lisp, por exemplo) são multiparadigma, mas como minha intenção era me aprofundar no universo da programação funcional, fazia mais sentido adotar um dialeto que desse preferência para este paradigma.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A experiência de programar em Clojure foi bastante libertadora. Praticar &lt;a href="https://pt.wikipedia.org/wiki/Test-driven_development"&gt;TDD&lt;/a&gt; junto com o &lt;a href="https://practical.li/clojure/repl-driven-devlopment.html"&gt;REPL Driven Development&lt;/a&gt; (técnica bastante difundida dentro da&lt;br&gt;
comunidade Clojure) faz com que o ciclo de &lt;em&gt;feedback&lt;/em&gt; seja muito rápido. O fato de Clojure ser uma linguagem dinâmica também contribui para isso.&lt;/p&gt;

&lt;p&gt;Outra característica de Clojure é ser uma linguagem &lt;em&gt;impura&lt;/em&gt;, ou seja, podemos efetuar &lt;em&gt;efeitos colaterais&lt;/em&gt; a qualquer momento. A principal vantagem disso é que torna a linguagem mais fácil de aprender (embora traga junto uma série de outros problemas que não acontecem em linguagens mais puras, como Elm ou Haskell). Escrevi &lt;a href="https://segunda.tech/posts/2019-08-26-funcoes-puras"&gt;um artigo sobre Funções Puras&lt;/a&gt; onde explico melhor este tema. Também &lt;a href="https://www.youtube.com/watch?v=QenAR_3XtXU&amp;amp;t=1189s&amp;amp;ab_channel=segunda.tech"&gt;gravei um vídeo&lt;/a&gt; explicando o que são Função Puras.&lt;/p&gt;

&lt;p&gt;Mas embora seja uma linguagem impura, ela incentiva uma série de boas práticas que fazem com que os potenciais problemas dessa abordagem sejam significativamente reduzidos.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#como-dar-os-primeiros-passos-em-clojure"&gt;
  &lt;/a&gt;
  Como dar os primeiros passos em Clojure
&lt;/h2&gt;

&lt;p&gt;Todas essas características que citei ao longo do artigo fazem com que Clojure, embora tenha uma aparência um pouco intimidadora no começo, seja na verdade bastante fácil de utilizar. Por isso escolhi também esta linguagem para compartilhar com outras pessoas desenvolvedoras os fundamentos básicos da &lt;em&gt;programação funcional&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;Para quem gosta de livros, recomendo iniciar pelo &lt;a href="https://pragprog.com/titles/roclojure/getting-clojure"&gt;Getting Clojure&lt;/a&gt;, que como disse é uma ótima forma de entender os princípios básicos por trás do Clojure, ou se preferir uma opção gratuita pode começar pela versão online do livro &lt;a href="https://www.braveclojure.com"&gt;Clojure for Brave and True&lt;/a&gt;. Outra opção mais focada nos fundamentos do paradigma e que aborda outras linguagens além de Clojure é o livro &lt;a href="https://www.oreilly.com/library/view/functional-thinking/9781449365509/"&gt;Functional Thinking&lt;/a&gt;, do Neal Ford. Gravei um &lt;a href="https://segunda.tech/posts/2019-06-17-functional-thinking"&gt;podcast&lt;/a&gt; onde falo um pouco sobre esta obra. Estes 3 livros são em inglês. Se quiser uma leitura em português a editora Casa do Código tem disponível o livro &lt;a href="https://www.casadocodigo.com.br/products/livro-programacao-funcional-clojure"&gt;Programação Funcional: Uma introdução em Clojure&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Se preferir estudar através de &lt;em&gt;cursos &lt;em&gt;online&lt;/em&gt;&lt;/em&gt;, você pode se inscrever no meu curso &lt;a href="https://segundatech.teachable.com"&gt;Clojure: Introdução à Programação Funcional&lt;/a&gt;. Ou pode fazer os cursos da &lt;a href="https://www.alura.com.br/formacao-clojure"&gt;Formação Clojure da Alura&lt;/a&gt;.&lt;/p&gt;




&lt;p&gt;E você, qual seu paradigma preferido? Já tentou programar utilizando o paradigma funcional? Quais foram suas principais dificuldades? Compartilhe suas experiências nos comentários!&lt;/p&gt;

&lt;p&gt;Se você gostou deste texto talvez goste dos meus outros artigos, vídeos e podcasts disponíveis em &lt;a href="//segunda.tech"&gt;segunda.tech&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>clojure</category>
      <category>functional</category>
      <category>java</category>
    </item>
    <item>
      <title>🔥 Vue Tips #31: The limitations of props</title>
      <author>Michael Thiessen</author>
      <pubDate>Tue, 26 Oct 2021 15:14:51 +0000</pubDate>
      <link>https://dev.to/michaelthiessen/vue-tips-31-the-limitations-of-props-36bh</link>
      <guid>https://dev.to/michaelthiessen/vue-tips-31-the-limitations-of-props-36bh</guid>
      <description>&lt;p&gt;&lt;em&gt;This newsletter was sent out to my list on October 20, 2021. &lt;a href="https://michaelnthiessen.com/newsletter"&gt;Sign up here&lt;/a&gt; to get emails like this each week!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As always, here are some tips.&lt;/p&gt;

&lt;p&gt;Enjoy.&lt;/p&gt;

&lt;p&gt;— Michael&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#static-and-dynamic-classes"&gt;
  &lt;/a&gt;
  🔥 Static and dynamic classes
&lt;/h2&gt;

&lt;p&gt;We can add static &lt;em&gt;and&lt;/em&gt; dynamic classes to an element at the same time:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt;
    &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in list"&lt;/span&gt;
    &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item.id"&lt;/span&gt;
    &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"always-here"&lt;/span&gt;
    &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"item.selected &amp;amp;&amp;amp; 'selected'"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {{ item.name }}
  &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This lets you apply basic styling through static classes, and then dynamically add other styles as you need them.&lt;/p&gt;

&lt;p&gt;You can also achieve the same thing when using an &lt;code&gt;Object&lt;/code&gt; or &lt;code&gt;Array&lt;/code&gt; with dynamic classes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt;
    &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in list"&lt;/span&gt;
    &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item.id"&lt;/span&gt;
    &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"{
      'always-here': true,
      selected: item.selected,
    }"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {{ item.name }}
  &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or with an &lt;code&gt;Array&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt;
    &lt;span class="na"&gt;v-for=&lt;/span&gt;&lt;span class="s"&gt;"item in list"&lt;/span&gt;
    &lt;span class="na"&gt;:key=&lt;/span&gt;&lt;span class="s"&gt;"item.id"&lt;/span&gt;
    &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"[
      'always-here',
      item.selected &amp;amp;&amp;amp; 'selected',
    ]"&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {{ item.name }}
  &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I prefer splitting them out into &lt;code&gt;class&lt;/code&gt; and &lt;code&gt;:class&lt;/code&gt; bindings though, since it makes the code clearer. It also makes it less likely to be broken when refactored!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-limitations-of-props"&gt;
  &lt;/a&gt;
  🔥 The limitations of props
&lt;/h2&gt;

&lt;p&gt;Props are useful, but they have two glaring issues:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Impossible to pass markup*&lt;/li&gt;
&lt;li&gt;Not that flexible&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;*not technically impossible, but not something you want to do.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The solution to these two problems is the same, but we'll get there in a second.&lt;/p&gt;

&lt;p&gt;Many components you create are &lt;strong&gt;contentless components&lt;/strong&gt;. They provide a container, and you have to supply the content. Think of a button, a menu, an accordion, or a card component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;Card&lt;/span&gt; &lt;span class="na"&gt;title=&lt;/span&gt;&lt;span class="s"&gt;"Shrimp Tempura"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"picOfShrimp.jpg"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Here are some words about tempura.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;How can you go wrong with fried food?&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"www.michaelnthiessen.com/shrimp-tempura"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Read more about Shrimp Tempura
  &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/Card&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can often pass this content in as a regular &lt;code&gt;String&lt;/code&gt;. But many times you want to pass in a whole chunk of HTML, maybe even a component or two.&lt;/p&gt;

&lt;p&gt;You can't do that with props.*&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*again, yes, you could do this, but you'll definitely regret it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Props also require that you &lt;strong&gt;plan for all future use cases&lt;/strong&gt; of the component. If your &lt;code&gt;Button&lt;/code&gt; component only has two values for &lt;code&gt;type&lt;/code&gt;, you can't just use a third without modifying the &lt;code&gt;Button&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!-- You just have to believe it will work --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;Button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"AWESOME"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Button.vue&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="c1"&gt;// Unfortunately, 'AWESOME' doesn't work here :/&lt;/span&gt;
      &lt;span class="na"&gt;validator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;primary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;secondary&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I'm not a psychic, and I'm guessing you aren't either.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution to these problems?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I think I gave it away with my card example above...&lt;/p&gt;

&lt;p&gt;..slots! 🎰&lt;/p&gt;

&lt;p&gt;Slots allow you to pass in whatever markup and components you want, and they also are fairly open-ended, giving you lots of flexibility. This is why in many cases, slots are simply better than props.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-photoshop-plugin-with-vue"&gt;
  &lt;/a&gt;
  📜 A photoshop plugin with Vue!?
&lt;/h2&gt;

&lt;p&gt;Last week I shared an article on creating a VS Code extension.&lt;/p&gt;

&lt;p&gt;Now we break out of the web world entirely, and see how we can create a plugin for Photoshop.&lt;/p&gt;

&lt;p&gt;I had no idea this was even possible!&lt;/p&gt;

&lt;p&gt;Read it now: &lt;a href="https://medium.com/adobetech/make-your-first-plugin-with-vue-js-for-photoshop-and-adobe-xd-7af094c69aa5"&gt;Make Your First Plugin with Vue JS for Photoshop and Adobe XD&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%F0%9F%97%9E-vuejs-london-is-today-tomorrow"&gt;
  &lt;/a&gt;
  🗞 Vue.js London is today + tomorrow!
&lt;/h2&gt;

&lt;p&gt;Quick, don't miss out on some amazing talks at &lt;a href="https://vuejs.london/"&gt;Vue.js Conference (London)&lt;/a&gt; — happening right now!&lt;/p&gt;

&lt;p&gt;Conferences are an amazing place to learn and connect with other Vue devs.&lt;/p&gt;

&lt;p&gt;We're slowly starting to see some more in-person events, along with lots of virtual ones too.&lt;/p&gt;

&lt;p&gt;Here are some upcoming conferences:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.vuetoronto.com/"&gt;VueConf Toronto&lt;/a&gt; — November 22-23 — free + online&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.vuejs.amsterdam/"&gt;Vuejs Global (Amsterdam)&lt;/a&gt; — February 10-11, 2022 — Amsterdam&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(Let me know if I've missed any.)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brute-force"&gt;
  &lt;/a&gt;
  💬 Brute force
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;When in doubt, use brute force. — Steve McConnell&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I'm often just not clever enough to come up with a clever solution.&lt;/p&gt;

&lt;p&gt;But cleverness isn't the point of software development.&lt;/p&gt;

&lt;p&gt;It's developing software &lt;em&gt;that works&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#spacedrepetition-6-levels-of-reusability"&gt;
  &lt;/a&gt;
  🧠 Spaced-repetition: 6 Levels of Reusability
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The best way to commit something to long-term memory is to periodically review it, gradually increasing the time between reviews 👨‍🔬&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Actually remembering these tips is much more useful than just a quick distraction, so here's a tip from a couple weeks ago to jog your memory.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;My course on &lt;a href="//michaelnthiessen.com/reusable-components"&gt;reusable components&lt;/a&gt; covers this framework, which outlines six different levels of reusability that you can use in your components.&lt;/p&gt;

&lt;p&gt;Here are the six levels of reusability:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Templating&lt;/strong&gt; — Reusing code by wrapping it up inside of a component&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Configuration&lt;/strong&gt; — Using configuration props to allow for varying behaviour&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Adaptability&lt;/strong&gt; — Allowing components to become future-proof&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Inversion&lt;/strong&gt; — Letting other components control the process&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Extension&lt;/strong&gt; — Using reusability throughout our component&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Nesting&lt;/strong&gt; — Creating powerful hierarchies of components&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I cover this in more detail in &lt;a href="https://michaelnthiessen.com/6-levels-of-reusability"&gt;this excerpt from the course&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exclusive-tips-and-insights-every-week"&gt;
  &lt;/a&gt;
  Exclusive tips and insights every week
&lt;/h2&gt;

&lt;p&gt;Join 8335 other Vue devs and &lt;a href="//michaelnthiessen.com/newsletter"&gt;get exclusive tips and insights&lt;/a&gt; like these delivered straight to your inbox, every week.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You have great content in your emails. I seriously learn something from every one of them. — Titus Decali&lt;/p&gt;

&lt;p&gt;Thanks for another beautiful tip 🙏 — Victor Onuoha&lt;/p&gt;

&lt;p&gt;Loving these, and the spaced repetition — Mark Goldstein&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="//michaelnthiessen.com/newsletter"&gt;Sign up here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>React NodeJS Purity - Open-source Full-Stack Seed Project</title>
      <author>Sm0ke</author>
      <pubDate>Tue, 26 Oct 2021 14:39:47 +0000</pubDate>
      <link>https://dev.to/sm0ke/react-nodejs-purity-open-source-full-stack-seed-project-3l92</link>
      <guid>https://dev.to/sm0ke/react-nodejs-purity-open-source-full-stack-seed-project-3l92</guid>
      <description>&lt;p&gt;Hello Coders! &lt;/p&gt;

&lt;p&gt;This article presents an &lt;code&gt;open-source&lt;/code&gt; full-stack project crafted on top of a pixel-perfect Chakra UI design using &lt;a href="https://appseed.us/product/node-js-react-purity-dashboard"&gt;React and Node JS&lt;/a&gt;. &lt;strong&gt;Purity Dashboard&lt;/strong&gt; can be downloaded from Github under the MIT license and used for unlimited hobby &amp;amp; commercial projects.  The product is built in two-tier pattern where the &lt;strong&gt;React&lt;/strong&gt; UI is decoupled from the backend and &lt;code&gt;communicates securely using JWT tokens&lt;/code&gt; managed by the &lt;strong&gt;Node JS Backend&lt;/strong&gt;. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/product/node-js-react-purity-dashboard"&gt;React Purity Dashboard&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://node-js-react-purity-dashboard.appseed-srv1.com/#/auth/signin"&gt;React Purity Dashboard&lt;/a&gt; - LIVE Demo&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zERSCZu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3mak7lhyrgbbpu4hmpf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zERSCZu3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3mak7lhyrgbbpu4hmpf.gif" alt="React Node JS - Purity Dashboard, open-source project."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#product-features"&gt;
  &lt;/a&gt;
  ✨ Product Features
&lt;/h2&gt;

&lt;p&gt;This full-stack ready seed product comes with a few useful features out-of-the-box that might help beginners, and not only, to code and deliver faster a new end-product using modern technologies.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Modern UI - &lt;strong&gt;Purity Dashboard&lt;/strong&gt;, crafted by Creative-Tim&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;JWT Authentication Flow&lt;/code&gt; - Login, Logout, Register methods&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Production-ready API Server&lt;/code&gt; - Node JS/Express&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Docker support&lt;/code&gt; for backend and the frontend&lt;/li&gt;
&lt;li&gt;Free support via Github (issues tracker) and &lt;a href="https://discord.gg/fZC6hup"&gt;Discord&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Purity UI Dashboard&lt;/strong&gt; is built with over 70 frontend individual elements, like buttons, inputs, navbars, nav tabs, cards, or alerts, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using Chakra's style props.&lt;/p&gt;

&lt;p&gt;Designed for those who like modern UI elements and beautiful websites, Purity UI Dashboard is ready to help you create stunning apps and dashboards. This Free Chakra UI Dashboard is coming with prebuilt design blocks, so the development process is seamless, switching from our pages to the real website is very easy to be done.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Purity React Dashboard - User Profile&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--drXReiTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zirbsy7s3jovo26fawra.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--drXReiTC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zirbsy7s3jovo26fawra.png" alt="React Node JS Purity - Profile Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Purity React Dashboard - Billing Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--StxasSaT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tib5tfi6yjv977dte5mn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--StxasSaT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tib5tfi6yjv977dte5mn.png" alt="React Node JS Purity - Billing Page"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-to-use-the-product"&gt;
  &lt;/a&gt;
  ✨ How to use the product
&lt;/h2&gt;

&lt;p&gt;This open-source product is a complete full-stack seed product that covers all layers from the UI to the database using a two-tier architecture:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React Frontend (Purity Template)&lt;/li&gt;
&lt;li&gt;JWT Authentication: users can register, Sign IN, and logout&lt;/li&gt;
&lt;li&gt;Node JS Backend:  responsible with persistence&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to use the product, we need to build both parts: the &lt;code&gt;API backend&lt;/code&gt; and the &lt;code&gt;React Frontend&lt;/code&gt;. Both parts are already configured to work and communicate using compatible settings. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#start-the-backend-server"&gt;
  &lt;/a&gt;
  Start the Backend Server
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone the &lt;a href="https://github.com/app-generator/api-server-nodejs"&gt;Node JS Backend&lt;/a&gt; from Github&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/api-server-nodejs.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;api-server-nodejs
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Install dependencies via NPM or Yarn&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Run the SQLite migration via TypeORM&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ yarn typeorm migration:run
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #4&lt;/strong&gt; - Start the API server (development mode)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm dev
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #5&lt;/strong&gt; - Production Build (files generated in &lt;code&gt;build&lt;/code&gt; directory)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm build
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step #6&lt;/strong&gt; - Start the API server for production (files served from &lt;code&gt;build/index.js&lt;/code&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm start
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;At this point we should be able to test the API server using POSTMAN or any other command line tool like &lt;code&gt;curl&lt;/code&gt; to create and authenticate new users by sending requests with bellow signatures: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Register&lt;/strong&gt; - &lt;code&gt;api/users/register&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;POST api/users/register
Content-Type: application/json

{
    "username":"test",
    "password":"pass", 
    "email":"test@appseed.us"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Login&lt;/strong&gt; - &lt;code&gt;api/users/login&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;POST /api/users/login
Content-Type: application/json

{
    "password":"pass", 
    "email":"test@appseed.us"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#start-the-react-ui"&gt;
  &lt;/a&gt;
  Start the React UI
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone &lt;a href="https://github.com/app-generator/react-purity-ui-dashboard"&gt;Purity React&lt;/a&gt; (from Github)&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/react-purity-ui-dashboard.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;react-purity-ui-dashboard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Install dependencies via NPM or yarn&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm i
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #3&lt;/strong&gt; - Start in development mode&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npm run start 
// OR
&lt;span class="nv"&gt;$ &lt;/span&gt;yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;Configure the backend server&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The product comes with a usable JWT Authentication flow that provides only the basic requests: login/logout/register. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;API Server URL&lt;/strong&gt; - &lt;code&gt;src/config/constant.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="na"&gt;API_SERVER&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;http://localhost:5000/api/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;  &lt;span class="c1"&gt;// &amp;lt;-- The magic line&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the React UI is up &amp;amp; running, we should see the login page: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Nuly-7r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cf7lisv0m1zqba0yx7d6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Nuly-7r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cf7lisv0m1zqba0yx7d6.png" alt="React Node Purity Dashboard - Login Page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for Reading! For more resources, feel free to access: &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;👉 More &lt;a href="https://appseed.us/apps/react"&gt;React Apps&lt;/a&gt; - index provided by AppSeed&lt;/li&gt;
&lt;li&gt;👉 Free &lt;a href="https://dev.to/sm0ke/react-dashboards-open-source-apps-1c7j"&gt;React Dashboards&lt;/a&gt; - a popular article published on Dev &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>fullstack</category>
      <category>opensource</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How I shifted to Notion for my blog</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Tue, 26 Oct 2021 14:39:00 +0000</pubDate>
      <link>https://dev.to/abhirajb/how-i-shifted-to-notion-for-my-blog-4lpa</link>
      <guid>https://dev.to/abhirajb/how-i-shifted-to-notion-for-my-blog-4lpa</guid>
      <description>&lt;p&gt;For the last few days, some of my blog posts have blown up and have been loved by the community, all thanks to you guys, and so I have been thinking of creating an independent site for my blogs.&lt;/p&gt;

&lt;p&gt;Just to be clear, I use &lt;a href="https://dev.to/abhirajb"&gt;Dev.to&lt;/a&gt; primarily then repost them to &lt;a href="https://abhirajb.hashnode.dev"&gt;Hashnode&lt;/a&gt; and &lt;a href="https://tealfeed.com/rainboestrykr"&gt;Tealfeed&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let's face it, developing sites and maintaining them is hard. I tried &lt;a href="https://stackbit.com"&gt;Stackbit&lt;/a&gt;, &lt;a href="https://www.netlifycms.org/"&gt;Netlify CMS&lt;/a&gt; and even &lt;a href="https://jamstackthemes.dev"&gt;Jamstack&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;None of these seemed to match my taste and meet my requirements.&lt;/p&gt;

&lt;p&gt;Then I recalled my post a week ago.&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/abhirajb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7f8bAbFa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--3oC9sq3B--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/685929/5c0c6258-ee72-42ae-b8df-6a2eee3f6988.png" alt="abhirajb"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/abhirajb/no-code-development-for-dummies-291o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;No-code development for dummies&lt;/h2&gt;
      &lt;h3&gt;Abhiraj Bhowmick ・ Oct 15 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#nocode&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Notion came to my rescue.&lt;/p&gt;

&lt;p&gt;Now all I had to do was find the right content management system, per se, to host and manage my posts.&lt;/p&gt;

&lt;p&gt;Finally, I came across &lt;a href="https://mdx.one"&gt;MDX.one&lt;/a&gt;, an amazing tool to use Notion for blog.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--MbEsfp3V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1277492092676145152/kmEJVcrt_normal.jpg" alt="Bhanu Teja P profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Bhanu Teja P
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/pbteja1998"&gt;@pbteja1998&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Finally launching &lt;a href="&amp;lt;a%20href="&gt;MDX.one&lt;/a&gt;'&amp;gt;MDX.one 🚀🚀&lt;br&gt;&lt;br&gt;Create your own notion-based blog with &lt;a href="&amp;lt;a%20href="&gt;MDX.one&lt;/a&gt;'&amp;gt;MDX.one.&lt;br&gt;&lt;br&gt;Just sent the email to all the 250 people that are on the waitlist🤞&lt;br&gt;&lt;br&gt;Going to sleep now. I am a little exhausted. Hope that nothing breaks while I am away 😬
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      10:16 AM - 21 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1406918837283344385" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1406918837283344385" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1406918837283344385" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;
&lt;br&gt;
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xTJCxg4h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xi1t8orp7hm8d3z338k2.png" alt="landing"&gt;

&lt;p&gt;Now this is an awesome no-code tool for Notion&lt;br&gt;
It has a pre-built template that you duplicate and then use to your wish.&lt;/p&gt;

&lt;p&gt;The template is basically Notion's database template but supercharged. &lt;/p&gt;

&lt;p&gt;There you can upload new blogs and change their settings.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1JFZY5J5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/0VSt05V/Abhiraj-s-Tech-B.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1JFZY5J5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/0VSt05V/Abhiraj-s-Tech-B.png" alt="Blog-dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The general settings of your blog is available on the general settings page. It is the place where you change the basic things such as making a Call-to-action button and uploading a logo. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IgRMF8NN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/SyzvbxP/Settings.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IgRMF8NN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/SyzvbxP/Settings.png" alt="settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Considering the fact that this is the most easy-to-use tool for its category which already has a few competitors in the market right now, I would recommend this to anyone willing to create a blog without coding a bit. &lt;br&gt;
The pricing of mdx.one is also quite flexible.&lt;br&gt;
All the basic features needed to run a blog are free of cost. When you feel like upscaling, it will provide you premium features at low cost.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G0QGHM2u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8jv1pzd3z1tywtyb0jw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G0QGHM2u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f8jv1pzd3z1tywtyb0jw.png" alt="pricing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Henceforth, from today, I am shifting my blog to &lt;a href="https://abhiraj.mdx.one"&gt;abhiraj.mdx.one&lt;/a&gt; and I will use Dev.to and others for specific articles and reposting. Hope to see you there. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_5JmqxaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3ht7yp5axmhr5cnw47y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_5JmqxaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3ht7yp5axmhr5cnw47y.png" alt="my blog"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Thanks for reading.&lt;br&gt;
Until next time,&lt;br&gt;
&lt;a href="https://abhiraj.glitch.me"&gt;Abhiraj&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Exploring the EyeDropper API</title>
      <author>Cory LaViska</author>
      <pubDate>Tue, 26 Oct 2021 14:34:12 +0000</pubDate>
      <link>https://dev.to/claviska/exploring-the-eyedropper-api-4dk7</link>
      <guid>https://dev.to/claviska/exploring-the-eyedropper-api-4dk7</guid>
      <description>&lt;p&gt;The &lt;a href="https://github.com/WICG/eyedropper-api"&gt;EyeDropper API&lt;/a&gt; has landed in &lt;a href="https://www.chromestatus.com/feature/6304275594477568"&gt;Chrome and Edge 95&lt;/a&gt;! This is a simple promise-based API that lets you select a color from anywhere on the screen. Let's dive in and see how it works.&lt;/p&gt;

&lt;p&gt;To start, we'll add a button that activates the eye dropper.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Select a color&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the button is clicked, we'll launch the eye dropper. As soon as the user selects a color, we'll update the page's background to match.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;EyeDropper&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;eyeDropper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;EyeDropper&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;eyeDropper&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;open&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colorSelectionResult&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;colorSelectionResult&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sRGBHex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// The user canceled selection&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// The EyeDropper API isn't supported&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://codepen.io/claviska/pen/OJjmMgz?editors=1010"&gt;Try it on CodePen&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#breaking-it-down"&gt;
  &lt;/a&gt;
  Breaking it down
&lt;/h2&gt;

&lt;p&gt;Here's what's happening in the code above:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Feature-detect the API&lt;/li&gt;
&lt;li&gt;Instantiate an EyeDropper object&lt;/li&gt;
&lt;li&gt;Listen for button clicks&lt;/li&gt;
&lt;li&gt;Call the eye dropper's &lt;code&gt;open()&lt;/code&gt; method, which returns a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"&gt;Promise&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Wait for the promise to resolve (the user selected a color) or reject (the user canceled selection)&lt;/li&gt;
&lt;li&gt;On resolve, grab the hex value and set the background&lt;/li&gt;
&lt;li&gt;On reject, do nothing (the empty &lt;code&gt;catch&lt;/code&gt; will prevent an error hitting the console)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note how I'm feature-detecting the EyeDropper API. This is important because, at the time of this writing, Firefox and Safari don't support it. That doesn't mean you can't use the API to progressively enhance your users' experience, though!&lt;/p&gt;

&lt;p&gt;For example, I'm using it in &lt;a href="https://twitter.com/claviska/status/1452990807640875011?s=20"&gt;Shoelace's color picker&lt;/a&gt; to show an eye dropper if the API is available. Otherwise, I don't show the eye dropper but everything else still works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#another-example"&gt;
  &lt;/a&gt;
  Another Example
&lt;/h2&gt;

&lt;p&gt;I whipped up another example that's a bit more practical. Play around with it and let me know what you think!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codepen.io/claviska/pen/ExvmjqQ"&gt;Try it on CodePen&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;em&gt;This post originally appeared on &lt;a href="https://www.abeautifulsite.net/posts/exploring-the-eyedropper-api/"&gt;the author's blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
      <category>eyedropper</category>
    </item>
    <item>
      <title>Saving Time as a Freelancer</title>
      <author>Saji Wang</author>
      <pubDate>Tue, 26 Oct 2021 14:26:54 +0000</pubDate>
      <link>https://dev.to/codesphere/saving-time-as-a-freelancer-2711</link>
      <guid>https://dev.to/codesphere/saving-time-as-a-freelancer-2711</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;I was sick of working 9–5 so I quit my job and went freelance, now I work 24/7 - Unknown freelance dev, 2021&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Freelancing in tech can be both rewarding and highly demanding. You're hired to deliver and you need to come up with the goods to earn your paycheck. Your work needs to be high quality and on time if you want to keep getting hired. &lt;/p&gt;

&lt;p&gt;But when you're just one person, delivering a consistently high standard can be a challenge, especially when you're using the wrong tools. So today we want to tell you how we're trying to help…we've built an all in one online code editor, GitOps manager and Cloud provider.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wh5Ip-ys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5b7xagn2qhvcpgcyr87w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wh5Ip-ys--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5b7xagn2qhvcpgcyr87w.png" alt="webpages"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#how-does-that-help-me-as-a-freelancer"&gt;
  &lt;/a&gt;
  How does that help me as a freelancer?
&lt;/h3&gt;

&lt;p&gt;Time is a resource to us all, but freelancers know this pain more than most. With multiple clients asking for last-minute changes or updates of projects, anything that can save you time is an invaluable weapon in your arsenal. &lt;/p&gt;

&lt;p&gt;Codesphere puts your entire development pipeline in one place, so you don't need to sign up and into multiple tools for each stage of the development process. It comes with automatic CI/CD and managed infrastructure with no config required, so you can spend more time coding and building your projects. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#keep-your-projects-live-and-make-changes-on-the%C2%A0fly"&gt;
  &lt;/a&gt;
  Keep your projects live and make changes on the fly
&lt;/h3&gt;

&lt;p&gt;The product you deliver to your client very likely needs to be live all the time. If it goes down, you can expect some angry phone calls, and no excuse you give will be good enough; You are expected to provide consistent and reliable service. Deploying and hosting on Codesphere is all taken care of, so you don't have to worry about it.&lt;/p&gt;

&lt;p&gt;Your project is live, but what if you need to make changes? You have to bring it offline, make the change, push the master, rebuild the image and then redeploy. But what if you could make changes to the live app? Codesphere lives in your browser and deploys, tests, and scales as you type.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dg4430tD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oc2slt5bftyebts2u9sk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dg4430tD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oc2slt5bftyebts2u9sk.png" alt="key"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#it-works-on-my-machine"&gt;
  &lt;/a&gt;
  It works on my machine
&lt;/h3&gt;

&lt;p&gt;Like debugging, handing over the project to your client also needs to be seamless, and it needs to work every time. Coding to the cloud guarantees what you coded is what your client sees when it's time to present it. No environmental constraints to deal with and no unexpected deployment surprises, it always works on their machine… &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#whats-your%C2%A0take"&gt;
  &lt;/a&gt;
  What's your take?
&lt;/h3&gt;

&lt;p&gt;We know we're tooting our own horn here, but we want you to know what Codesphere actually is. We're still trying to find the people we can best help, so give us your feedback, tell us what you want to see in a product like ours. What problems are you facing that we can help solve?&lt;/p&gt;

&lt;p&gt;Don't believe us? &lt;a href="https://link.codesphere.com/EW"&gt;Try us out&lt;/a&gt; and help us build a better product - we're still trying to solve the DevOps problem…and maybe you don't even have a DevOps problem. Then again, no one had a problem with horses until the car came along.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>cloud</category>
      <category>devops</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Ruby on Rails will be dead soon! </title>
      <author>poudyal_rabin</author>
      <pubDate>Tue, 26 Oct 2021 14:22:41 +0000</pubDate>
      <link>https://dev.to/poudyal_rabin/ruby-on-rails-will-be-dead-soon-pab</link>
      <guid>https://dev.to/poudyal_rabin/ruby-on-rails-will-be-dead-soon-pab</guid>
      <description>&lt;p&gt;Yes! I was also surprised and a little bit agitated when I saw similar headlines on tech blogs and magazines few years back. I thought maybe that's right, I don't see much people learning Ruby On Rails these days neither I see much job posts for Rails developer position. Maybe I should learn django? Or maybe I should learn nodejs(express)? If you are also on your early stage of career, these questions must be itching your bones too. And especially, if Rails is the first framework you are working on, you must have been dealing with few more issues too. &lt;/p&gt;

&lt;p&gt;For example, people say that Ruby/Rails ecosystem is not really the future because it does not have Machine Learning Capabilities and it is too slow. Some also say that Rails is not that scalable giving the example of Twitter. I also think to some degree that they are right. But should you be worried about it and start learning something else?&lt;/p&gt;

&lt;p&gt;Actually you don't need to. If you are learning Rails then you must have shaped your future into being a web developer. So why should you even worry about Machine Learning when you are learning web development? You are worrying then, you are on the wrong path. If you really want to learn both then you can still learn it side by side. What really works according to my experience is that, Rails has the convention over configuration ideology that gives you the bird's eye overview of overall web development ecosystem which you can transfer to any another framework of choice.&lt;/p&gt;

&lt;p&gt;A lot of technologies evolve over time but Rails has been there for a while now as a mature framework which has answers to most of the problems faced by web developers. So if you are learning/coding on Rails, then you don't need to worry now. These technologies that have been around for more than decade will take time to die. &lt;/p&gt;

&lt;p&gt;Don't forget to share your thoughts too.&lt;br&gt;
Happy Coding!&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Create a simple calculator using HTML, CSS and Javascript</title>
      <author>Adam Nagy</author>
      <pubDate>Tue, 26 Oct 2021 14:18:20 +0000</pubDate>
      <link>https://dev.to/javascriptacademy/create-a-simple-calculator-using-html-css-and-javascript-4o7k</link>
      <guid>https://dev.to/javascriptacademy/create-a-simple-calculator-using-html-css-and-javascript-4o7k</guid>
      <description>&lt;p&gt;In this tutorial we will create a fully working calculator using only HTML, CSS and vanilla Javascript. You'll learn about event handling, and DOM manipulations throughout the project. In my opinion this is a really good beginner project for those who want to become web developers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video-tutorial"&gt;
  &lt;/a&gt;
  Video Tutorial
&lt;/h2&gt;

&lt;p&gt;If you would watch a detailed &lt;strong&gt;step-by-step&lt;/strong&gt; video instead you can check out the video I made covering this project &lt;a href="https://www.youtube.com/c/JavaScriptAcademyOfficial"&gt;on my Youtube Channel&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QS6Y0ezhyCs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html"&gt;
  &lt;/a&gt;
  HTML
&lt;/h2&gt;

&lt;p&gt;The html will be pretty simple for this project. We'll start out with a standard HTML5 boilerplate. At the bottom of our body I included the &lt;code&gt;index.js&lt;/code&gt; script that we will create later. This needs to be at the bottom, because this way, when our javascript runs, the html elements required for the calculator will be in the DOM.&lt;br&gt;
In the body we have a &lt;code&gt;section&lt;/code&gt; and inside that a div with a &lt;code&gt;container&lt;/code&gt; class. We will use these wrappers to position our calculator on the page. Inside our container we have an empty div with the id of &lt;code&gt;display&lt;/code&gt;, and this will be the display of our calculator. It is empty, because we will modify its content from Javascript. Then we have a div with the class of &lt;code&gt;buttons&lt;/code&gt; which will represent the keypad of the calculator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"display"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"buttons"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

            &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"index.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;buttons&lt;/code&gt; container will hold all of the buttons. Each button will be a div with a class of &lt;code&gt;button&lt;/code&gt;. This will make the styling easy, and also will help us to gather the user input. Here we have a div for every button that we want on our keypad. You can notice that we have a weird looking label between the buttons: &lt;code&gt;&amp;amp;larr;&lt;/code&gt;. This is a HTML entity and it renders a back arrow (←), and we'll use this as a backspace. Also please not that for the equal sign button we have a separate id &lt;code&gt;equal&lt;/code&gt;. We will use this Id to distinguish this special button, and evaluate the expression provided to the calculator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"buttons"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;C&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;/&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;*&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="ni"&gt;&amp;amp;larr;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;7&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;8&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;9&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;-&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;4&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;5&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;6&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;+&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;1&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;2&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;3&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;.&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;(&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;0&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;)&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"equal"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"button"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;=&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this is all of the HTML markup that we need for this project, let's jump into CSS.&lt;/p&gt;

&lt;p&gt;Don't forget to link the CSS styleshead in the head of the HTML file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"style.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css"&gt;
  &lt;/a&gt;
  CSS
&lt;/h2&gt;

&lt;p&gt;Let's create a &lt;code&gt;style.css&lt;/code&gt; file.&lt;br&gt;
We set a width for the container and center it using margin (also give it a decent top margin of 10vh), and apply a little box shadow.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10vh&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;0px&lt;/span&gt; &lt;span class="m"&gt;43px&lt;/span&gt; &lt;span class="m"&gt;17px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;153&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;153&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;153&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the display we set a fixed height, and to center the text vertically we need to set the line-height to the exact same amount. The text should be right align, because this is how most calculator displays work. Also set the font-size and give a decent amount paddings.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#display&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;70px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt; &lt;span class="m"&gt;8px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To position the buttons we use CSS grid. By setting 4 x 1fr in-&lt;code&gt;grid-template-coloumns&lt;/code&gt; we'll have 4 equally sized buttons in each row. We only set bottom and left borders, so we won't get double borders. We'll set the other two sides in the next CSS rule.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.buttons&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt;&lt;span class="m"&gt;#999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Apply the missing two sides of the borders for every button:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.buttons&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt;&lt;span class="m"&gt;#999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the button we'll set borders, font-size and 100px of line height to center it vertically, and set &lt;code&gt;text-align: center&lt;/code&gt; to center the button labels horizontally. To have a better user experience set cursor to pointer, so the user will know that this is a clickable element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#999&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;line-height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;cursor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We want the equal button to stand out so, we'll set a blue background color and white text to it. Also to have a nice hover effect we'll set a darker background color and white text color on hover. To make the transition smoot set: &lt;code&gt;transition: 0.5s ease-in-out;&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#equal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.button&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#323330&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  Javascript
&lt;/h2&gt;

&lt;p&gt;This will be the heart of our application. Let's create the &lt;code&gt;index.js&lt;/code&gt; file. The first thing we need to do is to save a reference to our display dom element. We can easily do that because it has an id of &lt;code&gt;display&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;display&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next we have to get references for the buttons. We'll store the button references in an array. To gather the buttons we can select them by &lt;code&gt;document.getElementsByClassName('button')&lt;/code&gt;, but this function gives back a NodeCollection instead of an array so we have to convert it to an array using &lt;code&gt;Array.from()&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;buttons&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementsByClassName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;button&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next and last step we have to make is to add event listener to the buttons and build the functionalities. To add event listeners for the buttons, we'll map through the buttons array and add a click event listener for each. (An advanced solution would be to only add event listener to the &lt;code&gt;buttons&lt;/code&gt; container and use event bubbling but this is a more beginner-friendly solution.)&lt;/p&gt;

&lt;p&gt;To determine what should we do, we'll use &lt;code&gt;e.target.innerText&lt;/code&gt;, which will simply give back the label of the button that was clicked.&lt;/p&gt;

&lt;p&gt;In the first case, when the user hits the "C" button we'd like to clear the display. To do that we can access our display reference and set the &lt;code&gt;innerText&lt;/code&gt; to an empty string. Don't forget to add &lt;code&gt;break;&lt;/code&gt; at the end, because it is needed to prevent the execution of the code defined in other &lt;code&gt;case&lt;/code&gt; blocks.&lt;/p&gt;

&lt;p&gt;For the equal button we'll use javascript built in &lt;code&gt;eval&lt;/code&gt; function. We need to provide the display's content to eval and it will evaluate and return the result, so we should set the result of the eval call to the display's innerText. We need to wrap this into a try catch block to handle errors. Erros can happen when we have syntactically wrong math expressions, for example &lt;code&gt;//(9(&lt;/code&gt;, ine these cases we'll set the display's innerText to display 'Error'.&lt;/p&gt;

&lt;p&gt;⚠️ You should not use eval in user facing applications, because it can be abused and external code can be run with it. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#never_use_eval!"&gt;More details&lt;/a&gt; If you want to replace eval I suggest using &lt;a href="https://mathjs.org/"&gt;Math.js lib.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If the user hits the back arrow we need to remove the last character from the display's innerText. To do that we'll use the String.slice() method, but we only want to do that if the display has any value.&lt;/p&gt;

&lt;p&gt;In the default case, so whenever the user don't hit these special symbols we just want to append the clicked button's innerText to the display's innerText. We can use the &lt;code&gt;+=&lt;/code&gt; operator to do that.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;buttons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;switch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;C&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Error&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;←&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
                   &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="nx"&gt;display&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerText&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The whole project is &lt;a href="https://github.com/javascriptacademy-stash/calculator"&gt;available on GitHub&lt;/a&gt;&lt;br&gt;
And that's it you have a working calculator.&lt;/p&gt;

&lt;p&gt;Thanks for reading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#where-you-can-learn-more-from-me"&gt;
  &lt;/a&gt;
  Where you can learn more from me?
&lt;/h2&gt;

&lt;p&gt;I create education content covering web-development on several platforms, feel free to 👀 check them out.&lt;/p&gt;

&lt;p&gt;I also create a newsletter where I share the week's or 2 week's educational content that I created. No bull💩 just educational content.&lt;/p&gt;

&lt;p&gt;🔗 Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;💬 Join our &lt;a href="https://discord.gg/GuxmcEgAjB"&gt;community on Discord&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📧 Newsletter &lt;a href="https://www.getrevue.co/profile/dev_adamnagy"&gt;Subscribe here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🎥 YouTube &lt;a href="https://www.youtube.com/channel/UCicOwFWkuMX0ddFaKCc_E5Q"&gt;Javascript Academy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;🐦 Twitter: &lt;a href="https://twitter.com/dev_adamnagy"&gt;@dev_adamnagy&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;📷 Instagram &lt;a href="https://www.instagram.com/javascriptacademy/"&gt;@javascriptacademy&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>tutorial</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How I created my Complete Portfolio Website in less than 2 hours 🤯</title>
      <author>Ram Maheshwari 💚</author>
      <pubDate>Tue, 26 Oct 2021 14:09:11 +0000</pubDate>
      <link>https://dev.to/rammcodes/how-i-created-my-complete-portfolio-website-in-less-than-2-hours-4k7a</link>
      <guid>https://dev.to/rammcodes/how-i-created-my-complete-portfolio-website-in-less-than-2-hours-4k7a</guid>
      <description>&lt;p&gt;Few days before, I created an OpenSource Project called &lt;strong&gt;&lt;a href="https://github.com/rammcodes/dopefolio"&gt;Dopefolio&lt;/a&gt;&lt;/strong&gt; and wrote an Article about it &lt;strong&gt;&lt;a href="https://dev.to/rammcodes/i-created-an-opensource-portfolio-template-for-developers-1ij9/"&gt;here&lt;/a&gt;&lt;/strong&gt; explaining the project. 🚀 &lt;/p&gt;

&lt;p&gt;I decided to use &lt;strong&gt;Dopefolio&lt;/strong&gt; to build my own Portfolio Website 🥳 as &lt;strong&gt;&lt;a href="https://github.com/rammcodes/dopefolio"&gt;Dopefolio&lt;/a&gt;&lt;/strong&gt; is an OpenSource Portfolio Website Template for Developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fun Fact&lt;/strong&gt;: I was able to build my Entire Portfolio Website in Less than 2 hours 🤯 and in this &lt;strong&gt;Article&lt;/strong&gt;, I'm going to explain how I was able to build my &lt;strong&gt;&lt;a href="https://rammaheshwari.com"&gt;Portfolio Website&lt;/a&gt;&lt;/strong&gt; so quickly 🤘&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xAR8bU1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/XZMvdV2/Untitled-design-3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xAR8bU1z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/XZMvdV2/Untitled-design-3.jpg" alt="Ram Maheshwari Portfolio Site Preview"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;First, let's see what are the minimum requirements that we will need to build the portfolio site and it's not much 😉&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#all-we-need-is"&gt;
  &lt;/a&gt;
  All we need is ⬇️
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Basic Knowledge of HTML&lt;/li&gt;
&lt;li&gt;Basic Knowledge of GIT&lt;/li&gt;
&lt;li&gt;NodeJs Installed locally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and that's it, that's all you need in order for you to build a professional portfolio website as soon as possible ✌️&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#i-followed-these-3-steps-to-build-my-portfolio-site-in-less-than-2-hours"&gt;
  &lt;/a&gt;
  I followed these 3 steps to build my &lt;strong&gt;&lt;a href="https://rammaheshwari.com"&gt;Portfolio Site&lt;/a&gt;&lt;/strong&gt; in less than 2 hours
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Cloned the &lt;strong&gt;&lt;a href="https://github.com/rammcodes/dopefolio"&gt;Dopefolio&lt;/a&gt;&lt;/strong&gt; Repository&lt;/li&gt;
&lt;li&gt;Updated the Text, Theme Color, and Images inside the &lt;strong&gt;html&lt;/strong&gt; files based on my information.&lt;/li&gt;
&lt;li&gt;Hosted the website online on Netlify ( Optional )&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Everything regarding the setup and modifying the Dopefolio repo is already explained in the README.md file of Repository&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1:
&lt;/h3&gt;

&lt;p&gt;For step 1, all we need is to have some basic understanding of GIT so we can clone the Repository, and then we can remove the git origin to a new origin in our own Github account.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wkmnkSeh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/9ZsL9F8/Fire-Shot-Capture-086-rammcodes-Dopefolio-Dopefolio-Portfolio-Template-for-Developers-github-com.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wkmnkSeh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/9ZsL9F8/Fire-Shot-Capture-086-rammcodes-Dopefolio-Dopefolio-Portfolio-Template-for-Developers-github-com.png" alt="Dopefolio Github Repo"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2:
&lt;/h3&gt;

&lt;p&gt;For step 2, we need some basic understanding of HTML so we can change the text and images inside the HTML files. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: I have used mockups for my project images instead of just using regular images. If you like to use mockups as well, then you can generate them for free on websites like &lt;strong&gt;&lt;a href="https://mediamodifier.com/"&gt;Media Modifier&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href="https://smartmockups.com/"&gt;Smart Mockups&lt;/a&gt;&lt;/strong&gt;, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--biRPW1Ms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/pQMWnFp/Copy-of-Add-a-subheading.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--biRPW1Ms--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/pQMWnFp/Copy-of-Add-a-subheading.jpg" alt="With and Without Mockup"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#step-3-optional-"&gt;
  &lt;/a&gt;
  Step 3 ( Optional )
&lt;/h3&gt;

&lt;p&gt;If you like to host your site online so other people can use it then you can do it very quickly using &lt;strong&gt;&lt;a href="https://netlify.com"&gt;Netlify&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Netlify makes it very easier to &lt;strong&gt;host&lt;/strong&gt; the website online and it's also &lt;strong&gt;free&lt;/strong&gt; to host website on Netlify.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;README.md&lt;/strong&gt; file of the &lt;strong&gt;Dopefolio&lt;/strong&gt; repo already provides the instruction for hosting the site on &lt;strong&gt;Netlify&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D1UWUSVm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.sanity.io/images/ti7si9cx/production/656e951d31f3dc0f061a57466d01def70a81a6af-1500x1000.gif%3Fw%3D1382" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D1UWUSVm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.sanity.io/images/ti7si9cx/production/656e951d31f3dc0f061a57466d01def70a81a6af-1500x1000.gif%3Fw%3D1382" alt="Netlify"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#so-after-following-all-the-steps-i-ended-up-building-my-own-portfolio-website"&gt;
  &lt;/a&gt;
  So, after following all the steps, I ended up building my own &lt;strong&gt;&lt;a href="https://rammaheshwari.com"&gt;Portfolio Website&lt;/a&gt;&lt;/strong&gt; 🥳
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NeLOqUPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.ibb.co/wNQdX3P/Untitled-design-2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NeLOqUPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.ibb.co/wNQdX3P/Untitled-design-2.gif" alt="Netlify"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to check the website &lt;strong&gt;&lt;a href="https://rammaheshwari.com"&gt;here&lt;/a&gt;&lt;/strong&gt; and share your feedback on it 😸&lt;/p&gt;

&lt;p&gt;I hope you find this post to be helpful and thanks for reading it 😇&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#ps"&gt;
  &lt;/a&gt;
  P.S. ✌️
&lt;/h2&gt;

&lt;p&gt;If you are looking to hire a developer at your company then feel free to contact me on my &lt;strong&gt;&lt;a href="https://rammaheshwari.com"&gt;Website&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href="https://linkedin.com/in/rammcodes"&gt;Linkedin Profile&lt;/a&gt;&lt;/strong&gt; as I'm also open to Job Opportunities 😇&lt;/p&gt;




&lt;p&gt;Please &lt;strong&gt;React&lt;/strong&gt; with ❤️ + 🦄 + 🔖 , As it takes time to create such content so it will be very helpful if you show some love to this post.&lt;/p&gt;

&lt;p&gt;Share your feedback by &lt;strong&gt;Commenting&lt;/strong&gt; below 💬&lt;/p&gt;

&lt;p&gt;Drop me a &lt;strong&gt;Follow&lt;/strong&gt; for more &lt;strong&gt;Awesome&lt;/strong&gt; content related to &lt;strong&gt;Web Development&lt;/strong&gt; and &lt;strong&gt;Programming&lt;/strong&gt; 🙌&lt;/p&gt;

&lt;p&gt;Feel free to &lt;strong&gt;Connect&lt;/strong&gt; or &lt;strong&gt;Follow&lt;/strong&gt; me on my &lt;strong&gt;&lt;a href="https://linkedin.com/in/rammcodes"&gt;Linkedin Profile&lt;/a&gt;&lt;/strong&gt; 🙌&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-your-support"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Thank you for your support&lt;/strong&gt; ❤️
&lt;/h3&gt;

</description>
      <category>career</category>
      <category>css</category>
      <category>javascript</category>
      <category>portfolio</category>
    </item>
    <item>
      <title>10+ Best Laravel Dev Tools For Faster Development🚀 2021</title>
      <author>themeselection</author>
      <pubDate>Tue, 26 Oct 2021 14:03:45 +0000</pubDate>
      <link>https://dev.to/theme_selection/10-best-laravel-dev-tools-for-faster-development-4m3j</link>
      <guid>https://dev.to/theme_selection/10-best-laravel-dev-tools-for-faster-development-4m3j</guid>
      <description>&lt;p&gt;Want to boost up your development process while working on Laravel project? Well, then bookmark this collection of the best Laravel Dev Tools For Faster development. Although, before we start the collection, let's know about laravel in short.&lt;/p&gt;

&lt;p&gt;It is a framework that is used in many organizations for its high level of security and authentication. It is very easy to learn this language since the syntax of what was there in the language is very simple to understand and use. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-laravel-framework"&gt;
  &lt;/a&gt;
  What is Laravel Framework?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://laravel.com/docs/8.x"&gt;Laravel&lt;/a&gt; is a free and open-source PHP web framework, which is very expressive and has elegant syntax. Laravel is used to design custom software products.&lt;/p&gt;

&lt;p&gt;It is a compelling model view controller (MVC) architectural pattern PHP framework, an open-source web application development intended for developers who demand an uncomplicated and rich toolkit to build full-featured web applications. &lt;/p&gt;

&lt;p&gt;Laravel makes it effortless for you to produce professional web application by following refined coding standards and architectural pattern.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-benefits-of-laravel-framework"&gt;
  &lt;/a&gt;
  What are the benefits of Laravel Framework?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; It provides a convenient environment for automation testing.&lt;/li&gt;
&lt;li&gt; Laravel provides a good level of authorization and authentication.&lt;/li&gt;
&lt;li&gt; It has a very simple and clean API which helps to integrate with the mailing service.&lt;/li&gt;
&lt;li&gt; When there is more technical vulnerabilities laravel can be used to fix that easily&lt;/li&gt;
&lt;li&gt; It provides a very simple and expressive method of routing&lt;/li&gt;
&lt;li&gt; Not only with the mailing services, it can easily integrate with the other tools and helps to deliver fast web applications&lt;/li&gt;
&lt;li&gt; It avails a good level of error and expectation handling&lt;/li&gt;
&lt;li&gt; It can configure and manage schedule tasks very effectively&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Class Auto loading&lt;/li&gt;
&lt;li&gt;IOC container&lt;/li&gt;
&lt;li&gt;Migration&lt;/li&gt;
&lt;li&gt;Query builder&lt;/li&gt;
&lt;li&gt;Artisan console&lt;/li&gt;
&lt;li&gt;Database Seeding&lt;/li&gt;
&lt;li&gt;Unit-Testing&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-are-the-laravel-tools-and-packages"&gt;
  &lt;/a&gt;
  What are the Laravel Tools and Packages?
&lt;/h3&gt;

&lt;p&gt;Laravel is one of the most popular applications in the market, which is very easy to learn. This is more popular among the developers because it does not comprise any of the product functionality.&lt;/p&gt;

&lt;p&gt;It aims to give many web project functions like integration, authentication, authorization, etc. When you choose a Laravel package and tool, you can actually use them in different ways for accessing databases, performance dependency, and a lot more.&lt;/p&gt;

&lt;p&gt;So, Here we have covered some of the best one to help you speed up your development.&lt;/p&gt;

&lt;p&gt;If you are looking for laravel admin templates then you can check the collection of &lt;a href="https://themeselection.com/laravel-admin-panel-template/"&gt;Laravel admin panel template&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, let's begin...!!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4hoKDdt5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8s3a9cfqdfuoa9r71li3.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4hoKDdt5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8s3a9cfqdfuoa9r71li3.gif" alt="start right now"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#laravel-debugbar"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/barryvdh/laravel-debugbar"&gt;Laravel Debugbar&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WtJN8Ymt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r34caevtbf55urgpv1os.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WtJN8Ymt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r34caevtbf55urgpv1os.jpeg" alt="Laravel Debugbar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a package to integrate  &lt;a href="http://phpdebugbar.com/"&gt;PHP Debug Bar&lt;/a&gt;  with Laravel. It includes a Service Provider to register the debugbar and attach it to the output. You can publish assets and configure it through Laravel. It bootstraps some Collectors to work with Laravel and implements a couple custom Data Collectors, specific for Laravel. It is configured to display Redirects and (jQuery) Ajax Requests. (Shown in a dropdown) Read  &lt;a href="http://phpdebugbar.com/docs/"&gt;the documentation&lt;/a&gt;  for more configuration options.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/barryvdh/laravel-debugbar"&gt;Laravel Debugbar&lt;/a&gt;  is a highly recommended tool for debugging the Laravel application. The tool comes with regularly updated for the latest Laravel versions. The tool is displayed at the bottom of the browser and provides the debug information simultaneously. It also shows the route, the template which is rendered with the parameters provides with detailed information. It allows the developer to add messages.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ide-helper"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/barryvdh/laravel-ide-helper"&gt;IDE Helper&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W9A9QjS6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7olmx7j0cl3khwt8n13.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W9A9QjS6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7olmx7j0cl3khwt8n13.jpg" alt="IDE Helper"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This package generates helper files that enable your IDE to provide accurate autocompletion. Generation is done based on the files in your project, so they are always up-to-date.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#laravel-tinker"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/laravel/tinker"&gt;Laravel Tinker&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ds5R91PR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sbeh9fxxeo4nn2dc7g7q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ds5R91PR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sbeh9fxxeo4nn2dc7g7q.png" alt="Laravel Tinker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/laravel/tinker"&gt;Laravel Tinker&lt;/a&gt;  allows you to interact through a command line with any project that uses the Laravel framework. It allows users to access all the events and objects. Tinker is an optional add on, so we should manually install with the Laravel versions after 5.4.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#laravel-entrust"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Zizaco/entrust"&gt;Laravel Entrust&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;In  Laravel Entrust is a secured process of adding role-based permissions. It has four new tables which include, Role, Role User, Permissions and Permission Role. The roles are set up under categories at different levels.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#laravel-socialite"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/laravel/socialite"&gt;Laravel Socialite&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1U4vPIz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mqtgn3xd760fnmr2xm9o.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1U4vPIz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mqtgn3xd760fnmr2xm9o.jpg" alt="Laravel Socialite"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Laravel Socialite provides an expressive, fluent interface to OAuth authentication with Facebook, Twitter, Google, LinkedIn, GitHub, GitLab and Bitbucket. It handles almost all of the boilerplate social authentication code you are dreading writing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/laravel/socialite"&gt;Laravel Socialite&lt;/a&gt;  enables you to handle OAuth authentication more seamlessly. This tool allows users to login via social networking sites such as Facebook, LinkedIn, Instagram, Twitter, Google, Bitbucket, etc. This is one of the popular Laravel features that is commonly used in most of the Laravel development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  It is easy to use&lt;/li&gt;
&lt;li&gt;  Contains almost all instance social authentication code you may need&lt;/li&gt;
&lt;li&gt;  Has great community support with a lot of providers&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#laravel-mix"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/laravel-mix/laravel-mix"&gt;Laravel Mix&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwBX6des--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0xemvnfpw0yy3wvxit5u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwBX6des--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0xemvnfpw0yy3wvxit5u.png" alt="Laravel mix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Laravel Mix provides a clean, fluent API for defining basic  &lt;a href="http://github.com/webpack/webpack"&gt;webpack&lt;/a&gt;  build steps for your applications. Mix supports several common CSS and JavaScript pre-processors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Provides a wide API that corresponds to almost all your needs&lt;/li&gt;
&lt;li&gt;  Works as a wrapper around Webpack and allows to extend it&lt;/li&gt;
&lt;li&gt;  Eliminates all the difficulties associated with setting up and running Webpack&lt;/li&gt;
&lt;li&gt;  Works with modern JavaScript tools and frameworks: Vue.JS, React.JS, Preact, TypeScript, Babel, CoffeScript.&lt;/li&gt;
&lt;li&gt;  Transpiles and bundles Less, Sass and Stylus into CSS files&lt;/li&gt;
&lt;li&gt;  Supports Browser Sync, Hot Reloading, Assets versioning, Source Mapping out of the box&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#materio-vuetify-vuejs-laravel-admin-template"&gt;
  &lt;/a&gt;
  &lt;a href="https://themeselection.com/products/materio-vuetify-vuejs-laravel-admin-template/"&gt;Materio Vuetify VueJS Laravel Admin Template&lt;/a&gt;.
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://themeselection.com/products/materio-vuetify-vuejs-laravel-admin-template/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mxgQ3ikx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxuj14zg81cpvmbdvvb2.png" alt="Materio Laravel VueJS Admin Template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is a developer-friendly , rich with features, and highly customizable Laravel admin template. Furthermore, you can use this one of the best &lt;a href="https://themeselection.com/products/category/laravel-admin-templates/"&gt;laravel admin templates&lt;/a&gt; to create eye-catching, high-quality, and high-performing single-page applications. Materio is also equipped with invaluable features designed to help you create premium quality apps exactly as you imagine them.&lt;/p&gt;

&lt;p&gt;In addition, incredibly versatile, the Materio Vuetify Vuejs Laravel admin template also allows you to build any type of web applications such as: CRM, Analytic apps, Education apps, Fitness Apps, Analytics apps, etc.. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Pure VueJS, No jQuery Dependency&lt;/li&gt;
&lt;li&gt;  Created with Vue CLI&lt;/li&gt;
&lt;li&gt;  Utilizes Vuex, Vue Router, Webpack&lt;/li&gt;
&lt;li&gt;  Code Splitting, Lazy loading&lt;/li&gt;
&lt;li&gt;  Carousel (Image Slider)&lt;/li&gt;
&lt;li&gt;  Clipboard (Copy to clipboard)&lt;/li&gt;
&lt;li&gt;  API ready JWT Authentication flow&lt;/li&gt;
&lt;li&gt;  Access Control (even on CRUD operations)&lt;/li&gt;
&lt;li&gt;  Laravel Passport&lt;/li&gt;
&lt;li&gt;  Laravel Sanctum&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;For more admin templates check the collection of &lt;a href="https://themeselection.com/10-best-laravel-vue-admin-template-free/"&gt;Laravel Vue Admin Template Free&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#laravel-websockets"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/beyondcode/laravel-websockets"&gt;Laravel Websockets&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f4VmPYmB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u65ihpip1sv6sm9bdgvj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f4VmPYmB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u65ihpip1sv6sm9bdgvj.png" alt="Laravel Web Sockets"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Bring the power of WebSockets to your Laravel application. Drop-in Pusher replacement, SSL support, Laravel Echo support and a debug dashboard are just some of its features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Completely handles WebSockets server side&lt;/li&gt;
&lt;li&gt;  Replaces Pusher and Laravel Echo Server&lt;/li&gt;
&lt;li&gt;  Is Ratchet-based, but doesn’t require you to set up Ratchet yourself&lt;/li&gt;
&lt;li&gt;  Ships with a real time Debug Dashboard&lt;/li&gt;
&lt;li&gt;  Provides a real time chart for you to inspect the WebSockets key metrics (peak connections, the amount of messages sent and API messages received)&lt;/li&gt;
&lt;li&gt;  Enables to use in multi-tenant applications&lt;/li&gt;
&lt;li&gt;  Comes with the pusher message protocol (all the packages you already have that support Pusher will work with Laravel WebSockets too)&lt;/li&gt;
&lt;li&gt;  Is totally compatible with Laravel Echo&lt;/li&gt;
&lt;li&gt;  Preserves all the main Pusher features (private and presence channels, Pusher HTTP API)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#infyom-laravel-generator"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/InfyOmLabs/laravel-generator"&gt;InfyOm Laravel Generator&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IauUdicC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikfnuhbcmel0ph8gi99s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IauUdicC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ikfnuhbcmel0ph8gi99s.png" alt="InfyOm Laravel Generator"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Generate Admin Panels CRUDs and APIs in Minutes with tons of other features and customizations with 3 different themes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#laravel-passport"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/laravel/passport"&gt;Laravel Passport&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Laravel Passport is the simplest possible tool for API authentication. It is a full Auth2 server implementation that is very easy to use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#laravel-tenancy"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/tenancy/multi-tenant"&gt;Laravel Tenancy&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b9dycj1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/coi13vts02z1w7xu4v5t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b9dycj1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/coi13vts02z1w7xu4v5t.png" alt="Laravel Tenancy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The unobtrusive Laravel package that makes your app multi tenant. Serving multiple websites, each with one or more hostnames from the same codebase. But with clear separation of assets, database and the ability to override logic per tenant.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Eases the process of development&lt;/li&gt;
&lt;li&gt;  Provides a powerful interface to monitor and debug numerous aspects of your app&lt;/li&gt;
&lt;li&gt;  Expands the horizons of development process providing a direct access to a wide range of information&lt;/li&gt;
&lt;li&gt;  Cuts down bugs and gives the ideas on how to improve your application&lt;/li&gt;
&lt;li&gt;  Gives a sense of the requests coming into your application. Provides a clear understanding of all the running exceptions, database queries, mail, log entries, cache operations, notifications and much more&lt;/li&gt;
&lt;li&gt;  Collects the information on how long does it take to execute all the necessary commands and queries.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#laravel-dusk"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/laravel/dusk"&gt;Laravel Dusk&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f3dcGzOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtxpw6ibtrpoc6fv3ye4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f3dcGzOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mtxpw6ibtrpoc6fv3ye4.png" alt="Laravel dusk"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Laravel Dusk provides an expressive, easy-to-use browser automation and testing API. By default, Dusk does not require you to install JDK or Selenium on your machine. Instead, Dusk uses a standalone Chromedriver. However, you are free to utilize any other Selenium driver you wish.&lt;/p&gt;

&lt;p&gt;If you want to test your application and see how it works from the user’s point of view, try Laravel Dusk. This tool provides automated browser testing with developer-friendly API. Laravel Dusk comes with Chromedriver by default.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  Does not require to install JDK or Selenium (but you are free to use any Selenium driver if you wish)&lt;/li&gt;
&lt;li&gt;  Is a powerful tool for the web applications using JavaScript&lt;/li&gt;
&lt;li&gt;  Ease the process of testing various clickable elements of your app&lt;/li&gt;
&lt;li&gt;  Saves screenshots and browser console outputs of the crushed tests, so you can see what has gone wrong&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#laravel-packager"&gt;
  &lt;/a&gt;
  &lt;a href="https://github.com/Jeroen-G/Laravel-Packager"&gt;Laravel Packager&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This package provides you with a simple tool to set up a new package and it will let you focus on the development of the package instead of the boilerplate&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#laravel-test-tools"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/laravel-testtools/ddieaepnbjhgcbddafciempnibnfnakl?"&gt;Laravel Test Tools&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--62NcEy_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/on2reooa7ovz8cqchtlo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--62NcEy_p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/on2reooa7ovz8cqchtlo.png" alt="Laravel Test Tools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Chrome extension to generate Laravel integration tests while using your app. Create your Laravel integration tests while you surf on your website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#phpstrom"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.jetbrains.com/phpstorm/"&gt;PHPStrom&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lp_9GyO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rw7cs8de2i400f9m07xo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lp_9GyO0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rw7cs8de2i400f9m07xo.png" alt="PHPStrom"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PHPStrom is a Smart IDE for Laravel development. It offers multiple features such as Fast and secured refactoring, Smart code navigation, efficient code formatter, easy debugging and testing. This IDE will increase the productivity of the developers by debugging the codes faster with consistent performance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bitbucket"&gt;
  &lt;/a&gt;
  &lt;a href="https://bitbucket.org/product"&gt;Bitbucket&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_lpdwqHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8qnq091usxlgdy6xkgh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_lpdwqHk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l8qnq091usxlgdy6xkgh.png" alt="Bitbucket"&gt;&lt;/a&gt;&lt;br&gt;
If you are a developer, you must be quite familiar with GitHub or  Bitbucket. Both offer git services, you can choose one depending upon your project and the application requisites. Bitbucket is ideal for small enterprise Laravel application. This helps you avoid sharing the code repositories with a limited number of collaborators. You can also use Bitbucket as a private repository and it’s more flexible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h2&gt;

&lt;p&gt;So, this was the collection of the best Laravel Dev Tools for faster development. Intention here is to save your time and provide the best dev tools.&lt;/p&gt;

&lt;p&gt;Due to its easy deployment and the customized level of integration, many companies want to deploy these Laravel applications in their organization. &lt;/p&gt;

&lt;p&gt;Most of the tools mentioned here provide a high level of authority and authentication. Besides, All of them are developer-friendly to use. &lt;/p&gt;

&lt;p&gt;So, choose the one according your need and requirements. Also, suggest any other laravel tools that you think we should consider in this list.&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Are you an awesome developer???</title>
      <author>rubalk</author>
      <pubDate>Tue, 26 Oct 2021 13:47:37 +0000</pubDate>
      <link>https://dev.to/rubalk/are-you-an-awesome-developer-4f1m</link>
      <guid>https://dev.to/rubalk/are-you-an-awesome-developer-4f1m</guid>
      <description>&lt;p&gt;According to Evans Data Corporation Data's Global Developer Population and Demographic Study, there are 26.9 million software developers worldwide, each working on different platforms and programming languages. Every other developer has a different way of writing their code, but one thing that connects us all is our &lt;strong&gt;Witty and Sagacious Brains.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this article, we will go through the some of the daily interactive areas of a developer and situations that a developer must have encountered at least once in their entire professional journey.&lt;br&gt;
So, go through each of the questions below and try evaluating yourself against them. The answer to each of the questions are binary, either &lt;em&gt;yes or no&lt;/em&gt;, &lt;em&gt;true or false&lt;/em&gt;, &lt;em&gt;0 or 1&lt;/em&gt; or whatever you say :)&lt;br&gt;
Follow your instincts, whatever comes first in your mind while reading the questions is the answer to the question.&lt;/p&gt;

&lt;p&gt;At the end of the article, you will have an answer to how awesome of a developer you are.&lt;/p&gt;

&lt;p&gt;Be honest to yourself and don't rush for the results....&lt;/p&gt;

&lt;p&gt;Here you go!!!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Can you solve each of the following basic logical problems without searching online and taking help?&lt;br&gt;
a. Evaluate if the given number is a Palindrome Number or not.&lt;br&gt;
b. Evaluate if a number is Prime numbers or not.&lt;br&gt;
c. List numbers in Fibonacci series in a given range.&lt;br&gt;
d. Print a pattern with * in the form of a triangle.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;There is Project A that you worked on previously and now you are working on a new one Project B. A feature is supposed to be developed in Project B which is exactly similar to a feature in Project A. You know the exact solution for the feature but the solution you derived was not an ideal solution. It had few drawbacks and loopholes, and you are aware of them, but it works like charm and chances of getting user getting into those issues is very rare. Will you change the design and derive a better solution?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Have you tried deriving your own logic for the following generic problems?&lt;br&gt;
a. Palindrome String&lt;br&gt;
b. Counting occurrence of a particular character in a given string&lt;br&gt;
c. Removing duplicates from array&lt;br&gt;
d. Sorting an array&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Every developer must have solved some of the problem statements several times for different purposes in their entire journey. This may be for different project or while learning a new language or just for the sake of practice. For example, calculating the largest number in an array. So, do you derive a different logic every time, a more optimized and newer solution?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You don't get agitated when you get a bug in production ready feature?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;While reading any problem statement do you tend to derive the solution in your mind? As you are moving ahead and reading the problem statement the solution is being constructed in your mind and at the end when you are finish reading you have a ready solution in your mind on which you can start working immediately. Did this ever happen to you?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Do you try to minimize the iterations in your loops by breaking them conditionally? Does saving a single iteration in the loop makes you satisfied and happy?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's all folks!!!&lt;/p&gt;

&lt;p&gt;I know, the questions were not very complicated, but they must have opened abundant windows of questions for you.&lt;/p&gt;

&lt;p&gt;So, here are the results...&lt;/p&gt;

&lt;p&gt;If your answer to each of the question is a &lt;strong&gt;truthy&lt;/strong&gt;&lt;em&gt;(yes, true, 1)&lt;/em&gt; - &lt;br&gt;
Congratulations!!! You are an Awesome Developer!!! Keep up the good work!!! Inspire and guide others to be as awesome as you are.&lt;/p&gt;

&lt;p&gt;If all your answers don't result in truthy then don't get disheartened. There is still a long way to go. Try identifying the opportunities to grow and whenever you find yourself in any of the situations mentioned above, always go for a truthy :)&lt;/p&gt;

&lt;p&gt;Honestly, there is no scale to measure an awesome developer, it totally depends on how wisely you take decisions while developing. The situations mentioned above are some of the common situations we face on daily basis. There is just a thin line of choosing a healthy and optimized solution over a workaround solution. You already know the answers to each of the question, but still, we don't abide by that. Choosing an ideal solution will always move you one step closer to be an awesome developer and in no time, you will be an &lt;br&gt;
&lt;strong&gt;AWESOME DEVELOPER&lt;/strong&gt;&lt;br&gt;
or the better I say &lt;br&gt;
&lt;strong&gt;LEGEND&lt;/strong&gt;  &lt;em&gt;wait for it&lt;/em&gt;  &lt;strong&gt;DARY DEVELOPER&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Do share in the comment section below if you are an Awesome Developer.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>career</category>
      <category>performance</category>
    </item>
    <item>
      <title>Divtober Day 26: Spice</title>
      <author>Alvaro Montoro</author>
      <pubDate>Tue, 26 Oct 2021 13:16:21 +0000</pubDate>
      <link>https://dev.to/alvaromontoro/divtober-day-26-spice-h4d</link>
      <guid>https://dev.to/alvaromontoro/divtober-day-26-spice-h4d</guid>
      <description>&lt;p&gt;The word of the day in divtober is "Spice." So I drew a bottle of spices using CSS and a single HTML element:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/alvaromontoro/embed/wvqJNGZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;It was interesting trying to make it look more realistic (although it seems that the browser struggles a little 😳). I learned a bunch about shadows by tinkering with them (e.g. not all shadows are black or white, multiple shadows from multiple directions make it look nicer... they may be basics for people with experience, but that was &lt;em&gt;new-ish&lt;/em&gt; to me.)&lt;/p&gt;

&lt;p&gt;And here's a video of how the drawing was done:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1SCCwqehAYA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>divtober</category>
      <category>css</category>
      <category>art</category>
    </item>
  </channel>
</rss>
