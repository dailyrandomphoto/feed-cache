<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Core Banking Software Development</title>
      <author>Priyanshi Sharma</author>
      <pubDate>Tue, 27 Apr 2021 05:34:57 +0000</pubDate>
      <link>https://dev.to/priyanshi_sharma/core-banking-software-development-42eb</link>
      <guid>https://dev.to/priyanshi_sharma/core-banking-software-development-42eb</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kyF8oaE7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fphlsa5a81iycwclqkeu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kyF8oaE7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fphlsa5a81iycwclqkeu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The term &lt;a href="https://en.wikipedia.org/wiki/Core_banking#:~:text=Core%20banking%20is%20a%20banking,of%20the%20member%20branch%20offices."&gt;core banking&lt;/a&gt; (Centralized Online Real-Time Exchange) ensures synchronization among network bank branches. They are integrated with a centralized server that enables the processing of data in real-time. It allows customers to access their bank account details and perform basic transactions from any branch offices. Core banking functionalities include loans, mortgages, transactions, and payments which were traditionally available through ATM or branches. And the core banking software development with network technology enables a bank to centralize its record-keeping while providing access to bank account transactions from any location.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-build-core-banking-software"&gt;
  &lt;/a&gt;
  Why Build Core Banking Software?
&lt;/h2&gt;

&lt;p&gt;The banking system around the globe had been witnessing a positive beam for the past few years having stable ratings across most countries. It was progressing and preparing for the next wave of blockchain technology and AI-backed technologies as its central point.&lt;/p&gt;

&lt;p&gt;However, the sudden rise of the COVID-19 pandemic that resulted in complete lockdown entirely changed the concept of businesses, banking and everything else globally. It threw the banking sector into the spotlight persisting it to adapt digitization overnight.&lt;/p&gt;

&lt;p&gt;This epidemic has become the turning point for the banking sector and its customers. The rising omnipresence of digital devices has put the powers in the hands of the end customers. Therefore, making customer experience paramount across all the industries where banking is no exception too. Some of the banks or financial organizations have realized the urgency of developing meaningful banking experiences.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#goals-of-core-banking-software-system"&gt;
  &lt;/a&gt;
  Goals of Core Banking Software System
&lt;/h2&gt;

&lt;p&gt;The Core Banking Software System works towards &lt;a href="https://www.decipherzone.com/blog-detail/customer-experience-web-design"&gt;improving customer experience&lt;/a&gt;. It assures customer’s comfort and satisfaction while enabling banking anytime and anywhere. With the implementation of technology, different approaches have been discovered to ease out all the services and software development is one of those discoveries as well. It offers essential functions like keeping track of deposits, transfers, ledgers, customer details, loan accounts, and so much more that was once carried out manually.&lt;/p&gt;

&lt;p&gt;The multiple operations of core banking software allow the bank to store information in the correct format. Moreover, all the stored information can be obtained efficiently through an authentication mechanism. With the facts and statistics, this modern tech helps employees and clients to make intelligent decisions. It also helps to produce and offer legislative and regulatory reports to the government regulators.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#primary-features-amp-functionality-of-core-banking-software"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.decipherzone.com/blog-detail/core-banking-software-development"&gt;Primary Features &amp;amp; Functionality of Core Banking Software&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;Some of the top features that a core banking software must have are security alerts, chatbot integrations, bank account management, multi-currency feature, ATM finder, QR based payments and much more.&lt;/p&gt;

&lt;p&gt;Let’s dig a bit deeper into these features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ul&gt;&lt;li&gt; Security Alerts &lt;/li&gt;&lt;/ul&gt;&lt;/strong&gt; Protection and confidentiality are the two main factors for banking software. It’s essential for the banks to ensure that their systems are safe and the information stored is secured. Some of the apps also have features like touch ID or voice or face recognition for enhanced security. So, developers ensure to make a system that detects any fraudulent activity and send security alerts to both the bank and the customer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ul&gt;&lt;li&gt; Chatbot Integrations &lt;/li&gt;&lt;/ul&gt;&lt;/strong&gt; It’s important to provide 24/7 support to the customers who need guidance while using the &lt;a href="https://www.decipherzone.com/web-app-development-company"&gt;web app&lt;/a&gt; or banking software. Here, the best choice for you will be AI chatbot integration that will easily address hundreds of clients at the same time instantly. Needless to say, they can run for hours and will never get exhausted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ul&gt;&lt;li&gt; Bank Account Management &lt;/li&gt;&lt;/ul&gt;&lt;/strong&gt; Another essential feature to include in your core banking software solution is bank account management. Users should be able to track their accounts and other banking information like deposits, withdrawals, and transaction history. Not only that, but they should also be able to make transactions through the application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ul&gt;&lt;li&gt; Multi-Currency Availability &lt;/li&gt;&lt;/ul&gt;&lt;/strong&gt; To promote the concept of multicultural banking, an ideal core banking system should be multilingual, that is, setting up different currencies, choosing their base currency, accounting for the base and multiple currencies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ul&gt;&lt;li&gt; QR Payments &lt;/li&gt;&lt;/ul&gt;&lt;/strong&gt; One of the features that have become a fintech trend - QR pay, must be indulged in your banking software for the ease of scan pay directly from their web application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ul&gt;&lt;li&gt; Mobile Deposit &lt;/li&gt;&lt;/ul&gt;&lt;/strong&gt; It might sound like sci-fi material to some individuals who still banks conventionally, but mobile deposit or remote deposit control has become the most popular features of core banking software. It will require scanning and transmitting a picture of a check to a banking organization which saves a lot of customer’s time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;ul&gt;&lt;li&gt; A Few More Functions &lt;/li&gt;&lt;/ul&gt;&lt;/strong&gt; Other than that there are a few features that you can integrate into your software are Interest Rate Calculator, Loan Processing, Advanced Analytics and Payment History.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-much-does-it-cost-to-develop-a-core-banking-app"&gt;
  &lt;/a&gt;
  How Much Does It Cost to Develop a Core Banking App?
&lt;/h2&gt;

&lt;p&gt;Developing a core banking software can cost $200,000 to $500,000. However, development costs are unpredictable during the earlier stages of development. A few factors affecting its cost entails vendor type, location, complexity, the number of features, back-end infrastructure, connected APIs, the complexity of UX/UI design, development approach, the inclusion of additional branded visual elements and so on.&lt;/p&gt;

&lt;p&gt;Overall, the performance of your software is influenced by the &lt;a href="https://www.decipherzone.com/blog-detail/frontend-developer-roadmap-2020"&gt;front-end&lt;/a&gt; or design of the application with some unbeatable innovative features. It will also help a bank gain new clients, build a positive consumer experience and competitive benefits.&lt;br&gt;
If you are interested in the development of core banking software or have any questions regarding the one, don’t hesitate to &lt;a href="https://www.decipherzone.com/contact-IT-company"&gt;contact us&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Source: &lt;a href="http://decipherzone.com/blog"&gt;Decipher&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>programming</category>
    </item>
    <item>
      <title>Leveling up with React: React Router</title>
      <author>Neha Soni</author>
      <pubDate>Tue, 27 Apr 2021 05:26:21 +0000</pubDate>
      <link>https://dev.to/nehasoni__/leveling-up-with-react-react-router-1npe</link>
      <guid>https://dev.to/nehasoni__/leveling-up-with-react-react-router-1npe</guid>
      <description>&lt;p&gt;Hello, world👋&lt;br&gt;&lt;br&gt;
In this blog article, we will learn React router's concept and build a simple &lt;strong&gt;single-page app(SPA)&lt;/strong&gt; using react.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-will-be-covered-in-this-blog"&gt;
  &lt;/a&gt;
  What will be covered in this Blog
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;- Introduction to react-router-dom
- React Router Components
- React Router Installation
- Let’s create the SPA
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Let's get started!&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-is-reactrouterdom"&gt;
  &lt;/a&gt;
  What is react-router-dom?
&lt;/h1&gt;

&lt;p&gt;Routing is the key part of all the web-applications. It plays a central role in static HTML pages as well as in the most complex React web applications. React router is a standard library that enables you to navigate between the different pages without reloading your whole page. It keeps the browser URL in sync with UI(data that will be displayed on the web page). It is mainly used for building single-page web applications.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#different-packages-in-react-router-library"&gt;
  &lt;/a&gt;
  Different packages in React Router library
&lt;/h1&gt;

&lt;p&gt;React Router library contains three different npm packages for routing.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;react-router&lt;/strong&gt; provides a core routing library that that is used as a peer dependency for the other two packages listed below.
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;react-router-native&lt;/strong&gt; is mainly used for  &lt;a href="https://reactnative.dev/"&gt;React native&lt;/a&gt;  applications.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;react-router-dom&lt;/strong&gt; is used in React apps for routing.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
  &lt;a href="#react-router-components"&gt;
  &lt;/a&gt;
  React Router Components
&lt;/h1&gt;

&lt;p&gt;The basic React Router components commonly used in minimal navigation are BrowserRouter, Route, Switch, and Link.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;BrowserRouter&lt;/h3&gt;
A BrowserRouter uses the HTML5 history API (pushState, replaceState, and the popstate event) to keep your UI in sync with the URL. To enable the client-side routing we need to import &lt;strong&gt;BrowserRouter&lt;/strong&gt; from &lt;strong&gt;react-dom-router&lt;/strong&gt; package and also wrap our entire application inside BrowserRouter.
If you aren’t familiar with client-side routing, you can learn it from  &lt;a href="https://medium.com/@wilbo/server-side-vs-client-side-routing-71d710e9227f"&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
import ReactDOM from "react-dom";
import { BrowserRouter } from "react-router-dom";
import App from "./App";

const rootElement = document.getElementById("root");
ReactDOM.render(
    &amp;lt;BrowserRouter&amp;gt;
      &amp;lt;App /&amp;gt;
    &amp;lt;/BrowserRouter&amp;gt;,
  rootElement
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;Switch&lt;/h3&gt;
The Switch component will only render the first route that matches/includes the path
rather than rendering all matching routes. It doesn't take any props. Also, it allows for nested routes to work properly, which is something that Router will not be able to handle.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
import ReactDOM from "react-dom";
import { BrowserRouter, Switch } from "react-router-dom";
import App from "./App";

const rootElement = document.getElementById("root");
ReactDOM.render(
 &amp;lt;BrowserRouter&amp;gt;
       &amp;lt;Switch&amp;gt;
         &amp;lt;Route path="/" component={Home} /&amp;gt;
         &amp;lt;Route path="/signin" component={SignIn} /&amp;gt;
         &amp;lt;Route path="/signup" component={SignUp} /&amp;gt;
       &amp;lt;/Switch&amp;gt;
  &amp;lt;/BrowserRouter&amp;gt;,
         rootElement
   );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;Route&lt;/h3&gt;
The route is used to render the component based on the specified path. It is generally defined with two props- path and component. Here, the path represents the URL route and the component represents the page or the component that we want to render on that path. If the path for a route is set to just "/", &lt;code&gt;Switch&lt;/code&gt; would always render that route for all paths as it is a match. For example, if the path we’re on is &lt;code&gt;/signin&lt;/code&gt;, this path does include a &lt;code&gt;/&lt;/code&gt;. As long as it includes the character, it will be considered a match, which does include nested routes.
To solve this problem, we include another prop for that route, &lt;strong&gt;exact&lt;/strong&gt;. As the name implies, the path has to be the same. 
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from "react";
import ReactDOM from "react-dom";
import { BrowserRouter, Switch } from "react-router-dom";
import App from "./App";

const rootElement = document.getElementById("root");
ReactDOM.render(
 &amp;lt;BrowserRouter&amp;gt;
         &amp;lt;Route exact path="/" component={Home} /&amp;gt;
         &amp;lt;Route path="/signin" component={SignIn} /&amp;gt;
         &amp;lt;Route path="/signup" component={SignUp} /&amp;gt;
  &amp;lt;/BrowserRouter&amp;gt;,
         rootElement
   );
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;h3&gt;Link&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As the name indicates this component is used to create links that allow the application to navigate on different URLs and render its content without reloading the whole webpage. It is defined with only one prop- &lt;code&gt;to&lt;/code&gt;. The &lt;code&gt;to&lt;/code&gt; represents where to redirect upon click.&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Link to="/sample"&amp;gt;Click to redirect&amp;lt;/Link&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#time-to-code"&gt;
  &lt;/a&gt;
  Time to Code!
&lt;/h1&gt;

&lt;p&gt;Now, I’ll explain how I created a simple SPA using React Routing.&lt;br&gt;&lt;br&gt;
To get started, first, let’s create a React app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app routing-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;If you aren’t familiar with this command, you can learn more from the  &lt;a href="https://create-react-app.dev/docs/getting-started/"&gt;create-react-app getting started guide&lt;/a&gt; .&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then, install the &lt;a href="https://www.npmjs.com/package/react-router-dom"&gt; react-router-dom&lt;/a&gt;  package.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install react-router-dom
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, start the dev server&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Then, add the dependency react-router-dom in package.json.&lt;/strong&gt;&lt;br&gt;
Let's start creating content pages first-&lt;br&gt;&lt;br&gt;
First, create a file home.js in src directory and add the following content:&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;home.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { Component } from "react";

class Home extends Component {
  render() {
    return (
      &amp;lt;div&amp;gt;
        &amp;lt;h2&amp;gt;Welcome to Hashnode!!&amp;lt;/h2&amp;gt;
        &amp;lt;p&amp;gt;
        Hashnode is the easiest way to start a developer blog on your 
        personal domain 🌏 for free and connect with the readers through 
        our global dev community! 👩‍💻👨‍💻
        &amp;lt;/p&amp;gt;
      &amp;lt;/div&amp;gt;
    );
  }
}

export default Home;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create a signin.js file in the same location:&lt;br&gt;
&lt;strong&gt;signin.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { Component } from "react";


class SignIn extends Component {
    handleClick  = ()=&amp;gt;
    {
            alert("Thank you for signing in 😀.");
    }

    render() {
    return (
        &amp;lt;&amp;gt;
        &amp;lt;div className="home"&amp;gt;
            &amp;lt;h2&amp;gt;SignIN&amp;lt;/h2&amp;gt;
            &amp;lt;b&amp;gt;Username&amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;
            &amp;lt;input type="text" placeholder="Enter username"/&amp;gt;
            &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;

            &amp;lt;b&amp;gt;Password&amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;
            &amp;lt;input type="password" placeholder="Enter password"/&amp;gt;
            &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;

            &amp;lt;button
            className="btn btn-success" 
            onClick={this.handleClick}&amp;gt;
            SignIN
            &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/&amp;gt;
        );
  }
}

export default SignIn;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We just have one more page left. Create signup.js file in src folder:&lt;br&gt;
&lt;strong&gt;signup.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { Component } from "react";

class SignUp extends Component {

    handleClick  = ()=&amp;gt;
    {
            alert("Thank you for signing in 😀.");
    }

    render() {
    return (
        &amp;lt;&amp;gt;
        &amp;lt;div className="home"&amp;gt;
            &amp;lt;h2&amp;gt;SignUp&amp;lt;/h2&amp;gt;
            &amp;lt;b&amp;gt;Username&amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;
            &amp;lt;input type="text" placeholder="Enter username"/&amp;gt;
            &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;

            &amp;lt;b&amp;gt;Enter Email&amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;
            &amp;lt;input type="email" placeholder="Enter your Email"/&amp;gt;
            &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;
            &amp;lt;b&amp;gt;Password&amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;
            &amp;lt;input type="password" placeholder="Enter password"/&amp;gt;
            &amp;lt;br/&amp;gt;&amp;lt;br/&amp;gt;
            &amp;lt;button className="btn btn-success" 
            onClick={this.handleClick}&amp;gt;
            SignUp
            &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
        &amp;lt;/&amp;gt;
        );
  }
}

export default SignUp;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is all we are going to show on our web page. Make sure to save all of your changes to these three files. We'll look at how to make them useful shortly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's start working on our App.js file&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
We have our app frame in the form of our &lt;code&gt;App&lt;/code&gt; component. We have our content pages represented by the &lt;code&gt;Home&lt;/code&gt;, &lt;code&gt;SignIn&lt;/code&gt;, and &lt;code&gt;SignUp&lt;/code&gt; components. What we need to do is tie all of these together to create our app. This is where React Router comes in. To start using it, go to the App.js file, and import the below packages:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import {
  Route,
  Link,
  BrowserRouter
} from "react-router-dom";
import Home from './home.js';
import SignIn from './signin.js';
import SignUp from './signup.js';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are importing Route, Link, and BrowserRouter from the react-router-dom npm package we installed earlier. In addition, we are also importing our Home, SignIn, and SignUp components. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import {
  Route,
  Link,
  BrowserRouter
} from "react-router-dom";
import Home from './home.js';
import SignIn from './signin.js';
import SignUp from './signup.js';

class App extends React.Component {  
render() {  
 return ( 
     &amp;lt;BrowserRouter&amp;gt; 
  &amp;lt;div&amp;gt;  
   &amp;lt;h1&amp;gt;Simple SPA&amp;lt;/h1&amp;gt;  
        &amp;lt;ul className="header"&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;Link to="/"&amp;gt;Home&amp;lt;/Link&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;Link to="/signin"&amp;gt;SignIn&amp;lt;/Link&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;Link to="/signup"&amp;gt;SignUp&amp;lt;/Link&amp;gt;&amp;lt;/li&amp;gt;
          &amp;lt;/ul&amp;gt;
          &amp;lt;div className="content"&amp;gt;
            &amp;lt;Route exact path="/" component={Home}/&amp;gt;
            &amp;lt;Route exact path="/signin" component={SignIn}/&amp;gt;
            &amp;lt;Route exact path="/signup" component={SignUp}/&amp;gt;
          &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;/BrowserRouter&amp;gt;
    )  
 }  
}  
export default App;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As I already explained the function and need of everything we have used in our App.js file. Hope you understand things clearly. In case you have any doubt let me know in the comment section. &lt;br&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Adding Some CSS&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Right now, our app is completely unstyled. In your src folder, create a file called style.css and add the following style rules into it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body {
  background-color: #FFCC00;
  padding: 20px;
  margin: 0;
  font-size: 25px;
}
h1, h2, p, ul, li {
  font-family: sans-serif;
  text-align: center;
}
ul.header li {
  display: inline;
  list-style-type: none;
  margin: 0;
}
ul.header {
  background-color: #111;
  padding: 0;
}
ul.header li a {
  color: #FFF;
  font-weight: bold;
  text-decoration: none;
  padding: 20px;
  display: inline-block;
}
a:hover
{
    background-color: blue;
}
.content {
  background-color: #FFF;
  padding: 20px;
}
.content h2 {
  padding: 0;
  margin: 0;
}
.content li {
  margin-bottom: 10px;
}
input
{
  width: 100%;
  padding: 12px 20px;
  margin: 8px 0;
  display: inline-block;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
  font-size: 18px;
}
button
{
    width: 30%;
  background-color: blue;
  color: white;
  padding: 14px 20px;
  margin: 8px 0;
  margin-left: 500px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are almost done here! There are just a few more things we need to do.&lt;br&gt;
We need to reference this style sheet in our app. At the top of index.js, add the import statement to do just that:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;index.js&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import ReactDOM from 'react-dom';
import App from './App.js';
import './style.css';


ReactDOM.render(
&amp;lt;BrowserRouter&amp;gt;
  &amp;lt;App/&amp;gt;
&amp;lt;/BrowserRouter&amp;gt;, 
  document.getElementById("root")
);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you have followed all the steps, go to our browser and your webpage looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hyIujgJH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617028242453/jE2edDd5_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hyIujgJH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617028242453/jE2edDd5_.png" alt="Screenshot (149).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you click on the SignIn button the path changes to &lt;code&gt;/signin&lt;/code&gt; and the page will navigate to &lt;em&gt;SignIn&lt;/em&gt; component without reloading your application.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1UTwnxim--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617028446460/pphGDwsxF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1UTwnxim--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617028446460/pphGDwsxF.png" alt="Screenshot (152).png"&gt;&lt;/a&gt;&lt;br&gt;
 Similarly, when you click on the SignUp button the path changes to &lt;code&gt;/signup&lt;/code&gt; and the page will navigate to  &lt;em&gt;SignUp&lt;/em&gt; component without reloading your application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EvkXYZjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617028804146/3GyM-o7qK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EvkXYZjg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1617028804146/3GyM-o7qK.png" alt="Screenshot (153).png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;React router is an awesome tool that could be of great help to your application. I hope this Demo provides an introductory guide to React Router.&lt;/p&gt;

&lt;p&gt;You can find all the code at my  &lt;a href="https://github.com/nehasoni05/ReactJS_Projects/tree/main/Route-Based-SPA"&gt;GitHub Repository&lt;/a&gt;. Drop a star if you find it useful.&lt;/p&gt;

&lt;p&gt;Thank you for reading, I would ❤ to connect with you at  &lt;a href="https://twitter.com/nehasoni__"&gt;Twitter&lt;/a&gt;  |  &lt;a href="https://www.linkedin.com/in/neha-soni-70a6231b1/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Share your queries in the comments section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://javascript.plainenglish.io/how-to-add-react-router-to-your-react-app-bf764a776122"&gt;https://javascript.plainenglish.io/how-to-add-react-router-to-your-react-app-bf764a776122&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://www.javatpoint.com/react-router"&gt;https://www.javatpoint.com/react-router&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://blog.logrocket.com/react-router-v6/"&gt;https://blog.logrocket.com/react-router-v6/&lt;/a&gt; 
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you in my next Blog article, Take care😃😃 !!&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>reactnative</category>
    </item>
    <item>
      <title>Learn GitHub Quickly with GitHub Learning Lab</title>
      <author>Davide Benvegnù</author>
      <pubDate>Tue, 27 Apr 2021 05:11:23 +0000</pubDate>
      <link>https://dev.to/n3wt0n/learn-github-quickly-with-github-learning-lab-1klc</link>
      <guid>https://dev.to/n3wt0n/learn-github-quickly-with-github-learning-lab-1klc</guid>
      <description>&lt;p&gt;So &lt;strong&gt;you want to learn GitHub&lt;/strong&gt; and you want to learn it quick. Well, I have just the right tool for you.&lt;/p&gt;

&lt;p&gt;It's called &lt;strong&gt;GitHub Learning Lab&lt;/strong&gt;, and it is completely free.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;Today we talk about how you can &lt;strong&gt;learn to use Git and GitHub quickly&lt;/strong&gt; and effectively while having fun, thanks to &lt;a href="https://lab.github.com"&gt;GitHub Learning Lab&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;GitHub Learning Lab is an &lt;strong&gt;online platform&lt;/strong&gt; created by GitHub with the help of the community, where you can &lt;strong&gt;grow your skills by completing fun, realistic projects&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cKQzAhyL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8f2ilyu9jdmk8982bkhu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cKQzAhyL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8f2ilyu9jdmk8982bkhu.png" alt="GitHub Learning Lab Home"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the best part is that it is &lt;strong&gt;completely free&lt;/strong&gt;!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-does-it-work"&gt;
  &lt;/a&gt;
  How Does It Work?
&lt;/h3&gt;

&lt;p&gt;As the website says, there are &lt;strong&gt;no simulations or boring tutorials&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zeaAaFf0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b23hfuaa8imz7lxgp3ws.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zeaAaFf0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b23hfuaa8imz7lxgp3ws.png" alt="Learning"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You learn new skills while &lt;strong&gt;working on your own copy of a real project&lt;/strong&gt;, with the instructions and feedback provided by the GitHub Bot. And the bot does so interacting with you &lt;strong&gt;via the Issues and Pull Requests sections of the project&lt;/strong&gt;. It basically "&lt;em&gt;force you&lt;/em&gt;" to work on the issues, like you would do in a &lt;strong&gt;real project&lt;/strong&gt; hosted on GitHub.&lt;/p&gt;

&lt;p&gt;To learn, you can follow pre-defined &lt;strong&gt;Learning Paths&lt;/strong&gt;, or you can freely choose the course, topic, or even languages you want to learn. Just scroll down on the page, and you will have a selection of many, &lt;strong&gt;many different learning possibilities&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a-6ZOPWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jc2m3v5u52jq2qn8l0ne.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a-6ZOPWN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jc2m3v5u52jq2qn8l0ne.png" alt="Learning Paths"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can even learn &lt;strong&gt;Enterprise-related topics and skills&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;And you can always &lt;strong&gt;search for other topics&lt;/strong&gt;, if want something different from the highlighted ones.&lt;/p&gt;

&lt;p&gt;Because of the great content and the way it works, &lt;strong&gt;GitHub Learning Lab is ideal for both beginners&lt;/strong&gt; who want to learn GitHub from scratch and &lt;strong&gt;users that are already familiar&lt;/strong&gt; with GitHub but want to improve in some specific areas.&lt;/p&gt;

&lt;p&gt;Alright, let's see how this works.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video"&gt;
  &lt;/a&gt;
  Video
&lt;/h3&gt;

&lt;p&gt;To better show how GitHub Learning Lab works, I've created a video with a comprehensive demo, because this is much better shown then told... So you can see by yourself how incredibly easy and effective the whole experience is.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HCHvMngWEbY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/HCHvMngWEbY"&gt;Link to the video: https://youtu.be/HCHvMngWEbY&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The demo starts at &lt;a href="https://youtu.be/HCHvMngWEbY?t=127"&gt;minute 2:07&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#conclusions"&gt;
  &lt;/a&gt;
  Conclusions
&lt;/h3&gt;

&lt;p&gt;So, what do you think of the GitHub Learning Lab? I think it is great that they have &lt;strong&gt;so much content completely for free&lt;/strong&gt;. And the format works perfectly, because you get to &lt;strong&gt;do things rather than just following some tutorial&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yBpwaYpv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jkta9liuux8s7sce6oxb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yBpwaYpv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jkta9liuux8s7sce6oxb.png" alt="Progress"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the fact that the bot "force you" to work through issues like you would do in a real project it's a &lt;strong&gt;big plus&lt;/strong&gt; for me.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comment section below.&lt;/p&gt;

&lt;p&gt;You may also want to check out &lt;a href="https://youtu.be/sGnqVAfnZ6U"&gt;this video here&lt;/a&gt;, in which I show tips and tricks to &lt;strong&gt;&lt;em&gt;use GitHub like a PRO&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Like, share and follow me&lt;/strong&gt; 🚀 for more content:&lt;/p&gt;

&lt;p&gt;📽 &lt;a href="https://www.youtube.com/CoderDave"&gt;YouTube&lt;/a&gt;&lt;br&gt;
☕ &lt;a href="https://buymeacoffee.com/CoderDave"&gt;Buy me a coffee&lt;/a&gt;&lt;br&gt;
💖 &lt;a href="https://patreon.com/CoderDave"&gt;Patreon&lt;/a&gt;&lt;br&gt;
👕 &lt;a href="https://geni.us/cdmerch"&gt;Merch&lt;/a&gt;&lt;br&gt;
👦🏻 &lt;a href="https://www.facebook.com/CoderDaveYT"&gt;Facebook page&lt;/a&gt;&lt;br&gt;
🐱‍💻 &lt;a href="https://github.com/n3wt0n"&gt;GitHub&lt;/a&gt;&lt;br&gt;
👲🏻 &lt;a href="https://www.twitter.com/davide.benvegnu"&gt;Twitter&lt;/a&gt;&lt;br&gt;
👴🏻 &lt;a href="https://www.linkedin.com/in/davidebenvegnu/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
🔉 &lt;a href="https://geni.us/cdpodcast"&gt;Podcast&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HCHvMngWEbY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>github</category>
      <category>learn</category>
      <category>codenewbie</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Free APIs That Nobody Is Talking About</title>
      <author>Technology Stuff</author>
      <pubDate>Tue, 27 Apr 2021 04:46:12 +0000</pubDate>
      <link>https://dev.to/technologystuf2/free-apis-that-nobody-is-talking-about-4no9</link>
      <guid>https://dev.to/technologystuf2/free-apis-that-nobody-is-talking-about-4no9</guid>
      <description>&lt;p&gt;othing excites me more than finding an out of the ordinary API.Many times we just want to focus on the frontend but also Need interesting, dynamic data to display.This is where public APIs come into play. API is an acronym for Application Programming Interface.The core benefit of using it is that it allows one program to interact with other programs.Using public APIs allows you to focus on the frontend and things that matter without worrying so much about the database and the backend.Below are 7 less-talked about public and free APIs.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Evil Insult Generator&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How many times have you tried to insult your best friend? Now you have got a helping hand!&lt;/p&gt;

&lt;p&gt;As the API name suggests, the goal is to offer some of the evilest insults.&lt;/p&gt;

&lt;p&gt;You can create an app centered around this API or combine this API with other excellent APIs provided below like implementing the generated insults in meme templates.&lt;/p&gt;

&lt;p&gt;Read More :: &lt;a href="https://cmsinstallation.blogspot.com/2021/04/7-free-apis-that-nobody-is-talking-about.html"&gt;https://cmsinstallation.blogspot.com/2021/04/7-free-apis-that-nobody-is-talking-about.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>php</category>
      <category>webdev</category>
      <category>design</category>
    </item>
    <item>
      <title>How to Add a Favorite Button with MB Favorite Posts Solution</title>
      <author>WP Meta Box Plugin</author>
      <pubDate>Tue, 27 Apr 2021 03:28:14 +0000</pubDate>
      <link>https://dev.to/wpmetabox/how-to-add-a-favorite-button-with-mb-favorite-posts-solution-jbn</link>
      <guid>https://dev.to/wpmetabox/how-to-add-a-favorite-button-with-mb-favorite-posts-solution-jbn</guid>
      <description>&lt;p&gt;Do you want to add a button for users to save a post to their Favorite lists, and then read it again? MB Favorite Posts solution of Meta Box is surely a useful tool for you to do this simply and quickly.&lt;/p&gt;

&lt;p&gt;MB Favorite Posts is a solution of Meta Box for users having bought &lt;a href="https://metabox.io/pricing/"&gt;lifetime bundles&lt;/a&gt; of Meta Box. This solution provides you with all the needed tools and features to add a Favorite button. Using it, users can choose their favorite posts to save in their own lists. More than that, users can access their lists to read the posts they like one more time. MB Favorite Posts solution can &lt;strong&gt;automatically create a Favorite button&lt;/strong&gt;, and you can &lt;strong&gt;customize it easily&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To get started, let’s see through some impressive benefits of Favorite buttons.&lt;/p&gt;

&lt;h2&gt;Why to Use a Favorite Button?&lt;/h2&gt;

&lt;p&gt;A Favorite button can help you in many cases. Using this button, you can &lt;a href="https://gretathemes.com/optimize-wordpress-website-increase-conversions/" rel="follow"&gt;improve the conversion rate&lt;/a&gt;, sale, interaction, … and especially users’ experience. For example:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;For eCommerce websites: Customers can &lt;strong&gt;save their interested products&lt;/strong&gt;, then come back to search and buy them in the next shopping time.&lt;/li&gt;
    &lt;li&gt;Readers can &lt;strong&gt;save posts / documents / novels / helpful contents&lt;/strong&gt;, then they can get back to the exact position they finished reading the last time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is an eCommerce website using Favorite buttons (the heart-shaped), so that their users can add their preferred products.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kZ3tgf2D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/4jX9UMY.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kZ3tgf2D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/4jX9UMY.gif" alt="an eCommerce website using Favorite buttons"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Install Meta Box Plugin&lt;/h2&gt;

&lt;p&gt;Now I will add a favorite button on my blog sites (on single post pages). Once users read my blogs, they can click this button to save their favorite posts for the next reading time, if they find them helpful.&lt;/p&gt;

&lt;p&gt;As I have said before, I will use MB Favorite Posts solution of Meta Box. This solution is super easy to use, and I can work on it without configuring or coding. Besides, you also can quickly set up many options for the Favorite button on one and only Settings page.&lt;/p&gt;

&lt;p&gt;First, you need to install and activate Meta Box plugin:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5djM4kmy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/bBo6YV3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5djM4kmy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/bBo6YV3.png" alt="install and activate Meta Box plugin"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, go to your &lt;a href="https://metabox.io/my-account/"&gt;My Account&lt;/a&gt; on &lt;a href="https://metabox.io/"&gt;metabox.io&lt;/a&gt;, then download MB Favorite Posts solution. Upload the .zip file you have just downloaded to the website like you usually do to &lt;a href="https://gretathemes.com/install-wordpress-plugin/" rel="follow"&gt;install plugins&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jCalsxo9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/d3XL2S0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jCalsxo9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/d3XL2S0.png" alt="Upload the .zip file of MB Favorite Posts solution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After activating the solution, a favorite button will automatically appear on the posts of your website. You can randomly go to a post to check it out, and the favorite button will come to you like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H4ROEH04--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/8aCZVvb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H4ROEH04--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/8aCZVvb.png" alt="a favorite button shows up on the posts of your WordPress website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In default, this button is named as &lt;strong&gt;Add to Favorites&lt;/strong&gt;, and shown at the end of the content section. Of course, you can change its name, display position, and ask users to log in before using this button. Especially, you can add a page for users to sign up for a new account or see the list of their favorite posts&lt;/p&gt;

&lt;h2&gt;Set Up the Favorite Button&lt;/h2&gt;

&lt;p&gt;To set up the Favorite button, go to &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Favorite Posts&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;Rename&lt;/h3&gt;

&lt;p&gt;On this settings page, you just have to type the name of the button in the &lt;strong&gt;Button text&lt;/strong&gt; and &lt;strong&gt;Button Added Text&lt;/strong&gt; section, like in the image below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PW17yjdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/IHIgH4U.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PW17yjdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/IHIgH4U.png" alt="type the name of the Favorite button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Relocate the Favorite Button&lt;/h3&gt;

&lt;p&gt;You can freely choose where to display the favorite button as you want.&lt;/p&gt;

&lt;p&gt;To choose its location on a single post page, you just have to choose 1 of these 3 options in the &lt;strong&gt;Position&lt;/strong&gt; section on the setting page like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OPxxnLls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/YjoiyX9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OPxxnLls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/YjoiyX9.png" alt="choose where to display the button"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you want to display the Favorite button in the post of a certain post type, tick to choose that post type in the &lt;strong&gt;Post Types&lt;/strong&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2JLjetjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/zVJjzkB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2JLjetjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/zVJjzkB.png" alt="display the Favorite button in the post of a certain post type on the WordPress website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To show the favorite button at other positions on single post pages or a random page, you can use this shortcode: &lt;code&gt;[mbfp-button]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example, I have added my favorite button to the sidebar of the WordPress website by going to &lt;strong&gt;Appearance&lt;/strong&gt; &amp;gt; &lt;strong&gt;Widgets&lt;/strong&gt;, adding a &lt;strong&gt;Text&lt;/strong&gt; widget to the &lt;strong&gt;Sidebar&lt;/strong&gt; then paste the shortcode there:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cS9X90mr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/r7jSbkE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cS9X90mr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/r7jSbkE.png" alt="Use shortcode to add a favorite button to the sidebar of the WordPress website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here is the result:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u8f_kYqD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/iRJnEjB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u8f_kYqD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/iRJnEjB.png" alt="the like button shows up on the sidebar of the WordPress website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Ask Users to Log in to Use the Favorite Post Feature&lt;/h3&gt;

&lt;p&gt;After installing, the &lt;strong&gt;Enable for non-logged in users&lt;/strong&gt; feature will be enabled by default.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mCqvPqY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/1Sy8fbx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mCqvPqY---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/1Sy8fbx.png" alt="allow non-logged in users to use the Favorite Posts feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if users do not log in, their favorite post list will be &lt;strong&gt;temporarily saved in the cookie of the browser&lt;/strong&gt;, and will be lost when the cookie is deleted. After a period of time, or when users have deleted cookies, they cannot find out their favorite posts anymore.&lt;/p&gt;

&lt;p&gt;To avoid these annoying cases, you had better allow users to create an account and save their favorite post list in their account.&lt;/p&gt;

&lt;p&gt;First, untick the &lt;strong&gt;Enable for non-logged in users&lt;/strong&gt; option and then go to the &lt;strong&gt;Register Page&lt;/strong&gt; section:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V4Oiu6kM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/tK61j2o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V4Oiu6kM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/tK61j2o.png" alt="Ask Users to Log in to Use the Favorite Post Feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have had a register page already and want to use it, just leave the &lt;strong&gt;Register Page&lt;/strong&gt; box blank. Then anyone logging in to their accounts with any roles can use the favorite button.&lt;/p&gt;

&lt;p&gt;If you’ve had a register page, you can create a blank page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--asoSbuHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/CfUeg5y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--asoSbuHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/CfUeg5y.png" alt="create a blank page on the WordPress website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that, in the &lt;strong&gt;Register Page&lt;/strong&gt; section, you will see the page you have just created in the dropdown list like in the image below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2rS_MhBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/OdePr11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2rS_MhBG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/OdePr11.png" alt="create a Register page on the WordPress website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You just have to choose the page you have created and click &lt;strong&gt;Save Settings&lt;/strong&gt;. MB Favorite Post will automatically add fields to this register page with a form like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CnUzT5m6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/xaG7xnE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CnUzT5m6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/xaG7xnE.png" alt="MB Favorite Post automatically add fields to the register page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use CSS to make this form more stunning.&lt;/p&gt;

&lt;p&gt;When users sign up for a new account on this page, their User Role is &lt;strong&gt;Subscriber&lt;/strong&gt; by default.&lt;/p&gt;

&lt;h3&gt;Set Up Dashboard Page&lt;/h3&gt;

&lt;p&gt;Dashboard Page is a page where users review their list of favorite posts. You can choose a random page to turn into Dashboard Page. When users choose a post as favorite, it will be shown on this Dashboard Page.&lt;/p&gt;

&lt;p&gt;Here I create a page as &lt;strong&gt;Favorite Posts&lt;/strong&gt; and choose it in the &lt;strong&gt;Dashboard Page&lt;/strong&gt; section in the settings page of MB Favorite Posts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pjyZcjWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/eR1DdFL.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pjyZcjWK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/eR1DdFL.png" alt="Create a dashboard page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Even when you choose to allow non-logged in users to use this feature, you still have to choose the Dashboard page as a certain page, so that users have a place to see their favorite post list.&lt;/p&gt;

&lt;p&gt;Finally, you need to display your &lt;strong&gt;Favorite Posts&lt;/strong&gt; page on your website to help users access it easily. I will set it on my menu as an example.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--25LtXqwY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ED6Bi4u.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--25LtXqwY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ED6Bi4u.png" alt="display your Favorite Posts page on the WordPress website"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When going to the &lt;strong&gt;Favorite Posts&lt;/strong&gt; page, you will see a list of favorite posts display like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V7T26m13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/05xS8q7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V7T26m13--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/05xS8q7.png" alt="a list of liked posts on the dashboard page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Tutorial Video&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://youtu.be/fSFmNp-Ayew"&gt;https://youtu.be/fSFmNp-Ayew&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Last Words&lt;/h2&gt;

&lt;p&gt;As you can see, MB Favorite Posts solution of Meta Box can provide you with enough tools to add the Favorite Post feature to your websites. It even can create a register page for you. Everything becomes so effortless with this solution, isn’t it?&lt;/p&gt;

&lt;p&gt;Beside MB Favorite Posts, Meta Box team also develops other solutions like &lt;a href="https://metabox.io/plugins/mb-testimonials/"&gt;MB Testimonials&lt;/a&gt; and &lt;a href="https://metabox.io/plugins/mb-user-avatar/"&gt;MB User Avatar&lt;/a&gt; with the same way of using. All of these solutions are made to support website developers to add more interesting and helpful features within a few clicks. You can read how to use these tools &lt;a href="https://metabox.io/product-category/solutions/"&gt;here&lt;/a&gt;. However, keep in mind that they are for users having the Lifetime bundle of Meta Box only.&lt;/p&gt;

&lt;p&gt;Good luck with your websites!&lt;/p&gt;

</description>
      <category>wordpress</category>
    </item>
    <item>
      <title>The Interactive and Productive Terminal [pt3]</title>
      <author>Murillo Pereira de Carvalho</author>
      <pubDate>Tue, 27 Apr 2021 02:35:54 +0000</pubDate>
      <link>https://dev.to/murillopereirac/the-interactive-and-productive-terminal-pt3-aha</link>
      <guid>https://dev.to/murillopereirac/the-interactive-and-productive-terminal-pt3-aha</guid>
      <description>&lt;p&gt;In this last article in which I promised to do on the theme The Power of Production Linux , we arrived at part 3 (final). But to end with great style, I come with a very interesting subject: The Fish Shell, The Interactive and Productive Terminal linux.&lt;/p&gt;

&lt;p&gt;Besides being very productive, the Fish Shell is implemented with bash and zhs, intelligent and very easy to use. So if you want to make your command line more productive, more useful and more fun, without the need to learn various mysterious syntax and configuration options. Fish is the ideal tool.&lt;/p&gt;

&lt;p&gt;About More: &lt;a href="https://bit.ly/2QBNGuf"&gt;https://bit.ly/2QBNGuf&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>shell</category>
    </item>
    <item>
      <title>Toradex: Linux embarcado</title>
      <author>Murillo Pereira de Carvalho</author>
      <pubDate>Tue, 27 Apr 2021 02:32:31 +0000</pubDate>
      <link>https://dev.to/murillopereirac/toradex-linux-embarcado-28d</link>
      <guid>https://dev.to/murillopereirac/toradex-linux-embarcado-28d</guid>
      <description>&lt;p&gt;Toradex é uma empresa Suíça que projeta e desenvolve Computadores em Módulos (COM) ou Sistemas em Módulo (SOM) juntamente com placas base e acessórios compatíveis para o mercado de sistemas embarcados.&lt;/p&gt;

&lt;p&gt;Para saber mais: &lt;a href="https://bit.ly/3eNXTfl"&gt;https://bit.ly/3eNXTfl&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>toradex</category>
    </item>
    <item>
      <title>PHP 7.4 install Ubuntu e derivados</title>
      <author>Murillo Pereira de Carvalho</author>
      <pubDate>Tue, 27 Apr 2021 02:30:45 +0000</pubDate>
      <link>https://dev.to/murillopereirac/php-7-4-install-ubuntu-e-derivados-92f</link>
      <guid>https://dev.to/murillopereirac/php-7-4-install-ubuntu-e-derivados-92f</guid>
      <description>&lt;p&gt;The latest version of PHP on your Linux Ubuntu desktop, through the simple command line you can upload a local server to build your web application;&lt;/p&gt;

&lt;p&gt;About More: &lt;a href="https://bit.ly/3xC1mGm"&gt;https://bit.ly/3xC1mGm&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>server</category>
      <category>php</category>
      <category>ubuntu</category>
    </item>
    <item>
      <title>Linux SCP for file transfer</title>
      <author>Murillo Pereira de Carvalho</author>
      <pubDate>Tue, 27 Apr 2021 02:26:43 +0000</pubDate>
      <link>https://dev.to/murillopereirac/linux-scp-for-file-transfer-36gb</link>
      <guid>https://dev.to/murillopereirac/linux-scp-for-file-transfer-36gb</guid>
      <description>&lt;p&gt;SCP Linux was developed based on Berkeley Software Distribution (BSD) Remote Copy Protocol,  SCP  ( Secure Copy ) is a network protocol that was created for file transfers using command lines. In addition to being one of the safest alternatives for you to upload or download files from remote or local machines.&lt;/p&gt;

&lt;p&gt;About More: &lt;a href="https://bit.ly/3ewjgl7"&gt;https://bit.ly/3ewjgl7&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>scp</category>
      <category>file</category>
    </item>
    <item>
      <title>Introducing Truffle Solidity Data Seeder</title>
      <author>Zak R.</author>
      <pubDate>Tue, 27 Apr 2021 02:17:12 +0000</pubDate>
      <link>https://dev.to/zakpie/introducing-truffle-solidity-data-seeder-peg</link>
      <guid>https://dev.to/zakpie/introducing-truffle-solidity-data-seeder-peg</guid>
      <description>&lt;p&gt;The Truffle framework is an awesome toolkit for every solidity and dapp developer, we at &lt;a href="https://libertypie.com"&gt;LibertyPie&lt;/a&gt; make advanced use of the truffle framework.&lt;br&gt;&lt;br&gt;
During &lt;a href="https://github.com/LibertyPie/libertypie-p2p"&gt;LibertyPie's P2P&lt;/a&gt; protocol development, we needed a simple way to seed initial data to different contracts similar to database seeding. &lt;br&gt;&lt;br&gt;
Truffle has great migration support but no seeding of data out of the box.&lt;br&gt;&lt;br&gt;
So we decided to build a simple CLI tool as an npm package for seeding initial data out of the box with 0 configurations.   &lt;br&gt;&lt;/p&gt;

&lt;p&gt;Introducing &lt;a href="https://github.com/LibertyPie/truffle-seeder"&gt;Liberty Pie's Truffle Seeder&lt;/a&gt;, your easy way to seed initial data to any smart contract. Kindly help us improve it by giving us your feedback&lt;/p&gt;

&lt;p&gt;Project: &lt;a href="https://github.com/LibertyPie/truffle-seeder"&gt;https://github.com/LibertyPie/truffle-seeder&lt;/a&gt;&lt;/p&gt;

</description>
      <category>etheruem</category>
      <category>javascript</category>
      <category>blockchain</category>
      <category>truffleframework</category>
    </item>
    <item>
      <title>How to make an escape game using swiftUI part 3</title>
      <author>akira.</author>
      <pubDate>Tue, 27 Apr 2021 02:02:54 +0000</pubDate>
      <link>https://dev.to/akira1234/how-to-make-an-escape-game-using-swiftui-part-3-3eim</link>
      <guid>https://dev.to/akira1234/how-to-make-an-escape-game-using-swiftui-part-3-3eim</guid>
      <description>&lt;h2&gt;
  &lt;a href="#about-zoom-in"&gt;
  &lt;/a&gt;
  About zoom In
&lt;/h2&gt;

&lt;p&gt;The next problem is the zoomIn zoomOut technique. This is a method where you can click on a location on the screen and the screen will zoom in on that location to get more information about the room. For example, you can look under a desk to see if a key has fallen out, look up something on a computer screen, or talk to a person.&lt;br&gt;
It may seem like a simple function, but it is very important. And although it seems simple, it is a bit tricky to implement correctly. This is in reference to the method of placing items. Place an invisible button and call this button the void button. When you press this button, the screen will switch to a different dimension from the east, west, north, south, and south as before. So after zooming in, we need to disable the left and right window buttons once they were always visible.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y_ZMqI8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/876v4cowcbykrt4xt25v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y_ZMqI8e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/876v4cowcbykrt4xt25v.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The canvasUI is the file that draws the blueprint for the game's screen transitions. It is the trunk that binds a number of windows together. The flag used to disable the window buttons is the zoomChainIndex. As I will explain in detail later, we will create a separate Index model for each of these flags, and write a large number of if statements for each flag value in the center of the canvasUI.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kt"&gt;CanvasUI&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;swift&lt;/span&gt;

&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;SwiftUI&lt;/span&gt;

&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="kt"&gt;CanvasUI&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;@ObservedObject&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;itemData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ItemObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;
    &lt;span class="kd"&gt;@ObservedObject&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;cycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;CycleChain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;
    &lt;span class="kd"&gt;@ObservedObject&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;scriptData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;
    &lt;span class="kd"&gt;@ObservedObject&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;windowObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;WindowObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;
    &lt;span class="kd"&gt;@ObservedObject&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;selectTabView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;WindowSelect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;some&lt;/span&gt; &lt;span class="kt"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;ZStack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// move to window to window&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;windowChainIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// ZoomIn and ZoomOut&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zoomChainIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="kt"&gt;WindowButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;WWindow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;AnyView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;W_Window&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="kt"&gt;NWindow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;AnyView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;N_Window&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="kt"&gt;EWindow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="kt"&gt;AnyView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;E_Window&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="kt"&gt;SWindow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;AnyView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;S_Window&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// disable WindowButton&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zoomChainIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;windowObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isZoom&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="kt"&gt;N_Zoom_Window&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;windowObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isZoom&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="kt"&gt;E_Zoom_Window&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="c1"&gt;// Second Floor&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;windowChainIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="c1"&gt;// to one way move&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;windowChainIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// scene&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="kt"&gt;VStack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;Spacer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="kt"&gt;ItemDock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's a bit noisy, but it can't be helped. Also, there is a bug that when you come back from the default zoomOut, you can only return from a certain direction, northward, no matter which direction you came back from, but again, I don't care. If you care about that, you won't be able to play the game for any length of time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-subtitles"&gt;
  &lt;/a&gt;
  About subtitles
&lt;/h2&gt;

&lt;p&gt;We are slowly finishing up. Since we want to add a textual way of expression in addition to the image-based way, we decided to reserve a place for subtitles to be displayed. So, we will create a script dock above the item dock where the subtitles will be displayed. Eventually, we want to be able to create a text game here. By the way, let's take a look at the bottom half of the screen in the Tools tab. You will notice that the item dock is not exactly glued to the script dock. That's a small detail.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;SwiftUI&lt;/span&gt;

&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="kt"&gt;CanvasUI&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;@ObservedObject&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;itemData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ItemObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;
    &lt;span class="kd"&gt;@ObservedObject&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;cycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;CycleChain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;
    &lt;span class="kd"&gt;@ObservedObject&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;scriptData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;
    &lt;span class="kd"&gt;@ObservedObject&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;windowObject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;WindowObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;
    &lt;span class="kd"&gt;@ObservedObject&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;selectTabView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;WindowSelect&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;some&lt;/span&gt; &lt;span class="kt"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;ZStack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// move to window to window&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;windowChainIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// ZoomIn and ZoomOut&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zoomChainIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="kt"&gt;WindowButton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;WWindow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;AnyView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;W_Window&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="kt"&gt;NWindow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;AnyView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;N_Window&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="kt"&gt;EWindow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="kt"&gt;AnyView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;E_Window&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt; &lt;span class="kt"&gt;SWindow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;AnyView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;S_Window&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="c1"&gt;// disable WindowButton&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zoomChainIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;windowObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isZoom&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="kt"&gt;N_Zoom_Window&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;windowObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;window1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isZoom&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="kt"&gt;E_Zoom_Window&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="c1"&gt;// Second Floor&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;windowChainIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="c1"&gt;// to one way move&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cycle&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;windowChainIndex&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// scene&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="c1"&gt;// add to spacing&lt;/span&gt;
            &lt;span class="kt"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="kt"&gt;Spacer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="kt"&gt;ItemDock&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is due to Apple's default settings. It is to prevent people from creating flat design apps so that they won't mistake it for windows phone. If you want to make this snug and close, you can write the following. Now it is stored properly. It will be at the level that people who care about it will care about it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;Foundation&lt;/span&gt;


&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Identifiable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;String&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Bool&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;ScriptObject&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;ObservableObject&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;shared&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptObject&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(){}&lt;/span&gt;

    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 0 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 1 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 2 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script3&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 3 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 4 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script5&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 5 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script6&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 6 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script7&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 7 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script8&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 8 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script9&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 9 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script10&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 10 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script11&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 11 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script12&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 12 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script13&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"This is my 13 script."&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;isAppear&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;
&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;SwiftUI&lt;/span&gt;



&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="kt"&gt;ScriptDock&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;@State&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;
    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;some&lt;/span&gt; &lt;span class="kt"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;ZStack&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;Rectangle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Color&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;minWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;maxWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;infinity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;minHeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;maxHeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="kt"&gt;ScriptText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;script&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="c1"&gt;// This view is for script book&lt;/span&gt;
&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="kt"&gt;ScriptText&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;@State&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;flg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="kd"&gt;@Binding&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;script&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;ScriptModel&lt;/span&gt;
    &lt;span class="kd"&gt;@ObservedObject&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;cycle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;CycleChain&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;

    &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;some&lt;/span&gt; &lt;span class="kt"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flg&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kt"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;script&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onTapGesture&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;//                    cycle.scriptChainIndex = script.id&lt;/span&gt;
                    &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;toggle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;




&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Subtitles are also modeled and managed separately. This is because subtitles often need to be modified or reordered afterwards. If you've ever created subtitles for a video, you'll understand this well. In the nature of subtitles, you will notice that there is a pattern to how this appears. As shown in the figure below, a script appears in the script dock right after an event, and it can serve as a description of the situation, a line from a character, or a heavenly voice (hint) to reduce the difficulty of the game. Each script should be tied to a script index number for each event, and either disappear after a certain amount of time or can be removed by tapping the script itself. There are two types of scripts: those that work by themselves and those that display multiple scripts in succession. In the case of multiple scripts, you can link the index number to the script number and have it increment by itself. In this case, it is essential to set the default number, i.e. 0, when the long script is finished.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--34aE45zJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2d1qxnswr95l3qgmxuu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--34aE45zJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2d1qxnswr95l3qgmxuu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-chainindex"&gt;
  &lt;/a&gt;
  About chainIndex
&lt;/h2&gt;

&lt;p&gt;The same floor with only four views (east, west, north, south, and west) seemed boring to me. So, let's make it so that the user can go up to the upper floor if certain conditions are met. In this case, we need to create a new index that we used for zooming. There are two main types of indexes: multiple and one-way. The first is the window index. This is the index that connects the floor to the floor above. It looks like the figure below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AUFv-Kvl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccck9yc1dndu3oz2nggu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AUFv-Kvl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ccck9yc1dndu3oz2nggu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a multiple. Naturally, you can go back and forth between floors, or you can make it one-way. It can also be used as a time trip. The zoomChianIndex we mentioned earlier is also a multiple, because it goes back and forth between In and Out.&lt;/p&gt;

&lt;p&gt;Only the last one is one-way. It is the key index.&lt;br&gt;
What is the purpose of getting an item in the first place? It is to solve the mystery in front of you. Look at the diagram below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6HHE7rvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjq251uafizjkfe072pp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6HHE7rvC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjq251uafizjkfe072pp.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is an illustration of how to use Key1 to open a safe, which contains a new key, Key2, to open another safe. It is assumed that the key used cannot be used to open any more safes. Once you have solved the problem, it will make it impossible to go back on the stage. If you don't do this, there may be glitches that the game creator didn't anticipate. This is the most important method throughout the game to guide the player through the story. Although it is important, it is merely an Int-type variable that is allowed to be incremented only.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight swift"&gt;&lt;code&gt;
&lt;span class="kd"&gt;import&lt;/span&gt; &lt;span class="kt"&gt;Foundation&lt;/span&gt;


&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="kt"&gt;CycleChain&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;ObservableObject&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="k"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;shared&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;CycleChain&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nf"&gt;init&lt;/span&gt;&lt;span class="p"&gt;(){}&lt;/span&gt;

    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;windowChainIndex&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;zoomChainIndex&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;animeChainIndex&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="c1"&gt;// One Way&lt;/span&gt;

    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;keyChainIndex&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="kd"&gt;@Published&lt;/span&gt; &lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;scriptChainIndex&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;Int&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>swift</category>
      <category>swiftui</category>
      <category>ios</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>How to make your vscode become a seamless markdown writer like typora</title>
      <author>Zack Young</author>
      <pubDate>Tue, 27 Apr 2021 01:55:15 +0000</pubDate>
      <link>https://dev.to/zaaack/how-to-make-your-vscode-become-a-seamless-markdown-writer-like-typora-412h</link>
      <guid>https://dev.to/zaaack/how-to-make-your-vscode-become-a-seamless-markdown-writer-like-typora-412h</guid>
      <description>&lt;p&gt;Writing markdown is a daily work for most programers. Switch between your favorate code editor or IDE and a nice markdown editor like typora, marktext, iA Writer, Ulysses or obsidian.md could be annoying. That's why I make this extension.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jlfdDZZ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2to6q8w6p5clkucfykhy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jlfdDZZ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2to6q8w6p5clkucfykhy.gif" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What You See Is What You Get (WYSIWYG)&lt;/li&gt;
&lt;li&gt;Auto sync changes between vsc editor and webview&lt;/li&gt;
&lt;li&gt;Copy markdown/html&lt;/li&gt;
&lt;li&gt;Upload/paste/drag-drop images will auto save to &lt;code&gt;assets&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;Multi-theme support&lt;/li&gt;
&lt;li&gt;Shortcut keys&lt;/li&gt;
&lt;li&gt;Instant Rendering mode(&lt;strong&gt;Recommand!&lt;/strong&gt;) &amp;amp; Wysiwyg mode &amp;amp; split screen mode&lt;/li&gt;
&lt;li&gt;Markdown extensions&lt;/li&gt;
&lt;li&gt;Multiple graph support including KaTeX / Mermaid / Graphviz / ECharts / abc.js(notation) / ...&lt;/li&gt;
&lt;li&gt;For more usage please see &lt;a href="https://github.com/Vanessa219/vditor"&gt;vditor&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#install"&gt;
  &lt;/a&gt;
  Install
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=zaaack.markdown-editor"&gt;https://marketplace.visualstudio.com/items?itemName=zaaack.markdown-editor&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#support-syntax"&gt;
  &lt;/a&gt;
  Support syntax
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://ld246.com/guide/markdown"&gt;demo article&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-command-mode-in-markdown-file"&gt;
  &lt;/a&gt;
  1. Command mode in markdown file
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;open a markdown file&lt;/li&gt;
&lt;li&gt;type &lt;code&gt;cmd-shift-p&lt;/code&gt; to enter command mode&lt;/li&gt;
&lt;li&gt;type &lt;code&gt;markdown-editor: Open with markdown editor&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#2-explorer-context-menu"&gt;
  &lt;/a&gt;
  2. Explorer Context menu
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;right click on markdown file&lt;/li&gt;
&lt;li&gt;then click &lt;code&gt;Open with markdown editor&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#3-editor-title-context-menu"&gt;
  &lt;/a&gt;
  3. Editor title context menu
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;right click on a opened markdown file's tab title&lt;/li&gt;
&lt;li&gt;then click &lt;code&gt;Open with markdown editor&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#acknowledgement"&gt;
  &lt;/a&gt;
  Acknowledgement
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/vscode"&gt;vscode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Vanessa219/vditor"&gt;vditor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#todo"&gt;
  &lt;/a&gt;
  Todo
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;[ ] Using &lt;a href="https://code.visualstudio.com/api/extension-guides/custom-editors#custom-text-editor"&gt;Custom Text Editor&lt;/a&gt; (&lt;a href="https://github.com/gera2ld/markmap-vscode"&gt;demo&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#license"&gt;
  &lt;/a&gt;
  License
&lt;/h2&gt;

&lt;p&gt;MIT&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>markdown</category>
      <category>typora</category>
      <category>wysiwyg</category>
    </item>
  </channel>
</rss>
