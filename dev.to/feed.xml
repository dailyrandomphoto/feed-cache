<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Pourquoi les d√©veloppeurs Web utilisent encore Ruby on Rails ?</title>
      <author> Eric Le Codeur</author>
      <pubDate>Wed, 23 Jun 2021 11:18:06 +0000</pubDate>
      <link>https://dev.to/ericlecodeur/pourquoi-les-developpeurs-web-utilisent-encore-ruby-on-rails-2g4b</link>
      <guid>https://dev.to/ericlecodeur/pourquoi-les-developpeurs-web-utilisent-encore-ruby-on-rails-2g4b</guid>
      <description>&lt;p&gt;Si vous d√©sirez plus de contenu francophone comme celui-ci, cliquer &lt;strong&gt;Follow ou &lt;a href="https://twitter.com/EricLeCodeur"&gt;suivez-moi sur Twitter&lt;/a&gt;&lt;br&gt;

&lt;br&gt;
De nombreux nouveaux d√©veloppeurs Web n'ont absolument aucune id√©e de ce qu'est Ruby on Rails.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;J'encourage ces personnes √† faire leurs recherches et √† en apprendre davantage sur ce magnifique framework.&lt;/p&gt;

&lt;p&gt;Ruby est un langage de programmation et Rails est un framework pour cr√©er des applications Web.&lt;/p&gt;

&lt;p&gt;D'autres frameworks web comme Laravel, Django, Adonis utilisent de nombreux concepts utilis√©s par Rails.&lt;/p&gt;

&lt;p&gt;Rails est en quelque sorte le p√®re de ces frameworks modernes. Rails a inspir√© et continu de d'inspirer de nombreux concepts de d√©veloppement Web modernes.&lt;/p&gt;

&lt;p&gt;Avec Rails, vous pouvez cr√©er une application Web fullstack. Vous pouvez aussi cr√©er une application Web frontend (style SPA comme React et Vue) en utilisant uniquement du code html/css et ruby.&lt;/p&gt;

&lt;p&gt;Oui rails est vieux mais Rails n'est pas rest√© ce qu'il √©tait lors de son introduction. Rails a √©volu√© au cours des ann√©es pour ajouter tous les goodies modernes. Rails est pr√©sentement √† la version 6 et la version 7 approche √† grands pas.&lt;/p&gt;

&lt;p&gt;Alors pourquoi l'utiliser ? Pourquoi ne pas utiliser une application Node.js/Express ou tout autre framework backend plus populaire ?&lt;/p&gt;

&lt;p&gt;Je suppose que les raisons peuvent √™tre diff√©rentes pour chaque d√©veloppeurs Rails, mais pour ma part je choisis Rails lorsque j'ai besoin de vitesse et d'efficacit√© de d√©veloppement ! Aucun autre framework ne peut cr√©er une application Web plus rapidement que Rails.&lt;/p&gt;

&lt;p&gt;Pour cette raison sp√©cifique, Rails est utilis√© par de nombreuses startups.&lt;/p&gt;

&lt;p&gt;Ruby on Rails est √©galement utilis√© par des soci√©t√©s g√©antes comme Shopify, GitHub, Air B&amp;amp;B et bien d'autres.&lt;/p&gt;

&lt;p&gt;J'aime aussi beaucoup le langage Ruby. Faites-vous plaisir et d√©couvrez vous aussi ce langage merveilleux. &lt;/p&gt;

&lt;p&gt;Rails est il les meilleurs pour tous les projets ? Bien s√ªr que non, mais avec le bon type de projet, c'est toujours le num√©ro 1 m√™me apr√®s toutes ces ann√©es.&lt;/p&gt;

&lt;p&gt;Enfin, si vous √™tes un d√©veloppeur Ruby on Rails, veuillez laisser dans la section des commentaires pourquoi pour vous Rails est toujours l'un de vos frameworks pr√©f√©r√©s ?&lt;/p&gt;

</description>
      <category>french</category>
      <category>rails</category>
      <category>ruby</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to Master Python Fast and Easy: A Complete Simple tutorial Based on the Official Documentation of Python</title>
      <author>Amin M. Boulouma</author>
      <pubDate>Wed, 23 Jun 2021 11:06:47 +0000</pubDate>
      <link>https://dev.to/amboulouma/how-to-master-python-fast-and-easy-a-complete-simple-tutorial-based-on-the-official-documentation-of-python-1dej</link>
      <guid>https://dev.to/amboulouma/how-to-master-python-fast-and-easy-a-complete-simple-tutorial-based-on-the-official-documentation-of-python-1dej</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t3wcmbHL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/allhtaccess.info/wp-content/uploads/2018/03/programming.gif%3Ffit%3D1281%252C716%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t3wcmbHL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i2.wp.com/allhtaccess.info/wp-content/uploads/2018/03/programming.gif%3Ffit%3D1281%252C716%26ssl%3D1" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Hey, guys! Here is the Complete Simple tutorial Based on the Official Documentation of Python: &lt;a href="https://youtu.be/ne4Xsoe5Br8"&gt;https://youtu.be/ne4Xsoe5Br8&lt;/a&gt; that already helped a lot of people! These 15 episodes are very helpful if you just start coding or want to improve your skills. The information is well combined, the source code is provided for each video, a lot of practical tips and btw, the whole course takes just 5 hours to complete!&lt;br&gt;
I hope this course will be very useful for you and you will learn a lot!&lt;/p&gt;

&lt;p&gt;To give you an overview, here is the table of content of the crash course:&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è  Introduce you the Python Official Documentation: &lt;a href="https://www.youtube.com/watch?v=vQqisFjAnsE"&gt;https://www.youtube.com/watch?v=vQqisFjAnsE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è  Get started with Numbers, Strings and Lists in Python: &lt;a href="https://www.youtube.com/watch?v=NmzIyE4wBGs&amp;amp;t=4s"&gt;https://www.youtube.com/watch?v=NmzIyE4wBGs&amp;amp;t=4s&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;üñ•Ô∏è  What are if, for and loop statements: &lt;a href="https://www.youtube.com/watch?v=4-2x_zhwvSM&amp;amp;t=3s"&gt;https://www.youtube.com/watch?v=4-2x_zhwvSM&amp;amp;t=3s&lt;/a&gt; and everything about Functions in Python: &lt;a href="https://www.youtube.com/watch?v=A-JLsh38ODs&amp;amp;t=35s"&gt;https://www.youtube.com/watch?v=A-JLsh38ODs&amp;amp;t=35s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è  Very simple about Data Structures in Python: &lt;a href="https://www.youtube.com/watch?v=6TJERSlqQIk&amp;amp;t=8s"&gt;https://www.youtube.com/watch?v=6TJERSlqQIk&amp;amp;t=8s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è  Easy explanation of Python Modules and its usage: &lt;a href="https://www.youtube.com/watch?v=9dukuNA2wAk&amp;amp;t=19s"&gt;https://www.youtube.com/watch?v=9dukuNA2wAk&amp;amp;t=19s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è  Only good stuff about Input, Output, Files and JSON in Python: &lt;a href="https://www.youtube.com/watch?v=UpIYUJgcZMU&amp;amp;t=39s"&gt;https://www.youtube.com/watch?v=UpIYUJgcZMU&amp;amp;t=39s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è  Very helpful information about Errors and Exceptions in Python: &lt;a href="https://www.youtube.com/watch?v=_zJzpZepIUE"&gt;https://www.youtube.com/watch?v=_zJzpZepIUE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è  What‚Äôs the point of OOP, Classes, Scopes, Iterators and Generators in Python: &lt;a href="https://www.youtube.com/watch?v=tlKBlwj375c&amp;amp;t=2s"&gt;https://www.youtube.com/watch?v=tlKBlwj375c&amp;amp;t=2s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è  You have just 13 minutes about Internet, Math, OS and Regex Modules in Python: &lt;a href="https://www.youtube.com/watch?v=E-jVDSRkuws&amp;amp;t=5s"&gt;https://www.youtube.com/watch?v=E-jVDSRkuws&amp;amp;t=5s&lt;/a&gt; and only 6 to find out what is Performance, Dates and Compression Modules in Python: &lt;a href="https://www.youtube.com/watch?v=MYGY0Siw_Zo&amp;amp;t=11s"&gt;https://www.youtube.com/watch?v=MYGY0Siw_Zo&amp;amp;t=11s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è How to make Tests, Templating, Multi-threading and Logging Modules in Python: &lt;a href="https://www.youtube.com/watch?v=R0LqfY1m1NU&amp;amp;t=6s"&gt;https://www.youtube.com/watch?v=R0LqfY1m1NU&amp;amp;t=6s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è We will code More on Lists, Heaps and Decimal Precision in Python: &lt;a href="https://www.youtube.com/watch?v=BUUvaOUaK2o&amp;amp;t=3s"&gt;https://www.youtube.com/watch?v=BUUvaOUaK2o&amp;amp;t=3s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è It‚Äôs time for you to know about Virtual Environments and Packages in Python: &lt;a href="https://www.youtube.com/watch?v=yQ0A-v8ysJE&amp;amp;t=8s"&gt;https://www.youtube.com/watch?v=yQ0A-v8ysJE&amp;amp;t=8s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;üñ•Ô∏è Finally, let‚Äôs summarize what we have learned in Python Official Documentation Overview  and get the easy access to the main recourses, codes and information: &lt;a href="https://www.youtube.com/watch?v=xJSWOKGfsqk&amp;amp;t=11s"&gt;https://www.youtube.com/watch?v=xJSWOKGfsqk&amp;amp;t=11s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Handy links: &lt;br&gt;
‚á® ‚á® ‚á® Here is the link on Python Full Course - Complete Tutorial based on the Python Official Documentation  (5 hours long video): &lt;a href="https://www.youtube.com/watch?v=ne4Xsoe5Br8&amp;amp;t=1s"&gt;https://www.youtube.com/watch?v=ne4Xsoe5Br8&amp;amp;t=1s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚úÖ And not to mix up the information and study the episodes in its order, here is the link on the playlist for you: Python Ultimate Tutorial [Official Documentation]: &lt;a href="https://www.youtube.com/watch?v=vQqisFjAnsE&amp;amp;list=PLpMTHmi814W0nSToTOC0Q18kREOjcJspW"&gt;https://www.youtube.com/watch?v=vQqisFjAnsE&amp;amp;list=PLpMTHmi814W0nSToTOC0Q18kREOjcJspW&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Top 5 Git Tips &amp; Tricks</title>
      <author>Agnieszka Stec</author>
      <pubDate>Wed, 23 Jun 2021 10:19:41 +0000</pubDate>
      <link>https://dev.to/gitlive/top-5-git-tips-tricks-8na</link>
      <guid>https://dev.to/gitlive/top-5-git-tips-tricks-8na</guid>
      <description>&lt;p&gt;Becoming a Git power-user is on the bucket list of every developer. Today we prepared 5 Git tips that will help you level up your workflow and bring you one step closer to Git mastery.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip1"&gt; Tip #1 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Modify previous commit without changing the commit message &lt;/h2&gt;
 

&lt;p&gt;You‚Äôve just committed your changes on your local copy with a detailed and thought-through message, but the moment you hit RETURN you realised you forgot to add that one change that really belongs there. If only there was a way to update the previous commit instead of creating a new one...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git commit &lt;span class="nt"&gt;--amend&lt;/span&gt; &lt;span class="nt"&gt;--no-edit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This command lets you modify the last commit without changing the commit message. The hash value will be updated, but there will be only one commit record leaving your local Git history nice and clean.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip2"&gt; Tip #2 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Keep your commits organised &lt;/h2&gt;
 

&lt;p&gt;You just wanted to fix that one feature, but in the meantime got into the flow, took care of a tricky bug and spotted a very annoying typo. One thing led to another, and suddenly you realised that you‚Äôve been coding for hours without actually committing anything. Now your changes are too vast to squeeze in one commit...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git add &lt;span class="nt"&gt;-p&lt;/span&gt; &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With git &lt;code&gt;add -p&lt;/code&gt; (or &lt;code&gt;git add --patch&lt;/code&gt;) you can choose which parts of code from a file you want to include in your commit. After running the command you will get the list of the options you can add to git &lt;code&gt;add -p&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;By choosing &lt;code&gt;s&lt;/code&gt; you can split the hunk into smaller pieces. From there you can simply choose the chunks you want to stage for commit (and omit those you don‚Äôt) by navigating with &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; (or go for any other option from the list).&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip3"&gt; Tip #3 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Take me back to better times (when everything worked!)  &lt;/h2&gt;
 

&lt;p&gt;Not your best day. You made changes you shouldn‚Äôt have and now everything is broken‚Ä¶ Is there a way to undo those commits?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reflog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this handy command, you can get the record of all the commits done in Git. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---08fBqr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/6033cf9dce54c65d97d57571/60d2f2e0aefc62540cefc79c_gitreflog.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---08fBqr_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://uploads-ssl.webflow.com/6033cf9dce54c65d97d57571/60d2f2e0aefc62540cefc79c_gitreflog.png" alt="termianl view"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you just need to find the commit prior to the one that caused all the hassle. &lt;code&gt;HEAD@{index}&lt;/code&gt; represents the specified commit, so just replace index with the correct number and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset HEAD@&lt;span class="o"&gt;{&lt;/span&gt;index&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The default action for &lt;code&gt;git reset&lt;/code&gt; is &lt;code&gt;git reset --mixed&lt;/code&gt;. It means that the changes in your working directory will be preserved but not staged (since the index was modified to match the chosen commit, the changes are not in the index anymore).&lt;/p&gt;

&lt;p&gt;Other options are:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &lt;span class="nt"&gt;--soft&lt;/span&gt;
&lt;span class="c"&gt;# Doesn‚Äôt modify the index or the working tree, leaving your changes staged for commit.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git reset &lt;span class="nt"&gt;--hard&lt;/span&gt;
&lt;span class="c"&gt;# Use with caution, as it resets both the index and working tree. Uncommitted changes and all commits after will be removed.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And voil√†, you can start over from the point when everything in your repository worked like a charm. Remember to use it only locally, as modifying a shared repository is considered a serious crime.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;
&lt;a href="#tip4"&gt; Tip #4 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Let‚Äôs face those merge conflicts  &lt;/h2&gt;
 

&lt;p&gt;You're on to a hairy merge conflict, but after comparing two conflicting versions you still have no idea which one is correct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git checkout &lt;span class="nt"&gt;--conflict&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;diff3 &amp;lt;filename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Resolving merge conflicts is not all fun and games, but this command can make your life a little bit easier. Often you need more context to decide which branch is correct. By default, Git shows you a version of the markers that contains versions of the two files that have a conflict. By choosing the option above you will be able to see the base version as well, which can hopefully save you some trouble. You can also set it as default with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; merge.conflictstyle diff3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;&lt;sup&gt;üí° "Resolving merge conflicts is fun!" - said no one ever. The good news is that with GitLive you can get notified of conflicts before they occur. Gutter indicators show your teammates changes in your editor in real-time. Check out &lt;a href="https://blog.git.live/gitlive-11.0-Real-time-merge-conflict-detection"&gt;this blog post &lt;/a&gt; to find out more.&lt;br&gt;
&lt;/sup&gt;&lt;/p&gt;



&lt;p&gt;
&lt;a href="#tip5"&gt; Tip #5 &lt;/a&gt;
&lt;/p&gt;
 

&lt;h2&gt; Let autocorrect take care of it   &lt;/h2&gt;
 

&lt;p&gt;You‚Äôre pretty proud of your breakneck typing speed, but at the same time you can‚Äôt even remember how many times you typed ‚Äúgit stauts‚Äù instead of ‚Äúgit status‚Äù and it leaves you mildly annoyed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; help.autocorrect &amp;lt;integer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Git Autocorrect is a convenient option for all the impatient devs out there. The integer value represents a tenth of a second. Choosing 30 will give you 3 seconds to change your mind and stop the operation - otherwise Git will assume you meant the instruction most similar to the one you wrote. Don‚Äôt worry though, if you type something that is not even close to a Git command, Git will give up on guessing and print an error message instead.&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading! Hope you found our Git-pick useful. Feel free to share your favorite hacks in the comments! Happy Git-ing! &lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>git</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Accessibility in React</title>
      <author>Sreashi Saha</author>
      <pubDate>Wed, 23 Jun 2021 09:52:32 +0000</pubDate>
      <link>https://dev.to/sreashi/accessibility-in-react-2m2n</link>
      <guid>https://dev.to/sreashi/accessibility-in-react-2m2n</guid>
      <description>&lt;p&gt;Accessibility is the ability for applications to be used by everyone, including those with disabilities.As a devloprer its your responsibility to make sure that everyone get the right experience in your app. For making your react app Accessible you should know what is accessibility exactly is??  so let's get started&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Accessibility and Why it is needed?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Web accessibility is also referred to as a11y.A11y is a numero-nym that stands for accessibility as ‚Äúa‚Äù followed by 11 more letters, followed by ‚Äúy‚Äù.It is the design and creation of websites that can be used by everyone.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Accessibility support is necessary to allow assistive technology to interpret web pages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Accessibility is the necessary tool or ways in which a website can be made easy to access by the user with features like clickable buttons or dropdowns or spaces to write a comment and stuff.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Accessiblity also helps in power users may find it faster to interact with your application using a keyboard, rather than a mouse or touch screen. Especially for applications involving a large amount of data entry, good keyboard navigation support can dramatically increase user productivity.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Accessibility Standards and Guidelines&lt;/strong&gt;&lt;br&gt;
There are some standard guidelines available for achiving accessibility which helps us to achive accessibilty for buildinng websites.Some of them are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WCAG:&lt;/strong&gt; Web Content Accessibility Guidelines (WCAG) is developed through the W3C process in cooperation with individuals and organizations around the world, with a goal of providing a single shared standard for web content accessibility that meets the needs of individuals, organizations, and governments internationally.The WCAG documents explain how to make web content more accessible to people with disabilities. Web ‚Äúcontent‚Äù generally refers to the information in a web page or web application, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;natural information such as text, images, and sounds&lt;/li&gt;
&lt;li&gt;code or markup that defines structure, presentation, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;WAI-ARIA:&lt;/strong&gt; Web Accessibility Initiative - Accessible Rich Internet Applications (WAI-ARIA) is the Accessible Rich Internet Applications Suite, defines a way to make Web content and Web applications more accessible to people with disabilities. It especially helps with dynamic content and advanced user interface controls developed with HTML, JavaScript, and related technologies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Accessibility Using React:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;React fully supports building accessible websites, often by using standard HTML techniques.Let's see how we can make your react applications more accessible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ARAI:&lt;/strong&gt;&lt;br&gt;
Accessible Rich Internet Applications (ARIA) is a set of attributes that define ways to make Web content and Web applications more accessible for users with disabilities.ARIA  HTML attributes are fully supported in JSX, and therefore can be used as attributes for elements and components in React. Whereas most DOM properties and attributes in React are camelCased, these attributes should be hyphen-cased.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;input
  aria-label={labelText}
  aria-required="true"
  onChange={onchangeHandler}
  value={inputValue}
  name="name"
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Semantic HTML:&lt;/strong&gt;&lt;br&gt;
Semantic HTML is the foundation of accessibility in a web application.Sometimes we break HTML semantics when we add &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements to our JSX to make our React code work, especially when working with lists &lt;code&gt;(&amp;lt;ol&amp;gt;, &amp;lt;ul&amp;gt; and &amp;lt;dl&amp;gt;)&lt;/code&gt; and the HTML &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; this  makes a problem of understanding the code and thus debugging the code.&lt;/p&gt;

&lt;p&gt;So at times, we use pieces like &amp;lt;&amp;gt; or   allows you to group together a list of child elements without adding more nodes to the DOM.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { Fragment } from 'react';
function  employeeList() {
return (
    &amp;lt;Fragment&amp;gt;  
        &amp;lt;dt&amp;gt;EA824412&amp;lt;/dt&amp;gt;
        &amp;lt;dd&amp;gt; Sreashi Saha&amp;lt;/dd&amp;gt;
    &amp;lt;/Fragment&amp;gt; );
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Labeling:&lt;/strong&gt;&lt;br&gt;
Labeling is used to makes the forms accesible.Every HTML form control, such as &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;, needs to be labeled accessibly. There is one important thing you must provide in your application: a textual label for each control . This gives a screen reader user context about the control they are interacting with.Although these standard HTML practices can be directly used in React, note that the for attribute is written as htmlFor in JSX:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;label htmlFor="name"&amp;gt;Name:&amp;lt;/label&amp;gt;
&amp;lt;input id="name" type="text" name="name"/&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Keyboard Focus:&lt;/strong&gt;&lt;br&gt;
Keyboard Focus refers to the part of the web application that is accepting data or actions from the keyboard from the user often refers to the DOM input.We can use ref functions to handle where we want the user to focus on in our application.Using the React.createRef() we can control the focus.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use the &lt;code&gt;ref&lt;/code&gt; callback to store a reference to the text input DOM&lt;/li&gt;
&lt;li&gt;Create a ref to store the textInput DOM element&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's have a look how to create a ref to an element in the JSX of a component class..&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class CustomDiv extends React.Component {
  constructor(props) {
    super(props);

    this.div = React.createRef();
  }
  render() {

    return (
      &amp;lt;div
        tabIndex= "-1"

        ref={this.div}
      /&amp;gt;
    );
  }


}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can focus it elsewhere in our component when needed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Explicitly focus the div using raw DOM API&lt;/li&gt;
&lt;li&gt;We are accessing "current" to get the DOM node
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;focus() {

 this.textInput.current.focus();


}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When using a HOC to extend components, it is recommended to foward the ref to the wrapped component using the forwardRef function of React. If a third party HOC does not implement ref forwarding, the above pattern can still be used as a fallback.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting Document Title:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Setting document title  provides a declarative way to specify document.title in a single-page app.It is actually crucial for screen readers, the document title is the first thing screen readers announce. It updates the content currently showing in the browser tab helping to announce exactly where the users &lt;code&gt;(who might depend on screen readers)&lt;/code&gt; are in your application. It is also really great for search engine optimisation.Set the document &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; to correctly describe the current page content as this ensures that the user remains aware of the current page context.Let's see an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function App() {
  return (
    &amp;lt;DocumentTitle title='My Web App'&amp;gt;
      &amp;lt;SomeRouter /&amp;gt;
    &amp;lt;/DocumentTitle&amp;gt;
  );
}

class NewArticlePage extends React.Component {
  constructor(props) {
    super(props);
    this.state = { title: 'Untitled' };
  }

  render() {
    return (
      &amp;lt;DocumentTitle title={this.state.title}&amp;gt;
        &amp;lt;div&amp;gt;
          &amp;lt;h1&amp;gt;New Article&amp;lt;/h1&amp;gt;
          &amp;lt;input
            value={this.state.title}
            onChange={(e) =&amp;gt; this.setState({ title: e.target.value })}
          /&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/DocumentTitle&amp;gt;
    );
  }

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Development Assistance:&lt;/strong&gt;&lt;br&gt;
Devlopment Assistance can helps to improve yours  website Accessibility.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install ESLint jsx-a11y plugin for your React projects to display accessibility rules you miss while building your application.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install eslint-plugin-jsx-a11y  -‚Äî save-dev

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Update your eslint.rc file‚Äôs plugin and extends sections in your code editor. For plugin section:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "extends": ["react-app", "plugin:jsx-a11y/recommended"],
  "plugins": ["jsx-a11y"]

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hopefully, It helps to improve your efficiency writing React and also helps to build your website more accesible. If any queries regarding this write them down in the comment below. Thank you for your time and I hoped my blog is helpful for you.&lt;/p&gt;

&lt;p&gt;Happy Learning!!&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>a11y</category>
    </item>
    <item>
      <title>cute owl using css and html</title>
      <author>Saba Alikhani</author>
      <pubDate>Wed, 23 Jun 2021 09:45:25 +0000</pubDate>
      <link>https://dev.to/fydsa/cute-owl-using-css-and-html-1jge</link>
      <guid>https://dev.to/fydsa/cute-owl-using-css-and-html-1jge</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/fydsa/embed/qBrzqor?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>css</category>
      <category>html</category>
    </item>
    <item>
      <title>New benchmark: Mezon Router VS Power Router</title>
      <author>alexdodonov</author>
      <pubDate>Wed, 23 Jun 2021 09:42:29 +0000</pubDate>
      <link>https://dev.to/alexdodonov/new-benchmark-mezon-router-vs-power-router-5h4g</link>
      <guid>https://dev.to/alexdodonov/new-benchmark-mezon-router-vs-power-router-5h4g</guid>
      <description>&lt;p&gt;Hi all! Today we have one more benchmark.&lt;/p&gt;

&lt;p&gt;As usual we have two cases:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;http server accepts request, launches php script, which handles this request, and then all script data is removed from memory. All following requests are processed in the same way. In this case very critical to launch script as soon as possible and we do not have time for long pre-compilations and preparations. Because all of it will be lost after the script will finish working;&lt;/li&gt;
&lt;li&gt;php script is launching, initiating all internal components (and router is one of them) and then starting processing requests. This case can be organized via for example react-php. It differs from the previous case because we can spend reasonable time to pre-compile routes for faster processing.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#the-first-case"&gt;
  &lt;/a&gt;
  The first case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /static/999 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// non static routes&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /param/999/1 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#the-second-case"&gt;
  &lt;/a&gt;
  The second case
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/99'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/static/199'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /static/999 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// non static routes&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;RouteGenerator&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;generatePowerNonStaticRoutes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/0/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/99/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_METHOD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$_SERVER&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'REQUEST_URI'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/param/199/1/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$request&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ServerRequestFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;fromGlobals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$router&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// and so on up to /param/999/1 route&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#ok-what-do-we-have"&gt;
  &lt;/a&gt;
  OK What do we have?
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#the-first-case-static-routes"&gt;
  &lt;/a&gt;
  The first case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| benchmark                          | subject     | set | revs | its | mem_peak    | best          | mean          | mode          | worst         | stdev        | rstdev | diff    |
+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| CoffeeSingleRequestStaticBench     | benchStatic | 0   | 10   | 10  | 2,936,232b  | 41,057.300Œºs  | 84,148.370Œºs  | 47,592.655Œºs  | 249,780.200Œºs | 74,221.744Œºs | 88.20% | 48.66x  |
| DVKSingleRequestStaticBench        | benchStatic | 0   | 10   | 10  | 3,392,992b  | 25,714.700Œºs  | 26,682.450Œºs  | 26,362.514Œºs  | 28,618.500Œºs  | 819.301Œºs    | 3.07%  | 15.43x  |
| HoaSingleRequestStaticBench        | benchStatic | 0   | 10   | 10  | 3,847,864b  | 44,176.400Œºs  | 47,097.030Œºs  | 45,321.883Œºs  | 63,058.400Œºs  | 5,365.782Œºs  | 11.39% | 27.23x  |
| IBSingleRequestStaticBench         | benchStatic | 0   | 10   | 10  | 3,471,624b  | 126,073.700Œºs | 130,365.100Œºs | 128,767.356Œºs | 143,720.600Œºs | 4,833.922Œºs  | 3.71%  | 75.39x  |
| MezonSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 2,287,376b  | 9,073.900Œºs   | 9,357.890Œºs   | 9,297.606Œºs   | 9,896.300Œºs   | 236.985Œºs    | 2.53%  | 5.41x   |
| MiladSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 33,649,608b | 29,915.300Œºs  | 30,749.180Œºs  | 30,291.549Œºs  | 33,174.000Œºs  | 977.528Œºs    | 3.18%  | 17.78x  |
| PeceeSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 7,085,072b  | 36,595.500Œºs  | 37,232.050Œºs  | 37,031.929Œºs  | 38,438.600Œºs  | 554.518Œºs    | 1.49%  | 21.53x  |
| PowerSingleRequestStaticBench      | benchStatic | 0   | 10   | 10  | 3,862,216b  | 19,049.200Œºs  | 20,140.870Œºs  | 19,808.905Œºs  | 21,000.000Œºs  | 643.417Œºs    | 3.19%  | 11.65x  |
| SteampixelSingleRequestStaticBench | benchStatic | 0   | 10   | 10  | 2,566,392b  | 207,734.200Œºs | 210,574.660Œºs | 210,950.748Œºs | 212,526.200Œºs | 1,389.866Œºs  | 0.66%  | 121.77x |
| ToroSingleRequestStaticBench       | benchStatic | 0   | 10   | 10  | 1,745,216b  | 1,476.200Œºs   | 1,729.290Œºs   | 1,583.368Œºs   | 2,666.700Œºs   | 346.981Œºs    | 20.06% | 1.00x   |
+------------------------------------+-------------+-----+------+-----+-------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-first-case-nonstatic-routes"&gt;
  &lt;/a&gt;
  The first case + non-static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+---------------+--------+--------+
| benchmark                         | subject    | set | revs | its | mem_peak     | best          | mean          | mode          | worst         | stdev         | rstdev | diff   |
+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+---------------+--------+--------+
| CoffeeSingleRequestParamBench     | benchParam | 0   | 10   | 10  | 3,903,272b   | 53,137.000Œºs  | 53,669.140Œºs  | 53,434.041Œºs  | 54,304.600Œºs  | 398.649Œºs     | 0.74%  | 4.85x  |
| DVKSingleRequestParamBench        | benchParam | 0   | 10   | 10  | 3,385,376b   | 29,081.100Œºs  | 30,110.190Œºs  | 29,726.930Œºs  | 31,490.000Œºs  | 755.289Œºs     | 2.51%  | 2.72x  |
| HoaSingleRequestParamBench        | benchParam | 0   | 10   | 10  | 4,165,464b   | 45,786.400Œºs  | 46,825.120Œºs  | 46,833.564Œºs  | 47,952.800Œºs  | 583.437Œºs     | 1.25%  | 4.23x  |
| IBSingleRequestParamBench         | benchParam | 0   | 10   | 10  | 3,592,344b   | 145,910.100Œºs | 147,746.210Œºs | 147,306.262Œºs | 150,106.800Œºs | 1,239.601Œºs   | 0.84%  | 13.36x |
| MezonSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 139,508,728b | 124,171.600Œºs | 126,109.060Œºs | 125,425.730Œºs | 130,917.500Œºs | 1,915.883Œºs   | 1.52%  | 11.41x |
| MiladSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 34,508,144b  | 35,645.000Œºs  | 36,320.080Œºs  | 36,141.269Œºs  | 37,270.600Œºs  | 527.261Œºs     | 1.45%  | 3.28x  |
| PeceeSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 6,669,256b   | 75,824.900Œºs  | 84,586.110Œºs  | 78,820.332Œºs  | 109,839.700Œºs | 10,653.230Œºs  | 12.59% | 7.65x  |
| PowerSingleRequestParamBench      | benchParam | 0   | 10   | 10  | 3,862,216b   | 20,937.700Œºs  | 28,584.620Œºs  | 24,077.098Œºs  | 40,265.800Œºs  | 7,123.452Œºs   | 24.92% | 2.59x  |
| SteampixelSingleRequestParamBench | benchParam | 0   | 10   | 10  | 2,666,344b   | 235,446.700Œºs | 348,940.010Œºs | 297,900.248Œºs | 691,357.600Œºs | 128,878.867Œºs | 36.93% | 31.56x |
| ToroSingleRequestParamBench       | benchParam | 0   | 10   | 10  | 1,866,176b   | 9,774.800Œºs   | 11,056.990Œºs  | 10,512.857Œºs  | 12,358.000Œºs  | 835.968Œºs     | 7.56%  | 1.00x  |
+-----------------------------------+------------+-----+------+-----+--------------+---------------+---------------+---------------+---------------+---------------+--------+--------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-static-routes"&gt;
  &lt;/a&gt;
  The second case + static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+-----------------+---------------+--------+------------+
| benchmark                  | subject     | set | revs | its | mem_peak   | best          | mean          | mode          | worst           | stdev         | rstdev | diff       |
+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+-----------------+---------------+--------+------------+
| CoffeeReactStaticBench     | benchStatic | 0   | 10   | 10  | 2,409,400b | 7,916.900Œºs   | 8,434.210Œºs   | 8,309.219Œºs   | 9,401.900Œºs     | 425.183Œºs     | 5.04%  | 410.30x    |
| DVKReactStaticBench        | benchStatic | 0   | 100  | 10  | 2,652,296b | 10,289.710Œºs  | 10,796.560Œºs  | 10,512.391Œºs  | 13,365.110Œºs    | 864.430Œºs     | 8.01%  | 525.23x    |
| HoaReactStaticBench        | benchStatic | 0   | 100  | 10  | 2,893,936b | 3,576.030Œºs   | 3,622.525Œºs   | 3,606.191Œºs   | 3,731.710Œºs     | 43.214Œºs      | 1.19%  | 176.23x    |
| IBReactStaticBench         | benchStatic | 0   | 10   | 10  | 3,034,880b | 25,829.300Œºs  | 26,309.220Œºs  | 26,380.221Œºs  | 26,774.000Œºs    | 303.353Œºs     | 1.15%  | 1,279.88x  |
| MezonReactStaticBench      | benchStatic | 0   | 100  | 10  | 1,908,208b | 18.630Œºs      | 20.556Œºs      | 18.987Œºs      | 25.150Œºs        | 2.436Œºs       | 11.85% | 1.00x      |
| MiladReactStaticBench      | benchStatic | 0   | 10   | 10  | 5,275,192b | 15,524.100Œºs  | 16,269.690Œºs  | 16,402.613Œºs  | 17,264.100Œºs    | 511.121Œºs     | 3.14%  | 791.48x    |
| PeceeReactStaticBench      | benchStatic | 0   | 10   | 10  | 4,243,936b | 19,101.900Œºs  | 20,167.700Œºs  | 19,701.218Œºs  | 22,467.300Œºs    | 1,012.717Œºs   | 5.02%  | 981.11x    |
| PowerReactStaticBench      | benchStatic | 0   | 10   | 10  | 3,029,632b | 15,172.800Œºs  | 15,635.430Œºs  | 15,559.212Œºs  | 16,680.100Œºs    | 397.706Œºs     | 2.54%  | 760.63x    |
| SteampixelReactStaticBench | benchStatic | 0   | 10   | 10  | 2,605,560b | 239,026.100Œºs | 346,973.110Œºs | 250,424.922Œºs | 1,209,825.800Œºs | 288,217.061Œºs | 83.07% | 16,879.41x |
| ToroReactStaticBench       | benchStatic | 0   | 10   | 10  | 1,734,616b | 351.800Œºs     | 382.130Œºs     | 364.151Œºs     | 480.600Œºs       | 39.107Œºs      | 10.23% | 18.59x     |
+----------------------------+-------------+-----+------+-----+------------+---------------+---------------+---------------+-----------------+---------------+--------+------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-second-case-nonstatic-routes"&gt;
  &lt;/a&gt;
  The second case + non-static routes
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| benchmark                 | subject    | set | revs | its | mem_peak   | best          | mean          | mode          | worst         | stdev        | rstdev | diff    |
+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
| CoffeeReactParamBench     | benchParam | 0   | 10   | 10  | 2,409,368b | 8,548.600Œºs   | 9,257.830Œºs   | 8,950.739Œºs   | 10,758.200Œºs  | 640.445Œºs    | 6.92%  | 6.19x   |
| DVKReactParamBench        | benchParam | 0   | 100  | 10  | 2,656,688b | 14,344.960Œºs  | 18,446.126Œºs  | 16,842.581Œºs  | 31,828.310Œºs  | 4,840.866Œºs  | 26.24% | 12.34x  |
| HoaReactParamBench        | benchParam | 0   | 100  | 10  | 3,360,824b | 3,862.030Œºs   | 4,972.977Œºs   | 4,750.023Œºs   | 6,237.760Œºs   | 730.301Œºs    | 14.69% | 3.33x   |
| IBReactParamBench         | benchParam | 0   | 10   | 10  | 3,157,360b | 43,412.000Œºs  | 59,080.640Œºs  | 54,258.725Œºs  | 95,701.400Œºs  | 14,431.920Œºs | 24.43% | 39.52x  |
| MezonReactParamBench      | benchParam | 0   | 100  | 10  | 3,129,488b | 1,178.510Œºs   | 1,494.984Œºs   | 1,341.991Œºs   | 2,096.520Œºs   | 283.938Œºs    | 18.99% | 1.00x   |
| MiladReactParamBench      | benchParam | 0   | 10   | 10  | 5,402,688b | 22,573.900Œºs  | 28,562.900Œºs  | 24,596.006Œºs  | 49,765.900Œºs  | 8,124.021Œºs  | 28.44% | 19.11x  |
| PeceeReactParamBench      | benchParam | 0   | 10   | 10  | 4,625,032b | 47,438.500Œºs  | 53,523.160Œºs  | 49,062.308Œºs  | 71,146.100Œºs  | 8,897.750Œºs  | 16.62% | 35.80x  |
| PowerReactParamBench      | benchParam | 0   | 10   | 10  | 3,029,632b | 16,629.600Œºs  | 17,320.220Œºs  | 17,040.916Œºs  | 18,338.400Œºs  | 523.710Œºs    | 3.02%  | 11.59x  |
| SteampixelReactParamBench | benchParam | 0   | 10   | 10  | 2,664,712b | 250,206.800Œºs | 270,897.140Œºs | 256,660.290Œºs | 299,426.700Œºs | 16,652.239Œºs | 6.15%  | 181.20x |
| ToroReactParamBench       | benchParam | 0   | 10   | 10  | 1,785,112b | 8,329.400Œºs   | 8,866.510Œºs   | 8,599.075Œºs   | 9,795.400Œºs   | 478.527Œºs    | 5.40%  | 5.93x   |
+---------------------------+------------+-----+------+-----+------------+---------------+---------------+---------------+---------------+--------------+--------+---------+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see in some cases Power Router is the fastest router, in some cases it is not, but still shows good results.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h1&gt;

&lt;p&gt;More articles can be found in my &lt;a href="https://twitter.com/mezonphp"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-mezonrouter"&gt;
  &lt;/a&gt;
  What is mezon/router?
&lt;/h1&gt;

&lt;p&gt;mezon/router now is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;framework for routing with &lt;strong&gt;100% code coverage&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;10.0 points&lt;/strong&gt; on scrutinizer-ci.com&lt;/li&gt;
&lt;li&gt;router is a part of the &lt;a href="https://github.com/alexdodonov/mezon"&gt;Mezon Project&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Repo on github.com: &lt;a href="https://github.com/alexdodonov/mezon-router"&gt;https://github.com/alexdodonov/mezon-router&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#it-will-be-great-if-you-will-contribute-something-to-this-project-documentation-sharing-the-project-in-your-social-media-bug-fixing-refactoring-or-even-submitting-issue-with-question-or-feature-request-thanks-anyway-"&gt;
  &lt;/a&gt;
  It will be great if you will contribute something to this project. Documentation, sharing the project in your social media, bug fixing, refactoring, or even &lt;strong&gt;&lt;a href="https://github.com/alexdodonov/mezon-router/issues"&gt;submitting issue with question or feature request&lt;/a&gt;&lt;/strong&gt;. Thanks anyway )
&lt;/h1&gt;

</description>
      <category>php</category>
      <category>router</category>
      <category>mezon</category>
      <category>benchmark</category>
    </item>
    <item>
      <title>Django Custom Commands - Tutorial for Beginners</title>
      <author>Sm0ke</author>
      <pubDate>Wed, 23 Jun 2021 09:40:53 +0000</pubDate>
      <link>https://dev.to/sm0ke/django-custom-command-2mj5</link>
      <guid>https://dev.to/sm0ke/django-custom-command-2mj5</guid>
      <description>&lt;p&gt;Hello Coders, &lt;/p&gt;

&lt;p&gt;This article explains how to write our own &lt;strong&gt;Django custom commands&lt;/strong&gt; that might help us to test, upload data or extract valuable information in a production environment from a Django project. For newcomers, Django is a popular web framework designed and written in Python by experienced developers. The main advantage of &lt;strong&gt;custom command&lt;/strong&gt; is that all Django machinery is loaded and ready to be used. That means you can import models, execute queries to the database using &lt;strong&gt;Django&lt;/strong&gt;‚Äôs ORM and interact with all your project‚Äôs resources.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;p&gt;&lt;strong&gt;Topics covered&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a new Django App and Update Django to use it&lt;/li&gt;
&lt;li&gt;Visualize the required directory structure inside the app&lt;/li&gt;
&lt;li&gt;Code end execute a few custom commands:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;cmd_time.py&lt;/code&gt; - show current timestamp&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cmd_apps&lt;/code&gt;    - list all registered apps&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cmd_models&lt;/code&gt;  - list all apps and associated models&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cmd_showcfg&lt;/code&gt; - list all CFG keys and values&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;The &lt;a href="https://github.com/app-generator/django-learn-by-coding"&gt;source code&lt;/a&gt; can be found on Github (MIT License)&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#create-a-new-django-app"&gt;
  &lt;/a&gt;
  Create a new Django App
&lt;/h2&gt;

&lt;p&gt;This tutorial assumes that we have a working Django project and we will move forward and create a new app via &lt;code&gt;startapp&lt;/code&gt; subcommand:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py startapp app_customcmd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the new &lt;code&gt;app&lt;/code&gt; directory, we need to create a directory structure as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&amp;lt; PROJECT ROOT &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;                          &amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; project directory
 |
 |-- app_customcmd/                                &amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; app directory
 |    |-- management/
 |    |    +-- __init__.py
 |    |    +-- commands/
 |    |         +-- __init__.py
 |    |         +-- cmd_....py  &amp;lt;&lt;span class="nt"&gt;--&lt;/span&gt; module where all commands are saved
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we have built and configure Django to use the new app, all commands defined in &lt;code&gt;commands&lt;/code&gt; directory are automatically discovered even without an application restart. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Configure Django to use the app&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To execute our custom commands we need to activate &lt;code&gt;app_customcmd&lt;/code&gt; in the project configuration:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.admin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.auth'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.contenttypes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.sessions'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.messages'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.staticfiles'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'app_customcmd'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;               &lt;span class="c1"&gt;# &amp;lt;-- NEW
&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#custom-commands"&gt;
  &lt;/a&gt;
  Custom Commands
&lt;/h2&gt;

&lt;p&gt;This section presents for custom commands that will access and report a few things related to a Django project internals - Let's go! &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#show-current-time"&gt;
  &lt;/a&gt;
  Show Current Time
&lt;/h3&gt;

&lt;p&gt;This simple custom command help us to accommodate with the concept. Here is the code, saved in the &lt;code&gt;app_customcmd/management/commands&lt;/code&gt; directory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.management.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseCommand&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseCommand&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Displays current time'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'%X'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"It's %s"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The actual executed code resides in the &lt;code&gt;handle&lt;/code&gt; method and the execution should display something similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py cmd_time
It&lt;span class="s1"&gt;'s 09:18:08                &amp;lt;-- The output from our custom CMD
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The most important aspect regarding the code is the usage of &lt;code&gt;BaseCommand&lt;/code&gt; as a super-class for our definition. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#show-registered-apps"&gt;
  &lt;/a&gt;
  Show Registered Apps
&lt;/h3&gt;

&lt;p&gt;This sample will iterate over all registered and active apps and print their names.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.management.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseCommand&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.apps&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseCommand&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Displays registered apps'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_app_configs&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" APP -&amp;gt; %s"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Script execution and output:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py cmd_apps
 APP -&amp;gt; Administration                     &lt;span class="c"&gt;# Default Django App   &lt;/span&gt;
 APP -&amp;gt; Authentication and Authorization   &lt;span class="c"&gt;# Default Django App&lt;/span&gt;
 APP -&amp;gt; Content Types                      &lt;span class="c"&gt;# Default Django App&lt;/span&gt;
 APP -&amp;gt; Sessions                           &lt;span class="c"&gt;# Default Django App&lt;/span&gt;
 APP -&amp;gt; Messages                           &lt;span class="c"&gt;# Default Django App&lt;/span&gt;
 APP -&amp;gt; Static Files                       &lt;span class="c"&gt;# Default Django App&lt;/span&gt;
 APP -&amp;gt; App_Customcmd                      &lt;span class="c"&gt;# &amp;lt;-- Our NEW App   &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#show-models-for-each-app"&gt;
  &lt;/a&gt;
  Show models for each app
&lt;/h3&gt;

&lt;p&gt;This command is quite similar with the previous one, but provide also the registered models for each app.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.management.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseCommand&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.apps&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseCommand&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Displays registered apps and models'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="c1"&gt;# Iterate over apps
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_app_configs&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" APP -&amp;gt; %s"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="c1"&gt;# Iterate over models                                # &amp;lt;-- New Code 
&lt;/span&gt;            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_models&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;                       &lt;span class="c1"&gt;# &amp;lt;-- New Code 
&lt;/span&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\t&lt;/span&gt;&lt;span class="s"&gt; |- (model) -&amp;gt; %s"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;-- New Code
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The execution and output&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;python manage.py cmd_models
 APP -&amp;gt; Administration
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.admin.models.LogEntry'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
 APP -&amp;gt; Authentication and Authorization
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.auth.models.Permission'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.auth.models.Group'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.auth.models.User'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
 APP -&amp;gt; Content Types
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.contenttypes.models.ContentType'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
 APP -&amp;gt; Sessions
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'django.contrib.sessions.models.Session'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;        
 APP -&amp;gt; Messages
 APP -&amp;gt; Static Files
 APP -&amp;gt; App_Forms
 APP -&amp;gt; App_Pdf
 APP -&amp;gt; App_Customcmd
 APP -&amp;gt; App
         |- &lt;span class="o"&gt;(&lt;/span&gt;model&lt;span class="o"&gt;)&lt;/span&gt; -&amp;gt; &amp;lt;class &lt;span class="s1"&gt;'app.models.Book'&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#print-config-variables"&gt;
  &lt;/a&gt;
  Print Config Variables
&lt;/h3&gt;

&lt;p&gt;This custom command scan the &lt;code&gt;settings&lt;/code&gt; object for proprieties and print all values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.management.base&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BaseCommand&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;timezone&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.conf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BaseCommand&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Displays project config'&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

        &lt;span class="c1"&gt;# type( settings ) =&amp;gt; &amp;lt;class 'django.conf.LazySettings'&amp;gt;
&lt;/span&gt;        &lt;span class="c1"&gt;# settings.__dict__
&lt;/span&gt;
        &lt;span class="c1"&gt;# Iterate over apps
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;" Cfg Key: "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;" -&amp;gt; %s"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;The output and execution:&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;env&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; PS D:&lt;span class="se"&gt;\w&lt;/span&gt;ork&lt;span class="se"&gt;\r&lt;/span&gt;epo-samples&lt;span class="se"&gt;\d&lt;/span&gt;jango-learn-by-coding&amp;gt; python manage.py cmd_showcfg
 Cfg Key: _wrapped -&amp;gt; &amp;lt;Settings &lt;span class="s2"&gt;"config.settings"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
 Cfg Key: INSTALLED_APPS -&amp;gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'django.contrib.admin'&lt;/span&gt;, &lt;span class="s1"&gt;'django.contrib.auth'&lt;/span&gt;, &lt;span class="s1"&gt;'django.contrib.contenttypes'&lt;/span&gt;, &lt;span class="s1"&gt;'django.contrib.sessions'&lt;/span&gt;, &lt;span class="s1"&gt;'django.contrib.messages'&lt;/span&gt;, &lt;span class="s1"&gt;'django.contrib.staticfiles'&lt;/span&gt;, &lt;span class="s1"&gt;'app_forms'&lt;/span&gt;, &lt;span class="s1"&gt;'app_pdf'&lt;/span&gt;, &lt;span class="s1"&gt;'app_customcmd'&lt;/span&gt;, &lt;span class="s1"&gt;'app'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
 Cfg Key: DEBUG -&amp;gt; True
 Cfg Key: LOGGING_CONFIG -&amp;gt; logging.config.dictConfig
 Cfg Key: LOGGING -&amp;gt; &lt;span class="o"&gt;{}&lt;/span&gt;
 Cfg Key: DEFAULT_EXCEPTION_REPORTER -&amp;gt; django.views.debug.ExceptionReporter
 Cfg Key: FORCE_SCRIPT_NAME -&amp;gt; None
 Cfg Key: DEFAULT_TABLESPACE -&amp;gt;
 Cfg Key: DEFAULT_AUTO_FIELD -&amp;gt; django.db.models.BigAutoField
 Cfg Key: ABSOLUTE_URL_OVERRIDES -&amp;gt; &lt;span class="o"&gt;{}&lt;/span&gt;
 Cfg Key: AUTH_USER_MODEL -&amp;gt; auth.User
 Cfg Key: DATABASES -&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'default'&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'ENGINE'&lt;/span&gt;: &lt;span class="s1"&gt;'django.db.backends.sqlite3'&lt;/span&gt;, &lt;span class="s1"&gt;'NAME'&lt;/span&gt;: WindowsPath&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'D:/work/repo-samples/django-learn-by-coding/db.sqlite3'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="s1"&gt;'ATOMIC_REQUESTS'&lt;/span&gt;: False, &lt;span class="s1"&gt;'AUTOCOMMIT'&lt;/span&gt;: True, &lt;span class="s1"&gt;'CONN_MAX_AGE'&lt;/span&gt;: 0, &lt;span class="s1"&gt;'OPTIONS'&lt;/span&gt;: &lt;span class="o"&gt;{}&lt;/span&gt;, &lt;span class="s1"&gt;'TIME_ZONE'&lt;/span&gt;: None, &lt;span class="s1"&gt;'USER'&lt;/span&gt;: &lt;span class="s1"&gt;''&lt;/span&gt;, &lt;span class="s1"&gt;'PASSWORD'&lt;/span&gt;: &lt;span class="s1"&gt;''&lt;/span&gt;, &lt;span class="s1"&gt;'HOST'&lt;/span&gt;: &lt;span class="s1"&gt;''&lt;/span&gt;, &lt;span class="s1"&gt;'PORT'&lt;/span&gt;: &lt;span class="s1"&gt;''&lt;/span&gt;, &lt;span class="s1"&gt;'TEST'&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'CHARSET'&lt;/span&gt;: None, &lt;span class="s1"&gt;'COLLATION'&lt;/span&gt;: None, &lt;span class="s1"&gt;'MIGRATE'&lt;/span&gt;: True, &lt;span class="s1"&gt;'MIRROR'&lt;/span&gt;: None, &lt;span class="s1"&gt;'NAME'&lt;/span&gt;: None&lt;span class="o"&gt;}}}&lt;/span&gt;
...
&lt;span class="o"&gt;(&lt;/span&gt;truncated output&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;Writing custom commands in our Django projects might help us to extract stats, execute cron jobs, and check the health of a project that runs in production. &lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Thanks for reading! For more resources and support, feel free to access: &lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.djangoproject.com/en/3.2/howto/custom-management-commands/"&gt;Writing custom commands&lt;/a&gt; - official docs&lt;/li&gt;
&lt;li&gt;More &lt;a href="https://appseed.us/admin-dashboards/django"&gt;Django starters&lt;/a&gt; provided by &lt;strong&gt;AppSeed&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Free &lt;a href="https://appseed.us/"&gt;Support&lt;/a&gt; (email and Discord) - for &lt;strong&gt;registered users&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>P42 for Visual Studio Code</title>
      <author>Lars Grammel</author>
      <pubDate>Wed, 23 Jun 2021 09:09:49 +0000</pubDate>
      <link>https://dev.to/p42/p42-for-visual-studio-code-1k8o</link>
      <guid>https://dev.to/p42/p42-for-visual-studio-code-1k8o</guid>
      <description>&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/manage/publishers/p42ai"&gt;P42 for Visual Studio Code&lt;/a&gt; is now available in the Visual Studio Marketplace. &lt;br&gt;
The &lt;strong&gt;free extension includes all refactorings and code modernizations&lt;/strong&gt; that are available in P42. It can be used on all repositories and runs entirely locally.&lt;/p&gt;

&lt;p&gt;When you open a JavaScript or TypeScript file, P42 will automatically detect code that could be modernized and highlight it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S_NlXgXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/em34ngxdy3enqtma8j9p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S_NlXgXr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/em34ngxdy3enqtma8j9p.png" alt="P42 for Visual Studio Code example highlight"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can then effortlessly update your code using the Quick Fix function. &lt;/p&gt;

&lt;p&gt;With P42 for Visual Studio Code, you can learn new JavaScript patterns right in your IDE, make sure new code follows best practices, and modernize older code gradually.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/manage/publishers/p42ai"&gt;Try out P42 for Visual Studio Code today!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>The one about Aysnc and Await - WEEK 6 </title>
      <author>iqraraza</author>
      <pubDate>Wed, 23 Jun 2021 08:56:38 +0000</pubDate>
      <link>https://dev.to/iqraraza/the-one-about-aysnc-and-await-week-6-3m91</link>
      <guid>https://dev.to/iqraraza/the-one-about-aysnc-and-await-week-6-3m91</guid>
      <description>&lt;p&gt;You can only go up from the bottom right. That‚Äôs what they say.&lt;/p&gt;

&lt;p&gt;I did solo sprint on Monday morning and got a couple of green ticks in my tests. I was back again ! &lt;/p&gt;

&lt;p&gt;I‚Äôve never been a quitter. Life has taught me so much. Getting engaged at the sweet age of 18, married by 20, three miscarriages and now blessed with three beautiful children at the back end of extremely difficult pregnancies is one small chapter of my life. I‚Äôm in no position to be ungrateful or feel sorry for myself. I have to be a role model‚Ä¶ I have to rock on. &lt;/p&gt;

&lt;p&gt;Sitting through a lecture about Async and Await,  my confidence levels were rising. I understood it. Its an easier way to read code, compared to promises and blocks but slowly but surely, the lines start to blur. I had to remind myself to take baby steps. Slow down and work with what I know is better than moving forward too quickly and mushing everything up.&lt;/p&gt;

&lt;p&gt;I am confident that soon enough, with more practise, I can go back and refactor my code. &lt;/p&gt;

&lt;p&gt;I‚Äôll feel dead clever then too. &lt;/p&gt;

&lt;p&gt;Advanced error handling using pg-format for formatting query strings was a little intense, theory wise, but implementing it was much easier. It makes sense to create default errors to keep the code tidy. So far, this was one of the toughest weeks, mentally.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>bootcamp</category>
    </item>
    <item>
      <title>Implementing custom confirmation modal for canDeactivate</title>
      <author>Nikhil Dhawan</author>
      <pubDate>Wed, 23 Jun 2021 08:34:31 +0000</pubDate>
      <link>https://dev.to/this-is-angular/implementing-custom-confirmation-modal-for-candeactivate-2fan</link>
      <guid>https://dev.to/this-is-angular/implementing-custom-confirmation-modal-for-candeactivate-2fan</guid>
      <description>&lt;p&gt;Hi all, in this article, we will discuss what canDeactivate means and how to have a custom confirmation modal implemented based on our app theme.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#candeactivate-router-guard"&gt;
  &lt;/a&gt;
  canDeactivate Router Guard
&lt;/h4&gt;

&lt;p&gt;In Angular we get in build support for the routes we define to have implementation for canDeactivate guard which is how we can restrict the user from moving away from the view when some work is in progress on the current view. Example User is making an edit on his profile page and didn't click on the save button so at that time if we have implemented the router guard for canDeactivate, the user will be asked for the confirmation.&lt;br&gt;
A typical implementation for the canDeactivate looks like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;canDeactivate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;currentRoute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ActivatedRouteSnapshot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;currentState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RouterStateSnapshot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;nextState&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;RouterStateSnapshot&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;UrlTree&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;UrlTree&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;UrlTree&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So the thing to take care of here is that what does this function expects to be returned. We can have the exact value of true and false or even an observable or promise which will give true or false or UrlTree or direct UrlTree. So whenever you are implementing this make sure to have the return type which matches the above.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#working-example"&gt;
  &lt;/a&gt;
  Working Example
&lt;/h4&gt;

&lt;p&gt;So let us see how we can practically implement this guard. We can start with creating the guard service file, you can use Angular CLI to create one by the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng g guard custom-guard
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we will get the options to implement different router guards available&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cPlN8aCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fialgx9bbxc2sb8npag7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cPlN8aCG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fialgx9bbxc2sb8npag7.png" alt="image"&gt;&lt;/a&gt; &lt;br&gt;
But here as we are discussing canDeactivate, we will select that and proceed.&lt;br&gt;
So here is the use case, we have 2 components and we will have router guard implemented on comp1 and when the user is trying to move from comp1 to comp2.&lt;br&gt;
Complete example can be seen on &lt;a href="https://stackblitz.com/github/nikhild64/deactivatewithdialog?file=src%2Fapp%2Fconfirmguard.guard.ts"&gt;Stackblitz&lt;/a&gt;&lt;br&gt;
For code used in comp1, comp2 and confirm-modal it can be referred, here I will talk about code used in route guard.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;ConfirmguardGuard&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;CanDeactivate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Comp1Component&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;canDeactivate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Comp1Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;currentRoute&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ActivatedRouteSnapshot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;currentState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;RouterStateSnapshot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;nextState&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;RouterStateSnapshot&lt;/span&gt;
  &lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Observable&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;UrlTree&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;UrlTree&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;
    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;UrlTree&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;deactivate&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Subject&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;openDialog&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;subject&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;asObservable&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and in routes array object use as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;comp1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;canDeactivate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;ConfirmguardGuard&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Comp1Component&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;comp2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Comp2Component&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;redirectTo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;comp1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;pathMatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;full&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the simple code that will help us to have our working router guard. We are converting the subject we had for handling the confirm modal user interactions to the observable which is what this guard expects as the return. Here I haven't added any business logic which can be based upon the variables of the component. Now when you click on Comp2, you will be asked for the confirmation and if you click on OK, you will be navigated away and on Cancel, you will remain on the same view. Here the observable which is returned by canDeactivate will only take the first value it gets.&lt;/p&gt;

&lt;p&gt;Hope this small example helped you in understanding something new about canDeactivate, what is it used, and how to use it in Angular.&lt;br&gt;
If you liked it please share it with your friends or if any suggestions reach me out on &lt;a href="https://twitter.com/nikhild64"&gt;Twitter&lt;/a&gt; or comment below.&lt;br&gt;
Till next time Happy Learning!&lt;/p&gt;

</description>
      <category>angular</category>
    </item>
    <item>
      <title>Dynamic Classes and Styles</title>
      <author>Lakshya Singh</author>
      <pubDate>Wed, 23 Jun 2021 08:31:45 +0000</pubDate>
      <link>https://dev.to/king11/dynamic-classes-and-styles-3lff</link>
      <guid>https://dev.to/king11/dynamic-classes-and-styles-3lff</guid>
      <description>&lt;p&gt;In this article, I aim to provide a not so new but also not so known way of adding &lt;strong&gt;dynamic features&lt;/strong&gt; into your application, ensuring that you can achieve what you wish to simply &lt;strong&gt;without&lt;/strong&gt; writing &lt;em&gt;boilerplate code&lt;/em&gt; and meddling with &lt;em&gt;string concatenation&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;When writing Dynamic UI Components that respond to user actions and events, we require methods to respond to these events by translating them into our DOM. Change in DOM is usually achieved by changing &lt;em&gt;styles&lt;/em&gt; and &lt;em&gt;classes&lt;/em&gt; based on certain &lt;strong&gt;reactive data&lt;/strong&gt; that we have in our javascript. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5mW_2s21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yydg0rqygblvb6ptde80.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5mW_2s21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yydg0rqygblvb6ptde80.png" alt="old methods work but we can do better"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;While we can certainly do string concatenation, calculate a string and then bind a string to class or style... this method is error-prone and cumbersome at times to deal with. That's where Vue.js's clean suite of enhancements come into vue &lt;em&gt;( french for 'view' )&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#quick-recap-data-binding"&gt;
  &lt;/a&gt;
  Quick Recap Data Binding
&lt;/h2&gt;

&lt;p&gt;If you aren't familiar with what data binding is....it's essentially binding any attribute of an element in your &lt;code&gt;template&lt;/code&gt; to the data available in your &lt;code&gt;script&lt;/code&gt; tag, which can be props,  data or computed properties.&lt;/p&gt;

&lt;p&gt;Data binding is one of the most elegant features of Vue.js because it provides reactive data binding with a straightforward syntax using &lt;code&gt;v-bind&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; 
  &lt;span class="na"&gt;v-bind:class=&lt;/span&gt;&lt;span class="s"&gt;"dynamicClass"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello World!
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A shorthand for data binding is but just using &lt;code&gt;:&lt;/code&gt; and then the attribute name, which I guess anyone would prefer using more.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; 
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"dynamicClass"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Hello World!
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's suppose that the above class is not &lt;em&gt;a once initialized and stays the same&lt;/em&gt; kind of class it changes based on user input, so we have to use a &lt;code&gt;computed&lt;/code&gt; property or &lt;code&gt;watch&lt;/code&gt; to make changes to our &lt;code&gt;dynamicClass&lt;/code&gt; variable. So things will start to look like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;changingBoolean&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;dynamicClass&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="na"&gt;changingBoolean&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center text-lg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-justify text-xl&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Looking at the code above we can see that for a simple switch in classes based on a variable we had to write so much code. So simply creating a dynamic class won't work.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VUIPGl8t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhrk2i5plh0gmifib1bi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VUIPGl8t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uhrk2i5plh0gmifib1bi.gif" alt="we don't do simple data binding"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#array-syntax-for-classes"&gt;
  &lt;/a&gt;
  Array Syntax for Classes
&lt;/h2&gt;

&lt;p&gt;Enter array syntax which makes the previous task less cumbersome and also keeps it DRY at times when needed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt; 
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"[changingBoolean : ? 'text-center' : 'text-justify']"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Hello World!
&lt;span class="nt"&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This looks so much cleaner than the previous method right ‚âß‚ó†‚Äø‚ó†‚â¶‚úå. But it's an array so we can add multiple values into it too :). Now we can toggle the text alignment class while flex and width will always be present.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt; 
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"[changingBoolean : ? 'text-center' : 'text-justify', 'flex w-2']"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    Hello World!
&lt;span class="nt"&gt;&amp;lt;/aside&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#object-syntax-for-classes"&gt;
  &lt;/a&gt;
  Object Syntax for Classes
&lt;/h2&gt;

&lt;p&gt;Sometimes we just want to add toggle a single class on/off when a boolean is &lt;code&gt;true&lt;/code&gt; and nothing when it's &lt;code&gt;false&lt;/code&gt;. Using ternary operator it will look as below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;changingBoolean&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;flex w-2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can do better, enter &lt;strong&gt;object syntax&lt;/strong&gt; because eventually, everything is an object in javascript so why not.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/gkEwPJyg6CxtVQ5rzK/giphy-downsized.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/gkEwPJyg6CxtVQ5rzK/giphy-downsized.gif" alt="I object as in javascript everything is an object"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text-center&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;changingBoolean&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;flex w-2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also bind an object directly to &lt;em&gt;class&lt;/em&gt; instead of keeping it inside an array and it also supports multiple togglable classes just like an array.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt;
  &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute"&lt;/span&gt;
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"{ active: isActive, 'text-xl': largeText }"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;active&lt;/code&gt; is a simple string variable for class whereas &lt;code&gt;isActive&lt;/code&gt; and &lt;code&gt;largeText&lt;/code&gt; are boolean variables. Also if you noticed &lt;em&gt;class&lt;/em&gt; and &lt;em&gt;&lt;code&gt;:class&lt;/code&gt;&lt;/em&gt; can simultaneously exist on a single element „ÉÑ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#passing-in-objects"&gt;
  &lt;/a&gt;
  Passing in Objects
&lt;/h3&gt;

&lt;p&gt;We can also pass in reactive &lt;code&gt;array/object&lt;/code&gt; stored in our &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;computed&lt;/code&gt; to classes. This can be a more powerful pattern at times when you have to do multiple checks and toggling which when accommodated into HTML won't look good and readable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"classObject"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#modifying-child-classes"&gt;
  &lt;/a&gt;
  Modifying Child Classes
&lt;/h2&gt;

&lt;p&gt;Suppose we have a nice and shiny icon element we have specified several classes to it which works for most cases so we didn't bother making it a prop. But a time came when we had to change its colour in that case we want to pass down a new class to our child.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;my-icon&lt;/span&gt;
  &lt;span class="na"&gt;:class=&lt;/span&gt;&lt;span class="s"&gt;"text-blue-600"&lt;/span&gt;
&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the &lt;code&gt;:class&lt;/code&gt; will be appended at the end of the class inside of our component's parent. We can obviously also provide in a simple &lt;em&gt;&lt;code&gt;class&lt;/code&gt;&lt;/em&gt; too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#array-and-object-syntax-for-styles"&gt;
  &lt;/a&gt;
  Array and Object Syntax for Styles
&lt;/h2&gt;

&lt;p&gt;The array and object syntax for classes and style looks exactly identical except for a very minor change. It's not about the truthiness of variables anymore it's about assigning them to the right CSS property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; 
&lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"{ marginTop: marginTop + 'px', backgroundColor: infoColor }"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Doge Coin
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, we are assigning the &lt;code&gt;color&lt;/code&gt; property a dynamic value and a similar operation for &lt;code&gt;fontSize&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We can write properties as kebab case too just ensure to wrap them in quotes&lt;/li&gt;
&lt;li&gt;It can be more powerful to directly pass in an object to &lt;code&gt;style&lt;/code&gt; which is a more readable and cleaner method.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The purpose for array syntax in style reduces to allowing us to pass in multiple objects &lt;em&gt;( Duhhh that's what arrays do right :P )&lt;/em&gt; for style as passing a string to style works won't make much sense in the special syntax.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; 
&lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"[marginObject, backgroundObject]"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Doge Coin
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#bonus-treats"&gt;
  &lt;/a&gt;
  Bonus Treats
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/ZAXpoT2WEYO3u/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/ZAXpoT2WEYO3u/giphy.gif" alt="Bonus treats extra vue knowledge"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some CSS properties require us to use vendor prefixes. Vue will apply them for us implicitly but if you want to be explicit you can pass in multiple values for a single property through object syntax and providing an array of values. Vue will only render the last value in the array which the browser supports.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;:style=&lt;/span&gt;&lt;span class="s"&gt;"{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Thanks for reading! :). Please share your thoughts about the array and object syntax would you prefer them over strings?&lt;/p&gt;

&lt;p&gt;Reach out to me on &lt;a href="https://twitter.com/1108King"&gt;Twitter&lt;/a&gt; to share your feedback or for any queries. I'd be more than happy to help!&lt;/p&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>css</category>
    </item>
    <item>
      <title>HASP dongle emulator</title>
      <author>Oscar</author>
      <pubDate>Wed, 23 Jun 2021 08:27:08 +0000</pubDate>
      <link>https://dev.to/oscar37921395/hasp-dongle-emulator-4ioe</link>
      <guid>https://dev.to/oscar37921395/hasp-dongle-emulator-4ioe</guid>
      <description>&lt;p&gt;Put simply, a USB security dongle is a small gadget you can connect to your computer‚Äôs port and instantly get access to some protected hardware or software. More‚Äôs the pity, using them on a daily basis is not free from shortcomings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;All modern computers, especially laptops, have very few USB ports. Sometimes, that‚Äôs just not enough to plug in another license key that you need to launch that app you can‚Äôt follow up with your project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Some software distributors only supply one or two dongles with every license. If you have a sizable staff, having to share those keys will become a real problem. Plus, you‚Äôre going to spend a small fortune for replacements, every time one (or both) of those is damaged or just somehow disappears into thin air.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Accessing a USB security dongle from a virtual environment also involves some difficulties. Very few guest operating systems come with a built-in function that can help you connect to USB devices plugged into the host machine‚Äôs ports.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The good news is, all of these issues and many more can be easily resolved by applying HASP dongle emulator software.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-most-convenient-app-for-dongle-emulation"&gt;
  &lt;/a&gt;
  The most convenient app for dongle emulation
&lt;/h2&gt;

&lt;p&gt;If you‚Äôre after an easy-to-use failsafe dongle emulator, download &lt;a href="https://www.donglify.net/"&gt;Donglify&lt;/a&gt;. With its aid, you can make a HASP key accessible from multiple users‚Äô PCs in parallel, and from about anywhere, as long as that place has network coverage. Best of all, dongle emulation is perfectly legal and has absolutely nothing to do with any sort of cracking or unauthorized copying.&lt;/p&gt;

&lt;p&gt;Being a topline dongle emulator for HASP keys, Donglify creates fully functional virtual copies of a USB device you can attach to a whole host of remote operating systems, both real and virtual. Also, it is compatible with every dongle brand on the market, and specifically with all HASP security models.&lt;/p&gt;

&lt;p&gt;Caution! Don‚Äôt risk losing your license trying to crack a security dongle or make illegal copies. We strongly encourage going with fair virtual copies, created by dedicated dongle emulsion software, e.g. Donglify.&lt;/p&gt;

&lt;p&gt;Keep on reading and you‚Äôll find out how easy it is to use this specific dongle HASP emulator.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#easy-and-quick-usb-dongle-key-emulation"&gt;
  &lt;/a&gt;
  Easy and quick USB dongle key emulation
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s9HPkJ6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gwan8jfp7jz92m4uvex.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s9HPkJ6C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3gwan8jfp7jz92m4uvex.jpeg" alt="doglify interface"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;Donglify&lt;/strong&gt;, emulating a USB dongle key will only take you a few simple steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Start with &lt;a href="https://account.donglify.net/user/login/?_ga=2.238071232.1343017826.1623680568-144886415.1618985525"&gt;signing up for your own Donglify account&lt;/a&gt; on the official website.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then download the app and install it both on the machine that is directly connected to a security key (server) and on all the client PCs or virtual guest systems that you want to have an emulated copy of that key.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run &lt;strong&gt;Doinglify&lt;/strong&gt; on the server and use your login credential to enter your account.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once you click the ‚Äú+‚Äù icon, you‚Äôll see a list of shareable local USB devices. Find the security key you need and click ‚ÄúShare‚Äù next to its name. After that, the security dongle becomes available for emulation on every remote PC that needs it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, run the app and log into your account on a client machine or guest OS. Find your key on the list and click ‚ÄúConnect‚Äù next to its name.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That‚Äôs it! From this point on, the dongle key appears in the Device Manager of a remote PS or the guest OS, like if it was connected to that machine directly.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some top-of-the-league dongle options&lt;/strong&gt;&lt;br&gt;
Donglify has no limits as to the brand or model of supported dongle keys. Still and all, we‚Äôve prepared this the best of the best list for you to start out strong.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#sentinel-hl-pro"&gt;
  &lt;/a&gt;
  Sentinel HL Pro
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1nSQxYvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igpv0m8k4pcpfzvmk9wa.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1nSQxYvW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/igpv0m8k4pcpfzvmk9wa.jpeg" alt="Sentinel HL dongle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Sentinel HL Pro is known and loved for its top-tier security level. On top of that, it comes with a read-only memory and performs onboard read/write operations.&lt;/p&gt;

&lt;p&gt;Main specs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Up to 64,000 AES encryption keys to use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Over 39 features or apps can be protected with a single key.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;32 and 64-bit Windows-compatible ApOnChip (with upgrades).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;3 cryptographic algorithms: AES 128, ECC 163, and RSA 2048.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SmartCard chip for extra speed and efficiency.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remote firmware upgrades for the field devices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Complete match with the Sentinel HASP dongle emulator (i.a. Donglify).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hasp-hl-%E2%80%8B%E2%80%8Bpro"&gt;
  &lt;/a&gt;
  HASP HL ‚Äã‚ÄãPro
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Hj7JrH_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4zcg0v1i7xl51ecmm8e.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Hj7JrH_P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l4zcg0v1i7xl51ecmm8e.gif" alt="Sentinel HASP HL dongle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Sentinel HASP HL Pro is a multi-platform security dongle prevalently used for licensed software protection.&lt;/p&gt;

&lt;p&gt;Main specs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Over 39 features or apps protected with a single key.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Works in Windows, Linux, and Mac.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;128-bit AES encryption.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Remote firmware upgrades for the field devices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;112 bytes of protected memory with 3 config options: protected read/write, read-only, and backward compatibility.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#safenet-etoken-5110"&gt;
  &lt;/a&gt;
  SafeNet eToken 5110
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--udJLe8q_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tefs6et9nktggnsnorh7.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--udJLe8q_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tefs6et9nktggnsnorh7.jpeg" alt="SafeNet eToken 5110 dongle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The SafeNet eToken 5110 with its two-factor authentication is widely used by electronic commerce companies to secure their online and network assets, and comply with data security and privacy regulations.&lt;/p&gt;

&lt;p&gt;Main specs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;No reader device is needed for portable USB tokens.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Digital signatures and pre-boot authentication for enhanced security.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;2 versions: Common Criteria and FIPS-certified.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Secure access to remote digital assets.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Can be used with no technical knowledge or specific training.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#codemeter-cmstick"&gt;
  &lt;/a&gt;
  CodeMeter CmStick
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oOUJU5wn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ip6t9gge03niqa5zl29c.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oOUJU5wn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ip6t9gge03niqa5zl29c.jpeg" alt="CodeMeter CmStick dongle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The CodeMeter CmStick has 328 Kb of memory and can store multiple licenses at the same time. Mostly used in scenarios when a host of license-protected apps are distributed by the same company as a package deal.&lt;/p&gt;

&lt;p&gt;Main specs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Infineon SLM97 smart card chip.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Hyperstone U9 flash controller for robust data protection.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Patented hymap firmware to ensure zero power loss.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Encrypted CmSecureDisk partition for software-generated and config data protection.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Full compatibility with CodeMeter dongle emulator (i.a. Donglify).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#aladdin-hasp4-dongle"&gt;
  &lt;/a&gt;
  Aladdin HASP4 Dongle
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NgpMes6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1anf334i2i20rfe818co.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NgpMes6Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1anf334i2i20rfe818co.jpeg" alt="Aladdin HASP Dongle"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Aladdin HASP Dongle was originally created for Parallel Ports (LPT) and is still extremely popular with software developers, e.g. Time Limit and Module Definition, that use those dongles as MCU chips and EPROOM.&lt;/p&gt;

&lt;p&gt;Key features of Aladdin HASP Dongle Emulator:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Digitally signed for smooth functioning in 64 bit Windows systems.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If there is a Time Limit, it can be removed completely.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;All modules connected to the dongle will be defined in the software you use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Optional hardware reproduction. ( Hardware Clone ).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Aladdin USB dongle emulator is compatible with VMWare, Virtualbox, etc.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>dongle</category>
      <category>usbkey</category>
      <category>emulator</category>
    </item>
  </channel>
</rss>
