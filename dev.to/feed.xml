<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Remote onboarding with the buddy system</title>
      <author>Jelle Smeets</author>
      <pubDate>Wed, 14 Jul 2021 10:45:34 +0000</pubDate>
      <link>https://dev.to/smeetsmeister/remote-onboarding-with-the-buddy-system-2kfk</link>
      <guid>https://dev.to/smeetsmeister/remote-onboarding-with-the-buddy-system-2kfk</guid>
      <description>&lt;p&gt;You can determine how good your documentation is by how fast a new developer is up to speed with your projects. Making sure a new developer feels at home and gets brought up to speed requires time and effort. This can be especially hard in remote times. How can you make sure a new hire does not get lost in the remote onboarding? Simple! Use the buddy system.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-an-onboarding-buddy"&gt;
  &lt;/a&gt;
  What is an onboarding buddy?
&lt;/h3&gt;

&lt;p&gt;An onboarding buddy is a person that is the first point of contact for the new hire. Their primary goal is to make sure the new hire gets all the information they need.&lt;/p&gt;

&lt;p&gt;One of the most important parts of the buddy is being the first point of contact. As a new hire, you have no idea who to contact for what. If you are at the office you can take a walk through the office and meet people. This is more difficult in a remote setting. The buddies goal is to help the new hire with this struggle. Point them to the right people.&lt;/p&gt;

&lt;p&gt;The next part of the duties of a buddy extends from being the point of contact. Making introductions is the next step here. If you have not met any coworkers it can be quite challenging to schedule a meeting with them. As a buddy introduce the new hire to all coworkers they will collaborate with.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5LoYcdB5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boddrtj6nq3l1wfg2vaj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5LoYcdB5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/boddrtj6nq3l1wfg2vaj.jpg" alt="Introductions being made"&gt;&lt;/a&gt;&lt;br&gt;
Introductions being made&lt;/p&gt;

&lt;p&gt;Every business has its own context. For an outsider, some decisions that were made will make no sense. At my current company, we have some terminology that can be quite confusing. New hires usually struggle with this if someone did not explain it properly. Luckily as a buddy, you can provide the business context on why things are the way they are.&lt;/p&gt;

&lt;p&gt;Even if you have the best documentation, new hires will still have questions. Make sure you can explain how the project works. Help them set up their local environments. And guide them towards a beginner-friendly bug ticket to pick up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#in-conclusion"&gt;
  &lt;/a&gt;
  In conclusion
&lt;/h3&gt;

&lt;p&gt;Onboarding during a pandemic is more challenging than usual. An onboarding buddy is a great way to make sure a new hire gets all the help and support they need. Or as we say in the Netherlands "A good start is half the work". With an onboarding buddy, you make sure your new hire is set up for success at your company!&lt;/p&gt;

&lt;p&gt;If you are interested in more of my blog posts, check out the &lt;a href="https://blog.jellesmeets.nl/articles/the-5-stages-of-conflict-and-how-to-successfully-resolve-them/"&gt;5 stages of conflict and how to resolve them&lt;/a&gt; blog post.&lt;/p&gt;

</description>
      <category>career</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>learning</category>
    </item>
    <item>
      <title>I'm Changing How I Review Code</title>
      <author>Dan Goslen</author>
      <pubDate>Wed, 14 Jul 2021 10:43:07 +0000</pubDate>
      <link>https://dev.to/dangoslen/i-m-changing-how-i-review-code-328g</link>
      <guid>https://dev.to/dangoslen/i-m-changing-how-i-review-code-328g</guid>
      <description>&lt;p&gt;I'm a big advocate for code reviews. I've written about my experiences reviewing code, including lists of dos and don'ts, &lt;a href="https://dangoslen.me/blog/surviving-your-first-code-review/"&gt;how to survive your first code review&lt;/a&gt;, and &lt;a href="https://dangoslen.me/blog/whats-the-point-to-code-reviews-anyway/"&gt;why we should review code at all&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My views have been mainly shaped by my experience with a particular kind of code review - the pull request. Like many devs, I've grown accustomed to the pull request model to help facilitate reviews. While it isn't perfect, I've always found it to be a great tool and overall an improvement to formal code review processes or reviews over email.&lt;/p&gt;

&lt;p&gt;Recently, though, I've been seeing thoughts expressing a different sentiment. Many devs are starting to become frustrated with the &lt;a href="https://jessitron.com/2021/03/27/those-pesky-pull-request-reviews/"&gt;pull request model&lt;/a&gt;. There is a sense that pull requests actually might make it &lt;em&gt;too&lt;/em&gt; easy to comment on a line of code. This ease might be leading to the conflicts and hyper-zealous commenting that frustrates many in our industry. &lt;/p&gt;

&lt;p&gt;Another common critique is that the pull requests encourage reviewers to only look at the code. They never even pull down the changes they are reviewing! To be completely transparent, I'm guilty of that myself.&lt;/p&gt;

&lt;p&gt;After reading the article and seeing some related ideas via Twitter, I wondered: are there better ways that I could review code? What could I do differently? &lt;/p&gt;

&lt;p&gt;After asking, I've decided to start making some changes in how I review code. They've been helping me recently, so I think they could help you and your team as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#commenting-on-code-vs-collaborating-on-code"&gt;
  &lt;/a&gt;
  Commenting on Code vs. Collaborating on Code
&lt;/h2&gt;

&lt;p&gt;One of the top thoughts that made me start questioning how I review code comes from the &lt;a href="https://jessitron.com/2021/03/27/those-pesky-pull-request-reviews/"&gt;article above&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pull requests are an improvement on working alone. But not on working together. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That struck a chord. Indeed, pull requests &lt;em&gt;aren't&lt;/em&gt; the primary way to collaborate with people after all.&lt;/p&gt;

&lt;p&gt;Collaborating on code is vital to a team's ability to maintain a codebase. If a single member of a team is left to write an entire codebase without working with other team members, there is a high probability that the rest of the team won't be able to contribute to it after a while. Worse, if left alone, a single team member might even get things wrong or be unable to solve a problem. Therefore, collaborating early and often is a good idea.&lt;/p&gt;

&lt;p&gt;The next question that arises is this: how &lt;em&gt;does&lt;/em&gt; a team collaborate on code? Further, can a team collaborate too early? Too often? &lt;/p&gt;

&lt;p&gt;Many teams seem to have concluded that a pull request is a great place to have collaboration. I don't think they are wrong. First, a team member feels ready to share a version of their code with the rest of the team for direct feedback. Then, like an author writing a book, they submit it for a first review to get feedback. The rest act as editors, ready to help get the draft ready to print.&lt;/p&gt;

&lt;p&gt;There isn't anything wrong with teams seeing pull requests as a place for collaborating. The problem is when teams think collaboration is &lt;em&gt;restricted&lt;/em&gt; only to the code review process. &lt;/p&gt;

&lt;p&gt;Teams should be working together on problems, ideas, and code well before code is submitted for review. Mentors should be advising mentees, peers should be offering help to each other, and pair programming or debugging sessions should be routine. If an author were to send the first draft to their editor without disclosing what the book is about, it would make it harder for the editor. The editor now has more they need to understand to give useful feedback. As a result, the publication date is likely to get pushed later than anticipated.&lt;/p&gt;

&lt;p&gt;Genuine collaboration is more than just leaving a comment or a suggestion. It's discussing alternative solutions, prodding at requirements, and having real-time feedback loops with your team.&lt;/p&gt;

&lt;p&gt;I will be working towards making this form of collaboration more common within my team. I'm hoping to move us beyond collaboration via comments and get back to real-time collaboration.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-the-code"&gt;
  &lt;/a&gt;
  Run. The. Code.
&lt;/h2&gt;

&lt;p&gt;Commenting on and rejecting a pull request without ever running or stepping through the changes made sounds silly when said directly. But many developers - including me! - do this all the time.&lt;/p&gt;

&lt;p&gt;As engineers, we shouldn't evaluate code only by how "clean" it is or how wonderfully abstracted it is. Instead, we still need to measure code by how well it does what it is supposed to do - deliver some value when it runs. &lt;/p&gt;

&lt;p&gt;To drive this point home, when was the last time you looked at Google's source code for Google Search? If you did see it, would it change how well you think it works as a product? Probably not.&lt;/p&gt;

&lt;p&gt;I'm not trying to be hyper-reductionistic here. The quality of code does matter! It should be clean, crisp, mutable, etc. &lt;/p&gt;

&lt;p&gt;But part of what makes that code good is how well it solves a problem. Does it do what it needs to do to meet requirements? Will the end product be better? At the least, all code needs to make the end product better.&lt;/p&gt;

&lt;p&gt;What is the best way to see if the code makes the product better? You have to run it. Treat a pull request as a chance to do a mini-demo of the added or fixed functionality. Use it. Poke at it. Heck, even &lt;em&gt;test&lt;/em&gt; it yourself! &lt;/p&gt;

&lt;p&gt;I've been incredibly guilty about this. I tend to trust our automation that the code changes produced the desired behavior changes without observing the behavior myself! I want to start changing this and running code more frequently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-navigating-and-less-backseat-driving"&gt;
  &lt;/a&gt;
  More Navigating and Less Backseat Driving
&lt;/h2&gt;

&lt;p&gt;When a problem (or even a difference of opinion) is spotted in code, it can be easy for a reviewer to recommend a concrete change right then and there. For example, they might include a block of code in their comment or add a GitHub suggestion of their improved implementation. They might even include citations and links.&lt;/p&gt;

&lt;p&gt;And they do this for every issue they see.&lt;/p&gt;

&lt;p&gt;While there are times adding such comments can be appropriate, it often can feel like the reviewer is attempting to take control. They are dictating what the code &lt;em&gt;should&lt;/em&gt; be rather than providing feedback on the written code. The reviewer is giving directions as if they were a backseat driver. And no one likes backseat drivers.&lt;/p&gt;

&lt;p&gt;Great code reviewers know the difference between being a backseat driver and being a navigator. Both give directions, but one has the destination in mind while the other is trying to control the driver. A navigator knows multiple ways to reach a destination, but a backseat driver complains when the driver takes Martin Street instead of Hampton street - it could have saved one whole minute!&lt;/p&gt;

&lt;p&gt;What does a navigator look like in a code review? Instead of focusing on how to change the code, they are focused on why the code needs changing. They care more about the final outcome rather than the concrete classes that are written. The navigator is primarily focused on understanding where they need to go and to help them get there.&lt;/p&gt;

&lt;p&gt;I want to be more of a navigator. Not every single detail needs commenting, and not every difference of opinion needs to be shared. I want to review code in such a way that I'm helping rather than controlling.&lt;/p&gt;




&lt;p&gt;The goal of all of this is really more than becoming a better code reviewer. It's about becoming a better teammate. Knowledge work isn't just an individual grinding away on an intense thought or task anymore. Knowledge work - or at least meaningful knowledge work - tends to be accomplished by teams.&lt;/p&gt;

&lt;p&gt;And I want to be a great teammate. &lt;/p&gt;




&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://dangoslen.me/blog/changing-how-i-review-code/"&gt;https://dangoslen.me&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@gallarotti?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Francesco Gallarotti&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/prune?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>codereview</category>
      <category>career</category>
      <category>teamwork</category>
    </item>
    <item>
      <title>🌞 Java I/O with java.io Package</title>
      <author>Sahil Bondre</author>
      <pubDate>Wed, 14 Jul 2021 10:30:10 +0000</pubDate>
      <link>https://dev.to/godcrampy/java-i-o-with-java-io-package-lm9</link>
      <guid>https://dev.to/godcrampy/java-i-o-with-java-io-package-lm9</guid>
      <description>&lt;p&gt;In this video, we'll look at the java.io package. This package implements input and output through streams of data.&lt;/p&gt;

&lt;p&gt;I'll go over various classes in the java.io package that allows us to perform operations on data streams. I'll explain the hierarchy of these classes and show how to use them together in a program to perform IO.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/f7PrLM2d6HQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://docs.oracle.com/javase/8/docs/api/java/io/package-summary.html"&gt;Oracle java.io Documentation&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;And that is it, folks. Let me know your takeaways from the video. If you have any other video or article ideas, comment on them too. Oh, BTW, do you want to learn Bash? Here's my crash-course post on Shell Scripting:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/godcrampy" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EmTQ5oXB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--DjAO4fT3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/205514/c3ddf55e-e4f9-463e-816a-87d085f9e963.png" alt="godcrampy"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/godcrampy/the-missing-shell-scripting-crash-course-37mk" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;🚀 The Missing Shell Scripting Crash Course&lt;/h2&gt;
      &lt;h3&gt;Sahil Bondre ・ Apr 21 '20 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#bash&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#linux&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;





&lt;p&gt;🌟 I made some &lt;a href="https://github.com/godcrampy/cheat-sheets"&gt;Cheat-Sheets&lt;/a&gt;&lt;br&gt;
🚀 Stalk me on &lt;a href="https://www.youtube.com/c/SahilBondre"&gt;Youtube&lt;/a&gt; | &lt;a href="//github.com/godcrampy"&gt;Github&lt;/a&gt; | &lt;a href="//twitter.com/godcrampy"&gt;Twitter&lt;/a&gt; | &lt;a href="//sahil.surge.sh"&gt;Website&lt;/a&gt;&lt;br&gt;
😄 Have a wonderful day!&lt;/p&gt;

</description>
      <category>java</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How Video Games Improve Your Coding Skills?</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Wed, 14 Jul 2021 10:24:19 +0000</pubDate>
      <link>https://dev.to/unitybuddy/how-video-games-improve-your-coding-skills-2j90</link>
      <guid>https://dev.to/unitybuddy/how-video-games-improve-your-coding-skills-2j90</guid>
      <description>&lt;p&gt;Hello, buddies! Playing video games is a great way to unwind after a hard day at work. More so, many software developers name playing video games among their hobbies. Even Zuckerberg claimed that he had started to learn programming because he was interested in the inner workings of his favorite games. So today we're going to see How Video Games Can Improve Our Coding Skills!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#boost-learning-and-memory"&gt;
  &lt;/a&gt;
  Boost Learning and Memory
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kMYRxnB8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620737061760/_s6HRr01E.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kMYRxnB8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620737061760/_s6HRr01E.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
A lot of video games like Among Us require players to learn, memorize, and apply various tricks. Players also need to remember all the instructions given at the start of the game. These tricks are of great importance when it comes to programming.&lt;/p&gt;

&lt;p&gt;Programmers must be able to remember the syntax and related symbols of the coding language. Memorizing these tricks will be able to save you the time and hassle of having to refer to external links over and over again.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cognitive-strength"&gt;
  &lt;/a&gt;
  Cognitive strength
&lt;/h2&gt;

&lt;p&gt;One of the effects of video games is strengthening your attention. Selective attention defines your ability to focus on what’s relevant and filter out irrelevant information. When reviewing lines of code in an attempt to spot the errors, this kind of attention helps you to be more observant.&lt;/p&gt;

&lt;p&gt;At the end of the day, our productivity depends on the effective use of brain power. In video games, especially action-packed ones like Overwatch or Counter Strike, you learn how to scan efficiently for a target, snap attention back after finding it, and focusing on several targets at the same time. This may be the reason for @&lt;a href="https://dev.to@victoria"&gt;Victoria Lo&lt;/a&gt; to play Overwatch for a long time!😂😂&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#problem-solving"&gt;
  &lt;/a&gt;
  Problem solving
&lt;/h2&gt;

&lt;p&gt;Making critical decisions fast is what defines a problem solver with great programming skills. In games where decision making is often reduced to seconds, a player needs to use their brain power to the fullest before making the next step.&lt;/p&gt;

&lt;p&gt;So do video games improve problem solving skills? Some of them might. Games like Heroes of Might and Magic which involve problem solving train your cognitive flexibility because they offer to solve fictitious problems you are not likely to face in real life.&lt;/p&gt;

&lt;p&gt;In programming, where you often need to approach a real-life problem with a software solution and to look at it from different angles, such flexibility and creativity will sure come in handy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#teamwork"&gt;
  &lt;/a&gt;
  Teamwork
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--92Zq8TDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620736930486/mFSE1e6ml.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--92Zq8TDs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620736930486/mFSE1e6ml.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
In team games like Dota2 and World of Warcraft, team effort is a necessary condition to win a game. Studies found that online team games like these help their aficionados become more valuable team players at work. However, the degree at which the virtual teamwork is translated to real life is unclear.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#improve-multitasking-skills"&gt;
  &lt;/a&gt;
  Improve Multitasking Skills
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fpxpgaNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620736711241/CEjveaxKt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fpxpgaNH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620736711241/CEjveaxKt.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
There exist some video games(specially action games) that force you to multitask. These are games that oblige you to focus your attention on many different tasks at once.&lt;/p&gt;

&lt;p&gt;For example, if the game involves fighting, a player will have to keep monitoring the energy levels of fighters while simultaneously attacking enemies. Without excellent multitasking skills, one is highly likely to fall on the losing end.&lt;/p&gt;

&lt;p&gt;Programming will also call for excellent multitasking skills to create solutions to real-world problems. Programmers must be keen and observant to whatever is taking place on their screen and must be able to write code while simultaneously checking for errors.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#improve-concentration-and-attentiveness"&gt;
  &lt;/a&gt;
  Improve Concentration and Attentiveness
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dm1WPmNI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620736826108/9cT6Z-frq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dm1WPmNI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620736826108/9cT6Z-frq.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
A lot of action-packed video games need the highest levels of concentration and attention. The effects of losing concentration even for one second can be costly.&lt;/p&gt;

&lt;p&gt;Players who remain attentive throughout the gaming session have higher chances of winning. The same case applies to coding.&lt;/p&gt;

&lt;p&gt;Coding will require you to concentrate on writing code and pinpointing coding errors to come up with tangible software. Gaming enhances your attentiveness so that you can transfer the same level of concentration to programming and improve your productivity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nurture-and-mold-social-skills"&gt;
  &lt;/a&gt;
  Nurture and Mold Social Skills
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5oOpECvl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620736994556/qoZAPbT7d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5oOpECvl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620736994556/qoZAPbT7d.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
There are certain video games whose multiplayer feature calls for a team effort to win the game. Team games like World of Warcraft, Among Us and Dota2 enable players to interact with each other in a virtual world.&lt;/p&gt;

&lt;p&gt;After spending several hours in front of your gaming PC, you will have improved your social skills because of their interactive nature. You will also be able to create a new social group of tech-savvy people whom you can ask about some coding language syntax whenever you need help.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mr-unity-buddy.hashnode.dev/how-video-games-improve-your-coding-skills"&gt;Originally&lt;/a&gt; published on Hashnode&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>10+ Hot Summer Deals for Web Developers and Web Designers</title>
      <author>Creative Tim</author>
      <pubDate>Wed, 14 Jul 2021 10:02:58 +0000</pubDate>
      <link>https://dev.to/creativetim_official/10-hot-summer-deals-for-web-developers-and-web-designers-2k65</link>
      <guid>https://dev.to/creativetim_official/10-hot-summer-deals-for-web-developers-and-web-designers-2k65</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Disclaimer: The list might contain affiliate links. Thanks for reading!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Summer is the time for vacations and fun, but it is also the time for amazing deals and huge discounts. Of course, we know traveling is your priority during the hot season, but keep in mind that many brands are bringing forth great deals for their customers.&lt;/p&gt;

&lt;p&gt;If you're interested in such offers, you should set some savings aside and purchase resources for future projects and work. To help you in your quest for web development and web design summer deals, we've put together a list of the hottest offers from well-known brands in the niche. Read on to discover our picks!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creative-tim-ui-kits-and-dashboards-up-to-90-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.creative-tim.com/campaign"&gt;Creative Tim – UI Kits and Dashboards – up to 90% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.creative-tim.com/campaign"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0owUlA2m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/01---CreativeTim-2.jpg" alt="Creative Tim – UI Kits and Dashboards – up to 90% OFF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Celebrate Summer and start the season with Creative Tim's fresh offer! Take advantage of 66 Front-end &amp;amp; Back-end Premium Products and save up to 90% OFF. The 8 Special Stacks are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The Summer Full Stack - 66 Premium Products&lt;/li&gt;
&lt;li&gt;React Full Stack - 17 Premium Products&lt;/li&gt;
&lt;li&gt;Vue Full Stack - 15 Premium Products&lt;/li&gt;
&lt;li&gt;Angular Stack- 10 Premium Products&lt;/li&gt;
&lt;li&gt;Laravel Full Stack - 16 Premium Products&lt;/li&gt;
&lt;li&gt;Bootstrap Stack- 19 Premium Products&lt;/li&gt;
&lt;li&gt;React Native and Flutter Stack - 6 Premium Products&lt;/li&gt;
&lt;li&gt;Figma Collection - 5 Premium Products&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All the summer stacks come with four types of licenses available: Freelancer, Startup, Company, and Enterprise.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount: up to 90% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coupon Code: not needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.creative-tim.com/campaign"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#themesberg-bootstrap-ui-kits-and-dashboards-90-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://a.paddle.com/v2/click/113942/122967?link=3364"&gt;Themesberg – Bootstrap UI Kits and Dashboards – 90% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://a.paddle.com/v2/click/113942/122967?link=3364"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7guskSh---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/02---Themesberg-1.png" alt="Themesberg – Bootstrap UI Kits and Dashboards – 90% OFF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our partners from Themesberg have started their Summer Sale with 90% off! You can get a bundle of 7 Premium Themes Powered by Bootstrap CSS starting from only $79. You get access to the following themes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Pixel Pro - Premium Bootstrap 5 UI KIT&lt;/li&gt;
&lt;li&gt;Volt Pro - Premium Bootstrap 5 Dashboard&lt;/li&gt;
&lt;li&gt;Neumorphism UI PRO Bootstrap&lt;/li&gt;
&lt;li&gt;Rocket - SaaS Bootstrap Template&lt;/li&gt;
&lt;li&gt;Spaces - Listing Bootstrap Template&lt;/li&gt;
&lt;li&gt;Leaf - Nonprofit Environmental Bootstrap 4 Template&lt;/li&gt;
&lt;li&gt;Leo - Agency Bootstrap 4 Template&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Only a limited number of 150 orders will be available, with discounts going from 84% up to 96% for all license types. Don't miss out on their special offer!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount: 90% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coupon Code: not needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://a.paddle.com/v2/click/113942/122967?link=3364"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#appseed-ui-kits-and-dashboards-60-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://appseed.us/bundles"&gt;AppSeed – UI Kits and Dashboards – 60% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://appseed.us/bundles"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_mPA0UqO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/03---Appseed-1.png" alt="AppSeed – UI Kits and Dashboards – 60% OFF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AppSeed's deals for this Summer include 3 Django bundles and 3 Flask bundles with prices ranging from $129 to $199. These special bundles include free updates for six months and 24/7 live Support via Discord.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount: 60% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coupon Code: not needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://appseed.us/bundles"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#coded-themes-admin-templates-60-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://codedthemes.com/bootstrap-mega-bundle"&gt;Coded Themes – Admin Templates – 60% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://codedthemes.com/bootstrap-mega-bundle"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bdOE0Yk7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/04---CodedThemes-1.png" alt="Coded Themes – Admin Templates – 60% OFF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodedThemes brings Bootstrap 4 Mega Bundle Admin Templates, a collection of 5+ Premium Admin Templates with prices ranging from $99 to $199 depending on the license type (Single Use, Multiple Use, or Extended Use). If you purchase the Admin Templates Mega Bundle at this special discounted price, you get a 140 PSD Templates Bundle for free!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount: 60% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coupon Code: not needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://codedthemes.com/bootstrap-mega-bundle"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#bootstrapdash-ui-kits-and-dashboards-up-to-85-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.bootstrapdash.com/mega-bundle"&gt;Bootstrapdash – UI Kits and Dashboards – up to 85% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.bootstrapdash.com/mega-bundle"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tuPB3Yz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/05---Bootstrapdash-1.png" alt="Bootstrapdash – UI Kits and Dashboards – up to 85% OFF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This Summer, Bootstrapdash's offer consists of a bundle of 50+ premium templates with 100+ dashboard layouts, UI kits, and more, at an 85% discount. The dashboards in this Bundle are specialized for marketing, e-commerce, analytics, and others. Bootstrapdash's Bundle is available with two different plans: Developer plan: includes multiple users and extended support; Extended plan: recommended for large-scale uses and extended redistribution rights.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount: 85% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coupon Code: not needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.bootstrapdash.com/mega-bundle"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#wrappixel-ui-kits-and-dashboards-up-to-95-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.wrappixel.com/templates/big-bundle/"&gt;Wrappixel – UI Kits and Dashboards – up to 95% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.wrappixel.com/templates/big-bundle/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uRaryb2t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/06---Wrappixel-1.png" alt="Wrappixel – UI Kits and Dashboards – up to 95% OFF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wrappixel comes with this Bundle of Premium Bootstrap, Angular, React, and Vuejs, containing many dashboard templates and a UI Kit. The Bundle comes with four types of licenses available: Single Use, Multiple Use, Extended Use, and Multi Extended Use and includes the following templates:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;10 Bootstrap Admin Dashboard Templates&lt;/li&gt;
&lt;li&gt;8 Angular Admin Dashboard Templates&lt;/li&gt;
&lt;li&gt;4 React Admin Dashboard Templates&lt;/li&gt;
&lt;li&gt;2 Vuejs Admin Dashboard Templates&lt;/li&gt;
&lt;li&gt;WrapKit Complete UI Kit&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Discount: 95% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coupon Code: not needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.wrappixel.com/templates/big-bundle/"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#instamobile-react-native-templates-up-to-90-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://www.instamobile.io/app-templates/react-native-mega-bundle/"&gt;Instamobile – React Native Templates – up to 90% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.instamobile.io/app-templates/react-native-mega-bundle/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WZrPDmVN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/07---Instamobile-1.png" alt="Instamobile – React Native Templates – up to 90% OFF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Instamobile's deal for the Summer is a React Native Mega Bundle that allows you to save $7,000 and gain access to ALL their React Native templates. The Bundle includes 18 fully functional mobile app codebases, ready to be published to the Google Play Store and App Store. The deal includes free updates for one year and one developer license for each mobile app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount: 90% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coupon Code: not needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.instamobile.io/app-templates/react-native-mega-bundle/"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#themewagon-html-templates-up-to-80-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://themewagon.com/themes/bundle/"&gt;Themewagon – HTML Templates – up to 80% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://themewagon.com/themes/bundle/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--InJB0qGQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/08---Themewagon-1.jpeg" alt="Themewagon – HTML Templates – up to 80% OFF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At Themewagon, you can take advantage of one Bundle of 16 HTML5 templates with an 80% discount. The Bundle comes with two types of licenses available: Single License and Unlimited License. Both license types include:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Royalty-free use&lt;/li&gt;
&lt;li&gt;12 months priority support&lt;/li&gt;
&lt;li&gt;Use in client project&lt;/li&gt;
&lt;li&gt;100% satisfaction money-back guarantee&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Discount: 80% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coupon Code: not needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://themewagon.com/themes/bundle/"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#themefisher-html-and-hugo-templates-85-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://themefisher.com/bundle"&gt;Themefisher - HTML and Hugo Templates - 85% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://themefisher.com/bundle"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kBQNNWjR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/09---Themefisher-1.png" alt="Themefisher - HTML and Hugo Templates - 85% OFF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Themefisher has got 2 Bundle Offers for the Summer, with up to 85% off: The Bootstrap &amp;amp; HTML5 Bundle includes 36+ Bootstrap templates for only $49. That rounds it up to around $2 per template. If you purchase the templates individually, you can pay up to $20 per theme. The Hugo Mega bundle includes 10+ Hugo themes for only $99. If you purchase the templates individually, each theme will cost $49.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount: 85% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coupon Code: not needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://themefisher.com/bundle"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#designmodo-website-and-email-design-tools-30-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://designmodo.com/"&gt;Designmodo – Website and Email Design Tools – 30% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://designmodo.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n0QNGmIa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/10---Designmodo-1.png" alt="Designmodo – Website and Email Design Tools – 30% OFF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This Summer, you can save 30% on your next purchase on Designmodo. Try the full functionality of their apps at a discounted price. Just use the coupon code SUMMER50 during checkout.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Discount: 30% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coupon Code: SUMMER30&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://designmodo.com/"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#epic-react-codealong-interactive-workshops-25-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://epicreact.dev/"&gt;Epic React - Code-along Interactive Workshops - 25% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://epicreact.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FBSENj1L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/epic_react.png" alt="Epic React - Code-along Interactive Workshops - 25% OFF"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Epic React's Summer deal allows you to save 25% on a series of React code-along interactive workshops. The Epic React learning resources are suitable for complete beginners since they start with React basics and take you to well-tested application architecture. This is hands-on practice coding in a real development environment. The course was created by &lt;a href="https://kentcdodds.com/"&gt;Ken C. Dodds&lt;/a&gt; and includes the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;19 hours of concise in-depth video training&lt;/li&gt;
&lt;li&gt;Interactive self-paced workshop exercises&lt;/li&gt;
&lt;li&gt;10 full hours of insightful video conversations with React experts&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Discount: 25% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Availability: July 13, 2021&lt;/p&gt;

&lt;p&gt;Coupon Code: not needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://epicreact.dev/"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#coreui-admin-templates-and-ui-components-70-off"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;a href="https://coreui.io/pro/#pricing-new"&gt;CoreUI - Admin Templates and UI Components - 70% OFF&lt;/a&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://coreui.io/pro/#pricing-new"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--evTsTPz9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.creative-tim.com/blog/content/images/2021/07/12---coreui-1.png" alt="CoreUI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CoreUI is offering a 70% discount on the Team Bundle License for its Leading Admin Dashboard Template and UI Component Suite. The Suite includes 9 Admin Templates, 6 UI Component Libraries, and Design Files. This special price license includes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Unlimited project use for 1 developer&lt;/li&gt;
&lt;li&gt;Human Tech Standard Support for 6 months&lt;/li&gt;
&lt;li&gt;Free access to updates for 12 months&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Discount: 70% OFF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coupon Code: not needed&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://coreui.io/pro/#pricing-new"&gt;GET THE OFFER&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Final Thoughts&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;We are sure you're going to be tempted to take advantage of at least one of these fantastic Summer deals for web developers and web designers. We know we are. If you still have financial resources after planning your summer vacations, you should definitely invest in one of these offers!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>deals</category>
      <category>webdesign</category>
    </item>
    <item>
      <title>Laravel Vs CodeIgniter to Choose For Your Next Project</title>
      <author>IT Path Solutions</author>
      <pubDate>Wed, 14 Jul 2021 09:55:39 +0000</pubDate>
      <link>https://dev.to/itpathsolutions/laravel-vs-codeigniter-to-choose-for-your-next-project-3m72</link>
      <guid>https://dev.to/itpathsolutions/laravel-vs-codeigniter-to-choose-for-your-next-project-3m72</guid>
      <description>&lt;p&gt;Every start-up and enterprise effort to have an interactive and well-structured website. For a startup business, the website gives the platform to share online their product and service in the market. They received insight by tracking audience behavior. For the long term, A website assists in an effective way to increase business popularity on digital platforms, boost brand reputations and enhance visibility 24*7 to their target audience. In case If you are planning to developed and running your own domain today, it can get a bit overwhelming.&lt;/p&gt;

&lt;p&gt;Currently, Many Web development tools are available in the market you can utilize them. one of the most popular and favorable open-source is PHP. It provides many tremendous frameworks to build dynamic, customize, and e-commerce websites without any hassle.&lt;/p&gt;

&lt;p&gt;PHP stands for hypertext Preprocessor, it is widely used as an open-source and server-side scripting language processor. It provides around 80% open-source framework for every start-up and large enterprise. PHP is coherent with all large-scale operating systems such as Windows, Linux, and Mac Os. It performs many tasks like server-side scripting, email sending, command-line scripting, writing desktop applications, and so on.&lt;/p&gt;

&lt;p&gt;With the PHP, never stop the popularity and fame of this language. We discuss about the two most popular robust frameworks Laravel and CodeIgniter which are provided by PHP.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LiTZ-wAN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ywcjhyn5ww60xjrqzxq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LiTZ-wAN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4ywcjhyn5ww60xjrqzxq.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Introduction of Laravel&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Laravel is a more admire open-source &lt;a href="https://www.itpathsolutions.com/hire-technology/hire-php-developer/"&gt;PHP framework&lt;/a&gt;. As of today, these frameworks keep 0.29% of the market share. And around 68,500 websites build worldwide by Laravel frameworks. These frameworks handle a bunch of tasks such as server-side routing, HTML authentication, readying template system, catching, etc.&lt;/p&gt;

&lt;p&gt;This framework provides PHP components and many libraries that permit to developer create web applications easily way. Laravel offers the best wide range of features such as personalized back-end logic, template engine, MVC architecture support, full-stack app, database migration, artisan, security, and unit testing. It helps then automate repetitive jobs with elegant and expressive syntax. Hence Laravel saves the developer valuable time.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Why Use of Laravel?&lt;/b&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;it is supported with large database management systems such as Mysql, SQL-Server, and PostgreSQL.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It offers a bunch of features that help developers save their manual effort and time spent on coding.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It has a great interface as an artisan command-line that is used for performing many tasks such as database management and migration.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;it debugs easily sample code line interface&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;it provides an effectively well-document framework based on a modular package system.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Laravel is known the most popular open-source framework in the market, which means, the &lt;a href="https://www.itpathsolutions.com/hire-dedicated-developers/"&gt;laravel developer&lt;/a&gt; community is enormous and thriving.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is no doubt fear, the developer should more focus on building web applications and less time waste in choosing frameworks, tools, and libraries. Laravel provides more efficient components, tools, and libraries for developers. So developers have become more productive. Today Most Popular brands developed their web portals using the laravel framework.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Name of the popular brand build by Laravel&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;BBC&lt;/p&gt;

&lt;p&gt;Crowdcube&lt;/p&gt;

&lt;p&gt;Pfizer&lt;/p&gt;

&lt;p&gt;9GAG&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Introduction of Codeigniter?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;CodeIgniter is an extremely simple lightweight PHP framework. It provides a simple rich toolkit that helps to create full-fledged and dynamic web applications. It supports MVC architecture to hold the PHP, app design, and run database code parallelly. CodeIgnitor provides a bunch of libraries for performing various operations such as sending emails, uploading files, managing sessions, etc&lt;/p&gt;

&lt;p&gt;As of today, these frameworks keep 0.21% of the market share. And around 50,000 websites build worldwide by CodeIgniter frameworks. It has superior data security procedures and so it is often considered the top framework in the market for creating a dynamic website utilizing PHP.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Why use CodeIgniter?&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;It use with easily configuration and procedure for downloading, quickly setting up, and coding apps.&lt;/p&gt;

&lt;p&gt;It supports a pre-configured class for sending the bulk of email&lt;/p&gt;

&lt;p&gt;It holds information on web app data and visitors.&lt;/p&gt;

&lt;p&gt;It provides high-end security for unauthorized users.&lt;/p&gt;

&lt;p&gt;Developers can easily use various functions such as testing class, calendar class, and template engine.&lt;/p&gt;

&lt;p&gt;It assists to create solid and reusable components that help to make the entire web development process fast and easy.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Popular Brand Using CodeIgniter:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;CodeIgniter provides well-structured documentation frameworks and business migrate data easily form one server to another so that this framework is much more popular in vertical business industries. Today Most Popular brands developed their web portals using the CodeIgniter framework.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Name of the popular brand build by CodeIgniter&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Firstcry.com&lt;/p&gt;

&lt;p&gt;Textify&lt;/p&gt;

&lt;p&gt;Casino America Inc&lt;/p&gt;

&lt;p&gt;Philippine Airlines Inc&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Guide Comparative Analysis of Laravel and CodeIgniter:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Authentication:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Using these laravel parameters, developers can easily implement authentication and authorized rules. In CodeIgniter developers require to write a custom extension for the authentication process.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;HTTP Support:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Laravel provides the facilitate to build custom HTTP routes and form a precise URL for every route. CodeIgniter doesn’t give facilitate HTTP, but it also possible to URL with data transmitting method between two paths.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Architecture:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;it offers highly a robust command-line interface and follows the MVC architecture pattern. CodeIgniter support structure-based MVC architecture.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;UNIT Testing:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Laravel has an in-built unit testing tool, so developers can test app code through unit testing. While CodeIgniter it doesn’t provide inbuilt testing tool, so developers can take assist external plugin for testing.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;RESTful API:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;developers can faster build a collection of REST API through laravel frameworks. While CodeIgniter frameworks don’t easily streamline the development of restful API.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Reason for Popularity:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Laravel framework follows the MVC Architecture pattern and makes an object-oriented approach, it is most suitable for all kinds of web applications development. While the CodeIgniter framework is so popular, it comes with easy-to-learn and offers an excellent well-structured documentation framework for developers.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Database:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Laravel is an extremely supported relational object-oriented system. While CodeIgniter follows an object-oriented programming language database model.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Conclusion:&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Both of the above, PHP Web frameworks are used very large-scale by developers for creating websites and web apps. There is no any doubt, that Laravel has provided many functionalities, great tools &amp;amp; libraries, robust database support, and inbuilt unite testing. And also CodeIgniter is not far behind. Both frameworks allow superior testing methods and better scalable options for web applications.&lt;/p&gt;

&lt;p&gt;Therefore it concluded that choosing either Laravel and CodeIgniter finally depends on the type of website platform a business wants to build and maintain. In this way If you are more confused about which one is suitable for &lt;a href="https://www.itpathsolutions.com/services/web-app-development/"&gt;web development&lt;/a&gt; projects, don’t delay, do let us know by dropping a line below, we can help you get started.&lt;/p&gt;

</description>
      <category>programming</category>
      <category>laravel</category>
      <category>webdev</category>
      <category>php</category>
    </item>
    <item>
      <title>How Layered Navigation Could Be A Game Changer Addon?</title>
      <author>puneet verma</author>
      <pubDate>Wed, 14 Jul 2021 09:51:10 +0000</pubDate>
      <link>https://dev.to/puneetverma321/how-layered-navigation-could-be-a-game-changer-addon-4cbn</link>
      <guid>https://dev.to/puneetverma321/how-layered-navigation-could-be-a-game-changer-addon-4cbn</guid>
      <description>&lt;h2&gt;Layered Navigation

&lt;/h2&gt;
&lt;p&gt;The use of layered navigation to organise e-commerce websites has grown increasingly popular. Rather than having to browse through multiple subcategories, it allows the user to focus on specific product qualities from a top-level category page.&lt;/p&gt;

&lt;p&gt;Without effective onsite navigation, it's difficult to conceive a successful eCommerce company nowadays. All of this contributes to a better customer shopping experience and, as a result, a higher conversion rate.&lt;/p&gt;

&lt;p&gt;One of the most crucial aspects of site navigation is layered navigation.&lt;/p&gt;

&lt;h2&gt;What is Layered Navigation?

&lt;/h2&gt;
&lt;p&gt;Consider a large number of comparable products that differ only in minor features. Manually scrolling through store categories would take far too long and be extremely inconvenient, and would be unlikely to result in a purchase.&lt;/p&gt;

&lt;p&gt;Customers require a tool that only surfaces the required item to alleviate the pain of such a search. &lt;a href="https://store.webkul.com/magento2-layered-navigation.html"&gt;Layered navigation&lt;/a&gt; is one such tool.&lt;/p&gt;

&lt;p&gt;Layered or filtered navigation is typically found adjacent to the main content block and is comprised of many adjustable filters. Customers can considerably reduce the time it takes to search for a specific product by defining their values.&lt;/p&gt;

&lt;p&gt;Layered/ filtered navigation, like any other component of your store navigation, can be adjusted to meet your eCommerce strategy.&lt;/p&gt;

&lt;h2&gt;Why should use Layered Navigation?

&lt;/h2&gt;
&lt;p&gt;If they don't find what they're looking for in an online store, 73% of internet users depart within two minutes (Marketing Sherpa)
96 per cent think the search feature is crucial to their purchasing decision.&lt;/p&gt;

&lt;p&gt;Visitors who utilise site search convert 5-6 times more than visitors who do not use site search.&lt;/p&gt;

&lt;p&gt;You can't sell something that customers can't find. The search process is an important part of the customer purchasing decision and is a key component of practically any eCommerce site, especially when there are a lot of items with different pricing, features, or brands.&lt;/p&gt;

&lt;p&gt;Layered Navigation is an excellent option for improving your eCommerce store's search and filtering processes. It provides a list of filters on the left side of the categories page, so shoppers don't have to waste time looking for what they want. It is impossible to dispute that the conversion rate will increase dramatically once the search process is simplified and professionalised. The fewer time shoppers waste browsing, the lower the cart abandonment rate and the more money you may make.&lt;/p&gt;

&lt;h2&gt;Key features&lt;/h2&gt;

&lt;h3&gt;Ajax loading&lt;/h3&gt;

&lt;p&gt;Instead of reloading the entire page, the matching items will be displayed instantly after applying the filters. This feature will drastically improve the operation of your store and increase customer happiness.&lt;/p&gt;

&lt;h3&gt;Multi-filters&lt;/h3&gt;

&lt;p&gt;Every buyer has multiple things they want on their purchases. As a result, Multi Filters is an essential and beneficial tool. Shoppers can quickly find the perfect item by using a variety of filters.&lt;/p&gt;

&lt;h3&gt;SEO friendly URL&lt;/h3&gt;

&lt;p&gt;Your site will be easy to remember and access thanks to the short and straightforward filter URL produced by this function. Importantly, an SEO-friendly URL will improve your search engine ranking and greatly improve SEO performance of &lt;a href="https://store.webkul.com/Magento-2.html"&gt;Magento 2 store&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Quick lookup option&lt;/h3&gt;

&lt;p&gt;The greatest option for a store with a large number of items and a variety of filters such as sizes, brands, and materials. Shoppers are no longer required to scroll endlessly or become perplexed in their search for the desired filter.&lt;/p&gt;

</description>
      <category>layerednavigation</category>
    </item>
    <item>
      <title>A Type System</title>
      <author>Kinanee Samson</author>
      <pubDate>Wed, 14 Jul 2021 09:38:38 +0000</pubDate>
      <link>https://dev.to/kalashin1/a-type-system-3a8j</link>
      <guid>https://dev.to/kalashin1/a-type-system-3a8j</guid>
      <description>&lt;p&gt;TypeScript in my opinion will always remain a superhero large scale application development tool, TypeScript comes loaded with a great type system and in this article i am going to write about arguably one of the biggest features of TypeScript which is the Type System. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-why-add-types"&gt;
  &lt;/a&gt;
  But why Add Types?
&lt;/h3&gt;

&lt;p&gt;This is one of the first questions i asked myself when i stumbled accross TypeScript, if valid JavaScript is TypeScript why bother adding extra codes to my already existing code base, now i see the importance of using TypeScript and i don't see myself working on a large scale application and using JavaScript, that's not just possible.&lt;/p&gt;

&lt;p&gt;A Type system is there because it gives meaning to our code. A Type System coerces some form of sense and orderliness to our code. In JavaScript we can pass invalid types as arguments to a function. We can pass less number of arguments to the function or even more arguments than is required and all that will be fine until runtime. But you are working for an institution that is paying you hard earned dollars and time is money. How bout we catch this types of bugs before runtime? Enter a Type system.&lt;/p&gt;

&lt;p&gt;A Type system goal is to provide a type definition for each variable, function, class, object. The types defined for each is used at compile time to perform some checks to ensure that each value assigned to a variable is of the type annotated with variable it is assigned to and if not, to expose the errors relating to wrong type of value that is passed to a variable. &lt;/p&gt;

&lt;p&gt;TypeScript is statically typed because unlike JavaScript that performs this checks during runtime, the TypeScript compiler will actually perform this check when we try to compile our TypeScript code to JavaScript even as we are writing our code the TypeScript compiler is actually doing it's work and will notify us when we try to do something that's not valid. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#primitive-types-and-functions"&gt;
  &lt;/a&gt;
  Primitive Types And Functions
&lt;/h4&gt;

&lt;p&gt;TypeScript provides types for all primitive values in JavaScript as we have seen from earlier articles. Functions can also be typed but instead they are called signatures. &lt;br&gt;
A function signature specifies the number and type of arguments the function can accept. It also specifies the return type of the function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// STRING&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sam&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// OR name = "sam"&lt;/span&gt;
&lt;span class="c1"&gt;// NUMBER&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;
&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;201&lt;/span&gt; &lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;// BOOLEAN&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;isOnline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;

&lt;span class="c1"&gt;// function signature&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;sayHello can only accept a string and must return a string otherwise there will be a compile error.&lt;br&gt;
Arrays are central to working with JavaScript and thus TypeScript also allows for type annotations with arrays.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// STRING ARRAY&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;names&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;becker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ahmed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;james&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;names&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// Not Okay&lt;/span&gt;
&lt;span class="c1"&gt;// NUMBER ARRAY&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;prices&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;prices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;shoes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// Not Okay&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To gain more control over what element occupies a particular index in an array we TypeScript provides tuples. A tuple is a kind of array where each index of the array can only store a particular type of value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// TUPLES&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;becker&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// Okay&lt;/span&gt;
&lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;becker, 1] // Not Okay
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The array above can only store a number in it's first index, a string in it's second index and a boolean in the third index. Tuples are quite good when using the rest operator.&lt;/p&gt;

&lt;p&gt;We can use interfaces to define the structure of an object or the shape of a class, or to combine multiple type definitions into a single type, an example of an interface is presented below;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;wheels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;plateNumber&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;manufacturer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Okay satisfies the contract&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lambo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;wheels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;plateNumber&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;234RE2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;manufacturer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lamborghini&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;model&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sesto elemento&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Not okay must satisfy the contract&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;randCar&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Car&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;wheels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;plateNo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;23424&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#union-custom-types"&gt;
  &lt;/a&gt;
  Union | Custom Types
&lt;/h4&gt;

&lt;p&gt;Typescript also provide type alias for creating custom types and union types. Union types are for annotating variables that can store more than one type of value. While custom types allow us to create our own types from a primitive type or another type we created. We can also use literal values for type definition. When we do that any variable whose type or function whose signature accepts or returns that type will all deal with the literal value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// TYPE ALIAS&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// COMBINING WITH UNION TYPES&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;carColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// UNION TYPES&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;plateNumber&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lamboColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// Okay&lt;/span&gt;
&lt;span class="nx"&gt;lamboColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;purple&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// Not Okay&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#typescripts-type-system"&gt;
  &lt;/a&gt;
  TypeScript's Type System
&lt;/h3&gt;

&lt;p&gt;TypeScript type system originated from the type theory developed by Bertrand Russell who developed the theory in the early 20th century. The type theory is a system where each term is given a type and operations are restricted based on the types, if we pull up a comparison between TypeScript's type annotation and the type theory we will find a great detail of striking similarity.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// TYPE THEORY&lt;/span&gt;
&lt;span class="nx"&gt;z&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;nat&lt;/span&gt;

&lt;span class="nx"&gt;clickZ&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;nat&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;nat&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is a basic example of type theory building blocks, let's take a look at type annotations in TypeScript.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//TYPESCRIPT'S TYPE ANNOTATION&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;logNum&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You see the similarity i spoke about earlier? Let's go on to discuss some attributes of TypeScripts type system.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#optional-static-typing"&gt;
  &lt;/a&gt;
  Optional Static Typing
&lt;/h4&gt;

&lt;p&gt;TypeScript is the product of the lessons learned from working with strongly typed languages like java and C#. So TypeScript comes with the benefit of optional typing. Plus TypeScript is a superset of JavaScript, we all know that JavaScript is dynamically types. Although this is not too good, but it comes with some benefits. Rather than being in a spaghetti like situation where you feel like you are typing your self to death. You can tell the TypeScript compiler to come of easy with the types because you don't know the actual type the variable will hold untill you assign a value to it. This can be a huge breather and gives you a sense of freedom and being in control.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// When we know the type of a value&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;supes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// When we don't know the type of value a hero will hold&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hero&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt;

&lt;span class="nx"&gt;hero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;superman&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// OR&lt;/span&gt;
&lt;span class="nx"&gt;hero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// OR&lt;/span&gt;
&lt;span class="nx"&gt;hero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="c1"&gt;// OR &lt;/span&gt;
&lt;span class="nx"&gt;hero&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Incase you feel confused about the shape of your object or the type of value it should store, just annotate it with &lt;code&gt;any&lt;/code&gt; and you can work much like you do in JavaScript.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#type-inference"&gt;
  &lt;/a&gt;
  Type Inference
&lt;/h4&gt;

&lt;p&gt;Another cool feature of the Type system employed by TypeScript is that if you don't specify the type for a variable, TypeScript will automatically infer the type of the value you pass to variable to it. And it leans towards making our code short and more clean especially if you assigning a value to a variable immediately after it is created. You don't actually need to annotate the variable with the type because that is really redundant.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//INSTEAD OF&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;supes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;//RATHER USE&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;coding&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="c1"&gt;// TypeScript will auto infer the string type to job&lt;/span&gt;
&lt;span class="c1"&gt;// and number to age&lt;/span&gt;
&lt;span class="nx"&gt;job&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt; &lt;span class="c1"&gt;// Not okay&lt;/span&gt;
&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; &lt;span class="c1"&gt;// Not okay&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you plan to write code that is like above where you do things the JavaScript way, remember to annotate the variable with the &lt;code&gt;any&lt;/code&gt; type.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#structural-typing"&gt;
  &lt;/a&gt;
  Structural Typing
&lt;/h4&gt;

&lt;p&gt;Unlike the early strongly typed language that uses a nominal typing system, TypeScript uses a structural typing system. But wait what is a structural typing system and what is a nominal typing system? In nominal typing system a variable is only of a valid type when we explicitly decorate the variable definition with that type. &lt;/p&gt;

&lt;p&gt;Let's take a use case, we know that admin on a platform must be a user. In a nominal typing system an admin is not a user and only an admin. We have to explicitly decorate it with the interface for an admin for it to be valid. This kind of system prevents situation where an object with similar properties of an admin can be valid just because it looks like it. This is cool but i don't like this approach personally. And that's where structural Typing comes in to play.&lt;/p&gt;

&lt;p&gt;Structural Typing system is actually concerned with the internal structure of an object, that is to say as far as an admin and a user has the same structure, a user is as valid as an admin. This kind of effect with structural typing is actually desired in TypeScript. We can also achieve the same result that a nominal typing system gives us with JavaScript. Let see TypeScript's structural typing system in play&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sayHello&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sam&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sam&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;superAdmin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;super&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;11&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;sayHello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; says hello`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// VALID&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// sam says hello&lt;/span&gt;
&lt;span class="c1"&gt;// VALID&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;superAdmin&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// super says hello&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we wanted to achieve the nominal typing effect we can make use of generics, let's see a typical implementation&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;userId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;adminId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;admin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;uid&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uid&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;sam&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;userId&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;sam&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;user&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;superAdmin&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;super&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;admin&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// POSSIBLE&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sam&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;// sam&lt;/span&gt;
&lt;span class="c1"&gt;// NOT POSSIBLE&lt;/span&gt;
&lt;span class="nx"&gt;conosle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sayHello&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;superAdmin&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
&lt;span class="c1"&gt;// Will show error in IDE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#type-checking"&gt;
  &lt;/a&gt;
  Type Checking
&lt;/h4&gt;

&lt;p&gt;One thing TypeScript does that makes our work much easier is type checking. Once we have defined the types for our variables TypeScript automatically go through each assignment in our code to ensure that for each variable defined the right type of value is assigned to it. For each function the right type of arguments are called with the function. It will also ensure that the function receives the right number of arguments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;callPerson&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;phoneNo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;

&lt;span class="nx"&gt;callPerson&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;phoneNo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;`calling &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;phoneNo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;...`&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;callKala&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;234804568890&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Okay&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;callFrank&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;callPerson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;234804568890&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Not Okay&lt;/span&gt;

&lt;span class="nx"&gt;callKala&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt; &lt;span class="c1"&gt;// Not Okay coz callKala is a string, type inference&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we work with more complex objects and type definitions, TypeScript will test each property on each object. It will even check that each class has the right type of access modifiers for properties and in turn that they are expecting the same type and that they actually receive the right type of value. If the Object contains nested within it another object the same level of type checking will be performed on the object.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#widened-types"&gt;
  &lt;/a&gt;
  Widened Types
&lt;/h4&gt;

&lt;p&gt;A widened type is a typical situation of a function call that returns &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. An expression that returns either of the two also fits into&lt;/p&gt;

&lt;p&gt;this category. And an assignment whose type is null.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let log = () =&amp;gt; null

let widened = log()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#type-erasure"&gt;
  &lt;/a&gt;
  Type Erasure
&lt;/h4&gt;

&lt;p&gt;When we compile our TypeScript code to JavaScript, the compiler will erase all type definitions, function signatures and interfaces from the compiled JavaScript code. This is because JavaScript as we know it does not support types. &lt;/p&gt;

&lt;p&gt;That's it, hope you enjoyed it and found it useful. Personally my experience working with typescript has been superb, stay tuned for articles on TypeScript.&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>programming</category>
      <category>node</category>
    </item>
    <item>
      <title>CSS Media Query : Everything you need for responsive website</title>
      <author>Modern Web</author>
      <pubDate>Wed, 14 Jul 2021 09:24:19 +0000</pubDate>
      <link>https://dev.to/kunaal438/media-query-everything-you-need-for-responsive-design-b8g</link>
      <guid>https://dev.to/kunaal438/media-query-everything-you-need-for-responsive-design-b8g</guid>
      <description>&lt;p&gt;Media query are the most important concept of CSS now days. As majority of users use their phone or tablet to visit websites. It is important these days to make website responsive.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-responsive-website-"&gt;
  &lt;/a&gt;
  What is Responsive website ?
&lt;/h1&gt;

&lt;p&gt;Well we all heard about responsive website is important or your client need a responsive website but ultimately what does it mean? Responsive website is a term refer to your website responsiveness which mean your website is looking good in desktop, mobile or tablet.&lt;/p&gt;

&lt;p&gt;And to make responsive website with CSS we use &lt;code&gt;@media&lt;/code&gt; media query.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#media-query"&gt;
  &lt;/a&gt;
  Media Query
&lt;/h1&gt;

&lt;p&gt;Media query is used to add different styles according to the screen size or orientation or resolution. you can even change styles of your site if it is being print or if user is using screen reader.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  Syntax
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;CSS&lt;/span&gt; &lt;span class="nt"&gt;styles&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we start using media query with &lt;code&gt;@media&lt;/code&gt; and after that we have to give condition or you can check for media device. Let's take some examples.&lt;/p&gt;

&lt;p&gt;If you want to add different style when the screen width is 500px or less.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="nc"&gt;.element&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="err"&gt;styles;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example after &lt;code&gt;@media&lt;/code&gt; we used &lt;code&gt;screen&lt;/code&gt; keyword, this is used to define that you are checking screen. you can also type &lt;code&gt;all | print | speech&lt;/code&gt;. After that, you can see &lt;code&gt;and&lt;/code&gt; keyword, that &lt;code&gt;and&lt;/code&gt; means whenever there is a screen, and the condition is true, apply the styles. And the last we have the condition.&lt;/p&gt;

&lt;p&gt;But although we have lot's of keywords, and media types generally I use this syntax to make responsive design.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;500px&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="nc"&gt;.element&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="err"&gt;stylessss;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These conditions are know as break points. For responsive website we mostly use two condition :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;max-width&lt;/code&gt; : This means if you say &lt;code&gt;max-width:500px&lt;/code&gt; then the following style only be applied when the view port width is 500px or less.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;min-width&lt;/code&gt; : This is the reverse of &lt;code&gt;max-width&lt;/code&gt;. It means if you say &lt;code&gt;min-width:500px&lt;/code&gt; then the following style only be applied when the view port width is 500px or more.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So that's it about media queries. But for responsive design you should know some common break points.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="c"&gt;/* Extra small devices (phones, 600px and down) */&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Small devices (portrait tablets and large phones, 600px and up) */&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Medium devices (landscape tablets, 768px and up) */&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;768px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Large devices (laptops/desktops, 992px and up) */&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;992px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;/* Extra large devices (large laptops and desktops, 1200px and up) */&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1200px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I hope you understood media query.If you have any doubt feel free to ask me comments section.&lt;/p&gt;

&lt;p&gt;You can also read &lt;a href="https://dev.to/kunaal438/css-position-everything-you-need-for-good-developer-pfh"&gt;CSS positions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to practice your CSS you can checkout my youtube video on responsive &lt;a href="https://www.youtube.com/watch?v=f9fqiNM30ik"&gt;Instagram UI&lt;/a&gt; clone.&lt;/p&gt;

&lt;p&gt;If you like, you can subscribe my youtube channel, and follow me on instagram. I create awesome web contents. [&lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;Subscribe&lt;/a&gt;], [&lt;a href="https://www.instagram.com/modern_web_channel/"&gt;Instagram&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Thanks For reading.&lt;/p&gt;

</description>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>html</category>
    </item>
    <item>
      <title>How to send a SMS using Twilio</title>
      <author>Kartik Grewal</author>
      <pubDate>Wed, 14 Jul 2021 09:23:57 +0000</pubDate>
      <link>https://dev.to/canonic/how-to-send-a-sms-using-twilio-2lp3</link>
      <guid>https://dev.to/canonic/how-to-send-a-sms-using-twilio-2lp3</guid>
      <description>&lt;p&gt;Whether that be notification, security OTPs or alerts, SMS is one of the best methods of reaching your user base. Adding SMS services requires a backend setup for Twilio or other SMS services. Our goal is to create an endpoint that we can trigger to send our SMS on the Twilio without writing any backend code. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating project on low-code tool&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We head over to &lt;a href="https://app.canonic.dev"&gt;Canonic&lt;/a&gt; and sign in using our social accounts. Next, we click on &lt;strong&gt;Create New&lt;/strong&gt; to create a project for our application. Click on next, then click on create to complete the process.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sIcpXTEL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sIcpXTEL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-1.png" alt="https://canonic.s3.amazonaws.com/public/devto/twilio-1.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A popup asking your first table name will appear. If not, you can click on the &lt;strong&gt;+&lt;/strong&gt; icon in the header to create a new table. Let's name our first &amp;amp; only table for this project as &lt;strong&gt;Messages.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yiE1uA4S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yiE1uA4S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-2.png" alt="https://canonic.s3.amazonaws.com/public/devto/twilio-2.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We create a text field named "Message" as we'll need it in the API &amp;amp; also to store the messages we send out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xvbxe-el--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xvbxe-el--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-3.png" alt="https://canonic.s3.amazonaws.com/public/devto/twilio-3.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We hit deploy on the top right, and we'll be provided with a hosted backend. a database &amp;amp; basic CRUD endpoints per table to help us create an API for our Twilio integration.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the &lt;strong&gt;API&lt;/strong&gt; tab on the left to start adding the twilio webhook. We select the &lt;strong&gt;createMessage&lt;/strong&gt; block in mutations. Click on the &lt;strong&gt;+&lt;/strong&gt; button. It'll open up a new webhook settings on the right hand side.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gdhkGR6l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gdhkGR6l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-4.png" alt="https://canonic.s3.amazonaws.com/public/devto/twilio-4.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Select &lt;strong&gt;Message&lt;/strong&gt; type → Choose &lt;strong&gt;Twilio&lt;/strong&gt; from the list of providers &amp;amp; you'll be provided with fields for settings. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;SID → This is your Twilio account number, generated along with access tokens..&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Auth Token → To generate auth token, you should follow Twilio's guide - &lt;a href="https://www.twilio.com/docs/iam/access-tokens#creating-tokens"&gt;https://www.twilio.com/docs/iam/access-tokens#creating-tokens&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Sender's phone number → Phone number to be used to send (should be verified by twilio)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Receiver's phone number → Phone number of the receiver of the sms (should be verified by twilio)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Message Body → Message to send to the user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Neti7wBX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Neti7wBX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-6.png" alt="https://canonic.s3.amazonaws.com/public/devto/twilio-6.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;For Message body →&lt;/strong&gt; We want to send the text found in the message field of the API to Twilio. So we can make use of Handlebars templates &amp;amp; simply write&lt;br&gt;
&lt;br&gt;
&lt;code&gt;{{message}}&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
in that field. This will extract the message field from the API payload and forward it to Twilio.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The above concludes the setup for the API that was required. Now let's start using this API to start sending SMS to our user base.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Integrating our existing app with this API:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This will require a combination of things that we need for securely connecting our application with this API.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Access token for our API&lt;/li&gt;
&lt;li&gt;Documentation for the API&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Access Tokens&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;strong&gt;Settings&lt;/strong&gt; using left side menu. Go to &lt;strong&gt;Access&lt;/strong&gt; tokens tab.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DLljWKSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DLljWKSs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-7.png" alt="https://canonic.s3.amazonaws.com/public/devto/twilio-7.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on &lt;strong&gt;Create a new token,&lt;/strong&gt; and provide it a suitable name and permissions. Click on &lt;strong&gt;Create.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5M-XUpBV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5M-XUpBV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-8.png" alt="https://canonic.s3.amazonaws.com/public/devto/twilio-8.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You've successfully generated an access token for your API. Copy it &amp;amp; save it some place safe as &lt;strong&gt;you won't be able to see it again&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--waudQNDO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--waudQNDO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-9.png" alt="https://canonic.s3.amazonaws.com/public/devto/twilio-9.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Head over to the docs tab using the left-hand side, and you'll find documentation for &lt;strong&gt;createMessage&lt;/strong&gt; API (the API block where we added our twilio webhook).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c5rTtpYB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-10.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c5rTtpYB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-10.png" alt="https://canonic.s3.amazonaws.com/public/devto/twilio-10.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After completing all the necessary steps, we're finally ready to deliver our first SMS using our Twilio-connected API.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Let's copy the &lt;strong&gt;CURL&lt;/strong&gt; command that was mentioned in the documentation. Fill in your access token and paste it into the terminal.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Our curl command will look something like this.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜  ~ curl 'https://xxxx.hem.canonic.dev/api/messages' \
  --request POST \
  --header "Content-type: application/json" \
  --header "Authorization: xxxxxx-xxxxx-xxxx" \
  --data '{
    "input": {
      "message": "Hello! how are you?",
    }
  }'
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;A successful response will look like this:&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{"data":{"messages":"Hello! how are you?","_id":"60bf30ee2529700009fd2a4a","createdAt":"2021-06-08T08:57:18.316Z","updatedAt":"2021-06-08T08:57:18.316Z","__v":0,"id":"60bf30ee2529700009fd2a4a"},"error":null,"success":true}%
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And you'll hear a bell ring in the receiver's phone 🔔, and our SMS has been successfully delivered. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dynamic Receiver phone number&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So far we've added a fixed receiver's phone number, but what if you want to dynamically change who you send the SMS to. For achieving this, we can add another field in our graph of type &lt;code&gt;Number&lt;/code&gt; &amp;amp; Deploy it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--41cEaSR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-11.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--41cEaSR2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://canonic.s3.amazonaws.com/public/devto/twilio-11.png" alt="https://canonic.s3.amazonaws.com/public/devto/twilio-11.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the Twilio webhook settings, you can modify the receiver phone number option to&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;{{ receiverNumber }}&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
 and it'll extract the receiver's phone number from the API to send SMS to.&lt;/p&gt;

&lt;p&gt;Find detailed documentation for this feature here - &lt;a href="https://docs.canonic.dev/concepts/webhook-providers/twilio"&gt;https://docs.canonic.dev/concepts/webhook-providers/twilio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this guide was helpful and we are excited to see you built your roadmap using Canonic. If you want you can also duplicate this project from Canonic's sample app and easily get started by customising it as per your experience. If you want to experience how our roadmap turned out. Check it out &lt;a href="http://app.canonic.dev"&gt;app.canonic.dev&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Join us on &lt;a href="https://discord.com/invite/9dyytsM"&gt;Discord&lt;/a&gt; to discuss or share with our community. Write to us for any support requests at &lt;a href="mailto:support@canonic.dev"&gt;support@canonic.dev&lt;/a&gt;. Checkout our &lt;a href="http://www.canonic.dev"&gt;website&lt;/a&gt; to know more about Canonic&lt;/p&gt;

</description>
      <category>twilio</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Relative Units In CSS</title>
      <author>Vivek Alhat</author>
      <pubDate>Wed, 14 Jul 2021 09:10:20 +0000</pubDate>
      <link>https://dev.to/vivekalhat/relative-units-in-css-7n</link>
      <guid>https://dev.to/vivekalhat/relative-units-in-css-7n</guid>
      <description>&lt;p&gt;There are two important relative units in CSS called, em and rem.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#em"&gt;
  &lt;/a&gt;
  em
&lt;/h3&gt;

&lt;p&gt;It is a sizing unit. It works w.r.t parent node/div.&lt;br&gt;
1em is generally 16px (pixels).&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;div class="parent"&amp;gt;
    &amp;lt;div class="child"&amp;gt;
        &amp;lt;div class="second_child"&amp;gt;
            Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laboriosam cumque ratione provident totam soluta, fugiat obcaecati sequi incidunt magnam esse architecto officia, enim tempore minima asperiores? Labore ab error dolores, numquam, quas magnam atque commodi doloribus aperiam maxime consequatur temporibus eos.
        &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

CSS -

.parent {
    font-size: 16px;
}

.child {
    font-size: 2em;
}

.second_child {
    font-size: 3em;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Suppose the font size of a parent div is set as &lt;em&gt;16px&lt;/em&gt; and the font size of a child div is set as &lt;strong&gt;2em&lt;/strong&gt;. This generally means that the text inside child div will have font size of &lt;code&gt;16*2&lt;/code&gt; px i.e 32px.&lt;br&gt;
Now, let's assume that we have set the font size of a second child as &lt;strong&gt;3em&lt;/strong&gt;, this means that the text content inside second_child will have font size of &lt;code&gt;16*2*3&lt;/code&gt; px i.e 96px.&lt;/p&gt;

&lt;p&gt;In this scenario, when we use em as a unit to define font size then the size is defined w.r.t the parent node. This is called as compounding in CSS.&lt;/p&gt;

&lt;p&gt;If there isn't any parent div then 1em will be considered as 16px only.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Codepen&lt;/strong&gt; -&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/vivekalhat/embed/zYwNjXW?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rem"&gt;
  &lt;/a&gt;
  rem
&lt;/h3&gt;

&lt;p&gt;rem stands for root em. It solves compounding problem of em. rem doesn't work w.r.t parent node instead it always works w.r.t root node i.e html or ::root.&lt;/p&gt;

&lt;p&gt;rem is more consistent than em.&lt;/p&gt;

&lt;p&gt;For consistent spacing, margin, padding and font-size always use rem.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;::root {
    font-size: 16px;
}

or

html {
    font-size: 16px;
}

.parent {
    font-size: 50px;
}

.child {
    font-size: 2rem;
}

.second_child {
    font-size: 3rem;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above example, the font size of a child div is set to &lt;em&gt;2rem&lt;/em&gt; which is &lt;strong&gt;32px&lt;/strong&gt; in case of rem because we have defined font size as 16px in root. rem unit isn't dependent upon parent instead it works w.r.t the root or html node. &lt;/p&gt;

&lt;p&gt;Here, in root we have defined the font size as 16px hence font size of a child div is &lt;code&gt;16*2&lt;/code&gt; px i.e 32px. Similarly, the font size of a second_child will be &lt;code&gt;16*3&lt;/code&gt; px i.e 48px.&lt;/p&gt;

&lt;p&gt;The parent div does not influence anything inside children divs in case of rem units.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Codepen&lt;/strong&gt; -&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/vivekalhat/embed/OJmWELy?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Helpful tip&lt;/strong&gt; - While defining a font size avoid using em as much as possible. Use it only when it is necessary. To maintain the consistency, use rem unit.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>webdev</category>
      <category>design</category>
    </item>
    <item>
      <title>An Open Letter To All Struggling Developers Feeling Like They Don’t Belong</title>
      <author>Dragos Nedelcu</author>
      <pubDate>Wed, 14 Jul 2021 08:49:09 +0000</pubDate>
      <link>https://dev.to/dragosnedelcu/an-open-letter-to-all-struggling-developers-feeling-like-they-don-t-belong-41eo</link>
      <guid>https://dev.to/dragosnedelcu/an-open-letter-to-all-struggling-developers-feeling-like-they-don-t-belong-41eo</guid>
      <description>&lt;h3&gt;
  &lt;a href="#it-happens-every-morning"&gt;
  &lt;/a&gt;
  It happens every morning.
&lt;/h3&gt;

&lt;p&gt;You grab a fresh coffee, you open the Macbook and read about the latest tech out there. You watch developers working for your dream companies talking on stage. They talk about the latest updates on the libraries they released. About the cool stuff they work on and about how they are building the future. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#they-are-your-superheroes"&gt;
  &lt;/a&gt;
  They are your superheroes.
&lt;/h3&gt;

&lt;p&gt;In 3 minutes tech talks they solve issues you would struggle with for days. And they do it live, in front of an audience. Afterwards, they use all the right words to explain these complex technologies with ease. And they open source everything on Github. Guess what, by now, millions of people are using that code already.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#so-you-start-dreaming"&gt;
  &lt;/a&gt;
  So you start dreaming.
&lt;/h3&gt;

&lt;p&gt;But, your dreams are modest. Forget being on stage, what about getting that senior dev position? What about getting more responsibility? What about working for one of those cool software companies? You could afford all the gadgets you want. You could afford living in the center or travel the world. You would finally stop worrying about those overpriced morning coffee latte you are addicted to. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;These coding skills of yours must be worth something. &lt;br&gt;
Something more.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wait a minute. &lt;/p&gt;

&lt;p&gt;This is not the first time you thought about this. You did it for weeks now. You made a plan. You bought a few online courses. You secretly checked other jobs. You even grabbed your courage and talked to your tech lead about your aspirations.&lt;/p&gt;

&lt;p&gt;Yet, here you are again…&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#something-always-gets-in-the-way"&gt;
  &lt;/a&gt;
  Something always gets in the way
&lt;/h3&gt;

&lt;p&gt;You actually, never finished those courses. Your tech lead said there are still things you lack, that you could do better in code reviews. &lt;/p&gt;

&lt;p&gt;The jobs you look at are terrifying, they ask for so many technologies you never got to touch. &lt;/p&gt;

&lt;p&gt;And quickly the bright future you imagined, the dream of using your coding skills for something bigger, is now an illusion. &lt;/p&gt;

&lt;p&gt;Anyway, the clock is hitting 10:00, and the daily standup will start. By now your coffee mug is half empty. Enough procrastinating, you will think about it tomorrow. &lt;/p&gt;

&lt;p&gt;So you jump in the daily meeting half asleep and talk about yesterday’s bug that you are still investigating. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;You tell yourself that at some point “it will click”, just like it did with the senior developers around you.&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you just practiced a bit more. If you would just finish that data structures course you bought last week. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-if-it-never-really-clicks"&gt;
  &lt;/a&gt;
  What if it never really “clicks”?
&lt;/h3&gt;

&lt;p&gt;Maybe is just another stupid dream anyway. Developers are average “janes and joes”.We don’t save lives, we don’t fight crime. Hell, most days we don’t even leave our chairs. Why even bother?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Developers are average “janes and joes”. We don’t save lives, we don’t fight crime.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pay is good enough and conditions are bearable. When the evening comes you find yourself watching the latest Netflix series instead. Is about a hacker so there must be something to learn from it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-price-of-mediocrity"&gt;
  &lt;/a&gt;
  The price of mediocrity
&lt;/h3&gt;

&lt;p&gt;As a fresh developer I got my first job by luck. I was new in town, I did not speak the language, I did not want to wash any toilets and I was able to write code (mostly spaghetti code, but working code). &lt;/p&gt;

&lt;p&gt;Back then, if you were able to write some JavaScript you got the job. I remember we had a joke that even our neighbour’s dog could get a developer job in those times. Good ol’ times.  Nowadays junior devs need 3 years experience just to get an interview. Damn, I feel so old. &lt;/p&gt;

&lt;p&gt;Anyway, the first six months on the job were tough. As a self-taught coder, I had gaps all over.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;I didn’t even consider myself a programmer, I was an accidental hacker at best.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My lack of formal education in Computer Science only made things harder (programming is still taboo in traditional engineering, except some Matlab scripting).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-invisible-trap-of-ambitious-developers"&gt;
  &lt;/a&gt;
  The invisible trap of ambitious developers
&lt;/h3&gt;

&lt;p&gt;Yet, after a few months in my new programming job, things got a lot easier. I got used to the codebase, the product and the people. My skills were, let’s say above average. Same for my salary.&lt;/p&gt;

&lt;p&gt;But, as soon as my bills were paid and I could afford the latest gadget, my aspirations took second place. When I got home in the evenings, instead of coding I played computer games for hours. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I drown myself in trash food, alcohol and binge watch crap for night’s end. In the morning, I would go back to a job I wasn't excited about.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#and-the-ball-would-keep-rolling"&gt;
  &lt;/a&gt;
  And the ball would keep rolling.
&lt;/h3&gt;

&lt;p&gt;You see, the biggest enemy of an ambitious developer is that technology is complex. It is not that things always change. Not even the lack of knowledge . It is confort. Because after getting that first job, that first promotion, we all get a bit too comfortable.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;The enemy of doing great is doing good, particularly good enough.&lt;/strong&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#ghosts-of-the-past"&gt;
  &lt;/a&gt;
  Ghosts of the past
&lt;/h3&gt;

&lt;p&gt;It was a sunny summer day, mid-august. I was scrolling through my old diary. It outlined a plan on how to grab my courage and leave that soul crushing job. To work for a top tech company, even give a tech talk. Fast forward two years and nothing of that happened.&lt;/p&gt;

&lt;p&gt;And you know why? For a long time, I told myself I was smart. I told myself one day I will finish those courses. One day I will brush up my skills. One way I will leave that crappy programming job. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;As you guessed, ‘one day’ translated to never.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Reading through that old diary, I became sick. Sick of mediocrity. Sick of all the fantastic ideas that never saw the light of the day. And most importantly I was sick of myself. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ambition-is-not-enough"&gt;
  &lt;/a&gt;
  Ambition is not enough.
&lt;/h3&gt;

&lt;p&gt;You see, my biggest mistake as a developer was not was not the spaghetti code, it was not misinterpreting requirements or not writing enough tests. My biggest mistake was waiting for things to happen.&lt;/p&gt;

&lt;p&gt;It took me years to realize an ugly but univestal truth: ambition is not enough, potential is not enough. Writing things down is not enough.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;If you fail to execute, “one day” will become never.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The following nights I couldn’t close an eye. So, I wiped out my old computer. I took note of all my unfinished Udemy courses, scraped most of them, and finished what I could. I created a strict time table outlining objectives and deadlines.&lt;/p&gt;

&lt;p&gt;Every day after work I would study until midnight. From programming fundamentals, to Cloud to Microservices, you name it. On the weekends I would join hackathons. On and on, everything I did was coding. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-became-literally-obsessed"&gt;
  &lt;/a&gt;
  I became literally obsessed.
&lt;/h3&gt;

&lt;p&gt;Learning things, building projects and meeting other developers gave me back the feeling of excitement that I somehow lost. Yes, I was overworked but I was excited. Nevertheless, something was still missing.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I was going fast, but I was going nowhere.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You see, if you take 5 steps in 5 different directions, you will barely move. My weekend hacks were mostly code I was already familiar with. Between all the socializing and traveling, I would end up exhausted just to start again on Monday. I was overworked, overweight and burned out. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I was still trapped, only my hamster wheel was turning faster.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the middle of all this mess, I joined a random meetup about software development. It was about programming as a discipline, as a profession (a topic I did not even understand anyway, but they had free pizza).&lt;/p&gt;

&lt;p&gt;It was there where I met the most influential mentor I had during my whole dev career. Already the CTO of a highly successful tech company in Germany at a really young age, he was everything that I dreamed of becoming when I started this coding journey. He was extremely sharp, in great shape and mood. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#he-was-everything-dreamed-to-be"&gt;
  &lt;/a&gt;
  He was everything dreamed to be
&lt;/h3&gt;

&lt;p&gt;So, after the meetup I translated my desperation into courage. I gathered my strength and asked him what I should do if, one day, I wanted to become like him. &lt;/p&gt;

&lt;p&gt;He suggested we meet and have a coffee. We did so in the following weeks. Half an hour became a whole evening. He told me about his journey and his views of programming and software development. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;For the first time in my few years as a developer, I felt excited. I felt that there was something more to this coding thing.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Things were still not great but if he made it, so could I.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Following his advice, I retouched my study plan. But I decided to cut the crap. So, I deleted all unfinished courses and I went back to the basics. All this time I have been jumping around from technology to technology. I missed one important detail. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Most of what we call ‘new’ in software development, was actually reinventing the wheel.&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;The latest libraries were fancy mixes of standard web technologies. So what if instead of studying the end result I focus on the principles behind them. Then I would be able to understand what is going on regardless of the programming language, the framework or the language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-key-was-in-the-fundamentals"&gt;
  &lt;/a&gt;
  The key was in the fundamentals
&lt;/h3&gt;

&lt;p&gt;Dragos, you must be a genius or something.&lt;/p&gt;

&lt;p&gt;In the meantime, an email landed on my inbox for a side job as a coding instructor. I accepted it without thinking. It was teaching the very basics, assisting students in web development. Probably the most instructing period in my career as a dev. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Studying the fundamentals over and over is still the most powerful way I know to get good at software development.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Regarding my mentor, what started as a casual encounter became a long term friendship. We met regularly once a month. &lt;/p&gt;

&lt;p&gt;Fast forward a few weeks and I was interviewing with the major tech companies in the city. The most promising one, a well established fintech startup based in Berlin. I ended up declining their offer and accepting something much, much better (more on this in another article). &lt;/p&gt;

&lt;p&gt;In six crazy months I went from underpaid, undervalued and frustrated coder to joining a top tech company and teaching. Was it hard? You bet it was. Was it worth it? Well, the tech stack was better. The money was much better. And I was finally surrounded by professional  programmers that I could learn from.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-the-best-was-not-even-that"&gt;
  &lt;/a&gt;
  But the best was not even that.
&lt;/h3&gt;

&lt;p&gt;Nothing in this world beats the feeling of achievement you get from getting good at something you poured your life into (in this case programming). Something that became so close to you, so central to your existence. Unhealthy obsession? Sure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Nothing in this world beats the feeling of achievement you get from getting good at something you poured your life into (in this case programming).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But, for a kid that spent the first years of his adult life jumping from soulless programming job to soulless programming job, I am telling you that is a lot of something. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-catch"&gt;
  &lt;/a&gt;
  The catch?
&lt;/h3&gt;

&lt;p&gt;I had no superpower. I did not start coding when I was 10. None of my parents, relatives or close friends was a programmer. To be honest, I never imagined being one. Computers were machines. Static and structured.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I had no superpower. I did not start coding when I was 10.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yet, I always wanted to be somebody and software development seemed like the perfect industry. This is why I left my engineering job. This is why the long nights. The frustration and the constant traumas of code reviews. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#commit-to-getting-it-done"&gt;
  &lt;/a&gt;
  Commit to getting it done.
&lt;/h3&gt;

&lt;p&gt;Stop wondering if this is still for you. Just commit to getting it done. You don’t need a gift, a secret or an interest from an early age. You do need hard work and dedication. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To hell with passion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Honestly I don’t care if you do it for the money. If you do it for personal achievement or for the comfort that comes with it. Just do it.&lt;/p&gt;

&lt;p&gt;Looking back, the things that helped most were the things I hated the most. Staring at the same pieces of code over and over, showing up when you don’t feel like and asking for help and keeping yourself from blowing off when you feel you just can’t get enough.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-the-software-community-got-wrong"&gt;
  &lt;/a&gt;
  What the “software community” got wrong
&lt;/h3&gt;

&lt;p&gt;The greatest tragedy in our sector right now is the myth that your potential to be a great developer is determined by things such as the age you started to code at or a diploma.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phrases like “I started coding at 11” make being a great developer seem like something written in the stars.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;No, I am not going to deny the importance of talent . But yes I will tell you it is totally overrated (I still don’t consider myself a talented coder, but a good one).&lt;/p&gt;

&lt;p&gt;It is true that an early exposure to computers definitely helps if you are trying to be the next Bill Gates or Mark Zuckemberg. &lt;/p&gt;

&lt;p&gt;But, most programmers out there are not and they need not to be those people. &lt;/p&gt;

&lt;p&gt;The belief of some ingrained talent and fear got us here. &lt;/p&gt;

&lt;p&gt;No you don’t need a calling, a gift, you are not a prophet. You do need discipline and courage. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#and-you-do-need-to-get-going"&gt;
  &lt;/a&gt;
  And you do need to get going.
&lt;/h3&gt;

&lt;p&gt;You must stop waiting for the magic moment when everything will click. You need to make this your number one priority. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Take your craft seriously or good luck going to work everyday to a mediocre programming job, fixing some legacy code for the rest of your life.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For me, that is worse than dying.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-i-can-help-you"&gt;
  &lt;/a&gt;
  How I can help you
&lt;/h3&gt;

&lt;p&gt;If you got to this point of the article, then you are probably an ambitious coder wanting to explore their full potential. Maybe you want a better paying job, maybe you finally want to gain long lasting confidence in your technical skills. &lt;/p&gt;

&lt;p&gt;Regardless, &lt;a href="https://dev.to/dragosnedelcu/we-helped-42-developers-get-772-441-in-salary-raises-and-promotions-here-is-what-we-learned-2h10"&gt;in the last 12 months I have worked together with more than 42 developers&lt;/a&gt; and used the same system that helped me escape my mediocre programming job to help them build extreme confidence in their technical skills and get to the next level.&lt;/p&gt;

&lt;p&gt;In the last months, I have built a whole team of specialized software training experts. We burned the midnight oil, we talked to other developer friends, we talked to their tech leads. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#we-have-transformed-building-a-successful-career-as-a-software-developer-into-a-predictable-structurable-routinized-process-that-works-the-average-salary-increase-developers-see-after-finishing-our-program-supasses-25-way-beyond-normal"&gt;
  &lt;/a&gt;
  We have transformed building a successful career as a software developer into a predictable, structurable, routinized process that works. The average salary increase developers see after finishing our program supasses 25%, way beyond normal.
&lt;/h4&gt;

&lt;p&gt;If you want to achieve similar results, let me suggest: get in touch with my team. You can watch the free case study where I cover this process step by step and then &lt;em&gt;book a free 45 minutes  consultation call with me&lt;/em&gt;. Together we will build a step by step plan to get you to the next level.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#you-can-watch-the-free-case-study-here-for-free"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.codewithdragos.com/free-case-study?utm_source=content_marketing&amp;amp;utm_medium=content_marketing&amp;amp;utm_campaign=summer_2021&amp;amp;utm_content=open_letter_to_all_software_devs"&gt;You can watch the free case study here for free.&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;In it you will learn: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Biggest Mistake Most Software Developers Are Making When It Comes To Their Technical Growth and Earning More The&lt;/li&gt;
&lt;li&gt;Three Things That Highly Paid Programmers Use To Build Extreme Confidence In Their Technical Skills&lt;/li&gt;
&lt;li&gt;The Proven “4-Step-System” That Will Help You And Put Your Dev Career On Autopilot And How You Can Use It Right Now&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#click-here-now-to-watch-the-free-video"&gt;
  &lt;/a&gt;
  &lt;a href="https://bit.ly/3w76Mar"&gt;Click here now to watch the free video!&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;Best of success!💪&lt;br&gt;
Dragos Nedelcu&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PP.S. Like thousands of other ambitious software developers you are probably craving unbiased advice about what it really takes to build long-lasting confidence in your technical skills, become an expert developer, and earn more. If so, then I invite you to follow me on &lt;a href="https://www.linkedin.com/in/dragosnedelcu/"&gt;LinkedIn&lt;/a&gt; or &lt;a href="https://twitter.com/dragosgn"&gt;Twitter&lt;/a&gt; :) I will make sure to keep delivering you fresh pieces of wisdom straight from the trenches of software development. I will also make you get off your but and take action from time to time!&lt;/em&gt;&lt;/p&gt;

</description>
    </item>
  </channel>
</rss>
