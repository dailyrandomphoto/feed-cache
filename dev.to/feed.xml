<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>CXXGraph Library : Header-Only C++ Library for Graph Representation and Algorithms </title>
      <author>ZigRazor</author>
      <pubDate>Thu, 30 Sep 2021 11:16:56 +0000</pubDate>
      <link>https://dev.to/zigrazor/cxxgraph-library-header-only-c-library-for-graph-representation-and-algorithms-1afk</link>
      <guid>https://dev.to/zigrazor/cxxgraph-library-header-only-c-library-for-graph-representation-and-algorithms-1afk</guid>
      <description>&lt;h2&gt;
  &lt;a href="#cxxgraph"&gt;
  &lt;/a&gt;
  CXXGraph
&lt;/h2&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/ZigRazor"&gt;
        ZigRazor
      &lt;/a&gt; / &lt;a href="https://github.com/ZigRazor/CXXGraph"&gt;
        CXXGraph
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Header-Only C++ Library for Graph Representation and Algorithms
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/ZigRazor/CXXGraph/blob/master/Icon.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--om3usTQu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/ZigRazor/CXXGraph/raw/master/Icon.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
CXXGraph&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/0d3ae99a9dcced770f5a2e6d2395999c121d9975f3f1816ee3b3902a3c8e6a92/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f632b2b2532302d2532333030353939432e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d63253242253242266f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/0d3ae99a9dcced770f5a2e6d2395999c121d9975f3f1816ee3b3902a3c8e6a92/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f632b2b2532302d2532333030353939432e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d63253242253242266f676f436f6c6f723d7768697465"&gt;&lt;/a&gt; &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6aea43d076c7bf00489f1b347caa33fe5c4d84a8af2983804f8702632f2669ec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622532302d2532333132313031312e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d676974687562266c6f676f436f6c6f723d7768697465"&gt;&lt;img src="https://camo.githubusercontent.com/6aea43d076c7bf00489f1b347caa33fe5c4d84a8af2983804f8702632f2669ec/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622532302d2532333132313031312e7376673f267374796c653d666f722d7468652d6261646765266c6f676f3d676974687562266c6f676f436f6c6f723d7768697465"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://codecov.io/gh/ZigRazor/CXXGraph" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e0b9841f69ef29cc485b3d302097010f2d296ed1dde60f3adac4ba71370dcd04/68747470733a2f2f636f6465636f762e696f2f67682f5a696752617a6f722f43585847726170682f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d37373341513248395251" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://www.codefactor.io/repository/github/zigrazor/cxxgraph" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/0c66e00601b49f804758f834a946e1329891101b719d307d83d5566b5701a982/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f7a696772617a6f722f63787867726170682f6261646765" alt="CodeFactor"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/a5f922a2d34eec75f084349c6c747c69d94eccd0935dc93e295a4a686d1c4564/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f5a696752617a6f722f43585847726170682e737667" alt="GitHub license"&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/ZigRazor/CXXGraph/releases/"&gt;&lt;img src="https://camo.githubusercontent.com/e3a3bede7aca95abde3fcdbf4645750e7da6aa728bdbd9cd655771c9a244d670/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f5a696752617a6f722f43585847726170682e737667" alt="GitHub release"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/885c6402353e401234ea76f317d84186d70716c9db53a43b8a6d9daf037c712c/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/885c6402353e401234ea76f317d84186d70716c9db53a43b8a6d9daf037c712c/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f616c657274732f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963" alt="LGTM Alerts"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/6c41a6d75b013b0b28757348218ecf27f68e512a987e82bc9882fd3ab5021943/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963"&gt;&lt;img src="https://camo.githubusercontent.com/6c41a6d75b013b0b28757348218ecf27f68e512a987e82bc9882fd3ab5021943/68747470733a2f2f696d672e736869656c64732e696f2f6c67746d2f67726164652f6370702f6769746875622f5a696752617a6f722f43585847726170683f7374796c653d706c6173746963" alt="LGTM Grade"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/57a85d2ce2ebfa08308aa0e27c14e3e668b0075ece44e2d030a4298c089c85e0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657175697265642d472b2b372e332e302d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d28ad01b651a380285f9c75dea25963780875fcea989db81cf85ef6a29adc048/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72657175697265642d432b2b31372d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e17b5a84de0de988ba21d8a70cd9bec1e3ef9c33bc75be3ec44c1cbff4b73604/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f52657175697265642d434d616b65332e392d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ae88698a90d8466f4372f695b517d9a65fc5b3f70cb781531c2074876047c846/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4275696c642d5061737365642d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt; &lt;a href="https://shields.io/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/35a3866fb1a06659337b8fe3e8bfb6ff6705c702e1fae78d400d47217b00b766/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f556e6974546573742d5061737365642d477265656e2e737667" alt="Generic badge"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Share on &lt;a href="https://twitter.com/intent/tweet?text=Header-Only%20C++%20Library%20for%20Graph%20Representation%20and%20Algorithms%204&amp;amp;url=https://github.com/ZigRazor/CXXGraph&amp;amp;hashtags=cpp,headeronly,library,opensource,developers" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet"&gt;&lt;/a&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
Table of Contents&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#cxxgraph"&gt;CXXGraph&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#algorithm-explanation"&gt;Algorithm Explanation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dijkstra"&gt;Dijkstra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dial"&gt;Dial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#bfs"&gt;BFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#dfs"&gt;DFS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#cycle-detection"&gt;Cycle Detection&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#partition-algorithm-explanation"&gt;Partition Algorithm Explanation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#vertex-cut"&gt;Vertex-Cut&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#greedy-vertex-cut"&gt;Greedy Vertex-Cut&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#classes-explanation"&gt;Classes Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-use"&gt;How to use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#unit-test-execution"&gt;Unit-Test Execution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#google-test-installation"&gt;Google Test Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-compile-test"&gt;How to Compile Test&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-run-test"&gt;How to Run Test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#benchmark-execution"&gt;Benchmark Execution&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#google-benchmark-installation"&gt;Google Benchmark Installation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-compile-benchmark"&gt;How to Compile Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-run-benchmark"&gt;How to Run Benchmark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#packaging"&gt;Packaging&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#tarballs"&gt;Tarballs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#rpm"&gt;RPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#deb"&gt;DEB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/ZigRazor/CXXGraph#install-and-uninstall"&gt;Install and Uninstall&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-linux-tarballs"&gt;Install Linux Tarballs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-rpm"&gt;Install RPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-deb"&gt;Install DEB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#install-from-source"&gt;Install From Source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#example"&gt;Example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#how-to-contribute"&gt;How to contribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#site"&gt;Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#contact"&gt;Contact&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#support"&gt;Support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#references"&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ZigRazor/CXXGraph#we-are-looking-for"&gt;We are Looking for...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Introduction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;CXXGraph&lt;/strong&gt; is a small library, header only, that manages the Graph and it's algorithms in &lt;strong&gt;C++&lt;/strong&gt;. In other words a "Comprehensive C++ Graph Library".&lt;/p&gt;
&lt;h2&gt;
Algorithm Explanation&lt;/h2&gt;
&lt;h4&gt;
Dijkstra&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm" rel="nofollow"&gt;Graph Dijkstras Shortest Path Algorithm(Dijkstra's Shortest Path)&lt;/a&gt;
&lt;strong&gt;Dijkstra's Algorithm&lt;/strong&gt; is used to find the shortest path from a source node to all other reachable nodes in the graph. The algorithm initially assumes all the…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/ZigRazor/CXXGraph"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;CXXGraph is an Header-Only  library, that manages the Graph and it's algorithms in C++. In other words a "Comprehensive C++ Graph Library".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-publish-my-project"&gt;
  &lt;/a&gt;
  Why publish my project?
&lt;/h2&gt;

&lt;p&gt;Some months ago I start this project with the idea to develop somenthing new, or to better say something that can help the developer in some cases or simple that does not have a "good" implementation in this language (C++). &lt;br&gt;
In fact the goal of the library is the &lt;strong&gt;portability&lt;/strong&gt;, &lt;strong&gt;simplicity of the interface&lt;/strong&gt;, and the &lt;strong&gt;certainty of the correct execution of the algorithms&lt;/strong&gt;.&lt;br&gt;
Before this project start i search for somenthing like this, but I didn't find anything similar, so I had decided to start this project.&lt;/p&gt;

&lt;p&gt;Now i need help to improve the library and to test it, so I partecipate to &lt;strong&gt;Hacktoberfest&lt;/strong&gt; to get some developer or use in touch with this project.&lt;/p&gt;

&lt;p&gt;If you have 5 minutes to get in touch, click on the project or write to me at &lt;a href="mailto:zigrazor@gmail.com"&gt;zigrazor@gmail.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you so much! &lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>contributorswanted</category>
      <category>githunt</category>
      <category>showdev</category>
    </item>
    <item>
      <title>The largest library of UI components for popular frameworks</title>
      <author>Dawid Andrzejewski</author>
      <pubDate>Thu, 30 Sep 2021 11:12:48 +0000</pubDate>
      <link>https://dev.to/kemyd/the-largest-library-of-ui-components-for-popular-frameworks-51b5</link>
      <guid>https://dev.to/kemyd/the-largest-library-of-ui-components-for-popular-frameworks-51b5</guid>
      <description>&lt;p&gt;&lt;strong&gt;Building websites from scratch is a tough task if you don't have a designer on board&lt;/strong&gt;. Most of the developers are not designers at the same time, so in this situation, they decide to use a template. However, choosing the best one is a difficult task - many of them lack elements that you have to design yourself. Even if a template meets your every need, you still don't want to use it in every project so they don't look almost the same.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3200-handcrafted-ui-components"&gt;
  &lt;/a&gt;
  3200+ hand-crafted UI components
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R_BhbxBb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ey9n3dw1hnsbmxi59nsz.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R_BhbxBb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ey9n3dw1hnsbmxi59nsz.gif" alt="3200 ui components in 4 frameworks - Tailwind CSS, Bootstrap, Bulma, Material-UI"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's why we created for you the &lt;a href="https://shuffle.dev/components"&gt;&lt;strong&gt;biggest gallery of ready-made components&lt;/strong&gt;&lt;/a&gt; that you can use to quickly build a website outline. If you are missing a component - you will find it here and in dozens of variations. You can browse 24 unique UI libraries and categories of components in them. Thanks to so many options you will always find interesting and new variants of components.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z75_TbJR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qv2ssdeaxq0qlfavr80d.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z75_TbJR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qv2ssdeaxq0qlfavr80d.gif" alt="component preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Everyone of us has hit a blocking moment in a project. You're creating a website design and you just don't have an idea for that section. You usually then look for similar sites for inspiration and look at their solutions. But finding inspiration and then designing it and coding it in CSS is a lot of work. With our solution, you'll do it quickly and enjoyably. In addition, you can simply preview the component code in the editor for inspiration, or go to our editor and export the sources. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clean-code-in-four-frameworks"&gt;
  &lt;/a&gt;
  Clean code in four frameworks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2iJ4hBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a65xshvvpu1ttb9tsl2r.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q2iJ4hBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a65xshvvpu1ttb9tsl2r.gif" alt="clean code under each component"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each library is created as a template in one or more frameworks - Tailwind CSS, Bootstrap, Bulma or Material-UI. The code under them was created by our internal team of developers. We make sure that it is &lt;strong&gt;clean and compatible with the spirit of the framework&lt;/strong&gt;. We regularly update it for new versions of the framework. We also work on introducing documentation, so that it would be easier to use our templates in large projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#drag-and-drop-editor"&gt;
  &lt;/a&gt;
  Drag and drop editor
&lt;/h2&gt;

&lt;p&gt;All our components are available as part of a subscription or lifetime package of our drag and drop editor. Compared to our competitors' UI library packages, it's ridiculously cheap.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In a flurry of no-code tools, we go low-code for developers&lt;/strong&gt;. Speeding up and automating repetitive tasks is the future, but the development profession is alive and well for a reason. Modern frameworks simply give more options, and pages built in them are more efficient. &lt;/p&gt;

&lt;p&gt;That's why in our editor we add a visual interface where it makes your job easier, but everything is always editable in code or exportable to your IDE. With a few clicks, you can add a section, change colors, text, images. In this way, you will build and send a preview of the original layout to the client so that the detailed corrections can be done already on the prepared material. &lt;/p&gt;

&lt;p&gt;This way you will be able to spend more of your precious time on what is more difficult and determines the success of the project: understanding the client's needs, integration with the backend, fine-tuning the details.&lt;/p&gt;

&lt;p&gt;Let us know in the comments what you think and be sure to check out our components - &lt;a href="https://shuffle.dev/components"&gt;https://shuffle.dev/components&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>webdev</category>
      <category>css</category>
      <category>bootstrap</category>
    </item>
    <item>
      <title>Rsync ile CentOS8 Üzerinde Dizin Senkronizasyonu </title>
      <author>Zeki Ahmet Bayar</author>
      <pubDate>Thu, 30 Sep 2021 10:38:42 +0000</pubDate>
      <link>https://dev.to/aciklab/rsync-ile-centos8-uzerinde-dizin-senkronizasyonu-294a</link>
      <guid>https://dev.to/aciklab/rsync-ile-centos8-uzerinde-dizin-senkronizasyonu-294a</guid>
      <description>&lt;p&gt;Rsync ile dizin senkronizasyonu yapmak için öncelikle sunucular arasında parolasız erişimi sağlamak gerekmektedir. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-ssh-paketinin-kurulmas%C4%B1"&gt;
  &lt;/a&gt;
  1- SSH Paketinin Kurulması
&lt;/h3&gt;

&lt;p&gt;Senkronizasyon yapılacak sunucuların her ikisine gidilerek,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;yum &lt;span class="nb"&gt;install &lt;/span&gt;ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komutu ile SSH paketi kurulur.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-ssh-konfig%C3%BCrasyon-ayarlar%C4%B1n%C4%B1n-yap%C4%B1lmas%C4%B1"&gt;
  &lt;/a&gt;
  2- SSH Konfigürasyon Ayarlarının Yapılması
&lt;/h3&gt;

&lt;p&gt;Her ikisi sunucuda da,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
&lt;span class="nb"&gt;mkdir&lt;/span&gt; .ssh
&lt;span class="nb"&gt;touch&lt;/span&gt; .ssh/config .ssh/known_hosts .ssh/authorized_keys
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komutları ile gerekli SSH dizin yapısı oluşturulur. Daha sonra ilk sunucuda,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nano .ssh/config
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ile konfigürasyon dosyası açıldıktan sonra,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Host server02 &lt;span class="c"&gt;# İkinci sunucu kısa adı&lt;/span&gt;
    HostName 10.0.0.2 &lt;span class="c"&gt;# İkinci sunucu ip adresi&lt;/span&gt;
    User root &lt;span class="c"&gt;# Rsync için kullanılacak user&lt;/span&gt;
    Port 22
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ikinci sunucunun bilgileri girilir. Aynı işlem ikinci sunucuda da, birinci sunucunun bilgileri girilerek uygulanır.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-ssh-anahtar%C4%B1n%C4%B1n-olu%C5%9Fturulmas%C4%B1"&gt;
  &lt;/a&gt;
  3- SSH Anahtarının Oluşturulması
&lt;/h3&gt;

&lt;p&gt;SSH anahtarı oluşturmak için her iki sunucuda da,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh-keygen
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komutu çalıştırılır. Gelen sorular boş geçilerek anahtar ikilisi oluşturulur.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh-keygen
Enter file &lt;span class="k"&gt;in &lt;/span&gt;which to save the key &lt;span class="o"&gt;(&lt;/span&gt;/root/.ssh/id_rsa&lt;span class="o"&gt;)&lt;/span&gt;:
Enter same passphrase again:
Your public key has been saved &lt;span class="k"&gt;in&lt;/span&gt; /root/.ssh/id_rsa.pub.
SHA256:&lt;span class="k"&gt;***************************&lt;/span&gt; username@pc
+---[RSA 3072]----+
|..B+             |
|                 |
|o.o..            |
|+&lt;span class="k"&gt;*&lt;/span&gt; ..         o  |
|+.o.    S.   &lt;span class="nb"&gt;.&lt;/span&gt; + |
|.  ... oo o &lt;span class="nb"&gt;.&lt;/span&gt; E o|
|..         &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nb"&gt;.&lt;/span&gt; + |
|+o +sssss     o  |
|+o&lt;span class="k"&gt;*&lt;/span&gt;o.  &lt;span class="k"&gt;*&lt;/span&gt;+o       |
+----[SHA256]-----+
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Her iki sunucuda da anahtar ikilisi oluşturulduktan sonra birinci sunucuda,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh-copy-id server02
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ve ikinci sunucuda,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh-copy-id server01
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komutları çalıştırılarak anahtarlar birbirlerine kopyalanır. Kopyalama işleminden sonra birinci sunucuda,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh server02
&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ve ikinci sunucuda,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;ssh server01
&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komutları çalıştırıldığında parolasız erişimin sağlandığı görülmelidir. SSH bağlantılarının sonlandırılması için her bağlantı sonrasında exit komutu çalıştırılmalıdır.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-dosya-senkronizasyonu-beti%C4%9Finin-sisteme-yerle%C5%9Ftirilmesi"&gt;
  &lt;/a&gt;
  4- Dosya Senkronizasyonu Betiğinin Sisteme Yerleştirilmesi
&lt;/h3&gt;

&lt;p&gt;Gerekli dizini oluşturmak için,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir&lt;/span&gt; /usr/share/rsync
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komutu kullanıldıktan sonra,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nano /usr/share/rsync/file-sync.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komutu ile ilgili dosya açılır ve içerisine,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="k"&gt;while &lt;/span&gt;inotifywait &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; modify,attrib,close_write,move,create,delete /bu/sunucuda/esitlenecek/dizin/&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
    &lt;/span&gt;rsync &lt;span class="nt"&gt;-aAXru&lt;/span&gt; &lt;span class="nt"&gt;--progress&lt;/span&gt; &lt;span class="nt"&gt;--delete&lt;/span&gt; /bu/sunucuda/esitlenecek/dizin/ server02:/karsi/sunucuda/esitlenecek/dizin/
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;betiği yerleştirilir. &lt;/p&gt;

&lt;p&gt;Bu betikte, &lt;strong&gt;/bu/sunucuda/esitlenecek/dizin/&lt;/strong&gt; yerine betiğin yerleştirileceği sunucuda eşitlenmesi istenen dizinin yolu verilmelidir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;/karsi/sunucuda/esitlenecek/dizin/&lt;/strong&gt; yerine ise, karşı sunucuda eşitlenmesi istenen dizinin yolu verilmelidir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bu uygulama her iki sunucuya da çapraz olarak yapılmalıdır.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-servis-dosyalar%C4%B1n%C4%B1n-olu%C5%9Fturulmas%C4%B1"&gt;
  &lt;/a&gt;
  5- Servis Dosyalarının Oluşturulması
&lt;/h3&gt;

&lt;p&gt;Yukarıda hazırlanan betiklerin servis haline getirilip sürekli olarak senkronizasyonun sağlanması gerekmektedir. Bunun için,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;nano /etc/systemd/system/rsync-client.service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;komutu ile servis dosyası açılır ve içerisine,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;Unit]
Description &lt;span class="o"&gt;=&lt;/span&gt; SyncService
After &lt;span class="o"&gt;=&lt;/span&gt; network.target
&lt;span class="o"&gt;[&lt;/span&gt;Service]
PIDFile &lt;span class="o"&gt;=&lt;/span&gt; /run/syncservice/syncservice.pid
User &lt;span class="o"&gt;=&lt;/span&gt; root
Group &lt;span class="o"&gt;=&lt;/span&gt; root
ExecStartPre &lt;span class="o"&gt;=&lt;/span&gt; /bin/mkdir /run/syncservice
ExecStart &lt;span class="o"&gt;=&lt;/span&gt; /bin/bash /usr/share/rsync/file-sync.sh
ExecReload &lt;span class="o"&gt;=&lt;/span&gt; /bin/kill &lt;span class="nt"&gt;-s&lt;/span&gt; HUP &lt;span class="nv"&gt;$MAINPID&lt;/span&gt;
ExecStop &lt;span class="o"&gt;=&lt;/span&gt; /bin/kill &lt;span class="nt"&gt;-s&lt;/span&gt; TERM &lt;span class="nv"&gt;$MAINPID&lt;/span&gt;
ExecStopPost &lt;span class="o"&gt;=&lt;/span&gt; /bin/rm &lt;span class="nt"&gt;-rf&lt;/span&gt; /run/syncservice
PrivateTmp &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;Install]
WantedBy &lt;span class="o"&gt;=&lt;/span&gt; multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;dosyası eklenir. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bu dosyanın değiştirilmesine gerek yoktur. Her iki sunucuya da aynı şekilde eklenmelidir.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-servislerin-ba%C5%9Flat%C4%B1lmas%C4%B1"&gt;
  &lt;/a&gt;
  6- Servislerin Başlatılması
&lt;/h3&gt;

&lt;p&gt;Servisler hazırlandıktan sonra,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;systemctl daemon-reload
systemctl start rsync-client.service
systemctl &lt;span class="nb"&gt;enable &lt;/span&gt;rsync-client.service
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;işlemleri her iki sunucuda da yapılmalıdır.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Servisin doğru çalıştığı, çıktının aşağıda yer alan çıktıya benzerliği ile kontrol edilebilir.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;root@localhost ~]# systemctl status rsync-client.service
● rsync-client.service - SyncService
   Loaded: loaded &lt;span class="o"&gt;(&lt;/span&gt;/etc/systemd/system/rsync-client.service&lt;span class="p"&gt;;&lt;/span&gt; disabled&lt;span class="p"&gt;;&lt;/span&gt; vendor preset: disabled&lt;span class="o"&gt;)&lt;/span&gt;
   Active: active &lt;span class="o"&gt;(&lt;/span&gt;running&lt;span class="o"&gt;)&lt;/span&gt; since Tue 2021-09-28 06:10:30 EDT&lt;span class="p"&gt;;&lt;/span&gt; 13s ago
  Process: 8286 &lt;span class="nv"&gt;ExecStopPost&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/bin/rm &lt;span class="nt"&gt;-rf&lt;/span&gt; /run/syncservice &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;exited, &lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0/SUCCESS&lt;span class="o"&gt;)&lt;/span&gt;
  Process: 8284 &lt;span class="nv"&gt;ExecStop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/bin/kill &lt;span class="nt"&gt;-s&lt;/span&gt; TERM &lt;span class="nv"&gt;$MAINPID&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;exited, &lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0/SUCCESS&lt;span class="o"&gt;)&lt;/span&gt;
  Process: 8289 &lt;span class="nv"&gt;ExecStartPre&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/bin/mkdir /run/syncservice &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;code&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;exited, &lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0/SUCCESS&lt;span class="o"&gt;)&lt;/span&gt;
 Main PID: 8291 &lt;span class="o"&gt;(&lt;/span&gt;bash&lt;span class="o"&gt;)&lt;/span&gt;
    Tasks: 2 &lt;span class="o"&gt;(&lt;/span&gt;limit: 4755&lt;span class="o"&gt;)&lt;/span&gt;
   Memory: 592.0K
   CGroup: /system.slice/rsync-client.service
           ├─8291 /bin/bash /usr/share/rsync/file-sync.sh
           └─8294 inotifywait &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="nt"&gt;-e&lt;/span&gt; modify,attrib,close_write,move,create,delete /root/yedek/

Sep 28 06:10:30 localhost.localdomain systemd[1]: rsync-client.service: Succeeded.
Sep 28 06:10:30 localhost.localdomain systemd[1]: Stopped SyncService.
Sep 28 06:10:30 localhost.localdomain systemd[1]: Starting SyncService...
Sep 28 06:10:30 localhost.localdomain systemd[1]: Started SyncService.
Sep 28 06:10:30 localhost.localdomain bash[8291]: Setting up watches.  Beware: since &lt;span class="nt"&gt;-r&lt;/span&gt; was given, th&amp;gt;
Sep 28 06:10:30 localhost.localdomain bash[8291]: Watches established.

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOT : Senkronizasyonda yaşanan gecikmeler veri kaybına sebep olabilir !&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>rsync</category>
      <category>linux</category>
      <category>filesync</category>
    </item>
    <item>
      <title>📚Angular Interview Questions Part 3</title>
      <author>Stacksjar</author>
      <pubDate>Thu, 30 Sep 2021 10:31:03 +0000</pubDate>
      <link>https://dev.to/stacksjar/angular-interview-questions-part-3-4m2h</link>
      <guid>https://dev.to/stacksjar/angular-interview-questions-part-3-4m2h</guid>
      <description>&lt;p&gt;In this article we are going to see a well curated list of angular interview questions 2021 and answers for experienced as well as freshers.&lt;/p&gt;

&lt;p&gt;Part 1 of this series :- &lt;a href="https://stacksjar.com/post/angular-interview-questions-part-1"&gt;Angular Interview Questions Part 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Part 2 of this series :- &lt;a href="https://stacksjar.com/post/angular-interview-questions-part-2"&gt;Angular Interview Questions Part 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Part 3 of this series :- &lt;a href="https://stacksjar.com/post/angular-interview-questions-part-3"&gt;Angular Interview Questions Part 3&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-prioritize-typescript-over-javascript-in-angular"&gt;
  &lt;/a&gt;
  Why prioritize TypeScript over JavaScript in Angular?
&lt;/h2&gt;

&lt;p&gt;TypeScript simplifies JavaScript code, making it easier to read and debug. TypeScript provides highly productive development tools for JavaScript IDEs and practices, like static checking. TypeScript makes code easier to read and understand. With TypeScript, we can make a huge improvement over plain JavaScript.&lt;/p&gt;

&lt;p&gt;There are many more benefits of TypeScript over Javascript:&lt;/p&gt;

&lt;p&gt;Consistency&lt;br&gt;
Productivity&lt;br&gt;
Maintainability&lt;br&gt;
Modularity&lt;br&gt;
Catch Errors Early&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-a-bootstrapping-module-in-angular"&gt;
  &lt;/a&gt;
  What is a Bootstrapping module in Angular?
&lt;/h2&gt;

&lt;p&gt;Bootstrapping in Angular is a function component in the core ng module that is used for starting up the Angular application. By default the Appcomponent is the default component that will be bootstraped.&lt;/p&gt;

&lt;p&gt;Below is the Default code for bootstrapping an angular application in app.module.ts&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@NgModule({
    declarations: [
        AppComponent,

    ],
    imports: [
        BrowserModule,
        AppRoutingModule,
    ],
    providers: [],
    bootstrap: [AppComponent],
    schemas: []
})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-the-difference-between-pure-and-impure-pipe-in-angular"&gt;
  &lt;/a&gt;
  What is the difference between Pure and Impure pipe in Angular?
&lt;/h2&gt;

&lt;p&gt;A Pure Pipe is only called when Angular detects a change in the value or the parameters passed to a pipe.&lt;/p&gt;

&lt;p&gt;An Impure Pipe is called for every change detection cycle no matter whether the value or parameter(s) changes.&lt;/p&gt;

&lt;p&gt;Below is an example of pipe and its decorator for setting pipe type&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@Pipe({
 name: 'myCustomPipe', 
 pure: true    // true means this is a Pure Pipe and false means its and Impure Pipe (default is true)
})

export class MyCustomPipe {}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-rxjs"&gt;
  &lt;/a&gt;
  What is RxJS?
&lt;/h2&gt;

&lt;p&gt;The full form of RxJS is Reactive Extension for Javascript. It is a javascript library that uses observables to work with reactive programming that deals with asynchronous data calls, callbacks and event-based programs.&lt;/p&gt;

&lt;p&gt;RxJS is a library for reactive programming using observables that makes it easier to compose asynchronous or callback-based code. RxJS can be used with any other Javascript libraries and frameworks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-an-observable"&gt;
  &lt;/a&gt;
  What is an observable?
&lt;/h2&gt;

&lt;p&gt;Observables are simply a function that are able to give multiple values over time, either synchronously or asynchronously. You can also consider Observables as lazy Push collections of multiple values.&lt;/p&gt;

&lt;p&gt;Observables provide support for passing messages between parts of your application. They are used frequently in Angular and are a technique for event handling, asynchronous programming, and handling multiple values.&lt;/p&gt;

&lt;p&gt;We can subscribe to an observable and get values synchronously or asynchronously.&lt;/p&gt;

&lt;p&gt;Below is an example of how to create and Observable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var observable = Rx.Observable.create((observer: any) =&amp;gt;{

   observer.next("This is an Observable");

})

observable.subscribe((data)=&amp;gt;{
   console.log(data);    // output - "This is an Observable"
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-an-observer"&gt;
  &lt;/a&gt;
  What is an observer?
&lt;/h2&gt;

&lt;p&gt;Observers are just objects with three callbacks, one for each type of notification that an Observable may deliver.&lt;/p&gt;

&lt;p&gt;An Observer is a consumer of values delivered by an Observable. Observers are simply a set of callbacks, one for each type of notification delivered by the Observable: next , error , and complete.&lt;/p&gt;

&lt;p&gt;Below is an example of Observer and values retrieved after being Subscribed to it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const observer = {
 next: x =&amp;gt; console.log('This is next value: ' + x),
 error: err =&amp;gt; console.error('Observer got an error: ' + err),
};

observable.subscribe(observer);

//OR

observable.subscribe(observer =&amp;gt; {
  observer.next(10);
  observer.error("something went wrong");  
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-are-angular-elements"&gt;
  &lt;/a&gt;
  What are Angular Elements?
&lt;/h2&gt;

&lt;p&gt;Angular elements are Angular components packaged as custom elements (also called Web Components), a web standard for defining new HTML elements in a framework-agnostic way.&lt;/p&gt;

&lt;p&gt;A custom element extends HTML by allowing you to define a tag whose content is created and controlled by JavaScript code. The browser maintains a CustomElementRegistry of defined custom elements, which maps an instantiable JavaScript class to an HTML tag.&lt;/p&gt;

&lt;p&gt;Live Example of Angular Elements :- Angular Elements Working Example&lt;/p&gt;

&lt;p&gt;The custom elements standard is currently supported by browsers like Chrome, Opera, and Safari. To be able to use it Firefox and Edge polyfills are available. The Angular Elements functionality is available with the package @angular/elements. &lt;/p&gt;

&lt;p&gt;In order to keep track of all available custom elements the browser maintains a registry in which every elements needs to be registered first. In this registry the name of the tag is mapped to the JavaScript class which controls the behavior and the output of that element.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-angular-universal-or-angular-ssr"&gt;
  &lt;/a&gt;
  What is Angular Universal or Angular SSR?
&lt;/h2&gt;

&lt;p&gt;Angular Universal is mechanism provided by Angular team by which you can render your single page angular application on server instead of Browser. Typical Angular applications are Single-Page Applications (aka SPA's) where the rendering occurs on the Browser. This process can also be referred to as client-side rendering (CSR).&lt;/p&gt;

&lt;p&gt;Angular Universal is a very helpful and SEO friendly approach for modern web applications.&lt;/p&gt;

&lt;p&gt;The Angular Universal provides 2 options:&lt;/p&gt;

&lt;p&gt;Server Side Rendering : In this method the requested page will be completely rendered on server and send to the browser&lt;br&gt;
Pre-Rendering : In this method you have to provide a list of routes you want to pre-render then by using the pre rendering command and the routes mentioned it will complete the Build with fully rendered HTML pages&lt;br&gt;
To add Angular Universal to your project use below command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ng add @nguniversal/express-engine&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-are-service-workers-in-angular"&gt;
  &lt;/a&gt;
  What are Service Workers in Angular?
&lt;/h2&gt;

&lt;p&gt;Service Worker in Angular is a script that runs in the web browser and manages caching for an application. Service workers function as a network proxy. They intercept all outgoing HTTP requests made by the application and can choose how to respond to them.&lt;/p&gt;

&lt;p&gt;Service Workers helps in improving your application's performance.&lt;/p&gt;

&lt;p&gt;To add Service Workers in your Angular application use below command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ng add @angular/pwa&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Checkout this Article: It covers complete Steps to Add Service Worker in Angular Application&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-lazy-loading-in-angular"&gt;
  &lt;/a&gt;
  What is Lazy Loading in Angular?
&lt;/h2&gt;

&lt;p&gt;Lazy Loading is a technique in Angular that allows you to load JavaScript components asynchronously when a specific route is activated. It improves the speed of the application load time by splitting the application into several bundles. When the user navigates through the app, the bundles are loaded as required.&lt;/p&gt;

&lt;p&gt;Instead of loading the entire web page and rendering it to the user in one go as in bulk loading, the concept of lazy loading assists in loading only the required section and delays the remaining, until it is needed by the user.&lt;/p&gt;

&lt;p&gt;Below is an example route for a lazy loaded module:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const routes: Routes = [
  {path: '', redirectTo: 'home', pathMatch: 'full'},
  {path: 'home', component: HomeComponent},
  {path: 'lazy', loadChildren: './lazy/lazy.module#LazyModule'}
];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-a-shared-module-in-angular"&gt;
  &lt;/a&gt;
  What is a Shared Module in Angular?
&lt;/h2&gt;

&lt;p&gt;Shared modules in Angular helps you write more organized code in less time, helping you be more productive. Shared modules are an ideal spot to declare components in order to make them reusable. You won’t have to re-import the same components in every module—you’ll just import the shared module.&lt;/p&gt;

&lt;p&gt;Creating shared modules allows you to organize and streamline your code. You can put commonly used directives, pipes, and components into one module and then import just that module wherever you need it in other parts of your app.&lt;/p&gt;

&lt;p&gt;Below is an example of a Shared Module:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;﻿import { NgModule } from "@angular/core";
import { CommonModule } from "@angular/common";

import { SharedRoutingModule } from "./shared-routing.module";
import { SharedComponent } from "./components/shared/shared.component";

@NgModule({
 declarations: [SharedComponent],
 imports: [CommonModule, SharedRoutingModule],
 exports: [SharedComponent]
})

export class SharedModule {}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-dom-sanitizer-in-angular"&gt;
  &lt;/a&gt;
  What is DOM Sanitizer in Angular?
&lt;/h2&gt;

&lt;p&gt;Dom Sanitizer in Angular helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing values to be safe to use in the different DOM contexts.&lt;/p&gt;

&lt;p&gt;Below are the different methods Provided by Angular for Sanitization and make sure any user data is appropriately escaped for this security context.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//default sanitize data
abstract sanitize(context: SecurityContext, value: string | SafeValue): string | null

//sanitize html
abstract bypassSecurityTrustHtml(value: string): SafeHtml

//sanitize css
abstract bypassSecurityTrustStyle(value: string): SafeStyle

//sanitize scripts
abstract bypassSecurityTrustScript(value: string): SafeScript

//sanitize url
abstract bypassSecurityTrustUrl(value: string): SafeUrl

//sanitize resource urls
abstract bypassSecurityTrustResourceUrl(value: string): SafeResourceUrl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Checkout other Articles in this series:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Part 1 of this series :- &lt;a href="https://stacksjar.com/post/angular-interview-questions-part-1"&gt;Angular Interview Questions Part 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Part 2 of this series :- &lt;a href="https://stacksjar.com/post/angular-interview-questions-part-2"&gt;Angular Interview Questions Part 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Part 3 of this series :- &lt;a href="https://stacksjar.com/post/angular-interview-questions-part-3"&gt;Angular Interview Questions Part 3&lt;/a&gt;&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>tutorial</category>
      <category>javascript</category>
    </item>
    <item>
      <title>5 reasons for AI implementation in healthcare</title>
      <author>Addepto</author>
      <pubDate>Thu, 30 Sep 2021 10:20:51 +0000</pubDate>
      <link>https://dev.to/addepto/5-reasons-for-ai-implementation-in-healthcare-38li</link>
      <guid>https://dev.to/addepto/5-reasons-for-ai-implementation-in-healthcare-38li</guid>
      <description>&lt;p&gt;Today, AI technology can be found in almost every industry and business, including healthcare. Artificial intelligence in healthcare has huge and wide potential, from solutions for mobile diagnostics to drug discovery that can be achieved using machine learning.&lt;/p&gt;

&lt;p&gt;💡The global artificial intelligence in healthcare market size is expected to reach USD 120.2 billion by 2028 and is expected to expand at a CAGR of 41.8% over the forecast period, according to a new report by Grand View Research, Inc. &lt;/p&gt;

&lt;p&gt;If you've been thinking about implementing AI to your business, keep reading to find out 5 reasons for adopting AI in the healthcare industry. In addition, you can find predictions for the future that will help you be convinced of the potential of &lt;a href="https://addepto.com/ai-consulting/"&gt;AI consulting&lt;/a&gt; in healthcare.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-reasons-for-ai-implementation-in-healthcare"&gt;
  &lt;/a&gt;
  5 reasons for AI implementation in healthcare
&lt;/h2&gt;

&lt;p&gt;In this article, you can find 5 reasons to implement AI in the healthcare industry. These solutions help doctors work more productively, improve processes and clinical outcomes. These are also 5 reasons that indicate that AI technology in healthcare is gaining popularity and is a potential source of major investments. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1robotassisted-surgery"&gt;
  &lt;/a&gt;
  1.Robot-assisted surgery
&lt;/h3&gt;

&lt;p&gt;Robotic or robot-assisted surgery allows doctors to perform many types of complex procedures with greater precision, flexibility, and control than is possible with traditional methods. Surgeons using an AI-based robotic system believe that, for many procedures, it improves accuracy, flexibility and control during surgery, and allows them to see the surgery site better than traditional methods. &lt;br&gt;
Robotic surgery offers patients many benefits to open surgery, including:&lt;br&gt;
👉Shorter hospitalization&lt;br&gt;
👉Reduced pain and discomfort&lt;br&gt;
👉Faster recovery time and return to normal activities&lt;br&gt;
👉Smaller incisions that reduce the risk of infection&lt;br&gt;
👉Reduced blood loss and transfusions&lt;br&gt;
👉Minimal scars&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2chatbots-amp-mobile-apps-for-healthcare"&gt;
  &lt;/a&gt;
  2.Chatbots &amp;amp; Mobile Apps for healthcare
&lt;/h3&gt;

&lt;p&gt;The digital health and wellness market is valued at over $106 billion in 2019, according to a recent Global Market Insights report. And with the global pandemic in 2020 that increases the demand for digital health technologies, the industry is expected to continue to grow 28.5% by 2026. [1] &lt;br&gt;
💡The AI healthcare market is predicted to exceed $34 billion by 2025.[1] &lt;/p&gt;

&lt;p&gt;Artificial Intelligence is useful in diagnostics, therapy and customer service through intelligent applications. Chatbots are by far the most popular AI application. What's more, the adoption of chatbots in organizations is growing year by year, and the chatbot market is expected to reach over USD 300 million by 2023. [1]&lt;/p&gt;

&lt;p&gt;The development of medical applications has played an important role in providing patients with quick information. Using mobile apps for healthcare, you can find a doctor, make an appointment and view all test reports without leaving your home. Mobile applications not only help patients, but also allows doctors to seamlessly collect and store personal health data. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3aipowered-alerting-systems-amp-virtual-assistants"&gt;
  &lt;/a&gt;
  3.AI-powered alerting systems &amp;amp; Virtual assistants
&lt;/h3&gt;

&lt;p&gt;Today, more and more AI solutions are implemented to support the transition from inpatient to home care, such as remote monitoring, AI alarm systems or virtual assistants. These technologies include the increased use of NLP solutions in hospitals and at home.&lt;/p&gt;

&lt;p&gt;Artificial intelligence systems make it easier for virtual nursing assistants to perform a wide range of tasks, from communicating with patients to sending them to a better and more efficient healthcare facility. Such virtual nurses are available 24/7 and can answer questions as well as monitor patients and provide immediate solutions. Nowadays, AI technology is also used in a wider range of specialties, such as oncology, cardiology and neurology.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4improved-data-processing-for-diagnosis"&gt;
  &lt;/a&gt;
  4.Improved data processing for diagnosis
&lt;/h3&gt;

&lt;p&gt;One of the benefits of AI is the processing of large amounts of data, which allows AI to change various medical devices. For example, one NIH study that used artificial intelligence to diagnose metastatic breast cancer found the technology to be 99% accurate. [2] It has also been shown that artificial intelligence is capable of detecting the spread of cancer cells - micrometastases - which are usually very difficult to detect by specialist human pathologists.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5enhanced-drug-development-process"&gt;
  &lt;/a&gt;
  5.Enhanced drug development process
&lt;/h3&gt;

&lt;p&gt;The development of new drugs also requires processing of large amounts of data due to the enormous number of possibilities for chemical combinations. The solution is AI technology, which works amazingly well with large amounts of data. This ability enables more approved drugs to be produced in a faster, more cost-effective process with higher R&amp;amp;D efficiency. &lt;/p&gt;

&lt;p&gt;By implementing &lt;a href="https://addepto.com/artificial-intelligence-in-drug-discovery-with-machine-learning/"&gt;AI into the drug development process&lt;/a&gt;, this technology has great potential to identify the most promising developments in the research process, helping to save time and resources at an early stage.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#future-predictions"&gt;
  &lt;/a&gt;
  Future Predictions
&lt;/h2&gt;

&lt;p&gt;AI technology is developing at an incredible pace, so below you can find 3 future predictions about AI in healthcare industry: &lt;/p&gt;

&lt;p&gt;👩‍🔬 VR and AR promise to be very useful in the healthcare industry. It is believed that using VR to train healthcare workers improves skill retention by 75% and reduces skill loss by up to 52%. [3]&lt;/p&gt;

&lt;p&gt;🧬 AI-powered predictive care: In 2030 health systems can predict when a person is at risk of a chronic disease, for example, and propose preventive measures before they get worse. [4] &lt;/p&gt;

&lt;p&gt;👨‍🔬 The future of AI will be based in predicting future diseases, their origins and the spread of the pandemic.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#key-takeaways"&gt;
  &lt;/a&gt;
  Key Takeaways
&lt;/h2&gt;

&lt;p&gt;▶️Artificial Intelligence truly transforms the modern healthcare industry in many ways.&lt;/p&gt;

&lt;p&gt;▶️5 reasons why you should implement AI in your company: robot-assisted surgery, chatbots, AI-powered alerting systems, enhanced drug development and improved data processing for diagnosis. &lt;/p&gt;

&lt;p&gt;▶️AI is a huge investment potential for investors and entrepreneurs. &lt;/p&gt;




&lt;p&gt;[1]Eleks.com. The Rise of Digital Health and Wellness Software. Accessed on Aug 2, 2021. &lt;br&gt;
[2]Pubmed.gov.  Artificial Intelligence-Based Breast Cancer Nodal Metastasis Detection: Insights Into the Black Box for Pathologists. Accessed on Aug 2, 2021. &lt;br&gt;
[3] Bisresearch.com. Global Augmented Reality and Virtual Reality Market in Healthcare.Accessed on Aug 2, 2021. &lt;br&gt;
[4] Weforum.org. Here are 3 ways AI will change healthcare by 2030. &lt;/p&gt;

</description>
      <category>technology</category>
      <category>healthcare</category>
      <category>artificialintelligence</category>
    </item>
    <item>
      <title>Ultimate Guide to setup React Context API with a custom hook [Typescript]</title>
      <author>damiisdandy</author>
      <pubDate>Thu, 30 Sep 2021 10:09:35 +0000</pubDate>
      <link>https://dev.to/damiisdandy/ultimate-guide-to-setup-react-context-api-with-a-custom-hook-typescript-27kn</link>
      <guid>https://dev.to/damiisdandy/ultimate-guide-to-setup-react-context-api-with-a-custom-hook-typescript-27kn</guid>
      <description>&lt;p&gt;This is a guide to help you set up React Context API with typescript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-react-context-api"&gt;
  &lt;/a&gt;
  🤨 What React Context API?
&lt;/h2&gt;

&lt;p&gt;Context is designed to share data that can be considered “global” for a tree of React components, This prevents &lt;a href="https://kentcdodds.com/blog/prop-drilling"&gt;Prop drilling&lt;/a&gt; and allows you to pass data around your react component tree efficiently.&lt;/p&gt;

&lt;p&gt;There are external libraries like &lt;a href="https://kentcdodds.com/blog/prop-drilling"&gt;Redux&lt;/a&gt; that help with this, but luckily react implemented a built-in feature called &lt;a href="https://reactjs.org/docs/context.html"&gt;React Context API&lt;/a&gt; that does this perfectly.&lt;/p&gt;

&lt;p&gt;Let's dive in! 😁&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#setup-%F0%9F%9B%A0"&gt;
  &lt;/a&gt;
  Setup 🛠
&lt;/h3&gt;

&lt;p&gt;To set up the project we need to first create a &lt;code&gt;create-react-app&lt;/code&gt; application with the typescript template, To do this open up a terminal window and run the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx create-react-app context-typescript --template typescript

# or

yarn create react-app context-typescript --template typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Open the &lt;code&gt;context-typescript&lt;/code&gt; directory in your favorite text editor like VS code, add delete the following files within the &lt;code&gt;src&lt;/code&gt; directory.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;App.css&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;App.test.tsx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;or simply run the commands&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd context-typescript/src
rm App.css App.test.tsx
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then open up the &lt;code&gt;App.tsx&lt;/code&gt; file, clear everything within it and copy the following lines of code inside it.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/App.tsx&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./logo.svg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#declaring-the-interfaces-and-types-well-use"&gt;
  &lt;/a&gt;
  Declaring the Interfaces and types we'll use 🧩
&lt;/h3&gt;

&lt;p&gt;Within the &lt;code&gt;react-app-env.d.ts&lt;/code&gt; file we'll declare the &lt;a href="https://www.typescriptlang.org/docs/handbook/2/objects.html"&gt;Interface&lt;/a&gt; for our global state, We will be building a To-do application in this example to illustrate the use of the context API.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// react-app-env.d.ts&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;isCompleted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Todo&lt;/span&gt;&lt;span class="p"&gt;[];&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#creating-our-context"&gt;
  &lt;/a&gt;
  Creating Our Context 🌴
&lt;/h3&gt;

&lt;p&gt;Create a folder in the &lt;code&gt;src&lt;/code&gt; directory called &lt;code&gt;context&lt;/code&gt; within it create two files called &lt;code&gt;index.tsx&lt;/code&gt; and &lt;code&gt;reducer.ts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;or run the commands&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir src/context

cd src/context

touch index.tsx reducer.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Within the &lt;code&gt;index.tsx&lt;/code&gt; we'll create our context, global context provider, and our custom hook. In the &lt;code&gt;reducer.ts&lt;/code&gt; we'll create our reducer function.&lt;/p&gt;

&lt;p&gt;Open up the &lt;code&gt;index.tsx&lt;/code&gt; type the following&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/context/index.tsx&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Dispatch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;ReactNode&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Initial State&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Prepare dev.to article ✍&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2021-09-28T12:00:00-06:30&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;isCompleted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Watch season 3 episode 2 of Attack on titans 👀&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2021-09-30T11:00:00-06:30&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
      &lt;span class="na"&gt;isCompleted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We simply just imported all that we'll be using in the file and initiated our initial state. Notice how we used the &lt;code&gt;State&lt;/code&gt; interface.&lt;/p&gt;

&lt;p&gt;Before we create our Context let's first declare the &lt;code&gt;Interface&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt; we'll be using for our context.&lt;/p&gt;

&lt;p&gt;Within the &lt;code&gt;react-app-env.d.ts&lt;/code&gt; file add the following lines of code.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// react-app-env.d.ts&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ActionTypes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TOGGLE_MODE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ADD_TODO&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;REMOVE_TODO&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MARK_AS_DONE&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;Action&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ActionTypes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We've just declared the &lt;code&gt;Action&lt;/code&gt; interface and its respective types (&lt;code&gt;ActionTypes&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;Now we can create our context, Add the following lines of code underneath the initial state we just declared in the &lt;code&gt;index.tsx&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/context/index.tsx&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// Create Our context&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;globalContext&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createContext&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Dispatch&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Action&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We've already imported the &lt;code&gt;createContext&lt;/code&gt; function and &lt;code&gt;Dispatch&lt;/code&gt; interface, we also implemented our &lt;code&gt;Action&lt;/code&gt; interface, and set the initial state to our &lt;code&gt;initialState&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-the-reducer"&gt;
  &lt;/a&gt;
  Creating the Reducer 📦
&lt;/h3&gt;

&lt;p&gt;Before we create the reducer function lets the &lt;code&gt;Type&lt;/code&gt; for our reducer function within the &lt;code&gt;react-app-env.d.ts&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// react-app-env.d.ts&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;

&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ReducerType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This is simply a function that takes in the &lt;code&gt;State&lt;/code&gt; and &lt;code&gt;Action&lt;/code&gt; and returns the &lt;code&gt;State&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Within the &lt;code&gt;reducer.ts&lt;/code&gt; file, copy the function below.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/context/reducer.ts&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ReducerType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;TOGGLE_MODE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;isDark&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isDark&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ADD_TODO&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mostRecentTodos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
          &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// generate it's id based on the most recent todo&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;mostRecentTodos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;mostRecentTodos&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;isCompleted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;createdAt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;REMOVE_TODO&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;MARK_AS_DONE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;selectedTodo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;selectedTodo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;filter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;action&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;selectedTodo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;isCompleted&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="p"&gt;}]&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nl"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Based on the &lt;code&gt;ActionTypes&lt;/code&gt; type we previously initialized, we are using for the &lt;code&gt;switch&lt;/code&gt; statement's &lt;code&gt;action.type&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Because we are using Typescript our text editor or IDE helps us with IntelliSense for the action types.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bqY6Z4Q6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q36917so0a8ri7u5uhfz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bqY6Z4Q6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q36917so0a8ri7u5uhfz.png" alt="typescript intelliSense"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#creating-the-global-provider"&gt;
  &lt;/a&gt;
  Creating the Global Provider 🌐
&lt;/h3&gt;

&lt;p&gt;Within the &lt;code&gt;index.tsx&lt;/code&gt; file we'll import the reducer function we just created.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/context/index.tsx&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;reducer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./reducer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Then we'll create the global provider that we'll wrap around our root component&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/context/index.tsx&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// Provider to wrap around our root react component&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GlobalContextProvider&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;children&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ReactNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useReducer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reducer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;globalContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Provider&lt;/span&gt;
      &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;
        &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;}}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/globalContext.Provider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We've previously imported &lt;code&gt;ReactNode&lt;/code&gt; and &lt;code&gt;useReducer&lt;/code&gt;.&lt;br&gt;
The &lt;code&gt;Provider&lt;/code&gt; property is gotten from our previously created &lt;code&gt;globalContext&lt;/code&gt;, We also added in the parameters &lt;code&gt;reducer&lt;/code&gt; and &lt;code&gt;initialState&lt;/code&gt; inside the &lt;code&gt;useReducer&lt;/code&gt; hook, &lt;em&gt;(psst! picture &lt;code&gt;useReduer&lt;/code&gt; as &lt;code&gt;useState&lt;/code&gt; on steroids 💪)&lt;/em&gt;. The &lt;code&gt;children&lt;/code&gt; prop is simply the direct child component of &lt;code&gt;GlobalContextProvider&lt;/code&gt; (our entire app).&lt;/p&gt;

&lt;p&gt;Now we simply just wrap the &lt;code&gt;GlobalContextProvider&lt;/code&gt; around our root component within the &lt;code&gt;src/index.tsx&lt;/code&gt; file&lt;/p&gt;

&lt;p&gt;Your code should look like this&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/index.tsx&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;ReactDOM&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-dom&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./index.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;reportWebVitals&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./reportWebVitals&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;GlobalContextProvider&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./context&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;ReactDOM&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StrictMode&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;GlobalContextProvider&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/GlobalContextProvider&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/React.StrictMode&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;,
&lt;/span&gt;  &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getElementById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;root&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// If you want to start measuring performance in your app, pass a function&lt;/span&gt;
&lt;span class="c1"&gt;// to log results (for example: reportWebVitals(console.log))&lt;/span&gt;
&lt;span class="c1"&gt;// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals&lt;/span&gt;
&lt;span class="nx"&gt;reportWebVitals&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#custom-hook"&gt;
  &lt;/a&gt;
  Custom Hook 📎
&lt;/h3&gt;

&lt;p&gt;We are going to create a hook that lets us access our global state and dispatch function anywhere in our component tree (react app).&lt;/p&gt;

&lt;p&gt;Before we do that let's create its &lt;code&gt;Type&lt;/code&gt;, this is useful because it lets us use the power of Typescript.&lt;/p&gt;

&lt;p&gt;We'll declare this within the &lt;code&gt;react-app-env.d.ts&lt;/code&gt; file like we always have.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// react-app-env.d.ts&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;ContextHook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;state&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;State&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This is a function that simply returns an object that contains our global state and dispatch function.&lt;/p&gt;

&lt;p&gt;Now we create the hook within the &lt;code&gt;src/context/index.tsx&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/context/index.tsx&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="c1"&gt;// Custom context hook&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useGlobalContext&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ContextHook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useContext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;globalContext&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We previously imported the &lt;code&gt;useContext&lt;/code&gt; hook, which takes in our &lt;code&gt;globalContext&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#using-our-custom-hook"&gt;
  &lt;/a&gt;
  Using our custom hook
&lt;/h3&gt;

&lt;p&gt;Within the &lt;code&gt;App.tsx&lt;/code&gt; file we'll import the &lt;code&gt;useGlobalContext&lt;/code&gt; hook we just created.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// src/App.tsx&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./logo.svg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useGlobalContext&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./context&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useGlobalContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;With the power of typescript, we have IntelliSense to help us out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O_SzWyiw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nti2onhratkysign8l5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O_SzWyiw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6nti2onhratkysign8l5.png" alt="typescript intelliSense"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XsLNJKFJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kzx1z33eoomnurisjxy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XsLNJKFJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1kzx1z33eoomnurisjxy.png" alt="typescript intelliSense"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's all for this tutorial 🎉, This is my first article 😅, feedback will be nice, Be sure to comment down below if you have any questions, additions, or subtractions.&lt;/p&gt;

&lt;p&gt;The full source code to with project with a functioning todo application is linked below 👇👇&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/damiisdandy"&gt;
        damiisdandy
      &lt;/a&gt; / &lt;a href="https://github.com/damiisdandy/context-api-typescript"&gt;
        context-api-typescript
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      An example project on the article I wrote about setting up react's context api with typescript
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Thank you for reading 🙏!&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>javascript</category>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Lightweight Markdown dialect for Python desktop apps</title>
      <author>pyrustic</author>
      <pubDate>Thu, 30 Sep 2021 09:43:26 +0000</pubDate>
      <link>https://dev.to/pyrustic/lightweight-markdown-dialect-for-python-desktop-apps-19po</link>
      <guid>https://dev.to/pyrustic/lightweight-markdown-dialect-for-python-desktop-apps-19po</guid>
      <description>&lt;p&gt;Project: &lt;a href="https://github.com/pyrustic/litemark"&gt;https://github.com/pyrustic/litemark&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Plain text written in &lt;code&gt;Litemark&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WiN4AGVB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k20rmol5v667twcr7caf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WiN4AGVB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k20rmol5v667twcr7caf.png" alt="Plain text in Litemark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is the rendered same text in a &lt;code&gt;Python&lt;/code&gt; desktop app:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pOjZ7cSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tt6ccgaywdovnjs1hdl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pOjZ7cSt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5tt6ccgaywdovnjs1hdl.png" alt="Rendered Litemark"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Project: &lt;a href="https://github.com/pyrustic/litemark"&gt;https://github.com/pyrustic/litemark&lt;/a&gt;&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>python</category>
      <category>markdown</category>
      <category>tkinter</category>
    </item>
    <item>
      <title>Hanlon's razor, a great tool to be more positive </title>
      <author>Jelle Smeets</author>
      <pubDate>Thu, 30 Sep 2021 09:33:27 +0000</pubDate>
      <link>https://dev.to/smeetsmeister/hanlon-s-razor-a-great-tool-to-be-more-positive-368l</link>
      <guid>https://dev.to/smeetsmeister/hanlon-s-razor-a-great-tool-to-be-more-positive-368l</guid>
      <description>&lt;p&gt;In my professional career, I have come across several tools to help you get the correct mindset. Hanlon's razor is one of those. In a difficult negative situation in one of my teams, I discovered Hanlon's razor and I have used it ever since!&lt;/p&gt;

&lt;p&gt;In this blog post, we will take a look at what exactly a razor is, and how you can use Hanlon's razor to your benefit!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-razor"&gt;
  &lt;/a&gt;
  What is a razor?
&lt;/h2&gt;

&lt;p&gt;In the school of philosophy, a razor is used as a principle or rule of thumb to eliminate or shave off explanations for a situation. Philosophers, scientists, and other great people have used Razors in their mental models.&lt;/p&gt;

&lt;p&gt;One of the most know razors is Occam's razor. Which states that "&lt;em&gt;the simplest explanation is usually the best one.&lt;/em&gt;". There are more Razors: Hitchen's, Alder's but let's take a look at the one that had the biggest impact on my life: Hanlon's razor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hanlons-razor"&gt;
  &lt;/a&gt;
  Hanlon's Razor
&lt;/h2&gt;

&lt;p&gt;Hanlon's razor is likely named after John Hanlon who submitted the statement to a joke book. It has been used by several important people in history. Napoleon, Winston Churchill, Jane West, and many more.&lt;/p&gt;

&lt;p&gt;There are several small variations of Hanlon's razor, my favorite one was spoken by Napoleon Bonaparte and goes as follows:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cYTXDmSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjltm00m6r29vg83j2hl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cYTXDmSA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zjltm00m6r29vg83j2hl.jpg" alt="Napoleon Bonaparte"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Napoleon said it first&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Never ascribe to malice that which is adequately explained by incompetence.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Napoleon Bonaparte in 1774&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can use Hanlon's razor by not assuming there is malice, but trying to find an explanation that is more plausible. There are usually better explanations than "this person is out here to hurt me".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-to-day-use"&gt;
  &lt;/a&gt;
  Day to day use
&lt;/h2&gt;

&lt;p&gt;As a Scrum master, I have interactions with all layers of the business. Other development teams, the management team, stakeholders. They all make decisions based on their own knowledge and opinions. In your career, there will be decisions that will have a negative impact on you or your team.&lt;/p&gt;

&lt;p&gt;In some cases, it can be easy to think someone's intent has malice. For example, another development team has made a decision in their architecture that really negatively impacts your team. It might be easy to reach the conclusion they have just done it on purpose because they just don't care about other teams.&lt;/p&gt;

&lt;p&gt;With Hanlon's razor, you can take a look at the different sides of the same coin. Try to take a look at the decision from their side. Are they really there to hurt your team? Or can this be explained by "incompetence". The other team might not know this impacts you, they might have thought of it and there are other things that are more important, etc. I have learned over the years this kind of situation almost never comes down to malice.&lt;/p&gt;

&lt;p&gt;Realizing that there usually is no ill intent in this kind of situation really helps me to stay positive. Other people or teams are not out there to hurt you on purpose. Instead of staying in this negative mindset "I can't believe they did this", you can focus your energy on the things that matter!&lt;/p&gt;

&lt;p&gt;What do you think of Hanlon's razor? Can you use it in your day-to-day work? Let me know in the comments down below!&lt;/p&gt;

&lt;p&gt;If you are interested in more things you can try to make your life more positive? I recommend checking &lt;a href="https://blog.jellesmeets.nl/articles/the-importance-of-off-screen-hobbies/"&gt;the Importance of off-screen hobbies&lt;/a&gt; blogpost.&lt;/p&gt;

</description>
      <category>career</category>
      <category>beginners</category>
      <category>mentalhealth</category>
      <category>discuss</category>
    </item>
    <item>
      <title>How I Increase my Productivity</title>
      <author>Harshit paliwal</author>
      <pubDate>Thu, 30 Sep 2021 09:32:05 +0000</pubDate>
      <link>https://dev.to/harshitpaliwal95/how-i-increase-my-productivity-ga6</link>
      <guid>https://dev.to/harshitpaliwal95/how-i-increase-my-productivity-ga6</guid>
      <description>&lt;h4&gt;You are here means you want you can improve your productivity too I can help you but first thing first. &lt;/h4&gt;

&lt;p&gt;Here are some quick tips.&lt;/p&gt;

&lt;p&gt;let us talk about productivity first.&lt;br&gt;
In simple words, productivity is a way to measure efficiency. you might know that already.&lt;/p&gt;

&lt;p&gt;now to improve productivity.&lt;br&gt;
I don’t want to lecture you about do this that but since I followed these things in my life I feel like how shorted life is the thing only we need is to go with the flow.&lt;/p&gt;

&lt;h2&gt;Prepare your morning&lt;/h2&gt;

&lt;p&gt;Yes, prepare your morning it doesn't mean wake up early at 4 am do work out take bath, and get back to work at 5:30 am 😂if you follow this routine then awesome it is cool you are a superhuman.&lt;/p&gt;

&lt;p&gt;But for a normal human like me I have an advice for you I know we sleep late at night because of study learning coding and some personal stuff it is okay &lt;b&gt;👊🏻wake up early &amp;lt; complete sleep&lt;/b&gt; so chill out no need to wake up at 4 or 5 &lt;br&gt;
just need to make a fixed time if you like 6 it is okay if you like 7 it is okay, just make a routine.&lt;br&gt;
Discipline is the only thing that can make you a real person tho,&lt;/p&gt;

&lt;p&gt;wake up in morning time as you like but fix the time you can wake up at that time totally after you decide &lt;br&gt;
do workout take a bath and done,&lt;br&gt;
your 1st hr of the day is only for yourself not for your boss/teacher/parents.&lt;br&gt;
Here is complete step one. &lt;/p&gt;

&lt;h2&gt;Prepare your surroundings&lt;/h2&gt;

&lt;p&gt;Hey!! 😂 surroundings I don't mean you wake up your sibling's parents early in the morning, &lt;br&gt;
What I mean is fix the thing you messed up it can be your bed your room check your desktop there might be useless folders everywhere 😂 ya I m serious fix everything that looks messed up the reason behind this is the atmosphere of your workstation room everything you see it can reflect in your mind too you don’t want to mess up your mind right then fix it now and see the change how you feeling after that.&lt;/p&gt;

&lt;h2&gt;Go with flow &lt;/h2&gt;

&lt;p&gt;Go with flow my friend don’t try every new thing you heard in a single day it might work or might not but after trying different things can decrease your will. no need to push your self no need to stop either be on the skateboard you can control and keep moving. &lt;/p&gt;

&lt;p&gt;The last thing is discipline is the only thing that can make you a real person I don’t want to sound like some old principle but it is the true start to be in discipline it can help you in many other ways.&lt;/p&gt;

&lt;p&gt;I am glad if this post helps you even a little bit.🥳&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
    <item>
      <title>Low-code—the future of app development</title>
      <author>Technocrat</author>
      <pubDate>Thu, 30 Sep 2021 09:21:09 +0000</pubDate>
      <link>https://dev.to/technocrat/low-code-the-future-of-app-development-44ij</link>
      <guid>https://dev.to/technocrat/low-code-the-future-of-app-development-44ij</guid>
      <description>&lt;p&gt;&lt;strong&gt;Introduction to low-code platforms&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Low-code can be traced back to the 1980s, when technology thinkers conceptualized ways to make application development easier and more accessible to people. This was done using either 4th generation programming languages or rapid application development tools. But the lack of industry standards, looming security threats, and limited capabilities, made low-code platforms stay dormant until the 21st century. &lt;/p&gt;

&lt;p&gt;With the rise in cloud computing, form-based applications entered the market with a whole new visual app-building experience. This was the advent of low-code application development platforms (LCAP) in their current form, with Forrester Research defining the term "low-code" for the first time in 2014.&lt;/p&gt;

&lt;p&gt;Today, low-code application development is a methodology that tries to incorporate both UI-based app building and backend development using pro-code languages to make applications more powerful. These platforms are powered by cloud technology and hence follows the "write once, use anywhere" approach.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What's pro-code, no-code, and low-code?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pro-code&lt;/strong&gt; development has been and will always be, a part of software development. The most powerful software is hand coded by developers using the latest practices. But the question is, &lt;strong&gt;do we really need to put in the same effort for building applications that could run a business by configuring the backend, checking security threats, and manually updating each component?&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No-code&lt;/strong&gt; development is predominantly form-based. These platforms promote visual app building using drag-and-drop techniques, wherein the backend of each component is already configured by the platform provider. Although no-code boasts a very short learning curve and helps citizen developers and non-programmers build high quality applications, &lt;strong&gt;the applications are not feature-heavy and powerful&lt;/strong&gt;. This leads to a rise in demand for other legacy software that can supplement the use case. This is where low-code comes into play, with the best of both worlds. &lt;/p&gt;

&lt;p&gt;Low-code platforms not only offer a visual app-building interface, like no-code platforms, but also accommodate compilers and interpreters, which gives these platforms pro-code capabilities. They're compliant with the latest data privacy and protection laws and provide unmatched security through audit logs and automated threat assessments. Applications built on low-code platforms are also mobile-ready; meaning you can build an application on the web and deploy it on your mobile device in a few clicks. Ready-to-use code snippets, built-in connectors, and automatic upgrades make low-code platforms an infinitely scalable solution. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Integrating low-code applications&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Low-code application development platforms can seamlessly integrate with almost any third-party application. These platforms have a "one-click configure" rule for APIs and setting up connectors to different services, which bypasses the need for excessive scripting. And if such a platform is part of a broader business suite, then the benefits can be tremendous. Integrations, once set up, can be used for all applications on an account. This saves considerable time, money, and effort. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why developers are moving to low-code&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Pro-code development is here to stay, and there's no 100% replacement for it. But most problem statements can be tackled more efficiently using low-code methodologies. This logic applies not only to pro-code development but also to spreadsheets. For example, there are processes on spreadsheets that cannot be substituted—but that doesn't mean spreadsheets are the only tool!&lt;/p&gt;

&lt;p&gt;This void between pro-code and no-code development is seeing a flow of developers heading to low-code platforms. &lt;/p&gt;

&lt;p&gt;Some of the reasons why developers prefer to have a low-code platform on hand: &lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;strong&gt;Zero maintenance&lt;/strong&gt;&lt;br&gt;
From automatic updates to one-click server and API configurations, low-code platforms take care of all the middleware.&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;strong&gt;Security and reliability&lt;/strong&gt; &lt;br&gt;
Security is handled by the service provider, which gives the developer ample time to focus on getting the apps market-ready and flawless.&lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;strong&gt;Easy collaboration&lt;/strong&gt; &lt;br&gt;
Data is stored on the cloud, and this allows developers from all over the world to collaborate in real time. &lt;/p&gt;

&lt;p&gt;-&amp;gt; &lt;strong&gt;Platform independence&lt;/strong&gt; &lt;br&gt;
All apps built on low-code platforms are not only mobile and tablet ready but also can be white labelled and made available on iOS and Android marketplaces. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Two cents&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Long story short, low-code development is on the rise and is showing no signs of slowing. Even the giants of the tech world are trying to make inroads into low-code application development. &lt;a href="https://www.researchandmarkets.com/reports/5184624/low-code-development-platform-market-research"&gt;Analysts&lt;/a&gt; predict this market to reach $187B by 2030 from a mere $10B in 2019. &lt;/p&gt;

&lt;p&gt;Cloud companies like &lt;a href="http://www.microsoft.com"&gt;Microsoft&lt;/a&gt; and &lt;a href="http://www.zoho.com/creator"&gt;Zoho&lt;/a&gt; offer platforms that can integrate with their multi-app business suite, as well as with an array of third-party services, in order make it a one-stop solution for businesses. This is in addition to standalone low-code companies like OutSystems, Mendix, and Quickbase, that aim to target specific markets, like business-IT and citizen development.&lt;/p&gt;

</description>
      <category>lowcode</category>
      <category>agile</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Nebula Operator Kind, oneliner installer for Nebula K8s Operator Playground</title>
      <author>lisahui</author>
      <pubDate>Thu, 30 Sep 2021 08:54:38 +0000</pubDate>
      <link>https://dev.to/lisahui/nebula-operator-kind-oneliner-installer-for-nebula-k8s-operator-playground-27k8</link>
      <guid>https://dev.to/lisahui/nebula-operator-kind-oneliner-installer-for-nebula-k8s-operator-playground-27k8</guid>
      <description>&lt;p&gt;Nebula-Kind, an one-liner command to try K8s Operator based Nebula Graph Cluster on your machine, with the help of KIND (K8s in Docker)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nebulaoperatorkind"&gt;
  &lt;/a&gt;
  Nebula-Operator-Kind
&lt;/h2&gt;

&lt;p&gt;As a Cloud Native Distributed Database, Nebula Graph comes with an open-source K8s Operator to enable boostrap and maintain Nebula Graph Cluster from a K8s CRD.&lt;/p&gt;

&lt;p&gt;Normally it takes you some time to setup all the dependencies and control plane resources of the Nebula Operator. If you are as lazy as I am, this Nebula-Operator-Kind is made for you to quick start and play with Nebula Graph in KIND.&lt;/p&gt;

&lt;p&gt;Nebula-Operator-Kind is the one-liner for setup everything for you including:&lt;/p&gt;

&lt;p&gt;Docker&lt;br&gt;
K8s(KIND)&lt;br&gt;
PV Provider&lt;br&gt;
Nebula-Operator&lt;br&gt;
Nebula-Console&lt;br&gt;
nodePort for accessing the Cluster&lt;br&gt;
Kubectl for playing with KIND and Nebula Operator&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#how-to-use"&gt;
  &lt;/a&gt;
  How To Use
&lt;/h2&gt;

&lt;p&gt;Install Nebula-Operator-Kind:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -sL nebula-kind.siwei.io/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will see this after it’s done&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bCI17jSy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://siwei.io/en/nebula-operator-kind/install_success.webp" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bCI17jSy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://siwei.io/en/nebula-operator-kind/install_success.webp" alt="alt text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can connect to the cluster via ~/.nebula-kind/bin/console as below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;~/.nebula-kind/bin/console -u user -p password --address=127.0.0.1 --port=30000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#more"&gt;
  &lt;/a&gt;
  More
&lt;/h2&gt;

&lt;p&gt;It’s in GitHub with more information you may be intrested in ;-), please try and feedback there~ &lt;a href="https://github.com/wey-gu/nebula-operator-kind"&gt;https://github.com/wey-gu/nebula-operator-kind&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Install on KubeSphere all-in-on cluster：&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -sL nebula-kind.siwei.io/install-ks-1.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install on existing K8s cluster:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;curl -sL nebula-kind.siwei.io/install-on-k8s.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>database</category>
      <category>opensource</category>
      <category>devops</category>
      <category>sql</category>
    </item>
    <item>
      <title>Coffee &amp; Code: Integrating Live Chat Feature to Your React Application with Chatwoot by Olubisi Idris Ayinde</title>
      <author>AnkithaTech11</author>
      <pubDate>Thu, 30 Sep 2021 08:51:01 +0000</pubDate>
      <link>https://dev.to/aviyel/coffee-code-integrating-live-chat-feature-to-your-react-application-with-chatwoot-by-olubisi-idris-ayinde-1bhc</link>
      <guid>https://dev.to/aviyel/coffee-code-integrating-live-chat-feature-to-your-react-application-with-chatwoot-by-olubisi-idris-ayinde-1bhc</guid>
      <description>&lt;p&gt;&lt;strong&gt;Join here 📌&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://bit.ly/2Y0k7pE"&gt;https://bit.ly/2Y0k7pE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Coding &amp;amp; Coffee&lt;/strong&gt; ☕️ is Aviyel’s flagship upskilling series for programmers who are passionate about codes. We feature tutorials, live coding sessions, Q&amp;amp;As, with tabs on some of the fastest-growing open-source projects out there.&lt;/p&gt;

&lt;p&gt;This time, we are bringing on board Olubisi Idris Ayinde, an expert blogger, and a popular name in the developer circle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-in-it-for-you"&gt;
  &lt;/a&gt;
  What’s in it for you?
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
Hands-on experience with Chatwoot, a dynamic, open-source customer engagement software for businesses and developers.&lt;/li&gt;
&lt;li&gt;
Chatwoot’s configuration guide, quick start with React for both beginners and advanced users.&lt;/li&gt;
&lt;li&gt;
Bombard speakers with your questions to dive deep into open source technology (and maybe start a full-time career).&lt;/li&gt;
&lt;li&gt;
Insights from Ayinde’s very own developer journey (inspiring heh?).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Get started with Chatwoot through Aviyel today!&lt;/p&gt;

&lt;p&gt;Mark your Calendar: &lt;strong&gt;📆 1st October 2021&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Time: &lt;strong&gt;10 AM EST | 7 AM PST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Join here 📌&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://bit.ly/2Y0k7pE"&gt;https://bit.ly/2Y0k7pE&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Impressed? Check out the rest of our  &lt;a href="https://bit.ly/3FdPfDh"&gt;events&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;PS: The session is free, but your pre-event confirmation is required. Confirm your presence by registering today.&lt;/p&gt;

&lt;p&gt;Let’s build open source together. 🚩&lt;br&gt;
Team Aviyel&lt;/p&gt;

</description>
      <category>chatwoot</category>
      <category>chatbot</category>
      <category>opensource</category>
      <category>developers</category>
    </item>
  </channel>
</rss>
