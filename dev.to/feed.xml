<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>SpectaQL - generate static docs for a GraphQL schema</title>
      <author>Tomek Poniatowicz</author>
      <pubDate>Tue, 15 Jun 2021 08:46:50 +0000</pubDate>
      <link>https://dev.to/graphqleditor/spectaql-generate-static-docs-for-a-graphql-schema-i53</link>
      <guid>https://dev.to/graphqleditor/spectaql-generate-static-docs-for-a-graphql-schema-i53</guid>
      <description>&lt;p&gt;It's finally time to take a look at another useful library, this time we‚Äôll check out SpectaQL, a Node.js library for generating static GraphQL API documentation. On GitHub its described as&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;A nice enhancement of DociQL&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;so before we get to SpectaQL and its features let‚Äôs take a look at what DociQL is.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-foundation"&gt;
  &lt;/a&gt;
  The foundation
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;DociQL&lt;/strong&gt; as the name suggests also deals with documentation. To be precise it fetches the schema from a GraphQL endpoint by using the introspection query and generates static documentation from it. It's supposed to help you save time and look good and it does just that, by using a well-known layout. It's also very flexible so you can easily customize it and create your own layout that looks exactly like you want.&lt;/p&gt;

&lt;p&gt;Looking at SpectaQL it's easy to see they wanted to take that approach and build on it. The first &lt;strong&gt;noticeable difference&lt;/strong&gt; is that it has more options to generate documentation from:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a live GraphQL endpoint via the introspection query (so just like DociQL)&lt;/li&gt;
&lt;li&gt;a file containing an introspection query result&lt;/li&gt;
&lt;li&gt;a file with the schema definition in SDL&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h2&gt;

&lt;p&gt;That‚Äôs not all and &lt;strong&gt;SpectaQL provides you with a bunch of features&lt;/strong&gt;. Out of the box it gives you the same three column layout mentioned previously and it's also easily customizable. There‚Äôs quite a few more customization options though, DociQL only has some basic CLI configuration options, SpectaQL also lets you modify the CSS. Additionally you‚Äôre not limited to just what's in the introspection query or the schema, via examples you can include static metadata about your schema or you can use the custom generator plugin to dynamically generate examples for fields and arguments. &lt;/p&gt;

&lt;p&gt;For a clearer picture let‚Äôs sum up the features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;it's completely free (MIT license)&lt;/li&gt;
&lt;li&gt;can generate documentation from three types of sources (endpoint, file with a introspection query result or file with a schema definition)&lt;/li&gt;
&lt;li&gt;additional support for examples from static metadata or the dynamic example generator&lt;/li&gt;
&lt;li&gt;blacklisting for areas or single elements (for example you can tell it to hide all mutations)&lt;/li&gt;
&lt;li&gt;customizable styles by modifying the CSS&lt;/li&gt;
&lt;li&gt;markdown support&lt;/li&gt;
&lt;li&gt;live preview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WOFGXphq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlocwu8n7m9u7vfd8v6o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WOFGXphq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wlocwu8n7m9u7vfd8v6o.png" alt="SpectaQL"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#source-githubcomanvilcospectaql"&gt;
  &lt;/a&gt;
  Source: &lt;a href="https://github.com/anvilco/spectaql"&gt;github.com/anvilco/spectaql&lt;/a&gt;
&lt;/h5&gt;

&lt;h2&gt;
  &lt;a href="#you-can-have-it-both-ways"&gt;
  &lt;/a&gt;
  You can have it both ways
&lt;/h2&gt;

&lt;p&gt;In short SpectaQL has quite a few additional features while still giving you the neat looking one-page three-column documentation out of the box and without any hassle. It's easily customizable by design and the devs openly advocate forking it if you have some additional ideas on how to improve it or make it do something differently. So if you‚Äôre looking for a basic solution for getting documentation for your GraphQL API or if you want to get creative in terms of how you want it to look, SpectaQL has got you covered.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;A guest blog post for &lt;a href="https://blog.graphqleditor.com/"&gt;GraphQL Editor blog&lt;/a&gt; by Micha≈Ç Tyszkiewicz&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#speed-up-your-graphql-api-development"&gt;
  &lt;/a&gt;
  Speed up your GraphQL API development
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;GraphQL Editor&lt;/strong&gt; is a supportive tool for both advanced GraphQL users as well as those taking their first steps with GraphQL APIs. Our all-in-one development environment for GraphQL will help you build, manage &amp;amp; deploy your GraphQL API much faster. &lt;strong&gt;&lt;a href="https://graphqleditor.com"&gt;Try GraphQL Editor for free!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xh8ZaRkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hz2iv2u1073dy9orexxf.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xh8ZaRkh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hz2iv2u1073dy9orexxf.gif" alt="New features of GraphQL Editor gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>graphql</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Sorting Algorithms Visualization: QuickSort, MergeSort, HeapSort, BubbleSort, InsertionSort</title>
      <author>Vladimir Nikitin</author>
      <pubDate>Tue, 15 Jun 2021 07:58:39 +0000</pubDate>
      <link>https://dev.to/loonywizard/sorting-algorithms-visualization-quicksort-mergesort-heapsort-bubblesort-insertionsort-25ha</link>
      <guid>https://dev.to/loonywizard/sorting-algorithms-visualization-quicksort-mergesort-heapsort-bubblesort-insertionsort-25ha</guid>
      <description>&lt;p&gt;Hi everyone! üëãüèª&lt;/p&gt;

&lt;p&gt;I'd like to share my new project about visualization of sorting algorithms&lt;/p&gt;

&lt;p&gt;Currently, there're five algorithms visualized: QuickSort, MergeSort, HeapSort, BubbleSort and InsertionSort&lt;/p&gt;

&lt;p&gt;This project helped me to understand how different sorting algorithms work and I will be happy if it this would be helpful for anybody&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href="https://github.com/loonywizard/sorting-algos-visualizer"&gt;https://github.com/loonywizard/sorting-algos-visualizer&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Live demo: &lt;a href="https://loonywizard.github.io/sorting-algos-visualizer"&gt;https://loonywizard.github.io/sorting-algos-visualizer&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>React 18 - What's New! </title>
      <author>Eftykhar Rahman</author>
      <pubDate>Tue, 15 Jun 2021 07:31:42 +0000</pubDate>
      <link>https://dev.to/iamraufu/react-18-what-s-new-2jam</link>
      <guid>https://dev.to/iamraufu/react-18-what-s-new-2jam</guid>
      <description>&lt;p&gt;React 17 was a bit of a bore for developers. There really wasn't a lot added but it's definitely not the case with react 18. In this article I am going to tell you some of the top updates and I'll show you how to get started using react 18 alpha today. Links to everything mentioned will be in the below.&lt;/p&gt;

&lt;p&gt;With React 18 there's a new Root API. Here's what you're used to seeing. We pass react &lt;em&gt;dom.render&lt;/em&gt; our app component and then &lt;em&gt;document.getElementById&lt;/em&gt; and our root element. So we're rendering our app component into our root element on the page. Pretty Simple!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QDr1g8fl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osjw14odqtt942mh4a4r.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QDr1g8fl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/osjw14odqtt942mh4a4r.PNG" alt="Image 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here's the new way. We have a root variable which is equal to a new method called create root. This is being passed our root element and then we call &lt;em&gt;root.render&lt;/em&gt; and pass our app component. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u1nvyjkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj7ox115ivzoqohk5zom.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u1nvyjkn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lj7ox115ivzoqohk5zom.PNG" alt="Image 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's accomplishing the same thing but in a different way. The old way is now called the Legacy Root API and It's still going to work in React 18 but will be deprecated at some point by using the new Root API. You're going to get access to all of the React 18 improvements including the concurrent features that we're going to talk about in this article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#suspense"&gt;
  &lt;/a&gt;
  Suspense
&lt;/h2&gt;

&lt;p&gt;The suspense is finally over in this update we're going to get full support for suspense. Now what is suspense? As the name implies it suspends something until it's ready to be rendered. &lt;/p&gt;

&lt;p&gt;In this example, we have a component that needs time to fetch data before it's ready to be rendered. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tb1hq7yu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1ktrwt6luc2mz1li4n2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tb1hq7yu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k1ktrwt6luc2mz1li4n2.PNG" alt="Image 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Suspense will use the fallback until the data is returned and the components are rendered. It's important to note here that the random component here is not waiting on data but it's still going to be suspended until everything inside the suspense is ready to be rendered. And now suspense is going to be extremely useful with SSR or Server Side Rendering. Currently, with SSR you're going to get fully rendered HTML but your browser still has to load the JavaScript and hydrate the entire page before it can become interactive. Suspense could speed up this load time dramatically. &lt;/p&gt;

&lt;p&gt;Using the example from the React 18 working group repo here we have a page loading a navbar, a sidebar, a post and a comment. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---1Z7y8IB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0g2lttu9cdf1mx44lch.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---1Z7y8IB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e0g2lttu9cdf1mx44lch.PNG" alt="Image 4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we really don't need the comments to load before the site becomes interactive. So we're going to suspend the comments. So that the viewer can start reading the article&lt;br&gt;
and then we'll load the comments in the background. &lt;/p&gt;

&lt;p&gt;Another cool thing about suspense is selective hydration.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q0tFFUKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8d7sqjzrc7sl9xzglrpz.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q0tFFUKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8d7sqjzrc7sl9xzglrpz.PNG" alt="Image 5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this example., we're suspending the sidebar and the comments. Hydration will begin on the first suspended component in the tree. So the sidebar will hydrate first but if the user tries to interact with the comments section, React will prioritize hydrating the comments instead of the sidebar.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automatic-batching"&gt;
  &lt;/a&gt;
  Automatic Batching
&lt;/h2&gt;

&lt;p&gt;In React 17 and earlier react with batch re-render updates during a browser event like a click. Here's an example from the docs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--beMfmqHI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7px6m1ir5qhbdzwhbl27.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--beMfmqHI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7px6m1ir5qhbdzwhbl27.PNG" alt="Image 6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So in this handle click react will batch these two state updates into one single re-render.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hfFwzcwb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec0oi7k06ejr5pgpuoxj.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hfFwzcwb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ec0oi7k06ejr5pgpuoxj.PNG" alt="Image 7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But if you need to fetch data and then update the state these re-renders will not be batched.&lt;/p&gt;

&lt;p&gt;With react 18, If you're using the new Create Root API, all state updates will automatically be batched no matter when they happen. If you do have a critical component that you don't want to be batched. You can opt out of this by using &lt;em&gt;reactdom.flushsync&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#concurrent-features"&gt;
  &lt;/a&gt;
  Concurrent Features
&lt;/h2&gt;

&lt;p&gt;There's some other concurrent features that are interesting but I haven't fully dug into them yet. One is &lt;em&gt;startTransition&lt;/em&gt;. This will tell React which updates are urgent and which can wait this will help the UI remain responsive. &lt;/p&gt;

&lt;p&gt;Then there's &lt;em&gt;useDeferredValue&lt;/em&gt;. This allows you to defer updates that are less important.&lt;/p&gt;

&lt;p&gt;And then &lt;strong&gt;&lt;/strong&gt; This coordinates the order of loading indicators.&lt;/p&gt;

&lt;p&gt;Obviously don't use React 18 in production yet. It's just an alpha status but start learning about these new features now. React 18 will go into public beta in a few months and then several weeks after that so get ready. It's really exciting.&lt;/p&gt;

&lt;p&gt;React 18 Resources Mentioned:&lt;br&gt;
The Plan for React 18 - &lt;a href="https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html"&gt;https://reactjs.org/blog/2021/06/08/the-plan-for-react-18.html&lt;/a&gt;&lt;br&gt;
React 18 Working Group - &lt;a href="https://github.com/reactwg/react-18"&gt;https://github.com/reactwg/react-18&lt;/a&gt;&lt;br&gt;
React 18 Discussions - &lt;a href="https://github.com/reactwg/react-18/discussions"&gt;https://github.com/reactwg/react-18/discussions&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
    </item>
    <item>
      <title>Make decisions as a team. Debate, then commit. (100 Bytes Of Wisdom: Day 57)</title>
      <author>Sam Jarman üë®üèº‚Äçüíª</author>
      <pubDate>Tue, 15 Jun 2021 07:30:35 +0000</pubDate>
      <link>https://dev.to/samjarman/make-decisions-as-a-team-debate-then-commit-100-bytes-of-wisdom-day-57-fec</link>
      <guid>https://dev.to/samjarman/make-decisions-as-a-team-debate-then-commit-100-bytes-of-wisdom-day-57-fec</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aGD1dg58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s6mvlt3oor37n327ptp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aGD1dg58--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7s6mvlt3oor37n327ptp.png" alt="Make decisions as a team. Debate, then commit."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Team cohesion during a project comes from healthy debate and then healthy commitment to the decision. I'm not gonna lie - it does suck to be the minority when it comes to a final decision, and they can grate on you over time. However, keeping your emotions and professionalism in check will mean a more cohesive team.  &lt;/p&gt;

&lt;p&gt;If you find yourself in the minority a lot, something to do would be to really think hard and work on trying to get a shared knowledge set with the others in your team. What do they know you don't? Or, perhaps, what do you know that they don't?&lt;/p&gt;

&lt;p&gt;Heads up: As with any terse bit of advice, there will be exceptions of course, and subtleties and nuance that can't possibly be captured in a Byte of Wisdom. This has been what I've experienced, I'd love to hear yours in the comments too!&lt;/p&gt;

&lt;p&gt;You can catch up with all the other bytes at &lt;a href="http://bytesofwisdom.com/"&gt;http://bytesofwisdom.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>journey</category>
      <category>advice</category>
    </item>
    <item>
      <title>How to Balance Chemical Equations in Python using Constraint Optimization (PuLP)</title>
      <author>Rahul Banerjee</author>
      <pubDate>Tue, 15 Jun 2021 07:11:36 +0000</pubDate>
      <link>https://dev.to/rahulbanerjee99/how-to-balance-chemical-equations-in-python-using-constraint-optimization-pulp-54hp</link>
      <guid>https://dev.to/rahulbanerjee99/how-to-balance-chemical-equations-in-python-using-constraint-optimization-pulp-54hp</guid>
      <description>

&lt;p&gt;Originally posted on &lt;a href="https://www.realpythonproject.com/how-to-balance-chemical-equations-in-python-using-constraint-optimization-pulp/"&gt;realpythonproject.com&lt;/a&gt;&lt;/p&gt;








&lt;h4&gt;We will be using PuLP and the chemparse libraries to balance chemical equations&lt;/h4&gt;





&lt;p&gt;You can find the source code&lt;a href="https://github.com/rahulbanerjee26/Chemical-Equation-Balancer" rel="noreferrer noopener"&gt; here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Pre-Requisites&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Familiarity with Constraint Optimization. Check out my previous article for an introduction to &lt;a href="https://www.realpythonproject.com/basic-linear-programming-in-python-with-pulp/" rel="noreferrer noopener"&gt;Constraint Optimization and PuLp&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Some Familiarity with Balancing Chemical Equations.¬†&lt;/li&gt;
&lt;li&gt;It is good to have some familiarity with Streamlit. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;How can we balance Chemical Equations using Constraint Optimization?&lt;/h3&gt;

&lt;p&gt;Balancing a chemical equation essentially means respecting the conservation of mass and ensuring the same number of atoms of an element are present on the left-hand side (Reactants) and the right-hand side (Products). Basically if you X grams of an element as a reactant, the product will also have X grams of that element in the Products (ideal conditions).¬†&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5GeCminu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A7oIbJWMsmLzKx7rjWm0Hsg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5GeCminu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A7oIbJWMsmLzKx7rjWm0Hsg.png" alt=""&gt;&lt;/a&gt;Picture by¬†Author&lt;/p&gt;

&lt;p&gt;In the above picture, you can notice the following&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the unbalanced equations, there are 2 atoms of H and Cl in the Products. However, there is only a single atom of H and Cl in the Reactants. This does not respect the law of conservation of mass&lt;/li&gt;
&lt;li&gt;In the balanced equation, we are using 2 atoms of H and Cl in the reactants. The number of atoms in the Products remains unchanged. As a result, the equation is balanced and it no longer violates the law of conservation of mass.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above equation was easy to solve and can be done manually. However, things get complicated as the number of elements increases and the number of reactants/products increases. Eg: The below equation although doable manually will require quite a bit of trial and error.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zcoX8f_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AFTDONbGgFIMpbiZu12VoiQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zcoX8f_T--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AFTDONbGgFIMpbiZu12VoiQ.png" alt=""&gt;&lt;/a&gt;Example of an unbalanced equation&lt;/p&gt;

&lt;p&gt;So how can we use Constraint Optimization?¬†&lt;/p&gt;

&lt;p&gt;Let‚Äôs consider the first equation we had looked at&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MylsKPgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AR0Z_txrViqpEwjFHZXBrrA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MylsKPgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AR0Z_txrViqpEwjFHZXBrrA.png" alt=""&gt;&lt;/a&gt;Example of an Unbalanced Equation&lt;/p&gt;

&lt;p&gt;The coefficient of each reactant/product can be thought of as a variable.¬†&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AaTHqVsy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AQgdJMR8Fm88JdNN17l4U6Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AaTHqVsy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AQgdJMR8Fm88JdNN17l4U6Q.png" alt=""&gt;&lt;/a&gt;Equation with Variable Coefficients&lt;/p&gt;

&lt;p&gt;X1, X2, X3, and X4 are the variable coefficients. Each variable must be an integer greater than or equal to 1.&lt;/p&gt;

&lt;p&gt;Each element adds a constraint,i.e&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;For Zn: The number of Zinc Atoms in Reactant must equal to the number of Zinc Atoms in Products&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z8CMOuCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AElBM_4GTwrZ1c_APtPQmvA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z8CMOuCQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AElBM_4GTwrZ1c_APtPQmvA.png" alt=""&gt;&lt;/a&gt;Constraint due to¬†Zn&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;For Cl: The number of Chlorine Atoms in Reactant must equal to the number of Chlorine Atoms in Products&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--avJ6LMYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A49EaN487z2pyl7jaVA6JLQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--avJ6LMYg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A49EaN487z2pyl7jaVA6JLQ.png" alt=""&gt;&lt;/a&gt;Constraint due to¬†Cl&lt;/p&gt;

&lt;ul&gt;&lt;li&gt;For H: The number of Hydrogen Atoms in Reactant must equal to the number of Hydrogen Atoms in Products&lt;/li&gt;&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9QMIPUks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AV97td_GXzTuqrlm_LgdIHQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9QMIPUks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AV97td_GXzTuqrlm_LgdIHQ.png" alt=""&gt;&lt;/a&gt;Constraint due to¬†H&lt;/p&gt;

&lt;p&gt;The Problem can be considered as a Minimizing Problem since we need to find the smallest coefficients that can balance the equation.&lt;/p&gt;

&lt;p&gt;The problem has no objective other than minimizing the coefficients, which means the objective is basically 0 (None).&lt;/p&gt;

&lt;p&gt;To summarize this is how our problem is setup&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fgCOE-sK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2Aqftt_wyaEhTvFXP2_bslKg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fgCOE-sK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2Aqftt_wyaEhTvFXP2_bslKg.png" alt=""&gt;&lt;/a&gt;Problem Setup&lt;/p&gt;

&lt;p&gt;This problem can be set up using PuLP and solver using PuLP‚Äôs default solver.&lt;/p&gt;

&lt;p&gt;Now, we can move on to generalizing this to support other equations as well.&lt;/p&gt;

&lt;h3&gt;Parsing the Chemical¬†Equation&lt;/h3&gt;

&lt;p&gt;We will use the chemparse library to parse the reactants and products.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip3 install chemparse&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Below are a few examples of what chemparse returns. They are taken from the library‚Äôs documentation&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;‚ÄúCH4‚Äù returns {‚ÄúC‚Äù:1.0, ‚ÄúH‚Äù:4.0}

‚ÄúC1.5O3‚Äù returns {‚ÄúC‚Äù:1.5, ‚ÄúO‚Äù:3.0}

"(CH3)2(CH2)4" returns {"C":6.0, "H":14.0}&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let's create a function to parse the equations. The function will expect an input similar to the one below&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Zn + HCL -&amp;gt; ZnCl2 + H2&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can split by ‚Äò-&amp;gt;‚Äô to get the Left Hand Side and the Right Hande Side]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Igp-6Ja8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AcqnrVo8LDw3iVVx9mz-buA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Igp-6Ja8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AcqnrVo8LDw3iVVx9mz-buA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get the compounds we can split by ‚Äú+‚Äù and remove the trailing spaces.¬†&lt;/p&gt;

&lt;p&gt;We need to store the unique elements so we can form constraints for each and convert each reactant and product into a dictionary produced by chemparse.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VHuuarpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2ApGz9Yydc6ZvcrC4kXtXv5g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VHuuarpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2ApGz9Yydc6ZvcrC4kXtXv5g.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, we iterate over the lhsCompounds and store the result from chemparse as well as the unique elements.&lt;/p&gt;

&lt;p&gt;After that we iterate over rhsCompounds, we do not need to store the unique elements again. However, we store the coefficients as a negative number since this will make it easier when setting up our constraints.&lt;/p&gt;

&lt;h3&gt;Function to set up and solve Constraint Optimization Problem&lt;/h3&gt;

&lt;p&gt;Now, we can move on to the problem-solving stuff.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Nf3SLDCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2Ayg6uMBP_0E18iTyqQF9KwA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Nf3SLDCr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2Ayg6uMBP_0E18iTyqQF9KwA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We will call the parse function we had written earlier and store the returned values.&lt;/p&gt;

&lt;p&gt;Every reactant/product will have a co-efficient, therefore we can simply loop over the variable allCompounds (this contains the output from chemparse for each reactant/product) and create a variable during each iteration.&lt;/p&gt;

&lt;p&gt;The variables will have a category of Integer and a lower bound value of 0&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iVnX30-O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AcGfh0HzW1zTWF3yi8V7aAg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iVnX30-O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AcGfh0HzW1zTWF3yi8V7aAg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As discussed earlier, the problem is a Minimization problem with no Objective.&lt;/p&gt;

&lt;p&gt;Now, let‚Äôs set up our constraints&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QsEv5ZzE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A_3WRmR8VNelQYiUMe8R49Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QsEv5ZzE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A_3WRmR8VNelQYiUMe8R49Q.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As discussed earlier, each element will add a constraint associated with it.¬†&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;we loop over the uniqueElements&lt;/li&gt;
&lt;li&gt;get the number of atoms of the element in each reactant/product&lt;/li&gt;
&lt;li&gt;sum up the coefficients (Remember all the Product coefficients are stored as negative values)&lt;/li&gt;
&lt;li&gt;Add a constraint that the sum should be 0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, we are ready to solve the problem and create the balanced equation&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pYBlI1Vt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AXrh18t0Xs-9oGQ9BvITOwQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pYBlI1Vt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2AXrh18t0Xs-9oGQ9BvITOwQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Streamlit WebApp&lt;/h3&gt;

&lt;p&gt;Install Streamlit&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install streamlit&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will be a pretty minimalistic app.¬†&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDF0B-8l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2APkyDf07wmLJXBPA-Pfg7RA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZDF0B-8l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2APkyDf07wmLJXBPA-Pfg7RA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We create a text_input component and set the default value to an unbalanced equation. The balance() function is imported and we pass the text_input‚Äôs value as an argument.&lt;/p&gt;

&lt;p&gt;Additionally, we can also display the problem before we solve it. This should be inside the balance() function&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;st.text(prob)&lt;/code&gt;&lt;/pre&gt;





&lt;blockquote&gt;&lt;p&gt;&lt;em&gt;Connect with me on &lt;/em&gt;&lt;a href="https://www.linkedin.com/in/rahulbanerjee2699/" rel="noreferrer noopener"&gt;&lt;em&gt;LinkedIn&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, &lt;/em&gt;&lt;a href="https://twitter.com/rahulbanerjee99" rel="noreferrer noopener"&gt;&lt;em&gt;Twitter&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>codenewbie</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to read Member-only Medium Stories for free without being a member?</title>
      <author>Cybear Tron</author>
      <pubDate>Tue, 15 Jun 2021 07:02:56 +0000</pubDate>
      <link>https://dev.to/cybeartron/how-to-read-member-only-medium-stories-for-free-without-being-a-member-16m7</link>
      <guid>https://dev.to/cybeartron/how-to-read-member-only-medium-stories-for-free-without-being-a-member-16m7</guid>
      <description>&lt;p&gt;So You are here to know how can you damn read member-only medium stories for free without being a member??&lt;br&gt;
If ur like me i.e. a minor who is not allowed to spend money online or ur broke or dont wanna pay medium... This is for u!!!!!&lt;/p&gt;

&lt;p&gt;Lets start!!!!&lt;br&gt;
STEP 1: First find yourself a medium story you want to read. For this tutorial, I will use Manpreet Singh's post &lt;a href="https://preettheman.medium.com/best-python-projects-to-finish-in-a-weekend-a032e5c11c1"&gt;https://preettheman.medium.com/best-python-projects-to-finish-in-a-weekend-a032e5c11c1&lt;/a&gt;&lt;br&gt;
STEP 2: Now that you have a story, now go to your browser. &lt;strong&gt;NOTE: TESTED ON CHROME AND EDGE. I WISH THIS WORKS ON OTHERS TOO&lt;/strong&gt; Press ctrl+shift+n or cmd+shift+n in mac for opening incognito or inprivate mode (Or jus use the way to open the alternative on your browser of incognito mode).&lt;br&gt;
STEP 3: Now u are in the incognito-esque mode, now paste the link of the medium article. Now ur good to go.&lt;br&gt;
You can read it!!!&lt;br&gt;
HAPPY CODING AND READING!!!!&lt;/p&gt;

</description>
      <category>medium</category>
      <category>incognito</category>
      <category>free</category>
      <category>member</category>
    </item>
    <item>
      <title>9 Responsive Website Tutorials With Html CSS JavaScript Bootstrap Step By Step</title>
      <author>fahim kabir</author>
      <pubDate>Tue, 15 Jun 2021 06:31:30 +0000</pubDate>
      <link>https://dev.to/fahimkabir/9-responsive-website-tutorials-with-html-css-javascript-bootstrap-step-by-step-56ng</link>
      <guid>https://dev.to/fahimkabir/9-responsive-website-tutorials-with-html-css-javascript-bootstrap-step-by-step-56ng</guid>
      <description>&lt;p&gt;&lt;strong&gt;Responsive web design&lt;/strong&gt; is a method of creating and &lt;strong&gt;developing websites&lt;/strong&gt; so that they are more accessible and give an ideal viewing experience for users on a variety of devices.&lt;/p&gt;

&lt;p&gt;With the rise of smart phones and tablets, it's practically impossible to ignore the need to &lt;strong&gt;optimize websites&lt;/strong&gt; for mobile devices. Responsive web design is a better option and a more effective technique to target a wide range of devices with fewer resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Responsive layouts&lt;/strong&gt; alter and adapt to any device screen size, whether it's a desktop, laptop, tablet, or smartphone.&lt;/p&gt;

&lt;p&gt;That's why I have selected &lt;strong&gt;10 beginner friendly responsive website tutorials&lt;/strong&gt; for you.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-ultra-responsive-portfolio-website-using-bootstrap-html-css-from-scratch"&gt;
  &lt;/a&gt;
  1. Ultra Responsive Portfolio Website Using Bootstrap Html Css From Scratch
&lt;/h2&gt;

&lt;p&gt;Your First Website Should Be Your Portfolio. Lets &lt;strong&gt;create a  Responsive Portfolio Website Using Bootstrap, Html, CSS &amp;amp; JavaScript from scratch&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Because, creating responsive and mobile-friendly websites and applications has gotten considerably easier, thanks to Bootstrap 4's robust mobile-first flexbox grid framework.&lt;br&gt;
If you are a beginner, don't worry. This tutorial is mainly made for beginners.&lt;/p&gt;

&lt;p&gt;You will learn about,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Bootstrap&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;How to use bootstrap&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Structure of a &lt;strong&gt;static website&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Section - Home. About, Service, Newsletter, Contact us, Footer.&lt;/li&gt;
&lt;li&gt;Ideas for your portfolio.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;How to make a website Responsive&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the tutorial for You:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/kltvOVOEmM0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-complete-bootstrap-website-with-bootstrap-4-html5-css3"&gt;
  &lt;/a&gt;
  2. Complete Bootstrap Website With Bootstrap 4 HTML5 CSS3
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Bootstrap 4&lt;/strong&gt; is built from the ground up to be &lt;strong&gt;responsive and mobile friendly&lt;/strong&gt;. Its five-tier grid classes provide you more control over the layout and how it looks on different platforms, such as mobile phones, tablets, laptops and desktops, large-screen devices, and so on.&lt;/p&gt;

&lt;p&gt;And here we are creating a &lt;strong&gt;responsive agency website using bootstrap html css &amp;amp; js&lt;/strong&gt;. We will create,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Responsive Nav Bar&lt;/li&gt;
&lt;li&gt;Beautiful video background&lt;/li&gt;
&lt;li&gt;About section&lt;/li&gt;
&lt;li&gt;Service section&lt;/li&gt;
&lt;li&gt;Pricing section&lt;/li&gt;
&lt;li&gt;Sign up section &lt;/li&gt;
&lt;li&gt;Footer&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the tutorial for You:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BSUjh4ebmzE"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-how-to-make-bootstrap-website-step-by-step-with-html5-css3"&gt;
  &lt;/a&gt;
  3. How To Make Bootstrap Website Step By Step With HTML5 CSS3
&lt;/h2&gt;

&lt;p&gt;In this tutorial we will create another &lt;strong&gt;responsive agency website using html css js &amp;amp; bootstrap&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We will create,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Navigation Bar &lt;/li&gt;
&lt;li&gt;Hero Section
&lt;/li&gt;
&lt;li&gt;Featured Section &lt;/li&gt;
&lt;li&gt;About Section &lt;/li&gt;
&lt;li&gt;Customer review Section &lt;/li&gt;
&lt;li&gt;Call to action&lt;/li&gt;
&lt;li&gt;Footer &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the tutorial for You:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BtdESApM0a4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-bootstrap-responsive-website-design-tutorial-using-bootstrap-html-css"&gt;
  &lt;/a&gt;
  4. Bootstrap Responsive Website Design Tutorial Using Bootstrap HTML CSS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Using Bootstrap, Html, CSS &amp;amp; JavaScript we will create a beautiful Responsive blogging website&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Because the use of mobile devices to surf the web continues to grow at an astronomical pace, and these devices are often constrained by display size and require a different approach to how content is laid out on the screen.&lt;/p&gt;

&lt;p&gt;Web pages can be viewed using many different devices. Our web page should look good, and be easy to use, regardless of the device. Web pages should not leave out information to fit smaller devices, but rather adapt its content to fit any device.&lt;/p&gt;

&lt;p&gt;We will create,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Responsive Navigation Bar &lt;/li&gt;
&lt;li&gt;Hero Section
&lt;/li&gt;
&lt;li&gt;Featured Section &lt;/li&gt;
&lt;li&gt;Subscription Letter&lt;/li&gt;
&lt;li&gt;Blog Section &lt;/li&gt;
&lt;li&gt;Side Bar &lt;/li&gt;
&lt;li&gt;Responsive Footer &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the tutorial for You:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/QdavXfltTeY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-how-to-create-complete-responsive-website-using-bootstrap-html-css"&gt;
  &lt;/a&gt;
  5. How To Create Complete Responsive Website Using Bootstrap HTML CSS
&lt;/h2&gt;

&lt;p&gt;For creating this project we are using Bootstrap, Html, CSS &amp;amp; JavaScript.&lt;/p&gt;

&lt;p&gt;Today we will learn how to,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Setup Bootstrap&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Create Navigation Bar&lt;/li&gt;
&lt;li&gt;Create Hero Section&lt;/li&gt;
&lt;li&gt;Create About Section&lt;/li&gt;
&lt;li&gt;Create Project Section&lt;/li&gt;
&lt;li&gt;Create Team Slider&lt;/li&gt;
&lt;li&gt;Create Contact Section&lt;/li&gt;
&lt;li&gt;Create Footer Section&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here is the tutorial for You:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/SbukKlDWM3c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Now, Lets make something more creative &amp;amp; reliable. That's why now we will &lt;strong&gt;create a responsive animated gym website&lt;/strong&gt;. And we will only &lt;strong&gt;using HTML, CSS &amp;amp; JavaScript&lt;/strong&gt;. No Bootstrap.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-responsive-animated-website-tutorial-using-html5-and-css3"&gt;
  &lt;/a&gt;
  6. Responsive Animated Website Tutorial Using HTML5 and CSS3
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we will &lt;strong&gt;learn how to create Fully Professional Responsive Animated Website Using HTML, CSS &amp;amp; JavaScript&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;If you are a beginner, don't worry. We will go through every process step by step, even the animation part also.&lt;/p&gt;

&lt;p&gt;You will learn about -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;How to make an Animated website&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;How to create &lt;strong&gt;pure CSS smooth scrolling effect&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Structure of a static website.&lt;/li&gt;
&lt;li&gt;Section - Home. About, Service, Contact us, Footer.&lt;/li&gt;
&lt;li&gt;Ideas for your website.&lt;/li&gt;
&lt;li&gt;How to make a website Responsive.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For more simplicity, I have divided this tutorial into 2 different parts, so that I can explain you every single details.&lt;/p&gt;

&lt;p&gt;Part 1:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/aF1sv6AsDFE"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Part 2:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8_h4LCRpqkc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-html-css-javascript-responsive-website-tutorial"&gt;
  &lt;/a&gt;
  7. HTML CSS JavaScript Responsive Website Tutorial
&lt;/h2&gt;

&lt;p&gt;We will &lt;strong&gt;Build A Responsive Website With HTML CSS &amp;amp; JavaScript Step By Step&lt;/strong&gt;. This a organization website. That's why we have to give some extra effort for making this website.&lt;/p&gt;

&lt;p&gt;We are adding some eye catching CSS styling for graving users attention towards this company.&lt;/p&gt;

&lt;p&gt;Here we are creating,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Navigation Bar &lt;/li&gt;
&lt;li&gt;Home Section &lt;/li&gt;
&lt;li&gt;Service Section &lt;/li&gt;
&lt;li&gt;Pricing Cards &lt;/li&gt;
&lt;li&gt;Newsletter Email Section&lt;/li&gt;
&lt;li&gt;Contact Page&lt;/li&gt;
&lt;li&gt;Footer&lt;/li&gt;
&lt;li&gt;Responsive Design With Media Query&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For more clear explanation, I have divided this tutorial into 2 different parts.&lt;/p&gt;

&lt;p&gt;Part 1:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/1FoQOProoeI"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Part 2:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/G6JGc9MC96s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ok, Its time to do some advance stuffs. After creating our previous websites, I think you have got an idea of HTML, CSS, JavaScript &amp;amp; Bootstrap. Now we will implement them all to &lt;strong&gt;create a functional Responsive Ecommerce website With HTML, CSS, JavaScript &amp;amp; Bootstrap&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-how-to-make-ecommerce-website-using-html-and-css-step-by-step"&gt;
  &lt;/a&gt;
  8. How To Make Ecommerce Website Using HTML And CSS Step By Step
&lt;/h2&gt;

&lt;p&gt;In the previous tutorials, you looked at the many aspects and functionalities of &lt;strong&gt;Bootstrap HTML CSS &amp;amp; JavaScript&lt;/strong&gt;. However, simply studying the principles is insufficient; you must also have the abilities to put them into practice. In this tutorial, we'll &lt;strong&gt;build an e-commerce website&lt;/strong&gt; to assist you learn &lt;strong&gt;how to use Bootstrap HTML CSS &amp;amp; JavaScript for web design&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We'll start by building the pieces one by one, gradually increasing the level of complexity so you don't become overwhelmed with knowledge.&lt;/p&gt;

&lt;p&gt;We'll start with the ecommerce.html page, then go on to the products.html, productDetails.html pages and so on to develop a responsive website.&lt;/p&gt;

&lt;p&gt;You will learn to,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Adding Bootstrap &lt;/li&gt;
&lt;li&gt;Adding Font awesome icon&lt;/li&gt;
&lt;li&gt;Creating Navigation Bar&lt;/li&gt;
&lt;li&gt;Creating Home Section&lt;/li&gt;
&lt;li&gt;Creating Responsive navigation&lt;/li&gt;
&lt;li&gt;Creating Brand Section&lt;/li&gt;
&lt;li&gt;Creating New section&lt;/li&gt;
&lt;li&gt;Creating Featured Products&lt;/li&gt;
&lt;li&gt;Creating Banner section&lt;/li&gt;
&lt;li&gt;Creating Dress section&lt;/li&gt;
&lt;li&gt;Creating Watches section&lt;/li&gt;
&lt;li&gt;Creating shoes section&lt;/li&gt;
&lt;li&gt;Creating website Footer&lt;/li&gt;
&lt;li&gt;Responsive Footer&lt;/li&gt;
&lt;li&gt;Products Page Design&lt;/li&gt;
&lt;li&gt;Products details page design&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For better understanding, I have divided this website into several parts.&lt;/p&gt;

&lt;p&gt;Part 1:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/37KohMnlP7Q"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Part 2:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Mr7eWzGyq3E"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Part 3:&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/gW-q6G9KYTg"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-what-should-i-make-next-please-let-me-know-in-the-comment"&gt;
  &lt;/a&gt;
  9. What Should I Make Next? Please Let Me Know In The Comment.
&lt;/h2&gt;

&lt;p&gt;You can use this projects to learn, improve your skills or for your portfolio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Previous Posts:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/fahimkabir" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKX2P2LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8_Vu5jyt--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/642043/5a98e096-84fd-4f50-a9f6-10caf87d9fa2.png" alt="fahimkabir image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/fahimkabir/7-javascript-projects-for-beginners-d3m" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;7 JavaScript Projects For Beginners&lt;/h2&gt;
      &lt;h3&gt;fahim kabir „Éª Jun 11 „Éª 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/fahimkabir" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OKX2P2LN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8_Vu5jyt--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/642043/5a98e096-84fd-4f50-a9f6-10caf87d9fa2.png" alt="fahimkabir image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/fahimkabir/15-python-projects-for-beginners-4j4f" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;15 Python Projects For Beginners&lt;/h2&gt;
      &lt;h3&gt;fahim kabir „Éª Jun 12 „Éª 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#graphql&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#resume&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Feel free to visit my YouTube channel:&lt;br&gt;
&lt;a href="//www.youtube.com/tech2etc"&gt;@Tech2etc&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow me on Instagram where I'm sharing lot's of useful resources!&lt;br&gt;
&lt;a href="https://www.instagram.com/fahimkabir.hamim"&gt;@fahimkabir.hamim&lt;/a&gt; üòâ&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Productive, Easy steps to make a website for business</title>
      <author>prajwalbisht</author>
      <pubDate>Tue, 15 Jun 2021 06:12:27 +0000</pubDate>
      <link>https://dev.to/prajwalbisht/productive-easy-steps-to-make-a-website-for-business-2447</link>
      <guid>https://dev.to/prajwalbisht/productive-easy-steps-to-make-a-website-for-business-2447</guid>
      <description>&lt;p&gt;Building a small business website is necessary to inform your audience about your brand and value proposition, which will help you boost your brand recognition and drive sales.&lt;/p&gt;

&lt;p&gt;However, to build a business website, you first need to choose a domain name and a secured web hosting. After this, you need to optimize your website to improve your search engine rankings (SERPs) and drive more traffic.&lt;/p&gt;

&lt;p&gt;Everyone is aware of the fact, how people are more indulgent with their mobile phones that is why you should always keep your website updated and optimized for mobile devices too. Also, ensure that your site speed is requisite to improve your search engine rankings (SERPs).&lt;/p&gt;

&lt;p&gt;This article is for small business owners who are seeking help to build a website or improve upon their existing website.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Why is it important to have a website for your business?&lt;/b&gt;&lt;br&gt;
There are multiple reasons to have a website for your business such as:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Helps you in communicating your brand value -&lt;/b&gt; Having a website for small businesses helps you communicate your brand‚Äôs value to potential customers easily. It includes various style elements, target market, and many other important factors that can help visitors decide whether they should choose your business for purchase or not.&lt;br&gt;
Easy communications with your clients help you connect with new clients.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Helps you in capturing more leads -&lt;/b&gt; Owning a website should ideally capture more leads from the web visitors. This is why having a website is so important for your small business. Using strategic CTA should be placed on your landing page. Structuring your site properly and placing a strong CTA in the right place.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Enhance trust among your customers -&lt;/b&gt; Most people in today‚Äôs technological world would not trust your business if it does not have an online presence. No matter what your business or your revenue is; having a website is incredibly necessary and there is no excuse to not have one.&lt;br&gt;
It is because without having a website you lose the opportunity to be in front of your potential customers. Additionally, most people might think your business doesn't exist unless you own a website.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Enhance your business online presence -&lt;/b&gt; Your website should enhance the online presence of your business, which is acute to continue to see business growth. Having a website for your business is incredibly important to hold the top position in the market.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;24/7 advertising -&lt;/b&gt; Your website is a 24-hour billboard for your business. Now, let‚Äôs assume your business is closed 24 hours a day, 7 days a week. How can you advertise your business when your store is closed or unavailable to take a call? Then having a website will be beneficial for your business, of course.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Increase brand credibility -&lt;/b&gt; Your website will give you rapid brand credibility, which will lead to more sales and more customers. This is one of the very important reasons you need a website.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;How to make a small business website?&lt;/b&gt;&lt;br&gt;
Once you have a clear understanding of what you want to accomplish, you can initiate digging into the website building process by following the key steps that will help you launch your business successfully online :&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Select a platform -&lt;/b&gt; Usually, you should go for a mobile-friendly website solution that will help you create a website easily even if you are not a technical person. Here are some platform options that are highly recommended for your website:&lt;br&gt;
&lt;b&gt;- WordPress -&lt;/b&gt; You can choose WordPress for your website as it has two versions i.e. WordPress.com and WordPress.org. Among both, WordPress.org is preferred by all the beginners as it allows access to the best features and provides you full control over your website.&lt;/p&gt;

&lt;p&gt;&lt;b&gt; - Hosted website builders -&lt;/b&gt; In case you want to have an all-in-one solution for your website, then you might consider Wix or Squarespace. These platforms offer a complete website design which is out-of-the-box as you get an easy drag and drop feature with them.&lt;/p&gt;

&lt;p&gt;Moreover, the cost plans related to the hosted website builders depend on the services you choose for your website. After comparing, WordPress is a bit cheaper than other platforms. Some of the reasons why most people recommend WordPress for building their website are:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It is not necessary to be a developer or have knowledge of technical skills to build a website for business. However, you might need some technical expertise when you desire to customise the website themes as per your requirements.&lt;br&gt;
The WordPress software is available FREE (Majority of them).&lt;br&gt;
WordPress is super flexible and you can easily change how your site looks or even add new features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Over 37% of the business websites on the internet prefer WordPress, so your business website will effortlessly be under the top websites in the market.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Choose a domain name -&lt;/b&gt; To build a small business website, you are required to choose a suitable domain name, that is simply your website's unique online address. A domain name is created with the combination of your website‚Äôs name and the extension.&lt;br&gt;
Having a domain name for your website will help you improve your website‚Äôs visibility, credibility, and make your brand trustworthy for the customers.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Find the best hosting provider -&lt;/b&gt; You can skip this step if you desire to have an all-in-one website builder. However, if you want to have a WordPress website, then there are various excellent beginner-friendly hosting companies that you should consider.&lt;br&gt;
One of the best considered hosting picks among all is Bluehost. It is usually recommended by WordPress.org: Bluehost is known to offer the cheapest hosting plan. This package is generally suitable for all small business websites, but you can easily upgrade it as your business grows.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Choose a theme or template for your website -&lt;/b&gt; Owning a &lt;a href="https://www.janbaskdigitaldesign.com/website-design-services"&gt;Mobile-friendly website design&lt;/a&gt; for your business will be favorable, as it can smoothly fit into the visitor's screen despite its size and shape.&lt;br&gt;
While building a small business website, you should consider few things such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;61% of visitors consider mobile-friendly websites.&lt;/li&gt;
&lt;li&gt;Responsive website designs help you with more traffic.&lt;/li&gt;
&lt;li&gt;Over 50% of online traffic comes from a responsive website.&lt;/li&gt;
&lt;li&gt;95% of people create your brand image after going through your website.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;b&gt;Publish High-Quality Content -&lt;/b&gt; Everybody knows the power of content to grab visitors' attention. Informative content offers details related to your brand as well as your service(s)/ product(s).&lt;br&gt;
With the use of informative and creative content, you get the opportunity to perform internal linking, which in turn helps you increase the ROI of your business.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Search engine Optimization -&lt;/b&gt; Now that you've created a website, and know what to do with it, you should start planning - ‚ÄúHow to drive traffic to your website‚Äù.&lt;br&gt;
Online Marketing helps you spread awareness about your website's product(s) or service(s) with the use of multiple web-based channels. Moreover, you should register your website on Google Analytics, after you &lt;a href="https://www.janbaskdigitaldesign.com/blogs/how-to-make-website-for-business/"&gt;build a website from scratch&lt;/a&gt;. This will help you keep a track of visitor's numbers and statistics.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Conclusion:&lt;/b&gt;&lt;br&gt;
Hope this article helped you in learning ‚Äúhow to make a website for business?‚Äù Now by following the above-mentioned steps even a non-technical person can build his/her business website.&lt;/p&gt;

&lt;p&gt;Initially, everyone struggles in building a website for small businesses. And if that is the case with you, you can even consider hiring some professionals to build a successful website.&lt;/p&gt;

</description>
      <category>waystomakewebsite</category>
      <category>websitebuildingsteps</category>
    </item>
    <item>
      <title>Today I learned about Hidden Search</title>
      <author>Ahtsham Ajus</author>
      <pubDate>Tue, 15 Jun 2021 05:45:26 +0000</pubDate>
      <link>https://dev.to/ahtshamajus/today-i-learned-about-hidden-search-4364</link>
      <guid>https://dev.to/ahtshamajus/today-i-learned-about-hidden-search-4364</guid>
      <description>&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/ahtshamajus4772/embed/GRWPNoK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
      <category>laravel</category>
    </item>
    <item>
      <title>Create a serverless book library app with HarperDB and Gatsbyjs</title>
      <author>Tapas Adhikary</author>
      <pubDate>Tue, 15 Jun 2021 05:37:59 +0000</pubDate>
      <link>https://dev.to/atapas/create-a-serverless-book-library-app-with-harperdb-and-gatsbyjs-19cd</link>
      <guid>https://dev.to/atapas/create-a-serverless-book-library-app-with-harperdb-and-gatsbyjs-19cd</guid>
      <description>&lt;p&gt;One of the many advantages of trying out &lt;code&gt;side-projects&lt;/code&gt; is, you never run out of the ideas of trying out something new. For example, recently, I had an opportunity to try out a modern, easy-to-use, fast database, &lt;code&gt;HarperDB&lt;/code&gt;. As I learned how to set up and use it, I could further explore building a serverless app using it. &lt;/p&gt;

&lt;p&gt;This article will learn how to create a serverless &lt;code&gt;book library&lt;/code&gt; app using &lt;code&gt;HarperDB&lt;/code&gt; and &lt;code&gt;Gatsbyjs&lt;/code&gt;. We will also learn to deploy the app on the &lt;code&gt;Gatsby Cloud&lt;/code&gt;. I hope you enjoy following along and build the app with me.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#so-what-are-we-going-to-learn"&gt;
  &lt;/a&gt;
  So, What are we going to learn?
&lt;/h1&gt;

&lt;p&gt;We will learn to,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setting up &lt;code&gt;HarperDB&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Configure the &lt;code&gt;Schema and Table&lt;/code&gt; in HarperDB.&lt;/li&gt;
&lt;li&gt;Populate &lt;code&gt;data&lt;/code&gt; in HarperDB.&lt;/li&gt;
&lt;li&gt;Setting up a &lt;code&gt;Gatsbyjs&lt;/code&gt; project.&lt;/li&gt;
&lt;li&gt;Use a &lt;code&gt;Gatsbyjs Plugin&lt;/code&gt; to access HarperDB data at the build time.&lt;/li&gt;
&lt;li&gt;Build the user interfaces for the book library app. It's all with &lt;code&gt;Reactjs&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Deploy the app on the &lt;code&gt;Gatsby Cloud&lt;/code&gt; to access it publicly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At any point in time, feel free to refer to the source code of the app from the GitHub repository,&lt;/p&gt;

&lt;blockquote&gt;

&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/atapas"&gt;
        atapas
      &lt;/a&gt; / &lt;a href="https://github.com/atapas/flicks"&gt;
        flicks
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Flicks is a project to showcase the integration between Gatsbyjs and HarperDB. It provides a Gatsby-based user interface pulling data from the HarperDB. So you can assume it to be a library showing information about my favorite books!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a href="https://flicks.gatsbyjs.io/" rel="nofollow"&gt;
    &lt;img alt="demo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--DU9ab79v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/atapas/flicks/main/./static/booklist.png" width="100%" height="auto"&gt;
  &lt;/a&gt;
&lt;/p&gt;
&lt;h1&gt;
  Flicks - Know My Favorite Books
&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;Flicks&lt;/code&gt; is a project to showcase the integration between &lt;code&gt;Gatsbyjs&lt;/code&gt; and &lt;code&gt;HarperDB&lt;/code&gt;. It provides a Gatsby-based user interface pulling data from the HarperDB. So you can assume it to be a library showing information about my favorite books!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Please feel free to fork and change the project in whatever ways you need to. If you like the work, please show your support by giving the repo a star(‚≠ê)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
üíª Demo&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Flicks&lt;/code&gt; is deployed on the Gatsby Cloud. You can access it using, &lt;a href="https://flicks.gatsbyjs.io/" rel="nofollow"&gt;https://flicks.gatsbyjs.io/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
üìö Quickstart&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Clone the project and browse the project repo.&lt;/li&gt;
&lt;li&gt;Install dependencies using &lt;code&gt;npm install&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Follow this step-by-step tutorial to set up data with &lt;code&gt;HarperDB&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Start the UI using the &lt;code&gt;gatsby develop&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;Open the code and start customizing! The app is now running at &lt;a href="http://localhost:8000" rel="nofollow"&gt;http://localhost:8000&lt;/a&gt;!&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
üñºÔ∏è Screenshots&lt;/h2&gt;
&lt;h3&gt;
The Book List Page&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/atapas/flicks/main/./static/booklist.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DU9ab79v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/atapas/flicks/main/./static/booklist.png" alt="book deatils"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
The Book Details&lt;/h3&gt;‚Ä¶&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/atapas/flicks"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;/blockquote&gt;

&lt;p&gt;Here goes a quick demo of the app that we will build in the next 12-15 minutes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/ErdlYiRVhSA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is the demo of the library app. Please feel free to access and use.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://flicks.gatsbyjs.io/"&gt;https://flicks.gatsbyjs.io/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;You need a couple of prerequisites,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You must have &lt;code&gt;Node.js&lt;/code&gt; installed. Please make sure you have installed Node.js version &amp;gt;= 12.13.0. You can download and install Node.js &lt;a href="https://nodejs.org/en/download/current/"&gt;from here&lt;/a&gt;. You can check the version of the existing Node.js installation using the command, &lt;code&gt;node -v&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Knowledge of Reactjs would be helpful as Gatsbyjs is React-based.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#before-we-begin-what-is-raw-serverless-endraw-anyway"&gt;
  &lt;/a&gt;
  Before we begin, What is &lt;code&gt;serverless&lt;/code&gt; anyway?
&lt;/h1&gt;

&lt;p&gt;There is a high chance that you may have a couple of doubts as I had about the term &lt;code&gt;serverless&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does serverless mean there are no servers involved at all in the app development?&lt;/li&gt;
&lt;li&gt;Are we talking about the &lt;a href="https://www.serverless.com/"&gt;Serverless Framework&lt;/a&gt; by any chance?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nope, both of them are not true in the context of this article. A server exists to provide services. It could be e-mail, form, hosting, and even database. By &lt;code&gt;serverless&lt;/code&gt; it doesn't mean there are no servers involved in the app development. It instead means we as developers do not set up, manage, and maintain these servers. Instead, we leverage the services made available and managed by providers like Google, Amazon, Netlify, Vercel, Gatsby, HarperDB, and many more.&lt;/p&gt;

&lt;p&gt;Coming to the second point above, the &lt;code&gt;Serverless Framework&lt;/code&gt; is a service that helps us to go serverless. However, we will not use it in this article.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#harperdb"&gt;
  &lt;/a&gt;
  HarperDB
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;HarperDB&lt;/code&gt; is a fast, flexible database that allows you to perform rapid application development, distributed computing, SaaS, and many more. To set up HarperDB in a serverless way, we need to configure a cloud instance. But the first thing first, let's create an account with HarperDB.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-harperdb"&gt;
  &lt;/a&gt;
  Setting Up HarperDB
&lt;/h2&gt;

&lt;p&gt;Please browse to &lt;a href="https://harperdb.io/"&gt;https://harperdb.io/&lt;/a&gt; and create an account for free. Please click on the link &lt;code&gt;Start Free&lt;/code&gt; as shown below. If you have an account already, please sign in using this link, &lt;a href="https://studio.harperdb.io/"&gt;https://studio.harperdb.io/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XIRwjlun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433378490/RP74kVKnM.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XIRwjlun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433378490/RP74kVKnM.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Create a Free Account"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.1: Create a Free Account&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As part of the signup process, you need to provide the details like name, email, subdomain name. &lt;code&gt;HarperDB&lt;/code&gt; will now create a subdomain for you. So please provide the details and sign up for free.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zcWvc_1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434396513/BabLj1_rJ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zcWvc_1J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434396513/BabLj1_rJ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Specify Details to Sign Up"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.2: Specify Details to Sign Up&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the next step, you need to provide an account password. Please provide a strong password and complete the account creation process.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hArSowGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433425677/I6tOJRVAk.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hArSowGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433425677/I6tOJRVAk.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Account Password"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.3: Specify the Account Password&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, let's create a HarperDB cloud instance. We will use this cloud instance to create and fetch data for our application. Please click on the section &lt;code&gt;Create New HarperDB Cloud Instance&lt;/code&gt; to move to the next step. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--USj1nwbN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433435638/7p6IQxNdZ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--USj1nwbN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433435638/7p6IQxNdZ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Create a HarperDB Cloud Instance"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.4: Create a HarperDB Cloud Instance&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, please select the &lt;code&gt;Create HarperDB Cloud Instance&lt;/code&gt; as shown in the image below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VrrK0MbC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433443441/DvOCNd9BJ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VrrK0MbC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433443441/DvOCNd9BJ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="HarperDB Cloud Instance"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.5: Create HarperDB Cloud Instance&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now we have to specify the cloud instance name and credentials. Please provide an instance name of your choice along with the credentials.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FJJw0Alr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434429229/Cus9BrFFQ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FJJw0Alr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434429229/Cus9BrFFQ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Credentials"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.6: Specify Instance Name and Credentials.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, you need to select the RAM size, storage size, and other spec details. Please select all the free options.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBULiBK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433516588/uSZbwoveZ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBULiBK4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433516588/uSZbwoveZ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="7.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.7: Select the specs&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The last step is to confirm and add the HarperDB cloud instance. Again, please review the details and click the &lt;code&gt;Add Instance&lt;/code&gt; button.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QHAzT5Uf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434445840/i_NYUs4Bj.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QHAzT5Uf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434445840/i_NYUs4Bj.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="8.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.8: Review the instance details and Add&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You should see the instance creation getting started.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EcpxK0MM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434460243/RG6yA8B7u.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EcpxK0MM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434460243/RG6yA8B7u.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="9.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.9: Creating Instance is In-Progress&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It may take a few minutes. However, you should see the status as &lt;code&gt;OK&lt;/code&gt; after a successful HarperDB cloud instance creation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8iqS-4y7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434475674/L48WYGd9r.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8iqS-4y7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434475674/L48WYGd9r.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="10.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.10: Status OK&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A final step. Please go to the &lt;code&gt;config&lt;/code&gt; tab and copy the API Auth Header Key. Please preserve it somewhere, as we will use it when we configure Gatsbyjs with HarperDB.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MJlWx0jO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622469889870/2LSZSvMgBf.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MJlWx0jO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622469889870/2LSZSvMgBf.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="HarperDB_config.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 1.11: HarperDB API Auth Header Key&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's all. We have successfully created a HarperDB cloud instance that is ready to use.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#configure-the-schema-and-table"&gt;
  &lt;/a&gt;
  Configure the Schema and Table
&lt;/h2&gt;

&lt;p&gt;We need to create a schema and table to insert a few records into the DB. To do that, load the HarperDB cloud instance from the dashboard. First, create a schema by specifying a schema name. For our app, let's give a schema name as &lt;code&gt;library&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dlz_s_BQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433555806/DyV3g-UdD.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dlz_s_BQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622433555806/DyV3g-UdD.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="11.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2.1: Create a Schema&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, let's specify a table name. Let's specify &lt;code&gt;book&lt;/code&gt; as the table name and create. Please note, you have to specify a &lt;code&gt;hash_attribute&lt;/code&gt; for the table. HarperDB will auto-generate the value for it. You may manually add it if you want to specify its value. In our case, we will let HarperDB create it. Let's specify the &lt;code&gt;id&lt;/code&gt; column as the hash_attribute for the &lt;code&gt;book&lt;/code&gt; table.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XUkr2y26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434489898/itNE2fdrt.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XUkr2y26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434489898/itNE2fdrt.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="12.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 2.2: Create a Table&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#populate-data-in-harperdb"&gt;
  &lt;/a&gt;
  Populate data in HarperDB
&lt;/h2&gt;

&lt;p&gt;We will now populate data in HarperDB. We will insert a few records of books into the &lt;code&gt;book&lt;/code&gt; table using the HarperDB user interface. You can insert one record by specifying a JSON object or multiple records at once by specifying an array of JSON objects. Let us create a book record by specifying these properties and values,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;author&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kyle Simpson&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="nx"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://res.cloudinary.com/atapas/image/upload/v1622356611/book-covers/you_dont_know_js_1_le1xk5.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;No matter how much experience you have with JavaScript, odds are you don‚Äôt fully understand the language. As part of the series, this compact guide focuses on new features available in ECMAScript 6 (ES6), the latest version of the standard upon which JavaScript is built.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;isbn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9781491904244&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;278&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;published&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;2015-12-27T00:00:00.000Z&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;publisher&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;O&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;Reilly Media&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;rating&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;subtitle&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ES6 &amp;amp; Beyond. It covers all aspects of javaScript deep down.&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You Don&lt;/span&gt;&lt;span class="se"&gt;\'&lt;/span&gt;&lt;span class="s1"&gt;t Know JS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;JavaScript&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;website&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://github.com/getify/You-Dont-Know-JS/tree/master/es6%20&amp;amp;%20beyond&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Click on the save icon to save the record.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iEFNVpci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434576388/c6N63Mpfn.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iEFNVpci--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434576388/c6N63Mpfn.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="13.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 3.1: Insert a book record&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Similarly, you can insert multiple records. So please insert a few more records as the book library must contain more than just one book!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A4ZtEsV9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434591409/P3jIqDL61.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A4ZtEsV9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434591409/P3jIqDL61.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="14.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 3.2: Book Records&lt;/p&gt;

&lt;p&gt;You can make use of the JSON data from my &lt;a href="https://github.com/atapas/flicks/blob/main/data/books.json"&gt;GitHub Repository&lt;/a&gt; to create multiple records.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Congratulations üéâ !!! You have completed the database setup with the required data. Now, we will move our focus towards building the User Interface for the book library app.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#gatsbyjsaka-gatsby"&gt;
  &lt;/a&gt;
  Gatsbyjs(aka Gatsby)
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;Gatsby&lt;/code&gt; is a React-based framework that allows you to build fast, secure, and robust websites. You can create markups with data at the build time and deploy the built artifacts to serve your pages much faster. It gives a phenomenal performance and speed improvement over the traditional client-server model. We will use Gatsby to create prebuilt markups using the data record added to the HarperDB.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gatsby-plugin-for-harperdb"&gt;
  &lt;/a&gt;
  Gatsby Plugin for HarperDB
&lt;/h2&gt;

&lt;p&gt;Gatsby's massive plugin ecosystem allows us to pull data from several data sources, avail themes, and many more use-cases. Unfortunately, I couldn't find any existing Gatsby plugin for the HarperDB data source. But, as they say, &lt;em&gt;necessity is the mother and all inventions&lt;/em&gt;, I thought of creating one!&lt;/p&gt;

&lt;p&gt;%[&lt;a href="https://twitter.com/tapasadhikary/status/1397940296474714113"&gt;https://twitter.com/tapasadhikary/status/1397940296474714113&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;So now we have a Gatsby Plugin for HarperDB (&lt;code&gt;gatsby-source-harperdb&lt;/code&gt;) that allows you to use the HarperDB as the data source so that a Gatsby project can pull the data at the build time. You can find the source code of the plugin from here,&lt;/p&gt;

&lt;p&gt;%[&lt;a href="https://github.com/atapas/gatsby-source-harperdb"&gt;https://github.com/atapas/gatsby-source-harperdb&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;It is also available as an official plugin to install from the &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-source-harperdb/?=Harper"&gt;Gatsby's plugin page&lt;/a&gt;. So please give it a try.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-a-gatsby-project"&gt;
  &lt;/a&gt;
  Setting up a Gatsby Project
&lt;/h2&gt;

&lt;p&gt;Alright, it's time to create our gatsby project. First, install the gatsby command-line interface(CLI) tool. Open a command prompt and use this command to install it globally,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;gatsby-cli &lt;span class="nt"&gt;-g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will use the latest gatsby version 3.x to bootstrap our project. Gatsby provides many starter projects to get started with the development faster. Now let's create a gatsby project. Try this command from the command prompt,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gatsby new
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will ask you a few questions like the site name, what kind of CSS library support you need, what are plugins you want to install? The image below shows my answers. You can choose to go with the same or anything else suitable for you.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://cdn.hashnode.com/res/hashnode/image/upload/v1622464125774/FQ6drNgux.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VDqFy1Uv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622464125774/FQ6drNgux.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="gatsby_new.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 4.1: Creating a Gatsby Project&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please give it a while to complete the installation and set up the project for you. Once done, you should see a folder created with the site name provided by you in the last step. For me, it is &lt;code&gt;flicks&lt;/code&gt;. Please change to the project directory and try this command from the command line,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;gatsby develop
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will run the project in the development mode. First, it will build the project and then host the prebuilt markups from a server locally to access the app. By default, the app will run on the URL, &lt;code&gt;http://localhost:8000&lt;/code&gt;. Please open a browser window/tab and try the URL. You should see your app up and running,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_tkV7pRi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622435003659/6M2PFHfT2.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_tkV7pRi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622435003659/6M2PFHfT2.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="gatsby_8.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 4.2: The Initial App&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#configure-harperdb-with-our-gatsby-app"&gt;
  &lt;/a&gt;
  Configure HarperDB with our Gatsby App
&lt;/h2&gt;

&lt;p&gt;Let's configure the HarperDB with our Gatsby app. We will use the &lt;code&gt;gatsby-source-harperdb&lt;/code&gt; plugin. Please install it using the following command,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;gatsby-source-harperdb

&lt;span class="c"&gt;# If you are using yarn, try this,&lt;/span&gt;
&lt;span class="c"&gt;# yarn add gatsby-source-harperdb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now create a file called &lt;code&gt;.env&lt;/code&gt; at the root of the project folder. Please specify the API auth header key and the instance URL in the .env file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;HARPER_DB_SECRET_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;API_KEY_VALUE
&lt;span class="nv"&gt;HARPER_DB_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;CLOUD_INSTANCE_VALUE
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please replace the &lt;code&gt;API_KEY_VALUE&lt;/code&gt; with the API auth header key we copied before. Also, replace the &lt;code&gt;CLOUD_INSTANCE_VALUE&lt;/code&gt; with your cloud instance value. The URL ends with &lt;code&gt;.harperdbcloud.com&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please make sure you add an entry of &lt;code&gt;.env&lt;/code&gt; in your &lt;code&gt;.gitignore&lt;/code&gt; file. You may not want to commit and push this file to your GitHub repository.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We need to install the &lt;code&gt;dotenv&lt;/code&gt; package to read environment variables from the &lt;code&gt;.env&lt;/code&gt; file. You can install it using this command,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;dotenv
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now open the &lt;code&gt;gatsby-config.js&lt;/code&gt; file at the root of the project folder. It is a file to configure all the gatsby plugins required for the project. You may find a few plugin entries already. We have installed those while creating the project. Add this line at the top of the &lt;code&gt;gatsby-config.js&lt;/code&gt; file,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;dotenv&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, please add the configuration for the &lt;code&gt;gatsby-source-harperdb&lt;/code&gt; in the config file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
     &lt;span class="p"&gt;....&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nl"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`gatsby-source-harperdb`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="nx"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;secret&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HARPER_DB_SECRET_KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HARPER_DB_URL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;payload&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;operation&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sql&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;sql&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;SELECT * FROM library.book&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;books&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note the &lt;code&gt;options&lt;/code&gt; in the above configuration,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We read the API Key from the &lt;code&gt;.env&lt;/code&gt; file and use it for the &lt;code&gt;secret&lt;/code&gt; value.&lt;/li&gt;
&lt;li&gt;Similarly, we get the HarperDB cloud instance URL from the .env file and use it in the configuration.&lt;/li&gt;
&lt;li&gt;Next is the &lt;code&gt;payload&lt;/code&gt; that we use to query HarperDB. Here we are specifying the SQL query to retrieve the data from the &lt;code&gt;book&lt;/code&gt; table of the &lt;code&gt;library&lt;/code&gt; schema.&lt;/li&gt;
&lt;li&gt;Last, specify the value of the &lt;code&gt;type&lt;/code&gt; property. It can be any string of your choice. It is the name under which your data will appear in Gatsby GraphQL queries. For example, if we specify &lt;code&gt;books&lt;/code&gt; as the type name, Gatsby will create GraphQL queries as &lt;code&gt;allBooks&lt;/code&gt; and &lt;code&gt;books&lt;/code&gt;. We will see that in a while.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you are running the &lt;code&gt;gatsby develop&lt;/code&gt; already, please stop it(using the &lt;code&gt;control + c&lt;/code&gt; key combination) and start again.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fetch-the-book-records-in-the-ui"&gt;
  &lt;/a&gt;
  Fetch the Book records in the UI
&lt;/h2&gt;

&lt;p&gt;Gatsby source plugins make the data available to query using GraphQL queries. In addition, it provides a GraphQL playground for us to try out the queries before we use them in the app. To Open the GraphQL playground and query the book data from the HarperDB, please open this URL in your browser tab: &lt;a href="http://localhost:8000/___graphql"&gt;http://localhost:8000/___graphql&lt;/a&gt;. You should see the &lt;code&gt;allBooks&lt;/code&gt; and &lt;code&gt;books&lt;/code&gt; types under the explorer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bdpq_uuS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622472609825/tV-vJsmPP.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bdpq_uuS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622472609825/tV-vJsmPP.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="GraphQL Explorer"&gt;&lt;/a&gt;&lt;br&gt;
Figure 5.1: GraphQL Explorer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now expand the &lt;code&gt;allBooks&lt;/code&gt; type from the explorer. Then expand the &lt;code&gt;nodes&lt;/code&gt; node and select the attributes to query. As you select, you will see the query is getting built automatically. Now, execute the query using the &lt;code&gt;Execute Query&lt;/code&gt; button at the top. You will see the result of the query at the rightmost pane. Please refer to the image below.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TI7bU17U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622472933951/e5SL4rTHA.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TI7bU17U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622472933951/e5SL4rTHA.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="GraphQL Query"&gt;&lt;/a&gt;&lt;br&gt;
Figure 5.2: GraphQL Query Execution&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We will now use this query in our UI code(React components) to build the user interfaces.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-the-user-interfacesui"&gt;
  &lt;/a&gt;
  Build the User Interfaces(UI)
&lt;/h2&gt;

&lt;p&gt;Now we will build the user interfaces using this query to show the books in the UI. In the UI, we will first list all the books with details like title, topic, cover, author, subtitle. Then, when users click on any of the books, we take them to a details page to show more details about that book.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-the-book-listing-page"&gt;
  &lt;/a&gt;
  Create the Book Listing Page
&lt;/h3&gt;

&lt;p&gt;Let us create the book listing page. Open the &lt;code&gt;index.js&lt;/code&gt; file under the &lt;code&gt;src/pages&lt;/code&gt; folder. Replace the content of the file with the following content,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// 1. Import React, Styled-Components, and gatsby&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useStaticQuery&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;graphql&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gatsby&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// 2. Create Styled Components&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
    display: flex;
    flex-direction: column;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Book&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
    border: 1px solid #4e4e4e;
    border-radius: 4px;
    padding: 0.5rem;
    width: 250px;
    min-height: 450px;
    margin: 1rem;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ResponsiveImage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="s2"&gt;`
    width: 100%;
    height: auto;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="s2"&gt;`
    font-size: 20px;
    font-weight: 500;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// 3. The IndexPage Component&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;IndexPage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// 4. Query the data using GraphQL query&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useStaticQuery&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="s2"&gt;`
        {
            allBooks {
                nodes {
                    title
                    id
                    author
                    cover
                    rating
                    subtitle
                    topic
                }
            }
        }
    `&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;books&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;allBooks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nodes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sort&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rating&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rating&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="c1"&gt;// 5. The Markup to render with the data&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Book&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;topic&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cover&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
                                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ResponsiveImage&lt;/span&gt;
                                    &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                                    &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                                &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                            &lt;span class="p"&gt;)}&lt;/span&gt;
                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Title&amp;gt; by{" "&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subtitle&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rating&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Book&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="p"&gt;))}&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Container&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;IndexPage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us go over the code above and understand. It is a regular React component where,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We import &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;Styled-Components&lt;/code&gt;, and &lt;code&gt;gatsby&lt;/code&gt; libraries.&lt;/li&gt;
&lt;li&gt;Create Styled Components for the main page, container inside it, and each box to show the book information.&lt;/li&gt;
&lt;li&gt;Then, we start the &lt;code&gt;IndexPage&lt;/code&gt; component.&lt;/li&gt;
&lt;li&gt;In the component, we use the GraphQL query to fetch the &lt;code&gt;books&lt;/code&gt; data. We fetch only the required attributes for the listing page. Please notice we use the &lt;code&gt;useStaticQuery&lt;/code&gt; hook from gatsby to perform the fetch. Gatsby recommends this hook to fetch data using the GarphQL queries inside a Gatsby component. We also sort the books based on the rating.&lt;/li&gt;
&lt;li&gt;Last, we have the markup to render using the data.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now refresh the page where the app is running. You will see a list of books with details like the image below,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fs5yT-7n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622474808172/-fjZUBJvm.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fs5yT-7n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622474808172/-fjZUBJvm.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Book Listing Page"&gt;&lt;/a&gt;&lt;br&gt;
Figure 5.2.1: The Book Listing Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#create-the-book-details-page"&gt;
  &lt;/a&gt;
  Create the Book Details Page
&lt;/h3&gt;

&lt;p&gt;Great! Let us now implement the book details page. It will show a book's details when the user clicks on book information from the listing page. Gatsby provides a super cool feature of creating pages ahead in time(build time) using templates. So, we can create a single template for all the book details as we will show a similar structure for all the books.&lt;/p&gt;

&lt;p&gt;Create a folder called &lt;code&gt;templates&lt;/code&gt; under the &lt;code&gt;src&lt;/code&gt; folder. Now create a file called &lt;code&gt;BookDetails.js&lt;/code&gt; under &lt;code&gt;src\templates&lt;/code&gt; with the following content.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="c1"&gt;// 1. Import required libraries&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;graphql&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gatsby&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Create the Styled Components&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="s2"&gt;`
    display: flex;
    flex-direction: column;
    align-items: center;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;AnchorButton&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="s2"&gt;`
    display: block;
    width: auto;
    height: 25px;
    background: #00ebff;
    padding: 10px;
    text-align: center;
    border-radius: 5px;
    color: #000000;
    font-weight: bold;
    line-height: 25px;
    text-transform: uppercase;
    &amp;amp;:hover {
        color: #2e2222;
    }
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// 3. The BookDetails Component&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;BookDetails&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;details&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Container&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;By&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt; {}{" "&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;20px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/b&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
                &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cover&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;40%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;auto&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

            &lt;span class="na"&gt;Rating&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;rating&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;20px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Pages&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/b&amp;gt;: {details.pages&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt;{" "&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; | &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Publisher&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/b&amp;gt;: {details.publisher&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&amp;gt;{" "&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; | &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;ISBN&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/b&amp;gt;: {details.isbn&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt; &lt;span class="na"&gt;fontSize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;25px&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;AnchorButton&lt;/span&gt;
                &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;website&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;noreferrer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="nx"&gt;Go&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Website&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/AnchorButton&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Container&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// 4. Gatsby Page/Template Query&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;query&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="s2"&gt;`
    query ($title: String!) {
        books(title: { eq: $title }) {
            author
            cover
            description
            id
            isbn
            pages
            published
            publisher
            rating
            subtitle
            title
            topic
            website
        }
    }
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;BookDetails&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are doing the followings in the template code above,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Import all required libraries for the template to work.&lt;/li&gt;
&lt;li&gt;Create Styled Components for UI structure to show the book details.&lt;/li&gt;
&lt;li&gt;Then, we create the &lt;code&gt;BookDetails&lt;/code&gt; React component and render the book details. Please note, we pass a prop to the component as &lt;code&gt;{ data }&lt;/code&gt;. It means we are performing destructuring here to extract the &lt;code&gt;data&lt;/code&gt; from an object. But, from which object?&lt;/li&gt;
&lt;li&gt;In a gatsby project, pages and templates use the result of a query as the prop. Please note the GraphQL query at the bottom of the source code. Here we are performing a filter query to filter out a book by its title. The result of this query will be passed automatically to the BookDetails component as a prop. We extract the data from that and use it for the rendering.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, as we have the template ready, we need to use it to create the pages for each of the books. Let's configure that.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code&gt;gatsby-node.js&lt;/code&gt; at the root of the project folder with the following content. It is a special file that helps in invoking Gatsby APIs and overrides them to customize things.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`path`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lodash&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createPages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;actions&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createPage&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`
        query {
            allBooks {
                edges {
                    node {
                        title
                    }
                }
            }
        }
    `&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;allBooks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;edges&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;edge&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;createPage&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
            &lt;span class="na"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;kebabCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;edge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;/`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;component&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`./src/templates/BookDetails.js`&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
            &lt;span class="na"&gt;context&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="c1"&gt;// Data passed to context is available&lt;/span&gt;
                &lt;span class="c1"&gt;// in page queries as GraphQL variables.&lt;/span&gt;
                &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;edge&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;node&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are using the &lt;code&gt;createPages&lt;/code&gt; API of Gatsby to create pages based on the query. First, the query fetches all the book titles. Then, it creates a page using the template for each of the titles and passes the title as a context. Each page will be accessed using a unique URL we build with the &lt;code&gt;path&lt;/code&gt; attribute. Also, if you recall, we use the title in the template to filter the book information.&lt;/p&gt;

&lt;p&gt;Please note, we use the &lt;code&gt;lodash&lt;/code&gt; library to utilize its method for formatting a URL fragment. Usually, a title may have spaces, and the URL doesn't accept that. So we use the &lt;code&gt;_.kebabCase(edge.node.title)&lt;/code&gt; to replace the spaces with a hyphen(-) character. Please install &lt;code&gt;lodash&lt;/code&gt; as a dependency.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;lodash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now restart &lt;code&gt;gatsby develop&lt;/code&gt; once more. Next time when the &lt;code&gt;gatsby develop&lt;/code&gt; runs, it will create the pages for all the books using the template.&lt;/p&gt;

&lt;p&gt;So let us now create a link from each of the books on the book listing page to its respective details page. Please open the &lt;code&gt;index.js&lt;/code&gt; file. Include these two imports at the top,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// ... Other imports&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;lodash&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gatsby&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, wrap the &lt;code&gt;&amp;lt;Book&amp;gt;&lt;/code&gt; tag using the &lt;code&gt;Link&lt;/code&gt; like this,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;books&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;kebabCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;book&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Book&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="nx"&gt;All&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;code&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;previous&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Book&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;))}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note the &lt;code&gt;to&lt;/code&gt; attribute of the &lt;code&gt;Link&lt;/code&gt;. It links you to the URL fragment created using the title the same way we mapped the pages in the &lt;code&gt;gatsby-node.js&lt;/code&gt; file. Save your changes and refresh the app in the browser. Now, you will be able to click on the books from the listing page. Click on a book, and you should land on a details page like the one shown below,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L_LpxpTn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622523947978/ISpMelssO.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L_LpxpTn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622523947978/ISpMelssO.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Figure 5.2.2: Book Details Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's it. We have the book library app ready with basic functionality. Please feel free to enhance the look and feel of the app using styles. You can add features like searching a book, filtering, many more.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#deploying-on-gatsby-cloud"&gt;
  &lt;/a&gt;
  Deploying on Gatsby Cloud
&lt;/h1&gt;

&lt;p&gt;Welcome to the last section of the article. Now we will deploy the library app to the &lt;code&gt;Gatsby Cloud&lt;/code&gt; with a few quick steps. At this stage, please create a repository on GitHub and push all the code.&lt;/p&gt;

&lt;p&gt;Please &lt;a href="https://www.gatsbyjs.com/products/cloud/"&gt;Create an account&lt;/a&gt; with Gatsby Cloud and Log in. Please select the free build and hosting plans while creating the account. Next, click on the &lt;code&gt;Add a site&lt;/code&gt; button.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZNPCoAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434915683/R4nEB7cS7.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8ZNPCoAW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434915683/R4nEB7cS7.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Add a Site"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.1: Add a Site&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Select the &lt;code&gt;Import from a Git repository&lt;/code&gt; option and click on the &lt;code&gt;Next&lt;/code&gt; button.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uGwyLfVK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434930979/_BGgOwtcT.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uGwyLfVK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434930979/_BGgOwtcT.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Git Repo"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.2: Select from a Git Repo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Assuming you have pushed your code to the GitHub repository, please select the &lt;code&gt;GitHub&lt;/code&gt; option.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KOg0OHa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434938539/9LuOJluGZ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KOg0OHa4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434938539/9LuOJluGZ.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Select Repository Type"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.3: Select Repository Type&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please provide the repository details and the site name and got to the next step.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KVnjFa5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434949080/1LDBtofL2.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KVnjFa5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434949080/1LDBtofL2.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Repo Details"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.4: Provide Repository Details&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We will not use any CMS for our application. Therefore, you can skip the step of selecting the CMS.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7KfzBPny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434958522/y9TydhgFG.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7KfzBPny--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434958522/y9TydhgFG.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Skip CMS"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.5: Skip CMS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the last step, please provide the environment variable details and finish the setup.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EvSj7OTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622519233508/AOWv8OJte.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EvSj7OTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622519233508/AOWv8OJte.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="ENV Details"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.6: Provide Environment Details&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now a build should get triggered automatically. Once the build is successful, the app will be available at &lt;code&gt;https://&amp;lt;YOUR_SITE_NAME&amp;gt;.gatsbyjs.io&lt;/code&gt;. In my case, it is &lt;a href="//flicks.gatsbyjs.io"&gt;flicks.gatsbyjs.io&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qjHVMGXO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434983592/nWP0ey-vz.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qjHVMGXO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622434983592/nWP0ey-vz.png%3Fborder%3D1%2CCCCCCC%26auto%3Dcompress" alt="Trigger Build"&gt;&lt;/a&gt;&lt;br&gt;
Figure 6.7: Trigger Build&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That's all. We have come to the end of this article. I hope you found it insightful. Thanks for reading and trying out. Please feel free to comment below with the link to your app. Also, feel free to &lt;a href="https://github.com/atapas/flicks/issues"&gt;reach out to me&lt;/a&gt; if you face any issues in following the article.&lt;/p&gt;




&lt;p&gt;I hope you enjoyed this article or found it helpful. Let's connect. You can find me on &lt;a href="https://twitter.com/tapasadhikary"&gt;Twitter(@tapasadhikary)&lt;/a&gt;, sharing thoughts, tips, and code practices.&lt;/p&gt;

&lt;p&gt;You may also like,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/why-do-you-need-to-do-side-projects-as-a-developer-ckhn5m5km05teajs1fvjd7u5f"&gt;Why do you need to do Side Projects as A Developer?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/16-side-project-github-repositories-you-may-find-useful-ckk50hic406quhls1dui2d6sd"&gt;16 side project GitHub repositories you may find helpful&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.greenroots.info/build-test-and-publish-your-npm-i-just-did-it-in-few-minutes-ck3dwi1j100vzo4s15qy8ail9"&gt;Build, Test and Publish your NPM, I just did it in few minutes!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>jamstack</category>
      <category>harperdb</category>
      <category>gatsby</category>
    </item>
    <item>
      <title>I'm switching to vim!</title>
      <author>Siddharth</author>
      <pubDate>Tue, 15 Jun 2021 05:07:12 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/i-m-switching-to-vim-867</link>
      <guid>https://dev.to/siddharthshyniben/i-m-switching-to-vim-867</guid>
      <description>&lt;p&gt;I just took a short look at the (neo)vim docs, and I'm officially moving to (neo)vim (and tmux)! I have just used it for a few days, but I really can feel the power it gives me. Not to mention that it really saves my 6GB ram for other uses.&lt;/p&gt;


&lt;div class="ltag_gist-liquid-tag"&gt;
  
&lt;/div&gt;
A snapshot of my coding session




&lt;p&gt;And I encourage all of you to do the same. It really is super faster (I come from vscode, and it is really faster). Vim has everything you need ‚Äì Syntax highlighting, Split screen, File explorers(!), Autocomplete(!), Tabs, Folding lines(!), Indentation autofixing(!), macros, line bookmarks, integrated terminal like interface and what not (I should make an article on it soon). Vim is basically equivalent to VSCode for me. &lt;/p&gt;

</description>
      <category>vim</category>
      <category>tmux</category>
      <category>terminal</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Python's Collections Module: Why dictionaries maintain insertion order but printing Counter doesn't?</title>
      <author>Kathan Vakharia</author>
      <pubDate>Tue, 15 Jun 2021 04:47:18 +0000</pubDate>
      <link>https://dev.to/kathanvakharia/python-s-collections-module-why-dictionaries-maintain-insertion-order-but-printing-counter-doesn-t-4jg5</link>
      <guid>https://dev.to/kathanvakharia/python-s-collections-module-why-dictionaries-maintain-insertion-order-but-printing-counter-doesn-t-4jg5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#do-dictionaries-in-python-maintain-insertion-order"&gt;
  &lt;/a&gt;
  Do dictionaries in python maintain insertion  order?
&lt;/h2&gt;

&lt;p&gt;Well if your answer was NO, time to update your python knowledge because they do maintain their insertion order in python 3.6+  and completely from python 3.7+&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EWgrq5H5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lg6g8i4apqkzl9s3rba.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EWgrq5H5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5lg6g8i4apqkzl9s3rba.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But a &lt;code&gt;Counter&lt;/code&gt; object doesn't,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt; 

&lt;span class="n"&gt;nums&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;#You would expect the order of counts,
# to be 1-&amp;gt;2-&amp;gt;3-&amp;gt;5
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nums&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="s"&gt;"""Output: But it didn't work that way!

Counter({2: 3, 5: 3, 1: 2, 3: 1})
"""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#why-printing-counter-doesnt-maintain-insertion-order-despite-the-fact-it-is-a-dict-subclass"&gt;
  &lt;/a&gt;
  Why printing Counter doesn't maintain insertion order despite the fact it is a dict sub-class?
&lt;/h2&gt;

&lt;p&gt;The reason behind this is the &lt;code&gt;__repr__&lt;/code&gt;  method implementation of Counter object.&lt;br&gt;
The  &lt;code&gt;__repr__&lt;/code&gt; method decides object's representation when displaying it using &lt;code&gt;print()&lt;/code&gt; function. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cZQawNbZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jgy562b29dofjbtx7w12.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cZQawNbZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jgy562b29dofjbtx7w12.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't worry if above definition looks complex at first sight :)&lt;/p&gt;

&lt;p&gt;Let's try to get insights from this method definition, &lt;/p&gt;

&lt;p&gt;Focus on the code inside the &lt;code&gt;try&lt;/code&gt; block because that's what decides what happens while we print a &lt;code&gt;Counter&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Aha! we can see the call to &lt;code&gt;most_common method&lt;/code&gt; and that's what causing the &lt;strong&gt;descending&lt;/strong&gt; order. MYSTERY SOLVEDüî• or is it?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L4M6wjQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63hnr6dbwawvgketp2ol.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L4M6wjQ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/63hnr6dbwawvgketp2ol.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but"&gt;
  &lt;/a&gt;
  But...
&lt;/h3&gt;

&lt;p&gt;You might have a doubt. Considering Counter is infact a  sub class of &lt;code&gt;builtins.dict&lt;/code&gt;, why it doesn't obey dictionary class's   &lt;code&gt;__repr__&lt;/code&gt;  and maintain insertion order ü§î&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-method-resolution-order-mro"&gt;
  &lt;/a&gt;
  The Method Resolution Order (MRO)
&lt;/h2&gt;

&lt;p&gt;To put it simply, &lt;strong&gt;MRO&lt;/strong&gt; defines the &lt;em&gt;order&lt;/em&gt; in which python interpreter searches a method for a particular object,&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LaCq5eeX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqogygv9ctryppic9t5b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LaCq5eeX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oqogygv9ctryppic9t5b.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Method Resolution Order&lt;/strong&gt; can be found using &lt;code&gt;ClassName.__mro__&lt;/code&gt;  attribute or calling &lt;code&gt;help&lt;/code&gt; on that Class.&lt;/p&gt;

&lt;p&gt;It is evident that, &lt;code&gt;__repr__&lt;/code&gt; of Counter's priority is higher than that of &lt;code&gt;builtins.dict&lt;/code&gt;  and that's the reason while printing Counter object doesn't maintain insertion order.&lt;/p&gt;

&lt;p&gt;Then how the heck &lt;code&gt;Counter&lt;/code&gt; can maintain insertion order when printing it üòê, How about you find yourself? OR as always&lt;/p&gt;

&lt;p&gt;STAY TUNED for the next post üòâ&lt;/p&gt;

</description>
      <category>python</category>
      <category>codenewbie</category>
      <category>collections</category>
    </item>
  </channel>
</rss>
