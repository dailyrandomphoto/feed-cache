<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Setup Mocha in watch mode for TDD in Node.js</title>
      <author>Cédric Teyton</author>
      <pubDate>Tue, 13 Jul 2021 15:25:33 +0000</pubDate>
      <link>https://dev.to/promyze/setup-mocha-in-watch-mode-for-tdd-in-node-js-1mah</link>
      <guid>https://dev.to/promyze/setup-mocha-in-watch-mode-for-tdd-in-node-js-1mah</guid>
      <description>&lt;p&gt;&lt;strong&gt;Test-Driven Development&lt;/strong&gt; is a great developement (not testing) methodology. It definitively helps you to produce :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Minimal code to implement business needs&lt;/li&gt;
&lt;li&gt;Small functions &lt;/li&gt;
&lt;li&gt;Code covered by tests, avoiding later regressions. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We use it everyday at &lt;a href="https://promyze.com?utm_source=DevTo&amp;amp;utm_medium=referral"&gt;Promyze&lt;/a&gt; and we definitively saw the benefits of coding in this way. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#illustration"&gt;
  &lt;/a&gt;
  Illustration
&lt;/h2&gt;

&lt;p&gt;Now, let's see how you can apply TDD with &lt;a href="https://mochajs.org/"&gt;Mocha&lt;/a&gt; with &lt;strong&gt;Typescript&lt;/strong&gt; on a &lt;strong&gt;Node.js&lt;/strong&gt; project. &lt;/p&gt;

&lt;p&gt;All the code is available on this &lt;a href="https://github.com/promyze/node-tdd-watcher"&gt;Github project&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#code-structure"&gt;
  &lt;/a&gt;
  Code Structure
&lt;/h3&gt;

&lt;p&gt;In this example we have this simple structure :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.
├── domains
│   └── Bowling
│       ├── Game.spec.ts
│       └── Game.ts
├── LICENSE
├── package.json
├── package-lock.json
├── README.md
└── test
    └── mocha.spec.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;domains&lt;/em&gt; contains our source code, and &lt;em&gt;test&lt;/em&gt; contains my main test suite.&lt;/p&gt;

&lt;p&gt;Let's have a look at the code now.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#packagejson"&gt;
  &lt;/a&gt;
  package.json
&lt;/h3&gt;

&lt;p&gt;The interesting part here is the &lt;strong&gt;scripts&lt;/strong&gt; section. As you can see, we added the &lt;em&gt;--watch&lt;/em&gt; option of Mocha in addition with the &lt;em&gt;--watch-files&lt;/em&gt; option. Here, all the code in &lt;em&gt;domain&lt;/em&gt; and &lt;em&gt;test&lt;/em&gt; folders will be checked for modification, and tests will be automatically run again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"node-tu-wacher"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"@types/chai"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.2.18"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"@types/mocha"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^8.2.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"@types/node"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^15.6.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"chai"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.3.4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"mocha"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^8.4.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"ts-node"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^10.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"typescript"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.3.2"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"engines"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"node"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt;=14.16.1"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;" mocha -r ts-node/register test/mocha.spec.ts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"test:watch"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;" mocha -r ts-node/register --watch --watch-files domains/**/*.ts,test/*.ts test/mocha.spec.ts"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#testmochaspects"&gt;
  &lt;/a&gt;
  test/mocha.spec.ts
&lt;/h3&gt;

&lt;p&gt;This is the root test file that will import all my test suites :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;GameSpec&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../domains/Bowling/Game.spec&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Suite&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mocha&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Server unit testing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Suite&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Game&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GameSpec&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#domainsbowlinggamespects"&gt;
  &lt;/a&gt;
  domains/Bowling/Game.spec.ts
&lt;/h3&gt;

&lt;p&gt;Here we assume that I've just started to code a Bowling app. I wrote my first test :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;chai&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Game&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Game&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Game testing&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;should start a bowling game&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;game&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Game&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;game&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentScore&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;

    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#domainsbowlinggamets"&gt;
  &lt;/a&gt;
  domains/Bowling/Game.ts
&lt;/h3&gt;

&lt;p&gt;And here a basic implementation so that my first test can run :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Game&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;currentScore&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;score&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#see-it-in-action"&gt;
  &lt;/a&gt;
  See it in action
&lt;/h2&gt;

&lt;p&gt;The command &lt;strong&gt;npm run test:watch&lt;/strong&gt; will help me for my TDD session. Everytime a file is saved (CTRL+S with in your favorite IDE), tests would be run again.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cteyton@laptop:~/node-tu-watcher$ npm run test:watch

&amp;gt; node-tu-wacher@1.0.0 test:watch /home/cteyton/Work/Promyze/blog/node-tu-watcher
&amp;gt;  mocha -r ts-node/register --watch --watch-files domains/**/*.ts,test/*.ts test/mocha.spec.ts

  Server unit testing
    Game
      Game testing
        ✓ should start a bowling game


  1 passing (2ms)

ℹ [mocha] waiting for changes...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Get started now and have fun with TDD ;-)&lt;/p&gt;

</description>
      <category>codequality</category>
      <category>tdd</category>
      <category>mocha</category>
      <category>typescript</category>
    </item>
    <item>
      <title>The 7 Most Popular DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 13 Jul 2021 15:18:50 +0000</pubDate>
      <link>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-1poi</link>
      <guid>https://dev.to/devteam/the-7-most-popular-dev-posts-from-the-past-week-1poi</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#security-in-the-cloud-is-a-shared-responsibility"&gt;
  &lt;/a&gt;
  Security in the cloud is a shared responsibility
&lt;/h2&gt;

&lt;p&gt;In the words of a community member &lt;a href="https://dev.to/irby/comment/1g812"&gt;Matt Irby&lt;/a&gt;, this is a fantastic explanation of the shared responsibility model. &lt;/p&gt;

&lt;p&gt;Great work, &lt;a class="mentioned-user" href="https://dev.to/adityagaur"&gt;@adityagaur&lt;/a&gt;
!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/aws-builders" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5zuWf912--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Z-NQNKRG--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/2794/88da75b6-aadd-4ea1-8083-ae2dfca8be94.png" alt="AWS Community Builders "&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rD5QcmlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--sZoRtWsP--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/665539/0ce2c26e-09d1-45d1-b96b-02ffb326cfe7.jpeg" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/aws-builders/10-steps-to-secure-your-cloud-2mhn" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;10 Steps To Secure Your Cloud&lt;/h2&gt;
      &lt;h3&gt;Aditya Gaur for AWS Community Builders  ・ Jul 12 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cloud&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#a-very-important-numeronym"&gt;
  &lt;/a&gt;
  A very important numeronym
&lt;/h2&gt;

&lt;p&gt;... "A11y" that is. Thank you for this thorough and clear breakdown of the term, &lt;a class="mentioned-user" href="https://dev.to/ashleemboyer"&gt;@ashleemboyer&lt;/a&gt;
. It's definitely a critical one to me familiar with in this field!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/ashleemboyer" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HylI3VLU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--psW6D24i--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/156486/36dfc2ab-7625-4dc8-ad22-a269201ef821.jpeg" alt="ashleemboyer"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/ashleemboyer/what-the-heck-is-web-a11y-blp" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What the heck is "web a11y"?&lt;/h2&gt;
      &lt;h3&gt;Ashlee (she/her) ・ Jul 6 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#a11y&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#numeronym&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#notes-on-inheriting-code"&gt;
  &lt;/a&gt;
  Notes on inheriting code
&lt;/h2&gt;

&lt;p&gt;"There will always be a time in your life when you inherit code that was written by another developer," writes &lt;a class="mentioned-user" href="https://dev.to/towernter"&gt;@towernter&lt;/a&gt;
. In their guide on the subject, you'll learn what to do in this inevitable situation. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/towernter" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sz9bfChu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--kepsrAMY--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/393559/e536d6a8-f2a6-47dd-a600-682c1ea4a48e.jpg" alt="towernter"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/towernter/getting-started-with-a-project-written-by-another-developer-1l61" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Getting started with a project written by another developer&lt;/h2&gt;
      &lt;h3&gt;Tawanda Nyahuye ・ Jul 9 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#pedros-research-is-your-gain"&gt;
  &lt;/a&gt;
  Pedro's research is your gain!
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/arantespp"&gt;@arantespp&lt;/a&gt;
 created this guide because they needed to work on a project that uses MongoDB. Completing the steps outlined in this guide gave them an overview of how MongoDB works. Their research is your gain ✨ &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/arantespp" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QMF0gfim--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--yHSSYfHz--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/205070/b2d4d4b7-968c-48cc-b881-456664c1f116.jpg" alt="arantespp"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/arantespp/mongodb-shell-commands-running-on-docker-101-1l73" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;MongoDB shell commands (running on Docker) 101&lt;/h2&gt;
      &lt;h3&gt;Pedro Arantes ・ Jul 5 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#mongodb&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#docker&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#database&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#on-scrubs-and-robots"&gt;
  &lt;/a&gt;
  On Scrubs and Robots
&lt;/h2&gt;

&lt;p&gt;This is such a powerful career-change story, &lt;a class="mentioned-user" href="https://dev.to/winnekes"&gt;@winnekes&lt;/a&gt;
. Thank you for sharing it with us on DEV!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/winnekes" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hCFktsJX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--t0huBvUv--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/616008/74d1598b-bdc9-4364-981a-b6bcd96e804a.jpg" alt="winnekes"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/winnekes/why-i-hung-up-my-stethoscope-and-became-a-web-developer-oa6" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Why I hung up my Stethoscope and became a Web Developer&lt;/h2&gt;
      &lt;h3&gt;Simona Winnekes ・ Jul 10 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#bootcamp&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#be-genuine-build-trust-have-fun"&gt;
  &lt;/a&gt;
  Be Genuine, Build Trust, Have Fun
&lt;/h2&gt;

&lt;p&gt;Those are some pretty great Developer Relations tenets, &lt;a class="mentioned-user" href="https://dev.to/kimmaida"&gt;@kimmaida&lt;/a&gt;
. This post explains just how cross-functional DevRel is — and why understanding that matters! &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/kimmaida" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VVgtsTeQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--LnXVbyab--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/142453/96ef3a65-ae73-42b1-9765-633de4690f71.jpeg" alt="kimmaida"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/kimmaida/which-department-does-devrel-belong-in-3om" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Which Department Does DevRel Belong In?&lt;/h2&gt;
      &lt;h3&gt;Kim Maida ・ Jul 11 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#devrel&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tech&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#decoding-cryptography"&gt;
  &lt;/a&gt;
  Decoding cryptography
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/0xjepsen"&gt;@0xjepsen&lt;/a&gt;
 has done a massive service in breaking down cryptography as it relates to distributed ledger tech. They also shared some seriously helpful resources if you're interested in this field (including respected open source cryptography libraries)!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/0xjepsen" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5XPD6Nv8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--OGSCmBMC--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/660027/60470d10-9104-4c6b-bfd0-d7d687340972.jpeg" alt="0xjepsen"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/0xjepsen/an-introduction-to-cryptography-in-distributed-ledger-technology-268l" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;An introduction to cryptography in distributed ledger technology&lt;/h2&gt;
      &lt;h3&gt;Waylon Jepsen ・ Jul 8 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#security&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cryptography&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#distributedsystems&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#blockchain&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>How to create an HTML generator with JavaScript?</title>
      <author>murtuza</author>
      <pubDate>Tue, 13 Jul 2021 15:17:54 +0000</pubDate>
      <link>https://dev.to/murtuzaalisurti/how-to-create-an-html-generator-with-javascript-gdg</link>
      <guid>https://dev.to/murtuzaalisurti/how-to-create-an-html-generator-with-javascript-gdg</guid>
      <description>&lt;p&gt;Ever tired of writing multiple lines of similar HTML? If you are, then you can automate the process by using template literals in JavaScript. Let's see how we can do that.&lt;/p&gt;

&lt;p&gt;Let's say you have multiple boxes which are actually hyperlinks and you want to create multiple of them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GhrAFk1G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u01jbnqch3x47e2dknjl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GhrAFk1G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u01jbnqch3x47e2dknjl.jpg" alt="HTML Hyperlinks"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One way is to just copy and paste the HTML code and make changes to a particular section of the code. This approach can work for small projects but if your project is big enough, then it can become a mess.&lt;/p&gt;

&lt;p&gt;Alternatively, you can create your own HTML generator using &lt;code&gt;template literals&lt;/code&gt; in JavaScript which will generate HTML code for you!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#template-literals-in-javascript"&gt;
  &lt;/a&gt;
  Template Literals in JavaScript
&lt;/h2&gt;

&lt;p&gt;Template literals in JavaScript are nothing but string literals which allow you to embed various expressions into the string. They are enclosed in backticks. For embedding an expression the syntax goes like this,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`first part of the string &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;expression&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; second part of the string`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's create the HTML generator.&lt;/p&gt;

&lt;p&gt;Create respective input fields for link URL, Title &amp;amp; a Tag. You can add your own input fields also if you want to.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"contains"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Title&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"title"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;URL&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"url"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;label&lt;/span&gt; &lt;span class="na"&gt;for=&lt;/span&gt;&lt;span class="s"&gt;"tag"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"tag"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Tag&lt;span class="nt"&gt;&amp;lt;/label&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"tag"&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"tag"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Generate&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create a &lt;code&gt;textarea&lt;/code&gt; field in which the resultant code will be displayed as well as create a button to copy the code to the clipboard.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"result"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"result_text"&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;"5"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"copy_btn"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"fas fa-clipboard"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MRkpED1Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewjgd4wau9sythc3syem.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MRkpED1Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ewjgd4wau9sythc3syem.jpg" alt="HTML Generator User Interface"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h2&gt;

&lt;p&gt;We will create a function named &lt;code&gt;generate()&lt;/code&gt;. This function has three parameters — &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;tag&lt;/code&gt;. It will take in the value of the &lt;code&gt;title&lt;/code&gt;, the &lt;code&gt;url&lt;/code&gt;, and the &lt;code&gt;tag&lt;/code&gt; that we have input in the field as arguments.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="c1"&gt;//code&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Further, we will use template literals and we will embed the &lt;code&gt;title&lt;/code&gt;, the &lt;code&gt;url&lt;/code&gt; &amp;amp; the &lt;code&gt;tag&lt;/code&gt; into the string. Then, set the value of the &lt;code&gt;result&lt;/code&gt; field to the string that is generated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#tag&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.result_text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;final_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;a href="&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt;&amp;lt;div class="link"&amp;gt;&amp;lt;div class="banner"&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/div&amp;gt;&amp;lt;/a&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;final_string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All of this will take place after the user clicks the generate button and so let's add an eventListener to it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;submit_btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;#submit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;submit_btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order to copy the code from the &lt;code&gt;textarea&lt;/code&gt;, we can define a function called &lt;code&gt;copy()&lt;/code&gt; and then call the function when the user clicks on the 'copy to clipboard' button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;copy_btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.copy_btn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;copy_btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;execCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;copy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here's a quick demo:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/seekertruth/embed/OJmWMpK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Now, you can copy the code into your main project.&lt;br&gt;
This is just one of the use cases of template literals. You can do a lot of thins by using template literals in JavaScript. They make your life as a JavaScript developer easy.&lt;/p&gt;

&lt;p&gt;Signing off.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Should You Invent a New Query Language? (Probably Not)
</title>
      <author>Arctype Team</author>
      <pubDate>Tue, 13 Jul 2021 15:01:13 +0000</pubDate>
      <link>https://dev.to/arctype/should-you-invent-a-new-query-language-probably-not-2mof</link>
      <guid>https://dev.to/arctype/should-you-invent-a-new-query-language-probably-not-2mof</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---zHtcJL1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626187654704/_O66zLi8V.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---zHtcJL1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626187654704/_O66zLi8V.png" alt="Featured .png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"What's worse than data silos? Data silos that invent their own query language." - Erik Bernhardsson&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In his infamous and widely discussed blog post named '&lt;a href="https://erikbern.com/2018/08/30/i-dont-want-to-learn-your-garbage-query-language.html"&gt;I don't want to learn your garbage query language&lt;/a&gt;,' &lt;a href="https://erikbern.com/"&gt;Erik Bernhardsson&lt;/a&gt; expressed what so many other Data Engineers and Analysts related with so strongly. Namely, that he "really [doesn't] like software that invents its own query language" and that he "just [wants his] SQL back.&lt;/p&gt;

&lt;p&gt;The fairly short-yet-passionate rant summarized the almost universal experience that technologies that require their own language often produce a whole new different set of complexities.&lt;/p&gt;

&lt;p&gt;There has been an explosion of different types of databases in the last 10 years (Just take a look at the sheer number of NoSQL database types in &lt;a href="https://dev.to__GHOST_URL__/newsql/"&gt;my last article&lt;/a&gt;), and increased specialization is forcing Data Engineers and Analysts to learn an even greater number of new programming languages.&lt;/p&gt;

&lt;p&gt;Each of them has its own syntax and specific weirdness, and while ORMs sometimes help, they often make things even more difficult. &lt;/p&gt;

&lt;p&gt;That being said, new Query Languages are often necessary (like in the case of NoSQL databases). This begs the question, how can we tell whether a new language actually adds more value than problems it creates? To answer this, we need to take a deep look at what causes all this conflict.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-are-there-so-many-query-languages"&gt;
  &lt;/a&gt;
  Why are there so many Query Languages?
&lt;/h2&gt;

&lt;p&gt;There are a lot of Query Languages out there. So many that even the &lt;a href="https://github.com/AnanthaRajuC/List-of-programming-language-lists/blob/master/Query%20language.md"&gt;most comprehensive lists&lt;/a&gt; leave out many important players. I wouldn't even want to attempt to gather a list like this because it seems new ones are added every minute. So let's take a look at what causes this? &lt;/p&gt;

&lt;p&gt;In short, there are so many different Query Languages because there are so many different things to query. In addition, data often has to be stored in various models with varying kinds of schemas and varying degrees of separation between physical and logical schema. For example, data stored in a relational database requires different technology and syntax than data stored in JSON files.&lt;/p&gt;

&lt;p&gt;An early hierarchical or network database query language will look quite different from a relational query language. In the early days of databases, one had to explicitly navigate the paths between records. That also explains why the last decade has been particularly "fruitful" due to new challenges created by NoSQL. Just take a look at the number of different NoSQL categories in &lt;a href="https://www.coursera.org/"&gt;my last blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Even within relational databases, different vendors want to offer special features and functions through their own SQL dialects (T-SQL, PostgreSQL, etc.). &lt;/p&gt;

&lt;p&gt;All of this adds up quickly, and in retrospect, it was inevitable that we would end up with a myriad of options to store and query data. Overall that is actually an excellent thing because that way, there is constant improvement through competition.&lt;/p&gt;

&lt;p&gt;However, development slowdowns due to too many different query languages persist, so Object-Relational-Mappers (ORMs) were invented. As we are about to see, though, they also often complicate things even more. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-orms-dont-always-help"&gt;
  &lt;/a&gt;
  Why ORMs Don't Always Help
&lt;/h2&gt;

&lt;p&gt;Let's first take a deeper look at what ORMs are and why you might want to use them.&lt;/p&gt;

&lt;p&gt;Object-Relational-Mapping is a process often used in computer science to convert data between incompatible &lt;a href="https://en.wikipedia.org/wiki/Type_system"&gt;type systems&lt;/a&gt; through &lt;a href="https://en.wikipedia.org/wiki/Object-oriented_programming"&gt;object-oriented programming languages&lt;/a&gt;. The goal is to create an abstract database layer of 'database objects' that can then be queried using the programming language of your choice. &lt;/p&gt;

&lt;p&gt;Long story short, it allows you to interact with your database using your language of choice &lt;strong&gt;instead&lt;/strong&gt; of that database's Query Language. This is best explained through a quick example using SQL:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;SELECT * FROM users WHERE name = 'Jane Doe';&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Object-relational mapping is the idea of writing queries like the one above and much more complicated ones, using the object-oriented paradigm of your preferred programming language. That is where ORMs come in. ORMs libraries that implement this technique in different programming languages. For example, using a JavaScript ORM, the above query would now look something like this:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var orm = require('generic-orm-library');var user = orm("users").where({ name: 'Jane Doe' });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;There are, of course, plenty of good things that can come from using an ORM:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;No SQL&lt;/strong&gt;: If you've read &lt;a href="https://dev.to__GHOST_URL__/reimagining-the-sql-curriculum/"&gt;my blog post about learning SQL&lt;/a&gt; but still aren't convinced that you should learn SQL, then ORMs allow you to use a programming language of your choice.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;No Dialects&lt;/strong&gt;: ORMs abstract away the database system so that switching from MySQL to PostgreSQL, for example, is much easier.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Extra Features&lt;/strong&gt;: Some ORMs have advanced features such as support for transactions, connection pooling, migrations, seeds,  and streams that can be useful in some cases.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Performance&lt;/strong&gt;: If you really aren't any good at SQL, then an  ORM will perform better than you for some queries.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;As you probably already deduced from the title of this section, there are also plenty of cons:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Performance&lt;/strong&gt;: If you are a master at SQL, you can probably get more performant queries by writing them yourself.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Learning&lt;/strong&gt;: ORMs don't work like normal Query Languages, so if that's what you are used to, there is overhead involved in learning how to use them.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Too Many&lt;/strong&gt;: The learning problem only worsens when you consider just &lt;a href="https://en.wikipedia.org/wiki/List_of_object%E2%80%93relational_mapping_software"&gt;how many&lt;/a&gt; different ORMs there are, and each has its own learning process.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Configuration&lt;/strong&gt;: The initial configuration of an ORM can take a long time and be a pain.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Black Box&lt;/strong&gt;: The layer of abstraction that ORMs provide can hinder getting at the real problem of a query or database issue.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To summarize, ORM's alleged benefit is that they cut down development time by adding an abstraction layer, but it often produces an even bigger headache. Instead of using SQL, you now have to scroll back and forth in some ORM documentation to determine how to write the most basic queries. Debugging can also be an issue because sometimes an ORM translates a query "into some monstrosity that joins 17 tables using a full table scan",  and you end up "with bloated higher-level data classes rather than easy to understand tuples or dicts that contain the data in a dumb simple format that is trivial to introspect."&lt;/p&gt;

&lt;p&gt;So, ORMs can be useful but don't necessarily help with the underlying problem—there are already too many query languages. So what can be done? Should we follow Erik's advice and put a "30-year moratorium on inventing new query languages."&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-should-you-invent-a-new-query-language"&gt;
  &lt;/a&gt;
  When Should You Invent a New Query Language?
&lt;/h2&gt;

&lt;p&gt;While Erik's call for a moratorium was certainly more of a joke than a serious solution (I think), it did express the sentiment that we need to stop adding so many query languages so quickly pretty well. &lt;/p&gt;

&lt;p&gt;It's certainly appreciated that many of these are necessary to deal with new classes of data, new ways that data is stored, or simply too much new data, but how do we know which ones were necessary and which ones weren't? &lt;/p&gt;

&lt;p&gt;This is why I suggest a few simple guiding questions and rules for any new developer who might feel the urge to add to the query language ecosystem:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-my-language-just-another-dialect"&gt;
  &lt;/a&gt;
  Is My Language Just Another Dialect?
&lt;/h3&gt;

&lt;p&gt;This one seems too obvious, but even big organizations like Oracle and Microsoft couldn't quite follow this rule, resulting in dialects like T-SQL and PL/SQL. &lt;/p&gt;

&lt;p&gt;At this point, almost every database has its own ways of defining stored procedures, functions, triggers, and differences that are even more pronounced than for queries and data definitions. &lt;/p&gt;

&lt;p&gt;For example, the scripting language for Sybase and SQL Server is called T-SQL. Strictly speaking, SQL Server is the database, and T-SQL is the language, but the two are often used interchangeably when referring to code.&lt;/p&gt;

&lt;p&gt;MySQL's scripting language is quite different from T-SQL, as can be seen in the documentation in the &lt;a href="https://dev.mysql.com/doc/refman/5.7/en/language-structure.html"&gt;reference&lt;/a&gt; manual. The first major difference you will probably encounter is that &lt;code&gt;IF&lt;/code&gt; is only allowed in programming blocks. The second will be the delimiter, then the word &lt;code&gt;go&lt;/code&gt;, and the differences multiply from there. &lt;/p&gt;

&lt;p&gt;So please don't create another SQL dialect. That doesn't mean that we shouldn't iterate and improve on SQL, but don't try to do something unnecessarily fancy that nobody asked for because no one will bother learning it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#does-my-language-solve-anything-new"&gt;
  &lt;/a&gt;
  Does My Language Solve Anything New?
&lt;/h3&gt;

&lt;p&gt;This rule is very similar to the first one, only more broadly applicable. There are many databases and types of data where standard SQL can't get the job done. Graph Databases are a good example of this because, in their case, both the storage and languages were designed specifically to do things that relational databases simply couldn't. &lt;/p&gt;

&lt;p&gt;That doesn't mean that you should add to the list of well-established Graph Query languages like &lt;strong&gt;&lt;a href="https://www.opencypher.org/about"&gt;Cypher&lt;/a&gt;&lt;/strong&gt;,which is already extremely popular. It was created by Neo4j for use with their own graph database and eventually open-sourced as a separate project called &lt;a href="https://www.opencypher.org/"&gt;openCypher&lt;/a&gt;, which allows any database to implement the same language. It's very visual—using ASCII characters to make shapes for clean and expressive queries.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;MATCH (d:Database)-[:USES]-&amp;gt;(Cypher)-[:QUERIES]-&amp;gt;(:Model:Graph)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Another widely used graph query language is &lt;strong&gt;SPARQL&lt;/strong&gt;, which looks like SQL and was created by the W3C to query RDF graph models. It’s not as common as the other two languages but has unique features because of the subject-predicate-object data model. It can even be used with SQL databases that have tables modeled after RDF structures. Some graph databases also support their own languages like ArangoDB, DGraph, TigerGraph, etc.&lt;/p&gt;

&lt;p&gt;The most common graph query language at the moment would be &lt;a href="http://tinkerpop.apache.org/gremlin.html"&gt;&lt;strong&gt;Gremlin&lt;/strong&gt;&lt;/a&gt;, which is part of the &lt;a href="http://tinkerpop.apache.org/"&gt;Apache TinkePop&lt;/a&gt; graph computing framework. It is simple to write, easy to learn, and widely supported by many graph databases and even non-graph databases that can emulate graph queries. On the other hand, it can be verbose for long queries but generally works well for both OLTP and analysis work.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;g.V().has("lang","gremlin").out("supported_by").values("db_name")&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;That being said, the time is ripe for an international standard graph query language. Industry vendors, including Neo4j and TigerGraph, have called this out, and I definitely agree. As graphs continue to see widespread adoption, we have certainly reached a tipping point for this industry, and at this point, you'd probably be doing more harm than good by adding another language to the mix.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#is-my-language-easy-to-use"&gt;
  &lt;/a&gt;
  Is My Language Easy to Use?
&lt;/h3&gt;

&lt;p&gt;If you have made it this far and your language solves a novel use case that no one has worked on before, you might actually have a point by making your own query language—this is why the last question focuses on how you should go about it that. &lt;/p&gt;

&lt;p&gt;Ask yourself, "How long will it take for others to learn my new language?". If your answer is "a couple of weeks," then you should start dedicating a lot of time to simplify your syntax as much as possible. &lt;/p&gt;

&lt;p&gt;This doesn't just mean creating tutorials and documentation, which should be self-explanatory. Instead, this means that you will have to make a serious effort to provide processes and abstractions that let a novice pick up your language and solve your main use case in a matter of hours, if not minutes.&lt;/p&gt;

&lt;p&gt;If you don't think you can do that, your language probably isn't ready yet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;SQL is one of the most ubiquitous programming languages today, but countless others deserve recognition as well. These languages are often tied to specific technologies that solve use cases that relational databases simply can't. &lt;/p&gt;

&lt;p&gt;However, this has lead to an overproduction of query languages, which has significantly slowed down development times due to steep learning curves. ORMs were introduced to solve that problem but ended up complicating matters even more.&lt;/p&gt;

&lt;p&gt;That is why smart developers should be wary of introducing yet another query language to the mix. To guide this decision, I laid out some key questions they should be asking themselves to take a good look at the existing ecosphere, use cases, and simplicity.&lt;/p&gt;

&lt;p&gt;That being said, nothing quite beats working in good ole' SQL, especially when you have access to a world-class &lt;strong&gt;SQL editor&lt;/strong&gt; like Arctype.&lt;/p&gt;

&lt;p&gt;Arctype has built a collaborative SQL editor that allows you to share databases, queries, and dashboards with anyone easily. Join our growing community and &lt;a href="http://www.arctype.com/downloads"&gt;try out Arctype today&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>database</category>
      <category>ordbms</category>
      <category>softwaredevelopment</category>
    </item>
    <item>
      <title>A Journey of making our Dashboard Close to Perfect.</title>
      <author>Prashant Ghildiyal</author>
      <pubDate>Tue, 13 Jul 2021 14:59:20 +0000</pubDate>
      <link>https://dev.to/pghildiyal/a-journey-of-making-our-dashboard-close-to-perfect-39fh</link>
      <guid>https://dev.to/pghildiyal/a-journey-of-making-our-dashboard-close-to-perfect-39fh</guid>
      <description>&lt;p&gt;You can check out our dashboard and Opensource repo here:&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/devtron-labs"&gt;
        devtron-labs
      &lt;/a&gt; / &lt;a href="https://github.com/devtron-labs/devtron"&gt;
        devtron
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Software Delivery Workflow For Kubernetes
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/devtron-labs/devtron/main/./assets/devtron-logo.png"&gt;&lt;img width="200" height="156" src="https://res.cloudinary.com/practicaldev/image/fetch/s--geHMJKVv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/devtron-labs/devtron/main/./assets/devtron-logo.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Devtron is an open source software delivery workflow for kubernetes written in go
&lt;br&gt;
&lt;a href="https://docs.devtron.ai/" rel="nofollow"&gt;&lt;strong&gt;Explore documentation »&lt;/strong&gt;&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;
&lt;a href="https://devtron.ai/" rel="nofollow"&gt;Website&lt;/a&gt;
·
&lt;a href="https://devtron.ai/blog/" rel="nofollow"&gt;Blog&lt;/a&gt;
·
&lt;a href="https://discord.gg/jsRG5qx2gp" rel="nofollow"&gt;Join Discord&lt;/a&gt;
·
&lt;a href="https://twitter.com/DevtronL" rel="nofollow"&gt;Twitter&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;a href="https://discord.gg/jsRG5qx2gp" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/49150eb0ec107d15b5dd28d7377dfa805fe47ef61c1180a6ce3c9f482cb28d40/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a6f696e25323075732532306f6e2d446973636f72642d6530313536332e737667" alt="Join Discord"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/badge/github.com/devtron-labs/devtron" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d68a0a3471479dff6e5155220bd1e304b6d6405d281bbc54d5d559f78fa794da/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f64657674726f6e2d6c6162732f64657674726f6e" alt="Go Report Card"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/devtron-labs/devtron/main/./LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/2a2157c971b7ae1deb8eb095799440551c33dcf61ea3d965d86b496a5a65df55/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667" alt="License"&gt;&lt;/a&gt;
&lt;a href="https://bestpractices.coreinfrastructure.org/projects/4411" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/649d033dd2509020bf49e2775ffb7b18c6fcc80b4263d7050707540cf4357aa7/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f343431312f6261646765" alt="CII Best Practices"&gt;&lt;/a&gt;
&lt;a href="http://golang.org" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b530ddfe089b6cab64711fdab82afaa28b0e1a833b26bdb15082e261850d22e6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4d616465253230776974682d476f2d3166343235662e737667" alt="made-with-Go"&gt;&lt;/a&gt;
&lt;a href="http://devtron.ai/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/dc954b1e6af0e39a8148a4908ac9a4e49e4f17340977c9c88173e3788af10eb6/68747470733a2f2f696d672e736869656c64732e696f2f776562736974652d75702d646f776e2d677265656e2d7265642f687474702f736869656c64732e696f2e737667" alt="Website devtron.ai"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
📖 Menu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#bulb-why-devtron"&gt;Why Devtron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#tada-features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#rocket-getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.devtron.ai/" rel="nofollow"&gt;Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#memo-compatibility-notes"&gt;Compatibility Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#busts_in_silhouette-community"&gt;Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#handshake-contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#beetle-vulnerability-reporting"&gt;Vulnerability Reporting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/devtron-labs/devtron#bookmark-license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
💡 Why Devtron?&lt;/h2&gt;
&lt;p&gt;It is designed as a self-serve platform for operationalizing and maintaining applications (AppOps) on kubernetes in a developer friendly way
&lt;br&gt;
&lt;br&gt;
&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/devtron-labs/devtron/main/./assets/preview.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7PECaETA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/devtron-labs/devtron/main/./assets/preview.gif"&gt;&lt;/a&gt;
&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;
🎉 Features&lt;/h2&gt;


 &lt;b&gt; Zero code software delivery workflow &lt;/b&gt;
  
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Workflow which understands the domain of &lt;strong&gt;kubernetes, testing, CD, SecOps&lt;/strong&gt; so that you dont have to write scripts&lt;/li&gt;
&lt;li&gt;Reusable and composable components so that workflows are easy to contruct and reason through&lt;/li&gt;
&lt;/ul&gt;


 &lt;b&gt; Multi cloud deployment &lt;/b&gt;
 &lt;br&gt; 
&lt;ul&gt;
&lt;li&gt;Deploy to multiple kubernetes cluster&lt;/li&gt;
&lt;/ul&gt;


  &lt;b&gt; Easy dev-sec-ops integration &lt;/b&gt; 
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;Multi level security policy at global, cluster, environment and application for efficient hierarchical policy management&lt;/li&gt;
&lt;li&gt;Behavior driven security policy&lt;/li&gt;
&lt;li&gt;Define policies and exception for kubernetes resources&lt;/li&gt;
&lt;li&gt;Define policies for events for faster resolution&lt;/li&gt;
&lt;/ul&gt;


  &lt;b&gt; Application debugging dashboard &lt;/b&gt; 
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;One place…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/devtron-labs/devtron"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h6&gt;
  &lt;a href="#this-post-was-originally-published-on-the-devtron-website-by-our-design-lead-utkarsh"&gt;
  &lt;/a&gt;
  This post was originally published on the &lt;a href="https://devtron.ai/"&gt;Devtron&lt;/a&gt; website by our design lead, Utkarsh.
&lt;/h6&gt;

&lt;p&gt;I was part of the leadership team of a fast-growing company and it was in May 2017 when we decided that we needed to become a better agile team. We realised that we wanted to become better at estimations and at reacting/taking action on feedback as we were growing at a very fast pace.&lt;/p&gt;

&lt;p&gt;As a team, we spent considerable time reading practices adopted by other companies and then sitting in the room with a whiteboard and having passionate discussions on what would work best for us.&lt;/p&gt;

&lt;p&gt;We knew that there was no ‘best method’ or right way to go about everything, therefore, we experimented with different approaches,  but always found it difficult to quantify the effectiveness of those changes. It was always about the gut feel, and what the majority of the team felt.&lt;/p&gt;

&lt;p&gt;I was particularly happy when we decided to explore the science around the impact of agile practices at Devtron. Now, people fortify their gut feeling with data. But that was only half the battle, we were yet to figure out how to present it in a way that meaningful insights could be derived out of it.&lt;/p&gt;

&lt;p&gt;In this blog, we are going to share the journey of evolution of this product, the initial failure and the way forward, , how we evolved our product to what it is today. The journey is still ongoing,  and would love to have your feedback and thoughts on how we can make it better.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#the-science-behind-the-metrics"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The science behind the metrics&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As the whole reason to adopt agile is to do more frequent and stable deployments, it was a no brainer to have the following metrics:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Deployment Frequency:&lt;/strong&gt; How frequently are you deploying code.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Change Failure Rate:&lt;/strong&gt; How often deployments fail.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mean Time to Recovery(MTTR):&lt;/strong&gt; How fast can you recover from failures.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Apart from the above metrics which measure the current performance of the team, we also decided to introduce two other metrics which aid in improving the above metrics.&lt;/p&gt;

&lt;p&gt;In order to have higher deployment frequency and less failure rate the surface area of the release should be as small as possible and therefore we introduced:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Lead Time:&lt;/strong&gt; Time gap between the oldest non-deployed commit in the release and the release date. This should be small because older commits may result in merge issues and incomplete testing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Deployment Size:&lt;/strong&gt; It is the number of lines changed between the release in question and the previous release. This number should again be as small as possible as smaller change means better testing and fewer bugs. It is based on the principle – less code, less bugs, no code, no bugs.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#the-first-cut"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The First Cut&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;We launched a version of the Deployment Metrics a few months back. This is how it looked in the first version. Let’s see what we did and what went wrong.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FG8izcv0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q0qbkwgeyjdap3bxpjmo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FG8izcv0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q0qbkwgeyjdap3bxpjmo.png" alt="The First version of Deployment Metrics of Devtron Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We had put cards on the top which mentioned cycle time and deployment size for the latest deployment, time since the failure and time it took to recover from failure.&lt;/p&gt;

&lt;p&gt;Graph below shows different data points related to each release. X – axis denoted time, Y – axis could be switched between cycle time and lead time. Ridges denoted number of deployments, circle size denoted size of deployment and green colour denoted successful deployment while red denoted failure.&lt;/p&gt;

&lt;p&gt;Hover state showed this information in a tooltip. Users could view these metrics for a set of relative time ranges, i.e; last 15 days, 30 days upto 6 months.&lt;/p&gt;

&lt;p&gt;We thought that we had done a good job of putting all data contextually so as to help developers make informed decisions,  and that it would see good uptake from developers who want to adopt better DevOps practices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outcome-v1"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Outcome (v1)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Over a period of a few months, we waited for users’ feedback on this page. What happened next was any product designer’s worst nightmare. It appeared that almost none of our users were engaging with this page. Moreover, we didn’t find much adoption internally as well. This meant that the developers at Devtron themselves were not  able to leverage it to improve their metrics.&lt;/p&gt;

&lt;p&gt;In fact, I clearly remember in one of the meetings around May 2020 when one of the developers threw up his hand and said he was exasperated trying to find whether our process change has been able to mitigate the impact of remote working. That is when we decided to step back and take a closer look at the reasons why this might be happening and how we can make these metrics more usable.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learnings"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Learnings&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;We did an intensive half-day session with a focus of tearing down the existing feature and design. Every developer in the company communicated why they were not using it. We realised our biggest mistake was to design this page without looking at the sample data.&lt;/p&gt;

&lt;p&gt;The biggest problem was posed by the huge variation in data points.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Cycle time may vary from a few days for regular releases to a few hours in case of critical bug fixes, the same is true for lead time.&lt;/li&gt;
&lt;li&gt;Deployment size could vary from 2-3 lines to fix a bug to hundreds and thousands of lines for big feature releases.
This led to huge variations in the ridge lines with many deployments clustered together which were not differentiable visually.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All in all, it made these charts totally unusable. Then we faced other minor problems: :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Although these metrics were important in the software delivery world, most developers barely knew what these metrics meant&lt;/li&gt;
&lt;li&gt;Data points were juxtaposed in the graph for better correlation but had very high cognitive difficulty&lt;/li&gt;
&lt;li&gt;Hover state gave all details of deployment, but it was difficult to compare metrics across deployments&lt;/li&gt;
&lt;li&gt;Calendar supported relative time only i.e; last 15 days, 30 days…&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#second-cut"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Second Cut&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Armed with the knowledge of challenges in the usability of metrics and data visualisation we decided to rethink it to solve this problem.&lt;/p&gt;

&lt;p&gt;Though we use the &lt;code&gt;Jobs to be done&lt;/code&gt; framework to identify the desired outcome, this time we added another step which we have found particularly helpful in data intensive applications – &lt;code&gt;Questions to be answered&lt;/code&gt;. (We didn't know if such frameworks already existed but we have been using this homegrown framework internally for sometime now).&lt;/p&gt;

&lt;p&gt;Hence, we decided to look at the metrics from a user’s lens, the goal this time was to identify key questions the user wants to be answered through this data so that he/she can make an informed decision.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#questions-to-be-answered-qtba"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Questions to be Answered (QTBA)&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;We framed user goals in the form of questions and statements so that we could think in terms of answering these questions while redesigning.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How has the performance changed over time?&lt;/li&gt;
&lt;li&gt;How has the performance changed after the process was modified?&lt;/li&gt;
&lt;li&gt;How do I quickly figure out areas for improvement?&lt;/li&gt;
&lt;li&gt;How to correlate team behaviour changes with process modification for better Root Cause Analysis (RCA).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#the-redesign"&gt;
  &lt;/a&gt;
  &lt;strong&gt;The Redesign&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;We redesigned the page from scratch in the pursuit of answering the above questions and some more. Take a look at it yourself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8TsAu2VG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vt2la73217cy5kafuse8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8TsAu2VG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vt2la73217cy5kafuse8.png" alt="Redesigned Deployment Metrics of Devtron Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this design as you would see, we made fundamental changes to the previous design.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-easy-to-consume-metrics"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Use easy to consume metrics&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Cycle time and deployments per day are related metrics, they are inversely related to be precise. Multiple deployments can happen in a day and each one of them will have a different cycle time. With dates as x-axis cycle times of different releases on the same date overlap with each other making them indiscernible.&lt;/p&gt;

&lt;p&gt;Therefore, instead of cycle time, we are now charting the number of deployments per day as it is easier to understand trends over time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chart-is-to-see-trends-not-for-rca"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Chart is to see trends not for RCA&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;In the previous approach, all data points were juxtaposed in one chart so that users could find the root cause of the behaviour. But we realised that it was creating cognitive overload. &lt;/p&gt;

&lt;p&gt;Therefore in the newer version we decided to use charts only for anomaly detection and delegated RCA responsibilities to tabular data format. Instead of all data points juxtaposed in one chart, we placed all three metrics next to each other to highlight any anomalies. &lt;/p&gt;

&lt;p&gt;Eg. In case of higher deployment frequency, you can find out if it is because of bug fixes or old pending features were deployed (higher deployment with increasing lead time).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-obvious-to-you-may-not-be-obvious-to-the-user"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What’s obvious to you may not be obvious to the user&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Each metric is now supported by additional information to make the metric easily understandable and usable.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FJ3gcWu6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/noie28dudrven5cbk4b5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FJ3gcWu6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/noie28dudrven5cbk4b5.png" alt="Graphical View of Devtron Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Example, for Deployment Frequency we have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Meaning:&lt;/strong&gt; A tooltip explaining what the metric means aimed to familiarise users with various metrics.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Visualisation:&lt;/strong&gt; depicting trends of the metric over a given period.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Benchmarking:&lt;/strong&gt; This was an important addition aimed to give a quick understanding of where the metric performance stands in comparison to the standard industry benchmark. Each benchmark was divided into four categories Elite, High, Medium, Low.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On clicking the benchmark, it opens a modal which further explains the metrics and the various benchmark categories for the metric.&lt;/p&gt;

&lt;p&gt;We also realised that, though the number of deployments is the right metrics, deployment frequency is difficult to understand and hence we added cycle time information along with it for better understanding and correlation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QNRBnB8I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3s9lbcj2i5675nzsjsm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QNRBnB8I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e3s9lbcj2i5675nzsjsm.png" alt="Modal: Deployment Frequency and benchmark detail of a benchmark on Devtron Dashboard"&gt;&lt;/a&gt;&lt;br&gt;
Hovering over the graph further shows details for each bar.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wImhPSuG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l02xm03gcjf4o71t2nfl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wImhPSuG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l02xm03gcjf4o71t2nfl.png" alt="Hovering over a graph shows details for each bar"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example, hovering over the above bar shows 13 deployments (11 successful, 2 Failed) in the week of July 17 – Jul 24.&lt;/p&gt;

&lt;p&gt;Clicking on each bar further opens a modal (to drill down) showing the deployments related to this particular bar. The modal additionally shows other data points (Cycle time, Lead time, Deployment size, and Recovery time if the deployment had failed) for easier correlation between various data points.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kOfeaTl_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ba7c93mjhsz89u5cpeem.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kOfeaTl_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ba7c93mjhsz89u5cpeem.png" alt="Clicking on a bar opens this modal, which helps to drill down the visual data"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#tabular-data-better-for-rca"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Tabular data better for RCA&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;Below the graphs, we added a deployments table showing all deployments of the application for the selected environment in the specified time period. The deployments lists can be filtered by successful and failed deployments based on the focus area of the user.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WtPNOn2_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3vcubc053irll105p5ux.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WtPNOn2_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3vcubc053irll105p5ux.png" alt="Deployments Table: Shows all deployments and corresponding metrics for each deployment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This solves the problem we had with hover, wherein you had to remember previous data points to compare. Now data is visible in tabular format and therefore it’s easier to compare changes across multiple releases.&lt;/p&gt;

&lt;p&gt;Also, we went back to to using cycle time instead of number of deployments per day as this is a non aggregated view of data.&lt;/p&gt;

&lt;p&gt;Sorting is provided on every column so that it becomes easier for you to find anomalies for e.g. largest  deployments, highest recovery time, highest lead time or cycle time, etc. &lt;/p&gt;

&lt;p&gt;You can also see the details of a deployment by clicking on the deployment date.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--21TTq5og--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbcrflpsawk7luxto8qf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--21TTq5og--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wbcrflpsawk7luxto8qf.png" alt="Deployment History: Shows details of a selected deployment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We believe that through this initial step that we have taken, teams who want to keep challenging themselves will be able to take data backed decisions and will be able to iterate quickly and confidently.&lt;/p&gt;

&lt;p&gt;Let us know what you think about the design and our redesign process in the comments below. Also, if you have suggestions related to this feature do reach out to us and you can &lt;a href="https://github.com/devtron-labs/devtron"&gt;contribute&lt;/a&gt; as well.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Do not design data visualisations just for the sake of it, make sure they answer the users’ questions&lt;/li&gt;
&lt;li&gt;Charts are best suited for trend analysis and anomaly detections&lt;/li&gt;
&lt;li&gt;Identifying a relevant graphical representation(bar graph, line/area chart among others) is a key starting point while working with data visualisation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you would like to know more about &lt;a href="https://youtu.be/FB5BI3Ef7uw?t=2185"&gt;UX design&lt;/a&gt; and Devtron, I made a walkthrough with Saiyam Pathak, Director at Civo. He is a well reputed YouTube influencer and has a great following in the commnity.  You can check it  out here:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/FB5BI3Ef7uw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>devops</category>
      <category>agile</category>
      <category>kubernetes</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Kubernetes for Dummies</title>
      <author>StevenMcGown</author>
      <pubDate>Tue, 13 Jul 2021 14:58:08 +0000</pubDate>
      <link>https://dev.to/stevenmcgown/kubernetes-for-dummies-5hmh</link>
      <guid>https://dev.to/stevenmcgown/kubernetes-for-dummies-5hmh</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j81_jFnM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtw4rwv0m4u30x3n1uwz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j81_jFnM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rtw4rwv0m4u30x3n1uwz.png" alt="k8slogo"&gt;&lt;/a&gt;&lt;br&gt;
After receiving much positive feedback on my post &lt;a href="https://dev.to/stevenmcgown/docker-for-dummies-2bff"&gt;“Docker for Dummies”&lt;/a&gt;, I wanted to create a post about Docker’s often-paired technology Kubernetes. If you haven’t read Docker for Dummies yet, please read it &lt;a href="https://dev.to/stevenmcgown/docker-for-dummies-2bff"&gt;here&lt;/a&gt;. Understanding a container service like Docker is fundamental to having a good grasp of Kubernetes. In fact, Kubernetes is capable of managing other container runtimes that will not be covered in this post. In this post I will explain what Kubernetes is, what problems it solves with containers, and how you can get started using it today.&lt;/p&gt;

&lt;h3&gt;An Introduction to Kubernetes&lt;/h3&gt;

&lt;p&gt;Kubernetes is derived from the Greek word κυβερνήτης (kubernḗtēs), which means pilot or helmsman. The Kubernetes logo of a ship's steering wheel further enforces the idea of piloting or managing, which is exactly what Kubernetes does with Docker containers. Kubernetes manages Docker containers in a variety of ways so it does not have to be done manually. Kubernetes is often referred to as K8s for simplicity because of the 8 letters in between “K” and “s”. I will be referring to Kubernetes as K8s from here on.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UsJQt7ek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqa8y75sy1i4d8etqnw0.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UsJQt7ek--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sqa8y75sy1i4d8etqnw0.jpeg" alt="k8scomic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Using K8s further abstracts machines, storage and networks from their physical implementation. As described in the last post, manually managing numerous containers can create similar issues to managing virtual machines. However, managing containers is especially important because cloud companies bill you for things like computing time and storage. You don’t want to have many running containers doing nothing for this reason. In addition, you also don’t want one container taking a network load it cannot handle by itself. K8s is designed to solve problems like these. &lt;/p&gt;

&lt;h3&gt;What services does K8s provide?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;b&gt;Service discovery and load balancing: &lt;/b&gt; K8s can locate a container using a DNS name or IP address and can distribute network traffic to other containers to stabilize deployments.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;Storage orchestration: &lt;/b&gt;You can automatically mount a storage system of your choice, whether it be locally, with a cloud provider such as AWS or GCP, or a network storage system such as NFS iSCSI, Gluster, Ceph, Cinder, or Flocker.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;Automated rollouts and rollbacks: &lt;/b&gt;You can define the desired state of deployed containers and change the state at a controlled rate. For example, you can automate Kubernetes to create new containers for your deployment, remove existing containers and adopt all their resources to the new container.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;Automatic bin packing: &lt;/b&gt;You can provide K8s with a cluster of nodes to run containerized tasks and specify how much CPU and memory each container needs. Kubernetes can automatically fit containers onto nodes to make the best use of resources.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;Self-healing: &lt;/b&gt;K8s restarts containers that fail, replaces containers, kills containers that don't respond to your user-defined health check, and doesn't advertise them to clients until they are ready to serve.&lt;/li&gt;
&lt;li&gt;
&lt;b&gt;Secret and configuration management: &lt;/b&gt;K8s lets you store sensitive information such as SSH keys, OAuth tokens and passwords. You can update these secrets and app configuration without rebuilding your container images and without exposing secrets in your stack configuration.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will only scratch the surface of these features in this post.&lt;/p&gt;

&lt;h3&gt;Some Definitions&lt;/h3&gt;

&lt;p&gt;It is important to understand these basic K8s concepts. Again, you should also be familiar with container services such as &lt;a href="https://dev.to/stevenmcgown/docker-for-dummies-2bff"&gt;Docker&lt;/a&gt; before continuing.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Pods&lt;/b&gt; are groups of one or more containers. Pods have shared storage and network resources which have specifications on how to run the containers. They are the smallest deployable units of computing that you can create and manage using K8s. Pods run on &lt;strong&gt;&lt;em&gt;nodes&lt;/em&gt;&lt;/strong&gt; together as a logical unit, so they all share the same IP address but can reach each other via localhost. Pods can also share storage but do not have to run on the same machine since containers can span multiple machines.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Nodes&lt;/b&gt; are physical or virtual machines that are not created by K8s. Typically, you would have several nodes in a cluster but you may have just one node in a learning or resource-limited environment. Nodes are created manually or with public cloud services such as AWS EC2 or OpenStack, so you need to have basic infrastructure laid down before you use K8s to deploy applications. From this point you can define virtual networks, storage, etc. One node can run multiple pods.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Deployments&lt;/b&gt; are a set of Pods. A Deployment ensures that a sufficient number of Pods are running at one time to service the app. Deployments can also shut down Pods that are not needed by looking at metrics such as CPU utilization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ypyT4rtg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bx4juywf3ih7dajimdrx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ypyT4rtg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bx4juywf3ih7dajimdrx.png" alt="kubernetesmodel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Let's Get Started Using K8s&lt;/h1&gt;

&lt;p&gt;To run K8s locally, I will be using Minikube and Kubectl. You can install the latest version of Minikube at &lt;a href="https://minikube.sigs.k8s.io/docs/start/"&gt;https://minikube.sigs.k8s.io/docs/start/&lt;/a&gt; and Kubectl at &lt;a href="https://kubernetes.io/docs/tasks/tools/"&gt;https://kubernetes.io/docs/tasks/tools/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please note that you must also have Docker installed to move forward with this tutorial.&lt;/p&gt;

&lt;h3&gt;1) Install prerequisites&lt;/h3&gt;

&lt;p&gt;Use &lt;code&gt;docker --version&lt;/code&gt; and &lt;code&gt;minikube version&lt;/code&gt; and &lt;code&gt;kubectl version&lt;/code&gt; Don't worry about the message stating the connection to localhost:8080 was refused, we will address this later. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eABpAped--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6zjri8deatfiq84551s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eABpAped--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o6zjri8deatfiq84551s.png" alt="version"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;2) Create nodes with Minikube&lt;/h3&gt;

&lt;p&gt;To create nodes, start up Minikube. For example, starting Minikube with 2 nodes:&lt;br&gt;
&lt;code&gt;minikube start --nodes=2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will take a while the first time around, so be patient. The first time I ran this it easily took 5-10 minutes to complete.&lt;/p&gt;

&lt;p&gt;We can check the status of our nodes using &lt;code&gt;minikube status&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VKy2UaQU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zab7bdmf42qddwdqq0r9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VKy2UaQU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zab7bdmf42qddwdqq0r9.png" alt="minikube status"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first node is the master node. You can see that it has the control plane, running host, kubelet, API, and kubeconfig configured. The second node is the work node.&lt;/p&gt;

&lt;p&gt;We can see that we have 2 containers running if we run:&lt;br&gt;
&lt;code&gt;docker ps&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1Ztb1twG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nghjs7gp9qdcv6s8hrkt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1Ztb1twG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nghjs7gp9qdcv6s8hrkt.png" alt="dockerps"&gt;&lt;/a&gt;&lt;br&gt;
This image shows the master node as ce3359246578 and the work node as 44697ff120e4  with relevant information for both nodes.&lt;/p&gt;

&lt;p&gt;We can view our nodes using:&lt;br&gt;
&lt;code&gt;kubectl get nodes&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8uv8Vg49--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7r7op750n5z6zeubn1x5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8uv8Vg49--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7r7op750n5z6zeubn1x5.png" alt="kubectlgetnodes"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By running &lt;code&gt;kubectl get pods -A&lt;/code&gt;, we can retrieve all pods in all namespaces.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc-1e2p_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gren5pqjatamdf9uiddz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc-1e2p_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gren5pqjatamdf9uiddz.png" alt="allpods"&gt;&lt;/a&gt;&lt;br&gt;
All of the these pods make up the control plane. For example, kube-apiserver-minikube is the API which is exposed for external and internal communications. So when we type kubectl, this is the API server that handles the request for it. &lt;/p&gt;

&lt;h3&gt;3) Creating a deployment&lt;/h3&gt;

&lt;p&gt;We can check the Pods by typing &lt;code&gt;kubectl get pod&lt;/code&gt;. At this point, you should not have any Pods and it will read “No resources found in default namespace”&lt;/p&gt;

&lt;p&gt;Pods are the smallest unit of the K8s cluster but in practice, you don’t create Pods but rather deployments. To create a kubernetes deployment, the usage is &lt;code&gt;kubectl create deployment &amp;lt;NAME&amp;gt; --image=&amp;lt;image&amp;gt;&lt;/code&gt;. For this particular deployment, we will be creating a nginx deployment:&lt;br&gt;
&lt;code&gt;kubectl create deployment nginx-depl --image=nginx&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For those who don't know, NGINX is an open-source webserver that is used to develop server-side applications.&lt;/p&gt;

&lt;p&gt;Now when we run &lt;code&gt;kubectl get deployment&lt;/code&gt; and &lt;code&gt;kubectl get pod&lt;/code&gt; we get the following output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a-JFEsfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek3bwq8hlplrg438d8e1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a-JFEsfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek3bwq8hlplrg438d8e1.png" alt="getpodanddeployment"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Our usage of &lt;code&gt;kubectl create deployment &amp;lt;NAME&amp;gt; --image=&amp;lt;image&amp;gt;&lt;/code&gt; is the most minimalistic way to create a deployment. The rest of the deployment uses default configuration. Between the deployment and Pod there is another layer which is automatically manages by K8s deployment called &lt;strong&gt;&lt;em&gt;ReplicaSet&lt;/em&gt;&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;The ReplicaSet specifies how to identify Pods that it can acquire, a number of replicas indicating how many Pods it should be maintaining, and a Pod template specifying the data of new Pods it should create to meet the number of replicas criteria. A ReplicaSet then fulfills its purpose by creating and deleting Pods as needed to reach the desired number. When a ReplicaSet needs to create new Pods, it uses its Pod template.&lt;/p&gt;

&lt;p&gt;We can view the ReplicaSet with &lt;code&gt;kubectl get replicaset&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7H7Cl7OO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2corya2vobwofgnlwrd0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7H7Cl7OO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2corya2vobwofgnlwrd0.png" alt="replicaset"&gt;&lt;/a&gt;&lt;br&gt;
We can see the ID for the ReplicaSet appended to the deployment name: 5c8bf76b5b. You may notice that the ReplicaSet ID is included in the ID for the Pod; like stated before the ReplicaSet is a layer that sits between the Deployment and the Pod.&lt;/p&gt;

&lt;p&gt;So all together, this is how the layers of Abstraction work. A Deployment manages a ReplicaSet,a ReplicaSet manages all the replicas of the Pod, and a Pod is an abstraction of a container. &lt;/p&gt;

&lt;h3&gt;4) Edit the Deployment&lt;/h3&gt;

&lt;p&gt;Edit your deployment using:&lt;br&gt;
&lt;code&gt;kubectl edit deployment nginx-depl&lt;/code&gt;&lt;br&gt;
This will show the auto-generated configuration file. Don't worry, you don't need to understand everything in the config file at this time. For the sake of this tutorial, we will only edit the image version which can be found somewhere in the middle of the file.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o-8p1Nb0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9afk2q9rl8g3fd1chs5e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o-8p1Nb0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9afk2q9rl8g3fd1chs5e.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
When you are finished editing, type :wq for write &amp;amp; quit. This will terminate the old image and create a new one.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nmzTVtRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0022ap79ut2ff86qi362.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nmzTVtRW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0022ap79ut2ff86qi362.png" alt="new"&gt;&lt;/a&gt;&lt;br&gt;
Upon invoking &lt;code&gt;kubectl get replicaset&lt;/code&gt;, we can see that the old one has no pods in it and a new one has been created as well.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ODabRBtH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0yq7n3moroyujwnqv6g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ODabRBtH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p0yq7n3moroyujwnqv6g.png" alt="newreplicaset"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;5) Debugging Pods&lt;/h3&gt;

&lt;p&gt;Another useful command is &lt;code&gt;kubectl logs &amp;lt;Pod Name&amp;gt;&lt;/code&gt;.&lt;br&gt;
If you run this on nginx, you will get nothing because nginx did not log anything. To demonstrate logs we can use MongoDB, which is a document database.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;kubectl create deployment mongo-depl --image=mongo&lt;/code&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OlrIizSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ib5w6v7kqlkzjrzt4ui1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OlrIizSM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ib5w6v7kqlkzjrzt4ui1.png" alt="created"&gt;&lt;/a&gt;&lt;br&gt;
Executing &lt;code&gt;kubectl logs mongo-depl-5fd6b7d4b4-vbf2t&lt;/code&gt; will produce concise logs and &lt;code&gt;kubectl describe pod mongo-depl-5fd6b7d4b4-vbf2t&lt;/code&gt; will produce a more verbose output.&lt;/p&gt;

&lt;p&gt;Logging will help with debugging if something goes wrong, and describe produces something a little more intelligible.&lt;/p&gt;

&lt;p&gt;Another useful command to see whats going on inside the Pod is &lt;code&gt;kubectl exec -it &amp;lt;Pod Name&amp;gt; -- bin/bash&lt;/code&gt;. (-it stands for interactive terminal)&lt;/p&gt;

&lt;p&gt;Suppose we want to use this to enter our MongoDB Pod:&lt;br&gt;
&lt;code&gt;kubectl exec -it mongo-depl-5fd6b7d4b4-vbf2t --bin/bash&lt;/code&gt; and if we type &lt;code&gt;ls&lt;/code&gt; we can see our directories. To exit this, simply type &lt;code&gt;exit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GS8_c4s0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ugafn2aw5h0yeyrcrcer.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GS8_c4s0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ugafn2aw5h0yeyrcrcer.png" alt="root"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;6) Deleting deployments&lt;/h3&gt;

&lt;p&gt;Deleting a Deployment will delete all of the Pods inside of the Deployment. For example, to delete the MongoDB Deployment type:&lt;br&gt;
&lt;code&gt;kubectl delete deployment mongo-depl&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;The following commands are useful, but you should be careful not to delete anything important&lt;/h1&gt;

&lt;p&gt;You can delete all the pods in a single namespace with this command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;kubectl delete --all pods --namespace=foo&lt;/code&gt;&lt;br&gt;
You can also delete all deployments in namespace which will delete all pods attached with the deployments corresponding to the namespace&lt;/p&gt;

&lt;p&gt;&lt;code&gt;kubectl delete --all deployments --namespace=foo&lt;/code&gt;&lt;br&gt;
You can delete all namespaces and every object in every namespace (but not un-namespaced objects, like nodes and some events) with this command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;kubectl delete --all namespaces&lt;/code&gt;&lt;br&gt;
However, the latter command is probably not something you want to do, since it will delete things in the kube-system namespace, which will make your cluster not usable.&lt;/p&gt;

&lt;p&gt;This command will delete all the namespaces except kube-system, which might be useful:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;for each in $(kubectl get ns -o jsonpath="{.items[*].metadata.name}" | grep -v kube-system);&lt;br&gt;
do&lt;br&gt;
  kubectl delete ns $each&lt;br&gt;
done&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;7) Apply configuration files&lt;/h3&gt;

&lt;p&gt;To apply a configuration file, we must first create one. In a directory you can refer back to, create a config file for the nginx Deployment.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;touch nginx-deployment.yaml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next, copy and paste this configuration to the file:&lt;br&gt;
&lt;b&gt;&lt;br&gt;
apiVersion: apps/v1&lt;br&gt;
kind: Deployment&lt;br&gt;
metadata:&lt;br&gt;
  name: myapp&lt;br&gt;
  labels:&lt;br&gt;
    app: nginx&lt;br&gt;
spec:&lt;br&gt;
  replicas: 1&lt;br&gt;
  selector:&lt;br&gt;
    matchLabels:&lt;br&gt;
      app: nginx&lt;br&gt;
  template:&lt;br&gt;
    metadata:&lt;br&gt;
      labels:&lt;br&gt;
        app: nginx&lt;br&gt;
    spec:&lt;br&gt;
      containers:&lt;br&gt;
      - name: nginx&lt;br&gt;
        image: nginx:1.16&lt;br&gt;
        ports:&lt;br&gt;
        - containerPort: 80&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Everything under "template" is the blueprint for the Pods. The first spec tag is specification for Deployments, and the second spec tag is specification for the Pods.&lt;/p&gt;

&lt;p&gt;This config file basically states we want one container inside of the pod with an NGINX image and we are going to bind that on port 80.&lt;/p&gt;

&lt;p&gt;When we use &lt;code&gt;kubectl apply -f nginx-deployment.yaml&lt;/code&gt;, it creates a deployment using the configuration. Lets say that in the config file we changed the Deployment to create 4 replicas instead of 1.&lt;/p&gt;

&lt;p&gt;After typing &lt;code&gt;kubectl get pod&lt;/code&gt; and &lt;code&gt;kubectl get deployment&lt;/code&gt; we get the following output:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0BN90d8G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xttnadsogw1zlycjkwy6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0BN90d8G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xttnadsogw1zlycjkwy6.png" alt="afterchange"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, K8s knows when to create or update deployment.&lt;/p&gt;

&lt;h1&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;By following this article you should gain a good understanding of the fundamentals of Kubernetes. In summary, we learned what Kubernetes is and what it can do at a high level. We learned what services K8s provides as well as some important definitions. We then used Docker, Minikube and Kubectl to explore CRUD commands for Deployments. Finally, we learned how to debug Pods and use configuration files for Deployments. It should be mentioned that you can also use kubectl for services, volumes, any other K8s component.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IPVp-9aU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kplzmfqfc03jnqvklv9m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IPVp-9aU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kplzmfqfc03jnqvklv9m.jpg" alt="k8scomic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;Final thoughts&lt;/h3&gt;

&lt;p&gt;I hope you enjoyed following along, and I hope you learned something! Kubernetes is a very useful tool for managing containers, so I'm glad you made it this far. You can always find much more thorough documentation at &lt;a href="https://kubernetes.io/docs/home/"&gt;https://kubernetes.io/docs/home/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you would like for me to expand on this lesson in the future, if you have any questions or if I missed something please let me know. I really value your feedback, so please leave me a comment!&lt;/p&gt;

&lt;p&gt;P.S.&lt;br&gt;
I am currently looking for a job in DevOps! If you know someone who is hiring entry-level DevOps engineers please send them my resume which can be found at &lt;a href="https://smcgown.com"&gt;https://smcgown.com&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/steven-mcgown/"&gt;https://www.linkedin.com/in/steven-mcgown/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>kubernetes</category>
      <category>beginners</category>
      <category>devops</category>
      <category>linux</category>
    </item>
    <item>
      <title>Play Games To Learn Coding 🎮</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Tue, 13 Jul 2021 14:36:12 +0000</pubDate>
      <link>https://dev.to/unitybuddy/play-games-to-learn-coding-40n0</link>
      <guid>https://dev.to/unitybuddy/play-games-to-learn-coding-40n0</guid>
      <description>&lt;p&gt;Hello, buddies! There are interactive courses, tons of online tutorials to learn coding, and one of my personal favorite ways to practice coding: fun free games!&lt;/p&gt;

&lt;p&gt;While a coding game alone probably isn’t going to teach you everything you need to know about coding, these free fun games can be a really incredible way to practice the skills you’re learning. If you’re anything like me, you’ll suddenly realize you’ve spent the last four hours reinforcing your coding skills without even realizing it!😮😮&lt;/p&gt;

&lt;p&gt;I've tried out some of the most entertaining and useful games for learning to code. So would like to share it with you!😁😁&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codecombat"&gt;
  &lt;/a&gt;
  &lt;a href="https://codecombat.com/"&gt;CodeCombat&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B8OTl43b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624645674602/hkevrxNhS.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B8OTl43b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624645674602/hkevrxNhS.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodeCombat is my favorite! It is one of the best free website to play Python games. Apart from Python, it supports Javascript and Coffeescript like languages as well. The UI of the game is amazing and there are sounds that will make you feel that you are actually playing a normal game.&lt;/p&gt;

&lt;p&gt;Supported Languages - Python, Javascript, CoffeeScript, C++(for subscribers)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://codecombat.com/"&gt;Play CodeCombat&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#codingame"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.codingame.com/start"&gt;CodinGame&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CY13poE7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624645912380/ElJkvN1NH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CY13poE7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624645912380/ElJkvN1NH.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodinGame offers up fun free games to help learn more than 25 programming languages, including JavaScript, Ruby, and PHP. One of the great things about CodinGame is that you can play with friends or colleagues, and also enter international coding competitions.&lt;/p&gt;

&lt;p&gt;Supported Languages - Python, Javascript, C++, C#, C, Ruby, Go and many more!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codingame.com/"&gt;Play CodinGame&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#robocode"&gt;
  &lt;/a&gt;
  &lt;a href="https://robocode.sourceforge.io/"&gt;Robocode&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--juZ74Bvi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624959375620/wNqxry4WM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--juZ74Bvi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624959375620/wNqxry4WM.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Wouldn’t it be great to practice your coding skills by programming the robot tanks that fight against each other (sound exciting, right?).&lt;/p&gt;

&lt;p&gt;Yes, you can do the same with this renowned game – Robocode. Robocode allows you to develop a robot battle tank using programming languages like Java or .NET to battle against other tanks. You need to write the AI for the robot to let it know what to do and how to reacts to events happening in the battleground.&lt;/p&gt;

&lt;p&gt;Supported Languages - Java, C# and Scala&lt;/p&gt;

&lt;p&gt;&lt;a href="https://robocode.sourceforge.io/"&gt;Play Robocode&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flexbox-defense"&gt;
  &lt;/a&gt;
  &lt;a href="http://www.flexboxdefense.com/"&gt;Flexbox Defense&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JkcmoY-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624959680906/EIfUQBxge.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JkcmoY-n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624959680906/EIfUQBxge.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Flexbox Defense is indeed one of the best ways to strengthen your knowledge and skills of CSS Flexbox! It is actually a Tower Defense Game where you’re required to stop the incoming enemies from getting past your defenses by moving the towers into position so these turrets can shoot the invading enemies before they go over you. You’re required to use the ‘justify-content’ property on the tower group container to position your towers.&lt;/p&gt;

&lt;p&gt;Supported Languages - CSS&lt;/p&gt;

&lt;p&gt;&lt;a href="http://www.flexboxdefense.com/"&gt;Play Flexbox Defense&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-hunt"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.microsoft.com/en-us/p/code-hunt-game/9nblggh6d0gs?activetab=pivot:overviewtab"&gt;Code Hunt&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0jZcAX8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624959955224/rLIPH9er1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0jZcAX8F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624959955224/rLIPH9er1.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Another mention in the list that can help you to practice and advance your programming skills within the gaming environment is Code Hunt. It is a coding game from Microsoft Research where you solve a series of coding puzzles to complete various rounds. Meanwhile, it works on a creative and unique format where each puzzle is presented with test cases only and no specification is provided. You’re first required to identify the pattern and then code the solution.&lt;/p&gt;

&lt;p&gt;Supported Languages - Java and C#&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.microsoft.com/en-us/p/code-hunt-game/9nblggh6d0gs?activetab=pivot:overviewtab"&gt;Get Code Hunt&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#checkio"&gt;
  &lt;/a&gt;
  &lt;a href="https://checkio.org/"&gt;CheckIO&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dt5BTlvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624960310066/-lZcnPqPa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dt5BTlvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624960310066/-lZcnPqPa.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
CheckIO is a coding game that allows you to enhance your programming skills, particularly for two languages – Python and TypeScript. The game is recommended to beginners as well as advanced programmers to level up the coding skills as it provides you with numerous exciting challenges of different complexity levels to solve. Every set of these challenges is positioned at a distinct island and users need to solve the required coding challenge or puzzle to traverse from one island to another. Also, the enriching and supportive community of CheckIO helps you to share knowledge &amp;amp; experiences with various brilliant minds across the world.&lt;/p&gt;

&lt;p&gt;Supported Languages - Python, TypeScript&lt;/p&gt;

&lt;p&gt;&lt;a href="https://checkio.org/"&gt;Play CheckIO&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screeps"&gt;
  &lt;/a&gt;
  &lt;a href="https://screeps.com/"&gt;Screeps&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NY1Wlz9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624960346115/_wcPW4l7Q.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NY1Wlz9x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624960346115/_wcPW4l7Q.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Here comes another popular coding game for all the programmers – Screeps! It is an online real-time strategy game that requires you to have at least some basic knowledge of programming. In this game, you’re required to create your own colony in a particular world shared with all the players. And the colony will be able to mine resources, build units and conquer territory. &lt;/p&gt;

&lt;p&gt;Supported Languages - Javascript, C++, C#&lt;/p&gt;

&lt;p&gt;&lt;a href="https://screeps.com/"&gt;Play Screeps&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learn-vim-by-playing-vim-adventure"&gt;
  &lt;/a&gt;
  Learn Vim By Playing &lt;a href="https://vim-adventures.com/"&gt;Vim Adventure&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--44--RC1n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624959483302/z2jRROqji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--44--RC1n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1624959483302/z2jRROqji.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Well, this is not a game to learn a language but it is very useful!&lt;/p&gt;

&lt;p&gt;If you often struggle with using the VIM code editor, then Vim Adventures is surely meant for you!! Vim Adventures is an online game that allows you to learn VIM keyboard shortcuts and other prominent VIM concepts in an entertaining &amp;amp; interesting way with the help of a Zelda-like game environment. This game makes it easier to learn and understand this powerful text editor, Vim, that subsequently helps you to become a more efficient programmer.&lt;/p&gt;

&lt;p&gt;So buddies, that's it for today! Feel free to add your favourite coding game in the comments and Happy Coding!&lt;/p&gt;

</description>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Netflix Clone Using React and TMDb</title>
      <author>Thomas Gilmore</author>
      <pubDate>Tue, 13 Jul 2021 14:26:00 +0000</pubDate>
      <link>https://dev.to/thomasgilmore/netflix-clone-using-react-and-tmdb-32gb</link>
      <guid>https://dev.to/thomasgilmore/netflix-clone-using-react-and-tmdb-32gb</guid>
      <description>&lt;p&gt;I created a Netflix Clone using React and &lt;a href="https://www.themoviedb.org/"&gt;The Movie Database (TMDb)&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The Movie Database API was used to fetch the movie images and posters to populate the Netflix Clone. So the images of the movies will change from time to time when viewing the link based off of what is returned from fetching the api.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;LINK&lt;/strong&gt;: &lt;a href="https://gilmore-netflix-clone.netlify.app/"&gt;https://gilmore-netflix-clone.netlify.app/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>api</category>
    </item>
    <item>
      <title>File Conversion and Text Summarization Bot</title>
      <author>Jaykishan84</author>
      <pubDate>Tue, 13 Jul 2021 14:24:13 +0000</pubDate>
      <link>https://dev.to/jaykishan84/file-conversion-and-text-summarization-bot-n7f</link>
      <guid>https://dev.to/jaykishan84/file-conversion-and-text-summarization-bot-n7f</guid>
      <description>&lt;p&gt;We often visit websites to convert our files into different formats and it is so usual these days especially for students studying through virtual classes that I don't need to explain why it is so important.&lt;/p&gt;

&lt;p&gt;I have created a telegram bot (ofcourse most of us uses telegram!) that can be used to convert files to different formats and also to generate summary of a document.&lt;/p&gt;

&lt;p&gt;You might be thinking I have created a bot from scratch. Not exactly, because you don't need to. The task is to assemble different APIs and make proper use of free deployment tools and libraries and most of your work is done. That is where you are bound to read the documentations of various APIs and libraries.&lt;/p&gt;

&lt;p&gt;This telegram bot can provide the following functionalities:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Converting documents to PDF files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Converting images to PDF files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Summarizing/Sending the key sentences from a .txt file.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;All the above Functionalities are added to the bot by making use of the required APIs and using the functionalities of telegram bot API, details of which are provided here: &lt;a href="https://core.telegram.org/bots/"&gt;https://core.telegram.org/bots/&lt;/a&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#making-a-simple-telegram-bot"&gt;
  &lt;/a&gt;
  MAKING A SIMPLE TELEGRAM BOT
&lt;/h1&gt;

&lt;p&gt;To begin with, I needed a pre-built bot which I can work on and add the necessary functionalities as per the requirements. The bot had to be such that it could run the functions defined upon sending a specific command from a set of commands. This is where BotFather comes into picture. In telegram, BotFather helps you create your own custom bot by writing a set of functions and integrating them in any language of your choice from the pool of languages, Telegram bots supports.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#making-api-calls"&gt;
  &lt;/a&gt;
  MAKING API CALLS
&lt;/h1&gt;

&lt;p&gt;All the functionalities that the bot provides are indirectly provided by the APIs. We are using the result of the APIs and sending it in an appropriate format to the user without user knowing which API we have made call to. In this case, the convertapi is used, details of which are kept here: &lt;a href="https://www.convertapi.com/doc/python-library"&gt;https://www.convertapi.com/doc/python-library&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#using-python-library-for-text-summarization"&gt;
  &lt;/a&gt;
  USING PYTHON LIBRARY FOR TEXT SUMMARIZATION
&lt;/h1&gt;

&lt;p&gt;The function that sends the key sentences/summary from a .txt file makes use of a python library called sumy and it sends the key statements to us from the file. More details on the use of this library is provided here: &lt;a href="https://pypi.org/project/sumy/"&gt;https://pypi.org/project/sumy/&lt;/a&gt; &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  CONCLUSION
&lt;/h1&gt;

&lt;p&gt;The bot is not limited to the functionalities which we discussed. We can add several other functionalities which can lead to enhancement of the features this bot provides like pdf to doc conversion, unzipping a zip file, merging 2 or more pdf and doc files and many others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link to the Github Repository&lt;/strong&gt;: &lt;a href="https://github.com/Crio-WFH/Telegram-bots/tree/main/PDF_Generation_and_Text_Summarization"&gt;https://github.com/Crio-WFH/Telegram-bots/tree/main/PDF_Generation_and_Text_Summarization&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For using the bot in telegram search for jk2000_bot in telegram.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>ibelieveindoing</category>
      <category>crioibdremoteworkingtool</category>
      <category>iamabelieverofdoing</category>
      <category>criodo</category>
    </item>
    <item>
      <title>7 GitHub projects to make you a better Go Developer💥</title>
      <author>Ankit Anand ✨</author>
      <pubDate>Tue, 13 Jul 2021 14:18:52 +0000</pubDate>
      <link>https://dev.to/ankit01oss/7-github-projects-to-make-you-a-better-go-developer-2nmh</link>
      <guid>https://dev.to/ankit01oss/7-github-projects-to-make-you-a-better-go-developer-2nmh</guid>
      <description>&lt;p&gt;Go is a compiled, concurrent, garbage-collected, statically typed language developed at Google. Go was designed to be an excellent tool for writing large software projects.&lt;/p&gt;

&lt;p&gt;According to 2020 stackoverflow developer survey, Go was the 3rd most wanted programming language to learn.&lt;/p&gt;

&lt;p&gt;So today, I want to share 7 amazing GitHub projects that will help you become a better Go developer. While some repos can help you have a self-learning path for Go, others can be useful for your workflows.🤓&lt;/p&gt;

&lt;p&gt;So let's get started. 👊&lt;/p&gt;




&lt;p&gt;Currently building &lt;a href="https://bit.ly/3h2Ky4V"&gt;SigNoz&lt;/a&gt; - an open-source application performance monitoring tool. Backend of SigNoz is built in Go.&lt;/p&gt;

&lt;p&gt;Check out our GitHub repo👇&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SigNoz"&gt;
        SigNoz
      &lt;/a&gt; / &lt;a href="https://github.com/SigNoz/signoz"&gt;
        signoz
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SigNoz helps developers monitor their applications &amp;amp; troubleshoot problems, an open-source alternative to DataDog, NewRelic, etc. 🔥 🖥
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667"&gt;&lt;img src="https://camo.githubusercontent.com/de24bcecd48c187d949b173f240555967f58a5cd424760a73f7c06f791b892ec/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343435302f7369676e6f7a2d696d616765732f4c6f676f4769746875625f7369676662752e737667" alt="SigNoz-logo" width="240"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;p&gt;Monitor your applications and troubleshoot problems in your deployed applications, an open-source alternative to DataDog, New Relic, etc.&lt;/p&gt;
&lt;p&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;img alt="License" src="https://camo.githubusercontent.com/8bb1977f745ee8c8107f711ecfa901421a9b929f308fd431f7211508f8ddbd87/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;img alt="Downloads" src="https://camo.githubusercontent.com/4d7505d3f801c171da56fe726501ab9411207d82358bf10341021397fa3fe48e/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f7369676e6f7a2f66726f6e74656e643f6c6162656c3d446f776e6c6f616473"&gt;&lt;/a&gt;
    &lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;img alt="GitHub issues" src="https://camo.githubusercontent.com/cd33e47de8e2feb970abdef5de51f59e6c007958faf6c188c56dd4c4208e58a2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f7369676e6f7a2f7369676e6f7a"&gt;&lt;/a&gt; 
    &lt;a href="https://twitter.com/intent/tweet?text=Monitor%20your%20applications%20and%20troubleshoot%20problems%20with%20SigNoz,%20an%20open-source%20alternative%20to%20DataDog,%20NewRelic.&amp;amp;url=https://signoz.io/&amp;amp;via=SigNozHQ&amp;amp;hashtags=opensource,signoz,observability" rel="nofollow"&gt; 
        &lt;img alt="tweet" src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c"&gt; &lt;/a&gt; 
&lt;/p&gt;

&lt;p&gt;SigNoz helps developers monitor applications and troubleshoot problems in their deployed applications. SigNoz uses distributed tracing to gain visibility into your software stack.&lt;/p&gt;

&lt;p&gt;👉 You can see metrics like p99 latency, error rates for your services, external API calls and individual end points.&lt;/p&gt;

&lt;p&gt;👉 You can find the root cause of the problem by going to the exact traces which are causing the problem and see detailed flamegraphs of individual request traces.&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/863718997bae95953d22cbd6c1001d4ec23695aad4244d7de596660f33833496/68747470733a2f2f7265732e636c6f7564696e6172792e636f6d2f646376336570696e782f696d6167652f75706c6f61642f76313631383930343033322f7369676e6f7a2d696d616765732f73637265656e7a792d313631383930343031333732395f636c737376792e706e67" alt="SigNoz Feature"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
👇 Features:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Application overview metrics like RPS, 50th/90th/99th Percentile latencies, and Error Rate&lt;/li&gt;
&lt;li&gt;Slowest endpoints in your application&lt;/li&gt;
&lt;li&gt;See exact request trace to figure out issues in downstream services, slow DB queries, call to 3rd party services like payment gateways, etc&lt;/li&gt;
&lt;li&gt;Filter traces by service name, operation, latency, error, tags/annotations.&lt;/li&gt;
&lt;li&gt;Aggregate metrics on filtered traces. Eg, you can get error…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/SigNoz/signoz"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#1-awesome-go"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://github.com/avelino/awesome-go"&gt;Awesome Go&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 65.4k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can call it the encyclopedia of Go programming language. Just bookmark it to come back to whenever you need something in Go. It is a massive curated list of awesome Go frameworks, libraries and software&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/avelino"&gt;
        avelino
      &lt;/a&gt; / &lt;a href="https://github.com/avelino/awesome-go"&gt;
        awesome-go
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A curated list of awesome Go frameworks, libraries and software
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/avelino/awesome-go/raw/master/tmpl/assets/logo.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sDprQZtq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/avelino/awesome-go/raw/master/tmpl/assets/logo.png" alt="awesome-go" title="awesome-go"&gt;&lt;/a&gt; Awesome Go&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://travis-ci.com/avelino/awesome-go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5e9e9b3df118887a7c39908d4bf4b2034694d111f0be12d90e3415d7f4e882b2/68747470733a2f2f7472617669732d63692e636f6d2f6176656c696e6f2f617765736f6d652d676f2e7376673f6272616e63683d6d6173746572" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img src="https://camo.githubusercontent.com/abb97269de2982c379cbc128bba93ba724d8822bfbe082737772bd4feb59cb54/68747470733a2f2f63646e2e7261776769742e636f6d2f73696e647265736f726875732f617765736f6d652f643733303566333864323966656437386661383536353265336136336531353464643865383832392f6d656469612f62616467652e737667" alt="Awesome"&gt;&lt;/a&gt;
&lt;a href="http://gophers.slack.com/messages/awesome" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b6f0a177b8a98ed13425a0b9dd119f24983c735e5d5c5b5ef6dbefacf16b6b84/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6a6f696e2d75732532306f6e253230736c61636b2d677261792e7376673f6c6f6e6743616368653d74727565266c6f676f3d736c61636b26636f6c6f72423d726564" alt="Slack Widget"&gt;&lt;/a&gt;
&lt;a href="https://app.netlify.com/sites/awesome-go/deploys" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/9550a643d86ace967dba246113078ec50ffdbf03ac16d71684786ef81d9e5225/68747470733a2f2f6170692e6e65746c6966792e636f6d2f6170692f76312f6261646765732f38336136646362652d306461362d343333652d623538362d6636383130393238366264352f6465706c6f792d737461747573" alt="Netlify Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/awesome-go?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-awesome-go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ecd51497915779e2875cd5267606b26f5acbfc07154cd536c8735babdbeb581b/68747470733a2f2f6170692e70726f6475637468756e742e636f6d2f776964676574732f656d6265642d696d6167652f76312f66656174757265642e7376673f706f73745f69643d323931353335267468656d653d6c69676874" alt="awesome-go - Curated list awesome Go frameworks, libraries and software | Product Hunt" width="250" height="54"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Sponsorships&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://m.do.co/c/bd3b723c0a36?utm_medium=opensource&amp;amp;utm_source=awesome-go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8b91494fce850c947b7c122a0b1211283e48b787c94ec3d19479673544d5dfb7/68747470733a2f2f6176656c696e6f2e72756e2f73706f6e736f72732f646f5f6c6f676f5f686f72697a6f6e74616c5f626c75652d3231302e706e67" alt="Digital Ocean"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;We have no monthly cost&lt;/strong&gt;&lt;em&gt;, but we have employees &lt;strong&gt;working hard&lt;/strong&gt; to maintain the Awesome Go, with money raised we can repay the effort of each person involved! All billing and distribution will be open to the entire community.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A curated list of awesome Go frameworks, libraries and software. Inspired by &lt;a href="https://github.com/vinta/awesome-python"&gt;awesome-python&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
Contributing&lt;/h3&gt;
&lt;p&gt;Please take a quick gander at the &lt;a href="https://github.com/avelino/awesome-go/blob/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; first. Thanks to all &lt;a href="https://github.com/avelino/awesome-go/graphs/contributors"&gt;contributors&lt;/a&gt;; you rock!&lt;/p&gt;
&lt;h4&gt;
&lt;em&gt;If you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you!&lt;/em&gt;
&lt;/h4&gt;
&lt;h3&gt;
Contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#awesome-go"&gt;Awesome Go&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#audio-and-music"&gt;Audio and Music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#authentication-and-oauth"&gt;Authentication and OAuth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#bot-building"&gt;Bot Building&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#build-automation"&gt;Build Automation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#command-line"&gt;Command Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#continuous-integration"&gt;Continuous Integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#css-preprocessors"&gt;CSS Preprocessors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#data-structures"&gt;Data Structures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#database"&gt;Database&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#database-drivers"&gt;Database Drivers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#date-and-time"&gt;Date and Time&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#distributed-systems"&gt;Distributed Systems&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#dynamic-dns"&gt;Dynamic DNS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#email"&gt;Email&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#embeddable-scripting-languages"&gt;Embeddable Scripting Languages&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#error-handling"&gt;Error Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#file-handling"&gt;File Handling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#financial"&gt;Financial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#forms"&gt;Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#functional"&gt;Functional&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/avelino/awesome-go/master/#game-development"&gt;Game Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/avelino/awesome-go"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#2-standard-go-project-layout"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://github.com/golang-standards/project-layout"&gt;Standard Go Project Layout&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 24.6k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo contains a basic layout for Go application projects. Although it's not an official standard defined by the core Go dev team, it is a set of common historical and emerging project layout patterns in the Go ecosystem.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/golang-standards"&gt;
        golang-standards
      &lt;/a&gt; / &lt;a href="https://github.com/golang-standards/project-layout"&gt;
        project-layout
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Standard Go Project Layout
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Standard Go Project Layout&lt;/h1&gt;
&lt;p&gt;Translations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_ko.md"&gt;한국어 문서&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_zh.md"&gt;简体中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_zh-TW.md"&gt;正體中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_zh-CN.md"&gt;简体中文&lt;/a&gt; - ???&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_fr.md"&gt;Français&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_ja.md"&gt;日本語&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_ptBR.md"&gt;Portuguese&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_es.md"&gt;Español&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_ro.md"&gt;Română&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_ru.md"&gt;Русский&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-standards/project-layout/master/README_tr.md"&gt;Türkçe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Overview&lt;/h2&gt;
&lt;p&gt;This is a basic layout for Go application projects. It's &lt;strong&gt;&lt;code&gt;not an official standard defined by the core Go dev team&lt;/code&gt;&lt;/strong&gt;; however, it is a set of common historical and emerging project layout patterns in the Go ecosystem. Some of these patterns are more popular than others. It also has a number of small enhancements along with several supporting directories common to any large enough real world application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;If you are trying to learn Go or if you are building a PoC or a simple project for yourself this project layout is an overkill. Start with something really simple instead (a single &lt;/code&gt;main.go&lt;code&gt;file and&lt;/code&gt;go.mod&lt;code&gt; is more than enough).&lt;/code&gt;&lt;/strong&gt; As your project grows keep in mind that it'll be important to make sure your code is well structured…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/golang-standards/project-layout"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#3-go-kit"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://github.com/go-kit/kit"&gt;Go kit&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 20.5k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Go kit is a programming toolkit for building microservices in Go. Go kit solves common problems in distributed systems and application architecture so you can focus on delivering business value.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/go-kit"&gt;
        go-kit
      &lt;/a&gt; / &lt;a href="https://github.com/go-kit/kit"&gt;
        kit
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A standard library for microservices.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Go kit&lt;/h1&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/go-kit/kit/workflows/CI/badge.svg"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ungTBiHx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/go-kit/kit/workflows/CI/badge.svg" alt="GitHub Workflow Status"&gt;&lt;/a&gt;
&lt;a href="https://pkg.go.dev/github.com/go-kit/kit?tab=doc" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f275f3caa8e17b8198d808fbbeedfcfb710368633d8109e75c456663d0cb4f5d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f676f2e6465762d7265666572656e63652d3030376439633f6c6f676f3d676f266c6f676f436f6c6f723d7768697465267374796c653d666c61742d737175617265" alt="GoDev"&gt;&lt;/a&gt;
&lt;a href="https://codecov.io/gh/go-kit/kit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b0fd8c978a9e20977dcfa2ab1f2ee17e7b00ba4f629c537828046c96183efa9d/68747470733a2f2f636f6465636f762e696f2f67682f676f2d6b69742f6b69742f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/go-kit/kit" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/87320c26cc42c3a21a86f8f5189b45e50288df57011694ff9b11bf5011015833/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f676f2d6b69742f6b6974" alt="Go Report Card"&gt;&lt;/a&gt;
&lt;a href="https://sourcegraph.com/github.com/go-kit/kit?badge" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d064f392236e444e1c6b43e0be16ab301e85ec0a7e643c037f1f073d7280c68b/68747470733a2f2f736f7572636567726170682e636f6d2f6769746875622e636f6d2f676f2d6b69742f6b69742f2d2f62616467652e737667" alt="Sourcegraph"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Go kit&lt;/strong&gt; is a &lt;strong&gt;programming toolkit&lt;/strong&gt; for building microservices
(or elegant monoliths) in Go. We solve common problems in distributed
systems and application architecture so you can focus on delivering
business value.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Website: &lt;a href="https://gokit.io" rel="nofollow"&gt;gokit.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Mailing list: &lt;a href="https://groups.google.com/forum/#!forum/go-kit" rel="nofollow"&gt;go-kit&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Slack: &lt;a href="https://gophers.slack.com" rel="nofollow"&gt;gophers.slack.com&lt;/a&gt; &lt;strong&gt;#go-kit&lt;/strong&gt; (&lt;a href="https://gophersinvite.herokuapp.com/" rel="nofollow"&gt;invite&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Sponsors&lt;/h2&gt;
&lt;p&gt;Click on Sponsor, above, for more information on sponsorship.&lt;/p&gt;
&lt;h2&gt;
Motivation&lt;/h2&gt;
&lt;p&gt;Go has emerged as the language of the server, but it remains underrepresented
in so-called "modern enterprise" companies like Facebook, Twitter, Netflix, and
SoundCloud. Many of these organizations have turned to JVM-based stacks for
their business logic, owing in large part to libraries and ecosystems that
directly support their microservice architectures.&lt;/p&gt;
&lt;p&gt;To reach its next level of success, Go needs more than simple primitives and
idioms. It needs a comprehensive toolkit, for coherent distributed programming
in the large. Go kit is a set of packages and best practices, which provide a
comprehensive, robust, and…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/go-kit/kit"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#4-go-design-patterns"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://github.com/tmrts/go-patterns"&gt;Go Design patterns&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 15.4k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This repo contains a curated collection of idiomatic design &amp;amp; application patterns for Go language. You can find patterns like: creational patterns, structural patterns, behavioral patterns, concurrency patterns, messaging patterns.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/tmrts"&gt;
        tmrts
      &lt;/a&gt; / &lt;a href="https://github.com/tmrts/go-patterns"&gt;
        go-patterns
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Curated list of Go design patterns, recipes and idioms
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/tmrts/go-patterns/master//gopher.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9SWrCNNh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/tmrts/go-patterns/master/gopher.png" height="400"&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;h1&gt;
    Go Patterns
    &lt;br&gt;
    &lt;a href="http://travis-ci.org/tmrts/go-patterns" rel="nofollow"&gt;&lt;img alt="build-status" src="https://camo.githubusercontent.com/519be221a7bba8e367452b4d550decb3b284535377ac8a2956ad2fe959218c96/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6275696c642d70617373696e672d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/sindresorhus/awesome"&gt;&lt;img alt="awesome" src="https://camo.githubusercontent.com/575717fa64059cfa6ef0b7322a3b33c5432f7afb02cfb6fe9fb4165e2b9d04ad/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f617765736f6d652d2545322539432539332d6666363962342e7376673f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
    &lt;a href="https://github.com/tmrts/go-patterns/blob/master/LICENSE"&gt;&lt;img alt="license" src="https://camo.githubusercontent.com/51f2e325174be9e5d12300714e720630a3baa1f6877422276c9a108e8da37ffc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652532304c6963656e7365253230322e302d4539314536332e7376673f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt;
  &lt;/h1&gt;
&lt;p&gt;A curated collection of idiomatic design &amp;amp; application patterns for Go language.&lt;/p&gt;
&lt;h2&gt;
Creational Patterns&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pattern&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/tmrts/go-patterns/master//creational/abstract_factory.md"&gt;Abstract Factory&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Provides an interface for creating families of releated objects&lt;/td&gt;
&lt;td&gt;✘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/tmrts/go-patterns/master//creational/builder.md"&gt;Builder&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Builds a complex object using simple objects&lt;/td&gt;
&lt;td&gt;✔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/tmrts/go-patterns/master//creational/factory.md"&gt;Factory Method&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Defers instantiation of an object to a specialized function for creating instances&lt;/td&gt;
&lt;td&gt;✔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/tmrts/go-patterns/master//creational/object-pool.md"&gt;Object Pool&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Instantiates and maintains a group of objects instances of the same type&lt;/td&gt;
&lt;td&gt;✔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/tmrts/go-patterns/master//creational/singleton.md"&gt;Singleton&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Restricts instantiation of a type to one object&lt;/td&gt;
&lt;td&gt;✔&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;h2&gt;
Structural Patterns&lt;/h2&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pattern&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/tmrts/go-patterns/master//structural/bridge.md"&gt;Bridge&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Decouples an interface from its implementation so that the two can vary independently&lt;/td&gt;
&lt;td&gt;✘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/tmrts/go-patterns/master//structural/composite.md"&gt;Composite&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Encapsulates and provides access to a number of different objects&lt;/td&gt;
&lt;td&gt;✘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/tmrts/go-patterns/master//structural/decorator.md"&gt;Decorator&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adds behavior to an object, statically or dynamically&lt;/td&gt;
&lt;td&gt;✔&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/tmrts/go-patterns/master//structural/facade.md"&gt;Facade&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Uses one type as an API to a number of others&lt;/td&gt;
&lt;td&gt;✘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/tmrts/go-patterns/master//structural/flyweight.md"&gt;Flyweight&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Reuses existing instances of objects with similar/identical state to minimize resource usage&lt;/td&gt;
&lt;td&gt;✘&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="https://raw.githubusercontent.com/tmrts/go-patterns/master//structural/proxy.md"&gt;Proxy&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/tmrts/go-patterns"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#5-learn-go-with-testdriven-development"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://github.com/quii/learn-go-with-tests"&gt;Learn Go with test-driven development&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 14.6k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Go is a good language for learning test-driven development as Go's standard library provides a built-in testing package. This repo has a list of Go fundamentals with examples of test-driven code implementations.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/quii"&gt;
        quii
      &lt;/a&gt; / &lt;a href="https://github.com/quii/learn-go-with-tests"&gt;
        learn-go-with-tests
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Learn Go with test-driven development
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Learn Go with Tests&lt;/h1&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/quii/learn-go-with-tests/main/red-green-blue-gophers-smaller.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AXyqadgr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/quii/learn-go-with-tests/main/red-green-blue-gophers-smaller.png"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/deniseyu21" rel="nofollow"&gt;Art by Denise&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://travis-ci.org/quii/learn-go-with-tests" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/724b73cf0a39a6e651e0b4a0430b76bf505c2c90ac01b42a9ffcddba150d79db/68747470733a2f2f7472617669732d63692e6f72672f717569692f6c6561726e2d676f2d776974682d74657374732e7376673f6272616e63683d6d61696e" alt="Build Status"&gt;&lt;/a&gt;
&lt;a href="https://goreportcard.com/report/github.com/quii/learn-go-with-tests" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/69cf45f9477d56e6674a3543386ce4c452d4367414d97c63500353f713bc8050/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f717569692f6c6561726e2d676f2d776974682d7465737473" alt="Go Report Card"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Formats&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://quii.gitbook.io/learn-go-with-tests" rel="nofollow"&gt;Gitbook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/quii/learn-go-with-tests/releases"&gt;EPUB or PDF&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Translations&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://studygolang.gitbook.io/learn-go-with-tests" rel="nofollow"&gt;中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://larien.gitbook.io/aprenda-go-com-testes/" rel="nofollow"&gt;Português&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://andmorefine.gitbook.io/learn-go-with-tests/" rel="nofollow"&gt;日本語&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://miryang.gitbook.io/learn-go-with-tests/" rel="nofollow"&gt;한국어&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Support me&lt;/h2&gt;
&lt;p&gt;I am proud to offer this resource for free, but if you wish to give some appreciation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/quii" rel="nofollow"&gt;Tweet me @quii&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.buymeacoffee.com/quii" rel="nofollow"&gt;Buy me a coffee ☕&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sponsors/quii"&gt;Sponsor me on GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Why&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Explore the Go language by writing tests&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Get a grounding with TDD&lt;/strong&gt;. Go is a good language for learning TDD because it is a simple language to learn and testing is built-in&lt;/li&gt;
&lt;li&gt;Be confident that you'll be able to start writing robust, well-tested systems in Go&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/quii/learn-go-with-tests/main/why.md"&gt;Watch a video, or read about why unit testing and TDD is important&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Table of contents&lt;/h2&gt;
&lt;h3&gt;
Go fundamentals&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/quii/learn-go-with-tests/main/install-go.md"&gt;Install Go&lt;/a&gt; - Set up environment for productivity.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/quii/learn-go-with-tests/main/hello-world.md"&gt;Hello, world&lt;/a&gt; - Declaring variables, constants, if/else statements, switch, write your first go program and write your first test. Sub-test syntax and closures.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/quii/learn-go-with-tests/main/integers.md"&gt;Integers&lt;/a&gt; - Further Explore function…&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/quii/learn-go-with-tests"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#6-the-ultimate-go-study-guide"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://github.com/ardanlabs/gotraining"&gt;The Ultimate Go Study Guide&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 14.3k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The Ultimate Go Study Guide is a collection of notes for students taking the Ultimate Go class. It is compiled of sample programs with line-by-line comments to help students follow the code better. You will find the link to the repo's content in readme.md file.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hoanhan101"&gt;
        hoanhan101
      &lt;/a&gt; / &lt;a href="https://github.com/hoanhan101/ultimate-go"&gt;
        ultimate-go
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The Ultimate Go Study Guide
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
The Ultimate Go Study Guide&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/ardanlabs/gotraining-studyguide"&gt;This material has been acquired and actively maintained by Ardan Labs →&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stargazers over time&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://starchart.cc/hoanhan101/ultimate-go" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/11cb354f44bac3d265569d45dbf9ba17a5f6bfc2194acc941f6d60f9a78fe1c8/68747470733a2f2f7374617263686172742e63632f686f616e68616e3130312f756c74696d6174652d676f2e737667" alt="Stargazers over time"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/hoanhan101/ultimate-go"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;h2&gt;
  &lt;a href="#7-1000-handcrafted-go-examples-exercises-and-quizzes"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://github.com/inancgumus/learngo"&gt;1000+ Hand-crafted Go examples, exercises and quizzes&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;⭐ Github stars: 9.8k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Inside this repository, you will find thousands of Go examples, exercises and quizzes.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/inancgumus"&gt;
        inancgumus
      &lt;/a&gt; / &lt;a href="https://github.com/inancgumus/learngo"&gt;
        learngo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      1000+ Hand-Crafted Go Examples, Exercises, and Quizzes
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
A Huge Number of Go Examples, Exercises and Quizzes&lt;/h1&gt;
&lt;p&gt;Best way of learning is doing. Inside this repository, you will find thousands of Go examples, exercises and quizzes. I initially created this repository for my &lt;strong&gt;&lt;a href="https://www.udemy.com/course/learn-go-the-complete-bootcamp-course-golang/?referralCode=5CE6EB34E2B1EF4A7D37" rel="nofollow"&gt;Go: Bootcamp Course&lt;/a&gt;&lt;/strong&gt;. Later on, I added a lot of exercises, and I wanted every programmer who is not yet enrolled in the course to learn for free as well. So here it is. Enjoy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Available in the following languages:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/inancgumus/learngo"&gt;English&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/inancgumus/learngo/master/translation/spanish"&gt;Spanish&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;(WIP: Please Contribute)&lt;/em&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
❤️ Help other fellow developers&lt;/h2&gt;
&lt;p&gt;Sharing is free but caring is priceless. &lt;a href="https://twitter.com/intent/tweet?text=I%27m%20learning%20%23golang%20with%201000%2B%20hand-crafted%20examples%2C%20exercises%2C%20and%20quizzes.&amp;amp;url=https://github.com/inancgumus/learngo&amp;amp;via=inancgumus" rel="nofollow"&gt;So, now please click here&lt;/a&gt; and share this repository on Twitter.&lt;/p&gt;
&lt;h2&gt;
Stay in touch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://twitter.com/inancgumus" rel="nofollow"&gt;Follow me on Twitter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I usually tweet Go tips and tricks.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/inancgumus" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8aba8b84e477d1962d203f9867ce54c8394d08ee93c9880e749f43aa425d355a/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f696e616e6367756d75732e7376673f7374796c653d736f6369616c266c6162656c3d40696e616e6367756d7573" alt="@inancgumus"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://eepurl.com/c4DMNX" rel="nofollow"&gt;Subscribe to my newsletter&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Get updates from me.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://blog.learngoprogramming.com" rel="nofollow"&gt;Read my blog&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Followed by 5K+ developers, and contains dozens of illustrated articles about Go.&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/channel/UCYxepZhtnFIVRh8t5H_QAdg?view_as=subscriber" rel="nofollow"&gt;Watch my Youtube channel&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
License&lt;/h2&gt;
&lt;p&gt;Whole materials are licensed…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/inancgumus/learngo"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;p&gt;I hope you enjoyed this list. I will be coming up with more such amazing resources soon. So, stay tuned! 🙂&lt;/p&gt;

</description>
      <category>go</category>
      <category>webdev</category>
      <category>github</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to improve imports in your code</title>
      <author>tsuyan</author>
      <pubDate>Tue, 13 Jul 2021 14:15:13 +0000</pubDate>
      <link>https://dev.to/tsuyusk/how-to-improve-imports-in-your-code-a2k</link>
      <guid>https://dev.to/tsuyusk/how-to-improve-imports-in-your-code-a2k</guid>
      <description>&lt;p&gt;Hello, there!&lt;/p&gt;

&lt;p&gt;After a while without new posts, I decided to come back with a really useful tip to simplify your code and reduce repetition.&lt;/p&gt;

&lt;p&gt;Have you ever saw a code like this ?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--t68xIUB4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2di1gwpgz9ct89nfq54v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t68xIUB4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2di1gwpgz9ct89nfq54v.png" alt="many_imports"&gt;&lt;/a&gt;&lt;br&gt;
Wouldn't It be great if we could simply shorten it to this ?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BSkZaY1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3dsayxdhwlol63xf7zg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BSkZaY1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w3dsayxdhwlol63xf7zg.png" alt="simplified_imports"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, It's possible!&lt;/p&gt;

&lt;p&gt;In order to do it, we will simply create a file named 'index.(js/ts)' inside components' folder, and add the following code in it:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ktd7iZmQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rc64qti3sn571grwt8kp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ktd7iZmQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rc64qti3sn571grwt8kp.png" alt="exports_index_ts"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And now you can import components easier from other files without needing to repeat their names.&lt;/p&gt;



&lt;p&gt;If you think that it is still not worth it, because in index.(js/ts) the components are still being imported, there is another solution:&lt;/p&gt;

&lt;p&gt;Instead of default exporting components&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Input&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Simply export them without default keyword&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Input&lt;/span&gt; &lt;span class="p"&gt;(...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And in index.(js/ts) do this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VYK-T6Jy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xu81dxxum68zxrbddji9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VYK-T6Jy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xu81dxxum68zxrbddji9.png" alt="second_way_to_simplify"&gt;&lt;/a&gt; &lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Improving Visibility Without Being Annoying w/ Anders Wallgren</title>
      <author>Conor Bronsdon</author>
      <pubDate>Tue, 13 Jul 2021 14:10:15 +0000</pubDate>
      <link>https://dev.to/linearb/improving-visibility-without-being-annoying-w-anders-wallgren-23ji</link>
      <guid>https://dev.to/linearb/improving-visibility-without-being-annoying-w-anders-wallgren-23ji</guid>
      <description>&lt;p&gt;It’s safe to say that everyone wants more visibility into their software delivery process.&lt;/p&gt;

&lt;p&gt;When project management and git systems don’t talk to each other, we have only small islands of visibility and no way to connect them. Anders Wallgren, the VP of Technology Strategy at Cloudbees, joins the &lt;a href="https://devinterrupted.com/podcast/improving-visibility-without-being-annoying/"&gt;Dev Interrupted podcast&lt;/a&gt; to help us connect these islands, and discuss the outcome-based metrics we should all be using to make the software development process more visible.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/22fh3bcXA3qVIjoyulxC71"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;How to increase development visibility without &lt;a href="https://linearb.io/blog/data-driven-dev-team/"&gt;micromanaging&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Which team-based metrics are best for pipeline visibility&lt;/li&gt;
&lt;li&gt;Why it’s important to look at your software at the feature level&lt;/li&gt;
&lt;li&gt;What the future holds for software delivery pipeline visibility&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1200 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wzIBzHH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/19j3dzgz4r4kzav3w6z8.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>management</category>
      <category>devops</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
