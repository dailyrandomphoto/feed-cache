<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>React - useEffect hook - A Quick Guide</title>
      <author>Jose</author>
      <pubDate>Wed, 24 Nov 2021 08:08:15 +0000</pubDate>
      <link>https://dev.to/josec/react-useeffect-hook-a-quick-guide-4c3p</link>
      <guid>https://dev.to/josec/react-useeffect-hook-a-quick-guide-4c3p</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-useeffect"&gt;
  &lt;/a&gt;
  What is useEffect?
&lt;/h1&gt;

&lt;p&gt;useEffect is a react built-in hook that allows us to run code on the mount, update and unmount stages of our components lifecycle. It’s the equivalent of the class based components to the &lt;code&gt;componentDidMount&lt;/code&gt;, &lt;code&gt;componenDidUpdate&lt;/code&gt; and &lt;code&gt;componentWillUnmount&lt;/code&gt; methods.&lt;/p&gt;

&lt;p&gt;The useEffect hook receives two parameters: one function to be executed and an array of dependencies. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9s6-Ij9F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04cy4msejjbgfhxrsv43.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9s6-Ij9F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/04cy4msejjbgfhxrsv43.png" alt="hook explanation" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#lets-see-some-examples"&gt;
  &lt;/a&gt;
  Let's see some examples
&lt;/h1&gt;

&lt;p&gt;On my &lt;code&gt;app.js&lt;/code&gt; I’ve set two input numbers and one button alongside the &lt;code&gt;Calculator&lt;/code&gt; component. We set the numbers on the inputs and when we click the button the states get updated and the component gets the number via props. Nothing fancy.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./Calculator&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;inputB&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setNumbers&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;inputA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;inputB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getTotalHandler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setNumbers&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;inputA&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;inputB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Input&lt;/span&gt; &lt;span class="nx"&gt;A&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;inputA&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;label&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Input&lt;/span&gt; &lt;span class="nx"&gt;B&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/label&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;ref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;inputB&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;getTotalHandler&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Calculate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I have this component called &lt;code&gt;Calculator&lt;/code&gt; that receives via props &lt;code&gt;numberA&lt;/code&gt; and &lt;code&gt;numberB&lt;/code&gt; and returns the sum.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j9hGqxaT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohpikohvdk90dvoh3484.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j9hGqxaT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ohpikohvdk90dvoh3484.png" alt="example" width="880" height="479"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#execute-useeffect-when-the-component-gets-mounted"&gt;
  &lt;/a&gt;
  Execute useEffect when the component gets mounted
&lt;/h2&gt;

&lt;p&gt;Now I will use &lt;code&gt;useEffect&lt;/code&gt; to execute a function that logs me when the component it’s mounted. First I import the &lt;code&gt;useEffect&lt;/code&gt; hook from &lt;code&gt;react&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To implement this hook I have to set a function to be executed and an array of dependencies and then my component looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`First render`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In this case I left my dependency array empty as I just want this code to be executed when it’s rendered for the first time.&lt;/p&gt;

&lt;p&gt;Now when I first load my component I see it on my console:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h7M3n5_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4sczdzwltew1nxmb874.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h7M3n5_H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p4sczdzwltew1nxmb874.png" alt="example" width="880" height="485"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the dependency array is empty this log will be executed only when the component gets mounted. If I update the &lt;code&gt;App&lt;/code&gt; component state and update the &lt;code&gt;Calculator&lt;/code&gt; props this log function will not execute again. This is the equivalent to the &lt;code&gt;componentDidMount&lt;/code&gt; on class-based components. Let’s check:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--miaFZVMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9emjzrh2vsm025n7k9a0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--miaFZVMz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9emjzrh2vsm025n7k9a0.png" alt="example" width="880" height="477"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’ve updated the &lt;code&gt;numberA&lt;/code&gt; and &lt;code&gt;numberB&lt;/code&gt; props but the function did not execute. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#execute-useeffect-each-time-the-props-gets-updated"&gt;
  &lt;/a&gt;
  Execute useEffect each time the props gets updated
&lt;/h2&gt;

&lt;p&gt;Now let’s execute a function each time the props get updated. This is useful to perform side effects based on new props for example to retrieve details from an api on the basis of a value received from props. At the end of the post there’s an example with this.&lt;/p&gt;

&lt;p&gt;First I add a second useEffect to my previous code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`First render`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`This gets executed each time the props are updated`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;total&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;numberA&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;numberB&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Calculator&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This time I did not leave my dependencies array empty and I’ve added the numberA and numberB props on it so the useEffect hook knows that each time one of the props gets updated it has to run the function. Let’s check if it works:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2SfnOG5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3y7tg1fju29rmzw3ab6h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2SfnOG5d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3y7tg1fju29rmzw3ab6h.png" alt="example" width="880" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yes it does. Actually you will see that the first time the component gets mounted both &lt;code&gt;useEffect&lt;/code&gt; hooks get executed. This is the equivalent to the &lt;code&gt;componentDidMount&lt;/code&gt; method on class-based components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#running-code-when-the-component-gets-unmounted"&gt;
  &lt;/a&gt;
  Running code when the component gets unmounted
&lt;/h2&gt;

&lt;p&gt;Until now I’ve shown how to run code each time the component gets mounted or updated but what if I have some code that I just wanna run when the component gets unmounted? Luckily for us the &lt;code&gt;useEffect&lt;/code&gt; hook provides a clean up function. Inside the useEffect code we have to return a function and this function will execute before unmounting:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;useEffect&lt;/code&gt; hook combined with the clean up function it’s the equivalent to the &lt;code&gt;componentWillUnmont&lt;/code&gt; method in class-based components.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-useeffect-to-get-data-from-an-api-each-time-the-props-get-updated"&gt;
  &lt;/a&gt;
  Using useEffect to get data from an API each time the props get updated
&lt;/h2&gt;

&lt;p&gt;Now I will show you how to take advantage of the &lt;code&gt;useEffect&lt;/code&gt; hook to get data from an API each time the props of our component is updated. &lt;/p&gt;

&lt;p&gt;For this example I’ve created a new component called &lt;code&gt;Rick&lt;/code&gt; that uses an id received via props to get data from the Rick and Morty public api.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Rick&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setCharacter&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setRequest&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`pendent`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`pendent`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getApiResults&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;characterId&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`https://rickandmortyapi.com/api/character/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;characterId&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setCharacter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;setRequest&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`completed`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;getApiResults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;``&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;request&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s2"&gt;`completed`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;character&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Rick&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;From the &lt;code&gt;app&lt;/code&gt; component I have a button that generates a random number and passes it via props to the &lt;code&gt;Rick&lt;/code&gt; component. On the first render we just have the button:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lzEuWnrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwm717cnynvwlphr3ugr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lzEuWnrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vwm717cnynvwlphr3ugr.png" alt="mockup" width="880" height="670"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But each time we click a random number it’s generated and passed via props. This triggers the &lt;code&gt;useEffect&lt;/code&gt; function that gets the belonging Rick and Morty character based on that id:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lviWpyEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofcwvoil4dy1o8h5rb11.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lviWpyEc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ofcwvoil4dy1o8h5rb11.gif" alt="gif example" width="788" height="628"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Don't Miss The Opportunity that Web 3.0 Gives You</title>
      <author>Mark Vassilevskiy</author>
      <pubDate>Wed, 24 Nov 2021 08:05:24 +0000</pubDate>
      <link>https://dev.to/markfusion/dont-miss-the-opportunity-that-web-30-gives-you-bac</link>
      <guid>https://dev.to/markfusion/dont-miss-the-opportunity-that-web-30-gives-you-bac</guid>
      <description>&lt;p&gt;In the last decade, there has been a change in how we use our computers. Web 2.0 was all about social media and blogs with a focus on connecting people over the internet. Today, we are &lt;br&gt;
entering the age of Web 3.0 which is defined as an internet that is decentralized and uses blockchain technology to power it through cryptocurrencies like Bitcoin and Ethereum, NFTs (Non-Fungible Tokens).&lt;/p&gt;

&lt;p&gt;So I'll tell you about these technologies more deeply and show you the ways how you can be part of it.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-blockchain"&gt;
  &lt;/a&gt;
  What is Blockchain?
&lt;/h2&gt;

&lt;p&gt;Blockchain is a technology that was created to store immutable data, ensure security and make this world more decentralized. It has become very popular because of its use in cryptocurrencies like Bitcoin and Ethereum however, it can be used for many other applications as well. For example, Companies are using blockchain tech to change the way we buy music or how our internet service providers work. And it's called NFT and we'll talk about it a little bit later&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#smart-contracts-and-ethereum"&gt;
  &lt;/a&gt;
  Smart Contracts and Ethereum
&lt;/h2&gt;

&lt;p&gt;To understand what Web 3.0 is we first need to understand how the most famous usage of blockchain, and I'm talking about Cryptocurrency. The first stage of cryptocurrency was Bitcoin, you can imagine that Bitcoin is just a digital gold that people can buy from anywhere and anytime what they want. It brought the technology of Decentralization and Blockchain itself and over time people started making Cryptocurrencies that are much better than Bitcoin and we're calling that the second stage of Cryptoccunrecies or Blockchain. One example of that is Ethereum. Ethereum is not already just a digital gold, it brings an open-source platform where other people can easily build their own cryptos. Also, Ethereum can take more transactions per second and that's why most people loved Ethereum, however, there's even one more crucial technology called Smart Contracts that reduces all internet crime and help people to say their digital assets (NFT) without any problems. There's another stage of the Crypto Industry that uses the technology of PoS rather than PoW but we'll stay at the second stage for now.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-nfts"&gt;
  &lt;/a&gt;
  What are NFTs?
&lt;/h2&gt;

&lt;p&gt;NFT or Non-Fungible Token is a cryptocurrency that can be used in gaming, art, and many other fields where it's important who the token belongs to. &lt;/p&gt;

&lt;p&gt;What does that mean? For instance, Mona Liza is some sort of NFT too, because it stores information into it, so you'll never pay the same price for a copy of Mona Lisa rather than for the original itself. That's the simple definition of NFT - you can sell and buy something that stores information into it and you can be the only owner of it. &lt;/p&gt;

&lt;p&gt;NFTs have some unique features which make them different from standard digital assets like Cryptocurrencies. Alright, now we know that there's can be only one NFT for your specific topic and that means each NFT is different from others and each of them has it's own unique thus you can't make copies of them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-webbased-nft"&gt;
  &lt;/a&gt;
  What's Web-based NFT?
&lt;/h2&gt;

&lt;p&gt;Web-based NFT tokens are the next generation of NFTs - they will be stored on a decentralized ledger where all transactions made with this token will reflect on NFTs themselves. Web-based NFT will bring the next revolution to the NFT market and we can expect a lot of new NFT products in this space which opens up opportunities for many people, not only blockchain developers or gamers but also artists who can sell their art online without intermediaries like Amazon or eBay.&lt;/p&gt;

&lt;p&gt;What does that mean for NFTs?&lt;/p&gt;

&lt;p&gt;NFTs are already used in gaming and other fields, but their real potential has not been unleashed yet. One of the main reasons for that is the low number of NFT transactions per day which shows how popular this technology is starting to be. That's why we can expect big growth in the NFT market because there will be more products from different people and that will mean the growth in NFT transactions per day and will increase demand in this sphere. &lt;/p&gt;

&lt;p&gt;Thanks to Web-based NFT which allows us to buy NFTs on websites, not only with Ethereum or Bitcoin but also using your local currency like Dollars or Euros which makes it even easier for non-crypto users and contributes to the spread of this to the masses.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-nfts-will-change-the-way-we-do-business"&gt;
  &lt;/a&gt;
  How NFTs will change the way we do business?
&lt;/h2&gt;

&lt;p&gt;NFT has a unique feature which is that it can be described as a self-sovereign identity. That means NFT owners have full control over their information and they won't need to disclose any personal data or even use any intermediaries in order to sell NFTs as they do on eBay or Amazon. NFT owners can take full advantage of this technology and sell NFTs worldwide without any restrictions which makes it even more interesting for entrepreneurs who want to expand their business globally. NFTs will also give you more opportunities to get financing for your idea because of the unique features they have. &lt;/p&gt;

&lt;p&gt;Now it's time for NFT entrepreneurs and Blockchain developers who want to be part of this revolution, so if you are thinking about creating some kind of product that has NFTs in it then start working on them right now, because NFTs are becoming more and more popular every day.&lt;/p&gt;

&lt;p&gt;As we see NFTs have great potential which has not been unleashed yet and NFT entrepreneurs have a great opportunity to become successful in the NFT industry. We can expect more products that will bring changes into our daily lives just like smartphones did 20 years ago, so don't miss this chance of being among NFT's first movers because it's worth it!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;That was an explanation of Web 3.0 and now you need to understand that it's a new technology and sphere which includes many years of development and marketing, so now we're at the pick of popularity and anyone can be part of it before it will be too late. If you have something to add while reading this, then you can surely leave a comment and I'll answer it as fast as I can. Hope you enjoyed :)&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>discuss</category>
      <category>career</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Join professionals from RedHat, Polypane &amp; Researchers in Quantum Computing at Git Commit Show</title>
      <author>Saurabh Rai</author>
      <pubDate>Wed, 24 Nov 2021 08:02:23 +0000</pubDate>
      <link>https://dev.to/srbhr/join-professionals-from-redhat-polypane-researchers-in-quantum-computing-at-git-commit-show-b0h</link>
      <guid>https://dev.to/srbhr/join-professionals-from-redhat-polypane-researchers-in-quantum-computing-at-git-commit-show-b0h</guid>
      <description>&lt;h2&gt;
  &lt;a href="#join-us-for-the-3rd-season-of-git-commit-show-live-online-on-27th-amp-28th-november-2021"&gt;
  &lt;/a&gt;
  Join us for the 3rd Season of Git Commit Show LIVE, ONLINE on 27th &amp;amp; 28th November, 2021.
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#masterclasses-and-showcases-on-devops-reactjs-web-development-community-engagement-rpa-and-much-more"&gt;
  &lt;/a&gt;
  Masterclasses and Showcases on DevOps, ReactJS, Web Development, Community Engagement, RPA and much more!
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://gitcommit.show/"&gt;Git Commit Show&lt;/a&gt;&lt;/strong&gt; is the leading online tech conference where &lt;strong&gt;senior engineers&lt;/strong&gt;, researchers, scientists and professors meet while &lt;strong&gt;being at home&lt;/strong&gt;. A 2-day long, online, 100% free meetup  where senior developers and researchers share their knowledge and breakthrough projects.&lt;br&gt;
Unlike other online conferences, it is fully &lt;strong&gt;interactive&lt;/strong&gt; with opportunities to connect with speakers and fellow attendees &lt;strong&gt;face to face&lt;/strong&gt;. The show &lt;strong&gt;started in 2019&lt;/strong&gt; to provide a better alternative to physical conferences by being open, free and inclusive of people who come from remote locations and modest backgrounds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-in-it-for-you"&gt;
  &lt;/a&gt;
  What's in it for you❓
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;GROW YOUR NETWORK&lt;/strong&gt; 👫 : Chance of meeting a lot of developers, enthusiasts, researchers. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;LEARN WHILE BEING AT HOME&lt;/strong&gt; 👩‍💻: Always wanted to be at a conference, but having troubles while travelling? We've got that covered. 

&lt;ul&gt;
&lt;li&gt;Git Commit Show is purely virtual, and with our platform you can have a face to face meet-up. &lt;/li&gt;
&lt;li&gt;You can ask, cross question and get suggestions on your work from the industry professionals. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;60+ YEARS of COMBINED WORK EXPERIENCE&lt;/strong&gt; 👨‍🏫: The Talks are going to be given by industry professionals who are at the top of their game, working in silence and letting their work do the talking. Some of them include :

&lt;ul&gt;
&lt;li&gt;Maanav Seth : Member of Quantum Computing Group, IIT Roorkee&lt;/li&gt;
&lt;li&gt;Karan Singh :  Senior Principal Architect at &lt;strong&gt;Red Hat&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Kilian Valkhof : &lt;strong&gt;Founder of Polypane&lt;/strong&gt; (Browser for building websites)&lt;/li&gt;
&lt;li&gt;Ken Soh :  Doing amazing work with TagUI &amp;amp; &lt;strong&gt;Robotic Process Animation&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Pachi Parra : Developer Relations &amp;amp; Creator of an online community for Non-Binary &amp;amp; Brazilian Women. &lt;/li&gt;
&lt;li&gt;Hemant Rangan : Author of &lt;strong&gt;Indian Mind at Work&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;And a lot more . . .  &lt;a href="https://gitcommit.show/"&gt;check out our website&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;EXPAND YOUR KNOWLEDGE IN 2 DAYS&lt;/strong&gt; 👨‍🎓: Come and join us, learn within 2 Days, be a part of this community as an attendee, volunteer or if you want, you can be a speaker as well!
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#apply-here-link"&gt;
  &lt;/a&gt;
  Apply here &lt;a href="http://push.gitcommit.show/"&gt;LINK&lt;/a&gt; 👈
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="http://push.gitcommit.show/"&gt;Apply&lt;/a&gt; as an Attendee or Volunteer with us for the event. There are a lot of opportunities. &lt;/li&gt;
&lt;li&gt;Join our Growing &lt;a href="https://discord.gg/JFWP8c2gPG"&gt;Discord&lt;/a&gt; and be a part of weekly events &amp;amp; many more. We also have plans for first time speakers to break their fear of public speaking. . . .because fear is a mind-killer! &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#important-dates"&gt;
  &lt;/a&gt;
  Important Dates 📅
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Event Starts 27th November 2021 (Saturday) (GMT+5:30 or IST)&lt;/li&gt;
&lt;li&gt;Event Ends 28th November 2021 (Saturday) (GMT+5:30 or IST)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rqj4YGZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o2hiyg0tka96ysyyx80.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rqj4YGZn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6o2hiyg0tka96ysyyx80.png" alt="Image description" width="620" height="620"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>opensource</category>
      <category>devops</category>
    </item>
    <item>
      <title>Top 10 Ruby on Rails Development Companies to Consider in 2022
</title>
      <author>Rachael Grey</author>
      <pubDate>Wed, 24 Nov 2021 07:29:15 +0000</pubDate>
      <link>https://dev.to/rachaelgrey3/top-10-ruby-on-rails-development-companies-to-consider-in-2022-3d4h</link>
      <guid>https://dev.to/rachaelgrey3/top-10-ruby-on-rails-development-companies-to-consider-in-2022-3d4h</guid>
      <description>&lt;p&gt;It is said that RoR is a trustworthy app for creating eCommerce websites and mobile apps. Ruby on Rails offers enterprises of all sizes and shapes a scalable, fast, marketable, and feature-rich, from startups to multinational enterprises. So to find the best &lt;em&gt;Ruby on Rails development company&lt;/em&gt; that can meet your needs is a no-brainer.&lt;/p&gt;

&lt;p&gt;More firms will go digital by 2022 than ever before. As a result, Ruby on Rails software development resurfaces as a viable possibility for developing apps. In this post, we'll look at the top ten Ruby on Rails application development businesses that provide low-cost, high-quality RoR application development.&lt;/p&gt;

&lt;h2&gt;Top 10 Ruby on Rails Development Company:&lt;/h2&gt;

&lt;p&gt;Here is the list of the top 10 &lt;b&gt;Ruby on Rails development companies&lt;/b&gt; that you should consider for developing your next project:&lt;/p&gt;

&lt;p&gt;&lt;b&gt;1. &lt;a href="https://www.bacancytechnology.com"&gt;Bacancy Technology&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Bacancy Technology is a top-ranked Ruby on Rails development firm. They are well-known for adhering to the industry's most reliable methods and creating very successful apps. There are 40+ experienced and skilled in-house Ruby specialists who have served clients worldwide and have made a top-notch impression as one of the Ruby on Rails firms in India. Their team consists of coders, designers, Ruby experts, and planners to create the ideal Ruby on Rails web app. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;2. BoTree Technologies&lt;/b&gt; &lt;br&gt;
BoTree Technologies is a famous Ruby on Rails development company with over ten years of expertise working with over one hundred clients in ten countries. The team consists of more than 30 experts who have built world-class apps for eCommerce, healthcare, logistics, and other industries.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;3. JetRuby&lt;/b&gt;&lt;br&gt;
JetRuby is one of the most well-known and qualified Ruby on Rails web and mobile app development firms. It is well-known for using disruptive techs to meet client objectives and develop world-class RoR solutions. Their communication is quite effective, and all of their clients are pleased with the level of engagement of their employees. They specialize in providing relevant Ruby on Rails apps to startups, small businesses, and major organizations.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;4. BairsDev&lt;/b&gt;&lt;br&gt;
Many big companies are choosing BairsDev for developing their top-notch Ruby on Rails products and as a result, it has become one of the best and preferable companies in Latin America. They've worked with startups, huge enterprises, and government firms. They offer complete outsourcing support and product testing through professionally managed units with good clarity.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;5. Netguru&lt;/b&gt;&lt;br&gt;
Without Netguru, no ranking of the top ten Ruby on Rails development companies for hiring Ruby on Rails experts would be complete. The firm has developed Ruby on Rails apps and solutions for Fortune 500 firms and helped startups and small enterprises scale. The firm has collaborated with many well-known firms to develop solutions that discuss real-world issues. They select the best structures for expanding your web app to match product requirements.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;6. Selleo&lt;/b&gt;&lt;br&gt;
Selleo has done over 150 projects in its region. They've worked with clients from the USA, the UK, Canada, Australia, and other countries. The company employs 230+ software experts, including Ruby on Rails developers and experts for various products. Selleo is known for improving your company's skills and promoting it to a more technically advanced position in the industry.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;7. Polcode&lt;/b&gt;&lt;br&gt;
Polcode is a globally Ruby on Rails programming firm that has developed over 1300 projects. With a lot of experience, the firm is now providing software development services to over 800 clients worldwide!&lt;/p&gt;

&lt;p&gt;&lt;b&gt;8. Sloboda Studio&lt;/b&gt;&lt;br&gt;
Sloboda Studio has been developing Ruby on Rails web apps for over ten years. They mostly target small to mid-sized companies. Clients from the trading, media, ad tech, and IT industries make up their client support. Sloboda Studio has a wonderful QA and engineering team that works together to create high-quality goods.&lt;/p&gt;

&lt;p&gt;Sloboda is well-known for its expertise in e-commerce and online content management. The organization boasts a staff of RoR professionals that have created products for some of the world's most well-known companies.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;9. CognitiveClouds&lt;/b&gt;&lt;br&gt;
CognitiveCloud is a Ruby on Rails web development company specializing in supporting startups and businesses by developing high-quality RoR apps. They assist early-stage companies by developing solutions that enable them to raise millions of dollars in capital and meet sales targets in a short amount of time.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;10. Shakuro&lt;/b&gt; &lt;br&gt;
Shakuro develops mobile apps and services for e-commerce, art communities, athletics, entertainment, banking, networking sites, and various other internet platforms. Their software remains on phones, and the web pages are famous for always being fast and cutting-edge.&lt;/p&gt;

&lt;p&gt;Before commencing any project, Shakuro's staff researches each company's aims and selects only those projects they believe can make a significant difference. Their best attribute is the layout, with each of their works feeling functional and helpful.&lt;/p&gt;

&lt;p&gt;It's never easy to put together a Ruby on Rails team that's right for your company. You probably won't know where to look unless you're a seasoned recruiter, which is perfectly fine! So I have recommended the top 10 companies to make your search as easy as possible!&lt;/p&gt;

&lt;p&gt;It's ideal if you don't settle for a mediocre RoR app. You'll never have to complain about your product if you choose from the list of these 10 &lt;a href="https://www.bacancytechnology.com/ruby-on-rails-development-company"&gt;Ruby on Rails development company&lt;/a&gt; mentioned here.&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>webdevelopmentcompany</category>
      <category>rubyonrailsdevelopers</category>
    </item>
    <item>
      <title>Quick Overview of CSS</title>
      <author>Ericawanja</author>
      <pubDate>Wed, 24 Nov 2021 07:26:45 +0000</pubDate>
      <link>https://dev.to/ericawanja/quick-overview-of-css-5b71</link>
      <guid>https://dev.to/ericawanja/quick-overview-of-css-5b71</guid>
      <description>&lt;p&gt;Css is an acronym for cascading style is a styling language for HTML documents. It is used to define the appearance of the html elements.&lt;/p&gt;

&lt;p&gt;In other words, we would call it the &lt;em&gt;make up&lt;/em&gt; for the HTML&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/fuJPZBIIqzbt1kAYVc/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/fuJPZBIIqzbt1kAYVc/giphy.gif" alt="gif" width="480" height="480"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-attach-css-to-html"&gt;
  &lt;/a&gt;
  How do you attach CSS TO HTML?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;External css&lt;/strong&gt;&lt;br&gt;
To attach a css file externally, you need to create a separate file, save it with .css extension and attach it on the head section of your html document. &lt;em&gt;Note&lt;/em&gt; that the href attribute is used to define the path to your css file. Thus you must ensure that the pathname is correct.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"myStylesheet.css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
&lt;span class="c"&gt;&amp;lt;!--the body--&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Internal css&lt;/strong&gt;&lt;br&gt;
When using internal css, the styles are defined inside the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags on the head section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#inline-css"&gt;
  &lt;/a&gt;
  Inline css
&lt;/h3&gt;

&lt;p&gt;The styles are defined inside the opening tag of the element as follows.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"color:red;"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;This is the first heading&lt;span class="nt"&gt;&amp;lt;/h&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#selectors"&gt;
  &lt;/a&gt;
  Selectors
&lt;/h2&gt;

&lt;p&gt;Selectors are used to select the code block you want to apply the styles.&lt;br&gt;
syntax;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nt"&gt;Selector&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="py"&gt;Style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;They can be divided into five;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. simple selectors&lt;/strong&gt;&lt;br&gt;
They include;&lt;br&gt;
-Element name e.g. &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;span&lt;/code&gt;,  &lt;code&gt;div&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Content&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-Id  e.g. &lt;code&gt;#title&lt;/code&gt;, &lt;code&gt;#first-par&lt;/code&gt;. &lt;strong&gt;Note&lt;/strong&gt;: that the id name should start with a &lt;strong&gt;#&lt;/strong&gt; symbol.&lt;br&gt;
e.g;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;'first-par'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Content&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nf"&gt;#first-par&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;-Class selector e.g.  &lt;strong&gt;.title&lt;/strong&gt; Note that the class name is preceded by a dot.&lt;br&gt;
eg;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;'par'&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Content&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nc"&gt;.par&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Combinator selector&lt;/strong&gt;&lt;br&gt;
They indicate relationship between elements. They include&lt;br&gt;
      -&lt;strong&gt;Descendant selector&lt;/strong&gt; e.g.  &lt;code&gt;div p{…..}&lt;/code&gt; selects &lt;em&gt;all the paragraph elements in div&lt;/em&gt;&lt;br&gt;
     -&lt;strong&gt;Child selector (&amp;gt;)&lt;/strong&gt;  e.g. &lt;code&gt;div &amp;gt;p{……}&lt;/code&gt; &lt;em&gt;selects all the p elements that are children of a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/em&gt;&lt;br&gt;
     -&lt;strong&gt;adjacent sibling ( + )&lt;/strong&gt;  selects an element that is directly after another specific element e.g. &lt;code&gt;div + p{…..}&lt;/code&gt; &lt;em&gt;selects all the paragraph after the div element&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Pseudo-class selector&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;They are used to add styles to selectors only after meeting a certain condition&lt;br&gt;
Syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;    &lt;span class="nt"&gt;Selector&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;pseudo-class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="py"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#FF00FF&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Pseudo-element selector&lt;/strong&gt;&lt;br&gt;
selects only a specific part of an element&lt;br&gt;
Syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;Selector&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;pseudo-class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="py"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="nd"&gt;::first-line&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ff0000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;font-variant&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;small-caps&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#flex-box-and-grid"&gt;
  &lt;/a&gt;
  Flex box and GRID
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Flexbox&lt;/strong&gt; is a one dimensional layout design where you specify if the items should be horizontally or vertically aligned.&lt;br&gt;
References: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout&lt;/a&gt; &lt;br&gt;
&lt;a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/"&gt;https://css-tricks.com/snippets/css/a-guide-to-flexbox/&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Grid&lt;/strong&gt; is a two dimension layout design i.e rows and columns.&lt;br&gt;
&lt;a href="https://css-tricks.com/snippets/css/complete-guide-grid/"&gt;https://css-tricks.com/snippets/css/complete-guide-grid/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#transitions"&gt;
  &lt;/a&gt;
  Transitions
&lt;/h2&gt;

&lt;p&gt;Transitions in CSS provide a way to control the speed of a changing property in css.&lt;br&gt;
 For instance, if you increase the width of an object it occurs instantly. However, with transitions you can decrease this speed such that you observe every change as it happens.&lt;br&gt;
Ref:&lt;br&gt;
-&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions/Using_CSS_transitions&lt;/a&gt;&lt;br&gt;
-&lt;a href="https://www.w3schools.com/css/css3_transitions.asp"&gt;https://www.w3schools.com/css/css3_transitions.asp&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#animations"&gt;
  &lt;/a&gt;
  Animations
&lt;/h2&gt;

&lt;p&gt;CSS animations makes it possible to animate different styles without using JavaScript or a library&lt;/p&gt;

&lt;p&gt;Ref:&lt;br&gt;
-&lt;a href="https://www.w3schools.com/css/css3_animations.asp"&gt;https://www.w3schools.com/css/css3_animations.asp&lt;/a&gt;&lt;br&gt;
-&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations"&gt;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Animations/Using_CSS_animations&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#responsive-web-design"&gt;
  &lt;/a&gt;
  Responsive web design
&lt;/h2&gt;

&lt;p&gt;Responsiveness is the art of ensuring that a web page looks good in all devices. That is, the  web design should adjust accordingly depending on the screen size, orientation and the platform.&lt;br&gt;
The common ways to achieving responsiveness is use of flexible grids, media queries, and setting the viewport.&lt;br&gt;
&lt;a href="https://i.giphy.com/media/9oIP19hZ9kzKJUmpdU/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/9oIP19hZ9kzKJUmpdU/giphy.gif" alt="Image description" width="480" height="348"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#media-queries"&gt;
  &lt;/a&gt;
  MEDIA QUERIES
&lt;/h2&gt;

&lt;p&gt;Media queries specify styles to be applied when certain conditions are meant.&lt;br&gt;
Example;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;lightblue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#breakpoints"&gt;
  &lt;/a&gt;
  Breakpoints
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;CSS breakpoints&lt;/strong&gt; are points where the website content responds according to the device width&lt;br&gt;
In the previous example, when the screen is resized to a maximum width of 600px, it will adopt to the given styles. i.e 600px is the breakpoint.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>css</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>HTML 5 and The Legends of the Elements</title>
      <author>Manu Martinez</author>
      <pubDate>Wed, 24 Nov 2021 07:21:58 +0000</pubDate>
      <link>https://dev.to/whitehatdevv/html-5-and-the-legends-of-the-elements-4h82</link>
      <guid>https://dev.to/whitehatdevv/html-5-and-the-legends-of-the-elements-4h82</guid>
      <description>&lt;p&gt;&lt;strong&gt;Hi!&lt;/strong&gt; so far we've been taking small bites of HTML cake but it's time to go further! ready?&lt;br&gt;
*&lt;em&gt;Let's go! 😁 *&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;First of all let's go in depth with elements, their &lt;em&gt;attributes&lt;/em&gt;, and ways to format them. Not forgetting that elements are constructed by an initial tag, the content and the closing tag, so we &lt;strong&gt;must always remember&lt;/strong&gt; to close them. However, sometimes, you should not have to close every tag which are called &lt;em&gt;empty elements&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Another point to remember is that tags can be &lt;em&gt;nested&lt;/em&gt; this means that they are inside each other, for example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;lorem &lt;span class="nt"&gt;&amp;lt;b&amp;gt;&lt;/span&gt;ipsum&lt;span class="nt"&gt;&amp;lt;/b&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It can be said that an HTML document is composed by &lt;strong&gt;nested tags&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#attributes"&gt;
  &lt;/a&gt;
  ATTRIBUTES
&lt;/h2&gt;

&lt;p&gt;In our previous posts we have talked about attributes, but what are these attributes like? To start you should know that :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Almost HTML elements can carry attributes, except for empty elements.&lt;/li&gt;
&lt;li&gt;They must always start at the initial tag.&lt;/li&gt;
&lt;li&gt;The values of the attributes must be enclosed in quotation marks.&lt;/li&gt;
&lt;li&gt;It is recommended to use "lowercase" attributes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An example of attributes can be :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"put here your link"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Oh yeah 😊&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#formatting-the-content"&gt;
  &lt;/a&gt;
  FORMATTING THE CONTENT
&lt;/h2&gt;

&lt;p&gt;How my code should look like? How do we do it? Well, HTML allows you to create a real visual format which is easy to understand by anyone. The first step to make your HTML look's perfectly is to highlight the words, with bold, italics, etc... And how does html play with this? Well, through tags! Why else would it be? &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-you-have-a-few-tags"&gt;
  &lt;/a&gt;
  HERE YOU HAVE A FEW TAGS:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;b&amp;gt;&lt;/span&gt; - Bold text
&lt;span class="nt"&gt;&amp;lt;strong&amp;gt;&lt;/span&gt; - Important text
&lt;span class="nt"&gt;&amp;lt;i&amp;gt;&lt;/span&gt; - Italic text
&lt;span class="nt"&gt;&amp;lt;em&amp;gt;&lt;/span&gt; - Emphasized text
&lt;span class="nt"&gt;&amp;lt;mark&amp;gt;&lt;/span&gt; - Marked text
&lt;span class="nt"&gt;&amp;lt;small&amp;gt;&lt;/span&gt; - Smaller text
&lt;span class="nt"&gt;&amp;lt;sub&amp;gt;&lt;/span&gt; - Subscript text
&lt;span class="nt"&gt;&amp;lt;sup&amp;gt;&lt;/span&gt; - Superscript text

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#-raw-ltstronggt-endraw-vs-raw-ltbgt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;STRONG&amp;gt;&lt;/code&gt; VS &lt;code&gt;&amp;lt;B&amp;gt;&lt;/code&gt; :
&lt;/h3&gt;

&lt;p&gt;The b and strong tags have the same visual meaning, nevertheless google gives always more importance to strong tag because it's above in the HTML hierarchy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#-raw-ltigt-endraw-vs-raw-ltemgt-endraw-"&gt;
  &lt;/a&gt;
  &lt;code&gt;&amp;lt;I&amp;gt;&lt;/code&gt; VS &lt;code&gt;&amp;lt;EM&amp;gt;&lt;/code&gt;:
&lt;/h3&gt;

&lt;p&gt;The i and em tag also has the same visual meaning, but  is usually used to describe technical words, and &lt;em&gt; for emphasis some text.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#comments"&gt;
  &lt;/a&gt;
  COMMENTS
&lt;/h3&gt;

&lt;p&gt;Finally, I always like to close talking about comments and documentation, YES 😆 do not kill me 🤓, I know every developer hate when they must document their code, but try to figure out what will happen if you want to check your code in the future, I am sure you will no be able to understand anything, comments are really important in a daily routine, you do not only know how to write it, you should know how to understand comments from other developers and how to adapt your code to the team software requirements, look's at this example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="c"&gt;&amp;lt;!--------------- comment ---------------------&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Oh 😞, this is the end of today's post, but don't worry, I have a little present for you! a cheatsheet with all the tags you need to become a master of HTML, in the following post I will allow to download this cheatsheet. Please do not forget:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You must be your own best version 🥳.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Get Original MD-100 Dumps for Your Exam Preparation.</title>
      <author>Michael Mateo</author>
      <pubDate>Wed, 24 Nov 2021 07:17:12 +0000</pubDate>
      <link>https://dev.to/michael94270813/get-original-md-100-dumps-for-your-exam-preparation-11cc</link>
      <guid>https://dev.to/michael94270813/get-original-md-100-dumps-for-your-exam-preparation-11cc</guid>
      <description>&lt;p&gt;Gets assured success under experts’ direction dealing with all the field aspects? As competent experts have authored this intelligent study guide, it contains all the essential details about the exam. You will find MD-100 Dumps very comprehensive because it is filled with the point explanation of every topic. Once you read it methodically, you will know about all the critical concepts within the field. Boosting presentations with online practice tests can benefit you more. After getting free from Windows 10 Exam, you can get training through an online practice test. It is the best way to recover your performance manifolds. It is a practice that imparts you to perform in an actual situation. You will get rid of so many mistakes with the help of an online repetition test. &lt;br&gt;
Original Windows 10 PDF documents at an affordable price with a guarantee&lt;br&gt;
Pay the minimal amount to download Windows 10 Release 1809 and later Dumps Study Material to prepare interestingly within a short time. With this study guide, we will provide you with a complete set of exam-related services at Dumpsgroup.com for your best learning. It is only because of the involvement and confidence of experts that you are getting a money-back guarantee as well. If you fail to get your desired result, we will repay your payment according to the money-back policy. Now you can easily hire the set of services required to excellently prepare your IT exam with the help of experts’ guidance at Dumpsgroup.com. You are supposed to show excellent performance in the final exam with sample questions. If you work rendering to the schedule presented in this short Guide, you will pass your exam by the first attempt. Our qualified experts have done the arduous and dedicated job of inspiring the factual information of the field in you through Spoto MD-100 Practice Questions Answers. You can avail of this accident to get assurance for your success in the first attempt. In the following lines, you will come to know about some physiognomies of this study stuff. &lt;br&gt;
 Microsoft questions and answers with success at first attempt&lt;br&gt;
Here, we provide you with rules laid down by our experts for a fantastic presentation in the final exam. They will be keeping an eye on your presentation so that it can be tuned where needed. Windows 10 Dumps has been compiled in the hands of qualified experts, and they know about the best use. These rules will enhance your performance at the possible level by reducing your mistakes to the least. We have made your success with a money-back guarantee with Windows 10 Release 1809 and later Study Guide. You are going to secure better grades with the help of this material than you can envisage.&lt;br&gt;
Online Windows 10 Release 1809 and later practice test as an exam simulator&lt;br&gt;
Specialists deem online practice test highly useful for absconding from all kinds of errors in the final exam. Once you are free from the MD-100 Spoto Practice Test study, you can go further for practice on this testing exercise. You will get to know about your errors and then will be able to make alterations. This idea will bring a tremendous change in your result by moving your performance positively. It is the vital need of each IT possibility to have a solid report direct and can be expected to be seen in the last, most crucial test. Dumpsgroup.com comprehended this prerequisite and shaped Windows 10 Dumps with the participation of equipped specialists. You won't find such a short and wide portrayal of test points. None of the angles has been hopped to impart an intensive comprehension of the control in the understudies. By having so profound comprehension of this subject, you can split your IT confirmation with Microsoft Questions Answers without much of a stretch. On the off chance that you counsel a talented master for proposal, we will recommend you this thorough Guide for such a large number of reasons. A bundle of test-related managements has been offered to you as one Guide. You can improve your arrangement with the thought of online practice tests. This test is to build up a genuine understanding of the field. IT substitutes can't think to pass this assertion without looking for help from a legitimate report control like the one referenced here. It rushes to download this PDF control from the given webpage at an entirely sensible cost. &lt;br&gt;
Vast knowledge of the exam, hold your prosperity with Dumpsgroup.com experts.&lt;br&gt;
You won't find such a point-by-point through the short depiction of the test subjects anyplace else. By examining this stuff, you will have a complete comprehension of the field that will make you sufficiently sure to respond to each address rapidly. When you get mindfulness pretty much all the edges of the field, you will have a profound understanding of every test subject. The example of this Microsoft PDF helps you remember all the data given in this for a particular endeavour. You are surely going to pro your IT affirmation by the primary endeavour. Your wealth has been safeguarded with a legitimate introduction of appropriate data in questions and answers. Our authorities have enjoyed the IT test for a while, so they have cut this Guide with their broad experience. The example of MD-100 Dumps PDF helps you recall all the data given in this for a particular endeavour. You are going to treasure the stuff ever after your test. This brief and short Windows 10 Release 1809 and later Dumps Question Answers documents manage made it unfathomably simpler to get ready inside a brief timeframe. You can begin your planning right now by downloading this check stuff at a truly reasonable cost. In the wake of thinking about the demo questions and value, you will find this offer attractive. Contact us at &lt;a href="mailto:support@dumpsgroup.com"&gt;support@dumpsgroup.com&lt;/a&gt; in case of any query.&lt;br&gt;
For more info: &lt;a href="https://www.dumpsgroup.com/microsoft/md-100-dumps.html"&gt;https://www.dumpsgroup.com/microsoft/md-100-dumps.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>md100dumps</category>
    </item>
    <item>
      <title>[ 🎥 Workshop] Building a Zoom clone in Flutter </title>
      <author>Arpit Mishra</author>
      <pubDate>Wed, 24 Nov 2021 07:12:40 +0000</pubDate>
      <link>https://dev.to/100mslive/-workshop-building-a-zoom-clone-in-flutter-o87</link>
      <guid>https://dev.to/100mslive/-workshop-building-a-zoom-clone-in-flutter-o87</guid>
      <description>&lt;p&gt;We can't keep calm #100ms is back with another exciting workshop.🤩&lt;/p&gt;

&lt;p&gt;Build a Zoom clone in Flutter with Vivek Yadav (Google Developer Expert in Flutter, Building Mobile at ZestMoney) on 2nd December at 10:00 AM ET | 8:30 PM IST. &lt;/p&gt;

&lt;p&gt;In this #workshop,&lt;br&gt;
☝️ Understand how Zoom works&lt;br&gt;
🤘 Integrate the 100ms Flutter SDK&lt;br&gt;
🖖 Build features like mute/unmute, leave/join room &amp;amp; messaging.&lt;/p&gt;

&lt;p&gt;Excited? Register here: 👇&lt;/p&gt;

&lt;p&gt;&lt;a href="https://community.100ms.live/zoom-clone-flutter"&gt;https://community.100ms.live/zoom-clone-flutter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>flutter</category>
      <category>android</category>
      <category>kotlin</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>What is the Microsoft Azure Administrator?</title>
      <author>robertjames1236789</author>
      <pubDate>Wed, 24 Nov 2021 07:09:48 +0000</pubDate>
      <link>https://dev.to/robertjames1236789/what-is-the-microsoft-azure-administrator-14pp</link>
      <guid>https://dev.to/robertjames1236789/what-is-the-microsoft-azure-administrator-14pp</guid>
      <description>&lt;h1&gt;&lt;strong&gt;What is the Microsoft Azure Administrator?&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;The Microsoft Azure Administrator is the most popular Azure certification among candidates. &lt;a href="https://www.study4exam.com/microsoft/azure-administrators"&gt;&lt;strong&gt;Microsoft Azure Administrator&lt;/strong&gt;&lt;/a&gt; certificate offers the most practical knowledge for managing Azure infrastructure. With this certification you can pivot into any career path for Azure-based roles.&lt;/p&gt;

&lt;p&gt;If Azure is the primary workload your business uses, then this cloud certification is an essential Azure certification that you must earn.&lt;/p&gt;

&lt;p&gt;If you are completely new to Azure, even if you have a different cloud certification, I highly recommend that you take the AZ-900 first. This reason behind this is that Azure certifications at the associate level are very much difficult to achieve than any other certification, even from other cloud service providers. And Microsoft Azure Administrator certificate although appears to be similar in terms of service, it is very different in practice.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;AWS Solution Architect vs. Azure Administrator&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;If you have any how know with AWS certifications, then you should know that, in terms of importance, it is the equivalent of the AWS Associate Solution Architect.&lt;/p&gt;

&lt;p&gt;The Azure Administrator is more like a mix between AWS Developer Associate and AWS SysOps Administrator, in terms of content.&lt;/p&gt;

&lt;p&gt;This makes sense because Azure’s cloud architecture is used as a bridge to on-premises solution of Microsoft’s legacy. Therefore, designing cloud-native solutions in the abstract is secondary, where understanding how to bring existing Microsoft-based companies to Azure comes first.&lt;/p&gt;

&lt;p&gt;There will be an additional learning curver for those who are going to work in an IT career experiencing Active Directory, Windows serves, and general Windows administration.&lt;/p&gt;

&lt;p&gt;Azure is a Windows cloud service provider first, and if you don't own a Windows PC, you may just be able to observe and then directly experience how to use some of Azure's cloud services.&lt;/p&gt;

&lt;p&gt;As it is already mentioned earlier, Azure associate certifications are much difficult than other &lt;a href="https://www.study4exam.com/microsoft-exams"&gt;&lt;strong&gt;Microsoft Exams&lt;/strong&gt;&lt;/a&gt; or any other cloud service providers, so you need to spend more time for their preparation.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Microsoft Azure Administrator Overview&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Microsoft Azure Administrator certification covers the following:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;Azure Active Directory&lt;/li&gt;
    &lt;li&gt;User, groups and permissions&lt;/li&gt;
    &lt;li&gt;Policies to ensure compliance with resources&lt;/li&gt;
    &lt;li&gt;Infrastructure as code via Azure Resource Manager&lt;/li&gt;
    &lt;li&gt;Manage resources, reach, and subscriptions&lt;/li&gt;
    &lt;li&gt;Containers and Kubernetes&lt;/li&gt;
    &lt;li&gt;Azure Virtual Machines and Azure Disks&lt;/li&gt;
    &lt;li&gt;Multiple storage models through Azure storage accounts&lt;/li&gt;
    &lt;li&gt;Azure Networking (there is a lot to cover here)&lt;/li&gt;
    &lt;li&gt;SLA availability, availability sets, scale sets, application gateway&lt;/li&gt;
    &lt;li&gt;Azure application services for fully managed applications&lt;/li&gt;
    &lt;li&gt;Azure Backup, Azure Monitor&lt;/li&gt;
    &lt;li&gt;and more...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Microsoft Azure Administrator exam doesn't cover things like serverless, databases, and application integration. You can find them in the Azure Developer Certification.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;How Do You Get Certified as an Microsoft Azure Administrator?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;You can get certified by paying the exam fee and taking the exam at a test center partner with Microsoft Azure.&lt;/p&gt;

&lt;p&gt;Microsoft Azure is partnered with Pearson Vue and PSI Online. Pearson Vue have a network of test centers around the world. They provide in-person and online exams. It is recommended that you should take the exam in person if you get the opportunity. Microsoft has a portal page on Pearson Vue where you can register and reserve your exam. This exam can cost you $165 USD.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Guide for the Preparation of Microsoft Azure Administrator Exam&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Microsoft offers guides and sources to brush up on your Azure knowledge. You can also check out MS learn for more in-depth source material. There are one on one Azure certification training courses available online to get a thorough understanding of the features of the platform. Since it is a very application-heavy exam, lab work is important. Using Azure and exploring all the domains is important. It is better to get as much hands-on experience with Azure as possible. Familiarity with its features and the types of questions asked will be helpful in the exam. Solving previous years questions will help you gauge your understanding of the topic very well. Practice tests are a must. Simulate the exam conditions and see how you fare in those tests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.study4exam.com"&gt;&lt;strong&gt;Study4Exam&lt;/strong&gt;&lt;/a&gt; is the only authentic source of practice tests that you can find on the web. With their various customization features you can practice as much as you need and whereever you need. The best thing is that they provide practice tests in two simple formats i.e. Desktop practice tests and Web Engine practice tests. Both are available to run the program in offline and online environment. So that you can practice your Microsft Azure Administrator exams at anytime, anyplace.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Azure Administrator Exams Desktop Practice Test Software&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The Azure Administrator Exams Desktop Practice Test Software is loaded with tons of features. The best feature, among all other aspects, is the customization option in Azure Administrator Exams Desktop practice test software. There are a lot of things that you can change according to your need. The software allows you to modify the number of questions you can get in one particular exam. You can have much difficulty by changing the passing marks of the exam. Moreover, you can also have the option to set a time limit to your exam. In this way, you learn time management and try to complete the exam in a fixed time. You cannot get as many features with much less price from anywhere.&lt;/p&gt;

&lt;h3&gt;&lt;strong&gt;Azure Administrator Exams Web-Based Azure Administrator Exams Practice Test&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;The Web-Based Azure Administrator Exams Practice Test evaluates your preparation with its self-assessment features. You get to know about your deficiency in preparation. This way you know which topics need more of your attention. If you are confident about your preparation, the Web-Based Azure Administrator Exams Practice Test is here to evaluate your preparation. Furthermore, the online engine simulates the actual exam environment with its customizable passing percentage, types of questions and time limiting features which make you experience the real exam scenarios. This boosts your overall confident and makes you more prepared for the PMI Azure Administrator Exams exam.&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;It is important to verify your knowledge and proficiency in IT architecture through certification exams. Microsoft Azure Administrator Exams can help you further develop in the IT field and create better opportunities in the future. Good luck with the Azure Administrator certification exams!&lt;/p&gt;

</description>
      <category>azure</category>
      <category>microsoft</category>
      <category>azureadminstrator</category>
      <category>administrator</category>
    </item>
    <item>
      <title>What is a Web API in JS? </title>
      <author>jC-blip-ux</author>
      <pubDate>Wed, 24 Nov 2021 07:05:00 +0000</pubDate>
      <link>https://dev.to/jcblipux/what-is-a-web-api-in-js-jc0</link>
      <guid>https://dev.to/jcblipux/what-is-a-web-api-in-js-jc0</guid>
      <description>&lt;p&gt;A Web API is an ultimate developer goal which can help increase the functionality of the browser, making it more efficient and friendly in its own kind.&lt;br&gt;
The most complex functions and readability can be managed by simplifying with the use of API's.&lt;br&gt;
Easy syntax can be brought into consideration, as it has been a task to work upon complex code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;An API?&lt;/strong&gt;&lt;br&gt;
API stands for Application Programming Interface.&lt;br&gt;
It can be considered to be part of either a Web, Browser or Server as mentioned can provide the functionality to a web browser.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A Web API is an application programming interface for the Web.&lt;/p&gt;

&lt;p&gt;A Browser API can extend the functionality of a web browser.&lt;/p&gt;

&lt;p&gt;A Server API can extend the functionality of a web server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Third Party APIs&lt;br&gt;
Third party APIs are not built into your browser. These are also used as an extension and can be downloaded from the web of an already existing platform supporting API's&lt;/p&gt;

&lt;p&gt;To use these APIs, you will have to download the code from the Web.&lt;/p&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;YouTube API - Allows you to display videos on a web site.&lt;br&gt;
Twitter API - Allows you to display Tweets on a web site.&lt;br&gt;
Facebook API - Allows you to display Facebook info on a web site.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To fetch an API from a file&lt;br&gt;
We can come across this with an example, given below:&lt;/p&gt;

&lt;p&gt;A Fetch API Example&lt;br&gt;
The example below fetches a file and displays the content:&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;fetch(file)
.then(x =&amp;gt; x.text())
.then(y =&amp;gt; myDisplay(y));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since Fetch is based on async and await, the example above might be easier to understand like this:&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;async function getText(file) {
  let x = await fetch(file);
  let y = await x.text();
  myDisplay(y);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or even bettter: Use understandable names instead of x and y:&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;async function getText(file) {
  let myObject = await fetch(file);
  let myText = await myObject.text();
  myDisplay(myText);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can also add API's from our own History!&lt;/p&gt;

&lt;p&gt;The Web History API provides easy methods to access the &lt;code&gt;windows.history&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;window.history&lt;/code&gt; object contains the URLs (Web Sites) visited by the user.&lt;/p&gt;

&lt;p&gt;The History back() Method &lt;/p&gt;

&lt;p&gt;The back() method loads the previous URL in the windows.history list.&lt;/p&gt;

&lt;p&gt;the "back arrow" in your browser can also be used as an alternative.&lt;/p&gt;

&lt;p&gt;Example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;button onclick="myFunction()"&amp;gt;Go Back&amp;lt;/button&amp;gt;

&amp;lt;script&amp;gt;
function myFunction() {
  window.history.back();
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
    </item>
    <item>
      <title>What kind of Developer do I want to be?</title>
      <author>Kindred</author>
      <pubDate>Wed, 24 Nov 2021 06:55:20 +0000</pubDate>
      <link>https://dev.to/kvyshh/roadmap-to-learning-what-kind-of-developerprogrammerengineer-you-are-2m2j</link>
      <guid>https://dev.to/kvyshh/roadmap-to-learning-what-kind-of-developerprogrammerengineer-you-are-2m2j</guid>
      <description>&lt;p&gt;Whether you're just starting your journey in the technical field, half way through, or fully integrated, it's always a good practice to step back in your career and ask yourself a few things: &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#were-going-to-assume-at-this-point-youve-made-the-decision-to-pursue-the-life-of-a-developerengineerprogrammer-if-youre-looking-for-a-is-tech-the-right-choice-for-me-article-this-wont-cover-it"&gt;
  &lt;/a&gt;
  (we're going to assume at this point, you've made the decision to pursue the life of a "Developer"/"Engineer"/"Programmer" -- if you're looking for a "Is tech the right choice for me?" article, this won't cover it.)
&lt;/h6&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Why am I pursuing this role? &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Why am I in the role that I'm in now?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Am I still passionate about what I'm pursuing?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Am I still passionate about what I'm doing?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Where do I want to go next?&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With these questions and maybe answers in mind, lets consider some options to help you build the best career path for you! &lt;/p&gt;

&lt;h6&gt;
  &lt;a href="#i-want-to-mention-that-this-isnt-a-sayalldoall-article-i-wanted-to-create-this-article-to-help-inspire-or-reinspire-people-about-their-career-options-and-path-you-should-continue-to-do-research-about-the-many-titles-developers-hold-and-decide-whats-right-for-you"&gt;
  &lt;/a&gt;
  I want to mention that this isn't a say-all-do-all article, I wanted to create this article to help inspire or re-inspire  people about their career options and path. You should continue to do research about the many titles developers hold, and decide what's right for you.
&lt;/h6&gt;

&lt;h2&gt;
  &lt;a href="#the-journey"&gt;
  &lt;/a&gt;
  The Journey
&lt;/h2&gt;

&lt;p&gt;The timeline of an engineer will generally be forever growing as you know may know we are what they call "eternal students". However, at the beginning it falls along these lines, and when you're looking into roles, consider where you are in this timeline.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#chapter-1-introductions-to-programming-and-code"&gt;
  &lt;/a&gt;
  Chapter 1: Introductions to programming and code.
&lt;/h4&gt;

&lt;p&gt;This is the start of your journey as a programmer; where you'll learn all the important fundamentals of code.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#chapter-2-experimenting"&gt;
  &lt;/a&gt;
  Chapter 2: Experimenting
&lt;/h4&gt;

&lt;p&gt;You're at the point where you're trying things out, learning a new language, and discover what you like and dislike.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#chapter-3-specialization"&gt;
  &lt;/a&gt;
  Chapter 3: Specialization
&lt;/h4&gt;

&lt;p&gt;Picking a focus area and become an expert in that area.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#chapter-4-expanding-building-on-other-skills-andor-more-technicality"&gt;
  &lt;/a&gt;
  Chapter 4: Expanding / Building on other skills and/or more technicality
&lt;/h4&gt;

&lt;p&gt;At this point you know what you want to do and you're looking at the best way to develop things like your leadership skills, communication, business development, or building a &lt;em&gt;new&lt;/em&gt; language&lt;/p&gt;

&lt;p&gt;... and you can keep building from there. The possibilities are endless, it just depends on how much effort, time, and money you're willing to put in.&lt;/p&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-sidebar-on-the-what-it-means-to-be-a-software-engineer-vs-software-developer-vs-programmer"&gt;
  &lt;/a&gt;
  Quick Side-bar on the what it means to be a "Software Engineer" vs "Software Developer" vs "Programmer"
&lt;/h3&gt;

&lt;p&gt;I don't want to go into too much detail about the naming convention of the titles as a "Programmer", but I do want to mention it because I think it's important to acknowledge what it may mean in the professional field. I personally think they can be interchanged.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The Programmer&lt;/em&gt;&lt;/strong&gt;: This is someone who knows how to code, They know at least one programming language and know it well enough that they can make things happen by typing the code into their computer.&lt;/p&gt;

&lt;p&gt;Some programmers graduate from a university with a computer science degree and know how to code. They would qualify. Others pick up a book and teach themselves to code on their own. They would qualify too.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The Developer&lt;/em&gt;&lt;/strong&gt;: When someone talks about a developer, sometimes they use the term to mean something more than programmer. A programmer asks me, “what should I code?” or “how do you want me to do it?” In those cases, I'm making the bigger decisions and the programmer is implementing things.&lt;/p&gt;

&lt;p&gt;Developers have enough experience to have seen problems before and to know what worked and what didn't. With developers you can normally describe a destination, and they design the route they'll take. The difference between a programmer and a developer is one of degree. One is more resourceful than the other. Moving from one to the other requires time, effort, and experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;The Engineer&lt;/em&gt;&lt;/strong&gt;: Software engineers are a different dynamic altogether, for some. It's because of the “engineering” part of the term.&lt;/p&gt;

&lt;p&gt;To remind you, it doesn't matter where/how software engineers gain their knowledge. It's not suggesting they must have a degree. Engineering is a discipline. It requires that you know a set of knowledge. Engineering requires a level of abstract thinking. We're not just talking about creating a plan before you write code. We're talking about creating mental models of how the parts of a system will work. Models that help you refine your designs.&lt;/p&gt;

&lt;p&gt;Conclusion: At the end of the day, what really matters is what you want to call yourself and what you believe you are. There is no "right" or "wrong" to how you title yourself (so long as you're being honest to yourself). This side-bar was just to touch on some opinions on what the title means to some people in the industry. “&lt;strong&gt;&lt;em&gt;Good programmers are good programmers, no matter what special title they have.&lt;/em&gt;&lt;/strong&gt;”&lt;/p&gt;

&lt;p&gt;-- &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-roadmap-where-to-start"&gt;
  &lt;/a&gt;
  The Roadmap - Where to start.
&lt;/h2&gt;

&lt;p&gt;So if you've done any searching around into different 'developer' titles, you'll quickly realize there are about 100 different tiles you can choose from. Narrowing that down can be daunting when you're first starting out, but the good news is a lot of them can be categorized into larger 'umbrella' role-titles to help your narrow your focus.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#frontend-developer"&gt;
  &lt;/a&gt;
  Front-End Developer
&lt;/h3&gt;

&lt;p&gt;Builds websites by converting data to a graphical interface for the user to view and interact with. Their main concerns relate to the presentation layer; they need to have some artistic vision to present the data; this generally implies mastering HTML, CSS, some CSS pre-processor like SAS, and some (mainstream) JavaScript frameworks such as Angular, React or Vue.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#nontechnical-qualities-to-have"&gt;
  &lt;/a&gt;
  Non-Technical Qualities to have:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Project Management&lt;/li&gt;
&lt;li&gt;Excellent Communication &lt;/li&gt;
&lt;li&gt;Time Management&lt;/li&gt;
&lt;li&gt;Quick/Effective Decision Making&lt;/li&gt;
&lt;li&gt;Working under pressure&lt;/li&gt;
&lt;li&gt;Attention for visual detail&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#am-i-a-fit"&gt;
  &lt;/a&gt;
  Am I a fit?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;I like to work with people, whether it's team-members or clients, and being able to bring someones idea to life.&lt;/li&gt;
&lt;li&gt;I work well under pressure and I can handle eyes on me and my work&lt;/li&gt;
&lt;li&gt;When push comes to shove, I can make a yes or no decision on project capabilities, features, and deadlines&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#technical-skills"&gt;
  &lt;/a&gt;
  Technical Skills
&lt;/h5&gt;

&lt;p&gt;HTML, CSS, Vanilla JS, jQuery, Content management systems &lt;br&gt;
BONUS: UX/UI Design Skills, Adobe Suite, Branding, Creating Guide Styles&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#various-titles"&gt;
  &lt;/a&gt;
  Various Titles
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Front-End Engineer/Developer&lt;/li&gt;
&lt;li&gt;Web Developer/Web Designer&lt;/li&gt;
&lt;li&gt;Front-End Architect&lt;/li&gt;
&lt;li&gt;Presentation Layer Developer&lt;/li&gt;
&lt;li&gt;Interface Developer&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#thinking"&gt;
  &lt;/a&gt;
  Thinking
&lt;/h5&gt;

&lt;p&gt;Mock-up/Storyboard&lt;br&gt;
Receiving a mock-up or storyboard from a client, ux/ui designer, or design team.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gPj0QfzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4u93kcqs4a3an4ykpbj.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gPj0QfzN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o4u93kcqs4a3an4ykpbj.jpeg" alt="Image description" width="880" height="781"&gt;&lt;/a&gt;&lt;br&gt;
Plan of Action&lt;br&gt;
Thinking about the time it will take to build each component; is it going to be one page, multiple pages, what data is this pulling from, what are we consistently changing?&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9GYaYpGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsra483qg7qlwdm3j9ql.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9GYaYpGi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zsra483qg7qlwdm3j9ql.jpeg" alt="Image description" width="880" height="781"&gt;&lt;/a&gt;&lt;br&gt;
Building Dynamic Code&lt;br&gt;
Creating code that any developer can read and iterate on. Making the most of re-usable code on multiple pages&lt;br&gt;
HTML&lt;br&gt;
Properly labeling and id-ing items so they can easily be accessed in CSS or through a CSS program&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;head&amp;gt;
&amp;lt;meta name="description" content=""&amp;gt;
&amp;lt;meta name="author" content="Tooplate"&amp;gt;
&amp;lt;title&amp;gt;ArtXibition HTML Event Template&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;div id="js-preloader" class="js-preloader"&amp;gt;
      &amp;lt;div class="preloader-inner"&amp;gt;
        &amp;lt;span class="dot"&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;div class="dots"&amp;gt;
          &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;
          &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;
          &amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;JavaScript&lt;br&gt;
Creating component based elements and styling your code so that it's easily manipulatable and readable. Notice that when you create something you want to be able to think about where and how it can be used else where.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function focusable( element, isTabIndexNotNaN ) {
    var map, mapName, img,
        nodeName = element.nodeName.toLowerCase();
    if ( "area" === nodeName ) {
        map = element.parentNode;
        mapName = map.name;
        if ( !element.href || !mapName || map.nodeName.toLowerCase() !== "map" ) {
            return false;
        }
        img = $( "img[usemap='#" + mapName + "']" )[ 0 ];
        return !!img &amp;amp;&amp;amp; visible( img );
    }
    return ( /input|select|textarea|button|object/.test( nodeName ) ?
        !element.disabled :
        "a" === nodeName ?
            element.href || isTabIndexNotNaN :
            isTabIndexNotNaN) &amp;amp;&amp;amp;
        // the element and all of its ancestors must be visible
        visible( element );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;CSS&lt;br&gt;
Matching the styling to the mock-up while also making it the most dynamic by applying proper class and IDs.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;html, body {
  font-family: 'Poppins', sans-serif;
  font-weight: 400;
  background-color: #fff;
  font-size: 16px;
  -ms-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  text-decoration: none !important;
}

h1, h2, h3, h4, h5, h6 {
  margin-top: 0px;
  margin-bottom: 0px;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#pay"&gt;
  &lt;/a&gt;
  Pay
&lt;/h5&gt;

&lt;p&gt;In US with 1-3 years of experience at a mid-size company: ~$97k (Junior)&lt;br&gt;
In US with 8+ years of experience at a mid-size company: ~$124 (Senior)&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#things-to-consider"&gt;
  &lt;/a&gt;
  Things to consider
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;"Web Developer" is the #1 searched job-title in the development field&lt;/li&gt;
&lt;li&gt;"Front-End Engineer" is the #4 top ranking&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#you-should-reconsider-if"&gt;
  &lt;/a&gt;
  You should reconsider if...
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;You are not looking to have EXCELLENT communication skills&lt;/li&gt;
&lt;li&gt;Don't enjoy working with a lot of different people&lt;/li&gt;
&lt;li&gt;Crack under pressure&lt;/li&gt;
&lt;li&gt;You are not the most design-oriented person and don't wish to be &lt;/li&gt;
&lt;li&gt;You are not great at managing multiple tasks and deadlines&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;
  &lt;a href="#backend-developer"&gt;
  &lt;/a&gt;
  Back-End Developer
&lt;/h3&gt;

&lt;p&gt;Builds the functionality and interactivity of a website, including the elements that allow users to carry out actions like logging in, creating an account, and user data input. Backend developers work implementing the business logic. They have to have knowledge of frameworks, software architecture, design patterns, databases, APIs, interconnectivity, DevOps, etc. They need to be able to manage abstract concepts and complex logic.&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#nontechnical-qualities-to-have"&gt;
  &lt;/a&gt;
  Non-Technical Qualities to have:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Logical and solutions oriented &lt;/li&gt;
&lt;li&gt;Abstract thinking&lt;/li&gt;
&lt;li&gt;Pattern recognition &lt;/li&gt;
&lt;li&gt;Communication with team&lt;/li&gt;
&lt;li&gt;Detail &amp;amp; Security Oriented&lt;/li&gt;
&lt;li&gt;Researcher&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#am-i-a-fit"&gt;
  &lt;/a&gt;
  Am I a fit?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;When I'm given a problem, I like to take a moment to write down solutions and how to get there&lt;/li&gt;
&lt;li&gt;I'm always looking for more interesting ways to solve problems and make it adaptable - its not always about what is the 'shortest'&lt;/li&gt;
&lt;li&gt;I like creating systems for more efficient ways to execute on tasks&lt;/li&gt;
&lt;li&gt;I want to be sure that I have a calculated risk before I go in on something and consult with others&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#technical-skills"&gt;
  &lt;/a&gt;
  Technical Skills
&lt;/h5&gt;

&lt;p&gt;Python, Java (NOT JS), PHP, MySQL, C, C++, Ruby&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#various-titles"&gt;
  &lt;/a&gt;
  Various Titles
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Software Engineer&lt;/li&gt;
&lt;li&gt;Back-end Engineer&lt;/li&gt;
&lt;li&gt;Data Engineer &lt;/li&gt;
&lt;li&gt;SQL/Java/[language] Engineer&lt;/li&gt;
&lt;li&gt;Network Engineer&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;
  &lt;a href="#thinking"&gt;
  &lt;/a&gt;
  Thinking
&lt;/h5&gt;

&lt;p&gt;Data from server/website/network&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---u-abTMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hiy7p27rd0hi2zxg9upc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---u-abTMd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hiy7p27rd0hi2zxg9upc.png" alt="Image description" width="880" height="392"&gt;&lt;/a&gt;&lt;br&gt;
Creating a framework for where data comes and goes as well as functionality (what to do with it)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uFqVTUxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nncu15sjel6goxqubyl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uFqVTUxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0nncu15sjel6goxqubyl.png" alt="Image description" width="880" height="1408"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Building the code to consider time-space complexity but also be dynamic when needed. Data should be easily accessible by other teams and placing security measures where important data is passed. Commenting to allow other engineers to easily iterate.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class Job: 
        def __init__(self, start, finish, profit): 
            self.start = start 
            self.finish = finish 
            self.profit = profit 


    # A Binary Search based function to find the latest job 
    # (before current job) that doesn't conflict with current 
    # job. "index" is index of the current job. This function 
    # returns -1 if all jobs before index conflict with it. 
    def binarySearch(job, start_index): 
        # https://en.wikipedia.org/wiki/Binary_search_algorithm

        # Initialize 'lo' and 'hi' for Binary Search 
        lo = 0
        hi = start_index - 1

        # Perform binary Search iteratively 
        while lo &amp;lt;= hi: 
            mid = (lo + hi) // 2
            if job[mid].finish &amp;lt;= job[start_index].start: 
                if job[mid + 1].finish &amp;lt;= job[start_index].start: 
                    lo = mid + 1
                else: 
                    return mid 
            else: 
                hi = mid - 1
        return -1

    # The main function that returns the maximum possible 
    # profit from given array of jobs 
    def schedule(job): 
        # Sort jobs according to start time 
        job = sorted(job, key = lambda j: j.start) 

        # Create an array to store solutions of subproblems. table[i] 
        # stores the profit for jobs till arr[i] (including arr[i]) 
        n = len(job) 
        table = [0 for _ in range(n)] 

        table[0] = job[0].profit; 

        # Fill entries in table[] using recursive property 
        for i in range(1, n): 

            # Find profit including the current job 
            inclProf = job[i].profit 
            l = binarySearch(job, i) 
            if (l != -1): 
                inclProf += table[l]; 

            # Store maximum of including and excluding 
            table[i] = max(inclProf, table[i - 1]) 

        return table[n-1] 

    # Driver code to test above function 
    job = [Job(1, 2, 50), Job(3, 5, 20), 
        Job(6, 19, 100), Job(2, 100, 200)] 
    print("Optimal profit is"), 
    print(schedule(job))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h5&gt;
  &lt;a href="#pay"&gt;
  &lt;/a&gt;
  Pay
&lt;/h5&gt;

&lt;p&gt;In US with 1-3 years of experience at a mid-size company: ~$117k (Junior)&lt;br&gt;
In US with 8+ years of experience at a mid-size company: ~$154k (Senior)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#things-to-consider"&gt;
  &lt;/a&gt;
  Things to consider
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Back end development can be offered as an independent service in the form of BaaS&lt;/li&gt;
&lt;li&gt;The backend web developer should understand the goals of the website and come up with effective solutions which also means understand the front-end well&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#you-should-reconsider-if"&gt;
  &lt;/a&gt;
  You should reconsider if...
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;You generally give up after a few attempts at a problem&lt;/li&gt;
&lt;li&gt;You are quick to asking someone else for the answer before researching on your own&lt;/li&gt;
&lt;li&gt;You are more reactive and less risk-accessing &lt;/li&gt;
&lt;li&gt;You have don't like looking at data and working with algorithms&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#fullstack-developer"&gt;
  &lt;/a&gt;
  FullStack Developer
&lt;/h3&gt;

&lt;p&gt;Is able to work on both the front end and back end portions of an application or website. A full stack developer has specialized knowledge of all stages of software development, including server, network, and hosting environment; relational and non-relational databases; interacting with APIs; user interface and user experience; quality assurance; security; customer and business needs. Being a full stack developer means taking a holistic view — comparing the pros and cons of both back-end and front-end before determining where the logic should sit.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#nontechnical-qualities-to-have"&gt;
  &lt;/a&gt;
  Non-Technical Qualities to have:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Flexibility and adaptability&lt;/li&gt;
&lt;li&gt;Very big team player and/or team leader&lt;/li&gt;
&lt;li&gt;Strategic thinking&lt;/li&gt;
&lt;li&gt;Communication skills are stellar &lt;/li&gt;
&lt;li&gt;Creativity &lt;/li&gt;
&lt;li&gt;Analytical &lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#am-i-a-fit"&gt;
  &lt;/a&gt;
  Am I a fit?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;I can work well in most environments, whether it's internal or external&lt;/li&gt;
&lt;li&gt;I enjoy when something looks great, but also works great.&lt;/li&gt;
&lt;li&gt;I enjoy challenges and am determined to solve them in the most efficient way&lt;/li&gt;
&lt;li&gt;I like to plan things out to the detail and can communicate what I am capable of doing and not capable of doing to my team&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#technical-skills"&gt;
  &lt;/a&gt;
  Technical Skills
&lt;/h5&gt;

&lt;p&gt;Front-end Languages and Frameworks (HTML, CSS, JS), Backend Technologies and Frameworks (Python, Ruby, SQL)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#various-titles"&gt;
  &lt;/a&gt;
  Various Titles
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;FullStack Developer&lt;/li&gt;
&lt;li&gt;Solutions Engineer&lt;/li&gt;
&lt;li&gt;FullStack QA Engineer&lt;/li&gt;
&lt;li&gt;Software Developer&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#thinking"&gt;
  &lt;/a&gt;
  Thinking
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5Lr0wDvN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csrr7ypj1mheyk2c7vf4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5Lr0wDvN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/csrr7ypj1mheyk2c7vf4.png" alt="Image description" width="880" height="720"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#pay"&gt;
  &lt;/a&gt;
  Pay
&lt;/h5&gt;

&lt;p&gt;In US with 1-3 years of experience at a mid-size company: ~$96k (Junior)&lt;br&gt;
In US with 8+ years of experience at a mid-size company: ~$128k (Senior)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#things-to-consider"&gt;
  &lt;/a&gt;
  Things to consider
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;As a full stack engineer you have a lot of opportunity to grow and decide if you want to stay full stack or go into something more specific&lt;/li&gt;
&lt;li&gt;You are a highly sought after hire currently because of your ability to do both front and back end.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#you-should-reconsider-if"&gt;
  &lt;/a&gt;
  You should reconsider if...
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;You don't really enjoy doing both design/creative work and data manipulation&lt;/li&gt;
&lt;li&gt;You don't like working with multiple teams&lt;/li&gt;
&lt;li&gt;You don't have great time management or like to work on a more leisure schedule&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;
  &lt;a href="#mobile-ios-andor-android-developer"&gt;
  &lt;/a&gt;
  Mobile iOS and/or Android Developer
&lt;/h3&gt;

&lt;p&gt;Builds apps for mobile devices, including iOS and Android. A mobile developer might use Java, Swift, and Objective-C. Mobile developers can be conditionally called the front-end developer, since they mostly works with the app’s interface. However, they also play the role as the back-end developer when it comes to more complex builds that require internet connection and server communication - so in general, they stick to the Mobile Developer title.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#nontechnical-qualities-to-have"&gt;
  &lt;/a&gt;
  Non-Technical Qualities to have:
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Business knowledge&lt;/li&gt;
&lt;li&gt;Agile Methodology&lt;/li&gt;
&lt;li&gt;Collaborative&lt;/li&gt;
&lt;li&gt;Creative&lt;/li&gt;
&lt;li&gt;Communication&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#am-i-a-fit"&gt;
  &lt;/a&gt;
  Am I a fit?
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;I really enjoy the idea of having technology be mobile and making it functional&lt;/li&gt;
&lt;li&gt;I like to think about the way people use their phones and how certain apps are ran&lt;/li&gt;
&lt;li&gt;Before I go into something, I like to do more research on my audience and who might be looking at my work&lt;/li&gt;
&lt;li&gt;I take feed back well and work very well independently and on cross-functional teams&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#technical-skills"&gt;
  &lt;/a&gt;
  Technical Skills
&lt;/h5&gt;

&lt;p&gt;Linux/Unix, Phython, Perl, Shell Scripting, Java, C#, Swift, ORACLE, Apache, iOS&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Design: UX/UI&lt;/li&gt;
&lt;li&gt;BONUS: Business Research, Business Development, Analytics&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#various-titles"&gt;
  &lt;/a&gt;
  Various Titles
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;Mobile App Developer&lt;/li&gt;
&lt;li&gt;App Developer&lt;/li&gt;
&lt;li&gt;iOS Engineer&lt;/li&gt;
&lt;li&gt;Android Engineer&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#thinking"&gt;
  &lt;/a&gt;
  Thinking
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3Ang-jxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbzt2c0zgobd8avvlful.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3Ang-jxN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cbzt2c0zgobd8avvlful.png" alt="Image description" width="640" height="427"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#pay"&gt;
  &lt;/a&gt;
  Pay
&lt;/h5&gt;

&lt;p&gt;In US with 1-3 years of experience at a mid-size company: ~$94k (Junior)&lt;br&gt;
In US with 8+ years of experience at a mid-size company: ~$115k (Senior)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#things-to-consider"&gt;
  &lt;/a&gt;
  Things to consider
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;There will always be a high demand for Mobile App Devs and their skill set is very specific to the Mobile environment. That being said, if you can do it you won't be out of work or find it hard to get work.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;
  &lt;a href="#you-should-reconsider-if"&gt;
  &lt;/a&gt;
  You should reconsider if...
&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;You aren't on your phone a lot&lt;/li&gt;
&lt;li&gt;Don't use a lot of Apps&lt;/li&gt;
&lt;li&gt;Don't have an interest in mobile apps&lt;/li&gt;
&lt;li&gt;Don't want to think about internet on phones&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;--&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I built this with the intention of helping people understand more about some of the most common titles as a Developer to help make better developers. I hope this was helpful.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>webdev</category>
      <category>career</category>
    </item>
    <item>
      <title>Understanding the OOPs paradigm in JavaScript.</title>
      <author>Swastik Yadav</author>
      <pubDate>Wed, 24 Nov 2021 06:50:53 +0000</pubDate>
      <link>https://dev.to/swastikyadav/understanding-the-oops-paradigm-in-javascript-3mn2</link>
      <guid>https://dev.to/swastikyadav/understanding-the-oops-paradigm-in-javascript-3mn2</guid>
      <description>&lt;p&gt;Hello Everyone,&lt;/p&gt;

&lt;p&gt;In this post we will explore the &lt;strong&gt;object oriented programming&lt;/strong&gt; paradigm in JavaScript. OOP is a paradigm where everything is managed with objects.&lt;/p&gt;

&lt;p&gt;There are four ways to work with objects in JavaScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Factory way of creating objects.&lt;/li&gt;
&lt;li&gt;Prototypal way of creating objects.&lt;/li&gt;
&lt;li&gt;Pseudo Classical pattern of creating objects.&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The best way to work with objects are classes. We will learn exactly how classes works. Let's explore each method one by one.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#factory-way-of-creating-objects"&gt;
  &lt;/a&gt;
  Factory way of creating objects
&lt;/h2&gt;

&lt;p&gt;Let's say we need to create multiple students object. With factory way, we don't manually need to create objects for all of them. We create a constructor function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;creteStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;batch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${(&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next whenever we need to create a student, we just have to call the above function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;student1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Swastik&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;95&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;student2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Rahul&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;student1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 95%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This was the factory way of creating objects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prototypal-way-of-creating-objects"&gt;
  &lt;/a&gt;
  Prototypal way of creating objects
&lt;/h2&gt;

&lt;p&gt;When a property is not found in an object, it looks for it down in the prototypal chain. This is the &lt;strong&gt;prototypal nature of object&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NZ_-WpVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vndfpiuiza8qhvfxyorl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NZ_-WpVT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vndfpiuiza8qhvfxyorl.png" alt="prototypal-chain" width="700" height="287"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now let's create object the prototypal way.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create object using &lt;strong&gt;Object.create()&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Make sure to use &lt;strong&gt;this&lt;/strong&gt; in the method.&lt;/li&gt;
&lt;li&gt;Make sure to return object.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;studentMethod&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;createStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;studentMethod&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;batch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;student1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Swastik&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;student1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 99%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Object.create takes an object as parameter and puts that parameter into dunder-proto. For example in the above code snippet percentage method is added in dunder proto, it is not in the main object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pseudo-classical-pattern-of-creating-objects"&gt;
  &lt;/a&gt;
  Pseudo Classical pattern of creating objects
&lt;/h2&gt;

&lt;p&gt;Pseudo classical pattern uses the &lt;strong&gt;new&lt;/strong&gt; keyword with constructor function to create objects. The new keyword does 3 things.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creates a new object implicitly, named &lt;strong&gt;this&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Puts the new object (this) in function prototype.&lt;/li&gt;
&lt;li&gt;Implicitly returns obj (this).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When we use &lt;strong&gt;new&lt;/strong&gt; keyword, methods from prototype goes to dunder-proto.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;this = {}&lt;/li&gt;
&lt;li&gt;this.&lt;strong&gt;proto&lt;/strong&gt; = createStudent.prototype&lt;/li&gt;
&lt;li&gt;return obj (this)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;CreateStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;batch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;CreateStudent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;student1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CreateStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Swastik&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;student1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 100%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;new&lt;/strong&gt; keyword implicitly creates the object, sets the method to dunder-proto, and implicitly returns the object.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#classes"&gt;
  &lt;/a&gt;
  Classes
&lt;/h2&gt;

&lt;p&gt;Classes are a syntactic sugar to create objects. In the last example we added the percentage method to CreateStudent.prototype manually. With classes all that is done automatically.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;strong&gt;new&lt;/strong&gt; keyword calls the constructor and implicitly creates and returns the &lt;strong&gt;this&lt;/strong&gt; object.&lt;/li&gt;
&lt;li&gt;Classes accepts only methods (functions).&lt;/li&gt;
&lt;li&gt;You will find the methods in the dunder-proto of the object.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For instace:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CreateStudent&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;batch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;batch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;marks&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxMarks&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;student1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CreateStudent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Swastik&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;89&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;student1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 89%&lt;/span&gt;
&lt;span class="nx"&gt;student1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;CreateStudent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;percentage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, that's how we create objects with classes. Enumerable flag for class methods are by default set to false, because we don't want methods in &lt;a href="https://dev.to/swastikyadav/difference-between-forof-and-forin-loop-in-javascript-j2o"&gt;&lt;strong&gt;for...in&lt;/strong&gt;&lt;/a&gt; loop result.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#class-inheritance"&gt;
  &lt;/a&gt;
  Class Inheritance
&lt;/h3&gt;

&lt;p&gt;Class inheritance is a way to create new functionality on top of existing one. Let's say we have an Animal class and a Rabbit class based on Animal class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Animal Class&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; runs with speed &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;speed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; stands still.`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;animal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;My animal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Rabbit Class&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Rabbit&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; hides!`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Rabbit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;White Rabbit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// White Rabbit runs with speed 5.&lt;/span&gt;
&lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// White Rabbit hides!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Rabbit class does not have run method but it can access it from Animal.prototype as we have extended Rabbit class.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wNJ6TMWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/890qhketv765opew69ah.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wNJ6TMWZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/890qhketv765opew69ah.png" alt="class-extend" width="700" height="488"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-super-keyword"&gt;
  &lt;/a&gt;
  The Super keyword
&lt;/h3&gt;

&lt;p&gt;The super keyword allows us to call parent method and constructor in our extended class.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;super.method(...)&lt;/strong&gt; calls a parent method.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;super(...)&lt;/strong&gt; calls parent constructor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Rabbit&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// calls the parent constructor&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; hides`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// calls stop method of parent&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;rabbit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Rabbit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;White Rabbit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// White Rabbit runs with speed 5.&lt;/span&gt;
&lt;span class="nx"&gt;rabbit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// White Rabbit stands still. White Rabbit hides!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above code snippet, Rabbit class defines a stop method which calls the stop method of Animal with super.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-static-method"&gt;
  &lt;/a&gt;
  The static method
&lt;/h3&gt;

&lt;p&gt;We can also assign a method to the class itself, not to its "prototype". Such methods are called static methods. They are prepended by &lt;strong&gt;static&lt;/strong&gt; keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="nx"&gt;staticMethod&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;staticMethod&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Static methods are used for functionality that belongs to the class "as a whole". It does not relate to a concrete class instance.&lt;/p&gt;

&lt;p&gt;Static properties and methods are inherited. For class B extends A the prototype of the &lt;strong&gt;class B itself points to A: B.[[Prototype]] = A&lt;/strong&gt;. So if a field is not found in B, the search continues in A.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#private-and-protected-properties-and-methods"&gt;
  &lt;/a&gt;
  Private and protected properties and methods
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Protected&lt;/strong&gt; fields starts with &lt;strong&gt;_&lt;/strong&gt;. Protected field should only be accessible from its class and classes inheriting from it. Protected field is not supported at the language level.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Private&lt;/strong&gt; fields starts with &lt;strong&gt;#&lt;/strong&gt;. Private field should only be accessibe from inside the class.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;CoffeeMachine&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;power&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;power&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;power&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;coffeeMachine1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;CoffeeMachine&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;coffeeMachine1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// Error - Private method cannot be accessed outside of the class.&lt;/span&gt;
&lt;span class="nx"&gt;coffeeMachine1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 0;&lt;/span&gt;
&lt;span class="nx"&gt;coffeeMachine1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;coffeeMachine1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;waterAmount&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 0;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Private method #waterAmount is only accessible inside the class itself.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-this-keyword"&gt;
  &lt;/a&gt;
  The this keyword
&lt;/h2&gt;

&lt;p&gt;The &lt;strong&gt;this&lt;/strong&gt; keyword refers to the object it belongs to. There are four rules to identify, where the this keyword is refering.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;fn() -&amp;gt; window&lt;/li&gt;
&lt;li&gt;obj.fn() -&amp;gt; this referes to obj. If any function is using &lt;strong&gt;this&lt;/strong&gt; then &lt;strong&gt;this&lt;/strong&gt; becomes the object at left of (.).&lt;/li&gt;
&lt;li&gt;bind, call, apply -&amp;gt; "this" value is specified.&lt;/li&gt;
&lt;li&gt;new keyword creates and returns this implicitly.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;"this"&lt;/strong&gt; changes at runtime.&lt;/p&gt;




&lt;p&gt;🙌 Support by joining my weekly Newsletter.&lt;/p&gt;

&lt;p&gt;That's it for this post. I hope you found it helpful, if so, please do share and subscribe to my &lt;a href="https://www.getrevue.co/profile/8020lessons"&gt;8020 Newsletter&lt;/a&gt; where I share epic weekly content on building your skillset.&lt;/p&gt;

&lt;p&gt;Thank You!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
