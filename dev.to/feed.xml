<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to change the git commit author?</title>
      <author>Brayan Arrieta</author>
      <pubDate>Wed, 23 Jun 2021 21:24:58 +0000</pubDate>
      <link>https://dev.to/brayanarrieta/how-to-change-the-git-commit-author-56mg</link>
      <guid>https://dev.to/brayanarrieta/how-to-change-the-git-commit-author-56mg</guid>
      <description>&lt;p&gt;Becoming a &lt;strong&gt;Git&lt;/strong&gt; master could be complicated, due that there are several options that &lt;strong&gt;Git&lt;/strong&gt; provides us and some of them need to be used based on the rules that the team defines around the process of the project that we are working on right now.&lt;/p&gt;

&lt;p&gt;Everyone at some moment has needed help with &lt;strong&gt;Git&lt;/strong&gt;, so the main idea is to try to recompile that tips or common problems that you can have with Git.&lt;/p&gt;

&lt;p&gt;In this post, we will see what you can do in the case that an error committed with a wrong git user, email, or something like that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#change-last-commit-author"&gt;
  &lt;/a&gt;
  Change last commit author
&lt;/h2&gt;

&lt;p&gt;This is the easiest scenery that you can a front, basically, we just need to run the next command in the terminal.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit --amend --author="&amp;lt;name&amp;gt; &amp;lt;email&amp;gt;" --no-edit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-commit-was-pushed-remotely"&gt;
  &lt;/a&gt;
  The commit was pushed remotely?
&lt;/h3&gt;

&lt;p&gt;In the case that the commit was pushed remotely we need to run an extra commit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push -f origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that, you can do just a &lt;code&gt;git log&lt;/code&gt; command and check in the history that the change was applied.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#change-more-than-a-commit"&gt;
  &lt;/a&gt;
  Change more than a commit
&lt;/h2&gt;

&lt;p&gt;For these cases, the best option could be to apply a rebase of the branch that you are working on right now. First of all please make sure that you are in the branch that you want to change.&lt;/p&gt;

&lt;p&gt;For example, we have a branch called &lt;strong&gt;feature/test&lt;/strong&gt; and the last two commits were pushed with the wrong email. So we need to change the author information for the commits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;2c6eececec35ece0dc52c683de2dbc34553b283b&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;1c6eececec35ece0dc52c683de2dbc34553b283b&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;commit 2c6eececec35ece0dc52c683de2dbc34553b283b &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; feature/test, origin/feature/test&lt;span class="o"&gt;)&lt;/span&gt;
Author: Brayan Arrieta &amp;lt;wrong-email&amp;gt;
Date:   Tue Jun 22 16:06:10 2021 &lt;span class="nt"&gt;-0600&lt;/span&gt;

    Feat: change some stuff

commit 1c6eececec35ece0dc52c683de2dbc34553b283b &lt;span class="o"&gt;(&lt;/span&gt;HEAD -&amp;gt; feature/test, origin/feature/test&lt;span class="o"&gt;)&lt;/span&gt;
Author: Brayan Arrieta &amp;lt;wrong-email&amp;gt;
Date:   Tue Jun 22 16:04:10 2021 &lt;span class="nt"&gt;-0600&lt;/span&gt;

    Feat: change server

commit 4d133f673250ed628e58371a8b246d68171fbbf9 &lt;span class="o"&gt;(&lt;/span&gt;origin/master, origin/HEAD, master&lt;span class="o"&gt;)&lt;/span&gt;
Merge: 144c453125 cb1ac7e774
Author: Other User &amp;lt;otheruser@email.com&amp;gt;
Date:   Tue Jun 22 13:40:43 2021 &lt;span class="nt"&gt;-0500&lt;/span&gt;

    Merge branch &lt;span class="s1"&gt;'feature/test2'&lt;/span&gt; into &lt;span class="s1"&gt;'master'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To fix that first of all we need to do the &lt;strong&gt;rebase&lt;/strong&gt; of the branch with the next command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git rebase -i -p &amp;lt;previous-commit-id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the param &lt;strong&gt;previous-commit-id&lt;/strong&gt; we need to pass the previous commit id before the commits that we want to fix, for example in this case the command will be &lt;code&gt;git rebase -i -p 4d133f673250ed628e58371a8b246d68171fbbf9&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;After that will see something similar to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pick 2c6eece Feat: change some stuff
pick 1c6eece Feat: change server

# Rebase 4d133f6..2c6eece onto 4d133f6 (4 commands)
#
# Commands:
# p, pick &amp;lt;commit&amp;gt; = use commit
# r, reword &amp;lt;commit&amp;gt; = use commit, but edit the commit message
# e, edit &amp;lt;commit&amp;gt; = use commit, but stop for amending
# s, squash &amp;lt;commit&amp;gt; = use commit, but meld into previous commit
# f, fixup &amp;lt;commit&amp;gt; = like "squash", but discard this commit's log message
# x, exec &amp;lt;commit&amp;gt; = run command (the rest of the line) using shell
# d, drop &amp;lt;commit&amp;gt; = remove commit
# l, label &amp;lt;label&amp;gt; = label current HEAD with a name
# t, reset &amp;lt;label&amp;gt; = reset HEAD to a label
# m, merge [-C &amp;lt;commit&amp;gt; | -c &amp;lt;commit&amp;gt;] &amp;lt;label&amp;gt; [# &amp;lt;oneline&amp;gt;]
# .       create a merge commit using the original merge commit's
# .       message (or the oneline, if no original merge commit was
# .       specified). Use -c &amp;lt;commit&amp;gt; to reword the commit message.
#
# These lines can be re-ordered; they are executed from top to bottom.
#
".git/rebase-merge/git-rebase-todo" 28L, 1267C
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that just make sure that all the commit that has the wrong author have the &lt;strong&gt;p&lt;/strong&gt; or &lt;strong&gt;pick&lt;/strong&gt; in the commit list. In the case that needs to change something just type with your keyboard &lt;strong&gt;i&lt;/strong&gt; to enter in insert mode, apply the change, and &lt;strong&gt;ESC&lt;/strong&gt;. After that, we just need to type &lt;strong&gt;:wq&lt;/strong&gt; on our keyboard to save that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Commands&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;i&lt;/strong&gt;: Enter to insert mode&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;ESC&lt;/strong&gt;: Exit of the insert mode&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;:wq&lt;/strong&gt;: Write and quit&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;:q&lt;/strong&gt;: Quit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After that &lt;strong&gt;Git&lt;/strong&gt; will be processing the rebase and in the commit that you put the &lt;strong&gt;pick&lt;/strong&gt; will be displayed a message something like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Stopped at 1c6eece... Feat: change server
You can amend the commit now, with

    git commit --amend

Once you are satisfied with your changes, run

    git rebase --continue
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When that appears that message mention we have some options to change the author or just continue with the command &lt;code&gt;git rebase --continue&lt;/code&gt;. In the case that we want to change the author need to execute the next commit.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit --amend --author="Brayan Arrieta &amp;lt;correct-email&amp;gt;" --no-edit
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that just continue to the next commit with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git rebase --continue
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Something important to mention is that the previous steps mentioned need to be applied to every commit with the pick option. At you will see a message something like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Successfully rebased and updated refs/heads/feature/test.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that just need to execute a push command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-commits-were-pushed-remotely"&gt;
  &lt;/a&gt;
  The commits were pushed remotely?
&lt;/h3&gt;

&lt;p&gt;In the case that the commits were pushed remotely we need to run instead of the &lt;code&gt;git push origin &amp;lt;branch-name&amp;gt;&lt;/code&gt; command the next command, which will change the Git history of our branch with the fix.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push -f origin &amp;lt;branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As you see we can change the commit author with some simple commands so go ahead in the case that afront that issue. I hope you find this article really helpful. I will be updating this post based on your comments and recommendations so let me know in any case. Thanks! 👍&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/brayanarrieta"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Bs6qmXj6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Dbrayanarrieta%26button_colour%3D5F7FFF%26font_colour%3Dffffff%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3DFFDD00"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>git</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>PNG files can be animated via network latency</title>
      <author>Ben Halpern</author>
      <pubDate>Wed, 23 Jun 2021 21:07:01 +0000</pubDate>
      <link>https://dev.to/ben/png-files-can-be-animated-via-network-latency-2oeh</link>
      <guid>https://dev.to/ben/png-files-can-be-animated-via-network-latency-2oeh</guid>
      <description>&lt;p&gt;I saw this online and thought it was pretty neat. Check out this image:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.da.vidbuchanan.co.uk/adamation/image.png"&gt;https://www.da.vidbuchanan.co.uk/adamation/image.png&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's not overly useful, but you might learn something. &lt;a href="https://pyokagan.name/blog/2019-10-14-png/"&gt;Here is an interesting post&lt;/a&gt; related to the subject.&lt;/p&gt;

&lt;p&gt;Happy coding. ❤️&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>png</category>
    </item>
    <item>
      <title>Arrow Functions</title>
      <author>Shreyas Pahune</author>
      <pubDate>Wed, 23 Jun 2021 20:39:49 +0000</pubDate>
      <link>https://dev.to/shreyazz/arrow-functions-4d77</link>
      <guid>https://dev.to/shreyazz/arrow-functions-4d77</guid>
      <description>&lt;p&gt;Hey everyone 👋🏻, in this blog we are going discuss about :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Arrow Functions V/S Regular Functions&lt;/li&gt;
&lt;li&gt;Advantages and Disadvantages of using Arrow Functions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Like I said in my &lt;a href="https://dev.to/shreyazz/es6-features-1ao8"&gt;previous blog&lt;/a&gt;, the arrow function is not a new concept, it is just a syntax revamp of the regular function in JS. The new syntax is very very easy, it is just a sugar coating around the old function syntax so without wasting anymore time let's start learning about arrow functions!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-arrow-functions-vs-regular-functions"&gt;
  &lt;/a&gt;
  1. Arrow Functions V/S Regular Functions
&lt;/h3&gt;

&lt;p&gt;We are going to discuss 4 different types of functions and we'll transform them from the old rusty ES5 syntax to ES6 syntax. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4 different types are going to be:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;  1. A named function with no parameters.&lt;br&gt;
    2. A named function with one parameter.&lt;br&gt;
    3. A named function with two parameters.&lt;br&gt;
    4. An unnamed function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Named function with no parameters :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pKfRmwF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1fqt455qii416tcvwbj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pKfRmwF0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z1fqt455qii416tcvwbj.png" alt="nameFunctionNoParam"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;As you can see in the above photo, we have to give the name of the function as a variable name and after an equal symbol &lt;code&gt;=&lt;/code&gt;  an opening and closing parenthesis &lt;code&gt;( )&lt;/code&gt; which will denote the function, leading with an arrow  &lt;code&gt;=&amp;gt;&lt;/code&gt; which is nothing but an equal sign and angular bracket. &lt;/p&gt;

&lt;p&gt;There is another way of making an one liner arrow function, you just have to give the function name as a variable name and &lt;code&gt;=&lt;/code&gt; sign leading with &lt;code&gt;=&amp;gt;&lt;/code&gt; arrow and the statement you want to return.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Named function with one parameter :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3QFSr2sM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/izexel95gc0dsvmajz55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3QFSr2sM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/izexel95gc0dsvmajz55.png" alt="nameFunctionOneParam"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;There is no change except in the parenthesis &lt;code&gt;( )&lt;/code&gt;  in which we will pass our parameters.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Named function with two parameters :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wR6YC1k8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjeetfq6qtvh1q1xpsev.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wR6YC1k8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjeetfq6qtvh1q1xpsev.png" alt="nameFunctionTwoParam"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Unnamed function :&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xie9NJOM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/095g64q6944lpenxudop.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xie9NJOM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/095g64q6944lpenxudop.png" alt="unamedFunction"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
Isn't this cool??&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-advantages-and-disadvantages-of-using-arrow-functions"&gt;
  &lt;/a&gt;
  2.  Advantages and Disadvantages of using Arrow Functions
&lt;/h3&gt;

&lt;p&gt;Arrow functions make our code more concise and increases the readability of the code, the new syntax is really easy to adopt and takes no time to understand things.&lt;/p&gt;

&lt;p&gt;Apart from writing less and doing more Arrow Function can help us with &lt;code&gt;this&lt;/code&gt; keyword and scoping of variables, let me show you how.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SSGPj9tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4mbz12bortj1u7hgatbj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SSGPj9tz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4mbz12bortj1u7hgatbj.png" alt="classThis"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here in this above image I have made a class with 2 member functions, arrow and regular which consists of &lt;code&gt;setTimeout&lt;/code&gt; to make a block of code so that we can see the scope of  &lt;code&gt;this&lt;/code&gt;  keyword using arrow functions v/s regular function.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Here we will receive the name(Shreyas) and age(18) in the arrow function, as inside this function &lt;code&gt;this&lt;/code&gt; keyword will use the scope where it was created ( i.e. inside the class ) but on the other hand the regular function will use the scope where it is invoked or called i.e. which is outside the class and since  there is no name and age defined outside the class, we will receive &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One disadvantage I feel is, we can not use arrow function to define constructor. &lt;/p&gt;

&lt;p&gt;A constructor is a special function which is to be made inside every class, which basically sets default values and initializes them.&lt;/p&gt;

&lt;p&gt;In the above example you can see I have made a constructor function, but with normal function's syntax.&lt;/p&gt;




&lt;p&gt;Thank you so much for reading the whole blog 🎉! I hope you learnt something and if you did, do implement it, it would make your code more concise and readable. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>tutorial</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Blockchain and its applications</title>
      <author>Vinayak Rawat</author>
      <pubDate>Wed, 23 Jun 2021 20:37:35 +0000</pubDate>
      <link>https://dev.to/vinayak27raw/blockchain-and-its-applications-nea</link>
      <guid>https://dev.to/vinayak27raw/blockchain-and-its-applications-nea</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hPoNWCxf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kuuna18hsb831lcewliu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hPoNWCxf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kuuna18hsb831lcewliu.png" alt="bl3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You might have heard about &lt;strong&gt;Bitcoin&lt;/strong&gt; but do you exactly know what's the main reason behind it? How it's being controlled what all process goes at the backend to make it work?&lt;br&gt;
While the answer to that is &lt;strong&gt;Blockchain&lt;/strong&gt;, you might have heard this word but let me help you to understand this in a simple way lets go&lt;/p&gt;

&lt;p&gt;So taking about Blockchain it's a technique to store information in a &lt;strong&gt;decentralized&lt;/strong&gt; manner, in simple words decentralization means no central authority can control the data, for example, &lt;strong&gt;Bitcoin&lt;/strong&gt; is based on blockchain no central agencies can control it. &lt;br&gt;
Now when we talk about storing the information we can simply write it down on paper or we can make an excel file on our computer, it will store data based on tables.&lt;br&gt;
When we say how blockchain stores information, it stored in blocks, let us understand it&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I2N8U_iK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlrwouce43l9m8ok2oeu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I2N8U_iK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xlrwouce43l9m8ok2oeu.png" alt="hj"&gt;&lt;/a&gt;&lt;br&gt;
The upper face of this cube represents the data storing the block,&lt;br&gt;
the side face represents Hash, it is a unique identification of that particular block,&lt;br&gt;
and the face opposite to that represents the hash of the previous block let's understand that by a diagram&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kDvonKBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7axmrfjbmt0x9gig7gi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kDvonKBc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7axmrfjbmt0x9gig7gi.png" alt="hk"&gt;&lt;/a&gt;&lt;br&gt;
You can see here the second block contains the same hash identification code.&lt;br&gt;
Now a very interesting thing here you can notice is if you try to manipulate data from a single block its identification code is changed and the same changes will be done to other blocks as well, which makes us come to a big advantage of &lt;strong&gt;blockchain&lt;/strong&gt; it is almost impossible to tamper data here because due to decentralization if someone tries to manipulate the data it will automatically be noticed by the other.&lt;br&gt;
Lets discuss a very important part of blockchain &lt;strong&gt;Miners&lt;/strong&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uBk-6Q6w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xchfo6usw1ao8k37fmxy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uBk-6Q6w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xchfo6usw1ao8k37fmxy.png" alt="678"&gt;&lt;/a&gt;&lt;br&gt;
The role of Miners is to verify the data which is added to the blockchain, in favor the systems working on blockchain get rewarded and if the data is misplaced they are punished too.&lt;br&gt;
Let's talk about a &lt;strong&gt;Real-life application&lt;/strong&gt; for blockchain.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9yVmHiQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/40ollk5gr356d460s1e5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9yVmHiQS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/40ollk5gr356d460s1e5.png" alt="bl5"&gt;&lt;/a&gt;&lt;br&gt;
Let us say you board exam results after you clear your boards the results are kept in a digital locker now this locker data is decentralized means once the data is uploaded no one can tamper the data only the data can be added and it will be known to the system.&lt;br&gt;
Taking about some advantages&lt;br&gt;
1.Write-only, immutable, transparent data storage&lt;br&gt;
2.Resistant against malicious participants&lt;br&gt;
3.Open to everyone&lt;br&gt;
4.Decentralized, no need for intermediaries&lt;br&gt;
5.Consistent state across all participants&lt;/p&gt;

&lt;p&gt;In the end, I want to say that, Blockchain technology has far-reaching applications across many industries. Blockchain is already used to facilitate identity management, smart contracts, supply chain analysis, and much more. The full potential of blockchain technology likely remains to be discovered.&lt;br&gt;
If you want to explore more about its future do read this article&lt;br&gt;
&lt;a href="https://www.upgrad.com/blog/reasons-why-blockchain-technology-is-the-future/"&gt;Upgrad post&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for Reading&lt;br&gt;
Vinayak Rawat&lt;/p&gt;

</description>
      <category>blockchain</category>
      <category>database</category>
    </item>
    <item>
      <title>A first look at Qwik - the HTML first framework</title>
      <author>Miško Hevery</author>
      <pubDate>Wed, 23 Jun 2021 19:48:31 +0000</pubDate>
      <link>https://dev.to/mhevery/a-first-look-at-qwik-the-html-first-framework-af</link>
      <guid>https://dev.to/mhevery/a-first-look-at-qwik-the-html-first-framework-af</guid>
      <description>&lt;p&gt;At &lt;a href="http://builder.io"&gt;Builder.io&lt;/a&gt;, we empower non-developers to build and edit blazing fast sites with a powerful visual editor. One of the cool things about our visual editor is that we can generate the same sites in different technologies—everything from Angular to WebComponents and every framework in between. The code we output is optimized for speed, and our sites are faster than the vast majority of hand-crafted sites. We are very proud of that. Our product focuses on eCommerce, and eCommerce loves speed!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-good-timetointeractive-is-hard"&gt;
  &lt;/a&gt;
  Getting good time-to-interactive is hard
&lt;/h2&gt;

&lt;p&gt;Even with the most optimized code, it is hard for eCommerce sites to reach a 100 out of 100 score on &lt;a href="https://developers.google.com/speed/pagespeed/insights/"&gt;PageSpeed Insights&lt;/a&gt; unless they serve only static HTML. This is why most eCommerce sites are around 20 and in the red. Only the very best, who can afford to focus on speed, can get their site to the 50s to 60s and into the yellow. Using Builder.io will also get your sites into the yellow 50s to 60s. But we want to do better!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hNfE5FAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zttsnsvx80ic0y3v4wa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hNfE5FAv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5zttsnsvx80ic0y3v4wa.png" alt="one"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pure-html-is-fast"&gt;
  &lt;/a&gt;
  Pure HTML is fast
&lt;/h2&gt;

&lt;p&gt;Well, we can do better if we serve static HTML. That will almost certainly give us a 100 out of 100 score. After all, PageSpeed Insights shows a score measured based on the amount of code the browser must execute before the page becomes interactive. By removing all of the JavaScript execution we can get a perfect score of 100 and pass with flying green colors! But, therein lies the problem. These pages are static. We need our pages to deliver content dynamically, full of interaction and life. How can we serve static HTML to receive high scores, but at the same time provide rich interaction?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VCPVUPTb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inff3jmvl300d1yaxaya.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VCPVUPTb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/inff3jmvl300d1yaxaya.png" alt="speed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-qwik-the-html-first-framework"&gt;
  &lt;/a&gt;
  Introducing Qwik - the HTML first framework
&lt;/h2&gt;

&lt;p&gt;Introducing Qwik, an open-source DOM-centric, resumable web-app framework designed for best possible time-to-interactive, by focusing on resumability of server-side-rendering of HTML and fine-grained lazy-loading of code. OK, that is a lot to unpack and a lot more than we could possibly cover in this blog post. So, we will break this up into a series of blog posts, which we will post over the next few weeks. But, the basic goal of Qwik is to focus on the time-to-interactive metric by delaying JavaScript as much as possible to take advantage of the browser’s lazy loading capabilities. This is in stark contrast to existing frameworks that treat server-side-rendering and time-to-interactive more as an afterthought rather than a primary goal, which drives all other design decisions. Qwik’s goal is to crush time-to-interactive to a blink of an eye on the slowest mobile device. We want to serve static pages to the user so that they are fast, but retain all of their interactivity. We want to have our cake and eat it too!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vNxZwFXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dy3wa5ewpz9o9xoa87ys.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vNxZwFXl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dy3wa5ewpz9o9xoa87ys.png" alt="graphic"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#replayable-frameworks-do-too-much-work"&gt;
  &lt;/a&gt;
  Replayable frameworks do too much work
&lt;/h2&gt;

&lt;p&gt;There is a reason why virtually no eCommerce site scores 100 on PageSpeed Insights. The reason is that all existing frameworks are not designed with time-to-interactive in mind. They have complex bootstrap processes which require a lot of code to be downloaded and executed before the page can become interactive. Yes, most support server-side-rendering to get a quick flash of initial content, but the first thing they need to do is to download all of the templates on the page and execute them to rehydrate the page and make it interactive. This download and execute is what keeps existing real-world sites from scoring 100. The current set of frameworks are replayable, as they need to replay all of the work of server-side-rendering on the client to get the site interactive. And, as your site becomes more complicated, so will the replayability cost.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PdQoT-lX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqgpauzo2i23f3zhhke8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PdQoT-lX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqgpauzo2i23f3zhhke8.png" alt="two"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resumability-to-the-rescue"&gt;
  &lt;/a&gt;
  Resumability to the rescue
&lt;/h2&gt;

&lt;p&gt;The basic idea behind Qwik is that it is resumable. It can continue where the server left off. There is but the tiniest amount of code to execute on the client. The qwikloader, which takes the static HTML generated from server-side-rendering and resumes it, is less than 1kb and will execute in under 1ms. I think you may want to go and re-read the last sentence. Yes, the amount of code that we need to execute is amazingly small, and it executes in less than a blink of an eye. The best part is that this code will stay constant no matter how big your application becomes. All the other interactivity of your website is downloaded lazily as you interact with the site in the smallest possible chunks. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ufFUjYds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/550d4im90829stbvbvs0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ufFUjYds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/550d4im90829stbvbvs0.png" alt="stuff"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#find-out-more"&gt;
  &lt;/a&gt;
  Find out more
&lt;/h2&gt;

&lt;p&gt;Our primary focus is to develop this technology for our customers. But the technology will be developed in open-source and can be used by anyone for any purpose. While it will be designed as a general-purpose web framework, we will be prioritizing what we need for our customers first. &lt;/p&gt;

&lt;p&gt;I am sure you are dying to find out more. We invite you to play with a StackBlitz web-container &lt;a href="https://stackblitz.com/edit/qwik-todo-demo"&gt;demo&lt;/a&gt;. (How cool from StackBlitz folks that they were able to run node.js in the browser and allow us to demonstrate the server-side-rendering, which is a key part of the framework. Hats off to them!) You can also find the open-source repo &lt;a href="https://github.com/builderio/qwik"&gt;here&lt;/a&gt;. To set expectations, the repo is very much in the proof of concept stage and is not ready for general consumption, as we expect many things to change over time. Nevertheless, we want to know what you think. So, please join us for a &lt;a href="https://discord.gg/JHVpZmqSs4"&gt;chat on our Discord server&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Over the next few weeks, we will be diving into many of the unique ideas behind Qwik to explain how it ticks and what makes it unique. Stay tuned!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BXDPo5t9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mwuf8a8vxemy69ktoqf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BXDPo5t9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mwuf8a8vxemy69ktoqf.png" alt="final"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>frameworks</category>
      <category>webdev</category>
      <category>performance</category>
    </item>
    <item>
      <title>A Visual Guide To: Computer Vision in Azure</title>
      <author>Nitya Narasimhan</author>
      <pubDate>Wed, 23 Jun 2021 19:34:20 +0000</pubDate>
      <link>https://dev.to/azure/a-visual-guide-to-computer-vision-in-azure-ddo</link>
      <guid>https://dev.to/azure/a-visual-guide-to-computer-vision-in-azure-ddo</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Three resources to jumpstart your learning:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;📄 Read the &lt;a href="https://aka.ms/visual/azure-computer-vision/blog"&gt;blog post&lt;/a&gt; for the Visual Guide.&lt;/li&gt;
&lt;li&gt;🎓 Complete the related &lt;a href="https://aka.ms/visual/azure-computer-vision/learn"&gt;learning path&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;🔖 Bookmark &amp;amp; visit my &lt;a href="https://docs.microsoft.com/en-us/users/nityan/collections/r3m4s45x1g53g2?WT.mc_id=mobile-30244-ninarasi"&gt;evolving collection&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#whats-a-visual-guide"&gt;
  &lt;/a&gt;
  What's a Visual Guide?
&lt;/h2&gt;

&lt;p&gt;It's a poster-sized (high resolution) single-page sketchnote (visual notes) summarizing the content in some associated talk, tutorial, or (as in this case) learning path.&lt;/p&gt;

&lt;p&gt;Many of us are visual learners who can scan and process information faster using visual cues like colors, fonts, and illustrations. Visual notes can help us detect patterns or make connections in new ways that help with retention and recall of that information.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Check out my &lt;a href="https://twitter.com/sketchthedocs"&gt;@SketchTheDocs&lt;/a&gt; account for more examples of visual guides!&lt;/em&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-focus-on-computer-vision"&gt;
  &lt;/a&gt;
  Why focus on Computer Vision?
&lt;/h2&gt;

&lt;p&gt;Every project has an origin story. Mine started with seeing Limor Fried (from Adafruit) do this amazing computer vision inspired demo at Microsoft Build.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hCF7KqCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336782118924455944/K4ZDwHHg_normal.png" alt="Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/nitya"&gt;@nitya&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      One of my favorite demos at &lt;a href="https://twitter.com/hashtag/MSBuild"&gt;#MSBuild&lt;/a&gt;  from &lt;a href="https://twitter.com/adafruit"&gt;@adafruit&lt;/a&gt; - has the three elements that are critical to building real world solutions:&lt;br&gt;&lt;br&gt;"things" (IOT)&lt;br&gt;"intelligence" (AI/ML)&lt;br&gt;"software" (dev kits)&lt;br&gt;&lt;br&gt;Starring this repo and hope to check it out!&lt;br&gt;&lt;a href="https://t.co/c9xfWkpoQw"&gt;github.com/lobe/lobe-adaf…&lt;/a&gt; &lt;a href="https://t.co/CdkHpBIUfX"&gt;twitter.com/pete_codes/sta…&lt;/a&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      17:26 PM - 26 May 2021
    &lt;/div&gt;

      &lt;div class="ltag__twitter-tweet__quote"&gt;
        &lt;div class="ltag__twitter-tweet__quote__header"&gt;
          &lt;span class="ltag__twitter-tweet__quote__header__name"&gt;
            Pete Gallagher - Azure #MVPBuzz
          &lt;/span&gt;
          &lt;a class="mentioned-user" href="https://dev.to/pete_codes"&gt;@pete_codes&lt;/a&gt;

        &lt;/div&gt;
        Love @lobe_ai! Fab demo by @adafruit using a @Raspberry_Pi and the #BrainCraft HAT... #MSBuild @MSIoTDevs @MicrosoftIoT https://t.co/DrDxKtCvpk
      &lt;/div&gt;

    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1397605112718233600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1397605112718233600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1397605112718233600" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;In the demo she:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;used &lt;a href="https://www.lobe.ai/"&gt;Lobe.AI&lt;/a&gt; to train a custom vision model for pastry identification - with no code!&lt;/li&gt;
&lt;li&gt;downloaded the model to a Raspberry Pi (with a camera module interfaced) and built a smart checkout app for the Internet of Things!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Check out the lobe-adafruit-kit repository &lt;a href="https://t.co/c9xfWkpoQw?amp=1"&gt;here&lt;/a&gt;&lt;/em&gt; to learn more about the hardware and software involved.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#computer-vision-and-me"&gt;
  &lt;/a&gt;
  Computer Vision and Me!
&lt;/h2&gt;

&lt;p&gt;That got me thinking!!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lobe.AI is a no-code approach to creating simple custom vision models. Even a 12yo could do it - and I happened to have a 12yo at home 😄.&lt;/li&gt;
&lt;li&gt; The Adafruit demo used Python (which the 12yo is familiar with) and &lt;a href="http://aka.ms/julyot"&gt;#JulyOT&lt;/a&gt; was right around the corner, so it was perfect time to explore IOT projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All we needed was a real-world problem or idea for which we could find (or create) an image dataset. He found one that motivated him!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7SYdxGbR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E2o_837X0Agz9Ah.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hCF7KqCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336782118924455944/K4ZDwHHg_normal.png" alt="Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/nitya"&gt;@nitya&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      2/2&lt;br&gt;&lt;br&gt;Context: we have a Nespresso machine and one container for *all* pods (that 12yo fills from shipments). We have decaf, flavors, types .. and pods have no markings. Only 12yo knows so we have to keep asking him.&lt;br&gt;&lt;br&gt;His plan: train a model to recognize the type from pod .. 🥳🎉 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:53 PM - 30 May 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1399000951105769475" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1399000951105769475" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1399000951105769475" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;And coincidentally, so did I.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NDIgNigW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/E2_RIKZXwAIaHUB.jpg" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hCF7KqCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1336782118924455944/K4ZDwHHg_normal.png" alt="Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎 profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Nitya Narasimhan | 🙏🏽 👩🏽‍💻 🎨 🌎
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/nitya"&gt;@nitya&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Tried an interesting experiment with &lt;a href="https://t.co/JSWXHy272U"&gt;Lobe.AI&lt;/a&gt;. &lt;br&gt;&lt;br&gt;Question:&lt;br&gt;Can I train a model to recognize a specific sketchnote given diverse orientation, zoom levels.&lt;br&gt;&lt;br&gt;Experiment:&lt;br&gt;200 images of 2 sketchnotes captured using an iPad on a lazy Susan to get angles/zoom. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      21:39 PM - 03 Jun 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1400567959953813506" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1400567959953813506" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1400567959953813506" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;But first, we had a great discussion on what exactly computer vision was, how it worked, and what other applications we could build given the right tools and resources. It was that learning journey that led to this visual guide.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#computer-vision-and-azure"&gt;
  &lt;/a&gt;
  Computer Vision and Azure
&lt;/h2&gt;

&lt;p&gt;Lobe.AI is a great starting point for a no-code approach to experimenting with simple custom vision models. However, it is limited in feature and scale. &lt;/p&gt;

&lt;p&gt;When working with real-world applications or use cases, we need technologies that can operate at cloud-scale, and provide us both pre-built computer vision models (that we can use with simple APIs) and support the ability to create custom vision models (tailored to our domain-specific data or requirements).&lt;/p&gt;

&lt;p&gt;Azure's suite of &lt;a href="https://docs.microsoft.com/en-us/azure/cognitive-services/computer-vision/?WT.mc_id=mobile-30244-ninarasi"&gt;computer vision&lt;/a&gt; services can help. And this &lt;a href="https://aka.ms/visual/azure-computer-vision/learn"&gt;learning path&lt;/a&gt; does a fantastic job of walking you through 6 relevant usage scenarios, with hands-on coding exercises. The visual guide below provides a sketchnote summary of that entire learning path.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dSmSIuV9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/am1vnnya12lyysxvhf3l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSmSIuV9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/am1vnnya12lyysxvhf3l.jpg" alt="The image is a poster-sized sketchnote with a green border enclosing handwritten notes and illustrations summarizing the 6 learning modules in the learning path for computer vision in Azure."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#using-the-visual-guide"&gt;
  &lt;/a&gt;
  Using the Visual Guide
&lt;/h2&gt;

&lt;p&gt;The above image is a low-resolution version of the visual guide. Visit &lt;a href="https://acloudguru.com/blog/engineering/a-visual-guide-to-computer-vision-in-azure"&gt;this blog post&lt;/a&gt; for a link to a poster-sized (high resolution) version and a detailed description of the guide and takeaways from the learning path.&lt;/p&gt;

&lt;p&gt;Use the visual guide to bookend your learning journey.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://aka.ms/visual/azure-computer-vision/download"&gt;Scan it&lt;/a&gt;. Get familiar with terms, workflow.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://acloudguru.com/blog/engineering/a-visual-guide-to-computer-vision-in-azure"&gt;Read it&lt;/a&gt;. Learn how services relate.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aka.ms/visual/azure-computer-vision/learn"&gt;Code it&lt;/a&gt;. Complete hands-on exercises!&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://aka.ms/visual/azure-computer-vision/download"&gt;Re-scan it&lt;/a&gt;. Test your recall &amp;amp; understanding.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you found this useful! &lt;em&gt;Follow &lt;a href="https://twitter.com/sketchthedocs"&gt;@SketchTheDocs&lt;/a&gt; or &lt;a href="https://dev.to/nitya/series/11040"&gt;bookmark this series&lt;/a&gt; to discover more visual guides as they are released&lt;/em&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;Three resources to jumpstart your learning:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;📄 Read the &lt;a href="https://aka.ms/visual/azure-computer-vision/blog"&gt;blog post&lt;/a&gt; for the Visual Guide.&lt;/li&gt;
&lt;li&gt;🎓 Complete the related &lt;a href="https://aka.ms/visual/azure-computer-vision/learn"&gt;learning path&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;🔖 Bookmark &amp;amp; visit my &lt;a href="https://docs.microsoft.com/en-us/users/nityan/collections/r3m4s45x1g53g2?WT.mc_id=mobile-30244-ninarasi"&gt;evolving collection&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

</description>
      <category>azure</category>
      <category>sketchnote</category>
      <category>machinelearning</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Who Founded DeFiFarms?</title>
      <author>DefiFarms Non-Fungible Yearn</author>
      <pubDate>Wed, 23 Jun 2021 19:31:22 +0000</pubDate>
      <link>https://dev.to/defifarms/who-founded-defifarms-5a06</link>
      <guid>https://dev.to/defifarms/who-founded-defifarms-5a06</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/6la0fMquxhM"&gt;
&lt;/iframe&gt;
&lt;br&gt;
An experienced team of data scientists and blockchain and database engineers built DEFIFARMS. They are passionate about improving and scaling blockchain technologies. Cesar Deandres, CEO, and Co-founder is a physicist by training and started his career. Zackhary Brown-CMO, and Co-founder.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Follow us on Social Media&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Website : &lt;a href="https://defifarms.org/"&gt;https://defifarms.org/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Telegram : &lt;a href="https://t.me/DeFiFarmsNFT"&gt;https://t.me/DeFiFarmsNFT&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Media : &lt;a href="https://t.me/DefifarmsNFTs"&gt;https://t.me/DefifarmsNFTs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Twitter : &lt;a href="https://twitter.com/DeFiFarmsNFTs"&gt;https://twitter.com/DeFiFarmsNFTs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Medium : &lt;a href="https://medium.com/@DeFiFarmsNFTs"&gt;https://medium.com/@DeFiFarmsNFTs&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Reddit : &lt;a href="https://www.reddit.com/r/DeFiFarms/"&gt;https://www.reddit.com/r/DeFiFarms/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Githud : &lt;a href="https://github.com/defifarms"&gt;https://github.com/defifarms&lt;/a&gt;
✅Contract: &lt;a href="https://bscscan.com/token/0x2307DfB065CF1c9c5bC0f3435b49830C0AB86847"&gt;https://bscscan.com/token/0x2307DfB065CF1c9c5bC0f3435b49830C0AB86847&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>defifarms</category>
      <category>defiy</category>
      <category>defif</category>
      <category>defi</category>
    </item>
    <item>
      <title>Techniques for learning to program anything and learn programming faster (without programming ease)</title>
      <author>Caio Gomes Braga</author>
      <pubDate>Wed, 23 Jun 2021 19:10:00 +0000</pubDate>
      <link>https://dev.to/caiobraga/techniques-for-learning-to-program-anything-and-learn-programming-faster-without-programming-ease-1f98</link>
      <guid>https://dev.to/caiobraga/techniques-for-learning-to-program-anything-and-learn-programming-faster-without-programming-ease-1f98</guid>
      <description>&lt;p&gt;Link to the original article (Portuguese): &lt;a href="https://programador-de-quintal.webnode.com/l/tecnicas-para-aprender-a-programar-qualquer-coisa-sem-ter-facilidade-com-a-programacao/"&gt;https://programador-de-quintal.webnode.com/l/tecnicas-para-aprender-a-programar-qualquer-coisa-sem-ter-facilidade-com-a-programacao/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this article we are going to discuss a little bit about the process of learning something in programming. If you follow the step by step and implement this way of thinking in your career as a programmer, your life will be much easier. I guarantee. This article was inspired by a video that changed the way I learn, all concepts were even tested in my life.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-dont-compare"&gt;
  &lt;/a&gt;
  1 - Don't compare
&lt;/h2&gt;

&lt;p&gt;Many people think that gift doesn't exist, and it really is a debatable subject. But the fact is, from the outside it seems like for some people your age or younger than you, programming comes naturally, and concepts you don't know seem to be obvious to those people. Talented or not, the fact is that comparing yourself with these people we feel unmotivated.&lt;/p&gt;

&lt;p&gt;Demotivation is bad for you, exclude thoughts like "I can't do it". Think differently, people will learn faster than you and that's normal. It doesn't mean you won't learn, just that you'll learn in your own time.&lt;/p&gt;

&lt;p&gt;Don't compare!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-expose-yourself-to-what-you-want-to-learn-even-without-understanding-anything"&gt;
  &lt;/a&gt;
  2 - Expose yourself to what you want to learn, even without understanding anything
&lt;/h2&gt;

&lt;p&gt;Read articles, watch videos and try programming something. When the feeling of "I don't understand anything" hits, CONGRATULATIONS! You are making progress. But and now? If feeling lost won't get you anywhere, so read more, see more videos and schedule more. No matter how long it takes, the truth is that eventually you will learn. Our brain was made to adapt, it has a characteristic that allows its own physical structure to change to adapt to the environment we play for it. So don't be afraid to expose your brain as much as possible to what you want to learn&lt;/p&gt;

&lt;p&gt;Expose yourself to what you want to learn, even without understanding anything&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-do-not-copy-and-paste-enter-your-code"&gt;
  &lt;/a&gt;
  3 - Do not copy and paste, enter your code
&lt;/h2&gt;

&lt;p&gt;In programming, we created the habit of copying and pasting from an early age, but this mania should be extinguished when it comes to learning something. Just the fact of writing makes you learn a little more. But my suggestion is:&lt;/p&gt;

&lt;p&gt;Write and ask yourself "What does this line of code do?"&lt;/p&gt;

&lt;p&gt;This habit will make you learn what you want faster.&lt;/p&gt;

&lt;p&gt;Do not copy and paste, enter your code&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-get-back-to-the-subject"&gt;
  &lt;/a&gt;
  4 - Get back to the subject
&lt;/h2&gt;

&lt;p&gt;After a few days you've learned a subject, come back to it or review your code, do you remember everything?&lt;/p&gt;

&lt;p&gt;review will help your long-term memory. Try to come back to the subject from time to time and you will see your learning improve a lot.&lt;/p&gt;

&lt;p&gt;back to the subject&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-the-honor-of-the-shirt"&gt;
  &lt;/a&gt;
  5 - The honor of the shirt
&lt;/h2&gt;

&lt;p&gt;What drives me forward in learning is this abstract concept of honoring the programmer's shirt. This part I admit will not make sense to everyone, but it made a lot of sense to me in the past and it still does.&lt;/p&gt;

&lt;p&gt;Imagine the programmers who came before us. They created the computers, the programming logic and they made the first programs without the sea of ​​content that the internet brings. When I think about it, the desire to learn arises, I honestly think our job is relatively easy compared to theirs. It makes me want to go further&lt;/p&gt;

</description>
      <category>programming</category>
      <category>productivity</category>
      <category>braziliandevs</category>
      <category>learning</category>
    </item>
    <item>
      <title>DEV Pride &amp; Alan Turing: The Father of Modern Computing</title>
      <author>dev.to staff</author>
      <pubDate>Wed, 23 Jun 2021 18:39:01 +0000</pubDate>
      <link>https://dev.to/devteam/dev-pride-alan-turing-the-father-of-modern-computing-39in</link>
      <guid>https://dev.to/devteam/dev-pride-alan-turing-the-father-of-modern-computing-39in</guid>
      <description>&lt;p&gt;Today, June 23, would be the 109th birthday of Alan Turing: brilliant English mathematician, computer scientist, and crypto-analyst who made some truly remarkable contributions to the field we all love. &lt;/p&gt;

&lt;p&gt;It's especially meaningful and poignant that Turing was born in June — a month that many countries now recognize as LGBTQIA+ Pride Month. That's because in addition to being a groundbreaking thinker and computer scientist, Alan Turing also happened to be a gay man born into a country that (like far too many) didn't decriminalize homosexuality until the late 1960s. &lt;/p&gt;

&lt;p&gt;Turing died at the age of 41 shortly after being abused at the hands of his own government and convicted as a criminal for his sexuality. Not only was Alan Turing's life cut violently short, but his dazzling accomplishments were stripped away, his reputation tarnished.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That's why each year during his birth month, we celebrate the life and legacy of Alan Turing. As a community of code-obsessed people, we know you'll love reading about a few of his inventions and history-making projects as much as we do...&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#decoding-the-encryption-of-nazi-enigma-machines"&gt;
  &lt;/a&gt;
  Decoding the Encryption of Nazi "Enigma" Machines
&lt;/h3&gt;

&lt;p&gt;During World War II, Turing worked in a high position with Britain’s code-breakers at Bletchley Park. He helped create the original design for the "bombe": an electro-mechanical device to help decipher German Enigma-machine-encrypted secret messages during World War II. This work helped reveal critical Nazi submarine pathways, contributing to the Allied forces eventual success. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#the-turing-test"&gt;
  &lt;/a&gt;
  The "Turing Test"
&lt;/h3&gt;

&lt;p&gt;In 1950, Turing published a thought experiment to explore  whether or not a computer could pass as a human being. The "Turing Test" required a human aid to pose questions to determine if the responses came from a computer or a human. While the test eventually revealed weaknesses, it became an critical milestone in the history of artificial intelligence.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#delilah-a-portable-secure-voice-communications-machine"&gt;
  &lt;/a&gt;
  Delilah: A Portable Secure Voice Communications Machine
&lt;/h3&gt;

&lt;p&gt;During his time at Bletchley Park, Turing also During this period, Turing also created the "Delilah" — a portable machine that could encode a voice message securely and is considered decades ahead of its time. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Note: You can read a complete a transcription of Turing's Delilah report &lt;a href="https://www.turing.org.uk/sources/delilah.html"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;... and much more. For an amazing and detailed look at Alan Turing's life, &lt;a href="https://www.nytimes.com/2019/06/05/obituaries/alan-turing-overlooked.html"&gt;this obituary&lt;/a&gt; from The New York Times' "Overlooked" collection is worth a read. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-alan-turings-life-can-teach-us-about-pride"&gt;
  &lt;/a&gt;
  What Alan Turing's Life Can Teach Us About Pride
&lt;/h3&gt;

&lt;p&gt;Despite obvious accomplishments and service to his country, Alan Turing's life and work was cut short due to bigoted views about his sexuality. It's too easy to look at black and white photos of figures like Turing and convince ourselves that these human atrocities took place in a bygone era that has no relationship to this current moment. &lt;/p&gt;

&lt;p&gt;But the truth is, Turing's conviction for "indecency" was just 69 years ago. A relative speck of time.&lt;/p&gt;

&lt;p&gt;As software developers, it is, of course, our duty to never let what happened to Alan Turing happen again. But it's also important to continuously celebrate the joy and genius of LGBTQIA+ technologists willing to share their authentic lives with us. As a future-oriented field, technology depends on the participation, safety, and empowerment of all people, regardless of race, gender, ethnicity, religion, or sexual-orientation. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#dev-pride"&gt;
  &lt;/a&gt;
  DEV Pride
&lt;/h2&gt;

&lt;p&gt;You might remember that earlier this month, we shared the following message on DEV:  &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/devteam" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__org__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTihtlIw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--nJ87SGF6--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/organization/profile_image/1/0213bbaa-d5a1-4d25-9e7a-10c30b455af0.png" alt="The DEV Team"&gt;
      &lt;div class="ltag__link__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zg3sT9Js--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--vHKcEiTe--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/3/13d3b32a-d381-4549-b95e-ec665768ce8f.png" alt=""&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/devteam/happy-lgbtqia-pride-month-1j7b" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Happy LGBTQIA+ Pride Month! ❤️ &lt;/h2&gt;
      &lt;h3&gt;dev.to staff for The DEV Team ・ Jun 1 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#devpride&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;In the article, we invited our LGBTQIA+ community members to share their unique perspectives about and contributions to technology right here. &lt;/p&gt;

&lt;p&gt;In honor of Alan Turing's birthday and Pride Month, we'd like to share a few of those articles with you today...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#krismally"&gt;
  &lt;/a&gt;
  &lt;a class="mentioned-user" href="https://dev.to/krismally"&gt;@krismally&lt;/a&gt;

&lt;/h4&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/krismally" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iRnJbFuL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--zHhDSqAa--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/641234/8b7a0b7e-80a8-4d4c-be84-87db9418679c.jpeg" alt="krismally"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/krismally/my-journey-as-a-bi-trans-man-29k9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;My Journey as a Bi Trans Man &lt;/h2&gt;
      &lt;h3&gt;Kris ・ Jun 2 ・ 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#devpride&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#mordypython"&gt;
  &lt;/a&gt;
  &lt;a class="mentioned-user" href="https://dev.to/mordypython"&gt;@mordypython&lt;/a&gt;

&lt;/h4&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/mordypython" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--05Rnwrks--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--LbWQbLuH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/584106/b9166177-7c0f-4c30-964c-a8e400022631.jpeg" alt="mordypython"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/mordypython/happy-pride-month-programmers-2i9g" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Happy pride month programmers!&lt;/h2&gt;
      &lt;h3&gt;mordy-python ・ Jun 1 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#devpride&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#lgbtq&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#baenencalin"&gt;
  &lt;/a&gt;
  &lt;a class="mentioned-user" href="https://dev.to/baenencalin"&gt;@baenencalin&lt;/a&gt;

&lt;/h4&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/baenencalin" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E1AvSW17--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Ivkkw2GR--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/509599/8798f39d-3424-4d26-b612-3a5cddfb1663.png" alt="baenencalin"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/baenencalin/happy-pride-month-i-created-a-flag-compilation-video-to-celebrate-1k5o" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Happy Pride Month! I created a flag compilation video to celebrate!&lt;/h2&gt;
      &lt;h3&gt;Calin Baenen ・ Jun 3 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#watercooler&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#lgbtq&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#pride&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#devpride&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#jrohatiner"&gt;
  &lt;/a&gt;
  &lt;a class="mentioned-user" href="https://dev.to/jrohatiner"&gt;@jrohatiner&lt;/a&gt;

&lt;/h4&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/jrohatiner" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nVdOzYpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--dad4zP1b--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/36142/24c07608-756b-4bfd-9393-b4b340c82ac2.jpg" alt="jrohatiner"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/jrohatiner/a-little-history-1cgo" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;A little history &lt;/h2&gt;
      &lt;h3&gt;Judith ・ Jun 2 ・ 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#devpride&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h4&gt;
  &lt;a href="#programazing"&gt;
  &lt;/a&gt;
  &lt;a class="mentioned-user" href="https://dev.to/programazing"&gt;@programazing&lt;/a&gt;

&lt;/h4&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/programazing" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UEjd8S5M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--S36bgmUx--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/400/59e06fa3-6abd-40c1-8e52-a43497fe3ca5.jpg" alt="programazing"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/programazing/don-t-worry-about-what-others-think-coming-out-of-the-closet-4bai" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Don't Worry About What Others Think: Coming Out of the Closet&lt;/h2&gt;
      &lt;h3&gt;Christopher C. Johnson ・ Jan 11 ・ 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#pride&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#lgbt&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#inclusion&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;If you would like to share a story with us in honor of Pride Month, we would love to read it. Just use the tag &lt;a href="//dev.to/t/devpride"&gt;#devpride&lt;/a&gt; so we can find it or use &lt;a href="//dev.to/new/devpride"&gt;this template&lt;/a&gt; as a jumping off point. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Happy Pride and Happy Birthday, Alan Turing!&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#"&gt;
  &lt;/a&gt;
  🏳️‍🌈
&lt;/h2&gt;

</description>
      <category>devpride</category>
    </item>
    <item>
      <title>Don't Be A Coder! Become A Millionaire (Simpler Than You Think)</title>
      <author>DefiFarms Non-Fungible Yearn</author>
      <pubDate>Wed, 23 Jun 2021 18:34:24 +0000</pubDate>
      <link>https://dev.to/defifarms/don-t-be-a-coder-become-a-millionaire-simpler-than-you-think-4d8e</link>
      <guid>https://dev.to/defifarms/don-t-be-a-coder-become-a-millionaire-simpler-than-you-think-4d8e</guid>
      <description>&lt;p&gt;"Millionaire" or "Billionaire" can feel like a huge, unobtainable word, but becoming one is actually more realistic than you might think.&lt;/p&gt;

&lt;p&gt;These days, being a millionaire isn't necessarily about butlers, private jets, and luxury. Instead, it can mean guaranteeing yourself a comfortable (or early) retirement. It can give you the career freedom to pursue a passion instead of being tied to a paycheck. The public perception of "millionaires" may be rooted in consumerism, but that doesn't have to be your goal.&lt;/p&gt;

&lt;p&gt;Just how easy is it to become a millionaire? Well, "easy" isn't the right word—it requires a lot of intentionality, discipline, and patience. The better term is "simple." By studying the common practices of millionaires, we can identify patterns and follow in their steps to become a millionaire.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Watch Now: DeFiFarms A Millionaire Protocol Powerful Automatic Liquidity Acquisition Yield Farm &amp;amp; AMM Built With ❤️ On Binance Smart Chain&lt;/strong&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/6la0fMquxhM"&gt;
&lt;/iframe&gt;
&lt;br&gt;
Let's dive into how to become a millionaire the simple way!&lt;br&gt;
Fork a DeFiFarms github &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/defifarms"&gt;
        defifarms
      &lt;/a&gt; / &lt;a href="https://github.com/defifarms/defifarms-frontend"&gt;
        defifarms-frontend
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      DefiFarms: The First NFTs Protocol Powerful Automatic Liquidity Acquisition Yield Farm &amp;amp; AMM
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;1. Develop a millionaire's mindset&lt;/strong&gt;&lt;br&gt;
Don't worry, I won't tell you to make a vision board (unless you want to). But more than anything, wealth is a mental game. If you're not starting with a solid money mindset, you may struggle to adopt the habits and practices of millionaires that you need.&lt;br&gt;
Some mindset characteristics that will help you are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;   Planning ahead—thinking ahead about your short-term, medium-term, and long-term financial plan, and what you'll do in case of emergencies.&lt;/li&gt;
&lt;li&gt;   Determination—knowing that you'll face challenges but being prepared to overcome them.&lt;/li&gt;
&lt;li&gt;   Patience and delayed gratification—being willing to delay present wants for future goals.&lt;/li&gt;
&lt;li&gt;   Confidence—having faith in yourself that you can pay off that debt that seems insurmountable, reach that next number in your savings account, or launch the business you've been dreaming about. If you start with the mindset that you can't, you probably won't.&lt;/li&gt;
&lt;li&gt;   Openness—being willing to learn, make mistakes or even fail sometimes, and then learn even more. Seek knowledge and surround yourself with positive influences.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, not all millionaires share these traits, but I'm not talking about lottery winners, celebrities, or trust-fund inheritors. I'm talking about regular people who decided they were going to build wealth, and went ahead and did it. They're not that different from you!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Carefully watch your expenses (big and small)&lt;/strong&gt;&lt;br&gt;
One of the quickest ways to hamstring your financial progress is to buy too much house or too much car. You may have heard the term "house poor," and this is what it means. Too many people get caught up in the trap of having overly expensive mortgages and car loans that take up the bulk of their income, leaving them with little or nothing to put towards their savings.&lt;/p&gt;

&lt;p&gt;While big purchase decisions only come around once in a while, your financial plan should also account for small expenses. These can be "death by a thousand cuts" to your savings goals. Look for opportunities to reduce costs like your cell phone bill, cable or subscription services, eating out, shopping for non-necessities, and so on.&lt;/p&gt;

&lt;p&gt;A great goal is to see if you can live on just half of your income and save the other half. Try it as an experiment for a year and keep it going if you can! This will get you to your million dollars a lot faster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Try to max out retirement investment accounts&lt;/strong&gt;&lt;br&gt;
The two most common types of retirement accounts are IRAs, which are personal accounts, and 401(k)s, which are usually offered through work. You can have both kinds, and they both allow you to invest in the stock market while saving money on taxes.&lt;br&gt;
If you contribute as much as you possibly can to these accounts, it's like the fast-track of how to become a millionaire. 2019 brought an all-time high of both "401(k) millionaires" and "IRA millionaires," meaning that people become millionaires just by investing in these accounts.&lt;/p&gt;

&lt;p&gt;This is encouraging because the contribution limits are the same for everyone. For 2020, you can contribute a maximum of $19,500 to a 401(k) and $6,000 to an IRA, according to the IRS. The conclusion here is that those "IRA millionaires" didn't get there because they were already rich and could contribute hundreds of thousands of dollars all at once. It means they got there through slow and steady investing and growth.&lt;/p&gt;

&lt;p&gt;Let's run a few example numbers, based on an average historical return of 10%. Use an investment calculator to play around with it yourself!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  If you max out only your IRA by contributing $500 a month, it would take you about 29 years to become a millionaire.&lt;/li&gt;
&lt;li&gt;  If you max out only your 401(k) by contributing $1625 a month, it would take you about 19 years.&lt;/li&gt;
&lt;li&gt;  If you maxed out both accounts for a total of $2125 a month, you could speed that up to just 16 years.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Like I said before: simple, not necessarily easy!&lt;/p&gt;

&lt;p&gt;Of course, no one knows what the stock market will do in upcoming years. It could have years with a negative return before recovering and growing again. But if you stop yourself from investing out of fear of a crash, you might just find yourself missing out on years of incredible growth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Seize any opportunity to increase your income&lt;/strong&gt;&lt;br&gt;
If you're staring at those numbers above and thinking "Yeah okay, like I have an extra two grand a month"—I'm with you! Even if you've pared down your expenses as far as they'll go, sometimes there's just no more wiggle room.&lt;/p&gt;

&lt;p&gt;That's when it's time to look at the other side of the equation: increasing income.&lt;/p&gt;

&lt;p&gt;This can come in several forms. For instance, you could:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Ask your boss at your current job about opportunities for career growth and promotions.
Job hunt to see if you can get a higher salary offer for a similar role at a new company.
Learn new skills to increase your marketability and make a full career change to a more well-paid industry.
Do side gigs or take on a second job, like these work-from-home jobs.
Start a business and work to scale it.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Clever Girl founder Bola is a great example of income scaling. She saved $100,000 in 3.5 years by living frugally and starting a wedding photography business alongside her full-time job. Then, she launched this blog and grew it into a full-time business.&lt;/p&gt;

&lt;p&gt;Evaluate your skills, interests, and strengths, and brainstorm how to monetize them. The more you earn, the more you'll be able to save and invest.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Use your money to make money&lt;/strong&gt;&lt;br&gt;
Most wealthy people don't just sit on a hoard of gold like a dragon—they put their money to work for them. Using your money to make money with little active effort is called "passive income."&lt;/p&gt;

&lt;p&gt;The easiest way to generate passive income is by investing in stocks or keeping your savings in high-interest bank accounts. If you manage to max out your retirement accounts for the year, you can continue investing money in a brokerage account or an HSA for health expenses.&lt;/p&gt;

&lt;p&gt;Many millionaires attribute their success to real estate investing, which can be active or passive income depending on your method. Learn more about real estate investing options for beginners here. There are also some unique ways to make passive income, like purchasing an ATM and earning through fees, or owning a vending machine in a well-placed location.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Avoid "lifestyle creep"&lt;/strong&gt;&lt;br&gt;
As you scale your income, it becomes tempting to scale your lifestyle too. Lifestyle creep happens when items you once considered luxuries are now part of your new normal. This can be as small as buying expensive coffee every morning, or as big as buying a beach house or a boat.&lt;br&gt;
Another common trap people fall into is "keeping up with the Joneses." If your neighbors, friends, and family members are buying nice cars, eating out every day, and upgrading their houses, it's normal for a little jealousy to creep in.&lt;/p&gt;

&lt;p&gt;But remember, the average American is about $38,000 in debt, not including their mortgages. You don't want to keep up with the Joneses, because the Joneses are stressing about how they're going to pay off that BMW.&lt;/p&gt;

&lt;p&gt;It might sound a little strange, but to become a millionaire, live like you're the opposite of one.&lt;br&gt;
Books on How to Become a Millionaire&lt;/p&gt;

&lt;p&gt;These books help show you how easy it is to become a millionaire, thanks to the many insights from those who have done it before.&lt;/p&gt;

&lt;p&gt;The Millionaire Next Door by Thomas Stanley&lt;/p&gt;

&lt;p&gt;This book digs deeper into the principle of living simply to build wealth. It shows that millionaires can be your Toyota-driving neighbors, and emphasizes why showing off with status symbols is worth so much less than financial independence and security.&lt;/p&gt;

&lt;p&gt;The Simple Path to Wealth by J L Collins&lt;/p&gt;

&lt;p&gt;The holy grail of many in the FI (financial independence) community, and for a good reason. It's clear but comprehensive, and highly actionable no matter what stage you're in of your financial journey.&lt;/p&gt;

&lt;p&gt;The Automatic Millionaire by David Bach&lt;/p&gt;

&lt;p&gt;This has a similar lesson as the Simple Path to Wealth, focusing on maximizing your investments and living below your means. It's a good option for beginners who are looking for a "set it and forget it" process for how to become a millionaire.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In summary&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Becoming a millionaire won't happen overnight, but with hard work, dedication, and time, it's totally within your grasp. Keep in mind, there are so many lessons to learn from millionaires that can act as a roadmap. Your challenge now is to go off and build the mindset and habits you need to create meaningful wealth and a 7-figure future.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Simpleless! Don't need do anything and here we go!&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0c91jwd3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/YVBTrzj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0c91jwd3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/YVBTrzj.png" alt="Get some #DEFIY"&gt;&lt;/a&gt;&lt;br&gt;
It's a secret don't tell anyone&lt;/p&gt;

</description>
      <category>millionaire</category>
      <category>billionaire</category>
      <category>defifarms</category>
      <category>defiy</category>
    </item>
    <item>
      <title>Error 404 Glitch Page in JS,CSS and HTML</title>
      <author>FRADAR</author>
      <pubDate>Wed, 23 Jun 2021 18:26:36 +0000</pubDate>
      <link>https://dev.to/fradar/error-404-glitch-page-in-js-css-and-html-273k</link>
      <guid>https://dev.to/fradar/error-404-glitch-page-in-js-css-and-html-273k</guid>
      <description>&lt;p&gt;An interesting error 404 glitch page.&lt;/p&gt;

&lt;p&gt;See it here:&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR/full/gOmNzYb"&gt;https://codepen.io/FRADAR/full/gOmNzYb&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like it?&lt;/p&gt;

&lt;p&gt;Follow me here (if you want):&lt;br&gt;
&lt;a href="https://codepen.io/FRADAR"&gt;https://codepen.io/FRADAR&lt;/a&gt;&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>404</category>
      <category>webdev</category>
      <category>showdev</category>
    </item>
    <item>
      <title>How To Create a Composer Bin Command with Minicli</title>
      <author>Erika Heidi</author>
      <pubDate>Wed, 23 Jun 2021 18:16:49 +0000</pubDate>
      <link>https://dev.to/erikaheidi/how-to-create-a-composer-bin-command-with-minicli-35ih</link>
      <guid>https://dev.to/erikaheidi/how-to-create-a-composer-bin-command-with-minicli-35ih</guid>
      <description>&lt;p&gt;When creating and distributing PHP software with &lt;a href="https://getcomposer.org"&gt;Composer&lt;/a&gt;, the PHP dependency manager, there are mainly two types of projects you can set up: a &lt;strong&gt;library&lt;/strong&gt; and an &lt;strong&gt;application&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If your code is intended to be included in other applications so that classes and other components are available at code level, then you are most likely building a &lt;strong&gt;library&lt;/strong&gt;. If your code is self-contained as something to be installed and executed as a standalone piece, then you're most likely building an &lt;strong&gt;application&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Sometimes, however, the line between these two types of projects is not very clear. You may want to provide executable code in addition to your library components. There is also the case when you build a tool that needs access to the application context, so that it can't be installed as a separate project and thus needs to be included in the bigger application with a &lt;code&gt;composer require&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With &lt;a href="https://getcomposer.org/doc/articles/vendor-binaries.md"&gt;Composer Bin Commands&lt;/a&gt;, you can include executable scripts within your project and they will be installed (via a symbolic link) on &lt;code&gt;vendor/bin&lt;/code&gt;. Examples of projects using this feature include &lt;a href="https://pestphp.com/docs/installation"&gt;PestPHP&lt;/a&gt; and Laravel &lt;a href="https://laravel.com/docs/8.x/sail"&gt;Sail&lt;/a&gt;, both using Composer bin commands to distribute executable scripts as application dependencies.&lt;/p&gt;

&lt;p&gt;In this tutorial, we'll build a bin Composer command with &lt;a href="https://minicli.dev"&gt;Minicli&lt;/a&gt;, using the &lt;a href="https://api.adviceslip.com"&gt;Advice Slip API&lt;/a&gt;. The code for this project is available as &lt;a href="https://github.com/minicli/advice-slip"&gt;minicli/advice-slip&lt;/a&gt; on GitHub and on Packagist.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h2&gt;

&lt;p&gt;You'll need a PHP development environment with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PHP 7.4+ (CLI only)&lt;/li&gt;
&lt;li&gt;curl / ext-curl&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#step-1-setting-up-a-minicli-application"&gt;
  &lt;/a&gt;
  Step 1: Setting Up a Minicli application
&lt;/h2&gt;

&lt;p&gt;Start by requiring &lt;code&gt;minicli/minicli&lt;/code&gt; in your existing application. In case you don't have an existing application and you would like to create a standalone tool with Minicli, create a new directory for your application and run Composer from there, so it will generate a new &lt;code&gt;composer.json&lt;/code&gt; file for you.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer require minicli/minicli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, create a new &lt;code&gt;bin&lt;/code&gt; directory in the root of your application folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;bin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a new file called &lt;code&gt;minicli&lt;/code&gt; in this folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;bin/minicli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This script will be the entry point of your CLI application that will be made available as Composer bin command.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#note-about-composer-autoload"&gt;
  &lt;/a&gt;
  Note About Composer autoload
&lt;/h3&gt;

&lt;p&gt;When including the Composer autoload script, we'll need to first check if the application is being called from &lt;code&gt;vendor/bin&lt;/code&gt; (as a required dependency) or if it's being called from the application folder itself (as a standalone project). &lt;/p&gt;

&lt;p&gt;To do that, we'll verify the existence of a &lt;code&gt;vendor/autoload.php&lt;/code&gt; file. If that file doesn't exist, it's likely that the application is being called as a dependency in the &lt;code&gt;vendor&lt;/code&gt; folder, which make the autoload script available at a different location.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-2-creating-a-raw-binminicli-endraw-script"&gt;
  &lt;/a&gt;
  Step 2: Creating a &lt;code&gt;bin/minicli&lt;/code&gt; Script
&lt;/h3&gt;

&lt;p&gt;Open the&lt;code&gt;minicli&lt;/code&gt; script file inside the &lt;code&gt;bin&lt;/code&gt; folder, which is currently empty. The following code will implement the autoload verification and bootstrap a new Minicli application using the provided &lt;code&gt;app_path&lt;/code&gt; as command location, similar to the &lt;a href="https://docs.minicli.dev/en/latest/01-getting_started/"&gt;basic demo from official docs&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;#!/usr/bin/php
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;php_sapi_name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;'cli'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$root_app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__DIR__&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;is_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$root_app&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/vendor/autoload.php'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$root_app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__DIR__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="nv"&gt;$root_app&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/vendor/autoload.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Minicli\App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Minicli\Command\CommandCall&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;CommandCall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;registerCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'help'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPrinter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"minicli help"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;runCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$input&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getRawArgs&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Copy these contents to your &lt;code&gt;minicli&lt;/code&gt; script and don't forget to save the file. Then, run the registered &lt;code&gt;help&lt;/code&gt; command with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php bin/minicli &lt;span class="nb"&gt;help&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you confirm the script is working, you can create a new command to fetch contents from the API.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3-creating-a-command-to-obtain-advice-slips"&gt;
  &lt;/a&gt;
  Step 3: Creating a Command To Obtain Advice Slips
&lt;/h3&gt;

&lt;p&gt;The structure is ready and you can now go ahead and implement your command (s).&lt;/p&gt;

&lt;p&gt;Here we'll build a command to fetch an advice slip from the free &lt;a href="https://api.adviceslip.com"&gt;Advice Slip API&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is a free API that doesn't require authentication, but if you want to build something more fun, check out the &lt;a href="https://developers.giphy.com/docs/api/endpoint#translate"&gt;Giphy API&lt;/a&gt; (it requires registering an application and providing API keys). I won't cover it here for simplicity.&lt;/p&gt;

&lt;p&gt;Our command will obtain a random advice, and will also accept a &lt;code&gt;search=term&lt;/code&gt; parameter to search for specific advice. Replace the current content of your &lt;code&gt;minicli&lt;/code&gt; script with the following code, which implements the new "advice" command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;#!/usr/bin/php
&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;php_sapi_name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="s1"&gt;'cli'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;$root_app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__DIR__&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;is_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$root_app&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/vendor/autoload.php'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$root_app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;__DIR__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="nv"&gt;$root_app&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/vendor/autoload.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Minicli\App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Minicli\Command\CommandCall&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;App&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;setSignature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'./bin/minicli advice'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;CommandCall&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;registerCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'help'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPrinter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"./bin/minicli advice"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;registerCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'advice'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$query_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://api.adviceslip.com/advice"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$input&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;hasParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'search'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$query_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://api.adviceslip.com/advice/search/"&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="nv"&gt;$input&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getParam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'search'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nv"&gt;$result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file_get_contents&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$query_url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;json_decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'total_results'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$search_results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'slips'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="nv"&gt;$advice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$search_results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;array_rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$search_results&lt;/span&gt;&lt;span class="p"&gt;)][&lt;/span&gt;&lt;span class="s1"&gt;'advice'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;isset&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'slip'&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nv"&gt;$advice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$content&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'slip'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'advice'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPrinter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;newline&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPrinter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$advice&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="s2"&gt;"No results found."&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getPrinter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;newline&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;runCommand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$input&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getRawArgs&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now try the command with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php bin/minicli advice
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And also:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php bin/minicli advice &lt;span class="nv"&gt;search&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;spiders
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-4-updating-raw-composerjson-endraw-"&gt;
  &lt;/a&gt;
  Step 4: Updating &lt;code&gt;composer.json&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Once your command is functional, you want to update your &lt;code&gt;composer.json&lt;/code&gt; to include the Bin definition.&lt;/p&gt;

&lt;p&gt;If this is a new application, you may also want to update the name and other information, since you'll need to submit your code to packagist.org in order to make it available to use via &lt;code&gt;composer require&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is how my &lt;code&gt;composer.json&lt;/code&gt; file looks after the update (I set this package name to &lt;code&gt;minicli/advice-slip&lt;/code&gt;, you should use a different name).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"minicli/advice-slip"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Demo - Advice Slip"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"MIT"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"homepage"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://github.com/minicli/advice-slip"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"keywords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"cli"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"command-line"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"demo"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"require"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"minicli/minicli"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ext-json"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"*"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"bin"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"bin/minicli"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If your project is already on Packagist, then you only need to commit and push your changes to the remote repository. Otherwise, follow the next step to set it up with Packagist.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-submitting-the-package-to-packagist-in-case-its-a-standalone-command"&gt;
  &lt;/a&gt;
  Step 5: Submitting the Package to Packagist (In case it's a standalone command)
&lt;/h2&gt;

&lt;p&gt;To make the command available to anyone who would like to use it through Composer, your package / application must be submitted on &lt;a href="https://packagist.org"&gt;Packagist.org&lt;/a&gt;. To do that, first you need to push your application to a public repository on GitHub. Once you have the repository URL, you can log in on Packagist and submit your new package:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H0ZOHiCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7624mpqvqamdb0tlois.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H0ZOHiCZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k7624mpqvqamdb0tlois.png" alt="Submitting Package on Packagist"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also make sure you have at least one release in your GitHub repository (such as 0.1.0) so that you can require it from Composer (better than using dev-main).&lt;/p&gt;

&lt;p&gt;Once everything is set up, you can include this command / application in other projects with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer require minicli/advice-slip
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The command will then be available as:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;./vendor/bin/minicli advice
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;php vendor/bin/minicli advice
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this tutorial, we've seen how to create a single command application with Minicli and how to turn it into a Composer Bin Command.&lt;/p&gt;

&lt;p&gt;You can have access to this project's codebase at &lt;a href="https://github.com/minicli/advice-slip"&gt;https://github.com/minicli/advice-slip&lt;/a&gt; .&lt;/p&gt;

</description>
      <category>php</category>
      <category>tutorial</category>
      <category>showdev</category>
    </item>
  </channel>
</rss>
