<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to make a custom Debounce hook in react js</title>
      <author>Rajesh Royal</author>
      <pubDate>Mon, 24 Jan 2022 16:41:00 +0000</pubDate>
      <link>https://dev.to/rajeshroyal/how-to-make-a-custom-debounce-hook-in-react-js-4gcc</link>
      <guid>https://dev.to/rajeshroyal/how-to-make-a-custom-debounce-hook-in-react-js-4gcc</guid>
      <description>&lt;p&gt;I could have use the &lt;strong&gt;Loadash&lt;/strong&gt; naaahh... üôÖ‚Äç‚ôÄÔ∏è Loadash is too expensive. &lt;/p&gt;

&lt;p&gt;So here is how you can make your own debounce effect with &lt;strong&gt;custom hooks&lt;/strong&gt; in &lt;em&gt;react js&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;useDebouncedEffect.tsx&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useDebouncedEffect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;effect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;deps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;[],&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;effect&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clearTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="c1"&gt;// eslint-disable-next-line react-hooks/exhaustive-deps&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[...(&lt;/span&gt;&lt;span class="nx"&gt;deps&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;[]),&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To use this hook simply call It like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useDebouncedEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./useDebouncedEffect&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

 &lt;span class="c1"&gt;// debounce search onchange&lt;/span&gt;
  &lt;span class="c1"&gt;// eslint-disable-next-line react-hooks/exhaustive-deps&lt;/span&gt;
  &lt;span class="nx"&gt;useDebouncedEffect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// function which will be running on effect, in our case when something changes in search box.&lt;/span&gt;
       &lt;span class="nx"&gt;changeSearchState&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="c1"&gt;// this is the dependency, if it changes it will trigger the debounce again&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;search&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="c1"&gt;// time to wait before effect runs&lt;/span&gt;
    &lt;span class="nx"&gt;debounceTimeInMilliseconds&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;credit - from Internet [R&amp;amp;D]&lt;/p&gt;

&lt;p&gt;Thanks for reading this far üòÉ&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Fact: Do you know you can hit that follow button on top right and make it disappear üòÑ. Do not believe me try once üëç&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Bubble Sort</title>
      <author>Payalsasmal</author>
      <pubDate>Mon, 24 Jan 2022 16:15:46 +0000</pubDate>
      <link>https://dev.to/payalsasmal/bubble-sort-5bk9</link>
      <guid>https://dev.to/payalsasmal/bubble-sort-5bk9</guid>
      <description>&lt;p&gt;Hi Everyone, Hope you are safe.&lt;br&gt;
I thought to create a series of sorting algorithms. I will try my best to make it simple. If you still have doubt let me know in the comment section.&lt;/p&gt;

&lt;p&gt;Let's begin........&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Background:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Bubble sort is the simplest algorithm. This is used for understanding purpose of a student. How the sorting algorithms works.&lt;/li&gt;
&lt;li&gt;Bubble sort is good for small size of input.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What is Bubble sort:&lt;/strong&gt;&lt;br&gt;
Take the larger number to the end and repeatedly swapping the adjacent elements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Examples:&lt;/strong&gt;&lt;br&gt;
arr = [4, 8, 1, 2, 6, 7]&lt;br&gt;
&lt;strong&gt;First times:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[4, 8, 1, 2, 6, 7] -&amp;gt; it compares between first and 2nd element i.e, 4&amp;gt;8. it false so didn't swap.&lt;/li&gt;
&lt;li&gt;[4, 8, 1, 2, 6, 7] -&amp;gt; it compares between 2nd and 3rd element i.e 8&amp;gt;1. Now array is [4, &lt;strong&gt;1&lt;/strong&gt;, &lt;strong&gt;8&lt;/strong&gt;, 2, 6, 7].same way it will go for others array values.&lt;/li&gt;
&lt;li&gt;[4, 1, 8, 2, 6, 7] -&amp;gt; [4, 1, &lt;strong&gt;2&lt;/strong&gt;, &lt;strong&gt;8&lt;/strong&gt;, 6, 7], 8&amp;gt;2,swapped it.&lt;/li&gt;
&lt;li&gt;[4, 1, 2, 8, 6, 7] -&amp;gt; [4, 1, 2, &lt;strong&gt;6&lt;/strong&gt;, &lt;strong&gt;8&lt;/strong&gt;, 7], 8&amp;gt;6,swapped it.&lt;/li&gt;
&lt;li&gt;[4, 1, 2, 6, 8, 7] -&amp;gt; [4, 1, 2, 6, &lt;strong&gt;7&lt;/strong&gt;, &lt;strong&gt;8&lt;/strong&gt;], 8&amp;gt;7,swapped it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Second times:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[4, 1, 2, 6, 7, 8] -&amp;gt; [&lt;strong&gt;1&lt;/strong&gt;, &lt;strong&gt;4&lt;/strong&gt;, 2, 6, 7, 8], 4&amp;gt;1,swapped it.&lt;/li&gt;
&lt;li&gt;[1, 4, 2, 6, 7, 8] -&amp;gt; [1, &lt;strong&gt;2&lt;/strong&gt;, &lt;strong&gt;4&lt;/strong&gt;, 6, 7, 8], 4&amp;gt;2,swapped it.&lt;/li&gt;
&lt;li&gt;[1, 2, 4, 6, 7, 8] -&amp;gt; [1, 2, 4, 6, 7, 8], elements(4 &amp;amp; 6) are already in correct position so it did not swap.&lt;/li&gt;
&lt;li&gt;[1, 2, 4, 6, 7, 8] -&amp;gt; [1, 2, 4, 6, 7, 8], elements(6 &amp;amp; 7) are already in correct position so it did not swap.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It will go for other iterations. Check the below illustration for better understanding.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Slx1DkrM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siqy1unnhdjv3mij3jn9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Slx1DkrM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/siqy1unnhdjv3mij3jn9.jpg" alt="bubble sort explanation" width="792" height="730"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We can see that larger element is going at end position using this algorithm.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Let's implement so far we discussed:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cj-TRuY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6anu0jz0sjxt3t0wqimh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cj-TRuY6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6anu0jz0sjxt3t0wqimh.png" alt="bubble sort code" width="880" height="272"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jmqoE4AC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4krto2t2jkpn3p8xdkhf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jmqoE4AC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4krto2t2jkpn3p8xdkhf.png" alt="output of bubble sort" width="880" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time complexity:&lt;/strong&gt;&lt;br&gt;
The time complexity of this algorithm is &lt;strong&gt;O(n^2)&lt;/strong&gt; for worst case.&lt;/p&gt;

&lt;p&gt;when &lt;em&gt;times=0&lt;/em&gt; we iterate till &lt;em&gt;n-1&lt;/em&gt; where n = len(arr). &lt;br&gt;
when &lt;em&gt;times=1&lt;/em&gt; we iterate till &lt;em&gt;n-2&lt;/em&gt; where n = len(arr).&lt;br&gt;
when &lt;em&gt;times=2&lt;/em&gt; we iterate till &lt;em&gt;n-3&lt;/em&gt; where n = len(arr).&lt;br&gt;
and so no.........&lt;/p&gt;

&lt;p&gt;Based on above iteration, we calculated the time complexity.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--v44HiY-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kg7vm6332k444m14vnfk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--v44HiY-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kg7vm6332k444m14vnfk.png" alt="time complexity" width="880" height="233"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Optimization:&lt;/strong&gt; As per the above code, time complexity would be O(n^2) even though array is in sorted order. Because the inner loop always iterate and swap the value. If we stop the swapping then the time complexity would be O(n) for sorted array.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EwVGX1Hv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnu366rocba6fqoftmnf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EwVGX1Hv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vnu366rocba6fqoftmnf.png" alt="optimized code" width="880" height="317"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XwoRFvB8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wg2m0fbkzwjzcd190y71.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XwoRFvB8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wg2m0fbkzwjzcd190y71.png" alt="optimized output" width="880" height="83"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Worst and Average Case Time Complexity:&lt;/strong&gt; &lt;strong&gt;O(n^2)&lt;/strong&gt;. worst case occurs when array is in descending order.&lt;br&gt;
&lt;strong&gt;Best Case Time Complexity:&lt;/strong&gt; O(n) when array is in sorted order.&lt;br&gt;
&lt;strong&gt;Space Complexity:&lt;/strong&gt; There is no extra array or something else so space complexity should be &lt;strong&gt;O(1)&lt;/strong&gt;.&lt;br&gt;
&lt;a href="https://www.geeksforgeeks.org/stability-in-sorting-algorithms/#:~:text=A%20sorting%20algorithm%20is%20said,input%20array%20to%20be%20sorted"&gt;Stable&lt;/a&gt;: Yes&lt;/p&gt;

</description>
      <category>dsa</category>
      <category>python</category>
      <category>codenewbie</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Grab HTML of any Website using JavaScript without getting blocked - Wholly API</title>
      <author>Shaswat Raj</author>
      <pubDate>Mon, 24 Jan 2022 16:15:31 +0000</pubDate>
      <link>https://dev.to/sh20raj/grab-html-of-any-website-using-javascript-without-getting-blocked-wholly-api-41fl</link>
      <guid>https://dev.to/sh20raj/grab-html-of-any-website-using-javascript-without-getting-blocked-wholly-api-41fl</guid>
      <description>&lt;p&gt;üîÜ Wholly API :- &lt;a href="https://wholly-api.herokuapp.com/"&gt;https://wholly-api.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#api-endpoint"&gt;
  &lt;/a&gt;
  API endpoint-
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;https://wholly-api.herokuapp.com/get/website-data.php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Fetch Using JavaScript :- &lt;a href="https://www.google.com/search?q=javascript+fetch+json+from+url"&gt;Ref. Google&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;See Example :-&lt;br&gt;
Fetching example.com&lt;/p&gt;

&lt;p&gt;&lt;a href="https://wholly-api.herokuapp.com/get/website-data.php?get_html=https://example.com/"&gt;https://wholly-api.herokuapp.com/get/website-data.php?get_html=https://example.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The result looks like &lt;a href="https://wholly-api.herokuapp.com/get/website-data.php?get_html=https://example.com/"&gt;here&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;html&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Example Domain&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;      &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"Content-type"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"text/html; charset=utf-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"viewport"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"width=device-width, initial-scale=1"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/css"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#f0f0f2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;-apple-system&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;system-ui&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;BlinkMacSystemFont&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Segoe UI"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Open Sans"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;"Helvetica Neue"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Helvetica&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Arial&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;              &lt;span class="p"&gt;}&lt;/span&gt;     &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5em&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#fdfdff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="m"&gt;7px&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="n"&gt;rgba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="m"&gt;0.02&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="p"&gt;}&lt;/span&gt;     &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:link&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="nd"&gt;:visited&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#38488f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="nl"&gt;text-decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;     &lt;span class="p"&gt;}&lt;/span&gt;     &lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;         &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;             &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;             &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="p"&gt;}&lt;/span&gt;     &lt;span class="p"&gt;}&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Example Domain&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This domain is for use in illustrative examples in documents. You may use this     domain in literature without prior coordination or asking for permission.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;     &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://www.iana.org/domains/example"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;More information...&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#lets-do-it-using-javascript-fetch-api"&gt;
  &lt;/a&gt;
  Let's do it Using JavaScript (Fetch API)
&lt;/h2&gt;

&lt;p&gt;Ref. -&amp;gt; &lt;a href="https://www.google.com/search?q=javascript+fetch+api"&gt;https://www.google.com/search?q=javascript+fetch+api&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sample JavaScript Code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://wholly-api.herokuapp.com/get/website-data.php?get_html=https://example.com/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Result&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt;     &amp;lt;title&amp;gt;Example Domain&amp;lt;/title&amp;gt;      &amp;lt;meta charset="utf-8" /&amp;gt;     &amp;lt;meta http-equiv="Content-type" content="text/html; charset=utf-8" /&amp;gt;     &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1" /&amp;gt;     &amp;lt;style type="text/css"&amp;gt;     body {         background-color: #f0f0f2;         margin: 0;         padding: 0;         font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;              }     div {         width: 600px;         margin: 5em auto;         padding: 2em;         background-color: #fdfdff;         border-radius: 0.5em;         box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);     }     a:link, a:visited {         color: #38488f;         text-decoration: none;     }     @media (max-width: 700px) {         div {             margin: 0 auto;             width: auto;         }     }     &amp;lt;/style&amp;gt;     &amp;lt;/head&amp;gt;  &amp;lt;body&amp;gt; &amp;lt;div&amp;gt;     &amp;lt;h1&amp;gt;Example Domain&amp;lt;/h1&amp;gt;     &amp;lt;p&amp;gt;This domain is for use in illustrative examples in documents. You may use this     domain in literature without prior coordination or asking for permission.&amp;lt;/p&amp;gt;     &amp;lt;p&amp;gt;&amp;lt;a href="https://www.iana.org/domains/example"&amp;gt;More information...&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>sh20raj</category>
      <category>whollyapi</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tests Basics in Kraken¬†CI</title>
      <author>Michal Nowikowski</author>
      <pubDate>Mon, 24 Jan 2022 16:14:31 +0000</pubDate>
      <link>https://dev.to/godfryd/tests-basics-in-kraken-ci-1lne</link>
      <guid>https://dev.to/godfryd/tests-basics-in-kraken-ci-1lne</guid>
      <description>&lt;p&gt;In the last few articles there was a lot about autoscaling. Now let's get back to the core of Kraken CI: testing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://kraken.ci/"&gt;Kraken CI&lt;/a&gt; is a new Continuous Integration tool. It is a modern, open-source, on-premise CI/CD system that is highly scalable and focused on testing. It is licensed under Apache 2.0 license. Its source code is available on &lt;a href="https://github.com/Kraken-CI/kraken"&gt;Kraken CI GitHub page&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Testing in Kraken CI is much more organized that it is in e.g. Jenkins. Testing is planned in branches and high level view on results is also presented for branches. Then, it is possible to dig deeper into runs, jobs and particular test case results. More details about all this can be found in the following sections.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#branch-results"&gt;
  &lt;/a&gt;
  Branch Results
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;Branch Results&lt;/code&gt; page presents high-level information about the flows and runs of a given branch. It organizes flows in rows. The top row contains the latest flow. Each flow row contains a list of boxes. Each box contains information about a run of a given stage. The order of boxes with runs is chronological according to their start time.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0f8wgIo---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc0fqt18wt0rbrcnp1cf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0f8wgIo---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fc0fqt18wt0rbrcnp1cf.png" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#run-box"&gt;
  &lt;/a&gt;
  Run Box
&lt;/h2&gt;

&lt;p&gt;The color of the run box indicates the final status of the run:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;red: one or more jobs finished with an error&lt;/li&gt;
&lt;li&gt;yellow: no errors in jobs but some test results failed or there are issues discovered in the code&lt;/li&gt;
&lt;li&gt;green: all jobs finished without error and there are no failures in tests and no issues in the code&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A run box contains:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data about execution: total number of scheduled jobs, number of erred jobs, etc.&lt;/li&gt;
&lt;li&gt;summary of testing: pass ratio, total, regressions and fixes counts, etc&lt;/li&gt;
&lt;li&gt;issues summary: total number of discovered issues, number of new issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example 1:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1cjdSzHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/868lkpn3cckyvbmtvrua.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1cjdSzHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/868lkpn3cckyvbmtvrua.png" alt="Image description" width="880" height="160"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This run has 1 successful job that reported tests results. There were 100 test cases run, where 16 did not pass, so the pass ratio is 16%. There were detected 15 regressions and 13 fixes. There are failures, so the box is yellow.&lt;/p&gt;

&lt;p&gt;Example 2:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q0MQK9ex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/es9st56u1tj0wo7dvglx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q0MQK9ex--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/es9st56u1tj0wo7dvglx.png" alt="Image description" width="391" height="136"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This run has 4 jobs with no errors. Some of them reported tests results, the other ones reported issues. There were 17 test cases run, all passed, so the pass ratio is 100%. There were detected 15 issues in the code. There are issues, so the box is yellow.&lt;/p&gt;

&lt;p&gt;Example 3:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f9-UNcR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nst92eu1tu50re0xjpn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f9-UNcR5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9nst92eu1tu50re0xjpn.png" alt="Image description" width="389" height="116"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This run has 2 jobs with no errors. In the reported tests results, there are 100% passed test cases. No failures and no issues, so the box is green.&lt;/p&gt;

&lt;p&gt;Example 4:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sOzC6l7W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34iom00rf1yfj00a97vn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sOzC6l7W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/34iom00rf1yfj00a97vn.png" alt="Image description" width="392" height="134"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This run has 4 jobs with 1 error. All tests reported are passed but there could be not reported tests due to errors in job execution. There were detected 6 issues in the code. There is one erred job so the box is red.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-case-results-table"&gt;
  &lt;/a&gt;
  Test Case Results Table
&lt;/h2&gt;

&lt;p&gt;A job that performs testing reports test results. The test results are visible on a &lt;code&gt;Run Results&lt;/code&gt; page, in &lt;code&gt;Test Results&lt;/code&gt; tab. They are presented in a table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1zVHGky_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o05kmlzpmxaekmt4i5v3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1zVHGky_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o05kmlzpmxaekmt4i5v3.png" alt="Image description" width="880" height="528"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The table presents test case results in each row. They contain details of the test case result:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the result status&lt;/li&gt;
&lt;li&gt;a name of the test case&lt;/li&gt;
&lt;li&gt;job name and ID&lt;/li&gt;
&lt;li&gt;age, instability and relevancy&lt;/li&gt;
&lt;li&gt;values&lt;/li&gt;
&lt;li&gt;execution environment: system, agent group and actual agent and config&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In Kraken, a test case result besides status can contain values. Values are pairs: attribute and its value. They are also a result of a test case but hold numbers. They can hold e.g. performance data or anything similar to performance. These values are tracked over time. Kraken can draw charts of values and do more things with them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#filtering-test-case-results"&gt;
  &lt;/a&gt;
  Filtering Test Case Results
&lt;/h2&gt;

&lt;p&gt;It is possible to filter test results by various attributes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;by &lt;code&gt;Results Status&lt;/code&gt; ie. &lt;code&gt;Passed&lt;/code&gt;, &lt;code&gt;Failed&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;by &lt;code&gt;Result Change&lt;/code&gt; ie. &lt;code&gt;Fixes&lt;/code&gt;, &lt;code&gt;Regressions&lt;/code&gt;, &lt;code&gt;New&lt;/code&gt; and &lt;code&gt;No Changes&lt;/code&gt;; the change is determined between the current result and the previous result from previous run&lt;/li&gt;
&lt;li&gt;by &lt;code&gt;Age&lt;/code&gt; where age is a number of previous runs with the same result as in the current run; so e.g. age 0 means that in the previous run test case had a different result than it has now (so these are regressions and fixes); age 1 means that the current run and the previous run has the same result but the result before the previous one is different&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;New&lt;/code&gt; is a shortcut to set &lt;code&gt;Age&lt;/code&gt; between 0 and 0, ie. show changes that happened in the last run (fixes + regressions)&lt;/li&gt;
&lt;li&gt;by &lt;code&gt;Instability&lt;/code&gt; where instability is a count of result status changes in the last 10 runs; if this is 0 then in the last 10 runs test case has the same result (it was pretty stable); if this is 10 then it means that in every run of the last 10 runs the status was changing compared to the previous one (it was very unstable)&lt;/li&gt;
&lt;li&gt;by &lt;code&gt;Test Case&lt;/code&gt; name&lt;/li&gt;
&lt;li&gt;by &lt;code&gt;Job&lt;/code&gt; name of ID&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Example 1:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dC4m1LAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3l75qg8ckcsxdvluyrk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dC4m1LAk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3l75qg8ckcsxdvluyrk.png" alt="Image description" width="880" height="361"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Filtering by &lt;code&gt;Result Changes&lt;/code&gt;: show only regressions. Regression means a change from non-passed status to passed status.&lt;/p&gt;

&lt;p&gt;Example 2:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HtasxJT7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs2f3i376f51g1w5gwxv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HtasxJT7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cs2f3i376f51g1w5gwxv.png" alt="Image description" width="880" height="333"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Filtering by &lt;code&gt;Result Status&lt;/code&gt; and &lt;code&gt;Result Changes&lt;/code&gt;: show only failures that are regressions.&lt;/p&gt;

&lt;p&gt;Example 3:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7XaZIt6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lj63tjm8mcdvptmujso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7XaZIt6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1lj63tjm8mcdvptmujso.png" alt="Image description" width="880" height="305"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Filtering by &lt;code&gt;Age&lt;/code&gt;: show only results in age between 2 and 3.&lt;/p&gt;

&lt;p&gt;Example 4:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XOgvCK_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbgf6rn1lt3q3quph4ze.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XOgvCK_j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jbgf6rn1lt3q3quph4ze.png" alt="Image description" width="880" height="307"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Filtering by &lt;code&gt;Instability&lt;/code&gt;: show only results that have instability greater than 7 i.e. very unstable test cases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sorting-test-case-results"&gt;
  &lt;/a&gt;
  Sorting Test Case Results
&lt;/h2&gt;

&lt;p&gt;Test case results can be sorted. This can be done using several columns:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;name&lt;/li&gt;
&lt;li&gt;result&lt;/li&gt;
&lt;li&gt;change&lt;/li&gt;
&lt;li&gt;age&lt;/li&gt;
&lt;li&gt;instability&lt;/li&gt;
&lt;li&gt;relevancy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ceSAGwIy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpp797b3aquycxgo4m86.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ceSAGwIy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hpp797b3aquycxgo4m86.png" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By default results are sorted by test case name.&lt;/p&gt;

&lt;p&gt;One of the most important sorting order is by &lt;code&gt;Relevancy&lt;/code&gt;.&lt;br&gt;
Relevancy is estimated according to this rules:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;0 is initial&lt;/li&gt;
&lt;li&gt;+1 for not passed&lt;/li&gt;
&lt;li&gt;+1 for not root caused problem&lt;/li&gt;
&lt;li&gt;+1 for failure&lt;/li&gt;
&lt;li&gt;+1 for instability &amp;lt;= 3&lt;/li&gt;
&lt;li&gt;+1 for age &amp;lt; 5&lt;/li&gt;
&lt;li&gt;+1 for regression&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This way the most relevant results get the highest score. They need an&lt;br&gt;
attention.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---hgxCFBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5yopmwj3rqtfhvqol13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---hgxCFBW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i5yopmwj3rqtfhvqol13.png" alt="Image description" width="880" height="211"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#comments"&gt;
  &lt;/a&gt;
  Comments
&lt;/h2&gt;

&lt;p&gt;In the test case results table, it is possible to add sticky comments to test case results. When a new failure is spotted, a comment stating, e.g. the reason for the failure or link to a bug in a bug tracker may be added.&lt;/p&gt;

&lt;p&gt;To add a comment, click on the cell of a particular test case result in the &lt;code&gt;Comment&lt;/code&gt; or &lt;code&gt;Comment State&lt;/code&gt; columns.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BfX8z9AQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3jtq20mx02fck86mysu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BfX8z9AQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3jtq20mx02fck86mysu.png" alt="Image description" width="880" height="371"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will reveal a dialog box that shows a form for introducing new comment and a history of previous comments related to this test case.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--waK2PNcx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfom9d9milv36tkloj2e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--waK2PNcx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zfom9d9milv36tkloj2e.png" alt="Image description" width="880" height="474"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each comment has a state. It can be one of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;new&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;investigating&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bug in product&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bug in test&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The state allows concluding quickly if given failure has been analyzed and it is known where is the root cause and what needs to be fixed or if the failure still requires some investigation.&lt;/p&gt;

&lt;p&gt;If a failure is root-caused, then its relevancy is decreased by 1.&lt;/p&gt;

&lt;p&gt;If the failure persists in the subsequent test runs, the added comment is still presented next to the new results. If new facts about the failure are revealed, you may extend the comment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-case-history"&gt;
  &lt;/a&gt;
  Test Case History
&lt;/h2&gt;

&lt;p&gt;Each test case has its history of results. In the table with test case results a link under the test case name leads to a page dedicated to the given test case. This page presents a table with the historical results of the test case.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---Pa-H8d0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/be4zpq0nte2zyekkojgc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---Pa-H8d0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/be4zpq0nte2zyekkojgc.png" alt="Image description" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is another tab called &lt;code&gt;Charts&lt;/code&gt; that shows these results on charts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8TKZjGp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ijft4x6np4ten69wd18.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8TKZjGp2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ijft4x6np4ten69wd18.png" alt="Image description" width="880" height="398"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The left chart shows the history of result status. The right one presents the history of values in time. Error bars are shown if there were run multiple iterations and there were reported multiple values for a given attribute.&lt;/p&gt;

</description>
      <category>cicd</category>
      <category>testing</category>
      <category>devops</category>
    </item>
    <item>
      <title>Instagram Image downloader Using JavaScript - API - Wholly API</title>
      <author>Shaswat Raj</author>
      <pubDate>Mon, 24 Jan 2022 15:51:35 +0000</pubDate>
      <link>https://dev.to/sh20raj/instagram-image-downloader-using-javascript-api-wholly-api-10h2</link>
      <guid>https://dev.to/sh20raj/instagram-image-downloader-using-javascript-api-wholly-api-10h2</guid>
      <description>&lt;p&gt;Wholly API :- &lt;a href="https://wholly-api.herokuapp.com/" rel="dofollow"&gt;&lt;/a&gt;&lt;a href="https://wholly-api.herokuapp.com/"&gt;https://wholly-api.herokuapp.com/&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#see-this-is-the-api-endpoint"&gt;
  &lt;/a&gt;
  See This is the API endpoint-
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;https://wholly-api.herokuapp.com/websites/instagram.com/&lt;/code&gt;&lt;/p&gt;




&lt;p&gt;Fetch Using JavaScript :- &lt;a href="https://www.google.com/search?q=javascript+fetch+json+from+url"&gt;Ref. Google&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Users can fetch the websites content on there website &lt;strong&gt;even using Pure JavaScript&lt;/strong&gt;.&lt;br&gt;
The different URLs will return you different results in JSON format. Just grab the JSON Using any Server Side or Client Side Language and Show on website.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#some-api-uses-are-given-below-"&gt;
  &lt;/a&gt;
  Some API Uses are Given Below :-
&lt;/h2&gt;
&lt;h3&gt;
  &lt;a href="#get-image-url"&gt;
  &lt;/a&gt;
  Get Image URL
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;https://wholly-api.herokuapp.com/websites/instagram.com/get.php?id={{Your Post's id}}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;See Example Here :-&lt;br&gt;
&lt;a href="https://wholly-api.herokuapp.com/websites/instagram.com/get.php?id=CTNfli3BBjm"&gt;https://wholly-api.herokuapp.com/websites/instagram.com/get.php?id=CTNfli3BBjm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will return a JSON you something like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"status"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"CTNfli3BBjm"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"size"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"download"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https:&lt;/span&gt;&lt;span class="se"&gt;\/\/&lt;/span&gt;&lt;span class="s2"&gt;instagram.frix7-1.fna.fbcdn.net&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;v&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;t51.2885-15&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;fr&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;e15&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;s1080x1080&lt;/span&gt;&lt;span class="se"&gt;\/&lt;/span&gt;&lt;span class="s2"&gt;240861377_526778131722483_3660906133080731993_n.jpg?_nc_ht=instagram.frix7-1.fna.fbcdn.net&amp;amp;_nc_cat=103&amp;amp;_nc_ohc=y2c3ORYMPZ4AX9xAkT2&amp;amp;edm=AJBgZrYBAAAA&amp;amp;ccb=7-4&amp;amp;oh=00_AT9ZHB8968BdogXjdK-qICObgQt0SstDSz03wFIdoxrSFQ&amp;amp;oe=61F63400&amp;amp;_nc_sid=78c662"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The API will be improved more.&lt;br&gt;
Features yet to be added :-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Reels downloading&lt;/li&gt;
&lt;li&gt;Multiple Image Downloading&lt;/li&gt;
&lt;li&gt;Profile image downloading&lt;/li&gt;
&lt;li&gt;and many more...&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>whollyapi</category>
      <category>sh20raj</category>
      <category>instagram</category>
    </item>
    <item>
      <title>Create a WordPress website with just a click!</title>
      <author>Mahdi Taleghani</author>
      <pubDate>Mon, 24 Jan 2022 15:47:53 +0000</pubDate>
      <link>https://dev.to/taleghanimahdi/create-a-wordpress-website-with-just-a-click-1c4f</link>
      <guid>https://dev.to/taleghanimahdi/create-a-wordpress-website-with-just-a-click-1c4f</guid>
      <description>&lt;p&gt;Hi, I'm Mahdi founder of &lt;a href="//wp1click.com"&gt;wp1click.com&lt;/a&gt;&lt;br&gt;
in this post I am going to introduce you WordPress 1 Click platform. A platform which I have created with Laravel, Docker Swarm and Python.&lt;/p&gt;

&lt;p&gt;It makes a WordPress website for you with just a click on a subdomain. so you can create your websites or landing pages with just a click without any hassle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fE4CT29y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nymc1yobrwzflca975ax.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fE4CT29y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nymc1yobrwzflca975ax.png" alt="WordPress 1 Click Platform" width="880" height="423"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also Connect your own Domain. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technologies"&gt;
  &lt;/a&gt;
  Technologies
&lt;/h2&gt;

&lt;p&gt;The platform is built on top of docker swarm. means the websites are in a docker container so it can provide more optimistic security in the WordPress market! &lt;/p&gt;

&lt;p&gt;(&lt;a href="//wp1click.com"&gt;Main website &lt;/a&gt; is built with Laravel Jetstream and Inertia js.&lt;/p&gt;

&lt;p&gt;The front-end is using Vue.js&lt;/p&gt;

&lt;p&gt;The core of platform is handled by Docker python API. Laravel sends commands to a flask container and it connects to Docker socket with the &lt;a href="https://docker-py.readthedocs.io/en/stable/api.html"&gt;Docker Python API&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-your-wordpress-website-with-just-a-click"&gt;
  &lt;/a&gt;
  Creating Your WordPress website with just a Click
&lt;/h2&gt;

&lt;p&gt;for creating a website in &lt;a href="//wp1click.com"&gt;wp1click.com&lt;/a&gt; you just need to sign-up. you can sign-up easily with your Google account. &lt;/p&gt;

&lt;p&gt;then in the dashboard just enter a name for your website. e.g &lt;em&gt;mySweetWordPressWebsite&lt;/em&gt;. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qHPskHUN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxthelxbhpvi3686y3z0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qHPskHUN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mxthelxbhpvi3686y3z0.png" alt="Image description" width="880" height="410"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then click on the Create Button! it takes about 10 to 20 seconds so wait a little :)&lt;/p&gt;

&lt;p&gt;And that's it! wait a little and after a few seconds your WordPress website is live. you just need to complete the famous WordPress installation wizard.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_chxBNyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31q0my32o06dkmu8guog.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_chxBNyV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/31q0my32o06dkmu8guog.png" alt="Image description" width="880" height="446"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Horray! &lt;br&gt;
Also it provides you a free subdomain. so you don't need buy any Shared Linux host or domain for just testing or creating a landing page with &lt;a href="https://elementor.com/"&gt;Elementor&lt;/a&gt; or &lt;a href="https://visualcomposer.com/"&gt;Visual Composer&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I would appreciate it if you had any advice or comment on the platform.&lt;/p&gt;

&lt;p&gt;Enjoy your WordPress website!&lt;br&gt;
Checkout WordPress 1 Click Platform:&lt;br&gt;
&lt;a href="//wp1click.com"&gt;wp1click.com&lt;/a&gt;&lt;/p&gt;

</description>
      <category>wordpress</category>
      <category>paas</category>
      <category>docker</category>
      <category>laravel</category>
    </item>
    <item>
      <title>Transitioning from the Army into Tech</title>
      <author>Stefan</author>
      <pubDate>Mon, 24 Jan 2022 15:39:37 +0000</pubDate>
      <link>https://dev.to/codewithfan/transitioning-from-the-army-into-tech-2c8p</link>
      <guid>https://dev.to/codewithfan/transitioning-from-the-army-into-tech-2c8p</guid>
      <description>&lt;h2&gt;
  &lt;a href="#my-short-story"&gt;
  &lt;/a&gt;
  My Short Story
&lt;/h2&gt;

&lt;p&gt;Serving full time as a Soldier and teaching myself how to code is no easy journey to begin. The summer of 2021, a couple of youtube videos, and the weight of having another baby inspired me to make an early decision to change careers. Overall, the opportunity to work remote, salary, and quality of life was the hook to break into tech.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-my-journey-so-far"&gt;
  &lt;/a&gt;
  What is my journey so far
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#choosing-my-path"&gt;
  &lt;/a&gt;
  Choosing my path
&lt;/h3&gt;

&lt;p&gt;Once I decided I wanted to break into tech, I researched, googled, and youtube what the easiest, lucrative, and high salary jobs. For a beginner, I decided to go with being a front end developer. I fell upon The Odin Project because the cost, FREE! I ended up making it to the JavaScript section in Foundations and felt discourage to continue due to the difficulty of understanding functions.&lt;/p&gt;

&lt;p&gt;Now, I am currently engaged in the #100Devs cohort hosted by an excellent teacher Leon Noel. Leon is currently teaching a 30 week bootcamp for free for people that were affected by the pandemic or wanting to break into tech. I realized that I needed a course with structure, and this is my time to shine!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#finding-a-village"&gt;
  &lt;/a&gt;
  Finding a Village
&lt;/h3&gt;

&lt;p&gt;Because I enrolled into the #100Devs cohort, I was able to connect with hundreds of other people who have the same mindset of not being satisfied with their careers and wanting to make a change for themselves. I discovered being surrounded by a village pushes me to work harder, not give up so easily, and help others around me achieve their goals. Once you find your village, there is no turning back!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#are-you-thinking-about-it"&gt;
  &lt;/a&gt;
  Are you thinking about it
&lt;/h3&gt;

&lt;p&gt;My overall advice for those on the fence, JUST DO IT! It does not hurt to dive into the abyss of the unknown like coding. You will never know if it suits you if you do not try. Start today, stay disciplined, show grit, join a community, and most importantly, trust the process.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>motivation</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Micro Frontends as Web Components</title>
      <author>Pijus Rancevas</author>
      <pubDate>Mon, 24 Jan 2022 15:19:15 +0000</pubDate>
      <link>https://dev.to/pijusr/micro-frontends-as-web-components-363f</link>
      <guid>https://dev.to/pijusr/micro-frontends-as-web-components-363f</guid>
      <description>&lt;p&gt;Quite recently, I had a task to develop a bunch of reusable components for the blockchain space and compress them into a single NPM package.&lt;/p&gt;

&lt;p&gt;The problem was that we had a lot of different teams with their preferred development stack. Now, my mission was to glide through this obstacle in the most efficient way possible, so what do I choose?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;takes off the hat&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Quite right - &lt;a href="https://micro-frontends.org/"&gt;micro frontend&lt;/a&gt; infrastructure. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#structure"&gt;
  &lt;/a&gt;
  Structure
&lt;/h2&gt;

&lt;p&gt;The idea is to make a &lt;a href="https://en.wikipedia.org/wiki/Monorepo"&gt;monorepository&lt;/a&gt; which would contain applications that will act as reusable components in a form of IFrames (inline frames) deployed from Vercel and packaged through Stencil.js framework. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#monorepository"&gt;
  &lt;/a&gt;
  Monorepository
&lt;/h3&gt;

&lt;p&gt;I think it's wise to reuse UI components, styles, and configuration files where necessary. In other words, let's not make cross-functional teams into cross dysfunctional ones.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;apps/
‚îú‚îÄ cool-app-a/
‚îú‚îÄ cool-app-b/
common/
‚îú‚îÄ config/
‚îú‚îÄ ui/
‚îú‚îÄ tsconfig/
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://vercel.com/blog/monorepos"&gt;Vercel&lt;/a&gt; allows deploying applications from monorepository in a breeze. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#components"&gt;
  &lt;/a&gt;
  Components
&lt;/h3&gt;

&lt;p&gt;Now that we have deployment links for each application we can package them into NPM package via &lt;a href="https://stenciljs.com/"&gt;Stencil.js&lt;/a&gt; framework through IFrames.&lt;/p&gt;

&lt;p&gt;First of all, initialize the stencil project and remove all the boilerplate code. Then, create &lt;code&gt;deployments.json&lt;/code&gt; file at the top directory with the structure as so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
    "deployments": [
       {
         "name": "ComponentName",
         "tag": "component-tag-name",
         "deployment": "URL" 
       },
       ....
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will act as our configuration file for our components. &lt;/p&gt;

&lt;p&gt;In the root directory add the &lt;code&gt;utility&lt;/code&gt; folder with &lt;code&gt;populate.js&lt;/code&gt; script and &lt;code&gt;package.json&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;utility/
‚îú‚îÄ populate.js
‚îú‚îÄ package.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the &lt;code&gt;package.json&lt;/code&gt; add &lt;code&gt;{ "type": "module" }&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;As an advocate of automatization, I made a script to handle the creation of stencil components. This is the &lt;code&gt;populate&lt;/code&gt; script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as fs from 'fs';
import configuration from '../deployments.json';

configuration.deployments.forEach(app =&amp;gt; {
  fs.writeFile(`src/components/${app.tag}.tsx`, getTemplate(app), (err) =&amp;gt; {
    if (err) {
      console.log("üî¥ ", error);
    } else {
      console.log(`‚úÖ  Component "${app.name}" populated.`)
    }
  });
})


function getTemplate(configuration) {

  return `
    import { Component, h } from '@stencil/core';

    @Component({
      tag: "${configuration.tag}",
      styleUrl: 'global.css'
    })
    export class ${configuration.name} {

      render() {
        return (
          &amp;lt;iframe src="${configuration.deployment}"
                  frameBorder="0"&amp;gt;
          &amp;lt;/iframe&amp;gt;
        );
      }
    }
    `
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So what happened here? We are taking deployment variables, adding them to the boilerplate template, and writing everything into the components folder. Simple and neat. &lt;/p&gt;

&lt;p&gt;Now, to make our work easier, in the root level &lt;code&gt;package.json&lt;/code&gt; add a new script to handle the population of components.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"scripts": {
    "populate": "node --experimental-json-modules  utility/populate.js"
    ...
  },
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run &lt;code&gt;npm run populate&lt;/code&gt; and deploy your components to NPM.&lt;/p&gt;

&lt;p&gt;üëã&lt;/p&gt;

</description>
      <category>stencil</category>
      <category>npm</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>ReactJS Vs NodeJS : Better for app development in 2022</title>
      <author>Krishlee</author>
      <pubDate>Mon, 24 Jan 2022 15:03:57 +0000</pubDate>
      <link>https://dev.to/itsmekrishlee/reactjs-vs-nodejs-better-for-app-development-in-2022-58hf</link>
      <guid>https://dev.to/itsmekrishlee/reactjs-vs-nodejs-better-for-app-development-in-2022-58hf</guid>
      <description>&lt;p&gt;Nowadays business globe has actually been boosted with several parts of web app development. If we think 2021, vast business have actually built their web applications to get substantial development. As necessary, it goes without stating that this year of 2022 will also enhance the application advancement industry. Hence if you prefer to develop an internet application, the programming language is the most significant point to assume.&lt;br&gt;
For internet app advancement JavaScript is just one of one of the most popular languages as well as there are various JavaScript structures to pick from. Remarkably, Node js as well as Respond js are the popular options available, but if you are perplexed to recognize which one is better. For your examination, we've prepared a well-defined summary of Node js vs React js with its features. Allow's read this post to learn which is better for  &lt;a href="https://www.softsuave.com/blog/web-application-development-trends/"&gt;Web application trends in 2022&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-reactjs"&gt;
  &lt;/a&gt;
  What is ReactJS?
&lt;/h2&gt;

&lt;p&gt;A JavaScript library for creating interface. Respond makes it easy to make interactive UIs. Constructs encapsulated functions that handle their very own condition, then creates them to make complex UIs. Respond JS was originally developed by Jordan Walke. Today, &lt;a href="https://www.softsuave.com/reactjs-app-development-company"&gt;ReactJS development&lt;/a&gt; has more than a thousand open source advocates.&lt;br&gt;
React authorizations you to user interface with other collections and structures. React can likewise influence the web server utilizing Node and power mobile applications utilizing React Native. Because element reasoning is made up in JavaScript rather than templates, you can easily offer abundant information with your app and also maintain the state out of the DOM.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-of-reactjs"&gt;
  &lt;/a&gt;
  Pros of ReactJS:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Boosted efficiency&lt;/li&gt;
&lt;li&gt;Multiple-use components&lt;/li&gt;
&lt;li&gt;Easy to discover and use&lt;/li&gt;
&lt;li&gt;Assistance for helpful devices&lt;/li&gt;
&lt;li&gt;Disadvantages of ReactJS&lt;/li&gt;
&lt;li&gt;HIgh-speed advancement&lt;/li&gt;
&lt;li&gt;Poor paperwork&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nodejs"&gt;
  &lt;/a&gt;
  What is NodeJS?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.softsuave.com/nodejs-development-company"&gt;Node.js is an open-source&lt;/a&gt; web server environment as well as it allows you to run JavaScript on the web server. As an asynchronous event-driven JavaScript runtime produced on Chrome's V8 JavaScript device, Node.js is designed to produce scalable network applications. Node.js operates different platforms: Windows, Linux, Unix, Mac OS X, and so on.&lt;/p&gt;

&lt;p&gt;Node.js makes up command-line tools utilizing JavaScript, as well as server-side scripting-- a running script that allows you construct vibrant website content before the page is shared to the customer's internet browser utilizing the web server web page. Because of this, Node.js stands for the "JavaScript common" standard, combining web-app development around a shows language rather than other languages for server-side as well as client-side works.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pros-of-nodejs"&gt;
  &lt;/a&gt;
  Pros of NodeJS:
&lt;/h2&gt;

&lt;p&gt;Node.js permits the development of intricate internet applications with several attributes, features, and also components. Below are some benefits&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;High performance and also scalability&lt;/li&gt;
&lt;li&gt;High extensible modern technology&lt;/li&gt;
&lt;li&gt;Boost application performance time&lt;/li&gt;
&lt;li&gt;Reduced understanding curve&lt;/li&gt;
&lt;li&gt;Following degree effectiveness and flexibility&lt;/li&gt;
&lt;li&gt;Disadvantages of NodeJS&lt;/li&gt;
&lt;li&gt;Hard to maintain code&lt;/li&gt;
&lt;li&gt;Unsteady API&lt;/li&gt;
&lt;li&gt;Asynchronous programming design&lt;/li&gt;
&lt;li&gt;Absence of collection assistance&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#difference-between-reactjs-and-also-nodejs"&gt;
  &lt;/a&gt;
  Difference between ReactJS and also NodeJS:
&lt;/h2&gt;

&lt;p&gt;ReactJS vs NodeJS:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;React js was founded in 2003 Node js was launched in 2009&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.softsuave.com/reactjs-app-development-company"&gt;Reactjs development&lt;/a&gt; mostly utilized in Client-sideUsed for server-side development and also client-side growth&lt;/li&gt;
&lt;li&gt;Created with polished Vanilla JavaScriptWritten in C, C++, and also JavaScript&lt;/li&gt;
&lt;li&gt;Sustains both android &amp;amp; web with the opening of react-native Node js sustains just web&lt;/li&gt;
&lt;li&gt;No microservices as well as API supportMicro-services as well as API can be built with nodeJS&lt;/li&gt;
&lt;li&gt;Utilized to make a scalable HTTP web server using Express or Simple HTTP moduleUsed to create single-page applications&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#verdict"&gt;
  &lt;/a&gt;
  Verdict:
&lt;/h2&gt;

&lt;p&gt;In this talk of Node js vs Respond js, currently you might have gotten some clear-cut clarification of both. Basically, &lt;a href="https://www.softsuave.com/nodejs-development-company"&gt;Node.js development&lt;/a&gt; is best if you want to create a server-side internet app, and also React js is most ideal for making a &lt;a href="https://www.softsuave.com/web-application-development-company"&gt;web application development&lt;/a&gt; task with growing levels like energetic inputs and switches.&lt;/p&gt;

&lt;p&gt;We've prepared a difference between React js and Node js with its attributes for your future task principles. Allow's choose in between the two relying on your requirements&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>How to install kitty terminal emulator</title>
      <author>Dumbo-programmer</author>
      <pubDate>Mon, 24 Jan 2022 15:02:45 +0000</pubDate>
      <link>https://dev.to/dumboprogrammer/how-to-install-kitty-terminal-emulator-3ap1</link>
      <guid>https://dev.to/dumboprogrammer/how-to-install-kitty-terminal-emulator-3ap1</guid>
      <description>&lt;p&gt;Kitty is a free open source GPU based terminal emulator for Linux and MacOS. It uses lower system resources and threaded rendering to run kitty faster. It comes with mouse , uni-code, true-color and focus tracking support. It also comes with extensions support. Using this you can enable some advanced features in your kitty terminal. You can tile multiple kitty terminal windows side by side. It also comes with graphics, scripts, startup sessions and shell prompt support.&lt;/p&gt;

&lt;p&gt;open up the terminal then: &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Method: 1&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin&lt;br&gt;
ln -s ~/.local/kitty.app/bin/kitty ~/.local/bin/&lt;br&gt;
cp ~/.local/kitty.app/share/applications/kitty.desktop ~/.local/share/applications&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;Method: 2&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;sudo apt update&lt;br&gt;
sudo apt install kitty&lt;br&gt;
kitty&lt;/code&gt;&lt;/p&gt;

</description>
      <category>bash</category>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>From my point of Vue: Vue 3 Ecosystem </title>
      <author>Jesus Guerrero</author>
      <pubDate>Mon, 24 Jan 2022 14:52:55 +0000</pubDate>
      <link>https://dev.to/jesusantguerrero/from-my-point-of-vue-vue-3-ecosystem-4ikj</link>
      <guid>https://dev.to/jesusantguerrero/from-my-point-of-vue-vue-3-ecosystem-4ikj</guid>
      <description>&lt;p&gt;Since the release of Vue3 on Sep 18, 2020 the ecosystem of the framework have been in a transition period because even when the core library was ready for production the ecosystem was behind.&lt;/p&gt;

&lt;p&gt;I build a production ready project back in february 2021 with Vue3 and the change to the &lt;a href="https://dev.to/jesusantguerrero/from-my-point-of-vue-composition-api-18de"&gt;composition API&lt;/a&gt; was kind of smooth and you can build strong components abstractions like &lt;a href="https://dev.to/jesusantguerrero/from-my-point-of-vue-headless-components-2403"&gt;headless components&lt;/a&gt;. The libraries, plugins components available were minimal and those available weren't stable which was normal at this point.&lt;/p&gt;

&lt;p&gt;In 2022 the future looks bright and looks like we'll reach the stability, there's a lot of good reactivity libraries, components and ui frameworks that are production ready.&lt;/p&gt;

&lt;p&gt;In this post we are going to take a look at &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The recommendations&lt;/li&gt;
&lt;li&gt;How the ecosystem looks like right now&lt;/li&gt;
&lt;li&gt;What are we missing for stability.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#recommendations"&gt;
  &lt;/a&gt;
  Recommendations
&lt;/h3&gt;

&lt;p&gt;It is good to have multiple options to do tasks but sometimes when we got many options it can get chaotic and spent too much time selecting tools to start a new project, that's why official recommendations are good to set a standard, reduce cognitive load and spent less time in trivial things.&lt;/p&gt;

&lt;p&gt;Here are some recommendations made by the Vue Core Team:&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#toolchain"&gt;
  &lt;/a&gt;
  Toolchain
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://vitejs.dev/guide/"&gt;Vite&lt;/a&gt;&lt;/strong&gt;. You are probably familiar with this one, Vite (pronounced &lt;code&gt;/vit/&lt;/code&gt;) is a build tool that provides a fast developer experience to build apps, libraries, etc. The community has embrace it very well and has built awesome plugins, boilerplates and templates and has crossed the horizons of Vue itself and can work with react, svelte, preact and others with typescript support out of the box. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=johnsoncodehk.volar"&gt;Volar&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href=""&gt;vue-tsc&lt;/a&gt;&lt;/strong&gt; improves the experience of working with typescrypt and vue3. the first one is an editor extension built for Vue 3 and the latest is a wrapper to type-check Vue Single File coomponents and typescript and also generate definitions. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#state-management"&gt;
  &lt;/a&gt;
  State Management:
&lt;/h4&gt;

&lt;p&gt;One of the advantages of the composition API is that is reactivity works outside of components life cycle, and you can build what we know like stores just by wrapping an object in &lt;code&gt;reactive&lt;/code&gt; over a year this is the approach I have followed personally; but for more advanced use cases &lt;a href="https://pinia.vuejs.org/"&gt;Pinia&lt;/a&gt; is the recommended way to go.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://pinia.vuejs.org/"&gt;Pinia&lt;/a&gt;&lt;/strong&gt; is a state management library designed with the ideas of vuex-next so it is the spiritual succesor of Vuex  some of the highlights of pinia are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Devtool integration&lt;/li&gt;
&lt;li&gt;SSR support&lt;/li&gt;
&lt;li&gt;type-safe stores &lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#others"&gt;
  &lt;/a&gt;
  Others
&lt;/h4&gt;

&lt;p&gt;Tooling cli: &lt;a href="https://github.com/vuejs/create-vue"&gt;create-vue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Playgounds&lt;/strong&gt; Are an important option to share code with others and very useful when reporting bugs as reproduction links now the recommended playgrounds by the Vue team are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://sfc.vuejs.org/"&gt;Vue SFC Playground&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackblitz.com/"&gt;stackBlitz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-we-have"&gt;
  &lt;/a&gt;
  What we have
&lt;/h3&gt;

&lt;p&gt;Here is a short selection of libraries that might be useful for common cases when building new apps with Vue3&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ui-libraries"&gt;
  &lt;/a&gt;
  UI Libraries.
&lt;/h4&gt;

&lt;p&gt;UI libraries are a good way to speed up development and just focus in business logic.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.naiveui.com/en-US/os-theme"&gt;naive ui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://element-plus.org/en-US/component/button.html"&gt;element plus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#vueuse"&gt;
  &lt;/a&gt;
  Vueuse
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://vueuse.org/"&gt;Vueuse&lt;/a&gt; is a set of composables(hooks) for vue 3 that wrap many Browser API's, animation and other utilities to provide an easier and reactive way of use to us.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#vitesse"&gt;
  &lt;/a&gt;
  Vitesse
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://github.com/antfu/vitesse"&gt;Vitesse&lt;/a&gt; is a template strongly opinionated built by &lt;a href="https://github.com/antfu"&gt;Anthony Fu&lt;/a&gt; it provides the best SSR boilerplate we have currently in the ecosystem, you can fork and customize it as you like for your next app.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-coming"&gt;
  &lt;/a&gt;
  What is coming
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#new-docs"&gt;
  &lt;/a&gt;
  New docs:
&lt;/h4&gt;

&lt;p&gt;The official documentation has been rewritten more beautiful than ever, with best practices, extra topics and the detailed and comprehensive technical writing to teach you how to use Vue&lt;/p&gt;

&lt;p&gt;You can take a look of what is coming &lt;a href="https://staging.vuejs.org/"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#nuxt-3"&gt;
  &lt;/a&gt;
  Nuxt 3:
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://v3.nuxtjs.org/"&gt;Nuxt&lt;/a&gt; is coming powered by Vue3 that means by default will be faster, lighter and with great support for typescript but in addition vite support, webpack 5, a Nuxt CLI and a Nuxt Kit for module development are part of the new Nuxt 3 currently it is in beta so if we use it and report bugs if we find them or even help to solve them with a PR would be awesome.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#make-vue-3-default"&gt;
  &lt;/a&gt;
  Make Vue 3 default
&lt;/h4&gt;

&lt;p&gt;Currently Vue 3 is kind of hidden one could say, because if we run &lt;code&gt;npm install vue&lt;/code&gt; or search for Vue in google Vue 2 is the one that is coming, this is by design of course, so the event that officially will mark the new era is the Final switch when Vue 3 will be the default Vue. And this is coming soon.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping up
&lt;/h3&gt;

&lt;p&gt;I hope you find this walk around the current Vue ecosystem useful, if you have seen any other cool project or have information that I missed to mention here share it with us on the comment section and as always let me know about any questions you have here or on &lt;a href="https://twitter.com/JesusntGuerrero"&gt;Twitter&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Thanks for reading and have a nice day.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/vuesomedev/awesome-vue-3"&gt;awesome vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2KBHvaAWJOA&amp;amp;lc=z22ytvcgsky5fxlh104t1aokgcotea4j2rz3m5ovxbqvrk0h00410.1642823773254725"&gt;The New Vue by Evan You&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vue</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>API Request ‚ö° to Local JSON File üìÉ in React ‚öõÔ∏è</title>
      <author>Rajesh Joshi</author>
      <pubDate>Mon, 24 Jan 2022 14:43:50 +0000</pubDate>
      <link>https://dev.to/rajeshj3/api-request-to-local-json-file-in-react-n7f</link>
      <guid>https://dev.to/rajeshj3/api-request-to-local-json-file-in-react-n7f</guid>
      <description>&lt;p&gt;One of the most used thing in React ‚öõÔ∏è is API Request to a remote Server. Since APIs have become part and parcel of our daily life, they are involved in almost everything we do on the world wide web. An API request occurs when a developer adds an endpoint to a URL and makes a call to the server.&lt;/p&gt;




&lt;p&gt;A basic API Request in React/JavaScript using &lt;code&gt;axios&lt;/code&gt; looks like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;axios&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://api.example.com/users/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above JavaScript (axios) syntax, the API Request has been made to &lt;code&gt;https://api.example.com&lt;/code&gt; &lt;strong&gt;Domain&lt;/strong&gt; (also knows as &lt;strong&gt;BASE URL&lt;/strong&gt;) and &lt;code&gt;/users/&lt;/code&gt; &lt;strong&gt;end-point&lt;/strong&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#request-to-local-json-file"&gt;
  &lt;/a&gt;
  Request to Local JSON File üìÉ
&lt;/h2&gt;

&lt;p&gt;Making GET Request to a Local JSON File is really simple, but there are few prerequisites you need to make sure, they are followed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Make sure, JSON File is accessible through the server, ie. the file should be in &lt;code&gt;public/&lt;/code&gt; folder.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Create &lt;code&gt;public/db/users.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jane&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Johny&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Check if the JSON File is accessible at &lt;a href="http://localhost:3000/db/users.json"&gt;http://localhost:3000/db/users.json&lt;/a&gt; when the server is running.&lt;/p&gt;




&lt;p&gt;This time, if you want to make GET request to the JSON File, do it like this-&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;axios&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/db/users.json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h2&gt;
  &lt;a href="#react-example"&gt;
  &lt;/a&gt;
  React Example
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Create React App&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;npx create-react-app my-app

&lt;span class="nt"&gt;---&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; 100%

&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;my-app
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Install &lt;code&gt;axios&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yarn add axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Add JSON File &lt;code&gt;public/db/users.json&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;John&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Jane&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Johny&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Doe&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Update &lt;code&gt;App.js&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setUsers&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;axios&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/db/users.json&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;setUsers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ul&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;li&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/li&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;))}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/ul&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Run the development server&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;yarn start
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SNnNHPiv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvhifd8rmc9c6lur6xo9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SNnNHPiv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wvhifd8rmc9c6lur6xo9.png" alt="JS/React/JSONFile" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;I hope, you guys liked this quick tutorial &lt;code&gt;API Request ‚ö° to Local JSON File üìÉ in React ‚öõÔ∏è&lt;/code&gt;. If so, then please don't forget to drop a Like ‚ù§Ô∏è&lt;/p&gt;

&lt;p&gt;And also, help me reach &lt;strong&gt;1k Subscribers&lt;/strong&gt; ü§©, on my &lt;a href="https://www.youtube.com/channel/UCCO4jIqmQVFDmVeeaAO5obA"&gt;YouTube channel&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy Coding! üòÉüíª&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
