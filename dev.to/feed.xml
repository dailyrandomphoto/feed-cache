<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Create games using TypeScript, Snowpack, and ESLint with this template</title>
      <author>Paula Santamaría</author>
      <pubDate>Sun, 16 May 2021 15:00:22 +0000</pubDate>
      <link>https://dev.to/paulasantamaria/create-games-using-typescript-snowpack-and-eslint-with-this-template-12ef</link>
      <guid>https://dev.to/paulasantamaria/create-games-using-typescript-snowpack-and-eslint-with-this-template-12ef</guid>
      <description>&lt;p&gt;If you follow me on &lt;a href="https://twitter.com/pauxdsantamaria"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.instagram.com/pau.codes/"&gt;Instagram&lt;/a&gt;, you may know I've been trying out &lt;a href="https://phaser.io/"&gt;Phaser&lt;/a&gt; lately. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Phaser is an open-source game framework&lt;/strong&gt; that allows you to develop games using HTML and Javascript. &lt;/p&gt;

&lt;p&gt;I've always been interested in Game development, but I hadn't found the time in the past to really get into it. I tried some things with Unity over the years, but I was focused on University and work, so those projects always got left behind at some point. Now that I graduated, I have more time to explore these kinds of things.&lt;/p&gt;

&lt;p&gt;So I started going through some tutorials and doing some experiments with the framework. To get started, all you need is a local web server and getting Phaser through NPM or a CDN, for example. Browsing online, I found some templates that used No.jsde as a web server and installed Phaser through NPM, so I decided to make my own template using a modern tech stack.&lt;/p&gt;

&lt;p&gt;And here it is:&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/pawap90"&gt;
        pawap90
      &lt;/a&gt; / &lt;a href="https://github.com/pawap90/phaser3-ts-snowpack-eslint"&gt;
        phaser3-ts-snowpack-eslint
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A modern Phaser 3 template with TypeScript, Snowpack &amp;amp; ESLint
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/4031efcf91255a19361b7159173ab5729e3c1e7882bd64edd16030e25e755f19/68747470733a2f2f692e696d6775722e636f6d2f5271334a7251582e706e67"&gt;&lt;img src="https://camo.githubusercontent.com/4031efcf91255a19361b7159173ab5729e3c1e7882bd64edd16030e25e755f19/68747470733a2f2f692e696d6775722e636f6d2f5271334a7251582e706e67" alt="A modern Phaser 3 template: Phaser 3 + TypeScript + Snowpack + ESLint"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A modern Phaser 3 template: Develop your game using Typescript, keep your codebase clean with ESLint, and enjoy lightning-fast live updates thanks to Snowpack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pawap90/phaser3-ts-snowpack-eslint/main/#dependencies"&gt;Dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pawap90/phaser3-ts-snowpack-eslint/main/#quick-start"&gt;Quick start&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pawap90/phaser3-ts-snowpack-eslint/main/#project-structure"&gt;Project structure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pawap90/phaser3-ts-snowpack-eslint/main/#typescript"&gt;TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://raw.githubusercontent.com/pawap90/phaser3-ts-snowpack-eslint/main/#snowpack"&gt;Snowpack&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pawap90/phaser3-ts-snowpack-eslint/main/#build-optimization"&gt;Build optimization&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pawap90/phaser3-ts-snowpack-eslint/main/#eslint"&gt;ESLint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pawap90/phaser3-ts-snowpack-eslint/main/#npm-scripts"&gt;NPM Scripts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
Dependencies&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nodejs.org/en/" rel="nofollow"&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.npmjs.com/" rel="nofollow"&gt;npm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
Quick start&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Get this template: Press over the "Use this template" button. This will allow you to create a new repo with this project's structure on your Github account. Then you can clone it to your local machine.&lt;/p&gt;
&lt;p&gt;Alternatively, you can clone this repo to your machine using the following command.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;git clone https://github.com/pawap90/phaser3-ts-snowpack-eslint.git&lt;/pre&gt;

&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Install dependencies: Run the following command from the project's root folder:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm install&lt;/pre&gt;

&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Start the local development server:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm start&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Go to your browser and navigate to &lt;a href="http://localhost:8000" rel="nofollow"&gt;http://localhost:8000&lt;/a&gt;. You should see this beauty:&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/7dd10f7ee791bee08ee2baea9eb6fe33557a7e2f2f5b0e0b675a7b5e32eacf37/68747470733a2f2f692e696d6775722e636f6d2f625956637253722e676966"&gt;&lt;img src="https://camo.githubusercontent.com/7dd10f7ee791bee08ee2baea9eb6fe33557a7e2f2f5b0e0b675a7b5e32eacf37/68747470733a2f2f692e696d6775722e636f6d2f625956637253722e676966" alt="Acho the pup bouncing around"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you wish to publish your project somewhere, create the production build using the following command:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative js-code-highlight"&gt;
&lt;pre&gt;npm run build&lt;/pre&gt;

&lt;/div&gt;
&lt;h1&gt;
Project&lt;/h1&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/pawap90/phaser3-ts-snowpack-eslint"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#about-the-template"&gt;
  &lt;/a&gt;
  About the template
&lt;/h1&gt;

&lt;p&gt;This template allows you to develop your game using &lt;strong&gt;TypeScript&lt;/strong&gt;, keep your codebase clean with &lt;strong&gt;ESLint&lt;/strong&gt;, and enjoy lightning-fast live updates thanks to &lt;strong&gt;Snowpack&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I decided to use TypeScirpt instead of JavaScript after doing some tutorials. I tried both options, and I just felt more comfortable with TypeScript.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-it-with-snowpack"&gt;
  &lt;/a&gt;
  Build it with Snowpack
&lt;/h2&gt;

&lt;p&gt;When the time came to choose a bundler, I decided to give Snowpack a try since I've heard many good things about it. And honestly, I was blown away by how &lt;strong&gt;fast&lt;/strong&gt; it is. The development server starts in 14ms on my machine, and the live updates are fantastic. I can play around with Phaser and see every update on the browser almost instantly.&lt;/p&gt;

&lt;p&gt;I also used &lt;strong&gt;Snowpack's built-in optimizations&lt;/strong&gt; to minify and bundle the build and make it lighter for production. This Snowpack feature is not yet production-ready (according to the docs), but I've done a few tests, published some sample games, and I haven't had any issues with it so far.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#minimalistic"&gt;
  &lt;/a&gt;
  Minimalistic
&lt;/h2&gt;

&lt;p&gt;The template is very minimalistic, meaning that it only has what's needed to run and build the project, plus a Sample scene to check everything is working correctly. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-structure"&gt;
  &lt;/a&gt;
  Project structure
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;├───public/                         Public static files
│   ├───assets/                     Sample assets
│   │   ├───banner.png
│   │   ├───acho.png
│   │   └───ground.png
│   └───index.html                  HTML file where our game will be loaded
├───src/                            Game logic goes here
│   ├───scenes/                     Game scenes
│   │   ├───InitialScene.ts         Initial sample scene
│   │   └───PreloaderScene.ts       Scene preloader
│   └───Main.ts                     Phaser game configuration
├───.eslintignore                   Files that should be ignored by ESLint  
├───.eslintrc.js                    ESLint configuration file
├───.gitignore                      Files that should not be pushed to the repo
├───package.json                    Project scripts, dependencies and metadata
├───snowpack.config.js              Snowpack configuration file
└───tsconfig.json                   Typescript configuration file
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You can remove everything in the &lt;code&gt;public/assets&lt;/code&gt; folder. But I recommend you first run the project once and make sure everything is installed and running properly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#clean-and-safe"&gt;
  &lt;/a&gt;
  Clean and safe
&lt;/h2&gt;

&lt;p&gt;It's focused on keeping the codebase clean and safe, thanks to TypeScript and ESLint.&lt;/p&gt;

&lt;p&gt;TypeScript's configuration contains some flags that set some checks like "strict" and "noImplicitAny" to reduce errors. You can always change that in the &lt;code&gt;tsconfig.json&lt;/code&gt; file if you prefer different settings.&lt;/p&gt;

&lt;p&gt;I also added a &lt;code&gt;prebuild&lt;/code&gt; script that uses &lt;code&gt;tsc&lt;/code&gt; and &lt;code&gt;ESLint&lt;/code&gt; to compile and lint the project before building it to ensure the build is safe to publish.&lt;/p&gt;

&lt;p&gt;So when you run &lt;code&gt;npm run build&lt;/code&gt;, the &lt;code&gt;prebuild&lt;/code&gt; will be executed first and fail if there are errors. This script could be easily executed in a CI pipeline, for example, to make sure you don't merge or deploy the project if there are issues.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#eslint"&gt;
  &lt;/a&gt;
  ESLint
&lt;/h3&gt;

&lt;p&gt;I added ESLint to keep the codebase clean and consistent. The configuration can be found in &lt;code&gt;.eslint.js&lt;/code&gt; in case you want to add your own rules or modify something. &lt;/p&gt;

&lt;p&gt;There are also a few scripts I added to the &lt;code&gt;package.json&lt;/code&gt; to check for errors or styling issues:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Print the list of problems found&lt;/span&gt;
npm run lint

&lt;span class="c"&gt;# Some of the issues can be automatically fixed using:&lt;/span&gt;
npm run lint:fix
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#beautiful-and-classy"&gt;
  &lt;/a&gt;
  Beautiful and classy 🧐🎩
&lt;/h1&gt;

&lt;p&gt;Once you clone the template and install the dependencies, you'll be blessed with this beauty:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s_PeFsUN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/bYVcrSr.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s_PeFsUN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/bYVcrSr.gif" alt="Acho the pup bouncing around"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you want to know more about my Game Dev journey, follow me on &lt;a href="https://www.instagram.com/pau.codes/"&gt;Instagram&lt;/a&gt; or &lt;a href="https://twitter.com/pauxdsantamaria"&gt;Twitter&lt;/a&gt;. I'll be sharing my progress, tips, and tricks, and probably lots of bloopers and fails.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>gamedev</category>
      <category>typescript</category>
    </item>
    <item>
      <title>What is HTTP All about HTTP(Part 1)</title>
      <author>Nikhil Bobade </author>
      <pubDate>Sun, 16 May 2021 14:39:50 +0000</pubDate>
      <link>https://dev.to/nikhil27b/what-is-http-all-about-http-part-1-4mf3</link>
      <guid>https://dev.to/nikhil27b/what-is-http-all-about-http-part-1-4mf3</guid>
      <description>&lt;h1&gt;
  &lt;a href="#http"&gt;
  &lt;/a&gt;
  HTTP
&lt;/h1&gt;

&lt;p&gt;A basically HTTP stands for HyperText Transfer Protocol and HTTP is a protocol for HTML HTTP to create a connection between a web browser and web servers a foundation for collect data exchange on the Web and it is a client-server protocol.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#is-there-http-is-an-important-topic"&gt;
  &lt;/a&gt;
  Is there HTTP is an important topic?
&lt;/h5&gt;

&lt;p&gt;Yes, we have many following things in HTTP like UserAgent, HTTP Cache, HTTP Cookies, CROS but don't worry I covered all these topics lets start with HTTP today.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#how-http-works-"&gt;
  &lt;/a&gt;
  How HTTP works :-
&lt;/h5&gt;

&lt;p&gt;1.A simple work of HTTP is to send the request to the server from the web browser.&lt;br&gt;
2.After the server is processed you request and try to fulfill your request.&lt;br&gt;
3.then we get a response back and with the use of javascript, we can access that data.&lt;/p&gt;

&lt;p&gt;Check the next image to understand how its works I created a simple diagram of HTTP.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--43YN0Or1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mj0zcrvb11nohqb4uo09.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--43YN0Or1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mj0zcrvb11nohqb4uo09.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#we-also-have-some-http-codes"&gt;
  &lt;/a&gt;
  We also have some HTTP Codes
&lt;/h5&gt;

&lt;p&gt;An HTTP status code indicates which specific request has been completed.&lt;/p&gt;

&lt;p&gt;1.Informational:- 100 Continue, 101 Switching Protocols, 102 Processing&lt;/p&gt;

&lt;p&gt;2.Success:- 200 Ok, 201 Created, 202 Accepted,204 No Content&lt;/p&gt;

&lt;p&gt;3.Redirection:- 301 Moved Permanently,302 Found, 305 Not Modified,305 Use Proxy&lt;/p&gt;

&lt;p&gt;4.Client error:-400 Bad request, 401 Unauthorized, 402 Payment required, 403 Forbidden, 404 Not found&lt;/p&gt;

&lt;p&gt;5.Redirection:- 500 Internal server error, 502 Bad gateway, 503 Service Unavailable, 504 Gateway timeout.&lt;/p&gt;

&lt;p&gt;I hope you like this also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to more support me then buy me a &lt;a href="https://www.buymeacoffee.com/nikhilbobade27"&gt;coffee&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you.&lt;/p&gt;

</description>
      <category>html</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Getting Started With React Context API - A Deep Dive</title>
      <author>punya2004</author>
      <pubDate>Sun, 16 May 2021 14:37:20 +0000</pubDate>
      <link>https://dev.to/punya2004/getting-started-with-react-context-api-a-deep-dive-562d</link>
      <guid>https://dev.to/punya2004/getting-started-with-react-context-api-a-deep-dive-562d</guid>
      <description>&lt;p&gt;So it’s my first blog and had a thought about posting something that could be helpful for React-developers beginners like ME. So I’ve been working in react for last 3–4 months and one rookie problem that most of us face while building your own first big project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-context-api"&gt;
  &lt;/a&gt;
  What is Context API?
&lt;/h2&gt;

&lt;p&gt;Context API is a way to enable components to share some data without explicitly passing via each component manually. Context is like a global object to the React component sub-tree.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-we-need-context-api-"&gt;
  &lt;/a&gt;
  Why we need Context API ?
&lt;/h2&gt;

&lt;p&gt;Nearly every developer knows that React components are structured like a tree. There is one root node where all the components are connected. In this tree structure, the data flows in only one direction — from top to bottom.&lt;/p&gt;

&lt;p&gt;The problem of prop drilling arises when you create a tree structure of several components and the state created in higher level component you try to use it in lower level components. In such case you need to pass that as prop through all component levels, which is not a good practice.&lt;/p&gt;

&lt;p&gt;One line definition would be “API which is created in React itself and provides a way to pass props down the whole tree component at every level.”&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#there-are-different-methods-to-use-context-in-you-reactapp-here-is-how-i-use-it-"&gt;
  &lt;/a&gt;
  There are different methods to use context in you React-app, Here is how I use it :
&lt;/h2&gt;

&lt;p&gt;1.First I created A StateProvider.js file which integrated my app to context API&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#stateproviderjs"&gt;
  &lt;/a&gt;
  StateProvider.js
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { createContext, useContext, useReducer } from "react";

export const stateContext = createContext();

export const StateProvider = ({ reducer, initialState, children }) =&amp;gt; (

    &amp;lt;stateContext.Provider value={useReducer( reducer, initialState )}&amp;gt;
        {children}
    &amp;lt;/stateContext.Provider&amp;gt;
)

export const useStateValue = () =&amp;gt; useContext(stateContext);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.Then I used The StateProvider in index.js allowing context to be used in App component.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#indexjs"&gt;
  &lt;/a&gt;
  Index.js
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';
import Reducer, { initialState } from './Reducer';
import { StateProvider } from './StateProvider';

ReactDOM.render(
  &amp;lt;React.StrictMode&amp;gt;
    &amp;lt;StateProvider initialState={initialState} reducer={Reducer}&amp;gt;
    &amp;lt;App /&amp;gt;
    &amp;lt;/StateProvider&amp;gt;
  &amp;lt;/React.StrictMode&amp;gt;,
  document.getElementById('root')
);

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now in StateProvider.js I created context using createContext() method in react, And using it in useContext method you can can read the current value of states through the components. Then you create StateProvider function where you pass parameters like reducer , initialState and children props which will be root(App.js) component (because we need to use the state through out all the tree).&lt;/p&gt;

&lt;p&gt;So now in  index.js I wrapped the  component with provider I just created as StateProvider passing it intialstate and reducer from reducer.js as created in the code below.&lt;/p&gt;

&lt;p&gt;3.Then I created reducer.js file where I defined intialState and reducer function.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reducerjs"&gt;
  &lt;/a&gt;
  reducer.js
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const initialState = {
    user: null,
}

function Reducer (state, action) {
    console.log(action)
    switch(action.type) {

        case 'SET_USER':
            return {
                ...state,
                user: action.user
            }
         default:
            return state;
        }
}

export default Reducer;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4.Then using useStateValue() i.e. useContext() I was able use my state anywhere I want,&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#appjs"&gt;
  &lt;/a&gt;
  App.js
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React, { useEffect } from 'react';
import Login from './Login';
import { auth } from './firebase/config';
import { useStateValue } from './StateProvider';

function App() {

  const [{ user }, dispatch] = useStateValue();

  useEffect(() =&amp;gt; {
    const unsubscribe = auth.onAuthStateChanged((authuser) =&amp;gt; {
      if(authuser){

        dispatch({
         type: 'SET_USER',
          user: authuser
        })
      } else{    
        dispatch({
          type: 'SET_USER',
          user: null
        })
      }
    })
    return () =&amp;gt; {
      unsubscribe();
    }
  }, [])

  console.log("user is...", user)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here the initialState is an object initializing all the variables that you want to use in tree and reducer function will take care of updating the DOM of that state.&lt;/p&gt;

&lt;p&gt;Now in App.js using useStateValue variable created in StateProvider.js I accessed the current value of user. useStateValue i.e. useContext returns an array where first value is state i.e. user written as {state} and second is dispatch method which will dispatch the new value of state and type of action. Since it need to be performed only one time when page renders I use dispatch method in useEffect hook.&lt;/p&gt;

&lt;p&gt;Here I set type as “SET_USER” and value of user as authuser that I got from firebase . So now it passes type as action.type and user as action.User which is updated in “SET_USER” case of switch in reducer function. I updated the user state using rest operator returning previous value and updating only user.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>coadingdays</category>
    </item>
    <item>
      <title>Step-by-step guide: Pass your cursor position using CSS variables</title>
      <author>Naseki</author>
      <pubDate>Sun, 16 May 2021 14:36:35 +0000</pubDate>
      <link>https://dev.to/naseki/step-by-step-guide-pass-your-cursor-position-using-css-variables-c7b</link>
      <guid>https://dev.to/naseki/step-by-step-guide-pass-your-cursor-position-using-css-variables-c7b</guid>
      <description>&lt;p&gt;&lt;a href="https://naseki.com/writings/"&gt;My website&lt;/a&gt; has a little illustration that tracks your cursor's position. The only JavaScript that happens there is passing the cursor position to CSS variables. Everything else is in CSS using 2D transforms. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--87-s9B8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gt3zy104hwhykyd2cd6l.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--87-s9B8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gt3zy104hwhykyd2cd6l.gif" alt="Naseki website tracked illustration"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;In this tutorial, you'll learn how to pass event behaviour to CSS using CSS variables.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#set-up-your-html-and-css"&gt;
  &lt;/a&gt;
  Set up your HTML and CSS
&lt;/h1&gt;

&lt;p&gt;We'll be making a square with a little red dot inside. The red dot will be what will be controlled with transforms later on.&lt;/p&gt;

&lt;p&gt;The HTML code is pretty simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"tracker"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The CSS will center the square on the window and puts the red dot on the top left of the container. I also like setting up the CSS variables in CSS for a default state. CSS variables generally default to 0, but you may not always want that to be the case.&lt;/p&gt;

&lt;p&gt;Here's the CSS:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="py"&gt;--y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nc"&gt;.tracker&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-50%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.tracker&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1000px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is how it ends up looking like:&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/Naseki/dbjng1yt/embedded/result,html,css//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#make-the-event-listener-and-pass-the-variable-in-javascript"&gt;
  &lt;/a&gt;
  Make the event listener and pass the variable in JavaScript
&lt;/h1&gt;

&lt;p&gt;Next, we make the event listener and pass the event behaviour to CSS variables.&lt;/p&gt;

&lt;p&gt;Let's declare the position x and y first, and add the event listener itself:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;saveCursorPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we'll be making a function &lt;code&gt;saveCursorPosition&lt;/code&gt;. This is where we'll be passing the CSS variables. The two arguments will be the event's &lt;code&gt;clientX&lt;/code&gt; and &lt;code&gt;clientY&lt;/code&gt;, which is the cursor position.&lt;/p&gt;

&lt;p&gt;To make the cursor position responsive, we'll divide the values by the &lt;code&gt;innerWidth&lt;/code&gt; and &lt;code&gt;innerHeight&lt;/code&gt;, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I use &lt;code&gt;toFixed(2)&lt;/code&gt; to round the values.&lt;/p&gt;

&lt;p&gt;After that, we can finally pass the positions to the CSS variables! To select the root, you use &lt;code&gt;document.documentElement&lt;/code&gt;. You may be used to declaring CSS values using the style property, like &lt;code&gt;style.transform = ''&lt;/code&gt;. This isn't possible with CSS variables, where you'll have to use &lt;code&gt;style.setProperty()&lt;/code&gt; instead due to the unique way CSS variables are formatted. You'll end up with this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Put these in your function, and you end up with this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saveCursorPosition&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerWidth&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHeight&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--x&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;documentElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;--y&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;mousemove&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;saveCursorPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientX&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;clientY&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#add-the-transform-with-the-css-variables-to-your-css"&gt;
  &lt;/a&gt;
  Add the transform with the CSS variables to your CSS
&lt;/h1&gt;

&lt;p&gt;Now that we have everything ready, we'll now add the transform property to the red dot. This takes a little bit of math, but basically we'll multiply the container's width by the CSS variable, and add that to the -50% that centers the dot.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.tracker&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1000px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--x&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-50%&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="m"&gt;200px&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--y&lt;/span&gt;&lt;span class="p"&gt;)));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Optionally, you can add a transition that acts as a stabiliser simply by adding this one line &lt;code&gt;transition: transform 0.1s&lt;/code&gt;. It's best to keep the timing lower than 0.3s. I don't recommend using this on too many elements, but it adds a nice effect.&lt;/p&gt;

&lt;p&gt;And that's it! The transform will now change according to the CSS variable, thus following your cursor. The final result can be seen on this JSFiddle (including the transition):&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://jsfiddle.net/Naseki/oug7etbh/embedded/result,js,html,css//dark" width="100%" height="600"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#why-you-should-use-css-variables-to-pass-event-behaviour"&gt;
  &lt;/a&gt;
  Why you should use CSS variables to pass event behaviour
&lt;/h1&gt;

&lt;p&gt;Now you know how to pass event behaviour using CSS variables, but perhaps you still have doubts about CSS variables in general.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#readability"&gt;
  &lt;/a&gt;
  Readability
&lt;/h2&gt;

&lt;p&gt;Readability in general is pretty subjective. But I do believe it's the major reason to make use of CSS variables.&lt;/p&gt;

&lt;p&gt;My general thumb of rule is always: all style-related features should be left to CSS, everything else to JavaScript.&lt;/p&gt;

&lt;p&gt;JS isn't meant for style manipulation. I mean, look at this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.a-class&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;px&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`translate(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;%, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;px)`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It's just not very elegant, you see? You could use &lt;code&gt;cssText&lt;/code&gt; so you'd at least not have this multiline However, this still isn't convenient when this isn't the only inline CSS you use. Besides, readability or maintainability won't be much better even with &lt;code&gt;cssText&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It's also for the same reason that I prefer not to use libraries like GSAP and anime.js. Unless the animation is so complex that these libraries would outperform CSS, I'd rather go for CSS.&lt;/p&gt;

&lt;p&gt;Speaking of performance...&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performance"&gt;
  &lt;/a&gt;
  Performance
&lt;/h2&gt;

&lt;p&gt;This is where things get a little more complicated, but the tl;dr of this would be: It generally &lt;strong&gt;outperforms&lt;/strong&gt; JS in terms of scripting.&lt;/p&gt;

&lt;p&gt;Whether you pass the styling with CSS or JS makes no difference in terms of re-rendering itself. This means that you'll mainly find improved performance in JS itself.&lt;/p&gt;

&lt;p&gt;Usually, whenever you want to change the position of an element, you'd do something like &lt;code&gt;el.style.transform= 'translateY(50%)';&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Say you have 10000 divs, you'd loop through each element to add inline CSS to it. With CSS variables, you'd only need to change the value once on the parent element or the root. It should be clear that the latter would have better performance. In case you're doubting this, I did some benchmark testing using &lt;a href="https://jsben.ch/"&gt;Jsben.ch&lt;/a&gt;. Some information about what I've done:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Before each test, I've created these 10000 divs, set the CSS variable, and added inline CSS to all of them with &lt;code&gt;el.style.transform= 'translateY(var(--percent))';&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The first test case adds inline CSS with a regular variable.&lt;/li&gt;
&lt;li&gt;The second test case changes the CSS variable.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iGyz7IvV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v15p64hv3tj5o4pxo0j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iGyz7IvV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8v15p64hv3tj5o4pxo0j.png" alt="The loop with regular variable can only do 84 operations when redeclaring the CSS variable can do a whopping 609023 operations!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's a pretty big difference huh.&lt;/p&gt;

&lt;p&gt;It may seem ridiculous to add inline styling to all these elements individually, but this is exactly what I see happening on many websites. Whereas in CSS variables you'd typically already have the CSS set beforehand in your stylesheet. All you'd need to do is change the CSS variable.&lt;/p&gt;

&lt;p&gt;But hey, what if you use inline styling on both cases? That's when inline styling using a regular variable wins.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4YvaRd1b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zkl8aoh5ewtpvxpe8lvs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4YvaRd1b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zkl8aoh5ewtpvxpe8lvs.png" alt="The loop with regular variable can do 83 operations and the loop with the CSS variable can only do 60 operations, making their speed closer than the previous case."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I don't see anyone ever doing this though...&lt;/p&gt;

&lt;p&gt;When you use CSS variables for a ton of animations and transitions on your page, you might wanna start using JS for animation instead. This isn't so much a CSS variable problem as it is the performance of CSS animations in general. However, you can still use CSS variables to pass the CSS while doing the animation logic itself in JS! Here's &lt;a href="https://greensock.com/css-variables/"&gt;a very short article&lt;/a&gt; about using CSS variables with GSAP.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-about-browser-support"&gt;
  &lt;/a&gt;
  How about browser support?
&lt;/h2&gt;

&lt;p&gt;CSS variables are pretty widely used nowadays, and for a great reason too! &lt;strong&gt;All modern browsers&lt;/strong&gt; support this feature at this point. There are just a few things to consider if you need to support legacy browsers as well:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Internet Explorer doesn't support CSS variables at all. If you still need to support IE, you could either opt for a polyfill, but at that point, you're better off just using JS.&lt;/li&gt;
&lt;li&gt;Edge 15 (pre-Chromium) has a few bugs that may hinder you. But honestly, it's almost become impossible to keep Edge 15 installed, so there's very little reason to support it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information, check out &lt;a href="https://caniuse.com/css-variables"&gt;Can I Use&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#a-new-world-has-just-opened"&gt;
  &lt;/a&gt;
  A new world has just opened!
&lt;/h1&gt;

&lt;p&gt;Now that you know how to pass these events, there's so much more you can do with it! If you want to make this work on touch devices, you can use the &lt;code&gt;touchmove&lt;/code&gt; event for it. Try to play around with other events as well! You could make a complex parallax using JavaScript only to pass the &lt;code&gt;scroll&lt;/code&gt; event values and CSS for everything else.&lt;/p&gt;

&lt;p&gt;Not only do you know how to use it, but you also understand &lt;strong&gt;why&lt;/strong&gt; you'd use this, and how this would improve performance.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading! 💻
&lt;/h1&gt;

&lt;p&gt;If you wanna stay up to date with dev, subscribe to my newsletter! I send a couple of articles and resources once a week and will let you know when I've written a new article as well.&lt;/p&gt;

&lt;p&gt;Not sure if it's for you? Read a sample newsletter &lt;a href="https://buttondown.email/Naseki/archive/time-management-ethical-resources-and-a-very-shiny-3d/"&gt;here&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://buttondown.email/Naseki"&gt;Subscribe here&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ciETrbsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sa0hfs0886uf0g7c0b7e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ciETrbsg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sa0hfs0886uf0g7c0b7e.png" alt="Naseki logo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/Naseki_"&gt;Twitter&lt;/a&gt; | &lt;a href="https://naseki.com"&gt;Website&lt;/a&gt; | &lt;a href="https://buttondown.email/Naseki/"&gt;Newsletter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>webdev</category>
      <category>css</category>
      <category>javascript</category>
    </item>
    <item>
      <title>10 interesting and important JavaScript questions </title>
      <author>Sayem Mohammad Ismail</author>
      <pubDate>Sun, 16 May 2021 14:33:31 +0000</pubDate>
      <link>https://dev.to/smismail/10-interesting-and-important-javascript-questions-k2e</link>
      <guid>https://dev.to/smismail/10-interesting-and-important-javascript-questions-k2e</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-the-difference-between-and-"&gt;
  &lt;/a&gt;
  What is the difference between ‘==’ and ‘===’ ?
&lt;/h3&gt;

&lt;h6&gt;
  &lt;a href="#answer"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h6&gt;

&lt;p&gt;The double equal does not check for the type of the value. It only checks if the value is the same regardless of their types.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const first = 10; // number
const second = ‘10’; // string
if (first == second) {
    console.log(‘condition true’); //this will be logged
} else {
    console.log(‘condition false’);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, the condition becomes true because &lt;code&gt;==&lt;/code&gt; says 10 and '10' are equal, though one of them is a number and the other one is a string. Their types are ignored by &lt;code&gt;==&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Another example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const first = 1; //number
const second = true; //boolean 

if (first == second) {
    console.log(‘condition true’); //this will be logged
} else {
    console.log(‘condition false’);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, with &lt;code&gt;==&lt;/code&gt; the Boolean &lt;code&gt;true&lt;/code&gt; is taken as value &lt;code&gt;1&lt;/code&gt; and if there was the Boolean &lt;code&gt;false&lt;/code&gt; it would have taken a value &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;false&lt;/code&gt;. Then the value &lt;code&gt;1&lt;/code&gt; for Boolean &lt;code&gt;true&lt;/code&gt; is compared with the number 1 and states the condition to be &lt;code&gt;true&lt;/code&gt;. Once again the types are ignored by &lt;code&gt;==&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, the &lt;code&gt;===&lt;/code&gt; checks for the types as well. It would have stated the conditions of both of the examples here to be &lt;code&gt;false&lt;/code&gt; and logged the &lt;code&gt;else&lt;/code&gt; statement 'condition false'. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-window-"&gt;
  &lt;/a&gt;
  What is Window ?
&lt;/h3&gt;

&lt;h6&gt;
  &lt;a href="#answer"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h6&gt;

&lt;p&gt;The JavaScript Window object is the field of JavaScript. It is the playground for JavaScript to play.  &lt;/p&gt;

&lt;p&gt;JavaScript Window is an Object that contains everything global. All global variables, functions, objects are part of the window. Global variables are properties of the Window object and global functions are methods of it. &lt;br&gt;
If you check in the console, &lt;code&gt;document === window.document&lt;/code&gt; it will display &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We use &lt;code&gt;console.log&lt;/code&gt; very often. &lt;code&gt;console === window.console&lt;/code&gt; will say &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Items in the window object can be accessed directly in the javaScript. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-scope-and-local-and-global-variables"&gt;
  &lt;/a&gt;
  What is Scope and local and global variables?
&lt;/h3&gt;
&lt;h6&gt;
  &lt;a href="#answer"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h6&gt;

&lt;p&gt;Scope can be said to be the limit or range of variables. A function has its scope within that function only and the whole JavaScript project has the Global Scope. &lt;/p&gt;

&lt;p&gt;A variable gets the associated scope where it is defined. If it is defined within a function then it has the local scope within that function and becomes a local variable. The variable cannot be accessed from outside the function. &lt;/p&gt;

&lt;p&gt;However, if a variable is defined outside of any function then it gets the global scope and becomes a global variable. A global variable can be accessed from anywhere in the JavaScript project and obviously from within any function. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#what-is-the-this-keyword-"&gt;
  &lt;/a&gt;
  What is the ‘this’ keyword ?
&lt;/h3&gt;
&lt;h6&gt;
  &lt;a href="#answer"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h6&gt;

&lt;p&gt;The JavaScript keyword &lt;code&gt;this&lt;/code&gt; refers to the context of the current running functionality. For example, if an object &lt;code&gt;myObj&lt;/code&gt; has a property &lt;code&gt;name&lt;/code&gt; and a method &lt;code&gt;getName()&lt;/code&gt;, and the key word &lt;code&gt;this&lt;/code&gt; is used within the method then &lt;code&gt;this&lt;/code&gt; will refer to the context &lt;code&gt;myObj&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const myObj = {
    name: ‘Tom Cruise’,
    getName: function() {
        return console.log(this.name);
        }
};

myObj.getName();  // ‘Tom Cruise’ will be logged in the console.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#what-is-javascript-event-loop"&gt;
  &lt;/a&gt;
  What is JavaScript Event loop?
&lt;/h3&gt;

&lt;h6&gt;
  &lt;a href="#answer"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h6&gt;

&lt;p&gt;The Event loop is a loop of events. It has two concepts: &lt;code&gt;call stack&lt;/code&gt; and &lt;code&gt;event queue&lt;/code&gt;.&lt;br&gt;
JavaScript is a single threaded programming language that can do one task at a time. If multiple tasks arrive, it simply adds all of them to a queue which is called an &lt;code&gt;event queue&lt;/code&gt;. The &lt;code&gt;event queue&lt;/code&gt; is just any real life queue, the event comes first and gets to be done first. Once the thread is done with the current event it picks up the next event from the queue and starts performing that event. The thread continues this way until the &lt;code&gt;event queue&lt;/code&gt; is empty. &lt;/p&gt;

&lt;p&gt;The thread works on each event with a &lt;code&gt;call stack&lt;/code&gt;. When an event calls a function, the thread then stacks that function up on the event and any other function called inside the previous function also gets stacked up. Then the thread starts performing from the top of the stack eliminating each function down the line to get to the bottom of the stack and makes the call stack empty. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-does-javascript-code-execute"&gt;
  &lt;/a&gt;
  How does JavaScript code execute?
&lt;/h3&gt;
&lt;h6&gt;
  &lt;a href="#answer"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h6&gt;

&lt;p&gt;The web browser Google chrome uses an engine &lt;code&gt;V8&lt;/code&gt; to run the JavaScript on the browser. &lt;code&gt;V8&lt;/code&gt; engine takes the JavaScript source code and reads it. It then performs the just in time compilation on the JavaScript code and makes some optimizations. Finally, &lt;code&gt;V8&lt;/code&gt; engine provides the result/output. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-does-a-recursive-function-work"&gt;
  &lt;/a&gt;
  How does a recursive function work?
&lt;/h3&gt;
&lt;h6&gt;
  &lt;a href="#answer"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h6&gt;

&lt;p&gt;In order to perform a task, a recursive function calls itself over and over again with updated inputs until it reaches a stopping point. &lt;/p&gt;

&lt;p&gt;For example, let’s say, we need to find the factorial of 5 or 5! Writing a recursive function &lt;code&gt;findFactorial()&lt;/code&gt;,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function findFactorial (number) {
    if (number ===1) {
    return number;
    } else {
    return number * findFactorial(number - 1);
    }
} 

const result = findFactorial(5); 
console.log(result); //result is 120
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#what-is-dom"&gt;
  &lt;/a&gt;
  What is DOM?
&lt;/h3&gt;

&lt;h6&gt;
  &lt;a href="#answer"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h6&gt;

&lt;p&gt;DOM stands for Document Object Model. To show a HTML file in a web page, the browser converts the HTML file into a JavaScript object. This JavaScript object is known as DOM. The whole HTML file is contained in it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-callback-function"&gt;
  &lt;/a&gt;
  What is a callback function?
&lt;/h3&gt;

&lt;h6&gt;
  &lt;a href="#answer"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h6&gt;

&lt;p&gt;A function that is passed as an argument in another function is a call back function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function greetFriend(name){
    console.log(“Hello ”, name);
}  
function  doGreeting(name, handleGreeting){
    handleGreeting(name);
}

doGreeting(“Tom”, greetFriend); // “Hello Tom” 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;greetFriend&lt;/code&gt; is passed in as a call back function to the function doGreeting. Here, &lt;code&gt;greetFriend&lt;/code&gt; is a named function that has a name to call it. The call back function can be anonymous as well, that is it won’t have a name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;doGreeting(“Tom”, function(name){
    console.log(“Hello”, name);
}) 
//”Hello Tom” will be logged here too.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The call back here does not have a name and so, it is an anonymous call back function. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-an-api-and-what-do-get-and-post-do"&gt;
  &lt;/a&gt;
  What is an API and what do GET and POST do?
&lt;/h3&gt;

&lt;h6&gt;
  &lt;a href="#answer"&gt;
  &lt;/a&gt;
  Answer:
&lt;/h6&gt;

&lt;p&gt;API stands for Application programming Interface. API is what facilitates communication or interaction between applications or usually between client side application and server/servers or system etc.&lt;/p&gt;

&lt;p&gt;In simple terms, API is the medium that takes the request of the user and delivers it to the server or system, then takes the response of the system or server and delivers the response to the user. &lt;/p&gt;

&lt;p&gt;For example, all our online activity is facilitated by APIs. If you sign up to a website, there is an API that takes your request and system stores your credentials to the database and allows you access, then API delivers your access to you and you are signed in. There are many more such examples. &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;GET&lt;/code&gt; request characterizes an API to perform the job of delivering the response of the system to the user upon user request. &lt;br&gt;
And the &lt;code&gt;POST&lt;/code&gt; request characterizes an API to send or store data or user response to the system or server or database. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>computerscience</category>
      <category>career</category>
    </item>
    <item>
      <title>Learn the hidden feature in Git - Stash</title>
      <author>Yuvaraj</author>
      <pubDate>Sun, 16 May 2021 14:24:20 +0000</pubDate>
      <link>https://dev.to/yuvgeek/learn-the-hidden-feature-in-git-stash-k7b</link>
      <guid>https://dev.to/yuvgeek/learn-the-hidden-feature-in-git-stash-k7b</guid>
      <description>&lt;p&gt;Hello everyone 👋,&lt;/p&gt;

&lt;p&gt;In this article, Let's discuss about the stash feature in Git. We are going to cover the following topics:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;What is Stash?&lt;/li&gt;
&lt;li&gt;When to use Stash?&lt;/li&gt;
&lt;li&gt;How to use Stash?&lt;/li&gt;
&lt;li&gt;How to apply Stash?&lt;/li&gt;
&lt;li&gt;How to clear Stash?&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#1-what-is-stash"&gt;
  &lt;/a&gt;
  1. What is Stash?
&lt;/h3&gt;

&lt;p&gt;The general term of stash means storing something in a hidden place. It is similar in the Git terminology as well. It means moving the changes away from working directory. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-when-to-use-stash"&gt;
  &lt;/a&gt;
  2. When to use Stash?
&lt;/h3&gt;

&lt;p&gt;When you don't want to do a commit of half-done work just so you can get back to this point later. The answer to this issue is the &lt;code&gt;git stash&lt;/code&gt; command. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-how-to-use-stash"&gt;
  &lt;/a&gt;
  3. How to use Stash?
&lt;/h3&gt;

&lt;p&gt;Assume, we have a git repository which has 2 files - &lt;code&gt;index.html&lt;/code&gt; &amp;amp; &lt;code&gt;feature-1.js&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tyOkMLUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621171703214/dCfVWRDRs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tyOkMLUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621171703214/dCfVWRDRs.png" alt="stash-1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the same &lt;code&gt;master&lt;/code&gt; branch, a new feature is developed in the &lt;code&gt;feature-2.js&lt;/code&gt; file which is not ready yet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8fhOwPA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621171863942/BmLzfs49V.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8fhOwPA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621171863942/BmLzfs49V.png" alt="stash-2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Suddenly you got a call from your team lead about a blocker issue in &lt;code&gt;feature 1&lt;/code&gt; &amp;amp; you are requested to fix it immediately. Now, you have to make changes on &lt;code&gt;feature-1.js&lt;/code&gt; without pushing &lt;code&gt;feature-2.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is where &lt;code&gt;git stash&lt;/code&gt; will come to the rescue.&lt;/p&gt;

&lt;p&gt;In this situation, &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First add the unfinished files to the staging area by &lt;code&gt;git add&lt;/code&gt; command,
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add feature-2.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Run the below command to move the files from working directory to stash.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// with -m flag, you can add customized stash message.
git stash push -m "feature 2 in progress"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;Then run, &lt;code&gt;git stash list&lt;/code&gt; to see the stash list. You will see the stash id along with the message.
Here, &lt;code&gt;stash@{0}&lt;/code&gt; is the stash id.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;stash@{0}: On master: feature 2 in progress
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;feature-2.js&lt;/code&gt; will not be available in your &lt;code&gt;git status&lt;/code&gt; and as well as in your working directory.
Now, you can work on &lt;code&gt;feature-1.js&lt;/code&gt; and push your fix to the remote repository.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SwQl4cUa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621172836674/FKrEQzEe9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SwQl4cUa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621172836674/FKrEQzEe9.png" alt="stash-4.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well Done! 👏&lt;/p&gt;

&lt;p&gt;You have successfully fixed issue in &lt;code&gt;feature-1.js&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;But, how to bring back &lt;code&gt;feature-2.js&lt;/code&gt; to the work copy? 🤔&lt;/p&gt;

&lt;p&gt;That brings to the next section on applying stash.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-how-to-apply-stash"&gt;
  &lt;/a&gt;
  4. How to apply Stash?
&lt;/h3&gt;

&lt;p&gt;Like how the files were moved from &lt;code&gt;working directory&lt;/code&gt; to the &lt;code&gt;stash&lt;/code&gt; through &lt;code&gt;git stash push&lt;/code&gt; command,&lt;br&gt;
one has to use &lt;code&gt;git stash apply&lt;/code&gt; command to move the changes from &lt;code&gt;stash&lt;/code&gt; to &lt;code&gt;working directory&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To do that, follow the below steps,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To see the list of stashes along with stash id, run the &lt;code&gt;git stash list&lt;/code&gt; command. You will see the stash id along with the stash message we have given earlier.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git stash list
stash@{0}: On master: feature 2 in progress
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;In this case, &lt;code&gt;stash@{0}&lt;/code&gt; is the stash id. Use this in below command to apply the changes.
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git stash apply stash@{0}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;You will see the following output on running the above command
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  On branch master
  Changes to be committed:
  (use "git reset HEAD &amp;lt;file&amp;gt;..." to unstage)
    new file:   feature-2.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;In the last line of above log, you can see &lt;code&gt;feature-2.js&lt;/code&gt; is bought back from stash. Now, you can work on continue working on &lt;code&gt;Feature 2&lt;/code&gt;. 🙌&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Lets try run &lt;code&gt;git stash list&lt;/code&gt; once more.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;stash@{0}: On master: feature 2 in progress
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be surprised to see the Stash is still there. We have already have &lt;code&gt;feature-2.js&lt;/code&gt; file, But, why is still in Stash? We will see how to clear from stash on next section.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-how-to-clear-stash"&gt;
  &lt;/a&gt;
  5. How to clear Stash?
&lt;/h3&gt;

&lt;p&gt;There are 2 ways to clear the applied stash.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You can remove the stash by id. In our case, &lt;code&gt;stash@{0}&lt;/code&gt; is the stash id. This will remove only the specific stash from the stash list.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git stash drop stash@{0}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ol&gt;
&lt;li&gt;You can completely remove all the stash in the list. &lt;strong&gt;Warning&lt;/strong&gt;: This will remove all the stashes from the stash list.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git stash clear
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's it!&lt;/p&gt;

&lt;p&gt;Thanks for reading my article. I hope you've learned something new day!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>git</category>
      <category>github</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Implementing Svelte Custom Transitions</title>
      <author>Mark Volkmann</author>
      <pubDate>Sun, 16 May 2021 14:04:06 +0000</pubDate>
      <link>https://dev.to/mvolkmann/implementing-svelte-custom-transitions-123h</link>
      <guid>https://dev.to/mvolkmann/implementing-svelte-custom-transitions-123h</guid>
      <description>&lt;p&gt;#  Implementing Custom Transitions&lt;br&gt;
From &lt;a href="https://www.manning.com/books/svelte-and-sapper-in-action?utm_source=blog&amp;amp;utm_medium=organic&amp;amp;utm_campaign=book_volkmann_svelte_8_19_20&amp;amp;utm_content=devto"&gt;&lt;em&gt;Svelte and Sapper in Action&lt;/em&gt;&lt;/a&gt; by Mark Volkmann&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IS3W1s1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gzu2oppmo0z9onkmv2an.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IS3W1s1F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gzu2oppmo0z9onkmv2an.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article walks through implementing custom transitions with Svelte and Sapper.&lt;/p&gt;

&lt;p&gt;Take 40% off &lt;a href="https://www.manning.com/books/svelte-and-sapper-in-action?utm_source=blog&amp;amp;utm_medium=organic&amp;amp;utm_campaign=book_volkmann_svelte_8_19_20&amp;amp;utm_content=devto"&gt;&lt;em&gt;Svelte and Sapper in Action&lt;/em&gt;&lt;/a&gt; by entering &lt;strong&gt;fccvolkmann&lt;/strong&gt; into the discount code box at checkout at &lt;a href="https://www.manning.com/?utm_source=blog&amp;amp;utm_medium=organic&amp;amp;utm_campaign=book_volkmann_svelte_8_19_20&amp;amp;utm_content=devto"&gt;manning.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Implementing custom transitions is easy. The only thing required is to write a function that follows a few basic rules. The function should take two arguments, the DOM node to be transitioned and an options object. Examples of options include:&lt;/p&gt;

&lt;p&gt;• &lt;code&gt;delay&lt;/code&gt; - This is the number of milliseconds to wait before the transition begins.&lt;br&gt;
• &lt;code&gt;duration&lt;/code&gt; - This is the number of milliseconds over which the transition should occur.&lt;br&gt;
• &lt;code&gt;easing&lt;/code&gt; - This is an easing function that takes a value between zero and one, and returns a value in that same range.&lt;/p&gt;

&lt;p&gt;Options which are specific to a given transition can also be provided. For example, the &lt;code&gt;fly&lt;/code&gt; transition accepts &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; options.&lt;/p&gt;

&lt;p&gt;The function must return an object whose properties include the transition options and a &lt;code&gt;css&lt;/code&gt; method. The &lt;code&gt;css&lt;/code&gt; method must return the appropriate CSS string for the number between zero and one which is returned by calling the &lt;code&gt;easing&lt;/code&gt; function. Svelte takes care of honoring the &lt;code&gt;delay&lt;/code&gt; and &lt;code&gt;duration&lt;/code&gt; options.&lt;/p&gt;

&lt;p&gt;The transition options returned can be given default values which are used when they aren’t passed to the custom function. For example, default values for &lt;code&gt;duration&lt;/code&gt; and &lt;code&gt;easing&lt;/code&gt; can be provided.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;css&lt;/code&gt; method has passed a time value between zero and one. It must return a string containing CSS properties to be applied to the DOM node for that time value. Examples of CSS properties which might vary over time include opacity, size, font size, position, rotation, and color.&lt;/p&gt;

&lt;p&gt;Here’s an example of a custom transition. It animates the scale and rotation of an element to make it appear to spiral down a drain when removed from the DOM. We apply this to a div element containing the text "Take me for a spin!" sized to wrap to two lines. Press the "Toggle" button to toggle between hiding and showing the &lt;code&gt;div&lt;/code&gt; element. Check the "Springy" checkbox to use the &lt;code&gt;backInOut&lt;/code&gt; easing function instead of the &lt;code&gt;linear&lt;/code&gt; easing function.&lt;/p&gt;

&lt;p&gt;Figure 1. custom transition&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b27d2DN1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubo2op3hs0r0el7lug1o.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b27d2DN1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubo2op3hs0r0el7lug1o.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Copy this code to the REPL to try it.&lt;br&gt;
Listing 1. src/App.svelte&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; &amp;lt;script&amp;gt;
  import {backInOut, linear} from 'svelte/easing';

  let springy = false;
  $: duration = springy ? 2000 : 1000;
  $: easing = springy ? backInOut : linear;
  $: options = {duration, easing, times: 2};

  let show = true;
  const toggle = () =&amp;gt; show = !show;

  function spin(node, options) {
    const {easing, times = 1} = options;
    return {
      ...options,
      css(t) {                              1 
        const eased = easing(t);            2
        const degrees = 360 * times;        3
        return `transform: scale(${eased}) rotate(${eased * degrees}deg);`;
      }
    };
  }
&amp;lt;/script&amp;gt;

&amp;lt;label&amp;gt;
  &amp;lt;input type="checkbox" bind:checked={springy} /&amp;gt; Springy
&amp;lt;/label&amp;gt;
&amp;lt;div&amp;gt;duration = {duration}&amp;lt;/div&amp;gt;
&amp;lt;button on:click={toggle}&amp;gt;Toggle&amp;lt;/button&amp;gt;

{#if show}
  &amp;lt;div class="center" in:spin={options} out:spin={options}&amp;gt;        4
    &amp;lt;div class="content"&amp;gt;Take me for a spin!&amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
{/if}

&amp;lt;style&amp;gt;
  .center {                             5
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
  }

  .content {
                                        6
    position: absolute;
    transform: translate(-50%, -50%);

    font-size: 64px;
    text-align: center;
    width: 300px;
  }
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;❶ The value of t passed to the css method varies between zero and one during an "in" transition and between one and zero during an "out" transition.&lt;br&gt;
❷ Recall that easing functions return a value between zero and one inclusive.&lt;br&gt;
❸ This is the degrees through which to spin.&lt;br&gt;
❹ The reasons for using in and out instead of transition is explained in the book.&lt;br&gt;
❺ This has a width and height of zero and it’s only used to center the content on the page.&lt;br&gt;
❻ These CSS properties give rotation about the center.&lt;/p&gt;

&lt;p&gt;If you want to learn more about the book, check it out on Manning’s liveBook platform &lt;a href="https://livebook.manning.com/book/svelte-and-sapper-in-action?origin=product-look-inside&amp;amp;utm_source=blog&amp;amp;utm_medium=organic&amp;amp;utm_campaign=book_volkmann_svelte_8_19_20&amp;amp;utm_content=devto"&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>animation</category>
    </item>
    <item>
      <title>Comprehensive List of Chrome Extensions for Developers 🔥</title>
      <author>Anastasia 🏄🏻‍♀️</author>
      <pubDate>Sun, 16 May 2021 13:46:16 +0000</pubDate>
      <link>https://dev.to/actitime/comprehensive-list-of-chrome-extensions-for-developers-32ae</link>
      <guid>https://dev.to/actitime/comprehensive-list-of-chrome-extensions-for-developers-32ae</guid>
      <description>&lt;p&gt;Developers spend a lot of time using browsers. As of February 2021, 63% of worldwide Internet users &lt;a href="https://www.statista.com/statistics/276738/worldwide-and-us-market-share-of-leading-internet-browsers/"&gt;prefer&lt;/a&gt; Google Chrome over other web browsers. And it’s not surprising because Google Chrome boasts its wide collection of extensions that extend browser functionality. So instead of installing additional software and tools, you can create your personal extensions toolkit that you can take with you wherever you go – just log into your Google account on any other device with pre-installed Google Chrome and sync the data.&lt;/p&gt;

&lt;p&gt;We asked our developers at &lt;a href="http://actitime.com/"&gt;actiTIME&lt;/a&gt; to share their favorite Google Chrome extensions that they use on a daily basis and compiled this comprehensive collection of development and productivity extensions. Save this list to get back to it anytime.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;p&gt;&lt;a href="#devs"&gt;Chrome Extensions for Developers&lt;/a&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="#webdesign"&gt;Web Design Tools&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="#webdev"&gt;Web Development Tools&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#webanalysis"&gt;Website Analysis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github"&gt;GitHub &amp;amp; GitLab Tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="#productivity"&gt;Chrome Productivity Extensions&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#privacy"&gt;Privacy Protection&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#timetracking"&gt;Time &amp;amp; Task Tracking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#recording"&gt;Screenshot &amp;amp; Video Recording&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#adblocking"&gt;Ad Blocking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bookmarking"&gt;Bookmarking &amp;amp; Notetaking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#devnews"&gt;Developer News&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#chrome-extensions-for-developers"&gt;
  &lt;/a&gt;
  Chrome Extensions for Developers &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#web-design-tools"&gt;
  &lt;/a&gt;
  Web Design Tools &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#sitemodio"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/sitemodio/efjbaneaebkanjmhengnedpllfdiocin"&gt;Sitemod.io&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Sitemod.io is a must-have extension in your developer toolkit. It allows you to edit, save and share any website without having access to the source code of the website. With this extension, you can edit or add your own HTML, CSS and JS code to any web page. After that, you can create a shareable link to the modified website.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/COzKh56T0OM"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This extension is of great help for everyone related to web design:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;freelancers and agencies that can edit their websites in real time&lt;/li&gt;
&lt;li&gt;sales and marketing teams who can install their apps on customers’ websites&lt;/li&gt;
&lt;li&gt;website owners who can test web apps using only this browser extension&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#css-viewer"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/cssviewer/ggfgijbpiheegefliciemofobhmofgce"&gt;CSS Viewer&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;CSS Viewer is a Chrome Extension originally developed for Firefox. Nicolas Huon, its original creator, stopped supporting the original extension in 2008 so a GitHub user created a port to Google Chrome, released it under a public license and issued several versions with new features and fixes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--25oKuLqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/CSS-Viewer.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--25oKuLqc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/CSS-Viewer.png" alt="CSS Viewer Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As the name suggests, CSS Viewer displays CSS properties of any object that you point your mouse on. It displays font, color and positioning properties.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#whatfont"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/whatfont/jabopobgcpjmedljpbcaablpmlmfcogm?hl=ru"&gt;WhatFont&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;WhatFont is a Chrome extension that allows you to identify fonts used on web pages. After you hover on text, a popup appears that displays font family, size and line height. It also detects the services used for serving web fonts. Supports Typekit and Google Font API.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nJim_5Ng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/unnamed.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nJim_5Ng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/unnamed.jpg" alt="WhatFont Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WhatFont is a lightweight solution for web developers who collect examples of great pages. This is especially useful whenever you find a website that uses a beautiful font that is not on the list of standard fonts pre-installed on your OS.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#window-resizer"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/window-resizer/kkelicaakdanhinjdeammmilcgefonfh?hl=en"&gt;Window Resizer&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This extension resizes browser windows to emulate different resolutions. All you need to choose a device from the list and see what your layout looks like on this device.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vqFO6ov5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/unnamed-1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vqFO6ov5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/unnamed-1.jpg" alt="Window Resizer Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Window Resizer is completely customizable: you can add, edit, delete and re-order presets. Use keyboard shortcuts to navigate the popup, assign them to the tools you use the most and sync them between the devices.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#web-development-tools"&gt;
  &lt;/a&gt;
  Web Development Tools &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#web-developer"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/web-developer/bfbameneiokkgbdmiekhjnmfkcnldhhm"&gt;Web Developer&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;With more than 1 million users on the Chrome Web Store, this extension is a must-have. Web Developer adds a set of useful web development tools to your browser pertaining to cookies, CSS, forms, images, page information and more. For example, you can disable JavaScript, view the Meta tag page information, resize the browser window and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vZcrnHg9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Web-Developer-Chrome-Extension.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vZcrnHg9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Web-Developer-Chrome-Extension.png" alt="Web Developer Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#web-developer-checklist"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/web-developer-checklist/iahamcpedabephpcgkeikbclmaljebjp?hl=en"&gt;Web Developer Checklist&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Web Developer Checklist is a Chrome extension that helps you identify website problems. It will check website performance, usability, semantics, SEO, code quality, accessibility, security and more. This extension is especially useful when you need to make sure that your website page works fine before you publish it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ViZliiin--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/web-developer-checklist.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ViZliiin--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/web-developer-checklist.png" alt="Web Developer Checklist Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, you can use this extension as a task reminder to coordinate web development progress and identify website problems before the delivery.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#redux-devtools"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd"&gt;Redux DevTools&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Redux DevTools is one of the most useful and powerful tools for powering up Redux development workflow or any other architecture which handles the state change. One of its benefits is that it makes it easy to trace actions and state changes. Other features include action skipping, time travel, custom dispatch, allow/block actions and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--893TJLeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/unnamed-2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--893TJLeO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/unnamed-2.jpg" alt="Redux DevTools Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Redux is one of the most adopted state management libraries for large-scale React applications. Learn &lt;a href="https://codeburst.io/redux-devtools-for-dummies-74566c597d7"&gt;how to set up Redux DevTools&lt;/a&gt; in your environment.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#json-viewer"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh?hl=en&amp;amp;ref=hackernoon.com"&gt;JSON Viewer&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;If you’ve ever worked with JSON code like API’s (especially RestFul APIs), then you know how unreadable and clumsy JSON code is. This Chrome extension highlights syntax in online and local JSON files making it more visually appealing and straightforward.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p45uGlVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/unnamed-3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p45uGlVX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/unnamed-3.jpg" alt="JSON Viewer Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JSON Viewer is a great lightweight extension that allows you to view and edit JSON right in Google Chrome without having to resort to other standalone apps.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#vuejs-devtools"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd"&gt;Vue.js devtools&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Vue.js devtools is a Chrome extension that scales between a library and a full-featured framework. It allows you to edit component data, load components in the DOM, track custom events, monitor route history and data, debug Vuex behavior and time travel across previous states.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2Ah4Kd3j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/vue.js-devtools-1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2Ah4Kd3j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/vue.js-devtools-1.jpg" alt="Vue.js devtools Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The best thing about this extension is that it is equally accessible for novices and seasoned developers. Advanced users can easily tweak it to suit their needs.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#react-developer-tools"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi"&gt;React Developer Tools&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;React Developer Tools is a Chrome DevTools extension for the open-source React JavaScript library for building user interfaces. This extension provides an extra set of React-specific inspection widgets to assist you with development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--si3hCmNK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/React-developer-tools.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--si3hCmNK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/React-developer-tools.jpg" alt="React Developer Tools Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React Developer Tools offers significant performance gains, improved navigation experience, visual and functional improvements, which make code debugging easier.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#ajax-debugger"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/ajax-debugger/lgfefckpdealogpcfjdhinecfbcgedam"&gt;AJAX Debugger&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This extension logs all AJAX activity to the Dev Tools Console, allowing inspection of AJAX calls, and open calls in a new tab with all the inputs. IT allows developers to easily see top-level request info, like the HTTP status, response time, and size.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qYv2NNUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/ajax-debugger.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qYv2NNUi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/ajax-debugger.jpg" alt="AJAX Debugger Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Logged data includes files called, response time, size and status, AJAX source link with all input parameters, object containing all request and response details and more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#website-analysis"&gt;
  &lt;/a&gt;
  Website Analysis &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#wappalyzer"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg"&gt;Wappalyzer&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Wappalyzer extension identifies tools and technologies behind web pages. These include more than a thousand of different web services, CMS, analytics tools, plugins, JavaScript libraries and more.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3xx3v8iy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/weppalizer.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3xx3v8iy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/weppalizer.jpg" alt="Wappalyzer Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively, you can also visit the &lt;a href="https://www.wappalyzer.com/lookup/developer.chrome.com"&gt;official website&lt;/a&gt; of the extension, where you can search for any website and see what technology it uses.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#lighthouse"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk"&gt;Lighthouse&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Lighthouse is an open-source tool by Google that audits website performance, accessibility, progressive web apps, SEO and more. Choose a page you want to audit, click the extension button and press ‘Generate Report’. A new tab will open with page quality results.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4S9IRPBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Lighthouse.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4S9IRPBt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Lighthouse.png" alt="Lighthouse Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also &lt;a href="https://developers.google.com/web/tools/lighthouse"&gt;run Lighthouse in Chrome DevTools&lt;/a&gt;, from the command line, or as a Node module. The extension just allows you to access this functionality in a few clicks.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#check-my-links"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/check-my-links/ojkcdipcgfaekbeaelaapakgnjflfglf"&gt;Check My Links&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This extension crawls through the page, looks for working and broken links and highlights these. It allows you to automate the link fixing process.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HvEb-U4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/check-my-links.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HvEb-U4j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/check-my-links.jpg" alt="Check My Links Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Load your page, select the icon and a popup with the link stats will appear. Depending on the size of the page, the scanning process may take a few seconds.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github-amp-gitlab-tools"&gt;
  &lt;/a&gt;
  GitHub &amp;amp; GitLab Tools &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#octotree"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc"&gt;OctoTree&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;OctoTree enhances GitHub code review and exploration. First of all, it displays a tree view of the repo in a collapsible sidebar. More than that, it provides fast IDE-like code tree, Quick file search, GitHub themes, private repositories support, Omni bookmarking and more. OctoTree feels a lot like Visual Studio Code in Github.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GQEgahvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/OctoTree.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GQEgahvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/OctoTree.jpg" alt="OctoTree Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Premium features include 20+ themes, code font settings, quick PR navigation, pull request code review, sidebar docking position, multiple GitHub accounts and more. Paid plans for individual users cost $35 per year and $50 per user per year for teams with more than 5 users.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#octolinker"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/octolinker/jlmafbaeoofdegohdhinkhilhclaklkp?hl=en"&gt;OctoLinker&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Another browser extension for GitHub that turns language-specific statements like ‘include’, ‘require’ or ‘import’ into links to the source code. You’ll just need to click on the reference to access it.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/_6cQedp1gUI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The extension supports most web development languages, except for the C family.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#enhanced-github"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/enhanced-github/anlikcnbgdeidpacdbdljnabclhahhmd"&gt;Enhanced GitHub&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This tiny browser extension displays the size of each file, download links and copies file contents directly to the clipboard. For private repos, you’ll need a GitHub Access Token.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y41c6e6e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/enhanced-github.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y41c6e6e--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/enhanced-github.png" alt="Enhanced GitHub Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enhanced GitHub is an appealing Chrome extension that aims to improve GitHub’s functionality by a very minor, yet fairly important, margin. Highly recommended.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#chrome-productivity-extensions"&gt;
  &lt;/a&gt;
  Chrome Productivity Extensions &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#privacy-protection"&gt;
  &lt;/a&gt;
  Privacy Protection &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#ghostery"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/ghostery-%E2%80%93-privacy-ad-blo/mlomiejdfkolichcflejclcbmpeaniij?hl=en&amp;amp;ref=hackernoon.com"&gt;Ghostery&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This extension detects and blocks ads, trackers and other tools that record your behavior and slow down the page download.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/WOo6HK48Kjo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Ghostery not only eliminates annoying advertisements from a website and blocks third-party tools and websites from tracking you. It is free of cost and requires no sign-up or registration to get started.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#clear-cache"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/clear-cache/cppjkneekbjaeellbfkmgnhonkkjfpdn?utm_source=chrome-ntp-icon"&gt;Clear Cache&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This is a tiny tool that requires an extended set of permissions to clear your cache in a few clicks. It allows you to choose other data options to clear: app cache, cookies, downloads, form data, history, plugin data, passwords and more. You can delete cookies globally, for certain domains or for everything except for certain domains.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8inVJ8Sz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/clear-cache.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8inVJ8Sz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/clear-cache.png" alt="Clear Cache Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-amp-task-tracking"&gt;
  &lt;/a&gt;
  Time &amp;amp; Task Tracking &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#actitime"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.actitime.com/browser-extension"&gt;actiTIME&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;actiTIME is a handy time tracking extension that integrates with any developer and other browser-based tools. All you need is to create a free account, add a list of tasks and use the extension timer to track time against tasks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iW79Ufut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/actitime.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iW79Ufut--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/actitime.jpg" alt="actiTIME Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the full actiTIME web interface, you can review your working hours in a weekly timesheet. More than that, you can build charts and reports to see how your time distributes across tasks and projects. For individual users and teams up to 3 users, actiTIME is free to use. For larger teams, pricing plans start at $5 per user per month.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#focus-todo-pomodoro-timer-amp-to-do-list"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/focus-to-do-pomodoro-time/ngceodoilcgpmkijopinlkmohnfifjfb"&gt;Focus To-Do: Pomodoro Timer &amp;amp; To Do List&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This extension combines the Pomodoro timer and basic task management features. Create task lists, use the timer and review your performance using visual charts and reports.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PP1PXp0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/pomodoro.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PP1PXp0L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/pomodoro.jpg" alt="Focus To-Do Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The greatest downside of this extension is that you only get 2 days of free app access. After that, you are required to purchase a premium plan starting at $2.99 per three months. Even the smallest features such as cloud backup and reports are premium.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#screenshot-amp-video-recording"&gt;
  &lt;/a&gt;
  Screenshot &amp;amp; Video Recording &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#awesome-screenshot-screen-video-recorder"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/awesome-screenshot-screen/nlipoenfbbikpbjkfpfillcgkoblgpmj"&gt;Awesome Screenshot: Screen Video Recorder&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Developers often need to take screenshots and record videos to give proof to illustrate concepts or prove that everything was working a moment ago. This extension allows you to take screenshots, record screen and even capture sound and video from your mic and camera to help you make sure that you make yourself clear.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8X0kLXlyxN0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Additionally, you can annotate screenshots, connect with tools like Slack, JIRA, Asana and share the visuals instantly.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#vimeo-record-screen-amp-webcam-recorder"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/vimeo-record-screen-webca/ejfmffkmeigkphomnpabpdabfddeadcb?utm_source=chrome-ntp-icon"&gt;Vimeo Record – Screen &amp;amp; Webcam Recorder&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Vimeo Record is a premium browser extension that allows you to record and share video messages. All you need is to choose what to capture – your screen, voice, face – a start recording.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/idbBmAdGWTw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;With the cheapest paid plan that will cost you $12 per month, you’ll get player customization, privacy controls, unlimited screen and webcam recording and 5GB of disk space per week.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ad-blocking-extensions"&gt;
  &lt;/a&gt;
  Ad Blocking Extensions &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#adblock-best-ad-blocker"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/adblock-%E2%80%94-best-ad-blocker/gighmmpiobklfepjocnamgkkbiglidom?hl=en"&gt;AdBlock — best ad blocker&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This extension is a free adblocker that blocks ads on websites, video streaming platforms – everywhere. It also protects your browser from malware and stops advertisers from accessing your browsing history and personal information.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UErckxuM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/adblock.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UErckxuM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/adblock.jpg" alt="AdBlock Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This extension is a part of the Acceptable Ads program meaning that unobtrusive ads are not blocked by default in order to support websites. At the same time, you can choose to remove all the ads in the extension parameters, set up white lists and filters manually.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#adblock-plus-free-ad-blocker"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/adblock-plus-free-ad-bloc/cfhdojbkjhnklbpkdaibdccddilifddb"&gt;Adblock Plus – free ad blocker&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Ablock Plus is a free ad-blocking extension that blocks ads, banners, pop-ups and malware. More than that, it stops third parties from tracking your online actions, boosts page loading (as fewer resources are required to be loaded).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CqH3nLU_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/adblock-plus.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CqH3nLU_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/adblock-plus.jpg" alt="Adblock Plus Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This extension is also a part of the Acceptable Ads program but you can always choose to turn it off and block all the ads at any time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bookmarking-amp-notetaking"&gt;
  &lt;/a&gt;
  Bookmarking &amp;amp; Notetaking &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#google-keep-chrome-extension"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/google-keep-chrome-extens/lpcaedmchfhocbbapmcbpinfpgnhiddi?utm_source=chrome-ntp-icon"&gt;Google Keep Chrome Extension&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;This is the official browser extension for Google Keep. You can save web pages, images, quotes – anything on the web for later with this handy tool. As in case of other Google apps, all your saved data will be automatically saved in the cloud and synced across devices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b0qzYeIj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Google-Keep.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b0qzYeIj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Google-Keep.jpg" alt="Google Keep Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additionally, you can take notes on saved content, add labels and store all the things in one place for free.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#bookmark-sidebar"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/bookmark-sidebar/jdbnofccmhefkmjbkkdkfiicjkgofkdh?hl=en"&gt;Bookmark Sidebar&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Bookmark Sidebar adds an attractive and clean toggleable sidebar with your Google account bookmarks at the edge of your browser window. You can edit, delete or rearrange your bookmarks by dragging and dropping and view basic information by hovering on it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AKx7rkiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Bookmark-Sidebar.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AKx7rkiS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Bookmark-Sidebar.jpg" alt="Bookmark Sidebar Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#chrome-developer-news-extensions"&gt;
  &lt;/a&gt;
  Chrome Developer News Extensions &lt;a&gt;&lt;/a&gt;
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#dailydev"&gt;
  &lt;/a&gt;
  &lt;a href="https://chrome.google.com/webstore/detail/dailydev-all-in-one-codin/jlmpjdjjbgclbocgajdjefcidcncaied"&gt;Daily.dev&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;daily.dev is a resource for busy developers who want to get hot news from the best tech blogs. This browser extension replaces your new tab with the daily.dev tab with top articles. You can also personalize the feed and choose tags and resources to get news from.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/Oso6dYXw5lc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This extension is open-source, safe and secure. It requires no sign-up, but with your personal account, you can vote, save and share articles you’ve enjoyed the most.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#devo"&gt;
  &lt;/a&gt;
  &lt;a href="https://burakkarakan.com/devo/?ref=hackernoon.com"&gt;Devo&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;Devo is another new tab extension that shows GitHub Trending topics, Product Hunts, Hacker News and other top news and front pages with no-login required.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jOYwiYhT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Devo.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jOYwiYhT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.actitime.com/wp-content/uploads/2021/05/Devo.jpg" alt="Devo Chrome Extension"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You are free to change the placement of the cards, manually update the sources and display whatever platform you’d like to in different order. The latest list of platforms includes GitHub Trending, Hacker News, Product Hunt, Designer News, DEV Community and Lobste.rs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ready-to-level-up-your-development-tools-and-skills"&gt;
  &lt;/a&gt;
  Ready to Level Up Your Development Tools and Skills?
&lt;/h2&gt;

&lt;p&gt;The best productivity advice we could give to you is to keep track of your time and be mindful of how you use it. Because no tips and tricks, no browser extensions can help you advance with your career if you use your time unproductively. So if you are not sure with what Chrome extension to start, we recommend trying actiTIME.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://actitime.com/"&gt;actiTIME&lt;/a&gt; is time tracking software that is free for individual users and small teams of up to 3 users. You can track time with the browser extension, log time manually in an online timesheet or use our free mobile app to use timers or record hours manually. actiTIME easily integrates with your favorite tools including JIRA, GitHub, GitLab, Trello and 2,000+ more software. Review your project progress, productivity trends, calculate your cost of work for clients and more with actiTIME – &lt;a href="https://www.actitime.com/free-online-trial"&gt;create your account for free&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.actitime.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9jT44Og5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619702589851/tlEoizZRK.jpeg%3Fauto%3Dcompress" alt="actiTIME - time tracking software"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>100daysofcode</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Google Discover: What is It and How To Succeed</title>
      <author>yunus emre</author>
      <pubDate>Sun, 16 May 2021 13:34:09 +0000</pubDate>
      <link>https://dev.to/yunemozcann/google-discover-what-is-it-and-how-to-succeed-3019</link>
      <guid>https://dev.to/yunemozcann/google-discover-what-is-it-and-how-to-succeed-3019</guid>
      <description>&lt;p&gt;&lt;strong&gt;Websites whose traffic has increased dramatically in a short time thanks to they become visible on Google Discover, and web pages that have managed to show themselves to target audiences that have not yet known them thanks to their presentation here.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wouldn't you want to be one of them? &lt;br&gt;
Indeed, Google Discover is one of the only algorithms that will allow you to appeal to more people without looking at your SEO score or your current SERP ranking. So if you play this game by its rules and pay attention to what Google demands from you, you are likely to stand out in this feed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SNmTTtmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2t90pq816ewscqf5tmpl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SNmTTtmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2t90pq816ewscqf5tmpl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Google Discover&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;In this content, we will examine the tips of coming forward within the framework of the recommendations of Screpy experts and appearing on the Discover feed of your target audience. If you're ready, we're getting started right now!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-google-discover-work"&gt;
  &lt;/a&gt;
  How Does Google Discover Work?
&lt;/h2&gt;

&lt;p&gt;Google Discover is the renamed version of an algorithm that was previously released as Google Feed. Of course, the name was not the only thing that changed. Along with the name, many features of Discover have also been renewed.&lt;/p&gt;

&lt;p&gt;The main purpose of Google Discover is to provide users who connect to the Internet using their mobile devices with the content they need to know or want to see, without the need to search for something specific via the search bar. These contents can sometimes be breaking news, sometimes a simple recipe, or a YouTube video that has been a hit recently. Hosting different types of content, Google Discover also draws attention with its multilingual results.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So, how does Google Discover show results?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Remember what we said when reviewing search engine results pages (SERPs): Each user's SERP is personalized based on their previous browsing habits and search history. Similarly, each user's Google Discover feed is created specifically for him. The feed, which is optimized depending on the data that the user allows monitoring and collect, is renewed regularly in order to make queryless search possible. In general, the following data are taken into account by the algorithm when shaping Google Discover:&lt;/p&gt;

&lt;p&gt;⦁ Search history.&lt;br&gt;
 ⦁ Browser history.&lt;br&gt;
 ⦁ App activity.&lt;br&gt;
 ⦁ Location.&lt;/p&gt;

&lt;p&gt;In order for all of these to be examined, of course, the user must allow data collection. Google Discover presents your content to the user who is most likely to engage and interact with it. Therefore, it is actually possible to meet your target audience through Google Discover.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-be-visible-in-google-discover"&gt;
  &lt;/a&gt;
  How To Be Visible in Google Discover?
&lt;/h2&gt;

&lt;p&gt;Imagine a sudden increase in your website traffic graph. Suddenly rising lines may be telling you something very important: Your content is on Google Discover and you have had the opportunity to introduce yourself to the audience you are addressing with many new visitors!&lt;/p&gt;

&lt;p&gt;While analyzing websites that are integrated with Google Analytics, the system gives you the part of your traffic coming from Google Discover numerically. In this way, you have the chance to interpret the traffic rates you receive more easily.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---IGIh4Zo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnndh1dseoeyyrswomyi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---IGIh4Zo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xnndh1dseoeyyrswomyi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Being visible in Google Discover&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So, is there a formula for going to Google Discover? Is your SEO work enough for you to go to Google Discover? It's time to find out!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#share-contents-more-likely-to-be-presented-in-google-discover"&gt;
  &lt;/a&gt;
  Share Contents More Likely to Be Presented in Google Discover
&lt;/h2&gt;

&lt;p&gt;Google Discover may not host all content types. Specifically, contents in certain categories are extremely likely to be seen on Google Discover. Therefore, it is possible to say that one of the first ways to increase your possibility to stand out is to produce content in one of the following areas:&lt;/p&gt;

&lt;p&gt;⦁ &lt;strong&gt;Current news&lt;/strong&gt; (especially in these contents, it is extremely important to be one of the first websites to publish the news and to share them with the right details, at the same time to have NEWS registration on Google)&lt;/p&gt;

&lt;p&gt;⦁ Posting content about &lt;strong&gt;hobbies and activities&lt;/strong&gt; - Especially recipes, DIY projects, mock-ups, and similarly themed content are often featured.&lt;/p&gt;

&lt;p&gt;⦁ &lt;strong&gt;E-commerce contents&lt;/strong&gt; - specific product groups are highlighted within the framework of the user's browsing behavior and shopping behavior.&lt;/p&gt;

&lt;p&gt;⦁ &lt;strong&gt;Travel &amp;amp; hospitality contents&lt;/strong&gt; come to the fore especially on the basis of brand, product, and location. For example, it is very likely that content with the theme of '' Places to visit in the Maldives '' will appear on Discover after an individual doing a hotel reservation on the Internet in the Maldives.&lt;/p&gt;

&lt;p&gt;⦁ Contents related to the field &lt;strong&gt;of beauty and fashion&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;⦁ In the field of &lt;em&gt;gaming and electronics&lt;/em&gt;, both evergreen content and current news remain popular and are featured on Google Discover.&lt;/p&gt;

&lt;p&gt;⦁ &lt;strong&gt;Health, fitness, and outdoor concept&lt;/strong&gt; can also stand out on Google Discover in terms of activity options and local business themes.&lt;/p&gt;

&lt;p&gt;If you too are involved in any of the concepts above, you may be more likely to stand out than the others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#shape-your-content-to-be-userfocused"&gt;
  &lt;/a&gt;
  Shape Your Content to Be User-Focused
&lt;/h2&gt;

&lt;p&gt;Strong content on a website can make the website stand out in specified keywords, we know that. But quality content is required not only for SERP but also for Google Discover feed. &lt;/p&gt;

&lt;p&gt;Optimizing your content and your website, in general, can allow you to achieve extremely powerful results and increase your likelihood of being seen on Google Discover:&lt;/p&gt;

&lt;p&gt;⦁ &lt;strong&gt;Have a mobile-friendly site&lt;/strong&gt;: As we said before, Google Discover was built to improve the mobile experience. Therefore, we can say that being a mobile-compatible website is the first priority. It is very important to work in accordance with AMP and to have a mobile-compatible theme and code resource. Remember, these studies will also have a positive impact on your SEO scores and ranking due to mobile-first indexing. Discovering more is that simple!&lt;/p&gt;

&lt;p&gt;⦁ &lt;strong&gt;Support your content with powerful images and videos&lt;/strong&gt;: Highly interactive content will be liked by both Google and your visitors. The use of high-quality images and videos in the content may increase your possibility to stand out in Google Discover. Download and use the appropriate options for your work from the most preferred paid stock photo and video sites recently.&lt;/p&gt;

&lt;p&gt;⦁ &lt;strong&gt;Pay attention to technical details&lt;/strong&gt;: The correct use of h1, h2 tags in your content is very important. In addition, it is extremely valuable not to deviate from the topic you have specified in your title in your content, to provide accurate information, and to create a flow with a high rate of readability.&lt;br&gt;
Want to learn more ways to get your site on Google Discover? It may be time to check out the definitive guide by Screpy experts. Let's explore together!&lt;/p&gt;

&lt;p&gt;Want to learn more ways to get your site on Google Discover? It may be time to check out the &lt;a href="https://screpy.com/how-to-get-your-website-in-google-discover/?ref=devto-discover-post"&gt;definitive guide by Screpy experts&lt;/a&gt;. Let's explore together!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>discuss</category>
      <category>news</category>
    </item>
    <item>
      <title>#30DaysofAppwrite : Database Design 🧐</title>
      <author>Damodar Lohani</author>
      <pubDate>Sun, 16 May 2021 13:09:46 +0000</pubDate>
      <link>https://dev.to/appwrite/30daysofappwrite-database-design-140a</link>
      <guid>https://dev.to/appwrite/30daysofappwrite-database-design-140a</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://30days.appwrite.io/"&gt;#30DaysOfAppwrite&lt;/a&gt; is a month long event focused at giving developers a walk through of all of Appwrite's features, starting from the basics to more advanced features like Cloud Functions! Alongside we will also be building a fully featured Medium Clone to demonstrate how these concepts can be applied when building a real world app. We also have some exciting prizes for developers who follow along with us!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#database-design"&gt;
  &lt;/a&gt;
  Database Design 🧐
&lt;/h2&gt;

&lt;p&gt;Welcome back to another session on the Appwrite Database 👋 . We hope you have gone through the &lt;a href="https://dev.tolink-to-day-15"&gt;Day 15&lt;/a&gt; article. It is important as we build upon the knowledge gained in Day 15 and plan and prepare the database for our demo application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#planning-data-structure"&gt;
  &lt;/a&gt;
  Planning Data Structure
&lt;/h2&gt;

&lt;p&gt;We will use the &lt;strong&gt;Collection&lt;/strong&gt; and &lt;strong&gt;Rules&lt;/strong&gt; feature provided by Appwrite Database to plan the data structures needed for our application. First, let's put down the requirements of our application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#post"&gt;
  &lt;/a&gt;
  Post
&lt;/h3&gt;

&lt;p&gt;A post refers to content that can be posted by any authenticated user. Anyone can signup and create a post. Our post will have &lt;strong&gt;title&lt;/strong&gt;, &lt;strong&gt;cover&lt;/strong&gt; image, &lt;strong&gt;text&lt;/strong&gt;, &lt;strong&gt;published&lt;/strong&gt; ( to signify whether the post is a draft or published) , &lt;strong&gt;tags&lt;/strong&gt;, &lt;strong&gt;created date&lt;/strong&gt; and &lt;strong&gt;id&lt;/strong&gt; of the creator. Now we will plan this using the &lt;strong&gt;Rules&lt;/strong&gt; provided by Appwrite database.&lt;/p&gt;

&lt;p&gt;First we will create a collection as described in Day 15 and name it &lt;strong&gt;Posts&lt;/strong&gt;. Then we will add following rules from console and update the collection.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Title

&lt;ul&gt;
&lt;li&gt;label: Title&lt;/li&gt;
&lt;li&gt;Key: title&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Cover image

&lt;ul&gt;
&lt;li&gt;label: Cover image&lt;/li&gt;
&lt;li&gt;Key: cover&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: false&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Text

&lt;ul&gt;
&lt;li&gt;label: Text&lt;/li&gt;
&lt;li&gt;Key: text&lt;/li&gt;
&lt;li&gt;Rule Type: Markdown&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Published

&lt;ul&gt;
&lt;li&gt;label: Published&lt;/li&gt;
&lt;li&gt;Key: published&lt;/li&gt;
&lt;li&gt;Rule Type: Boolean&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Tags

&lt;ul&gt;
&lt;li&gt;label: Tags&lt;/li&gt;
&lt;li&gt;Key: tags&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: false&lt;/li&gt;
&lt;li&gt;Array: true&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Created Date

&lt;ul&gt;
&lt;li&gt;label: Created At&lt;/li&gt;
&lt;li&gt;Key: created_at&lt;/li&gt;
&lt;li&gt;Rule Type: Numeric&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;User Id

&lt;ul&gt;
&lt;li&gt;label: User Id&lt;/li&gt;
&lt;li&gt;Key: user_id&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WaHjuWZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cvfeacw0ham96n3aqns.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WaHjuWZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6cvfeacw0ham96n3aqns.png" alt="Posts Collection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the permissions, the read permission should be [&lt;code&gt;*&lt;/code&gt;] as anyone should be able to read the posts, while the write permission for this collection should be [&lt;code&gt;role:member&lt;/code&gt;] so that only logged in users can create a post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#profile"&gt;
  &lt;/a&gt;
  Profile
&lt;/h2&gt;

&lt;p&gt;We want to let our users have their profile with a public name so that we can display the author information in each post. We will also want to add a user's post as an embedded document in the collection so that we can fetch it easily with the user's profile. &lt;/p&gt;

&lt;p&gt;Let's create another collection named &lt;strong&gt;Users&lt;/strong&gt; with following rules&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User Id

&lt;ul&gt;
&lt;li&gt;label: User&lt;/li&gt;
&lt;li&gt;Key: user&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Name

&lt;ul&gt;
&lt;li&gt;label: Name&lt;/li&gt;
&lt;li&gt;Key: name&lt;/li&gt;
&lt;li&gt;Rule Type: Text&lt;/li&gt;
&lt;li&gt;Required: true&lt;/li&gt;
&lt;li&gt;Array: false&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Posts

&lt;ul&gt;
&lt;li&gt;label: Posts&lt;/li&gt;
&lt;li&gt;Key: posts&lt;/li&gt;
&lt;li&gt;Rule Type: Document (Embedded)&lt;/li&gt;
&lt;li&gt;Required: false&lt;/li&gt;
&lt;li&gt;Array: true&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you create a &lt;strong&gt;posts&lt;/strong&gt; rule, you will see a section with &lt;strong&gt;Allowed Collections&lt;/strong&gt;. Here, you need to select &lt;strong&gt;Posts&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvITvgHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ernsaw9bu06i9nddmmbh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvITvgHv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ernsaw9bu06i9nddmmbh.png" alt="Profile Collection"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As for the permissions, read permission should be [&lt;code&gt;*&lt;/code&gt;] as anyone should be able to read, and write permission can be [&lt;code&gt;role:member&lt;/code&gt;] so that anyone signed in can create a profile.&lt;/p&gt;

&lt;p&gt;So, this is how easy it is to plan data structures for any application using &lt;strong&gt;Collections&lt;/strong&gt; and &lt;strong&gt;Rules&lt;/strong&gt; - it is very similar to traditional Relational Databases where we plan using &lt;strong&gt;tables&lt;/strong&gt; and &lt;strong&gt;columns&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;We have now planned the database required for our application, on Day 17, we will continue to use these collections in our Application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#credits"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;

&lt;p&gt;We hope you liked this write up. You can follow &lt;a href="https://twitter.com/search?q=%2330daysofappwrite"&gt;#30DaysOfAppwrite&lt;/a&gt; on Social Media to keep up with all of our posts. The complete event timeline can be found &lt;a href="http://30days.appwrite.io"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://appwrite.io/discord"&gt;Discord Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://appwrite.io/"&gt;Appwrite Homepage&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/appwrite"&gt;Appwrite's Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to reach out to us on Discord if you would like to learn more about Appwrite, Aliens or Unicorns 🦄. Stay tuned for tomorrow's article! Until then 👋&lt;/p&gt;

</description>
      <category>30daysofappwrite</category>
      <category>flutter</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to Create and Sell NFT Art (video)</title>
      <author>Ania Kubow</author>
      <pubDate>Sun, 16 May 2021 13:04:01 +0000</pubDate>
      <link>https://dev.to/ania_kubow/how-to-create-and-sell-nft-art-video-4gdk</link>
      <guid>https://dev.to/ania_kubow/how-to-create-and-sell-nft-art-video-4gdk</guid>
      <description>&lt;p&gt;In this video I show you how to create and sell your own NFT art! Watch as I sell one of my art pieces step by step and completely from scratch! We set up a wallet (metamask), and sign up to an NFT marketplace called rarible. &lt;/p&gt;

&lt;p&gt;I hope you enjoy!&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/qIJsvKIuzIc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>nft</category>
      <category>crypto</category>
      <category>tutorial</category>
      <category>ethereum</category>
    </item>
    <item>
      <title>Why programmers should add journaling to their daily routine</title>
      <author>Andrew Baisden</author>
      <pubDate>Sun, 16 May 2021 12:57:51 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/why-programmers-should-add-journaling-to-their-daily-routine-o5j</link>
      <guid>https://dev.to/andrewbaisden/why-programmers-should-add-journaling-to-their-daily-routine-o5j</guid>
      <description>&lt;p&gt;Journaling is a great way to get thoughts out of your head. I have been doing it for quite a while using various apps. At the moment I am using an app called &lt;a href="https://daylio.net/"&gt;Daylio&lt;/a&gt; which is available on both iOS and Android. The great thing about this app is that it is more than just your average journal app. The key selling point here is that it can also be used as a mood diary and happiness tracker. I find that it's a really amazing tool because I can write journal entries in addition to having a visual overview of my current mental health.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-the-benefits-of-journaling"&gt;
  &lt;/a&gt;
  What are the benefits of journaling
&lt;/h2&gt;

&lt;p&gt;I believe that this has got to be one of the best ways for keeping your health in check and as an added bonus you can use the data and statistics as a way to recognize triggers and patterns. I think one of its greatest features is the fact that you can export all of that data as a CSV file. With that data you could potentially create a database or an API and turn it into some sort of app. For example you could build an app that uses that data and comes up with solutions for when your mood changes.&lt;/p&gt;

&lt;p&gt;The journal entries don't even have to be super long blocks of text either. I believe this is one reason why many people choose not to journal in the first place because they assume that its going to be far too time consuming for them to put in the effort. The thing about Daylio though is that you can write as little or as much text as you want. In fact you could even use one of the emoticons for the moods and that could be one journal entry for the day.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-journaling-can-be-a-path-to-creative-writing"&gt;
  &lt;/a&gt;
  How journaling can be a path to creative writing
&lt;/h2&gt;

&lt;p&gt;Here's a little secret if you want to get really good at creative writing then you should start with journaling. People like to talk about themselves so what better way for you to practice getting those thoughts out of your head in a concise manner than writing some entries into your personal journal. Pretty soon you will get the hang of it and hopefully become a natural. The content that you write is like a portal into your personality. It is refreshing to release all of those thoughts and put them together into something that you can easily visualize and digest. When you are able to easily connect with your inner self then it will become just as easy to connect with other people too.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#mood-diary"&gt;
  &lt;/a&gt;
  Mood Diary
&lt;/h1&gt;

&lt;h3&gt;
  &lt;a href="#mood-count"&gt;
  &lt;/a&gt;
  Mood Count
&lt;/h3&gt;

&lt;p&gt;In the screenshot below you can see an example of how the daily Mood Count looks.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HrZewPcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1620669216/daylio_stats_mood_count_nonzhq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HrZewPcs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1620669216/daylio_stats_mood_count_nonzhq.png" alt="https://res.cloudinary.com/d74fh3kw/image/upload/v1620669216/daylio\_stats\_mood\_count\_nonzhq.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#average-daily-mood"&gt;
  &lt;/a&gt;
  Average Daily Mood
&lt;/h3&gt;

&lt;p&gt;The screenshot below shows you what the Average Daily Mood looks like.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T-DTTCgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1620669216/daylio_stats_mood_agsnot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T-DTTCgT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1620669216/daylio_stats_mood_agsnot.png" alt="https://res.cloudinary.com/d74fh3kw/image/upload/v1620669216/daylio\_stats\_mood\_agsnot.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#year-in-pixels"&gt;
  &lt;/a&gt;
  Year in Pixels
&lt;/h3&gt;

&lt;p&gt;The data for this screen is pretty impressive as you are able to see your average mood for each month in a year.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MVCvifZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1620669216/daylio_stats_year_jvgdsn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MVCvifZr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/d74fh3kw/image/upload/v1620669216/daylio_stats_year_jvgdsn.png" alt="https://res.cloudinary.com/d74fh3kw/image/upload/v1620669216/daylio\_stats\_year\_jvgdsn.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These are just a few examples of the data that is shown there is a lot more available in the app.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect across social media you can find all of my social media profiles and blogs on &lt;a href="https://linktr.ee/andrewbaisden"&gt;linktree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Peace ✌️&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>productivity</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
