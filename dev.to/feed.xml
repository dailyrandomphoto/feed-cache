<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Using Prisma to Address Connection Pooling Issues in Serverless Environments</title>
      <author>Alexey Klochai</author>
      <pubDate>Mon, 06 Dec 2021 14:57:32 +0000</pubDate>
      <link>https://dev.to/prisma/using-prisma-to-address-connection-pooling-issues-in-serverless-environments-3g66</link>
      <guid>https://dev.to/prisma/using-prisma-to-address-connection-pooling-issues-in-serverless-environments-3g66</guid>
      <description>&lt;p&gt;This article discusses what “serverless” environments are, why developers choose to deploy their apps to them, and how the &lt;a href="https://cloud.prisma.io/"&gt;Prisma Data Platform&lt;/a&gt; solves the problems that can arise regarding database connection pooling.&lt;/p&gt;

&lt;p&gt;Choosing which tools you will use to build your application, and which platform you will be deploying to in production, are early and vital decisions that you will have to make when building a product. &lt;/p&gt;

&lt;p&gt;Using an ORM like &lt;a href="https://www.prisma.io/"&gt;Prisma&lt;/a&gt; speeds up the development process, while serverless hosting reduces the ongoing cost and resource overhead of ensuring your application’s availability to your customers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-prisma"&gt;
  &lt;/a&gt;
  What is Prisma?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.prisma.io/"&gt;Prisma&lt;/a&gt; is a next-generation ORM (&lt;a href="https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping"&gt;Object-Relational Mapping&lt;/a&gt;) library for Node.js and TypeScript.&lt;/p&gt;

&lt;p&gt;Prisma allows you to build your app in JavaScript or TypeScript and work with your data as objects rather than SQL or NoSQL queries. These objects are mapped to a database using a schema that generates all the types and conversions required to accurately store your objects in your database platform.&lt;/p&gt;

&lt;p&gt;The Prisma toolset includes developer tools for generating database migrations so that your database is always in-sync with your data mode as defined in the &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-schema"&gt;Prisma schema&lt;/a&gt;. In addition, the cloud-based &lt;a href="https://cloud.prisma.io/"&gt;Prisma Data Platform&lt;/a&gt; provides tools like user/role management and a data browser that allow you and your team to collaboratively manage your data online.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using Prisma in your projects means spending less time worrying about your database, and more time to focus on building your app.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In addition to being a great aid to development, the &lt;a href="https://cloud.prisma.io/"&gt;Prisma Data Platform&lt;/a&gt; discussed in this article makes Prisma a flexible and efficient way to manage database connections for your application with minimal fuss.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-serverless-and-why-do-developers-go-serverless"&gt;
  &lt;/a&gt;
  What is “serverless” and why do developers “go serverless”?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Serverless_computing"&gt;Serverless hosting&lt;/a&gt; is a means of delivering your app to your user without having to build and maintain a server to deploy it to.&lt;/p&gt;

&lt;p&gt;It may sound strange, but it is a cost effective way to deploy applications. Serverless cloud hosting providers like &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt; and &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt; take care of all of the infrastructure required to run your application.&lt;/p&gt;

&lt;p&gt;Here are some of the top reasons why developers are going serverless.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reduced-infrastructure-requirements"&gt;
  &lt;/a&gt;
  Reduced infrastructure requirements
&lt;/h3&gt;

&lt;p&gt;The hosting provider administers all of the infrastructure required to host your app—maintaining it, keeping it up-to-date, and most importantly, keeping it secure. The provider deals with the day-to-day burdens of hosting.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#streamlined-deployment"&gt;
  &lt;/a&gt;
  Streamlined deployment
&lt;/h3&gt;

&lt;p&gt;With serverless hosting you are provided tools to readily upload, run, and monitor your code. When a request comes in, your code is launched in a container and executed. The serverless environment discards the container when it is no longer needed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reduced-costs"&gt;
  &lt;/a&gt;
  Reduced costs
&lt;/h3&gt;

&lt;p&gt;In addition to the time and resources saved by not having to maintain your own server infrastructure, you also save on the cost of running a full server 24/7. Many serverless hosting providers like AWS and Azure will only bill you for the resources you use.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#scalability"&gt;
  &lt;/a&gt;
  Scalability
&lt;/h3&gt;

&lt;p&gt;Serverless hosting offerings like &lt;a href="https://aws.amazon.com/lambda/"&gt;AWS Lambda&lt;/a&gt; and &lt;a href="https://azure.microsoft.com/en-us/services/functions/?cdn=disable"&gt;Azure Functions&lt;/a&gt; can support sustained high load thanks to the cloud providers’ globally distributed infrastructure. In addition, such systems are well-suited for handling bursts of high load amid periods of lower use due to their automatic scaling functionality.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-issues-with-connection-pooling-in-serverless-environments"&gt;
  &lt;/a&gt;
  The issues with “connection pooling” in serverless environments
&lt;/h2&gt;

&lt;p&gt;Any database, serverless or not, has a limit on the number of open connections that it can handle at one time. For each open connection, the database system like &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; or &lt;a href="http://www.mysql.org/"&gt;MySQL&lt;/a&gt; reserves network, memory, and compute resources so that it’s able to handle any incoming requests through each connection.&lt;/p&gt;

&lt;p&gt;In a serverless environment your code does not run constantly. A user makes a request (whether it’s viewing a webpage or requesting an API resource), and a tiny containerized executing environment (called an instance) running only the code required to serve the request is launched.  The request is served, and the instance is destroyed.&lt;/p&gt;

&lt;p&gt;This is efficient, but there is one problem. In traditional hosting environments with a single server that runs your application,  a single instance of the application can service multiple user requests.&lt;/p&gt;

&lt;p&gt;In a traditional hosting environment a single instance of the application will be managing a &lt;strong&gt;single&lt;/strong&gt; &lt;a href="https://en.wikipedia.org/wiki/Connection_pool"&gt;connection pool&lt;/a&gt; to your database. The connection pool ensures that any database queries are within the connection and timeout limits that you have configured. It coordinates the re-use of database connections and prevents the database server from being overloaded.&lt;/p&gt;

&lt;p&gt;In a serverless environment, a new instance of your code is launched for every user request. Each instance will be unaware of the others, resulting in &lt;strong&gt;multiple&lt;/strong&gt; connection pools. As these separate connection pools are not aware of one another, they cannot coordinate to ensure the database server is not overloaded.&lt;/p&gt;

&lt;p&gt;In a serverless environment, there is no shared connection pool. This creates the risk that a small number of user requests exhaust the database connection limit causing the application to stop working.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CqKCBOTJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cu90f410g7ydf51tym17.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CqKCBOTJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cu90f410g7ydf51tym17.png" alt="Each Serverless function handles one user request which can quickly exceed the database connection limit" width="880" height="705"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#methods-of-dealing-with-with-connection-pooling-issues"&gt;
  &lt;/a&gt;
  Methods of dealing with with connection pooling issues
&lt;/h2&gt;

&lt;p&gt;There are three key ways in which the modern developer can deal with connection pooling issues in a serverless environment.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#external-connection-poolers"&gt;
  &lt;/a&gt;
  External connection poolers
&lt;/h3&gt;

&lt;p&gt;One method is to use an &lt;a href="https://www.prisma.io/docs/guides/performance-and-optimization/connection-management#external-connection-poolers"&gt;external connection pooler&lt;/a&gt;. By moving the task of coordinating database connections outside of your serverless app, an external connection pooler solves the issue of the separate execution instances not being able to coordinate with each other.&lt;br&gt;
Not all database servers have an external connection pooler. If this path you choose to mitigate the issue, you should carefully select which tools and platforms will be used in your project early in the development process.&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://cloud.prisma.io/"&gt;Prisma Data Proxy&lt;/a&gt; is an example of an external connection pooler approach.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mdb_PeRe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rt38aa2ho502ld80uvu0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mdb_PeRe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rt38aa2ho502ld80uvu0.png" alt="Serverless with the Prisma Data Proxy" width="880" height="705"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#adjusting-your-code"&gt;
  &lt;/a&gt;
  Adjusting your code
&lt;/h3&gt;

&lt;p&gt;Another method to overcome connection pooling issues is to ensure that your code is &lt;a href="https://www.prisma.io/docs/guides/performance-and-optimization/connection-management#prismaclient-in-serverless-environments"&gt;written in a way&lt;/a&gt; that accounts for the serverless environment in which it will run. Some cloud providers &lt;em&gt;do&lt;/em&gt; reuse resources between requests, so structuring your code so that connections can be maintained between requests is a way to reduce database load. &lt;/p&gt;

&lt;p&gt;However, this approach is limited and will only help alleviate the problem to some degree. &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#fine-tuning-your-database-server"&gt;
  &lt;/a&gt;
  Fine tuning your database server
&lt;/h3&gt;

&lt;p&gt;An important step in deploying to a production environment is to monitor and profile your application. Knowing how your application will be used and how busy it will be allows you to determine what resources to allocate. With this information, you can optimize your database connection to reduce the chance of overloading it. For example, you can reduce the connection timeout for inactive connections so that your database is less likely to be spending resources on a connection that’s not going to be used. Another option is to increase the connection limit on the database, but handling more connections will likely require more compute resources.&lt;/p&gt;

&lt;p&gt;In addition to supporting these traditional methods of dealing with connection pooling issues, the Prisma Data Platform introduces a reliable and readily configurable database proxy that solves connection pooling issues—regardless of the database server or database host in use.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#solving-connection-pooling-issues-with-prisma-data-proxy"&gt;
  &lt;/a&gt;
  Solving connection pooling issues with Prisma Data Proxy
&lt;/h2&gt;

&lt;p&gt;Prisma has introduced a new service that effectively solves the connection pooling issue when deploying to serverless environments like AWS Lambda and Vercel.&lt;/p&gt;

&lt;p&gt;The Prisma Data Proxy acts as an intermediary between your application code and the database, effectively acting as an external connection pooler for any &lt;a href="https://www.prisma.io/docs/reference/database-reference/supported-databases"&gt;database supported by Prisma&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#flexible-orm-and-proxy-with-external-connection-pooling"&gt;
  &lt;/a&gt;
  Flexible ORM and proxy with external connection pooling
&lt;/h3&gt;

&lt;p&gt;Using the Prisma Data Proxy solves the connection pooling issue without you having to drastically alter your code or spend extra time tweaking your database connection configuration to account for the serverless environment.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/GWbzyyziH9A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The Prisma Data Proxy also reduces the size of the data bundle that you must upload to your serverless hosting environment. Many of the database functions are outsourced to the highly performant Prisma Engine binary hosted by the Prisma Data Proxy, so they do not need to be included with your deployment bundle.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#part-of-the-prisma-data-platform"&gt;
  &lt;/a&gt;
  Part of the Prisma Data Platform
&lt;/h3&gt;

&lt;p&gt;The Prisma Data Proxy is part of the &lt;a href="https://www.prisma.io/dataplatform"&gt;Prisma Data Platform&lt;/a&gt;, a cloud based platform that helps manage and collaborate on application data.&lt;/p&gt;

&lt;p&gt;The Prisma Data Platform includes a powerful databas tools to assist you and your team during the development process. This includes the Prisma Query Console, which enables you to view and manage your live data through a simple interface. It allows you to gain insight into how your application is used and to quickly fix any arising data issues.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-benefits-of-serverless-hosting-and-prisma"&gt;
  &lt;/a&gt;
  The benefits of serverless hosting and Prisma
&lt;/h2&gt;

&lt;p&gt;Serverless hosting in combination with the &lt;a href="https://cloud.prisma.io/"&gt;Prisma Data Platform&lt;/a&gt; provides a set of collaborative development and deployment tools for developers who simply want to get on with building their product.&lt;br&gt;
Building and running serverless applications has become a very attractive option for developers due to the reduced resources and costs, and an easier scaling approach.&lt;/p&gt;

&lt;p&gt;However, when developing your application you will have to ensure its suitability to be run in a serverless environment. There is nothing inherently wrong with the serverless concept, but there are differences to traditional hosting configurations that must be considered when coding to deploy in such an environment.&lt;/p&gt;

&lt;p&gt;The Prisma Data Platform is being actively developed to address the challenges of deploying data-intensive apps to modern serverless platforms while allowing you to use the database and database host you are already comfortable with.&lt;/p&gt;

&lt;p&gt;To learn more about databases in the Serverless era and a sneak peak into Prisma's vision for the Prisma Data Platform, check out the talks from the &lt;a href="https://www.prisma.io/serverless"&gt;Prisma Serverless Conference&lt;/a&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#get-started-with-the-prisma-data-platform"&gt;
  &lt;/a&gt;
  Get started with the Prisma Data Platform
&lt;/h3&gt;

&lt;p&gt;The Prisma Data Platform, including the Prisma Data Proxy, is currently available in Early Access.&lt;/p&gt;

&lt;p&gt;Online documentation is available to get you started, so that you are ready to implement the Prisma Data Platform in your project when it is released.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=iyGZ8JFPgoY"&gt;See the Prisma Data Proxy in action&lt;/a&gt; or &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-data-platform#prisma-data-proxy"&gt;learn more about how to easily integrate the Prisma Data Platform into your project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And if you are ready to try Prisma Data Platform out, &lt;a href="https://www.prisma.io/dataplatform"&gt;get started today&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>serverless</category>
      <category>database</category>
    </item>
    <item>
      <title>Ugly Sweater CSS: The Imperial Logo</title>
      <author>Chris Jarvis</author>
      <pubDate>Mon, 06 Dec 2021 14:46:40 +0000</pubDate>
      <link>https://dev.to/jarvisscript/ugly-sweater-css-the-imperial-logo-33p9</link>
      <guid>https://dev.to/jarvisscript/ugly-sweater-css-the-imperial-logo-33p9</guid>
      <description>&lt;p&gt;Last year I made CSS ugly sweaters based off of Star Wars characters. Some of those were minifigures included in the LEGO Star Wars Advent calendar. I'm not sure if there are sweaters in this year's advent. But Hallmark has released LEGO Minifigure ornaments with ugly sweaters. The ornaments are available at Hallmark stores and online.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9kMT6eJa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5bzbnyfnbsjwbgzhyev.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9kMT6eJa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z5bzbnyfnbsjwbgzhyev.jpg" alt="LEGO Darth Vader wearing a red sweater with the Death Star on it." width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Darth Vader ornament is a larger version of the figure from last year's advent calendar. I did the sweater with &lt;a href="https://dev.to/jarvisscript/ugly-sweater-css-that-s-no-moon-l7g"&gt;this post&lt;/a&gt;. There also is a new figure, a Stormtrooper wearing a sweater with the Imperial Crest. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vf_VTnlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8d2uwxcpw095jw1sz2sk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vf_VTnlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8d2uwxcpw095jw1sz2sk.jpg" alt="LEGO Stormtrooper wearing&amp;lt;br&amp;gt;
 a blue sweater. The sweater has the imperial crest on it" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I reused the basic sweater HTML from last year. I changed the colors to match the new blue sweater. A previous version of the sweater is in &lt;a href="https://dev.to/jarvisscript/return-of-css-halloween-4idg"&gt;this post.&lt;/a&gt; I won't go into much detail here. Below is what the final image looked like. I just changed the colors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--522VvmBr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a0znzci2r1kjq0rcyixp.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--522VvmBr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a0znzci2r1kjq0rcyixp.jpg" alt="red christmas sweater with death star" width="471" height="470"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Main sweater to blue&lt;/li&gt;
&lt;li&gt;Boxes to blue and white&lt;/li&gt;
&lt;li&gt;Stitching to black.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I'm learning CSS variables, so I'm trying them in the code this time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--sweaterblue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#558fbf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.imperialCrest&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--sweaterblue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's the basic torso. I placed a character div in that torso. Inside the character div is a div for a specific character for this post it has a class of Imperial Crest.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#add-the-crest"&gt;
  &lt;/a&gt;
  Add the Crest
&lt;/h2&gt;

&lt;p&gt;I started the Crest with a big circle with a background of &lt;code&gt;--sweaterblue&lt;/code&gt; and a border of black &lt;code&gt;#000000&lt;/code&gt;. The blue matches the blue from the main sweater background. But it sweater has stars as a background image. The inside of the crest is solid blue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPalofls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhtnzth81sgvhpv15vtj.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPalofls--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhtnzth81sgvhpv15vtj.jpg" alt="large black ring on blue back ground" width="880" height="383"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"torso"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt; 
   &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"character"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"imperialCrest"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;  
   &lt;span class="nt"&gt;&amp;lt;/div&lt;/span&gt; &lt;span class="err"&gt;character&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;--sweaterblue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#558fbf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.imperialCrest&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--sweaterblue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;12px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#add-circles"&gt;
  &lt;/a&gt;
  Add circles
&lt;/h2&gt;

&lt;p&gt;Next I added two circles inside the main ring.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ndwWDeM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/078g9h501x1ktrey8s42.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ndwWDeM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/078g9h501x1ktrey8s42.jpg" alt="A large black ring, inside it a black circle, with a small blue circle in the center" width="880" height="388"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"imperialCrest"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;  
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bigCircle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"centerCircle"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.bigCircle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;260px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;260px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
    &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;flex-direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.centerCircle&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--sweaterblue&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#struts-and-spokes"&gt;
  &lt;/a&gt;
  Struts and Spokes
&lt;/h2&gt;

&lt;p&gt;Right now it just looks like circles. But after adding some shapes, the logo will appear. The process for the rest of the build follows this pattern; build a shape, get sizes approximately right, duplicate the shape, modify the sizes and shape as the copies are moved around.&lt;/p&gt;

&lt;p&gt;First I made some black struts. The first one was vertical. Then used &lt;code&gt;transform: rotate(xxdeg);&lt;/code&gt; to change the angle of the right and left struts. Since I'm building around a symmetrical circle, once I have the placement for the left side all I have to do is give the right side the opposite number. Left is 60degress, so right side is -60 degrees. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bNahH9x4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xpuwitgqltbx2tue2tem.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bNahH9x4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xpuwitgqltbx2tue2tem.jpg" alt="A large black ring, inside it a black circle, with a small blue circle in the center. There is a vertical line and an X in the center of the ring." width="880" height="356"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"struts vertical"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"struts diagonalLeft"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"struts diagonalRight"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.struts&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#000000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.diagonalLeft&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;60deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.diagonalRight&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-60deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next I made some trapezoid blocks where the struts meet the black circle. To make a trapezoid with CSS you make a square using borders, give one side a color make the other sides transparent. Add some width or height and background color to the item. It took a while had to adjust margins to get placement right. I used dev tools to select the element and adjust their positions in the browser.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"block top"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"block lefttop"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"block leftbottom"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"block righttop"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"block rightbottom"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"block bottom"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.block&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nl"&gt;border-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-top-right-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-top-left-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.top&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-210px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.bottom&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin-bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-210px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rotate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;180deg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tn4jfEoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j877uwmr646kdfv3gy7g.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tn4jfEoJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j877uwmr646kdfv3gy7g.jpg" alt="A large black ring, inside it a black circle, with a small blue circle in the center. There is a vertical line and a X in the center of the ring. Where the line and black circle meet are retangles" width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next I added blue spokes made of of an hourglass shape. The hourglass is made of two elongated triangles. In CSS triangles are made by building a rectangle with borders but no background. The top and bottom borders have color, the sides are usually transparent. To make it easy to see here, I gave the left and right a color of white and removed the blue circle. In final project the sides will be transparent and not seen. The points will blend into the circle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PokBtK5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ua5h2zq80twt391cox4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PokBtK5K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0ua5h2zq80twt391cox4.jpg" alt="Large rectangle. made of four rectangle. top and bottom are blue. right and left are white." width="880" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Made one in center then two more using same transform: rotate attributes as the spikes. So they cross like an X in the center of the circle.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Odd thing&lt;/strong&gt; here When viewed on Firefox, the rotated blue spokes have a thin black line through the center. It doesn't show on Chrome. I used dev tools to change the black items under the spoke to other colors but there still was a black line on the blue. &lt;/p&gt;

&lt;p&gt;Any CSS or browser experts out there know what's going on?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-look"&gt;
  &lt;/a&gt;
  Final Look
&lt;/h2&gt;

&lt;p&gt;Here's the final look with the all the spokes. it now looks like the Imperial Crest from the sweater. I was extremely happy when I refreshed the browser and saw this final image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HKllh2hb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2e7hckmgca7xb75jnnf1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HKllh2hb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2e7hckmgca7xb75jnnf1.jpg" alt="The Imperial Crest worm by the empire in Star Wars" width="880" height="387"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vf_VTnlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8d2uwxcpw095jw1sz2sk.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vf_VTnlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8d2uwxcpw095jw1sz2sk.jpg" alt="LEGO Stormtrooper wearing&amp;lt;br&amp;gt;
 a blue sweater. The sweater has the imperial crest on it" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>frontend</category>
      <category>tutorial</category>
      <category>art</category>
    </item>
    <item>
      <title>NEW: DynamoDB Streams Filtering in Serverless Framework</title>
      <author>Pawel Zubkiewicz</author>
      <pubDate>Mon, 06 Dec 2021 14:19:12 +0000</pubDate>
      <link>https://dev.to/aws-builders/new-dynamodb-streams-filtering-in-serverless-framework-3lc5</link>
      <guid>https://dev.to/aws-builders/new-dynamodb-streams-filtering-in-serverless-framework-3lc5</guid>
      <description>&lt;p&gt;From this article, you will learn how to utilize recently released functionality of Streams Filtering with DynamoDB and Lambda. &lt;/p&gt;

&lt;p&gt;We will move deeper than a basic sample of DynamoDB event action filtering. You will learn how to combine it with your business logic. I will be using DynamoDB &lt;em&gt;single-table&lt;/em&gt; design setup for that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-new"&gt;
  &lt;/a&gt;
  What's new?
&lt;/h2&gt;

&lt;p&gt;If you haven't heard, just before #reInvent2021 AWS dropped &lt;a href="https://aws.amazon.com/about-aws/whats-new/2021/11/aws-lambda-event-filtering-amazon-sqs-dynamodb-kinesis-sources/"&gt;this huge update&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-changed"&gt;
  &lt;/a&gt;
  What's changed?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#before-the-update"&gt;
  &lt;/a&gt;
  Before the update
&lt;/h3&gt;

&lt;p&gt;Every action made in a DynamoDB table (&lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;MODIFY&lt;/code&gt;, &lt;code&gt;REMOVE&lt;/code&gt;) triggered an event that was sent over DynamoDB Streams to a Lambda function. Regardless of the action type, a Lambda function was always invoked. That had two repercussions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You had to implement filter logic inside your Lambda code (&lt;code&gt;if&lt;/code&gt; conditions) before executing your business logic (i.e. filter &lt;code&gt;INSERT&lt;/code&gt; actions to send welcome email whenever new &lt;code&gt;User&lt;/code&gt; was added into the table). &lt;/li&gt;
&lt;li&gt;You paid for every Lambda run, even though in most cases you were interested only in &lt;em&gt;some&lt;/em&gt; events.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That situation was multiplied in &lt;em&gt;single-table&lt;/em&gt; design, where you store multiple types in a single table, so in reality you have many &lt;code&gt;INSERT&lt;/code&gt;s with subtypes (ie. new user, new address, new order etc.)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#after-the-update"&gt;
  &lt;/a&gt;
  After the update
&lt;/h3&gt;

&lt;p&gt;Now, &lt;strong&gt;you can filter out events that are not relevant to your business logic&lt;/strong&gt;. By defining &lt;em&gt;filter criteria&lt;/em&gt;, you control which events can invoke a Lambda function. Filtering evaluates events based on values that are in the message.&lt;/p&gt;

&lt;p&gt;This solves above-mentioned problems: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Logic evaluation is pushed on AWS (no more &lt;code&gt;if&lt;/code&gt;s in Lambda code)&lt;/li&gt;
&lt;li&gt;No more needless Lambda execution.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of that thanks to the small JSON snippet defining &lt;em&gt;filter criteria&lt;/em&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#refactoring-to-the-streams-filtering"&gt;
  &lt;/a&gt;
  Refactoring to the Streams Filtering
&lt;/h2&gt;

&lt;p&gt;Since you're reading this article, it's safe to assume you're like me, already using DynamoDB Streams to invoke your Lambda functions.&lt;/p&gt;

&lt;p&gt;Therefor, let me take you through the refactoring process. It's a simplified version of the code that I use on production. &lt;/p&gt;

&lt;p&gt;In my DynamoDB table, I store two types of entities: &lt;code&gt;Order&lt;/code&gt; and &lt;code&gt;Invoice&lt;/code&gt;. My &lt;em&gt;business logic&lt;/em&gt; requires me to &lt;em&gt;do something&lt;/em&gt; only when &lt;code&gt;Invoice&lt;/code&gt; is modified. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nQhVBrok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yj72f9jku4yw9r5rppu4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nQhVBrok--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yj72f9jku4yw9r5rppu4.png" alt="Business logic conditions" width="570" height="131"&gt;&lt;/a&gt;&lt;br&gt;
As you can see, it's just the single case out of six. Imagine what happens when you have more types in your table, and your business logic requires you to perform other actions as well.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#old-event-filtering"&gt;
  &lt;/a&gt;
  Old event filtering
&lt;/h3&gt;

&lt;p&gt;Let's start from those ugly &lt;code&gt;if&lt;/code&gt; statements that I had before the update because I had to manually filter events. &lt;/p&gt;

&lt;p&gt;My Lambda's handler started with execution of &lt;code&gt;parseEvent&lt;/code&gt; method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;parseEvent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Records&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="c1"&gt;// batch size = 1&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isInsert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eventName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;INSERT&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isModify&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;eventName&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;MODIFY&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isOrder&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dynamodb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewImage&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;S&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Order&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;isInvoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dynamodb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewImage&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;S&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Invoice&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newItemData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dynamodb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NewImage&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;oldItemData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dynamodb&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;OldImage&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;isInsert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isModify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isOrder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isInvoice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newItemData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;oldItemData&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next step, I had to evaluate the condition in my handler:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;isInsert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isModify&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isOrder&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;isInvoice&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;newItemData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;oldItemData&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parseEvent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isModify&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;isInvoice&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// perform business logic&lt;/span&gt;
  &lt;span class="c1"&gt;// uses newItemData &amp;amp; oldItemData values&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#new-event-filtering"&gt;
  &lt;/a&gt;
  New event filtering
&lt;/h3&gt;

&lt;p&gt;New functionality allows us to significantly simplify that code by pushing condition evaluation on AWS.&lt;/p&gt;

&lt;p&gt;Just to recap, my business logic requires me to let in only &lt;code&gt;MODIFY&lt;/code&gt; events that was performed on &lt;code&gt;Invoice&lt;/code&gt; entities. Fortunately, I keep &lt;code&gt;Type&lt;/code&gt; value on my entities in DynamoDB Table (thanks Alex 🤝).&lt;/p&gt;

&lt;p&gt;The DynamoDB event structure is well-defined, so basically what I need to do is make sure that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;eventName&lt;/code&gt; equals to &lt;code&gt;MODIFY&lt;/code&gt;, and&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;dynamodb.NewImage.Type.S&lt;/code&gt; equals to &lt;code&gt;Invoice&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of that is defined in &lt;code&gt;filterPatterns&lt;/code&gt; section of Lambda configuration. Below is a snippet from Serverless Framework &lt;code&gt;serverless.yml&lt;/code&gt; config file. Support for &lt;code&gt;filterPatterns&lt;/code&gt; was introduced in version 2.68.0 - make sure you are using it  or newer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;    &lt;span class="na"&gt;functionName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;handler&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;src/functionName/function.handler&lt;/span&gt;
      &lt;span class="c1"&gt;# other properties&lt;/span&gt;
      &lt;span class="na"&gt;events&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;stream&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;dynamodb&lt;/span&gt;
          &lt;span class="na"&gt;arn&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="kt"&gt;!GetAtt&lt;/span&gt; &lt;span class="s"&gt;DynamoDbTable.StreamArn&lt;/span&gt;
          &lt;span class="na"&gt;maximumRetryAttempts&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
          &lt;span class="na"&gt;batchSize&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
          &lt;span class="na"&gt;filterPatterns&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;eventName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;MODIFY&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
              &lt;span class="na"&gt;dynamodb&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                 &lt;span class="na"&gt;NewImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                   &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                     &lt;span class="na"&gt;S&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Invoice&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that's all you need to do to filter your DynamoDB Stream.&lt;/p&gt;

&lt;p&gt;Amazing, isn't it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#gotchas"&gt;
  &lt;/a&gt;
  Gotchas
&lt;/h2&gt;

&lt;p&gt;Bear in mind that there can be several filters on a single source. In such case, each filter works independently of the other. Simply put, there is &lt;code&gt;OR&lt;/code&gt; not &lt;code&gt;AND&lt;/code&gt; logic between them.&lt;/p&gt;

&lt;p&gt;I learned that the hard way by mistakenly creating two filters:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;          &lt;span class="na"&gt;filterPatterns&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;eventName&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;MODIFY&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
            &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;dynamodb&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                 &lt;span class="na"&gt;NewImage&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                   &lt;span class="na"&gt;Type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                     &lt;span class="na"&gt;S&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;Invoice&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;by adding &lt;code&gt;-&lt;/code&gt; in front of &lt;code&gt;dynamodb:&lt;/code&gt;. It resulted in the wrong filter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"filters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;eventName&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:[&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;MODIFY&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;]}"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;dynamodb&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;NewImage&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Type&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;S&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:[&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Invoice&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;]}}}}"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That one catches all &lt;code&gt;MODIFY&lt;/code&gt; actions OR anything that has &lt;code&gt;Invoice&lt;/code&gt; as &lt;code&gt;Type&lt;/code&gt; in &lt;code&gt;NewImage&lt;/code&gt; object, so DynamoDB &lt;code&gt;INSERT&lt;/code&gt; actions as well!&lt;/p&gt;

&lt;p&gt;Correct filter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"filters"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"pattern"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;eventName&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:[&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;MODIFY&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;],&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;dynamodb&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;NewImage&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Type&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:{&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;S&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;:[&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;Invoice&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s2"&gt;]}}}}"&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can view filter in Lambda console, under &lt;em&gt;Configuration-&amp;gt;Triggers&lt;/em&gt; section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-much-does-it-cost"&gt;
  &lt;/a&gt;
  How much does it cost?
&lt;/h2&gt;

&lt;p&gt;Nothing. &lt;/p&gt;

&lt;p&gt;There is no information about any additional pricing. Also, Jeremy Daly confirmed that during re:Invent 2021.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8N8eEBfw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1130500247753506816/r7DrtNlg_normal.png" alt="Jeremy Daly profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Jeremy Daly
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/jeremy_daly"&gt;@jeremy_daly&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/NoSQLKnowHow"&gt;@NoSQLKnowHow&lt;/a&gt; Do you know how the pricing will work for this? The Lambda PMs told me that each function needs to consume the stream in order to do the filtering, so do we get charged DynamoDB Streams read request units for everything pulled off the stream, or just what gets filtered?
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      20:09 PM - 01 Dec 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1466137340565278721" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1466137340565278721" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1466137340565278721" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;



&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--8N8eEBfw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1130500247753506816/r7DrtNlg_normal.png" alt="Jeremy Daly profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Jeremy Daly
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/jeremy_daly"&gt;@jeremy_daly&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/NoSQLKnowHow"&gt;@NoSQLKnowHow&lt;/a&gt; Confirmed with &lt;a href="https://twitter.com/ajaynairthinks"&gt;@ajaynairthinks&lt;/a&gt; that the Lambda Service eats the polling cost, so you only get charged for what makes it into your function.
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      22:24 PM - 01 Dec 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1466171465733062657" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1466171465733062657" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1466171465733062657" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;In reality, &lt;strong&gt;this functionality saves you money on maintenance because it's easier to write &amp;amp; debug Lambda code, and on operations, as functions are executed only responding to business relevant events&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#low-coupling"&gt;
  &lt;/a&gt;
  Low coupling
&lt;/h2&gt;

&lt;p&gt;Before the update, people implemented event filtering logic in a single Lambda function. Thus, struggling from high coupling (unless they utilized some kind of dispatcher pattern).&lt;/p&gt;

&lt;p&gt;Now, we can have several independent Lambda functions, each with its &lt;em&gt;filter criteria&lt;/em&gt;, attached to the same DynamoDB Stream. That results in lower coupling between code that handles different event types. This will be very much appreciated by all &lt;em&gt;single-table&lt;/em&gt; design practitioners.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;I hope this short article convinced you to refactor your Lambda functions that are invoked by DynamoDB Streams. It's really simple and makes a huge difference in terms of code clarity and costs. &lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloudnative</category>
      <category>dynamodb</category>
      <category>serverless</category>
    </item>
    <item>
      <title>3 Ways to Backup Your Code (Even If You Don’t Know Git)</title>
      <author>Rizèl Scarlett</author>
      <pubDate>Mon, 06 Dec 2021 14:17:35 +0000</pubDate>
      <link>https://dev.to/github/3-ways-to-backup-your-code-even-if-you-dont-know-git-1o5l</link>
      <guid>https://dev.to/github/3-ways-to-backup-your-code-even-if-you-dont-know-git-1o5l</guid>
      <description>&lt;p&gt;Today, over 73 million software engineers around the globe use GitHub. While GitHub provides many benefits, including project management, open source collaboration, and automation, early career developers often sign up to host their code and visualize the changes they make over time. Personally, I choose to upload my code to GitHub because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It reduces the risk of losing my code. If I only stored my code on a local computer and that computer stopped working, I’d lose my work forever.  My code is always accessible to me with GitHub regardless of what computer I’m using.&lt;/li&gt;
&lt;li&gt;It helps me land jobs. GitHub serves as my portfolio for hiring managers and talent sources to gauge my technical expertise better. After graduating from my coding boot camp, GitHub was especially conducive to my job search because I lacked professional software engineering experience.&lt;/li&gt;
&lt;li&gt;It helps me collaborate on projects. Back in the day, before Git and version control (a.k.a. the process of saving different files or ‘versions’ throughout the various stages of a project) existed, people shared their code via email, floppy disk, and other tedious mediums. Today, with tools like GitHub, you can share your code and visually track changes made by each collaborator. I can also communicate with collaborators through comments and GitHub Discussions. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A common way to interface with GitHub is through Git and the terminal. Because Git and the terminal have such a steep learning curve, some developers, especially early career developers, avoid using GitHub. &lt;strong&gt;But what if I told you, you could use GitHub to store your programming projects without the command line?&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-difference-between-git-and-github"&gt;
  &lt;/a&gt;
  The Difference Between Git and GitHub
&lt;/h2&gt;

&lt;p&gt;Before I describe the various techniques for leveraging GitHub without Git, I want to clarify the difference between the two tools.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#git"&gt;
  &lt;/a&gt;
  Git
&lt;/h3&gt;

&lt;p&gt;In layman’s terms, Git records snapshots of your projects as you save the changes you make throughout history. This allows developers to confidently return to a past version of a project if they make a mistake or discover a problem. To use it, people install Git on their local computers, and in their terminals, they type commands such as &lt;code&gt;git add&lt;/code&gt;, &lt;code&gt;git commit&lt;/code&gt;, and &lt;code&gt;git push&lt;/code&gt; to save their latest changes. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#github"&gt;
  &lt;/a&gt;
  GitHub
&lt;/h3&gt;

&lt;p&gt;At its core, GitHub is a web-based platform for developers to store code on the cloud. It is also available as a mobile app and desktop app.Through the graphical user interface, developers can use GitHub to work with developers worldwide. Over the years, GitHub expanded its offerings to include project management, automation, deployment, security, and more.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;GitHub incorporates Git’s version control features to make collaboration easier.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#backup-your-code-without-the-command-line"&gt;
  &lt;/a&gt;
  Backup Your Code Without The Command Line
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-github-desktop"&gt;
  &lt;/a&gt;
  1. GitHub Desktop
&lt;/h3&gt;

&lt;p&gt;GitHub Desktop is a desktop application with a graphical user interface that allows you to retrieve, edit, and save code to GitHub without touching your terminal. Read the official &lt;a href="https://docs.github.com/en/desktop"&gt;documentation&lt;/a&gt; to learn more about installing, configuring, and using GitHub Desktop.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-githubs-web-user-interface"&gt;
  &lt;/a&gt;
  2. GitHub’s Web User Interface
&lt;/h3&gt;

&lt;p&gt;You can upload, edit, and find files directly from GitHub.com without downloading the files or navigating the terminal. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Option 1&lt;/strong&gt;:  You can edit the files directly at GitHub.com after uploading them.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Option 2&lt;/strong&gt;: You can edit your files on your local computer, drag and drop your entire folder, and GitHub will “auto-magically” determine which files were changed and only upload the edited files.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_KnBnBHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.blog/wp-content/uploads/2016/02/a888b59e-d004-11e5-80a6-e9f32f17c4d5.gif%3Fresize%3D2640%252C1594" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_KnBnBHF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.blog/wp-content/uploads/2016/02/a888b59e-d004-11e5-80a6-e9f32f17c4d5.gif%3Fresize%3D2640%252C1594" alt="Image of managing source control in web based editor" width="880" height="531"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-githubdev"&gt;
  &lt;/a&gt;
  3. GitHub.dev
&lt;/h3&gt;

&lt;p&gt;You can find GitHub’s free, web-based editor at &lt;a href="https://github.dev"&gt;https://github.dev&lt;/a&gt;. The web-based editor introduces a lightweight editing experience that runs entirely in your browser. With the web-based editor, you can navigate files and source code repositories from GitHub, and make and commit code changes. You can open any repository, fork, or pull request in the editor. Read the official &lt;a href="https://docs.github.com/en/codespaces/the-githubdev-web-based-editor"&gt;documentation&lt;/a&gt; editing and saving files via github.dev. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I77nLq1G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.github.com/assets/images/help/codespaces/codespaces-commit-commit-message.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I77nLq1G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://docs.github.com/assets/images/help/codespaces/codespaces-commit-commit-message.png" alt="Image description" width="880" height="417"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even if you don’t know Git or feel intimidated by the terminal, you can still use GitHub to back up your code, track changes, and build your portfolio. Of course, as your skills grow and you land a new role, your employer may prefer that you use Git. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Over the next few weeks, I’ll share tips about Git and GitHub that I’ve learned and continue to learn throughout my career in tech. Give me a follow to avoid missing my upcoming blog posts!! Let’s grow together and become version control pros!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>github</category>
      <category>git</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Poetry vs pip: Or How to Forget Forever "requirements.txt"      Cheat Sheet for Beginners</title>
      <author>Vadim Kolobanov</author>
      <pubDate>Mon, 06 Dec 2021 13:43:45 +0000</pubDate>
      <link>https://dev.to/vadimkolobanov/poetry-vs-pip-or-how-to-forget-forever-requirementstxt-cheat-sheet-for-beginners-33h1</link>
      <guid>https://dev.to/vadimkolobanov/poetry-vs-pip-or-how-to-forget-forever-requirementstxt-cheat-sheet-for-beginners-33h1</guid>
      <description>&lt;p&gt;Poetry is a dependency management tool in Python projects (analogous to the built-in pip). &lt;/p&gt;

&lt;p&gt;It will be vital for beginners in Python to get acquainted with this tool, as it is a very simple and easy-to-use tool, the use of which can simplify the management and development of the project.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can install poetry on windows either using pip:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install poetry
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;pip stores dependency data in a file requirements.txt (or something else, but more often it is), poetry stores information in the pyproject.toml file, however, in the case of pip, only a list of dependencies and versions is stored in its file, and all basic information about the project is stored in .toml. It is very convenient, you can always find all the information in one place&lt;/p&gt;

&lt;p&gt;To install dependencies in pip, you need to run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;poetry makes it easier and more beautiful&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;installation&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;poetry install
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;update&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;poetry update
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Viewing dependencies in pip is done like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip freeze
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will only be able to see the current versions of the libraries and will not get the structure of all packages with their dependencies. In poetry, in poetry.the lock file, you can view information about all installed packages, the command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;poetry show --tree
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will show the tree structure of packages with their personal dependencies.&lt;/p&gt;

&lt;p&gt;Also, launching a project in pip (in the case of a virtual environment) creates inconveniences, since the first thing you need to do is go into this very environment.&lt;/p&gt;

&lt;p&gt;There is no need to activate the virtual environment in poetry, just go to the project folder and start using the commands. Poetry will find the right environment by itself.&lt;br&gt;
You can also change the python version in poetry without having to change the old virtual environment.&lt;/p&gt;

&lt;p&gt;This is only a small part of the benefits.&lt;br&gt;
Now a little bit about the .toml file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tool.poetry]
name = "new_proj"
version = "0.1.0"
description = "DEVoneLove"
authors = ["Vadim Kolobanov &amp;lt;titanyforgame@gmail.com&amp;gt;"]

[tool.poetry.dependencies]
python = "^3.10"
pygame = "^2.1.0"
icecream = "^2.1.1"
requests = "^2.26.0"
psycopg2 = { version = "^2.7", optional = true }
pymysql = { version = "1.0.2", optional = true }

[tool.poetry.dev-dependencies]
Pympler = "^0.9"

[tool.poetry.urls]
"My GitHub" = "https://github.com/vadimkolobanov"

[tool.poetry.scripts]
run-main = "new_proj.main:main_def"

[build-system]
requires = ["poetry-core&amp;gt;=1.0.0"]
build-backend = "poetry.core.masonry.api"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;[tool.poetry] - contains basic information about the project&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[tool.poetry.dependencies] - contains a description of all project dependencies. A link to Github is specified.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[tool.poetry.scripts] - contains scripts that need to be run when installing dependencies&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[tool.poetry.extras] - dependency groups for a separate installation&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[tool.poetry.urls] - Along with the main URLs, you can specify your own links&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;The study and effective use of new programming language features distinguishes a real programmer from a populist who talks about his skills more than he knows how.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(c) Vadim Kolobanov 2021 AD&lt;/em&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#put-on-heart-if-you-liked-it-and-you-learned-something-new"&gt;
  &lt;/a&gt;
  Put on Heart if you liked it and you learned something new!
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#you-can-also-follow-me-to-receive-notifications-about-new-interesting-articles"&gt;
  &lt;/a&gt;
  You can also follow &lt;a href="https://dev.to/vadimkolobanov"&gt;ME&lt;/a&gt; to receive notifications about new interesting articles.
&lt;/h3&gt;




&lt;h3&gt;
  &lt;a href="#faq"&gt;
  &lt;/a&gt;
  FAQ
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Python?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Look into the following series:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/vadimkolobanov/series/15329"&gt;Learning Python&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/vadimkolobanov/series/15349"&gt;Step by Step to Junior&lt;/a&gt;&lt;br&gt;
&lt;a href="https://dev.to/vadimkolobanov/series/15331"&gt;Ideas&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Can we cooperate with you?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you have interesting projects and you need a python (web)developer, then you can contact me by &lt;strong&gt;&lt;a href="//titanyforgame@gmail.com"&gt;mail&lt;/a&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;a href="https://discord.gg/szEuVAhatW"&gt;discord&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://www.linkedin.com/in/vadzim-hlobuz-0b44531b7/"&gt;LinkedIn&lt;/a&gt;&lt;/strong&gt; for cooperation&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.facebook.com/neo.skarynsky"&gt;Write me on Facebook&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&lt;a href="https://twitter.com/decodesperato"&gt;My Twitter&lt;/a&gt; &lt;br&gt;&lt;br&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;br&gt;
&lt;p&gt;To beat depression, try to just quit &lt;a href="https://twitter.com/hashtag/programming?src=hash&amp;amp;ref_src=twsrc%5Etfw"&gt;#programming&lt;/a&gt; 🤪&lt;/p&gt;— Vadim Kolobanov (@decodesperato) &lt;a&gt;&lt;/a&gt;&lt;br&gt;
&lt;/blockquote&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>productivity</category>
      <category>beginners</category>
    </item>
    <item>
      <title>JavaScript, Single Threaded but Non-Blocking</title>
      <author>Dylan Oh</author>
      <pubDate>Mon, 06 Dec 2021 13:25:01 +0000</pubDate>
      <link>https://dev.to/ohdylan/javascript-single-threaded-but-non-blocking-198e</link>
      <guid>https://dev.to/ohdylan/javascript-single-threaded-but-non-blocking-198e</guid>
      <description>&lt;p&gt;For those who just got in touch with JavaScript might be confused when hearing people say that JavaScript is a single threaded and non-blocking programming language. You might be thinking how could one be single threaded but non-blocking? &lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Single Threaded&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JavaScript is known to be single threaded because of its property of having only one call stack, which some other programming languages have multiple. JavaScript functions are executed on the call stack, by LIFO (Last In First Out). For example we have a piece of code like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trace&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And the call stack will have foo to enter into call stack, then bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cdqp8Odv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/exvl0p4kqy36psxbjr00.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cdqp8Odv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/exvl0p4kqy36psxbjr00.png" alt="Image description" width="496" height="503"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After bar() is done, it will be popped off from the call stack, followed by foo(). You will see an anonymous function underneath when printing out the stack trace, and that is the global execution context of main thread.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZjxRxe7Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfgz6mxfax3zebp2xjzx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZjxRxe7Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qfgz6mxfax3zebp2xjzx.png" alt="Image description" width="203" height="228"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This seems to be logical as JavaScript is a single threaded language and there is only a single flow to execute all these functions. However, in the case that we are having some unpredictable or heavy tasks in the flow (for example making an API call), we do not want them to block the execution of the remaining codes (else users might be staring at a frozen screen). This is where the asynchronous JavaScript comes in.&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Non-Blocking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Other than JavaScript Engine, we also have Web APIs, Callback Queue and Event Loop to form JavaScript runtime in the browser. Let's say we have a piece of code here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;5000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;"setTimeout" is a Web API function that will execute a callback function after a certain amount of time (in milliseconds, in this case is 5000 milliseconds). When you execute this script, you will see that "1" and "3" are printed out instantly, and "2" is printed out around 5 seconds later. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LTH44MmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bkachgjqdjftob1gm07r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LTH44MmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bkachgjqdjftob1gm07r.png" alt="Image description" width="333" height="154"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is what happened behind the scene:&lt;/p&gt;

&lt;p&gt;The first console log is put into the stack, and popped off after printed out "1" in the console. When setTimeout function is put into the stack, the callback function is set to await by this Web API function. The setTimeout function is then popped off the stack and the third console log enters. After finished executing, the third console log and the current global execution context are popped off from stack. &lt;/p&gt;

&lt;p&gt;When the callback function in setTimeout finished awaiting, it will be entering to Callback Queue (or event queue) and waiting to be executed. Event loop facilitates and checks if the call stack is empty. If it is empty, new global execution context is created and this call back function (console log out "2") will then be put into the stack, executed and popped off. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MOs4GbAM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/guc8ykvjaahtv1045ws9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MOs4GbAM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/guc8ykvjaahtv1045ws9.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I hope this gives you an idea of why JavaScript can be single threaded and non-blocking at the same time. Thought of writing this as I just recently shared this with the new joiner to our company.&lt;/p&gt;

&lt;p&gt;Oh btw, if you still need a video explanation, here is a good resource:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;What the heck is the event loop anyway? | Philip Roberts | JSConf EU&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Do follow me for more future articles on web design, programming and self-improvement&lt;/strong&gt; 😊&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to use Class-based Components in React </title>
      <author>SnowBit</author>
      <pubDate>Mon, 06 Dec 2021 12:50:04 +0000</pubDate>
      <link>https://dev.to/snowbit/how-to-use-class-based-components-in-react-1cnb</link>
      <guid>https://dev.to/snowbit/how-to-use-class-based-components-in-react-1cnb</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HI56D6orlJ0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this article, I am going to show you how you can use &lt;strong&gt;class-based components&lt;/strong&gt; in React JS&lt;/p&gt;

&lt;p&gt;Let's get started 🎉&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-classbased-components"&gt;
  &lt;/a&gt;
  What is Class-based components
&lt;/h3&gt;

&lt;p&gt;Class-based components are simple classes which tends as a React components which can be easily used anywhere in your React Project&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-use-them"&gt;
  &lt;/a&gt;
  How to use them?
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Snowbit&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;container&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;I&lt;/span&gt; &lt;span class="nx"&gt;am&lt;/span&gt; &lt;span class="nx"&gt;SnowBit&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;Shown&lt;/span&gt; &lt;span class="nx"&gt;using&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;based&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Career change to IT - things you wish you knew</title>
      <author>mmiask</author>
      <pubDate>Mon, 06 Dec 2021 12:48:53 +0000</pubDate>
      <link>https://dev.to/mmiask/career-change-to-it-things-you-wish-you-knew-34ek</link>
      <guid>https://dev.to/mmiask/career-change-to-it-things-you-wish-you-knew-34ek</guid>
      <description>&lt;p&gt;Hi!&lt;/p&gt;

&lt;p&gt;I'm Michał and I'm a self-taught web developer, who started working in IT as a manual QA in December 2019. Before that I worked in biotech industry, including a pharmaceutical company in Poland.&lt;/p&gt;

&lt;p&gt;I remember the very beginning of my career change and how much work it required (including some proper motivation). All of the doubt, roadblocks but also the excitement of learning stuff in a completely new (to me) field.&lt;/p&gt;

&lt;p&gt;If there are people here switching to IT, or who successfully did that - &lt;strong&gt;what is your experience? What questions did you have at the beggining of the road that you wish were answered back then?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I want to create an episode of a podcast on the above topic (a live Q&amp;amp;A) where me and a bunch of other people with a similiar experience answer the questions that you would like answered. Is there something you think should be covered in that kind of content? &lt;strong&gt;What confused you the most when switching to IT?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thanks in advance and (hopefully) see you soon! &lt;/p&gt;

</description>
      <category>codenewbie</category>
      <category>beginners</category>
      <category>discuss</category>
      <category>career</category>
    </item>
    <item>
      <title>Create &amp; Explore Your Own Virtual Reality Zoo Experience</title>
      <author>echo3D</author>
      <pubDate>Mon, 06 Dec 2021 12:47:28 +0000</pubDate>
      <link>https://dev.to/echo3d/create-explore-your-own-virtual-reality-zoo-experience-bm2</link>
      <guid>https://dev.to/echo3d/create-explore-your-own-virtual-reality-zoo-experience-bm2</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--H3wG_dr4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794148026/A6h1nYDn9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--H3wG_dr4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794148026/A6h1nYDn9.png" alt="1.png" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Looking to create a virtual zoo experience that you and your friends can explore in VR?&lt;/strong&gt; Use this VR zoo demo app build with Oculus Quest, echo3D and Unity. The full demo can also be found on echo3D’s &lt;a href="https://github.com/echo3Dco/Unity-Oculus-echo3D-demo-VR-Zoo-Explorer"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#register"&gt;
  &lt;/a&gt;
  Register
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Don’t have an API key? Make sure to register for FREE at &lt;a href="https://console.echo3d.co/#/auth/register"&gt;echo3D&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;Clone the &lt;a href="https://github.com/echo3Dco/Unity-Oculus-echo3D-demo-VR-Zoo-Explorer"&gt;echoAR-Zoo-VR-Explorer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EICv2bHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794213375/7pQDYdqCA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EICv2bHp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794213375/7pQDYdqCA.png" alt="2.png" width="880" height="451"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#echo-api-setup"&gt;
  &lt;/a&gt;
  Echo API Setup
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.echoar.xyz/unity/using-the-sdk"&gt;Set the API key&lt;/a&gt; in the &lt;code&gt;echoAR.cs&lt;/code&gt; script inside the &lt;code&gt;echoAR\echoAR.prefab&lt;/code&gt; using the the Inspector.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.echoar.xyz/quickstart/add-a-3d-model"&gt;Add the 3D model&lt;/a&gt; from the ‘Models’ folder to the console in corresponding scenes.&lt;/li&gt;
&lt;li&gt;Each folder in the Models folder should be a new project (API key) in your echo3D console. So for example, there would be an API key holding all of the models from the Overworld Models folder, another API key holding all of the models from the Tiger Models folder, another API key holding all of the models from the Macaw Models folder, etc.&lt;/li&gt;
&lt;li&gt;If a model does not have a corresponding CSV file, it means that there is no metadata to input for that model. Hence, you can skip adding any metadata to that model. Otherwise, copy the metadata from each model’s corresponding CSV file in the folder.&lt;/li&gt;
&lt;li&gt;We recommend to add videos and audios from &lt;code&gt;Models\VideosAudios&lt;/code&gt; to a seperate key &lt;a href="https://docs.echoar.xyz/web-console/load-a-key"&gt;Load a Key&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Set the Video API key inside the &lt;code&gt;Prefabs\echoAR (video).prefab&lt;/code&gt; using the the Inspector.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://docs.echoar.xyz/web-console/manage-pages/data-page/how-to-add-data#adding-metadata"&gt;Add the corresponding metadata&lt;/a&gt; listed in the &lt;code&gt;Models&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;For videos and audios project, make sure all models’ metadata have a “Index” key with a special non-negative integer value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_7z7ygXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794327558/JXulRuKuU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_7z7ygXQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794327558/JXulRuKuU.png" alt="3.png" width="880" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BuRJFCGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794353725/lZ3RkqRfA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BuRJFCGI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794353725/lZ3RkqRfA.png" alt="4.png" width="880" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#build-amp-run"&gt;
  &lt;/a&gt;
  Build &amp;amp; Run
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://docs.echoar.xyz/unity/adding-ar-capabilities#4-build-and-run-the-ar-application"&gt;Build and run the application&lt;/a&gt; in VR.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#learn-more"&gt;
  &lt;/a&gt;
  Learn more
&lt;/h2&gt;

&lt;p&gt;Refer to our &lt;a href="https://docs.echoar.xyz/unity/"&gt;documentation&lt;/a&gt; to learn more about how to use Unity and echo3D.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#support"&gt;
  &lt;/a&gt;
  Support
&lt;/h2&gt;

&lt;p&gt;Feel free to reach out at &lt;a href="mailto:support@echo3D.co"&gt;support@echo3D.co&lt;/a&gt; or join our &lt;a href="https://join.slack.com/t/echoar/shared_invite/enQtNTg4NjI5NjM3OTc1LWU1M2M2MTNlNTM3NGY1YTUxYmY3ZDNjNTc3YjA5M2QyNGZiOTgzMjVmZWZmZmFjNGJjYTcxZjhhNzk3YjNhNjE"&gt;support channel on Slack&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#more-screenshots"&gt;
  &lt;/a&gt;
  More Screenshots
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2nsV0MTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794441396/BluGkX0vd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2nsV0MTq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794441396/BluGkX0vd.png" alt="5.png" width="880" height="548"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y9zjltQE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794443544/agA017A5L.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y9zjltQE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794443544/agA017A5L.png" alt="6.png" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WAx4q71M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794447713/E8vUmnJC6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WAx4q71M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794447713/E8vUmnJC6.png" alt="7.png" width="880" height="493"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3FjE0ksS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794456998/J7__NpqbN.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3FjE0ksS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794456998/J7__NpqbN.png" alt="8.png" width="880" height="266"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pwia08cY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794464812/F2jxvAvN_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pwia08cY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794464812/F2jxvAvN_.png" alt="9.png" width="880" height="583"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources-and-reference"&gt;
  &lt;/a&gt;
  Resources and Reference
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;XR Rig Setup&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://youtu.be/u6Rlr2021vw"&gt;How To Make a VR Game in 2021 — New Input System and OpenXR Support by Valem&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://youtu.be/_Zrde_WTaiI"&gt;How to do Continuous Movement in Unity VR | OpenXR Locomotion Tutorial by Justin P Barnett — VR Game Dev&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developer.oculus.com/downloads/package/oculus-hand-models/"&gt;Oculus Hands Model 1.0 — Licensed under the Creative Commons Attribution 4.0, Copyright 2017 Oculus VR, LLC. All rights reserved&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://youtu.be/DxKWq7z4Xao"&gt;XR Hands set-up: How to ANIMATE Hands in VR — Unity XR Beginner Tutorial (New Input System) by Justin P Barnett — VR Game Dev&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Videos and Audios&lt;/strong&gt; [&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/aBfJtTm_XD4"&gt;Butterflies Flying in Slow Motion HD — Houston Butterfly Museum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/OW7J_3z1MOI"&gt;8 Most Beautiful Macaws on Planet Earth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/DpV4k3Edr-I"&gt;The Extreme Life Of A Sloth&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/YgYu-I7E3H4"&gt;Absolutely Incredible! Tiger runs through water to catch prey! (From Tiger: Lord of The Wild)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/8S9LLiBx91w"&gt;Wild Monkey eating banana , Cute Animals-MV 0034&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freesound.org/people/samuelburt/sounds/133125/"&gt;Happy Monkey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YekLRkiIW4Y"&gt;Tour Guide Text Nibbling Sound&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freesound.org/people/13FPanska_Machacova_Petra/sounds/377532/"&gt;Parrot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5zpg6rDH0qA"&gt;Tiger Growling&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Unity Assets&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/3d/environments/lowpolyforest-53156"&gt;Forest prefab: LowPolyForest — Standard Unity Asset Store EULA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/pa%5D(Link)%20ckages/3d/characters/distant-lands-free-characters-178123"&gt;Human prefab: Distant Lands Free Characters — Standard Unity Asset Store EULA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/3d/props/exterior/low-poly-fence-pack-61661"&gt;Fence prefab: Low Poly Fence Pack — Standard Unity Asset Store EULA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://assetstore.unity.com/packages/3d/vegetation/trees/free-trees-103208"&gt;Tree prefab: Free Trees — Standard Unity Asset Store EULA&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Developers&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lugawang.com/"&gt;Lujia Wang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://philippark0203.itch.io/"&gt;Philip Park&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jessica J Chen&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;echo3D (&lt;a href="http://www.echo3D.co"&gt;www.echo3D.co&lt;/a&gt;; Techstars 19’) is a cloud platform for 3D/AR/VR that provides tools and network infrastructure to help developers &amp;amp; companies quickly build and deploy 3D apps, games, and content.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--26lEsRZg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794759225/4dXHwgtgl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--26lEsRZg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638794759225/4dXHwgtgl.png" alt="10.png" width="700" height="350"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>virtualreality</category>
      <category>showdev</category>
      <category>tutorial</category>
      <category>unity3d</category>
    </item>
    <item>
      <title>Hosting a website on github page</title>
      <author>MD Taseen Khan</author>
      <pubDate>Mon, 06 Dec 2021 12:47:10 +0000</pubDate>
      <link>https://dev.to/mohammadtaseenkhan/hosting-a-website-on-github-page-563m</link>
      <guid>https://dev.to/mohammadtaseenkhan/hosting-a-website-on-github-page-563m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hostingawebsiteongithubpage"&gt;
  &lt;/a&gt;
  Hosting-a-website-on-github-page
&lt;/h2&gt;

&lt;p&gt;Now I am telling you how you host your page on GitHub &lt;/p&gt;

&lt;p&gt;Step 1&lt;/p&gt;

&lt;p&gt;Upload Your Necessary Files&lt;/p&gt;

&lt;p&gt;Step 2 &lt;/p&gt;

&lt;p&gt;Go to settings of the repository and scroll down &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CSPWF7mf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/85288261/136652834-2f893411-60d8-4115-b0d1-27b774b08150.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CSPWF7mf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/85288261/136652834-2f893411-60d8-4115-b0d1-27b774b08150.png" alt="image" width="704" height="118"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 3 &lt;/p&gt;

&lt;p&gt;Then Click on the picture shown down below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a6rHS1eZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/85288261/136652846-a3bd57fc-0ecd-4552-b565-697d511b9399.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a6rHS1eZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/85288261/136652846-a3bd57fc-0ecd-4552-b565-697d511b9399.png" alt="image" width="880" height="160"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Step 4 &lt;/p&gt;

&lt;p&gt;Then click on the branch and select Main &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TrcVvkVy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/85288261/136652873-ed004a0d-c7b3-4755-9a0e-4b78228e9de7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TrcVvkVy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/85288261/136652873-ed004a0d-c7b3-4755-9a0e-4b78228e9de7.png" alt="image" width="460" height="268"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After that you will see the link of the github hosted page like this shown down below&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IBB-LY5o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/85288261/136652913-9e234787-d571-40f1-9d86-fa7eb4c29fe0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IBB-LY5o--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/85288261/136652913-9e234787-d571-40f1-9d86-fa7eb4c29fe0.png" alt="image" width="880" height="172"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then wait for at least some minutes and then click the link&lt;/p&gt;

&lt;p&gt;There you GO !!!!!&lt;/p&gt;

&lt;p&gt;GOOD LUCK :)&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Time saving developer tools</title>
      <author>MD Taseen Khan</author>
      <pubDate>Mon, 06 Dec 2021 12:27:21 +0000</pubDate>
      <link>https://dev.to/mohammadtaseenkhan/time-saving-developer-tools-37li</link>
      <guid>https://dev.to/mohammadtaseenkhan/time-saving-developer-tools-37li</guid>
      <description>&lt;p&gt;Time saving developer tools&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://vscode.dev/"&gt;VS code online&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://css3generator.com/"&gt;CSS3 Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coolors.co/"&gt;coolors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://csstypeset.com/"&gt;CSS Type Set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.blobmaker.app/"&gt;blobmaker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://9elements.github.io/fancy-border-radius/"&gt;fancy border radius&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hype4.academy/tools/glassmorphism-generator"&gt;glassmorphism&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;p&gt;Follow to get more updates&lt;/p&gt;

</description>
      <category>developer</category>
      <category>time</category>
      <category>tools</category>
    </item>
    <item>
      <title>In pursuit of an even playing field</title>
      <author>Lee Englestone 💡🧠👨‍💻</author>
      <pubDate>Mon, 06 Dec 2021 12:22:42 +0000</pubDate>
      <link>https://dev.to/leeenglestone/in-pursuit-of-an-even-playing-field-3jcd</link>
      <guid>https://dev.to/leeenglestone/in-pursuit-of-an-even-playing-field-3jcd</guid>
      <description>&lt;p&gt;This post is overdue, and for that I apologise. The fact that I have been putting this off and not prioritising it, is perhaps in some small way indicative of the problem.&lt;/p&gt;

&lt;p&gt;Because there is a problem. Whether we want to admit it or discuss it is another matter.&lt;/p&gt;

&lt;p&gt;The problem is that women are not yet treated the same as men in tech. In fact, in many cases they are treated down right despicably and it is up to everyone, (especially men) to acknowledge this and address it.&lt;/p&gt;

&lt;p&gt;This post is in part dedicated to the work by Salma and &lt;a href="//unbreak.tech"&gt;unbreak.tech&lt;/a&gt; whose aim is to highlight and bring about change.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--c5sw6Syw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1354397337020473347/3wtvj84L_normal.jpg" alt="⚡️ Salma | whitep4nth3r profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        ⚡️ Salma | whitep4nth3r
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/whitep4nth3r"&gt;@whitep4nth3r&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      5 months ago I tweeted a call to action for men in tech who wanted to help advocate for and promote inclusivity and equality in tech.&lt;br&gt;&lt;br&gt;Then I launched &lt;a href="https://t.co/LeGrIeL3BD"&gt;unbreak.tech&lt;/a&gt;.&lt;br&gt;&lt;br&gt;I received 100+ DMs from men wanting to get involved.&lt;br&gt;&lt;br&gt;But I received only 21 contributions so far 👇🏼
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      07:57 AM - 19 Oct 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1450370452363296768" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1450370452363296768" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1450370452363296768" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;There are a number of things that we can do.. so I thought I would just list a few that I think are important (in no particular order).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Equal pay for women&lt;/li&gt;
&lt;li&gt;Gender bias awareness and training (especially in recruitment)&lt;/li&gt;
&lt;li&gt;Improve female speaker ratios at conferences&lt;/li&gt;
&lt;li&gt;Increase female attendance at tech conferences&lt;/li&gt;
&lt;li&gt;Don't assume women are less technical than male colleagues around them&lt;/li&gt;
&lt;li&gt;Don't assume women at tech conferences are non technical&lt;/li&gt;
&lt;li&gt;Don't explain things to women that they may already know&lt;/li&gt;
&lt;li&gt;Reduce female drop out of STEM subjects at early ages&lt;/li&gt;
&lt;li&gt;Support groups encouraging women in tech&lt;/li&gt;
&lt;li&gt;Support women in tech&lt;/li&gt;
&lt;li&gt;Speak up when we see something wrong&lt;/li&gt;
&lt;li&gt;Consider what we say and how we act can be interpreted i.e. "hi guys"&lt;/li&gt;
&lt;li&gt;Help women feel safe&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(I may update this list)&lt;/p&gt;

&lt;p&gt;But I'd really like to take the opportunity to highlight that the many female colleagues that I have had the honour of working with, have been/are absolutely amazing (you know who you are), and I dare say better (on average) than their male colleagues.&lt;/p&gt;

&lt;p&gt;I'd also like to challenge anyone of my male peers who's initial thoughts are "yeah but..". You need to get yourself to a place where you acknowledge that there is a problem.&lt;/p&gt;

&lt;p&gt;In my opinion, it is similar to white people having a problem with the "black lives matter" message and insisting on using a "black lives matter too" or "all lives matter" instead.. of course they do! but the original phrase is to help raise awareness of the particular problem and I can completely understand why variations on it detract from the original message/problem. &lt;a href="https://theconversation.com/why-is-it-so-offensive-to-say-all-lives-matter-153188"&gt;Source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For me the most important thing that men can do is admit there is a problem and after that, as I've listed, there are various ways to help to get towards a place where women are treated equally in tech. (I don't have all the answers before someone asks me how we get there).&lt;/p&gt;

&lt;p&gt;Slightly selfishly as I write this I realise that I am thinking about the world I want my 8yo daughter to live in and my 5yo son to be aware of and help towards creating. &lt;/p&gt;

&lt;p&gt;What kind of future do you want future generations to live in?&lt;/p&gt;

&lt;p&gt;-- Lee&lt;/p&gt;

&lt;p&gt;(Photo by Elena Mozhvilo, from Unsplash)&lt;/p&gt;

</description>
      <category>womenintech</category>
    </item>
  </channel>
</rss>
