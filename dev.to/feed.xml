<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Position Absolute and Relative  — The Simplest Guide</title>
      <author>Domagoj Vidovic</author>
      <pubDate>Mon, 25 Oct 2021 14:51:45 +0000</pubDate>
      <link>https://dev.to/domagojvidovic/position-absolute-and-relative-the-simplest-guide-5169</link>
      <guid>https://dev.to/domagojvidovic/position-absolute-and-relative-the-simplest-guide-5169</guid>
      <description>&lt;p&gt;I remember the time when I was starting my Frontend journey.&lt;/p&gt;

&lt;p&gt;CSS caused a lot of headaches. Like most people, I assumed that it's easy. Then, I was annoyed when I couldn't get it working.&lt;/p&gt;

&lt;p&gt;My usual flow was:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Detect a problem.&lt;/li&gt;
&lt;li&gt;Google it.&lt;/li&gt;
&lt;li&gt;Find a solution on StackOverflow.&lt;/li&gt;
&lt;li&gt;C/P it without any understanding.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Position absolute and relative were properties I often encountered. "What the heck are they?"&lt;/p&gt;

&lt;p&gt;They should be used far less often than you might use them, and when used properly, they are quite simple.&lt;/p&gt;

&lt;p&gt;Let's dive deeper into the topic.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-are-position-absolute-and-relative%C2%A0related"&gt;
  &lt;/a&gt;
  How Are Position Absolute and Relative Related?
&lt;/h2&gt;

&lt;p&gt;Usually, all elements follow the DOM flow. &lt;/p&gt;

&lt;p&gt;But sometimes, you need to break that flow and tell an element exactly where to go.&lt;/p&gt;

&lt;p&gt;Let's say that I have this HTML page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HsvrL-cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcwvzstgiyalh0bs3r76.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HsvrL-cd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcwvzstgiyalh0bs3r76.png" alt="HTML Page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code is quite simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bordered-container"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"absolute-item"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;body&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;align-items&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="m"&gt;90deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;153&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;253&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;103&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;rgb&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;88&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;255&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;228&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.bordered-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.absolute-item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I want to absolutely position my &lt;code&gt;absolute-item&lt;/code&gt; right now and tell it exactly where to be. I want it to be always inside the &lt;code&gt;bordered-container&lt;/code&gt;; &lt;code&gt;10px&lt;/code&gt; away from the bottom, and &lt;code&gt;30px&lt;/code&gt; from the right.&lt;/p&gt;

&lt;p&gt;Let's add the code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.absolute-item&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;30px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result is:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DjZw8JyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q8xx7nibv33eeavqaoji.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DjZw8JyK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/q8xx7nibv33eeavqaoji.png" alt="Position absolute"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's, obviously, not what we wanted. The square is positioned &lt;code&gt;10px&lt;/code&gt;/&lt;code&gt;30px&lt;/code&gt; away from the edge of a whole document, not the &lt;code&gt;bordered-container&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;That's why we need &lt;code&gt;position: relative;&lt;/code&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#its-not-black%C2%A0magic"&gt;
  &lt;/a&gt;
  It's Not Black Magic
&lt;/h2&gt;

&lt;p&gt;Whenever you set &lt;code&gt;position: absolute;&lt;/code&gt; to an element, it must be positioned &lt;strong&gt;relative&lt;/strong&gt; to something.&lt;/p&gt;

&lt;p&gt;Your absolute element will look for the closest parent with &lt;code&gt;position: relative;&lt;/code&gt;, and position itself relative to it.&lt;/p&gt;

&lt;p&gt;If there are no elements like that, it will be positioned relative to the &lt;code&gt;body&lt;/code&gt; element. This happened in our previous case.&lt;/p&gt;

&lt;p&gt;To fix this, we simply need to add &lt;code&gt;position: relative;&lt;/code&gt; to our &lt;code&gt;bordered-container&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.bordered-container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;300px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="no"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result is:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nDE_Od2_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ce14ftotzbqrn1y2hz5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDE_Od2_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9ce14ftotzbqrn1y2hz5.png" alt="Absolutely positioned item"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Yep, it's that simple.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-the-heck-is%C2%A0zindex"&gt;
  &lt;/a&gt;
  What The Heck Is Z-Index?
&lt;/h2&gt;

&lt;p&gt;When dealing with absolute positions, you might encounter on z-index, so it's worth mentioning.&lt;/p&gt;

&lt;p&gt;I'm sure that you've tried setting it to &lt;code&gt;9999&lt;/code&gt; but it still didn't work.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;z-index&lt;/code&gt; is used when you have multiple absolute position elements.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;absolute positioned&lt;/strong&gt; element with the biggest &lt;code&gt;z-index&lt;/code&gt; will go on the top. The one with the lowest, on the bottom. &lt;/p&gt;

&lt;p&gt;That's it.&lt;/p&gt;

&lt;p&gt;Let's keep it simple.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-downsides-of-position%C2%A0absolute"&gt;
  &lt;/a&gt;
  The Downsides Of Position Absolute
&lt;/h2&gt;

&lt;p&gt;Absolutely positioned elements break the DOM flow. &lt;/p&gt;

&lt;p&gt;They don't take any physical space on the document.&lt;/p&gt;

&lt;p&gt;That means that the elements above/below could overlap with, even if you don't want it.&lt;/p&gt;

&lt;p&gt;This can become tricky to maintain. &lt;/p&gt;

&lt;p&gt;Our elements should be isolated, if we change one of them, we don't want to adjust everything else.&lt;/p&gt;

&lt;p&gt;That doesn't mean &lt;code&gt;position: absolute;&lt;/code&gt; is bad! It means that it has its own use cases and you need to know about them.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#when-to-use%C2%A0it"&gt;
  &lt;/a&gt;
  When To Use It
&lt;/h2&gt;

&lt;p&gt;If you need to adjust the layout within a page or a component, you should avoid &lt;code&gt;position: absolute;&lt;/code&gt; in 99% of the cases. Opt-in for Flexbox or Grid instead.&lt;/p&gt;

&lt;p&gt;However, if you want to add a badge to your image, it's just perfect. You always want the badge to be on the top (or the edge) of the image, so that it seems like it's a part of an image.&lt;/p&gt;

&lt;p&gt;Or if you want to stack a few images/elements onto each other. There's no way other than &lt;code&gt;position: absolute;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And that's the ultimate guide: &lt;strong&gt;use absolute positioning only when there's no other way to achieve that&lt;/strong&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Absolute positioning is powerful, and the Web wouldn't be able to look this way without it.&lt;/p&gt;

&lt;p&gt;If used properly, it's a charm.&lt;/p&gt;

&lt;p&gt;But those use cases are quite rare. If you use it often, you will make your app a hell to maintain.&lt;/p&gt;

&lt;p&gt;If you find a StackOverflow answer with &lt;code&gt;position: absolute;&lt;/code&gt;, try to skip it. Keep looking. Is there any other way to do it?&lt;/p&gt;

&lt;p&gt;If so, avoid the &lt;code&gt;absolute&lt;/code&gt;.&lt;/p&gt;




&lt;p&gt;&lt;em&gt;&lt;a href="https://domagojvidovic.com/post/position-absolute-relative-the-simplest-guide"&gt;This post was originally published on Dom's personal blog. Check out dat new amazing blog design there ✨&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Page Object Pattern + Reusable Functions in Cypress</title>
      <author>ajdin.must</author>
      <pubDate>Mon, 25 Oct 2021 14:49:33 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/page-object-pattern-reusable-functions-in-cypress-35jj</link>
      <guid>https://dev.to/bornfightcompany/page-object-pattern-reusable-functions-in-cypress-35jj</guid>
      <description>&lt;h4&gt;
  &lt;a href="#if-you-have-ever-wished-to-have-more-structured-reusable-and-readable-automated-tests-you-should-have-started-with-the-page-object-pattern"&gt;
  &lt;/a&gt;
  If you have ever wished to have more structured, reusable, and readable automated tests, you should have started with the Page Object Pattern.
&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;&lt;br&gt;
&lt;b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/p&gt;
&lt;h5&gt;
  &lt;a href="#page-object-pattern"&gt;
  &lt;/a&gt;
  Page Object Pattern
&lt;/h5&gt;

&lt;p&gt;Page Object Pattern is basically removing all the page information from your actual test and grouping them together considering their location on your web page. For example, you can take all the selectors that you have on the homepage of your web and put them in one class, give them more meaningful names and then call them in any of your tests ...&lt;/p&gt;

&lt;p&gt;Imagine your homepage went through a design and development modification that impacted your selectors to change, you would need to go through all of your tests and change the same selector in all the places. However, with the page object pattern, you change the selector only in one place - in the class that you have created for the homepage selectors. There, you saved yourself a lot of time and made sure that there won't be some forgotten, unchanged, and obsolete selectors in one of your tests.&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#adding-more-of-reusability"&gt;
  &lt;/a&gt;
  Adding More of Reusability
&lt;/h4&gt;

&lt;p&gt;Nevertheless, you can make your tests even more structured, reusable, understandable, and easier to maintain, by adding custom commands and reusable functions to them. The same way I made a class for homepage selectors I also made a class for all the functions from the homepage, that are used all over the different tests. For example, if I had 5 different tests/test cases where a user fills out the same form, I wouldn't be needed to copy/paste Cypress code to every each of the tests but I'd reuse the already written functions.&lt;/p&gt;

&lt;p&gt;Example how my Cypress test would look like with the page object pattern and reusable functions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;describe("Fill out user satisfaction form", function () {

    it("Check if the user can fill out the form", function () {
        cy.visitFormsPage();
        cy.userAcceptsTerms();
        cy.userFillsOutsTheForm();
        cy.formFilledOutCorrectlyAssert();
    });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;b&gt;&lt;br&gt;
&lt;b&gt;&lt;/b&gt;&lt;/b&gt;&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#all-together-now"&gt;
  &lt;/a&gt;
  All together now
&lt;/h5&gt;

&lt;p&gt;Combining page object pattern and reusable functions gave me a whole new perspective of the tests. Not only are they easier to use and maintain, but they also look very neat and easier to understand for my other colleagues, even non-technical members of the team. In the beginning, you need to spend a bit more time on the setup but later on, you will see that the effort is paid off.&lt;/p&gt;

&lt;p&gt;Feel free to share with me some of your "reusability" secrets.&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>cypress</category>
      <category>testing</category>
      <category>testautomation</category>
    </item>
    <item>
      <title>11 Apps Ideas to Develop for Restaurants and Food Business 2021</title>
      <author>Price List</author>
      <pubDate>Mon, 25 Oct 2021 14:48:54 +0000</pubDate>
      <link>https://dev.to/pricelist/11-apps-ideas-to-develop-for-restaurants-and-food-business-2021-2mgk</link>
      <guid>https://dev.to/pricelist/11-apps-ideas-to-develop-for-restaurants-and-food-business-2021-2mgk</guid>
      <description>&lt;p&gt;The industry related with food businesses is a dynamic and highly consumable area that is always evolving. Food businesses do not lose their attractiveness as long as they continue to provide standard food to their clients and are able to contact the appropriate clientele.&lt;/p&gt;

&lt;p&gt;When it comes to starting a food company startup, having a solid app concept that can keep up with current technological advancements and industry trends may be quite beneficial in keeping a healthy balance between demand and supply.&lt;/p&gt;

&lt;p&gt;A food company can never lose its appeal as long as it continues to give high-quality foods to its consumers and is able to reach the appropriate audience.&lt;/p&gt;

&lt;p&gt;A unique company idea that can adapt to the current technical advancements and market trends may play a significant part in balancing the demand and supply in the food industry when it comes to launching a food business startup.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Pizza Delivery App Idea&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We all know that pizza is the most popular and mouth-watering cuisine on the planet. Typically, a pizza business will utilize this kind of application. Thus, without physically visiting the restaurant, customers may choose their favorite pizza, place an order, and pay for their purchase using a variety of payment ways.&lt;/p&gt;

&lt;p&gt;Restaurant operators may attract more clients by providing them with this kind of ordering app to use while eating in their establishment. Why? Customers are more comfortable purchasing pizza using an app since their favorite pizza is delivered to their doorway, and it is more dependable to purchase pizza through an app.&lt;/p&gt;

&lt;p&gt;The following choices are available if you have a food ordering app (such as a pizza ordering app) for delivery service: If you do not have the necessary resources, you may outsource this function to a third party.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Fast Food Delivery App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Statista estimates that the typical individual goes to the grocery store 1.6 times per week and spends about 60 hours buying food each year, according to the research.&lt;/p&gt;

&lt;p&gt;You may create a grocery shopping and delivery app that enables users to search for groceries delivery providers in their immediate vicinity. This may be accomplished with the use of technology such as RTLS (Real-Time Locating Systems), and they can get delivery at their doorstep.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Food Coupon &amp;amp; Deals Offering App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is a well-known truth that customers usually look for discounts and &lt;a href="https://jobsintanzania.org/mcdonalds-menu-prices-in-canada/"&gt;specials menu prices&lt;/a&gt; before placing an order or booking a seat at a restaurant. In light of the above, you may develop Deals &amp;amp; Discount applications for your restaurant or for other businesses to use.&lt;/p&gt;

&lt;p&gt;In order to maintain and attract new consumers, you or your affiliated restaurants may offer current specials on food and their festive specialties on your website. The software assists you in identifying your most loyal clients and rewarding them in a way that encourages them to continue to return.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Catering Booking Services App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another really viable food business app ideas is the development of a catering booking services app. If you currently own a catering company, you may use it to supplement your income. Alternatively, you may create a catering services marketplace application. Let's take a look at each of these possibilities.&lt;/p&gt;

&lt;p&gt;Consider the following scenario: you already operate a catering firm. Now, your clients may or may not be local citizens, depending on their location. If you don't have a mobile app, you'll miss out on consumers who can't come to your location but want to learn more about the numerous sorts of services you provide. Because of this, it is critical that you develop a mobile application for your catering booking services.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. An App For Table Reservations&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Who would want to lose one of their most valuable consumers during the weekend rush? There is no one. Right? The table reservation app concept is the finest one for your business since it can operate smoothly and cater to each and every customer in a professional manner. In comparison to your competition, this mobile app concept for your restaurant company would show your food ordering services in a composed and professional manner.&lt;/p&gt;

&lt;p&gt;Allocate time slots, table locations, dates, and preferred food orders for your users so that your service wins the time game and the consumer is happy with the luxurious care they get at your restaurant. The most advantageous aspect of designing a mobile application is that it streamlines numerous monotonous duties, allowing you as the company owner to explore additional business development opportunities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Food Donation App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This mobile app concept has the potential to function in two ways.&lt;/p&gt;

&lt;p&gt;The lack of storage space and utilization options at restaurants causes them to deal with leftover food on a daily basis, which must be thrown away eventually. With the use of a food donation app, restaurants may broadcast their inventory of leftovers on a daily basis and encourage NGOs and other similar groups to claim the food for the needy.&lt;/p&gt;

&lt;p&gt;That is one method of developing a food donation application. The other is to develop an app that allows users to schedule or purchase food for others while also encouraging them to pass the gift around.&lt;/p&gt;

&lt;p&gt;For example, anybody may use your app to purchase a cup of coffee and then purchase another with the direction that it be handed to a homeless person. Customers are served in an ethical manner, and less fortunate individuals are helped in the process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Baby Food Suggestions App Idea&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This kind of application is mostly utilized for newborns between the ages of 5 and 4 months and up to 2 years. It is possible for a restaurant to use this kind of app concept in order to increase the number of visits to their restaurant website or mobile app.&lt;/p&gt;

&lt;p&gt;Because this app offers the whole meal plan for a newborn, it may assist new parents in determining the correct meal for their child based on their child's age at the time of delivery. This app also provides various medicines for newborns, each with a detailed explanation on how to use them.&lt;/p&gt;

&lt;p&gt;In the event that you are the owner of a baby food business, this app will greatly assist you in increasing your profits by contacting more clients via an app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. Food And Nutrition App For Gym Enthusiasts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fitness aficionados may use food and nutrition apps to keep track of their meals, as well as diet plans for both losing and gaining weight. If you own a food court catering to gym goers, this diet and nutrition app concept can help you expand your company and sales by reaching out to customers via an online meal ordering application.&lt;/p&gt;

&lt;p&gt;Consumers find it easier to use this sort of software since it provides them with food that corresponds to their diet plan, as well as a diet chart. This sort of software is divided into separate segments based on the needs of users, such as carbohydrate food, protein food, and so on. Furthermore, restaurants may utilize this app to increase the number of people that visit their establishment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. Experimental Cooking App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A large number of customers request the chef's special or bring in an order that is a unique twist on their favorite dish. With the help of an experimental cookery application, you may avoid disappointing such guests while still leaving yourself enough time to produce what they need.&lt;/p&gt;

&lt;p&gt;This mobile app concept for restaurants has the potential to be very successful.&lt;/p&gt;

&lt;p&gt;Allow them to choose their favorite cuisines, preferred ingredients, and preferred cooking techniques ahead of time using the app on their smartphones. You may even set up a delivery service for such things if you so choose.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. Digital Menu App&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Restaurants often utilize this sort of app to replace conventional menu cards and to display an online &lt;a href="https://jobsintanzania.org/mcdonalds-menu-prices-in-canada/"&gt;food menu and price list&lt;/a&gt;on a smart screen, complete with photographs and price information for customers.&lt;/p&gt;

&lt;p&gt;One of the most useful benefits of an Electronic Menu app is that it not only allows a restaurant to update its menu at any time, but it also improves the whole dine-out experience.&lt;/p&gt;

&lt;p&gt;As a result, customers get the whole menu on their screen, similar to a restaurant ordering app, and may choose the food item they want before placing their order.&lt;/p&gt;

&lt;p&gt;They may look at the photographs and descriptions of food items on the e-menu to have a better knowledge of the meal selection. In a nutshell, this app makes the meal ordering process more efficient and convenient.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;11. Food Reviews And Rating Ap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When a food ordering app is used, this sort of function is included since it assists your customers in selecting high-rated cuisine while also allowing owners to determine which service portions need work.&lt;/p&gt;

&lt;p&gt;Restaurants that provide marketplace food ordering and delivery services may benefit from this sort of feature since it allows them to obtain customer feedback on the service and food quality they provide.&lt;/p&gt;

&lt;p&gt;It is in the best interests of restaurant owners to keep their restaurants' reputations intact, and you should constantly solicit comments and reviews from customers about your services.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Loopple - Product Hunt Launch</title>
      <author>rarestoma</author>
      <pubDate>Mon, 25 Oct 2021 14:43:57 +0000</pubDate>
      <link>https://dev.to/rarestoma/loopple-product-hunt-launch-5eae</link>
      <guid>https://dev.to/rarestoma/loopple-product-hunt-launch-5eae</guid>
      <description>&lt;p&gt;Hi Coders,&lt;/p&gt;

&lt;p&gt;It’s been about 9 months since I started working on &lt;a href="https://www.loopple.com/"&gt;Loopple&lt;/a&gt;. During this time, a lot of changes have been made and I worked hard on offering the best possible dashboard builder experience.&lt;/p&gt;

&lt;p&gt;Loopple is a dashboard builder that helps developers to create beautiful admin panels in minutes. The editor will help you speed up the development process and will provide you with an easier way to prototype your dashboards layouts.&lt;/p&gt;

&lt;p&gt;Today I launched Loopple on Product Hunt and I am more than happy that is featured and #1.&lt;/p&gt;

&lt;p&gt;Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loopple on Product Hunt: &lt;a href="https://www.producthunt.com/posts/loopple"&gt;https://www.producthunt.com/posts/loopple&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Loopple Website: &lt;a href="https://www.loopple.com/"&gt;https://www.loopple.com/&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>product</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>⚰️C# in 2022 — Will it die?</title>
      <author>Dotnetsafer</author>
      <pubDate>Mon, 25 Oct 2021 14:23:58 +0000</pubDate>
      <link>https://dev.to/dotnetsafer/c-in-2022-will-it-die-5501</link>
      <guid>https://dev.to/dotnetsafer/c-in-2022-will-it-die-5501</guid>
      <description>&lt;p&gt;👉 &lt;strong&gt;C# is a dead programming language&lt;/strong&gt;&lt;br&gt;
👉 &lt;strong&gt;C# is useless&lt;/strong&gt;&lt;br&gt;
👉 &lt;strong&gt;C# is a poor programming language&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You’ve obviously heard about it, which is what brought you to this article. I’ll reveal the full truth, and you’ll decide if &lt;strong&gt;C#&lt;/strong&gt; programming should be pursued.&lt;/p&gt;

&lt;p&gt;Before we begin, there is a lot of uncertainty regarding C#, particularly among young professionals or developers attempting to get into the sector; when they hear &lt;strong&gt;C#&lt;/strong&gt;, they may mix it with &lt;strong&gt;C&lt;/strong&gt; or *&lt;em&gt;C++&lt;/em&gt;+ and think…&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;“What is that?”&lt;/strong&gt; 🤔&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So now I’d want to explain things up.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-is-c"&gt;
  &lt;/a&gt;
  🤔 What is C#?
&lt;/h2&gt;

&lt;p&gt;The first thing you should know is that &lt;strong&gt;C# is a Microsoft object-oriented programming language&lt;/strong&gt;. It developed from the necessity for a robust object-oriented language that would allow the building of more complex programs, something the previous &lt;strong&gt;Visual Basic .NET&lt;/strong&gt; could no longer do.&lt;/p&gt;

&lt;p&gt;C# is a programming language that was &lt;strong&gt;released in 2002&lt;/strong&gt; and is implemented in different of applications, including &lt;strong&gt;web development&lt;/strong&gt;, &lt;strong&gt;desktop applications&lt;/strong&gt;, and all phases of scripting languages. So it’s not extremely old; compare it to PHP, Java, JavaScript and Python, which are all considerably &lt;strong&gt;older languages.&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#a-bit-of-history"&gt;
  &lt;/a&gt;
  📚A bit of history
&lt;/h2&gt;

&lt;p&gt;At the time when C# emerged, &lt;strong&gt;the reigning language was Java&lt;/strong&gt;, so Microsoft decided to make a &lt;strong&gt;language very similar to Java&lt;/strong&gt;, but based on C++ and Visual Basic .NET. In fact and C# emerged from this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We had &lt;strong&gt;C++&lt;/strong&gt;, plus &lt;strong&gt;++&lt;/strong&gt;, the asterisk was formed and there we have &lt;strong&gt;C#&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UwW96bV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjgxjxa6ddlputyw0efk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UwW96bV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjgxjxa6ddlputyw0efk.png" alt="C++++ = C#"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This doesn’t mean that C# is not mature, it just means that it &lt;strong&gt;is a young language&lt;/strong&gt; compared to the other languages out there, and that it is much better than you probably think, so C# is not dying because it is built and maintained by Microsoft.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-can-we-create-using-c"&gt;
  &lt;/a&gt;
  🔧 What can we create using C#?
&lt;/h2&gt;

&lt;p&gt;C# is a general-purpose language that can be used to create &lt;strong&gt;Full Stack web development.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%F0%9F%96%A5desktop-applications"&gt;
  &lt;/a&gt;
  🖥Desktop applications
&lt;/h3&gt;

&lt;p&gt;C# is also used to create desktop programs for both &lt;strong&gt;Windows&lt;/strong&gt; and &lt;strong&gt;Mac OS&lt;/strong&gt;. Additionally, you may create Web apss in C#.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#webbased-apps"&gt;
  &lt;/a&gt;
  💻 Web-based apps
&lt;/h3&gt;

&lt;p&gt;Initially, they were built with &lt;strong&gt;Web.Forms&lt;/strong&gt;, then &lt;strong&gt;MVC&lt;/strong&gt;, and finally &lt;strong&gt;.NET CORE&lt;/strong&gt; (soon we will have .NET 6). However, it was not limited to web development. C# was also utilized to create mobile applications.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mobile-applications"&gt;
  &lt;/a&gt;
  📱 Mobile applications
&lt;/h3&gt;

&lt;p&gt;In an unsuccessful attempt, Microsoft created the &lt;em&gt;“now-defunct”&lt;/em&gt; &lt;strong&gt;Windows Phone&lt;/strong&gt; operating system (which so requires C# for its Backend), and with the launch of Windows 10 and now Windows 11, apps for this operating system are produced with C# (and obviously represents a whole progression of Windows Forms).&lt;/p&gt;

&lt;p&gt;But it doesn’t end there since there’s also &lt;strong&gt;Xamarin Forms&lt;/strong&gt;. This enables the development of cross-platform mobile apps, that is, applications that operate on the Android, iOS, and Windows operating systems.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#games"&gt;
  &lt;/a&gt;
  🎮 Games
&lt;/h3&gt;

&lt;p&gt;If you want to create video games, you may do it using &lt;strong&gt;Unity&lt;/strong&gt; as well. I’m not sure whether you were familiar, but the Unity game engine &lt;strong&gt;is written in C#&lt;/strong&gt; and is now one of the most popular game engines (if not the most).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--o5L-jS9G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imhx7pf668jpbcd12vee.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o5L-jS9G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/imhx7pf668jpbcd12vee.jpeg" alt="Most used game engines in 2021 (statista.com)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Additionally, video games allow you to construct augmented reality applications, which are programs that allow you to make &lt;strong&gt;virtual reality&lt;/strong&gt; holograms appear using a helmet such as the &lt;strong&gt;OculusRift&lt;/strong&gt; and interact with 3D virtual surroundings. C# may be used to do this within Unity.&lt;/p&gt;

&lt;p&gt;If you’re interested in Virtual Reality, Microsoft makes it simple with the &lt;strong&gt;HoloLens&lt;/strong&gt;, which is, in my view, one of the most advanced devices on the market today.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CNQqigQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/573rp8pqlxtf2399tsp4.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CNQqigQM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/573rp8pqlxtf2399tsp4.gif" alt="Microsoft Hololens"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ai-applications"&gt;
  &lt;/a&gt;
  🧠 AI Applications
&lt;/h3&gt;

&lt;p&gt;We can build &lt;strong&gt;artificial intelligence&lt;/strong&gt; services that link to our apps utilizing the C# language thanks to &lt;strong&gt;Azure’s cloud services.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#iot"&gt;
  &lt;/a&gt;
  🏠 IOT
&lt;/h3&gt;

&lt;p&gt;And, of course, there are cloud services, as well as &lt;strong&gt;IoT&lt;/strong&gt;. Using an &lt;strong&gt;Arduino&lt;/strong&gt; or a &lt;strong&gt;Raspberry Pi&lt;/strong&gt;, you can easily write in C#, connect sensors, and combine electronic and programming components using the same C# language. This has extremely sophisticated applications, such as the issue of &lt;strong&gt;home automation&lt;/strong&gt; and &lt;strong&gt;smart houses.&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#integrations"&gt;
  &lt;/a&gt;
  🔀 Integrations
&lt;/h3&gt;

&lt;p&gt;C# also allows you to conduct integrations (such as &lt;strong&gt;web services&lt;/strong&gt; or &lt;strong&gt;web api&lt;/strong&gt;) and develop interconnected services or microservices.&lt;br&gt;
When some individuals say they can achieve it using &lt;strong&gt;Ruby&lt;/strong&gt; or &lt;strong&gt;PHP&lt;/strong&gt;, the answer is yes, but my question is…&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt; 🤔&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you can cover all of those things with C#, it becomes extremely valuable and marketable throughout the world.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#is-c-dying"&gt;
  &lt;/a&gt;
  💀 Is C# dying?
&lt;/h2&gt;

&lt;p&gt;No.&lt;/p&gt;

&lt;p&gt;Microsoft has invested substantially in ensuring that C# is the dominant language today, spending &lt;strong&gt;two billion dollars&lt;/strong&gt; on marketing and attempting to convince developers to embrace this new platform, which is also based on the.NET foundation.&lt;/p&gt;

&lt;p&gt;The .NET framework is &lt;strong&gt;incredibly popular&lt;/strong&gt; among many developers; if you looked right now and said C# is dead, there would be no &lt;a href="https://www.indeed.com/jobs?q=c%23&amp;amp;l=United%20States"&gt;88.000 C# employment in the United States.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n2L9hNnE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngny14f8lglsswct84yh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n2L9hNnE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ngny14f8lglsswct84yh.png" alt="Search for C# job offers in United States on indeed.com"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;C# provides you with a large number of career chances, and the more openings there are, the more options you have to exhibit your talents and acquire your first job as a Software developer.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#is-c-worth-learning-in-2022"&gt;
  &lt;/a&gt;
  ✅ Is C# worth learning in 2022?
&lt;/h2&gt;

&lt;p&gt;C# is being integrated into every platform, including desktop, online, future technologies, gaming, and services. So, absolutely, you should study C# right now since it will offer you the best chance of getting in and will keep you employed as you advance in your career.&lt;/p&gt;

&lt;p&gt;You can see that C# is completely everywhere right now. Anyone who claims that it is no longer helpful is totally incorrect. In fact, learning C# is the finest choice you have right now, while you are reading this post.&lt;/p&gt;

&lt;p&gt;So, if you’re wondering if C# is dying, don’t worry; it’s really expanding at an exponential pace.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#how-much-time-it-took-to-learn-c"&gt;
  &lt;/a&gt;
  ⌛ How Much Time It Took to Learn C#?
&lt;/h2&gt;

&lt;p&gt;If you dedicate an &lt;strong&gt;hour&lt;/strong&gt; or so &lt;strong&gt;every day&lt;/strong&gt; to learning, it will take you around &lt;strong&gt;two to three months&lt;/strong&gt; to understand the fundamentals of C#. If you study part-time or full-time, you may &lt;strong&gt;learn C# faster.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;But don’t be misled by this figure. If you want to be a &lt;strong&gt;professional C# developer&lt;/strong&gt;, you’ll need to devote a lot &lt;strong&gt;more time&lt;/strong&gt; learning the language. A solid mastery of C# that will go you far in a professional context usually takes at least a year.&lt;/p&gt;

&lt;p&gt;Your educational path &lt;strong&gt;will never end&lt;/strong&gt;. You will always be able to learn something new. However, in a few months, you should be able to construct some sophisticated apps on your own.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  🟢 Conclusion
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;C# is a programming language that is worth learning&lt;/strong&gt;. If you know the basics, then the skills that you learn will be applicable to a wide variety of platforms and can be used to create anything.&lt;/p&gt;

&lt;p&gt;You can use it as a &lt;strong&gt;Full Stack language&lt;/strong&gt; and programming in C# will be the &lt;strong&gt;best decision&lt;/strong&gt;. In &lt;strong&gt;2022&lt;/strong&gt;, It will be a widely used language and is widely recognized among other programming languages such as &lt;strong&gt;Java and Python.&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>csharp</category>
      <category>dotnet</category>
      <category>programming</category>
      <category>netcore</category>
    </item>
    <item>
      <title>The Future of Frameworks</title>
      <author>Cory LaViska</author>
      <pubDate>Mon, 25 Oct 2021 14:12:01 +0000</pubDate>
      <link>https://dev.to/claviska/the-future-of-frameworks-1nla</link>
      <guid>https://dev.to/claviska/the-future-of-frameworks-1nla</guid>
      <description>&lt;p&gt;Love them or hate them, web components ("custom elements") are making a huge dent in the world of front-end development. As of today, &lt;a href="https://twitter.com/claviska/status/1452621707576029194"&gt;close to 18% of page views in Chrome&lt;/a&gt; are registering web components. That's an insane amount of usage!&lt;/p&gt;

&lt;p&gt;The benefits of a framework-agnostic component model are becoming obvious to web developers, particularly those who have built the same components over and over again to accommodate various framework flavors. That kind of rework is a time sink that inevitably leads to visual and functional inconsistencies. Maintaining multiple versions of the same component isn't a winning strategy for developers, designers, or end users.&lt;/p&gt;

&lt;p&gt;Web components solve this problem not by replacing frameworks, but by &lt;em&gt;complementing&lt;/em&gt; them with a &lt;a href="https://github.com/WICG/webcomponents#readme"&gt;standardized component model&lt;/a&gt;. Create your lower-level building blocks as custom elements, then plug them into a framework that handles higher-level operations. When it's time to upgrade or switch frameworks, you can do it more easily because you don't have to rip out the foundation and rebuild everything from scratch. Interoperability is why web component-based design systems are so appealing to large organizations.&lt;/p&gt;

&lt;p&gt;My prediction is that front-end frameworks will move away from proprietary component models and embrace custom elements as first-class citizens. Both &lt;a href="https://v3.vuejs.org/guide/web-components.html#building-custom-elements-with-vue"&gt;Vue&lt;/a&gt; and &lt;a href="https://svelte.dev/docs#Custom_element_API"&gt;Svelte&lt;/a&gt; provide mechanisms for authoring them — although they still use and support their own component models as well.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;"But I don't plan on switching frameworks!"&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Unlike diamonds, frameworks aren't forever.* They come and go and, as their popularity fades, so does support, contributions, and community interest. Contrast this to web standards that browsers commit to supporting without breaking changes.&lt;/p&gt;

&lt;p&gt;We've been building and rebuilding buttons for years because the component model has been baked into our frameworks. We don't need to do that anymore. If longevity is a goal, custom elements are where it's at.&lt;/p&gt;




&lt;p&gt;&lt;small&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;*Whether you consider React a framework or a library is irrelevant. It has its own &lt;a href="https://reactjs.org/docs/react-component.html"&gt;component model&lt;/a&gt;, &lt;a href="https://reactjs.org/docs/faq-internals.html"&gt;VDOM&lt;/a&gt;, and &lt;a href="https://reactjs.org/docs/events.html"&gt;synthetic event system&lt;/a&gt;. If it walks like a framework and talks like a framework…&lt;/p&gt;






&lt;p&gt;This post originally appeared on &lt;a href="https://www.abeautifulsite.net/posts/the-future-of-frameworks/"&gt;the author's blog&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webcomponents</category>
      <category>javascript</category>
      <category>designsystems</category>
    </item>
    <item>
      <title>Amazon CloudWatch Logs Insights Query Snippets as Code</title>
      <author>Wojciech Matuszewski</author>
      <pubDate>Mon, 25 Oct 2021 14:03:02 +0000</pubDate>
      <link>https://dev.to/aws-builders/aws-cloudwatch-logs-insights-query-snippets-as-code-1l60</link>
      <guid>https://dev.to/aws-builders/aws-cloudwatch-logs-insights-query-snippets-as-code-1l60</guid>
      <description>&lt;p&gt;&lt;a href="https://aws.amazon.com/cloudwatch/"&gt;&lt;em&gt;Amazon CloudWatch&lt;/em&gt;&lt;/a&gt; is a suite of observability-related products. From log filtering to alerting, the service can do it all!&lt;/p&gt;

&lt;p&gt;In this blog post, I would like us to focus on a feature of the &lt;a href="https://aws.amazon.com/blogs/aws/new-amazon-cloudwatch-logs-insights-fast-interactive-log-analytics/"&gt;&lt;em&gt;Amazon CloudWatch Logs Insights&lt;/em&gt;&lt;/a&gt; that I feel is deeply underutilized - the &lt;strong&gt;predefined queries&lt;/strong&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This blog post assumes the reader is familiar with &lt;a href="https://aws.amazon.com/cloudformation/"&gt;&lt;em&gt;AWS CloudFormation&lt;/em&gt;&lt;/a&gt;. The code presented is written using &lt;a href="https://aws.amazon.com/cdk/"&gt;&lt;em&gt;AWS CDK&lt;/em&gt;&lt;/a&gt;. If you are not familiar with it, fear not! In the &lt;a href="https://github.com/WojciechMatuszewski/cw-insights-prepopulated-queries"&gt;example architecture GitHub repository&lt;/a&gt;, you can find the same architecture deployed using &lt;a href="https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html"&gt;&lt;em&gt;AWS SAM&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#amazon-cloudwatch-logs-insights-refresher"&gt;
  &lt;/a&gt;
  Amazon CloudWatch Logs Insights refresher
&lt;/h2&gt;

&lt;p&gt;Living under the &lt;em&gt;Amazon CloudWatch&lt;/em&gt; umbrella, the &lt;em&gt;Amazon CloudWatch Logs Insights&lt;/em&gt; allow you to query logs of your application using a &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/CWL_QuerySyntax.html"&gt;declarative query language&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--B5oVPUZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/37s2ji2vad9nyfzp3i4p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--B5oVPUZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/37s2ji2vad9nyfzp3i4p.png" alt="Amazon CloudWatch Logs Insights console"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If your understanding of the query language is deep enough, you will be able to create elaborate diagrams or even business metrics using this service.&lt;/p&gt;

&lt;p&gt;The thing to remember here is that, &lt;strong&gt;in my opinion&lt;/strong&gt;, the &lt;em&gt;AWS CloudWatch Logs Insights&lt;/em&gt; service is essential in the context of day-to-day development on AWS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h2&gt;

&lt;p&gt;Given my passion for everything AWS (and serverless), I find myself interacting with the &lt;em&gt;Amazon CloudWatch Logs Insights&lt;/em&gt; quite frequently.&lt;/p&gt;

&lt;p&gt;During my time spent with the service, I discovered the "Queries" tab in the service console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fsisvcZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fec7jjtvev75e3z8xqnm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fsisvcZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fec7jjtvev75e3z8xqnm.png" alt='Amazon CloudWatch Logs Insights "Queries" tab'&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The "Queries" tab contains various predefined queries one might use to filter through application logs. What I think some people do not realize is that &lt;strong&gt;it is possible to save custom queries&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Imagine being woken up in the middle of the night by &lt;a href="https://www.pagerduty.com/"&gt;&lt;em&gt;PagerDuty&lt;/em&gt;&lt;/a&gt;. You login into the AWS console, search for &lt;em&gt;CloudWatch Logs Insights&lt;/em&gt;, and, using the predefined query, dig into application logs within seconds. All of this without having to remember the query language.&lt;/p&gt;

&lt;p&gt;Sounds fantastic, right? I think so as well. Sadly, this reality is often not possible because &lt;strong&gt;in my experience, most people underutilize the "save query" feature&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HZ0OJGcN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bbgjkjhuxebqunab98z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HZ0OJGcN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8bbgjkjhuxebqunab98z.png" alt="Amazon CloudWatch Logs Insights predefined queries"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maybe it is a problem of adoption – perhaps teams are using different tools for searching their application logs. I'm not sure.&lt;/p&gt;

&lt;p&gt;Suppose your team uses &lt;em&gt;Amazon CloudWatch Logs Insights&lt;/em&gt; for log filtering. In that case, I believe that having a predefined set of queries tailored to your application ready to go will make every developer's life easier.&lt;/p&gt;

&lt;p&gt;Let us explore how one might &lt;strong&gt;create predefined queries using (AWS CDK)&lt;/strong&gt;. This method works great if your infrastructure is defined using code already (if it is not the case, please consider doing so).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#queries-as-code"&gt;
  &lt;/a&gt;
  Queries as Code
&lt;/h2&gt;

&lt;p&gt;Since, to my best knowledge, there is no "predefined Amazon CloudWatch Logs Insights query" &lt;em&gt;AWS CloudFormation&lt;/em&gt; resource available, we have to turn our attention to either &lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-custom-resources.html"&gt;&lt;em&gt;AWS CloudFormation custom resources&lt;/em&gt;&lt;/a&gt; or &lt;a href="https://aws.amazon.com/blogs/mt/introducing-aws-cloudformation-modules/"&gt;&lt;em&gt;AWS CloudFormation modules&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I'm going to use &lt;em&gt;AWS CloudFormation custom resources&lt;/em&gt; since they work well with &lt;em&gt;AWS CDK&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;strong&gt;first step&lt;/strong&gt; is to identify the API call responsible for creating, updating, and deleting the query. After a bit of googling, I was able to pinpoint the operations I need to get myself familiar with – &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutQueryDefinition.html"&gt;&lt;em&gt;PutQueryDefinition&lt;/em&gt;&lt;/a&gt; and the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DeleteQueryDefinition.html"&gt;&lt;em&gt;DeleteQueryDefinition&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;second step&lt;/strong&gt; is to create a &lt;em&gt;custom AWS CloudFormation resource&lt;/em&gt; that uses those APIs. Luckily for us &lt;em&gt;AWS CDK&lt;/em&gt; exposes great abstractions that will help us greatly in this department – enter the &lt;a href="https://docs.aws.amazon.com/cdk/api/latest/docs/custom-resources-readme.html"&gt;&lt;em&gt;custom-resource&lt;/em&gt; package&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following is a modified excerpt from the code found in the &lt;a href="https://github.com/WojciechMatuszewski/cw-insights-prepopulated-queries"&gt;example architecture GitHub repository&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-cdk/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;customResources&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-cdk/custom-resources&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;iam&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@aws-cdk/aws-iam&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;YourStackName&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Stack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Construct&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;StackProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="c1"&gt;// This is the name that will be visible in the AWS CloudWatch Logs Insights "Queries" tab.&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;queryName&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;EXAMPLE_QUERY_NAME&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// Remember to format the query for readability purposes!&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;byAPIGWRequestIdQuery&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`fields @timestamp, @logStream, @message
    | sort @timestamp desc
    | filter @requestId = "PASTE_REQUEST_ID_HERE"`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;customResources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AwsCustomResource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;insightsQuery&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;policy&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;customResources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;AwsCustomResourcePolicy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromStatements&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;iam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PolicyStatement&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
          &lt;span class="na"&gt;effect&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;iam&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Effect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ALLOW&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logs:PutQueryDefinition&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logs:DeleteQueryDefinition&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="na"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;`arn:aws:logs:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Aws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;REGION&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;cdk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Aws&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ACCOUNT_ID&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;:*`&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
      &lt;span class="p"&gt;]),&lt;/span&gt;
      &lt;span class="na"&gt;onCreate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;putQueryDefinition&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CloudWatchLogs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;queryName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;queryString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;byAPIGWRequestIdQuery&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;physicalResourceId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="nx"&gt;customResources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PhysicalResourceId&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;queryDefinitionId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;onUpdate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;putQueryDefinition&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CloudWatchLogs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;queryName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;queryString&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;byAPIGWRequestIdQuery&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="na"&gt;queryDefinitionId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;customResources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PhysicalResourceIdReference&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;physicalResourceId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
          &lt;span class="nx"&gt;customResources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PhysicalResourceId&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fromResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;queryDefinitionId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;onDelete&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deleteQueryDefinition&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;service&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;CloudWatchLogs&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="na"&gt;queryDefinitionId&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;customResources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;PhysicalResourceIdReference&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That might seem like a lot of code, but in reality, we repeat many things in-between the &lt;code&gt;onCreate&lt;/code&gt;, &lt;code&gt;onUpdate&lt;/code&gt;, and &lt;code&gt;onDelete&lt;/code&gt; calls.&lt;/p&gt;

&lt;p&gt;After deployment, open the &lt;em&gt;AWS CloudWatch Logs Insights&lt;/em&gt; console and navigate to the "Queries" tab. The newly defined query will be visible there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b876bblD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lo30hq43nnn9atayec21.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b876bblD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lo30hq43nnn9atayec21.png" alt="Example predefined CloudWatch Logs Insights Query"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Looking at the code, I think the &lt;strong&gt;most crucial part is the &lt;a href="https://aws.amazon.com/iam/"&gt;&lt;em&gt;IAM&lt;/em&gt;&lt;/a&gt; policy definition&lt;/strong&gt;. Please &lt;strong&gt;remember to always scope &lt;em&gt;IAM&lt;/em&gt; policies down as much as possible&lt;/strong&gt;. If you find more granular &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"&gt;&lt;em&gt;resources ARN&lt;/em&gt;&lt;/a&gt;, I could use here, please let me know!&lt;/p&gt;

&lt;p&gt;As for the &lt;code&gt;customResource&lt;/code&gt; class itself, please consult the &lt;a href="https://docs.aws.amazon.com/cdk/api/latest/docs/custom-resources-readme.html"&gt;&lt;em&gt;custom-resource module documentation&lt;/em&gt;&lt;/a&gt; – it is excellent!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-words"&gt;
  &lt;/a&gt;
  Closing words
&lt;/h2&gt;

&lt;p&gt;There you have it – how to create &lt;em&gt;AWS CloudWatch Logs Insights&lt;/em&gt; queries and incorporate that flow into your &lt;a href="https://en.wikipedia.org/wiki/Infrastructure_as_code"&gt;&lt;em&gt;IaC&lt;/em&gt;&lt;/a&gt; pipeline.&lt;/p&gt;

&lt;p&gt;I would argue that the effort required to create those queries is relatively low, but the potential gains from having them available are relatively high. I hope that you or your team find some value in this blog post.&lt;/p&gt;

&lt;p&gt;Thank you for your time.&lt;/p&gt;




&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Source code that this blog post was based on can be found &lt;a href="https://github.com/WojciechMatuszewski/cw-insights-prepopulated-queries"&gt;here&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can find me on Twitter &lt;a href="https://twitter.com/wm_matuszewski"&gt;@wm_matuszewski&lt;/a&gt; – DMs are open!&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>aws</category>
      <category>cloudwatch</category>
      <category>cdk</category>
      <category>serverless</category>
    </item>
    <item>
      <title>Less Than &amp; Less Than or Equal To ( $lt &amp; $lte ) Operators in MongoDB | Theory with Hands-on</title>
      <author>Srajan Gupta</author>
      <pubDate>Mon, 25 Oct 2021 14:00:10 +0000</pubDate>
      <link>https://dev.to/srajangupta__/less-than-less-than-or-equal-to-lt-lte-operators-in-mongodb-theory-with-hands-on-k9d</link>
      <guid>https://dev.to/srajangupta__/less-than-less-than-or-equal-to-lt-lte-operators-in-mongodb-theory-with-hands-on-k9d</guid>
      <description>&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/MlnmYl5GX18"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This tutorial is all about the Less Than &amp;amp; Less Than or Equal To Operators in MongoDB.&lt;br&gt;
This tutorial includes both theoretical and hands-on explanation.&lt;/p&gt;

&lt;p&gt;Project Enquiries: &lt;a href="https://www.srajangupta.com/"&gt;https://www.srajangupta.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>mongodb</category>
      <category>mongoose</category>
      <category>nosql</category>
      <category>node</category>
    </item>
    <item>
      <title>Bootstrap 5 Material Dashboard - Free Resources</title>
      <author>Sm0ke</author>
      <pubDate>Mon, 25 Oct 2021 13:59:58 +0000</pubDate>
      <link>https://dev.to/sm0ke/bootstrap-5-material-dashboard-free-resources-34p0</link>
      <guid>https://dev.to/sm0ke/bootstrap-5-material-dashboard-free-resources-34p0</guid>
      <description>&lt;p&gt;Hello Coders!&lt;/p&gt;

&lt;p&gt;This article presents a short-list with open-source projects crafted on top of a pixel-perfect &lt;strong&gt;Bootstrap 5&lt;/strong&gt; design that might help programmers code hobby and commercial dashboards without an initial investment. &lt;strong&gt;Material Dashboard&lt;/strong&gt;, a popular dashboard template crafted by Creative-Tim, has been updated recently to Bootstrap 5 and a new fresh look inspired by Google's Material Design 2.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Thanks for reading!&lt;/em&gt; - Content provided by &lt;strong&gt;&lt;a href="https://appseed.us/"&gt;App Generator&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;ul&gt;
&lt;li&gt;✨ &lt;a href="https://www.creative-tim.com/product/material-dashboard"&gt;Material Dashboard&lt;/a&gt; - product page (template version)&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/admin-dashboards/django-dashboard-material"&gt;Material Dashboard Django&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;✨ &lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-material-design"&gt;Material Dashboard Flask&lt;/a&gt; - product page&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HZCFBXiw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq5didb7gz38iiof9sym.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HZCFBXiw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hq5didb7gz38iiof9sym.png" alt="Bootstrap 5 Material Dashboard - VR Sample page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;For newcomers, &lt;strong&gt;Material Dashboard&lt;/strong&gt; is an open-source product with &lt;strong&gt;280k downloads and ~10k stars on Github&lt;/strong&gt; released 5years ago by the Creative-Tim agency.  Since the beginning, the beautiful material-based design and the permissive license boosted quickly the product in the &lt;code&gt;open-source ecosystem&lt;/code&gt;. Once the &lt;strong&gt;Bootstrap 5&lt;/strong&gt; has reached a stable state, the product has been updated to use the latest features provided by Bootstrap plus more pages and a complete UI redesign.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;New Product Features&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Built with Bootstrap 5&lt;/li&gt;
&lt;li&gt;Tooling via Gulp for assets management&lt;/li&gt;
&lt;li&gt;New pages: SignIN, SignUP, VR, and Billing&lt;/li&gt;
&lt;li&gt;RTL Support&lt;/li&gt;
&lt;li&gt;Light/Dark mode &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xjKwXiBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7h6oe7qkygsoeeddfdp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xjKwXiBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z7h6oe7qkygsoeeddfdp.png" alt="Bootstrap 5 Material Dashboard - Dashboard Sample page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Bootstrap 5 Material Dashboard&lt;/strong&gt; - Billing Page&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9-bYzPzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9kuu1bprwlhtky04xu8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9-bYzPzT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9kuu1bprwlhtky04xu8.png" alt="Bootstrap 5 Material Dashboard - Billing Sample page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This modern design can be also used in &lt;strong&gt;Flask&lt;/strong&gt; and &lt;strong&gt;Django&lt;/strong&gt;, two popular and trendy Python frameworks. Both products are free and actively supported by &lt;code&gt;AppSeed&lt;/code&gt;.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#material-dashboard-django"&gt;
  &lt;/a&gt;
  ✨ Material Dashboard Django
&lt;/h2&gt;

&lt;p&gt;The codebase comes with up-to-date dependencies, database, session-based authentication, and Docker support for easier deployment.  For those familiar with Docker, the product can be compiled and started in a local environment with a few commands typed in the terminal. Let's try to start the project without leaving this page.&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt; - Clone the sources from Github&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/app-generator/django-dashboard-material.git
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd &lt;/span&gt;django-dashboard-material
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Step #2&lt;/strong&gt; - Start in Docker&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose pull   &lt;span class="c"&gt;# download dependencies&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose build  &lt;span class="c"&gt;# execute local set up&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;docker-compose up &lt;span class="nt"&gt;-d&lt;/span&gt;  &lt;span class="c"&gt;# start the app in Docker&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If all goes well, we should see &lt;strong&gt;Material Dashboard 2&lt;/strong&gt; running in the browser. Once we register a new user and sign in, all private pages become accessible.&lt;/p&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wpK-vofJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42mw2jjqtyh84lgcalze.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wpK-vofJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/42mw2jjqtyh84lgcalze.png" alt="Bootstrap 5 Material Dashboard - SignIN Sample page."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#material-dashboard-flask"&gt;
  &lt;/a&gt;
  ✨ Material Dashboard Flask
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Flask&lt;/code&gt; version of &lt;strong&gt;Material Dashboard 2&lt;/strong&gt; can be also downloaded and used from Github without a registration lock. The features provided by this simple seed project are quite similar to the Django version: up-to-date dependencies, SQLite, Flask-Migrate, Blueprints, and Docker support. For build instructions feel free to access the Github repository or the official documentation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/admin-dashboards/flask-dashboard-material-design"&gt;Flask Dashboard Material&lt;/a&gt; - product page&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://docs.appseed.us/products/flask-dashboards/material-dashboard"&gt;Flask Dashboard Material&lt;/a&gt; - documentation&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--enPCKoEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9nbf58lcfh1u80tcitb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--enPCKoEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r9nbf58lcfh1u80tcitb.png" alt="Material Dashboard Flask - RTL Support."&gt;&lt;/a&gt;&lt;/p&gt;




&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Thanks for reading!&lt;/strong&gt; For more resources, please access:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href="https://appseed.us/admin-dashboards/open-source"&gt;Free Admin Dashboards&lt;/a&gt; - index provided by AppSeed&lt;/li&gt;
&lt;li&gt;👉 &lt;a href="https://bit.ly/3wd5D25"&gt;Free Templates&lt;/a&gt; - index hosted by Creative-Tim&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WnNV3_7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zokoo01tfpdjwycf08g3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WnNV3_7F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zokoo01tfpdjwycf08g3.png" alt="Free Templates - Crafted by Creative-Tim"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>material</category>
      <category>dashboards</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Hacktoberfest Progress Week 3</title>
      <author>Japneet Singh</author>
      <pubDate>Mon, 25 Oct 2021 13:58:51 +0000</pubDate>
      <link>https://dev.to/japneetsingh035/hacktoberfest-progress-week-3-17i9</link>
      <guid>https://dev.to/japneetsingh035/hacktoberfest-progress-week-3-17i9</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hacktoberfest-progress"&gt;
  &lt;/a&gt;
  Hacktoberfest Progress
&lt;/h2&gt;

&lt;p&gt;Welcome everyone to my second post of hactoberfest. This week  I started working on more projects, looked for some projects to work on. I worked on a new language dart, contributed to something different this time. I worked on a flutter which is an open-source UI software development kit created by google.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-projects"&gt;
  &lt;/a&gt;
  Finding Projects
&lt;/h2&gt;

&lt;p&gt;I searched GitHub to look for projects and found these which took my interest: &lt;a href="https://github.com/ACM-VIT/fludget"&gt;fludget&lt;/a&gt;, &lt;a href="https://github.com/web3community/web3community.github.io"&gt;web3community&lt;/a&gt;, &lt;a href="https://github.com/mdn/content"&gt;mdnc&lt;/a&gt;. You all should check out these projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#issues"&gt;
  &lt;/a&gt;
  Issues
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/ACM-VIT/fludget/issues/284"&gt;Issue# 1&lt;/a&gt;. This week I worked on Fludget: This project is developed to learn Flutter using Flutter. Different widgets used in Flutter can be viewed in this app along with their implementation, description and code. I believe submitted issues are easy to work on and save a lot of time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#issues-related-about"&gt;
  &lt;/a&gt;
  Issues related about:
&lt;/h2&gt;

&lt;p&gt;The issue was to add a feature: Image Filtered Widget to the Widget Catalog, submitted by the developer who assigned it to me.&lt;br&gt;
Here's the API for widget class available on the official site by flutter developer: &lt;a href="https://api.flutter.dev/flutter/widgets/ImageFiltered-class.html"&gt;ImageFiltered-class&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#preparation"&gt;
  &lt;/a&gt;
  Preparation
&lt;/h2&gt;

&lt;p&gt;The preparation to work on this project was to install Flutter on my mac. I took it by surprise that it went very easy. The documentation provided by this website was good.&lt;br&gt;
&lt;a href="https://flutter.dev/docs/get-started/install"&gt;Installation Flutter&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#learning"&gt;
  &lt;/a&gt;
  Learning
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;How to develop an app using Flutter in Mac OS.&lt;/li&gt;
&lt;li&gt;How to use Widget Catalog in Flutter.&lt;/li&gt;
&lt;li&gt;How to blur, rotate and skew the image using ImageFiltered.&lt;/li&gt;
&lt;li&gt;How to work with git with multiple commits.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;
  &lt;a href="#after"&gt;
  &lt;/a&gt;
  After:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pXw8bHH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnp5pi8qi4yska8te9p4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pXw8bHH7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnp5pi8qi4yska8te9p4.png" alt="Page #1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EG-Pm3R8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hm1l67a3ri8fcw47uzhi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EG-Pm3R8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hm1l67a3ri8fcw47uzhi.png" alt="Page #2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yAwfMRgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39g1w6x6443814wtv282.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yAwfMRgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/39g1w6x6443814wtv282.png" alt="Page #3"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#researches"&gt;
  &lt;/a&gt;
  Researches:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://api.flutter.dev/flutter/widgets/ImageFiltered-class.html"&gt;Imagefiltered widget&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#interactions"&gt;
  &lt;/a&gt;
  Interactions:
&lt;/h2&gt;

&lt;p&gt;I had good interactions with developers on Github. I take challenges and ask developers to review the pull request before merging to the master branch. This week the developer wanted me to do a couple of things more to similar pull requests.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#outcome"&gt;
  &lt;/a&gt;
  Outcome:
&lt;/h2&gt;

&lt;p&gt;This week I worked on using flutter to include image filters widgets like blur, matrix to showcase transform, enlarge, shrink and other features which can implemented using this widget. All in all, it is good to learn new UI software development kit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dart Implementation in Flutter&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import 'dart:ui';
import 'dart:typed_data';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Classes Implementation In Flutter&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;class ImageFilterImplementation extends StatefulWidget {
  const ImageFilterImplementation({Key? key}) : super(key: key);

  @override
  State&amp;lt;ImageFilterImplementation&amp;gt; createState() =&amp;gt; _ImageFilterImplementationState();
}

class _ImageFilterImplementationState extends State&amp;lt;ImageFilterImplementation&amp;gt; {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: SingleChildScrollView(
          child: Padding(
            padding: const EdgeInsets.all(10.0),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.spaceAround,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  "Blur Image filtered demo",
                  style: TextStyle(
                  fontWeight: FontWeight.bold,
                  ),
                ),
                ImageFiltered(
                  imageFilter: ImageFilter.blur(sigmaX: 4),
                  child: FlutterLogo(
                    size: 220,
                  ),
                ),
                SizedBox(height: 20.0),
                Text(
                  "Floating Image filtered demo:",
                  style: TextStyle(
                  fontWeight: FontWeight.bold,
                  ),
                ),
                ImageFiltered(
                  imageFilter: ImageFilter.matrix(
                  Float64List.fromList([
                    1,0,0,0,
                    0,1,0,0,
                    0,1,1,1,
                    1,0,0,1
                    ]),
                  ),
                  child: FlutterLogo(
                    size: 220,
                  ),
                ),
                SizedBox(height: 20.0),
                Text(
                  "Rotation Image filtered demo:",
                  style: TextStyle(
                  fontWeight: FontWeight.bold,
                  ),
                ),
                ImageFiltered(
                  imageFilter: ImageFilter.matrix(
                    Matrix4.rotationZ(0.10).storage,
                  ),
                  child: FlutterLogo(
                    size: 220,
                  ),
                ),
              ],
            ),
          ),
        )
    );
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#link-to-pull-requests"&gt;
  &lt;/a&gt;
  Link to Pull Requests:
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/ACM-VIT/fludget/pull/295"&gt;PR&lt;/a&gt;&lt;/p&gt;

</description>
      <category>hacktoberfest</category>
      <category>flutter</category>
      <category>opensource</category>
      <category>programming</category>
    </item>
    <item>
      <title>Partial Response Feature in Dialogflow CX</title>
      <author>Dhruv Rajkotia</author>
      <pubDate>Mon, 25 Oct 2021 13:47:29 +0000</pubDate>
      <link>https://dev.to/dhruv_rajkotia/partial-response-feature-in-dialogflow-cx-39bi</link>
      <guid>https://dev.to/dhruv_rajkotia/partial-response-feature-in-dialogflow-cx-39bi</guid>
      <description>&lt;p&gt;Dialogflow CX short for Dialogflow Customer Experience is a recent launch from Google in December 2020. It provides a new way for designing agents, taking a state machine approach to agent design. This gives you a clear and explicit control over a conversation, a better end-user experience, and a better development workflow. The older version of Dialogflow which is Dialogflow ES short for Dialogflow Essentials is still supported but the Dialogflow CX should allow chatbots with higher complexity to be built more seamlessly using a visual editor and not require one to write complex code.&lt;/p&gt;

&lt;p&gt;With Dialogflow CX, Google has come up with a lots of new features and overcomes some of the limitation of the Dialogflow ES. Today we are going to discuss about the one of the feature of Dialogflow CX which is the partial response. You probably have seen that option when setuping webhook in Dialogflow CX. Let's have a deeper discussion on that. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-partial-response-why-we-need-it"&gt;
  &lt;/a&gt;
  What is Partial Response? Why we need it?
&lt;/h2&gt;

&lt;p&gt;Sometimes we got into a problem where API takes more time to respond back to the end users and if we need to integrate those API in our bot then probably it's not a good experience to the end users as they need to wait until the API response. Let's understand this issue with some practical example. &lt;/p&gt;

&lt;p&gt;Like, If we have food ordering bot and user has reached to payment flow. User has asked "what is my bill amount?". So here we need to go back to our system and generate bill for the user. So let's assume that our generate bill API takes more than 5s(Dialogflow CX support the webhook timeout till 30s). So here user needs to wait until the API response which may feels user like Is he/she disconnected? or what happened to bot? which leads to a very bad user experience. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vVEpCUch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcdh65bf4a73fwnlbwdk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vVEpCUch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jcdh65bf4a73fwnlbwdk.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To overcome this problem Dialogflow CX comes up with partial Response feature which has ability to notify users while we are fetching details through webhook. notify users and fetching details from webhook will perform parallel. So here we can notify users with some text like "One moment please while I look that up." So using end user will notified while we are fetching details in backend. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JELMzAJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl68tsk4fzi867oyxucb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JELMzAJ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl68tsk4fzi867oyxucb.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-add-partial-response-in-dialogflow-cx"&gt;
  &lt;/a&gt;
  How to add partial response in Dialogflow CX
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#step-1"&gt;
  &lt;/a&gt;
  Step 1
&lt;/h4&gt;

&lt;p&gt;Go to the Route which has the webhook integrated. like from which route you are going to call your webhook. For reference I have attached a screenshot below. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-JZBZZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mipzjla3z3qnq5u81qyu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-JZBZZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mipzjla3z3qnq5u81qyu.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-2"&gt;
  &lt;/a&gt;
  Step 2
&lt;/h4&gt;

&lt;p&gt;Add the fulfillment message for that route as per the screenshot. (One moment please while I look that up.)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--52f4RitQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8mdw8vdlcv164k3xl24.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--52f4RitQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8mdw8vdlcv164k3xl24.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#step-3"&gt;
  &lt;/a&gt;
  Step 3
&lt;/h4&gt;

&lt;p&gt;Enabled Return Partial Response option. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lqht4oB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hh82xmfe8osng8cbpnpf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lqht4oB1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hh82xmfe8osng8cbpnpf.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That's it, you have configured the partial response successfully. &lt;/p&gt;

&lt;p&gt;Now let's have a quick test. &lt;/p&gt;

&lt;p&gt;Go to your Simulator and click on the 3 dots setting and enabled the partial response option. please take reference from screenshot. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WklYGM8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5waj2d86bbkeaznm5y0w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WklYGM8U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5waj2d86bbkeaznm5y0w.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now try with your query which execute the route and call the webhook. After some time you'll received the defined message from bot site before your webhook success message. &lt;/p&gt;

&lt;p&gt;Hope you liked this blog. Please &lt;a href="https://twitter.com/dhruv_rajkotia"&gt;FOLLOW&lt;/a&gt; me on Twitter to get notified regarding my upcoming blogs. Have a nice day..!!&lt;/p&gt;

</description>
      <category>dialogflowcx</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>nlp</category>
    </item>
    <item>
      <title>Event bubbling, capturing and how to prevent them</title>
      <author>Shuvo</author>
      <pubDate>Mon, 25 Oct 2021 13:34:24 +0000</pubDate>
      <link>https://dev.to/0shuvo0/event-bubbling-capturing-and-how-to-prevent-them-9n5</link>
      <guid>https://dev.to/0shuvo0/event-bubbling-capturing-and-how-to-prevent-them-9n5</guid>
      <description>&lt;p&gt;Lets say you have a parent container that also has a child element inside it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"parent"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"child"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;hello&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And you have added a event listener to them.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;parent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.parent&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;child&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;.child&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Parent clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;child clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Now try to click on just the parent. You should see &lt;strong&gt;Parent clicked!&lt;/strong&gt;&lt;br&gt;
But now if you try to click on the child element in the console you will see not only &lt;strong&gt;child clicked!&lt;/strong&gt; was printed but &lt;strong&gt;Parent clicked!&lt;/strong&gt; was also printed.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ejLWLaPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k32skzzkacpzikjekwlf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ejLWLaPD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k32skzzkacpzikjekwlf.png" alt="js event bubbling demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why is that? That is due do something called event bubbling. So when a event is emitted on the child it will bubble up to its parent.&lt;br&gt;
And it makes sense if you think about it, the child element was sitting inside its parent. So we wanted to click on just the child but in reality we clicked on both the parent and the child. So both events were fired. Now notice that first &lt;strong&gt;child clicked!&lt;/strong&gt; was printed and then &lt;strong&gt;Parent clicked!&lt;/strong&gt; was printed. That means the even is first fired on the child then its bubbling up to its parent. But if we want we can make it do the opposite as well.&lt;br&gt;
So to do that as the third argument of our &lt;code&gt;addEventListener&lt;/code&gt; we can pass &lt;code&gt;true&lt;/code&gt;. So if we do that you will see first &lt;strong&gt;Parent clicked!&lt;/strong&gt; will be printed then &lt;strong&gt;child clicked!&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Parent clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;child clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zQN1IAqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crp0ioe0zmyql73foq5s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zQN1IAqx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/crp0ioe0zmyql73foq5s.png" alt="JavaScript event capturing demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So basically passing &lt;code&gt;true&lt;/code&gt; as the third argument of &lt;code&gt;addEventListener&lt;/code&gt; tells JavaScript to use capturing mode instead of bubbling mode. And in capturing mode event is fired to the parent then goes down to its child which is the opposite of event bubbling.&lt;/p&gt;

&lt;p&gt;Also if we want we can prevent event bubbling and event capturing by calling &lt;code&gt;stopPropagation&lt;/code&gt; on the event. So if we click on child only the event listener set on child will be fired and if we click on parent only the event listener set on parent will be fired.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stopPropagation&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Parent clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="nx"&gt;child&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stopPropagation&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;child clicked!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--weNYWCaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/saxmpn0az66xmumpvf9c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--weNYWCaR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/saxmpn0az66xmumpvf9c.png" alt="preventing event bubbling"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alight that's all for now. Make sure you check out my other articles and &lt;a href="https://www.youtube.com/c/AngleBrace"&gt;YouTube Channel&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__link"&gt;
  &lt;a href="/0shuvo0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/0shuvo0/i-made-squid-game-with-javascript-10j9" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;I made Squid Game with JavaScript&lt;/h2&gt;
      &lt;h3&gt;Shuvo ・ Oct 24 ・ 3 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
