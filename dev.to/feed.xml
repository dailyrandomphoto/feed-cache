<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Learn web development 03 - HTML List tags and Images</title>
      <author>Modern Web</author>
      <pubDate>Sun, 25 Jul 2021 09:28:30 +0000</pubDate>
      <link>https://dev.to/kunaal438/learn-web-development-03-html-list-tags-and-images-1195</link>
      <guid>https://dev.to/kunaal438/learn-web-development-03-html-list-tags-and-images-1195</guid>
      <description>&lt;p&gt;Hello, Welcome. My name is kunaal. This is a part of learn web development series.&lt;/p&gt;

&lt;p&gt;In today's article, you'll learn about lists and images, video, audio tags in HTML. So, let's start.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#list-tags"&gt;
  &lt;/a&gt;
  List tags
&lt;/h1&gt;

&lt;p&gt;So till now we have see heading tags, para tags. But, how we can create lists in HTML. For lists we have&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ordered-list"&gt;
  &lt;/a&gt;
  Ordered list
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;ol&amp;gt;&amp;lt;/ol&amp;gt;&lt;/code&gt;This is ordered list. This is used to create a list with numbers, or alphabets like that. But in order to create lists we need one more tag it's &lt;code&gt;&amp;lt;li&amp;gt;&amp;lt;/li&amp;gt;&lt;/code&gt;. This is called list item. We define list item with this. Let's take an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ol&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;list item 1&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;list item 2&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;list item 3&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;list item 4&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ol&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g6xK8gk9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eebh8a3n8g3ih5rbvpg2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g6xK8gk9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/eebh8a3n8g3ih5rbvpg2.PNG" alt="Capture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But, What if we want roman numbers, or alphabets. We can use &lt;code&gt;type=""&lt;/code&gt; type atrribute. Remember we have learnt about attributes in the previous article.&lt;/p&gt;

&lt;p&gt;Example of &lt;code&gt;type&lt;/code&gt; attribute&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ol&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"i"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;list item 1&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;list item 2&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;list item 3&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;list item 4&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ol&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Value for &lt;code&gt;type&lt;/code&gt; attribute can be &lt;code&gt;1&lt;/code&gt; - Number, &lt;code&gt;A&lt;/code&gt; - Capital letters, &lt;code&gt;a&lt;/code&gt; - small letters, &lt;code&gt;i&lt;/code&gt; - roman numbers, &lt;code&gt;I&lt;/code&gt; - Capital roman number.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zeTJLAHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bkem9iulyp1v30vltvf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zeTJLAHB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7bkem9iulyp1v30vltvf.PNG" alt="Capture-2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have some more attribute that you can use with &lt;code&gt;ol&lt;/code&gt;.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;th&gt;Attributes&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;tr&gt;
&lt;td&gt;
start
&lt;/td&gt;
&lt;td&gt;
numbers(1,4,50..)
&lt;/td&gt;
&lt;td&gt;
Specifies the start value of an ordered list
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
reversed
&lt;/td&gt;
&lt;td&gt;
------
&lt;/td&gt;
&lt;td&gt;
Specifies that the list order should be reversed(3,2,1)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt; 

&lt;h3&gt;
  &lt;a href="#unordered-list"&gt;
  &lt;/a&gt;
  Unordered List
&lt;/h3&gt;

&lt;p&gt;Now, what if we want un ordered list. Well, for that case, we have &lt;code&gt;&amp;lt;ul&amp;gt;&amp;lt;/ul&amp;gt;&lt;/code&gt; unordered list tag. This work same as ordered list. The only difference is this don't add number.&lt;/p&gt;

&lt;p&gt;For example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;HTML&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;CSS&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Javascript&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;React&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Node.js&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Psql&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--66ext1J1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96uk2x4nq32mfarlg461.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--66ext1J1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/96uk2x4nq32mfarlg461.PNG" alt="Capture-3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nested-lists"&gt;
  &lt;/a&gt;
  Nested Lists
&lt;/h3&gt;

&lt;p&gt;Nested lists refer to list inside another list inside another. Like nesting a list inside another.&lt;/p&gt;

&lt;p&gt;Example for nested list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ol&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Car&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Bike
        &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Electric Bike&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Super Bike&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Bike&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Plane
        &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Fighter Plane&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Commercial Plane&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Private Plane&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Helicopter&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ol&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GDSzEv4i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcfdsa2hijpzpai2g335.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GDSzEv4i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lcfdsa2hijpzpai2g335.PNG" alt="Capture-4"&gt;&lt;/a&gt;&lt;br&gt;
That's sit about Lists in HTML.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#image-tag"&gt;
  &lt;/a&gt;
  Image Tag
&lt;/h1&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; Image tag. &lt;br&gt;
This tag is used to add image on the page. Notice we don't close image tag. &lt;code&gt;img&lt;/code&gt; tag work with some attributes.&lt;br&gt;
1.&lt;code&gt;src&lt;/code&gt; - stands for source. It is used to locate image path.&lt;br&gt;
2.&lt;code&gt;alt&lt;/code&gt; - stands for alternate text. If the image for some reason cannot be displayed.&lt;/p&gt;

&lt;p&gt;Let's see an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"cat.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"cat"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SRT-x4aj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8rfbphf97xhczai5wpay.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRT-x4aj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8rfbphf97xhczai5wpay.PNG" alt="Capture-5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-tag"&gt;
  &lt;/a&gt;
  Video Tag
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;video&amp;gt;&amp;lt;/video&amp;gt;&lt;/code&gt; Video tag is used to add Video in web page.With this tag you have to you &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; tag also. And &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; tag is non closing tag. Like you define &lt;code&gt;img&lt;/code&gt; path using &lt;code&gt;src&lt;/code&gt; attributes. The same attribute we use to locate video.&lt;/p&gt;

&lt;p&gt;Let's take an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;video&lt;/span&gt; &lt;span class="na"&gt;controls&lt;/span&gt; &lt;span class="na"&gt;autoplay&lt;/span&gt; &lt;span class="na"&gt;muted&lt;/span&gt; &lt;span class="na"&gt;loop&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"video.mp4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/video&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2dV_Ydfy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u07axixxyeciwdfzgvxi.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2dV_Ydfy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u07axixxyeciwdfzgvxi.PNG" alt="Capture-6"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Attributes used in above code.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;tr&gt;
&lt;td&gt;
Controls
&lt;/td&gt;
&lt;td&gt;
show controls button for the video.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
autoplay
&lt;/td&gt;
&lt;td&gt;
autoplay the video on page load
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
muted
&lt;/td&gt;
&lt;td&gt;
mute the video
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;
loop
&lt;/td&gt;
&lt;td&gt;
play the video in loop
&lt;/td&gt;
&lt;/tr&gt;

&lt;/table&gt;&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#audio-tag"&gt;
  &lt;/a&gt;
  Audio tag.
&lt;/h3&gt;

&lt;p&gt;And the last but not least. &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; Audio tag.&lt;br&gt;
This is used to add audio on the page. And it is very easy to understand by the code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;audio&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"audio.mp3"&lt;/span&gt; &lt;span class="na"&gt;controls&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/audio&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h6&gt;
  &lt;a href="#output"&gt;
  &lt;/a&gt;
  Output
&lt;/h6&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2-qtLNAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woy23enxzy6m7n7r063d.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2-qtLNAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/woy23enxzy6m7n7r063d.PNG" alt="Capture-7"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, that's it for today. I hope you understood each and everything. In the next article we'll learn about forms and tables in HTML. So make sure you follow me.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#homework"&gt;
  &lt;/a&gt;
  Homework
&lt;/h1&gt;

&lt;p&gt;I appreciate, If you do homework as well for you better practice. Today's homework is.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Try all the above example on your own&lt;/li&gt;
&lt;li&gt;Try adding video attributes to audio, and image tags to see what attributes work with them.&lt;/li&gt;
&lt;li&gt;Make a page which contains a para, heading, list, nested lists, two images and one video or audio. Add some links also.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you want, you can tag your homework to my &lt;a href="https://www.instagram.com/modern_web_channel/"&gt;Instagram&lt;/a&gt;. I'll be glad to see you developing web pages.&lt;/p&gt;

&lt;p&gt;So, that's sit, if I missed something or you have any doubt feel free to ask me in discussion.&lt;/p&gt;

&lt;p&gt;If you like, you can subscribe my &lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;youtube channel&lt;/a&gt;.I create awesome web development tutorials. You can also watch tutorial on &lt;a href="https://www.youtube.com/watch?v=89IFrt_Unj0"&gt;Gradient Infinity loading animation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks For reading.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>NanoID - A URL Friendly Unique Identifier</title>
      <author>Apoorv Tyagi</author>
      <pubDate>Sun, 25 Jul 2021 09:28:16 +0000</pubDate>
      <link>https://dev.to/apoorvtyagi/nanoid-a-url-friendly-unique-identifier-1khn</link>
      <guid>https://dev.to/apoorvtyagi/nanoid-a-url-friendly-unique-identifier-1khn</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In every software system, we need unique Ids to distinguish between several objects from one another.&lt;/p&gt;

&lt;p&gt;Recently, I wrote about the &lt;a href="https://dev.to/apoorvtyagi/generating-unique-ids-in-a-large-scale-distributed-environment-257d"&gt;unique Id generation for a large scale distributed environment&lt;/a&gt;. In that article, we touched a little on UUIDs.&lt;/p&gt;

&lt;p&gt;In this blog post, I will share a better alternative to UUIDs that can help you fit the requirements that UUIDs fulfills and overcomes some of their shortcomings as well.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introducing-nano-id"&gt;
  &lt;/a&gt;
  Introducing Nano ID
&lt;/h2&gt;

&lt;p&gt;It is a tiny, secure, URL-friendly, unique string ID generator.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Nano ID  is smaller sized (108 bytes - minified and gzipped) as compared to UUID&lt;/strong&gt;. This size reduction impacts a lot. Making use of NanoID is easier for transferring information and storage space. In a large-scale system, these numbers can make a lot of difference.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;NanoID uses a cryptographically strong API which is a lot safer&lt;/strong&gt; compared to Math.Random() which are &lt;a href="https://franklinta.com/2014/08/31/predicting-the-next-math-random-in-java/"&gt;insecure&lt;/a&gt;. These API modules use unpredictable hardware generated random identifiers.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;NanoID has utilizes its very own "uniform formula" throughout the application&lt;/strong&gt; of the ID generator instead of making use of an arbitrary &lt;code&gt;% alphabet&lt;/code&gt; which is a popular mistake to make when coding an ID generator (The spread will not be even in some cases).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Rather than having 36 symbols in UUID’s alphabet, NanoID just has 21 symbols&lt;/strong&gt; which are: A-Z,a-z,0-9,_(underscore), -(hyphen).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;NanoID doesn’t rely on any kind of third-party dependencies&lt;/strong&gt;, which means, it ends up being a lot more steady which is helpful to maximize the package scope over time as well as make it much less vulnerable to the issues that come along with dependencies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;NanoID is available in various programs languages&lt;/strong&gt;, which include - C#, C++, Dart &amp;amp; Flutter, Go, Java, PHP, Python, Ruby, Rust, Swift, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;NanoID permits designers to utilize personalized alphabets&lt;/strong&gt;. This is another additional function of Nano ID. You can alter the literals or the dimension of the id as shown below:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import { alphabet } from 'nanoid';
    const nanoid = alphabet ('1234567890ABCDEF', 10);
    model.id = nanoid();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the above instance, we've specified personalized letter as '1234567890ABCDEF' as well as the dimension of the Id as 10.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example-usages"&gt;
  &lt;/a&gt;
  Example usages
&lt;/h2&gt;

&lt;p&gt;Generating both NanoID or UUID is pretty straightforward. In JavaScript, you have NPM packages that will help you to generate them. You can get NanoId from here =&amp;gt; &lt;a href="https://github.com/ai/nanoid"&gt;https://github.com/ai/nanoid&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The main module uses URL-friendly symbols (A-Za-z0-9_-) and returns an ID with 21 characters:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    import { nanoid } from "nanoid";
    model.id = nanoid() // X2JaSYP7_Q2leGI9b-MyA
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;You can also specify the number of characters you want:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    nanoid(9); // "wMeKBp6th"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;You can also change the used alphabet for generating hashes to your own if you have specific requirements as seen above:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    const alphabet = '0123456789ABCDEF';
    generate(alphabet, 9); // F65BF3050
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#risk-of-collision"&gt;
  &lt;/a&gt;
  Risk of collision
&lt;/h2&gt;

&lt;p&gt;Even though it can generate over 2.2 million unique IDs per second with its default alphabet, there is still a chance of generating the same multiple Ids.&lt;/p&gt;

&lt;p&gt;But what are the odds of that happening?&lt;/p&gt;

&lt;p&gt;You can calculate that based on the given parameters easily &lt;a href="https://zelark.github.io/nano-id-cc/"&gt;here&lt;/a&gt; and &lt;a href="https://alex7kom.github.io/nano-nanoid-cc/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You'll notice that this &lt;strong&gt;probability comes out to be extremely small.&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-disadvantages"&gt;
  &lt;/a&gt;
  Some disadvantages
&lt;/h2&gt;

&lt;p&gt;Even though NanoId is considered better than UUIDs, it still has some limitations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Being non-human readable is the main disadvantage.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Imagine that a customer calls and is asked to provide the identifier, having to spell a complete NanoID is not a pleasant experience. When compared to UUID, NanoID is way shorter and readable but still cannot be used in such cases where the end customer needs to use it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;It can't be used as primary key in any SQL Database tables&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you use NanoID as a table’s primary key, there will be problems if you use the same column as a clustered index. This is because &lt;strong&gt;NanoIDs are not sequential.&lt;/strong&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#a-few-words-of-wisdom"&gt;
  &lt;/a&gt;
  A few words of wisdom
&lt;/h3&gt;

&lt;p&gt;Any approach in a Software World is always going to be subjective. It’s up to your requirements to weigh in the tradeoffs and choose the approach that works for you. No design is concrete enough to continue forever, so given the constraints, we have chosen a certain design, and depending on how it works for us we might evolve it further as well.&lt;/p&gt;

&lt;p&gt;👋 Thanks for reading and Happy learning…&lt;/p&gt;

</description>
      <category>computerscience</category>
      <category>systems</category>
      <category>architecture</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Tailwind Responsive Timeline Example</title>
      <author>Ishaan Sheikh</author>
      <pubDate>Sun, 25 Jul 2021 08:54:21 +0000</pubDate>
      <link>https://dev.to/sheikh_ishaan/tailwind-responsive-timeline-example-5233</link>
      <guid>https://dev.to/sheikh_ishaan/tailwind-responsive-timeline-example-5233</guid>
      <description>&lt;p&gt;A simple timeline component using Tailwind CSS.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/sheikh_ishaan/embed/oNWpgoK?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>tailwindcss</category>
      <category>css</category>
    </item>
    <item>
      <title>Pagecloud - Free Drag and drop website builder</title>
      <author>GoOnlineTools</author>
      <pubDate>Sun, 25 Jul 2021 08:50:49 +0000</pubDate>
      <link>https://dev.to/goonlinetools/pagecloud-free-drag-and-drop-website-builder-4kfk</link>
      <guid>https://dev.to/goonlinetools/pagecloud-free-drag-and-drop-website-builder-4kfk</guid>
      <description>&lt;p&gt;Pagecloud makes it easy for creators and businesses to build beautiful, high-performing websites and online stores. Whether you want to find your voice, live your passion or grow your business, our platform helps you do it quicker and with boundless creativity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-pagecloud"&gt;
  &lt;/a&gt;
  What is Pagecloud?
&lt;/h2&gt;

&lt;p&gt;PageCloud is a software as a service, cloud-based web development platform and drag and drop website builder. &lt;/p&gt;

&lt;p&gt;Also read - &lt;a href="https://hubsadda.com/free-website-builder/"&gt;Free Website Builder&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-pagecloud"&gt;
  &lt;/a&gt;
  Features of Pagecloud:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Website templates&lt;/li&gt;
&lt;li&gt;Build with Sections&lt;/li&gt;
&lt;li&gt;Library of elements&lt;/li&gt;
&lt;li&gt;True drag and drop&lt;/li&gt;
&lt;li&gt;Design freedom&lt;/li&gt;
&lt;li&gt;Smart Guides&lt;/li&gt;
&lt;li&gt;Sections&lt;/li&gt;
&lt;li&gt;Headers &amp;amp; Footers&lt;/li&gt;
&lt;li&gt;Mobile customizations&lt;/li&gt;
&lt;li&gt;Unlimited fonts&lt;/li&gt;
&lt;li&gt;Shortcuts&lt;/li&gt;
&lt;li&gt;Advanced design&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://pagecloud.grsm.io/dev"&gt;Try Pagecloud Pro for free&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>webdev</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to roll back a Dokku deployment</title>
      <author>Alejandro Akbal</author>
      <pubDate>Sun, 25 Jul 2021 08:50:03 +0000</pubDate>
      <link>https://dev.to/alejandroakbal/how-to-roll-back-a-dokku-deployment-5825</link>
      <guid>https://dev.to/alejandroakbal/how-to-roll-back-a-dokku-deployment-5825</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Sometimes you end up deploying an application to Dokku and then realize that you want to revert the changes you made.&lt;/p&gt;

&lt;p&gt;In this tutorial we'll go over how to roll back a Dokku deployment.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#before-we-start"&gt;
  &lt;/a&gt;
  Before we start
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  Preface
&lt;/h3&gt;

&lt;p&gt;Keep in mind that rolling back a deployment is a dangerous operation, proceed with caution.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Dokku server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don't have a Dokku server?&lt;br&gt;
Check out my &lt;a href="https://blog.akbal.dev/create-your-own-heroku-with-dokku-on-digitalocean"&gt;Dokku tutorial&lt;/a&gt;.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#get-the-commit-hash"&gt;
  &lt;/a&gt;
  Get the commit hash
&lt;/h3&gt;

&lt;p&gt;First well need to get the hash of the commit that we want to roll back to.&lt;/p&gt;

&lt;p&gt;To accomplish that, list out the last 10 commits that have been made to the repository.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git log &lt;span class="nt"&gt;--pretty&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;format:&lt;span class="s2"&gt;"%h - %s"&lt;/span&gt; &lt;span class="nt"&gt;-10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will get an output similar to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;3cacb03 - Revert &lt;span class="s2"&gt;"build: broaden possible purged files"&lt;/span&gt;
25e3b2b - chore: move node dependency to dev dependencies
6a42416 - Revert &lt;span class="s2"&gt;"ci: run npm "&lt;/span&gt;build&lt;span class="s2"&gt;" script in predeploy stage"&lt;/span&gt;
0b53fdd - ci: execute php buildpack first
2d27d60 - ci: run npm &lt;span class="s2"&gt;"build"&lt;/span&gt; script &lt;span class="k"&gt;in &lt;/span&gt;predeploy stage
1bc1276 - build: broaden possible purged files
1bed300 - style: lint
5ab255c - Revert &lt;span class="s2"&gt;"build: only run tailwind JIT mode on local"&lt;/span&gt;
23b0c4b - build: fix data-tables styles getting purged
52ca32e - ci: move scripts back to app.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now copy the hash of the commit that you want to roll back to.&lt;br&gt;
For example &lt;code&gt;2d27d60&lt;/code&gt;.&lt;/p&gt;


&lt;h2&gt;
  &lt;a href="#how-to-rollback"&gt;
  &lt;/a&gt;
  How to rollback
&lt;/h2&gt;

&lt;p&gt;Now that we have the commit hash, we can roll back to it.&lt;/p&gt;

&lt;p&gt;Just force push to Dokku with the commit hash, instead of the local branch.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# git push --force &amp;lt;remote&amp;gt; &amp;lt;local branch&amp;gt;:&amp;lt;remote branch&amp;gt;&lt;/span&gt;
git push &lt;span class="nt"&gt;--force&lt;/span&gt; dokku de7fc85:master
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;That is it!&lt;/strong&gt;&lt;br&gt;
Now Dokku will build the application from that commit.&lt;br&gt;
Effectively rolling back to that commit.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#end"&gt;
  &lt;/a&gt;
  End
&lt;/h2&gt;

&lt;p&gt;That was easy, wasn't it?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#selfpromotion"&gt;
  &lt;/a&gt;
  Self-promotion
&lt;/h3&gt;

&lt;p&gt;If you have found this useful, then you should follow me, I will be posting more interesting content! 🥰&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/github"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/twitter"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/dev.to"&gt;Dev.to&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or support me financially. 💸&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/github/sponsor"&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/liberapay"&gt;LiberaPay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://redirect.akbal.dev/paypal"&gt;PayPal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Congratulations, today you have learned how to roll back a Dokku deployment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let me know if the tutorial was useful to you in the comments!&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>beginners</category>
      <category>docker</category>
    </item>
    <item>
      <title>Creation de Bot discord</title>
      <author>imene</author>
      <pubDate>Sun, 25 Jul 2021 08:22:36 +0000</pubDate>
      <link>https://dev.to/imene06042688/creation-de-bot-discord-52g0</link>
      <guid>https://dev.to/imene06042688/creation-de-bot-discord-52g0</guid>
      <description>&lt;p&gt;veuiller ne pas l'ajouté il est simplement Bot rien est complet.&lt;/p&gt;

</description>
      <category>jellyfin</category>
    </item>
    <item>
      <title>Setup a new mac (for devs [and others]) 💻</title>
      <author>Dekel</author>
      <pubDate>Sun, 25 Jul 2021 08:17:36 +0000</pubDate>
      <link>https://dev.to/dekel/setup-a-new-mac-for-devs-and-others-4d88</link>
      <guid>https://dev.to/dekel/setup-a-new-mac-for-devs-and-others-4d88</guid>
      <description>&lt;blockquote&gt;
&lt;h3&gt;
  &lt;a href="#got-a-new-macbook-what-should-i-install-now-"&gt;
  &lt;/a&gt;
  "Got a new macbook🥳! What should I install now 🧐?"
&lt;/h3&gt;
&lt;/blockquote&gt;

&lt;p&gt;I'm getting this question every couple of weeks from friends and colleagues, and every time I'm sending them instructions on what and how to install in order to setup their environment to make their experience better.&lt;/p&gt;

&lt;p&gt;There are many tools/apps/configurations that you can use to make your life easier and your experience better with your mac.&lt;/p&gt;

&lt;p&gt;So I decided to finally write everything down and share it (instead of copy&amp;amp;paste emails/whatsapp/slack/discord messages).&lt;/p&gt;

&lt;p&gt;Here is my basic setup and recommendations for others.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#key-repeat-amp-delay"&gt;
  &lt;/a&gt;
  Key repeat &amp;amp; delay
&lt;/h3&gt;

&lt;p&gt;Change the key repeat and repeat delay - this is usually the first thing I'm changing:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uWRaG7on--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9pumsm9qex5wahe9qhy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uWRaG7on--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f9pumsm9qex5wahe9qhy.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
You can find it under &lt;code&gt;System Preferences -&amp;gt; Keyboard&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;And if you like the red arrows - keep on reading&lt;/em&gt; 😉&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#screenshots-to-clipboard"&gt;
  &lt;/a&gt;
  Screenshots to clipboard
&lt;/h3&gt;

&lt;p&gt;By default, screenshots are saved to your desktop. To change this - click &lt;code&gt;⌘+shift+5&lt;/code&gt; and under the "options" menu set the "save to" to "Clipboard".&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To capture an area use &lt;code&gt;⌘+shift+4&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;To capture the entire screen use &lt;code&gt;⌘+shift+5&lt;/code&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: &lt;code&gt;⌘&lt;/code&gt; is the &lt;code&gt;command&lt;/code&gt; key. You can find it left to your &lt;code&gt;space&lt;/code&gt; key.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I'll start with some general tools that just make my life easier:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#rectangle"&gt;
  &lt;/a&gt;
  Rectangle
&lt;/h3&gt;

&lt;p&gt;Rectangle is an open-source tool that gives you the ability to easily move the windows-apps around your desktops using your keyboard (left-half / right-half / top / bottom etc)&lt;br&gt;
&lt;a href="https://rectangleapp.com/"&gt;https://rectangleapp.com/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h5-TvoQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx86fko6w3zm7ck1invi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h5-TvoQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rx86fko6w3zm7ck1invi.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#monosnap"&gt;
  &lt;/a&gt;
  Monosnap
&lt;/h3&gt;

&lt;p&gt;Monosnap is a tool to edit your screenshots. They have both paid and free versions (for personal usage).&lt;br&gt;
Remember the red arrows? This is what you want:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mtWClnEM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qj4r9pt9cz48ccndesc5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mtWClnEM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qj4r9pt9cz48ccndesc5.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://monosnap.com/"&gt;https://monosnap.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#homebrew"&gt;
  &lt;/a&gt;
  Homebrew
&lt;/h3&gt;

&lt;p&gt;This is the de-facto package manager for macos (as a developer - most of the packages you need you can install using homebrew).&lt;br&gt;
Open your terminal (cmd + space) and run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#alttab"&gt;
  &lt;/a&gt;
  AltTab
&lt;/h3&gt;

&lt;p&gt;Personally, I don't use this tool, but many of my friends like it, so I decided to keep it on my list.&lt;br&gt;
If you moved from Windows to MacOS - AltTab is probably your friend - it brings the power of Windows's "alt-tab" functionality to your Mac.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nDOUIK0k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f6s5io49e0x1rrhigi2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nDOUIK0k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0f6s5io49e0x1rrhigi2.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
(Image from &lt;a href="https://alt-tab-macos.netlify.app/"&gt;AltTab's website&lt;/a&gt;)&lt;br&gt;
Install using brew:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install alttab
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#iterm2"&gt;
  &lt;/a&gt;
  iTerm2
&lt;/h3&gt;

&lt;p&gt;iTerm2 is a replacement for the standard macos's terminal (and is so much better).&lt;br&gt;
Now that we have homebrew installed we can use to install iterm2:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install iterm2
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#iterm2-configuration"&gt;
  &lt;/a&gt;
  iTerm2 configuration:
&lt;/h4&gt;

&lt;p&gt;There are many settings that you can change in iterm2, here are a few that in my opinion are a must:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Disable the bell:
iTerm2 Preferences -&amp;gt; Profiles -&amp;gt; Terminal -&amp;gt; Notifications -&amp;gt; Silence Bell&lt;/li&gt;
&lt;li&gt;Set iterm to jump over words on option+left/right arrow and move to begin/end of line with cmd+left/right arrow.
iTerm2 Preferences -&amp;gt; Profiles -&amp;gt; Keys:&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;  1. ⌥← (option + left arrow) - set action to "Send Escape Sequence" - Esc+ &lt;code&gt;b&lt;/code&gt;&lt;br&gt;
  2. ⌥→ (option + right arrow) - set action to "Send Escape Sequence" - Esc+ &lt;code&gt;f&lt;/code&gt;&lt;br&gt;
  3. ⌘←(cmd + left arrow) - set action to "Send Hex Code" - value is &lt;code&gt;0x01&lt;/code&gt;&lt;br&gt;
  4. ⌘→(cmd + right arrow) - set action to "Send Hex Code" - value is &lt;code&gt;0x05&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#oh-my-zsh"&gt;
  &lt;/a&gt;
  Oh My Zsh 😱
&lt;/h3&gt;

&lt;p&gt;oh-my-zsh is a framework for managing zsh configurations. zsh is the default shell on macos these days.&lt;br&gt;
There are hundreds themes and plugins and you can configure almost everything inside.&lt;/p&gt;

&lt;p&gt;Lets start by installing oh-my-zsh:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We also need fzf for fuzzy search (some plugins need it):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install fzf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#themes"&gt;
  &lt;/a&gt;
  Themes:
&lt;/h4&gt;

&lt;p&gt;There are &lt;a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes"&gt;so many oh-my-zsh themes&lt;/a&gt; that you can use. I like &lt;code&gt;intheloop&lt;/code&gt;, but you can try others and find the one that you like the most.&lt;br&gt;
To set the relevant theme open your &lt;code&gt;~/.zshrc&lt;/code&gt; file and change the value of &lt;code&gt;ZSH_THEME&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ZSH_THEME="intheloop"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#plugins"&gt;
  &lt;/a&gt;
  Plugins:
&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;zsh-autosuggestions&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install zsh-autosuggestions
echo "source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh" &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;zsh-syntax-highlighting&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install zsh-syntax-highlighting
echo "source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;zsh-yarn-autocompletions&lt;/strong&gt; - not in brew, so we need to install it manually:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download the mac zip/targz file from the release age: &lt;a href="https://github.com/g-plane/zsh-yarn-autocompletions/releases"&gt;https://github.com/g-plane/zsh-yarn-autocompletions/releases&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Extract it&lt;/li&gt;
&lt;li&gt;Run the following: &lt;code&gt;./install.sh $ZSH_CUSTOM/plugins&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Once installed - add it to your &lt;code&gt;plugins&lt;/code&gt; section in the &lt;code&gt;~/.zshrc&lt;/code&gt; file:
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plugins=(
# some plugins
yarn-autocompletions
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is an important step - to allow running this file you need to set some permissions.&lt;br&gt;
Open Finder, go to &lt;code&gt;~/.oh-my-zsh/custom/plugins/yarn-autocompletions&lt;/code&gt;, hold the shift key, right-click on the &lt;code&gt;yarn-autocompletions&lt;/code&gt; file, click &lt;code&gt;open&lt;/code&gt; (while holding the shift-key).&lt;/p&gt;

&lt;p&gt;By default - oh-my-zsh comes with many other plugins. You just need to enable them. The complete list can be found in your &lt;code&gt;~/.oh-my-zsh/plugins&lt;/code&gt; folder, and you can just edit your &lt;code&gt;~/.zshrc&lt;/code&gt; file and add them as part of the plugins config.&lt;/p&gt;

&lt;p&gt;Here is a good list to begin with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;plugins=(
# other plugins
aws
git
npm
yarn
zsh-interactive-cd
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-fuck"&gt;
  &lt;/a&gt;
  The Fuck
&lt;/h3&gt;

&lt;p&gt;The Fuck is a great tool that corrects errors in previous console commands.&lt;/p&gt;

&lt;p&gt;Here is an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;➜ git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master


➜ fuck
git push --set-upstream origin master [enter/↑/↓/ctrl+c]
Counting objects: 9, done.
...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To install just run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install thefuck
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Do you think I'm missing something? Let me know in the comments.&lt;/p&gt;




Cover photo by &lt;a href="https://unsplash.com/@cgower"&gt;Christopher Gower @ unsplash&lt;/a&gt;

</description>
      <category>productivity</category>
      <category>tutorial</category>
      <category>macos</category>
      <category>developers</category>
    </item>
    <item>
      <title>SWE 101 : Programming Terms Explained in simplest form</title>
      <author>Uday Yadav</author>
      <pubDate>Sun, 25 Jul 2021 07:40:10 +0000</pubDate>
      <link>https://dev.to/dev117uday/swe-101-programming-terms-explained-in-simplest-form-401h</link>
      <guid>https://dev.to/dev117uday/swe-101-programming-terms-explained-in-simplest-form-401h</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7diBrh4y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pompixb3i6q6c39ac5gb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7diBrh4y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pompixb3i6q6c39ac5gb.png" alt="banner"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What is idempotent again ?&lt;/p&gt;

&lt;p&gt;Closure, Memoization, Idempotence : Decoding and understanding programming terms one by one in simplest definition&lt;/p&gt;

&lt;p&gt;All code written in this javascript, but dont worry about the language, syntax is kept super simple. For practise, you can implement them in your favourite programming language.&lt;/p&gt;

&lt;p&gt;Lets start with first class functions&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#first-class-function"&gt;
  &lt;/a&gt;
  First Class Function
&lt;/h1&gt;

&lt;p&gt;A programming language is said to have first class functions if it treat its functions as first class citizens&lt;/p&gt;

&lt;p&gt;What are first class citizens : something that can be&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;passed as an argument&lt;/li&gt;
&lt;li&gt;returned from a function&lt;/li&gt;
&lt;li&gt;assigned to a variable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whatever satisfies the above 3 properties in you programming language can be called as first class citizen. Lets take a look at with examples&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#assigning-function-to-a-variable"&gt;
  &lt;/a&gt;
  Assigning Function to a variable
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="c1"&gt;// Assigned to another variable&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;      

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#passed-as-an-argument-aka-high-order-functions"&gt;
  &lt;/a&gt;
  Passed as an Argument aka High order functions
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// sqr the the passed square function&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;my_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
   &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; 

   &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
       &lt;span class="c1"&gt;// the passed function is used here&lt;/span&gt;
       &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;sqr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt; 
   &lt;span class="p"&gt;}&lt;/span&gt; 
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// square function is passed as argument&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;squares&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;my_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;square&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;squares&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#function-as-return%C2%A0type"&gt;
  &lt;/a&gt;
  Function as Return Type
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;log_message&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Log : &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
   &lt;span class="p"&gt;}&lt;/span&gt; 
   &lt;span class="c1"&gt;//  this is a function, returning from parent functions&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;log_message&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="nx"&gt;logHello&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;logger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="nx"&gt;logHello&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Before moving on, please read the above and try to understand the concept, it would be helpfull&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#closure"&gt;
  &lt;/a&gt;
  Closure
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;They are similar to functions returned from another function but captures the internal state of parent function at the time of invoked.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A closure is a record storing a function together with an environment, a mapping associating each free variable of the function with the value of storage location to which the name was bound when then the closure was created. ( Kinda formal , read below and look at code snippet )&lt;/li&gt;
&lt;li&gt;A closure, unlike a plain function, allows the function to access those captured and closed variables when the function is invoked outside the scope.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;outer_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;inner_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Look at point 2 from definition&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;inner_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// invoked from outside&lt;/span&gt;
&lt;span class="nx"&gt;outer_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#another-example-of-closure"&gt;
  &lt;/a&gt;
  Another Example of Closure
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;outer_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;msg&lt;/span&gt;
   &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;inner_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;inner_function&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;outer_function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#immutable-and%C2%A0mutable"&gt;
  &lt;/a&gt;
  Immutable and Mutable
&lt;/h1&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// strings in js are immutable &lt;/span&gt;
&lt;span class="c1"&gt;// they cannot be changed once initialised&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;uday Yadav&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;U&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;// this makes not difference&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;// still small case 'u'&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt; 

&lt;span class="c1"&gt;// array in js is mutable &lt;/span&gt;
&lt;span class="c1"&gt;// they can be changed once created&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#memoization"&gt;
  &lt;/a&gt;
  Memoization
&lt;/h1&gt;

&lt;p&gt;Some operations are expensive to preform, so we store the results of them in some form of temporary storage and when required to recalculate, first find them in the temporary storage.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;answer cache : &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
       &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;answer : &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;expensive_compute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#idempotence"&gt;
  &lt;/a&gt;
  Idempotence
&lt;/h1&gt;

&lt;p&gt;The property of certain operations in mathematics and computer science, that can be applied multiple times without changing the result without initial application&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Not Idempotent example&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#ephemeral"&gt;
  &lt;/a&gt;
  Ephemeral
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;synonyms to temporary&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#anonymous-functions"&gt;
  &lt;/a&gt;
  Anonymous Functions
&lt;/h1&gt;

&lt;p&gt;Function without a name, also known as lambda function in &lt;br&gt;
Python&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;mapped&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;arr&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="c1"&gt;// x =&amp;gt;  is a function without a name&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;mapped&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#predicate"&gt;
  &lt;/a&gt;
  Predicate
&lt;/h1&gt;

&lt;p&gt;Functions that return true or false depending on the input. They usually start with &lt;em&gt;is&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;_type&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;_type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;makeSound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;isCat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animal&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; MEOW ! &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; NOT CAT ! &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;isCat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;animal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;animal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newCat&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Animal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cat&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;makeSound&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newCat&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#parsing-and-stringify"&gt;
  &lt;/a&gt;
  Parsing and Stringify
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Parsing : converting string to some object&lt;/li&gt;
&lt;li&gt;Stringify : converting some object to string
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Uday Yadav&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Gender&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Male&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;dataReturns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dataReturns&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;dataReturns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;More about me : &lt;a href="https://uday-yadav.web.app/"&gt;https://uday-yadav.web.app/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to use Tailwind CSS in Astro</title>
      <author>Chris Bongers</author>
      <pubDate>Sun, 25 Jul 2021 07:35:13 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/how-to-use-tailwind-css-in-astro-1fnd</link>
      <guid>https://dev.to/dailydevtips1/how-to-use-tailwind-css-in-astro-1fnd</guid>
      <description>&lt;p&gt;To be honest, it's never been easier to include Tailwind CSS in a framework.&lt;/p&gt;

&lt;p&gt;Why? Astro has &lt;a href="https://docs.astro.build/guides/styling#-tailwind"&gt;build in support for Tailwind&lt;/a&gt;! 🥳&lt;br&gt;
And yes, even the &lt;a href="https://daily-dev-tips.com/posts/why-tailwind-jit-compiler-is-amazing/"&gt;Tailwind JIT compiler&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I'll write down this quick guide to get you started setting up Tailwind CSS in an Astro project.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#installing-tailwind-css-in-an-astro-project"&gt;
  &lt;/a&gt;
  Installing Tailwind CSS in an Astro project
&lt;/h2&gt;

&lt;p&gt;Let's start with a basic Astro project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;astro-tailwind &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;astro-tailwind
npm init astro
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can choose any of the templates. It doesn't matter, actually.&lt;/p&gt;

&lt;p&gt;Now let's install Tailwind CSS.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-D&lt;/span&gt; tailwindcss
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is to create a &lt;code&gt;tailwind.config.js&lt;/code&gt; file to tell Tailwind which files to purge and enable the JIT compiler.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;purge&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./public/**/*.html&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./src/**/*.{astro,js,jsx,ts,tsx,vue}&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we can Astro that it should use this Tailwind config file by modifying the &lt;code&gt;astro.config.js&lt;/code&gt; file and add this to the &lt;code&gt;devOptions&lt;/code&gt; section.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;devOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;tailwindConfig&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./tailwind.config.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now edit the &lt;code&gt;global.css&lt;/code&gt; file in the &lt;code&gt;public/style&lt;/code&gt; directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@tailwind&lt;/span&gt; &lt;span class="n"&gt;utilities&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's modify our &lt;code&gt;src/pages/index.astro&lt;/code&gt; to test out how it works.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-gradient-to-br from-indigo-900 to-green-900 min-h-screen overflow-auto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container max-w-5xl mx-auto px-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-4/5 mx-auto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h1&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mt-32 text-white text-6xl font-bold"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"60"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"80"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/logo.svg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Astro logo"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt; Welcome to
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://astro.build/"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Astro&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-4/5 my-10 mx-auto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h3&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-gray-300"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        Build faster websites with less
        &lt;span class="nt"&gt;&amp;lt;strong&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-white"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;client-side Javascript&lt;span class="nt"&gt;&amp;lt;/strong&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        This is how easy it is to get started
      &lt;span class="nt"&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"w-2/5 mx-auto bg-black text-white p-10 leading-10 rounded-2xl shadow-lg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      mkdir astro&lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      cd astro&lt;span class="nt"&gt;&amp;lt;br&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
      npm init astro
    &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this results in the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---a4cHz98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626673864896/iu-ZiwbwcQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---a4cHz98--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626673864896/iu-ZiwbwcQ.png" alt="Tailwind starter in Astro"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also download this project from &lt;a href="https://github.com/rebelchris/astro-tailwind"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>astro</category>
      <category>tailwindcss</category>
    </item>
    <item>
      <title>#2) Explain Hoisting in JavaScript❓</title>
      <author>Mayank Yadav</author>
      <pubDate>Sun, 25 Jul 2021 06:00:27 +0000</pubDate>
      <link>https://dev.to/myk/2-explain-hoisting-in-javascript-4c58</link>
      <guid>https://dev.to/myk/2-explain-hoisting-in-javascript-4c58</guid>
      <description>&lt;p&gt;✔Hoisting is a default behavior of JavaScript where all the &lt;br&gt;
variable and function declarations are moved on top.&lt;/p&gt;

&lt;p&gt;This means that irrespective of where the variables and functions are declared, they are moved on top of the scope.&lt;/p&gt;

&lt;p&gt;--&amp;gt;The scope can be both local and global.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T5JLElNk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr6i37buts30e0lc48xr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T5JLElNk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sr6i37buts30e0lc48xr.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note:
&lt;/h1&gt;

&lt;p&gt;✔Variable initializations are not hoisted, only variable declarations are hoisted.&lt;/p&gt;

&lt;p&gt;✔Using a let variable before it is declared will result in a ReferenceError.&lt;/p&gt;

&lt;p&gt;✔Using a const variable before it is declared, is a SyntaxError.&lt;/p&gt;

&lt;p&gt;✔To avoid hoisting, you can run JavaScript in strict mode by using “use strict” on top of the code.&lt;/p&gt;




</description>
      <category>javascript</category>
      <category>beginners</category>
    </item>
    <item>
      <title>AWS EKS With Amazon EC2 Spot Instances</title>
      <author>Vu Dao</author>
      <pubDate>Sun, 25 Jul 2021 05:53:57 +0000</pubDate>
      <link>https://dev.to/awscommunity-asean/aws-eks-with-amazon-ec2-spot-instances-405o</link>
      <guid>https://dev.to/awscommunity-asean/aws-eks-with-amazon-ec2-spot-instances-405o</guid>
      <description>&lt;h2&gt;
  &lt;a href="#abstract"&gt;
  &lt;/a&gt;
  Abstract
&lt;/h2&gt;

&lt;p&gt;This post provides an overview of Amazon EC2 Spot Instances, as well as best practices for using them on AWS EKS effectively&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#What-to-know-about-spot-instances?"&gt;What to know about spot instances?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#The-life-cycle-of-a-Spot-Instance"&gt;The life cycle of a Spot Instance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#How-to-Launch-Spot-Instances?"&gt;How to Launch Spot Instances&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Spot-Instance-Termination-Notice"&gt;Spot Instance Termination Notice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Deploy-the-node-termination-handler"&gt;Deploy the node termination handler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Spot-Instance-Best-Practices"&gt;Spot Instance Best Practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Solution"&gt;Solution&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#-Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#what-to-know-about-spot-instances"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;What to know about spot instances?&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dxQRXqpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/spot_intro.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dxQRXqpd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/spot_intro.png%3Fraw%3Dtrue" alt="Alt-Test"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-life-cycle-of-a-spot-instance"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;The life cycle of a Spot Instance&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;1. You (or an application running on your behalf) submits a bid to run a desired number of EC2 instances of a particular type. The bid includes the price that you are willing to pay to use the instance for an hour.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. When your bid price exceeds the current Spot price (which varies based on supply and demand), your instances are run.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Spot instance is interrupted or reclaimed for one of following reasons:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Price – The Spot price is greater than your maximum price.&lt;/li&gt;
&lt;li&gt;Capacity – If there are not enough unused EC2 instances to meet the demand for On-Demand Instances, Amazon EC2 interrupts Spot Instances. The order in which the instances are interrupted is determined by Amazon EC2.&lt;/li&gt;
&lt;li&gt;Constraints – If your request includes a constraint such as a launch group or an Availability Zone group, these Spot Instances are terminated as a group when the constraint can no longer be met.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-launch-spot-instances"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;How to Launch Spot Instances&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The most recommended service for launching Spot Instances is Amazon EC2 Auto Scaling especially Amazon EKS node group&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you require more flexibility, have built your own instance launch workflows, or want to control individual aspects of the instance launches or the scaling mechanisms, you can use EC2 Fleet in Instant mode.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sf6Mj_4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/launch_spot.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sf6Mj_4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/launch_spot.png%3Fraw%3Dtrue" alt="Alt-text"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#spot-instance-termination-notice"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Spot Instance Termination Notice&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The best way for you to gracefully handle Spot Instance interruptions is to architect your application to be fault-tolerant. To accomplish this, you can take advantage of Spot Instance interruption notices. A Spot Instance interruption notice is a warning that is issued &lt;strong&gt;two minutes&lt;/strong&gt; before Amazon EC2 stops or terminates your Spot Instance.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's recommended to check for these interruption notices every 5 seconds. eg. &lt;code&gt;Polling http://169.254.169.254/latest/meta-data/spot/termination-time every 5 second(s)&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#deploy-the-node-termination-handler"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Deploy the node termination handler&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We will deploy a pod on each Spot Instance to detect the instance termination notification signal so that we can both terminate gracefully any pod that was running on that node, drain from load balancers and redeploy applications elsewhere in the cluster.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The Helm chart we will use to deploy AWS Node Termination Handler on each Spot Instance uses a DaemonSet. This will monitor the EC2 meta-data service on each of the EC2 Spot Instances to capture EC2 interruption notices.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Within the Node Termination Handler DaemonSet, the workflow can be summarized as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Identify that a Spot Instance is being reclaimed.&lt;/li&gt;
&lt;li&gt;Use the 2-minute notification window to gracefully prepare the node for termination.&lt;/li&gt;
&lt;li&gt;Taint the node and cordon it off to prevent new pods from being placed.&lt;/li&gt;
&lt;li&gt;Drain connections on the running pods.&lt;/li&gt;
&lt;li&gt;Replace the pods on remaining nodes to maintain the desired capacity.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In this post, I would like to enable SpotInterruptionDraining on SPOT instances only. Read more &lt;a href="https://github.com/aws/aws-node-termination-handler"&gt;AWS Node Termination Handler&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using helm deploy &lt;code&gt;aws-node-termination-handler&lt;/code&gt; with enable &lt;code&gt;enableSpotInterruptionDraining&lt;/code&gt; and &lt;code&gt;enableRebalanceMonitoring&lt;/code&gt;, plus webhookURL to send notification to slack, apply for spot instances only. We use &lt;code&gt;--set nodeSelector.lifecycle=spot&lt;/code&gt; to tell the all daemon sets where to place the node-termination-handler pods but the autoscaling group need to add the label &lt;code&gt;lifecycle=spot&lt;/code&gt; to it nodes or you can use any labels that matche the requirement&lt;br&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;helm repo add eks https://aws.github.io/eks-charts
helm upgrade --install aws-node-termination-handler \
  --namespace kube-system \
  --set enableSpotInterruptionDraining="true" \
  --set enableRebalanceMonitoring="true" \
  --set enableScheduledEventDraining="false" \
  --set nodeSelector.lifecycle=spot \
  --set webhookURL=https://hooks.slack.com/services/&amp;lt;ID&amp;gt; \
  eks/aws-node-termination-handler
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Check the pods
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ kubectl get pod -n kube-system |grep aws-node-termination-handler
aws-node-termination-handler-2gsq2              1/1     Running   0          2m      10.3.254.49    ip-10-3-254-49.ap-northeast-2.compute.internal    &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
aws-node-termination-handler-8tn5w              1/1     Running   0          2m      10.3.158.85    ip-10-3-158-85.ap-northeast-2.compute.internal    &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
aws-node-termination-handler-j8xf6              1/1     Running   0          2m      10.3.141.203   ip-10-3-141-203.ap-northeast-2.compute.internal   &amp;lt;none&amp;gt;           &amp;lt;none&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Slack alarm&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rebalance recommendation
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_n4sCILR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/slack1.png%3Fraw%3Dtrue" alt="slack"&gt;
&lt;/li&gt;
&lt;li&gt;Spot interruption event
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EKDwQjmB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/spot_interrupt.jpg%3Fraw%3Dtrue" alt="interrupt"&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check CPU and mem cost by the pod&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kG6Z7bK3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/cpu_mem_cost.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kG6Z7bK3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/cpu_mem_cost.png%3Fraw%3Dtrue" alt="cost"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#spot-instance-best-practices"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Spot Instance Best Practices&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Flexible about instance types, for example, my applications almost run in java and they require much memory so I choose R5 type and its family could be r5.xlarge, r5a.xlarge, etc.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flexible of Availability Zone, here I give the case of using EKS node group.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Configure multiple node groups, scope each group to a single Availability Zone, and enable the &lt;code&gt;--balance-similar-node-groups&lt;/code&gt; feature in &lt;a href="https://dev.to/awscommunity-asean/kubernetes-cluster-autoscaler-with-irsa-3bg5"&gt;cluster autoscaler&lt;/a&gt; so that we will have at least each node in different zones and guarentee the HA. Especially when the PVC is attached to an AZ, the pod need to be start on a spot instance in same zone.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;eg. Create two node groups in different AZ using AWS cdk&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;        self.eks_cluster.add_nodegroup_capacity(
        id="EksNodeGroupStateless",
        capacity_type=eks.CapacityType.SPOT,
        desired_size=1,
        disk_size=20,
        instance_types=[ec2.InstanceType("r5a.xlarge"), ec2.InstanceType("r5.xlarge")],
        labels={'role': 'worker', 'type': 'stateless', 'lifecycle': 'spot'},
        max_size=2,
        min_size=1,
        nodegroup_name='eks-node-group',
        node_role=worker_role,
        subnets=ec2.SubnetSelection(subnet_type=ec2.SubnetType.PRIVATE, availability_zones=['ap-northeast-2a'])
        )

        self.eks_cluster.add_nodegroup_capacity(
        id="EksNodeGroupStateful",
        capacity_type=eks.CapacityType.SPOT,
        desired_size=1,
        disk_size=20,
        instance_types=[ec2.InstanceType("r5a.xlarge"), ec2.InstanceType("r5.xlarge")],
        labels={'role': 'worker', 'type': 'stateful', 'lifecycle': 'spot'},
        max_size=2,
        min_size=1,
        nodegroup_name='eks-node-group-stateful',
        node_role=worker_role,
        subnets=ec2.SubnetSelection(subnet_type=ec2.SubnetType.PRIVATE, availability_zones=['ap-northeast-2b'])
        )
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Prepare individual instances for interruptions: The best way for you to gracefully handle Spot Instance interruptions is to architect your application to be fault-tolerant, in EKS we can use HPA to ensure the number of available pods if one node down, and use cluster autoscaler to request new node.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Max price&lt;/strong&gt;: We recommend that you do not specify a maximum price, but rather let the maximum price default to the On-Demand price. A high maximum price does not increase your chances of launching a Spot Instance. See &lt;a href="https://aws.amazon.com/blogs/compute/new-amazon-ec2-spot-pricing/"&gt;EC2 Spot pricing model&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPDNzwVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/pricing_history.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZPDNzwVd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-eks-the-hard-way/blob/master/spot-instance/img/pricing_history.png%3Fraw%3Dtrue" alt="Spot Instance pricing history"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Ref:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://dev.to/awsmenacommunity/overview-of-amazon-ec2-spot-instances-3kph"&gt;https://dev.to/awsmenacommunity/overview-of-amazon-ec2-spot-instances-3kph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://instances.vantage.sh/"&gt;https://instances.vantage.sh/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://d1.awsstatic.com/events/reinvent/2019/REPEAT_1_Save_up_to_90_percent_and_run_production_workloads_on_Spot_Instances_CMP331-R1.pdf"&gt;https://d1.awsstatic.com/events/reinvent/2019/REPEAT_1_Save_up_to_90_percent_and_run_production_workloads_on_Spot_Instances_CMP331-R1.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;div class="ltag__user ltag__user__id__512906"&gt;
  
    .ltag__user__id__512906 .follow-action-button {
      background-color: #000000 !important;
      color: #62df88 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/vumdao" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bGwkUMWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ugeYdWM---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/512906/2472752c-cfd5-4e02-b3d8-55b790178884.png" alt="vumdao image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/vumdao"&gt;Vu Dao&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/vumdao"&gt;Awesome Devops || AWS SA || CloudOpz&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;




&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vumdao"&gt;
        vumdao
      &lt;/a&gt; / &lt;a href="https://github.com/vumdao/vumdao"&gt;
        vumdao
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>aws</category>
      <category>eks</category>
      <category>cloudopz</category>
      <category>spot</category>
    </item>
    <item>
      <title>5 UI Tips to Become a Better Front End Developer</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 25 Jul 2021 05:43:29 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/5-ui-tips-to-become-a-better-front-end-developer-1ae1</link>
      <guid>https://dev.to/ruppysuppy/5-ui-tips-to-become-a-better-front-end-developer-1ae1</guid>
      <description>&lt;p&gt;Often while starting out, beginners struggle to create &lt;em&gt;captivating&lt;/em&gt; &lt;strong&gt;UI&lt;/strong&gt; that gets users hooked to their applications. Today we are going to fix just that. &lt;/p&gt;

&lt;p&gt;But before starting I would like to point out that there is no &lt;strong&gt;One Right Answer&lt;/strong&gt; to Designing, anything that looks pleasing to the eye of a large majority of the people is considered &lt;em&gt;good design&lt;/em&gt;. In this article, we would go over 5 Tips that are considered &lt;em&gt;Good Design Practices&lt;/em&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-maintain-consistent-alignment"&gt;
  &lt;/a&gt;
  1. Maintain Consistent Alignment
&lt;/h1&gt;

&lt;p&gt;A lot of sites follow &lt;em&gt;Inconsistent Alignment&lt;/em&gt;, with different alignments for the &lt;em&gt;Navbar&lt;/em&gt; and the &lt;em&gt;Main Content&lt;/em&gt; of the site. This leads the websites to look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bol43x1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brj26gmvhhh9k0vuxywx.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bol43x1k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/brj26gmvhhh9k0vuxywx.PNG" alt="Alignment Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The example below looks much more structured:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FxNvmE6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/maak0kguwy4j4yofaj3s.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FxNvmE6S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/maak0kguwy4j4yofaj3s.PNG" alt="Alignment Fix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-space-out-your-content"&gt;
  &lt;/a&gt;
  2. Space Out Your Content
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--btBxw7nf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0e6keqxr8zrnbs2q90vk.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--btBxw7nf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0e6keqxr8zrnbs2q90vk.PNG" alt="Spacing Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rjer6Q----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwn14a58fy7th26rue27.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rjer6Q----/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lwn14a58fy7th26rue27.PNG" alt="Spacing Fix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is one of the things you develop an eye for by default, as you gain more experience in developing more websites. As you can see here, the one with more spaced-out content looks much more professional. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; More spacing isn't always what is required, for example, you can get away with little spacing between the &lt;em&gt;Title&lt;/em&gt; and &lt;em&gt;Date&lt;/em&gt; in the case of a Blog website. &lt;/p&gt;

&lt;p&gt;Something that goes hand-in-hand with the previous point, maintain consistent spacing: the &lt;em&gt;padding/margin&lt;/em&gt; in the left &amp;amp; right sides should be equal, same is the case for the &lt;em&gt;padding/margin&lt;/em&gt; in the top &amp;amp; bottom.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-color-and-contrast"&gt;
  &lt;/a&gt;
  3. Color and Contrast
&lt;/h1&gt;

&lt;p&gt;Color is an inherent part of design and is simply the most important thing to keep in mind while developing a modern &lt;strong&gt;UI&lt;/strong&gt;, without proper Color &amp;amp; Contrast, even the websites with the best &lt;strong&gt;UI&lt;/strong&gt; end up looking like crap. You can see the significant improvement in the picture below, just by changing the colors:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D9zoEl5---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/130grpl85ak7ddem42jz.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D9zoEl5---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/130grpl85ak7ddem42jz.PNG" alt="Color Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AEiQ1T-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7serm7wplr2nih18715y.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AEiQ1T-z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7serm7wplr2nih18715y.PNG" alt="Color Fix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can use Tools like &lt;a href="https://coolors.co/6e2594-ecd444-808080-000000-ffffff"&gt;Coolors&lt;/a&gt; to generate colors that go well with each other. It's a good idea to limit the &lt;em&gt;number of colors&lt;/em&gt; you use to &lt;strong&gt;Two&lt;/strong&gt; (you can very well use different &lt;em&gt;hues&lt;/em&gt; of the same colors and some generic colors like &lt;em&gt;white&lt;/em&gt;, &lt;em&gt;black&lt;/em&gt; &amp;amp; &lt;em&gt;grey&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;For &lt;strong&gt;Web Accessibility&lt;/strong&gt;, &lt;strong&gt;WCAG 2.0 level AA&lt;/strong&gt; requires a contrast ratio of at least &lt;strong&gt;4.5:1&lt;/strong&gt; for normal text and &lt;strong&gt;3:1&lt;/strong&gt; for large text. &lt;strong&gt;WCAG 2.1&lt;/strong&gt; requires a contrast ratio of at least &lt;strong&gt;3:1&lt;/strong&gt; for graphics and user interface components (such as form input borders). &lt;strong&gt;WCAG Level AAA&lt;/strong&gt; requires a contrast ratio of at least &lt;strong&gt;7:1&lt;/strong&gt; for normal text and &lt;strong&gt;4.5:1&lt;/strong&gt; for large text.&lt;/p&gt;

&lt;p&gt;To check your Website's &lt;strong&gt;Accessibility&lt;/strong&gt;, you can use tools like &lt;strong&gt;Lighthouse&lt;/strong&gt; (from &lt;strong&gt;Chrome Dev Tools&lt;/strong&gt;) and &lt;a href="https://wave.webaim.org/"&gt;Wave&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#4-typography"&gt;
  &lt;/a&gt;
  4. Typography
&lt;/h1&gt;

&lt;p&gt;You can easily get away with using only one &lt;strong&gt;Font Family&lt;/strong&gt; for your entire website. At most you should try to keep the &lt;strong&gt;Font Families&lt;/strong&gt; limited to &lt;strong&gt;Two&lt;/strong&gt; as using multiple &lt;strong&gt;fonts&lt;/strong&gt; can easily overwhelm the user and even make the website look unstructured and unprofessional.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X6Ip4qET--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubevxxbtkftdasb1fc0n.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X6Ip4qET--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ubevxxbtkftdasb1fc0n.PNG" alt="Typography Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--83TzbB16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5bzcw2tvxrwu32jl0jb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--83TzbB16--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t5bzcw2tvxrwu32jl0jb.PNG" alt="Typography Fix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-visual-hierarchy"&gt;
  &lt;/a&gt;
  5. Visual Hierarchy
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Visual Hierarchy&lt;/strong&gt; is also one of the most crucial components of an amazing &lt;strong&gt;UI&lt;/strong&gt;. There is a great quote by a &lt;em&gt;Great Developer&lt;/em&gt; (read: By Me 😜):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A great developer is someone who makes implied actions evident&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Visual Hierarchy&lt;/strong&gt; is used to highlight certain parts of the Website which you want the users to focus on. You can employ several tactics for making users focus on a part of the site.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;No Focus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQBsiBfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7ewpawl3x88nt0by6u0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZQBsiBfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/t7ewpawl3x88nt0by6u0.png" alt="No Focus"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Focus using Contrast&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h1gaYOmd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1l8q3zgmt0xy6vqmae3t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h1gaYOmd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1l8q3zgmt0xy6vqmae3t.png" alt="Focus using Contrast"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Focus using Color&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ydZj0c9u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmb3m84r0ctm9e3kt75a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ydZj0c9u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pmb3m84r0ctm9e3kt75a.png" alt="Focus using Color"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Focus using Scale&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S0bMMl08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wky5cy2jlokf1vxvo7w0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S0bMMl08--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wky5cy2jlokf1vxvo7w0.png" alt="Focus using Scale"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Focus using Contrast, Color &amp;amp; Scale&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yrXYAjLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hcaq2u9bdmcxdx3bdlt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yrXYAjLz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3hcaq2u9bdmcxdx3bdlt.png" alt="Focus using Contrast, Color &amp;amp; Scale"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Visual Hierarchy&lt;/strong&gt; provides information to the users where they should look at&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MmJgBJLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0mkh6f49887msf28kd6.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MmJgBJLo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y0mkh6f49887msf28kd6.PNG" alt="Visual Hierarchy Issue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this example, it's not evident in one glance where we should focus our attention on. This can easily be improved by making some minor changes:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0WX5-JUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fad4wub4bhkqp9bxcar2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0WX5-JUb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fad4wub4bhkqp9bxcar2.PNG" alt="Visual Hierarchy Fix"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In this article, we went through some &lt;strong&gt;UI&lt;/strong&gt; concepts that help you develop a more attractive &lt;strong&gt;UI&lt;/strong&gt;. I would like to remind you &lt;strong&gt;UI&lt;/strong&gt; design is quite subjective and as stated in the &lt;em&gt;Intro&lt;/em&gt;, there is no &lt;strong&gt;ONE&lt;/strong&gt; correct answer. Hope you will employ these concepts in your applications and make awe-inspiring websites :)&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a Digital Nomad in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For the past few weeks, I had a lot of people reach out to me asking these questions hundreds of times, so I decided to add a dedicated &lt;strong&gt;FAQ&lt;/strong&gt; section for them&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
First get the fundamentals of &lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt;, &lt;strong&gt;JS&lt;/strong&gt; down; Learn any &lt;em&gt;front-end framework/library&lt;/em&gt; (&lt;strong&gt;React&lt;/strong&gt;, &lt;strong&gt;Vue&lt;/strong&gt;, &lt;strong&gt;Angular&lt;/strong&gt;); Then keep making &lt;strong&gt;Projects&lt;/strong&gt; or make &lt;strong&gt;Open Source Contributions&lt;/strong&gt; to attain mastery.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Relevant Article Links&lt;/strong&gt;&lt;br&gt;
    1. &lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;br&gt;
    2. &lt;a href="https://dev.to/ruppysuppy/zero-to-hero-get-started-with-open-source-10b7"&gt;Get Started With Open Source&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;
Sorry, I already am under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Connect to me on&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>ui</category>
      <category>ux</category>
      <category>webdesign</category>
    </item>
  </channel>
</rss>
