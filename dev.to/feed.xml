<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Last Chance to Join the 2021 GitHub Actions Hackathon on DEV!</title>
      <author>Ben Halpern</author>
      <pubDate>Fri, 03 Dec 2021 18:43:00 +0000</pubDate>
      <link>https://dev.to/devteam/last-chance-to-join-the-2021-github-actions-hackathon-on-dev-1aje</link>
      <guid>https://dev.to/devteam/last-chance-to-join-the-2021-github-actions-hackathon-on-dev-1aje</guid>
      <description>&lt;h4&gt;
  &lt;a href="#this-is-your-final-reminder-that-the-2021-github-actions-hackathon-on-dev-closes-on-wednesday-december-8th-2021-1159-pm-pt-8-am-utc-the-following-day"&gt;
  &lt;/a&gt;
  &lt;strong&gt;This is your final reminder that the 2021 GitHub Actions Hackathon on DEV closes on Wednesday, December 8th, 2021 @ 11:59 PM PT&lt;/strong&gt; &lt;em&gt;(8 AM UTC the following day)&lt;/em&gt;
&lt;/h4&gt;




&lt;p&gt;The 2021 GitHub Actions Hackathon is nearing an end and we've already seen so many incredible submissions from the community (seriously — go check them out &lt;a href="https://dev.to/t/actionshackathon21"&gt;here&lt;/a&gt;). With that said, we know that early submissions aren't everyone's style and some of you are more of the last minute types 😉 So consider this your official nudge to get that GitHub Actions Hackathon project in while you can! &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;As a reminder, all participants with a valid submission will receive a limited edition profile badge and a sticker pack. 10 runners up will win all of that plus $250 USD cash (or the equivalent value in your local currency) and a $150 USD gift code to the &lt;a href="https://shop.dev.to/"&gt;DEV shop&lt;/a&gt;. Five lucky grand prize winners will receive a sticker pack, a limited-edition profile badge, $1,500 USD in cash, and $300 USD at the DEV shop! &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4"&gt;&amp;gt;&amp;gt; Click here to find out how to participate&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Want to share an update on your project or connect with other participants? Check out the &lt;a href="https://dev.to/devteam/share-your-github-actions-hackathon-2021-updates-57k"&gt;community update thread&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Need help with your submission? Have a question about the hackathon rules or GitHub Actions? Head over to the &lt;a href="https://dev.to/devteam/github-actions-hackathon-2021-help-thread-1lk0"&gt;help thread&lt;/a&gt; to connect with the DEV and GitHub teams directly. &lt;/p&gt;

&lt;p&gt;Good luck, all our participants! We can't wait to announce the winners later this month 🎉 &lt;/p&gt;




&lt;p&gt;&lt;em&gt;Click &lt;a href="https://dev.to/devteam/join-us-for-the-2021-github-actions-hackathon-on-dev-4hn4"&gt;here&lt;/a&gt; to read the hackathon rules and get started.&lt;/em&gt; ✨ &lt;/p&gt;

</description>
      <category>meta</category>
      <category>actionshackathon21</category>
    </item>
    <item>
      <title>Automating Terraform With Github Actions</title>
      <author>Mariam Adedeji</author>
      <pubDate>Fri, 03 Dec 2021 18:35:36 +0000</pubDate>
      <link>https://dev.to/mariehposa/automating-terraform-with-github-actions-1hc3</link>
      <guid>https://dev.to/mariehposa/automating-terraform-with-github-actions-1hc3</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;A project to demonstrate how to automate terraform workflow with Github Actions.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Login to your AWS account and generate &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;After that, login to your Terraform Cloud account. Create a new workspace and select &lt;strong&gt;API-driven workflow&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Then navigate to the &lt;strong&gt;Variables&lt;/strong&gt; tab and click on &lt;strong&gt;Add variable&lt;/strong&gt;. Add &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt; with their respective values.&lt;/li&gt;
&lt;li&gt;From your Terraform Cloud User Settings, click on &lt;strong&gt;Tokens&lt;/strong&gt; and generate an API token named &lt;code&gt;GitHub Actions&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add the token to your Github repository as a secret. Name the secret &lt;code&gt;TF_API_TOKEN&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Clone and open your Github repo on your code editor.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Checkout to a new branch with &lt;code&gt;git checkout -b &amp;lt;branch-name&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add your changes with &lt;code&gt;git add .&lt;/code&gt; and commit the changes with a message using &lt;code&gt;git commit -m "&amp;lt;commit-message&amp;gt;"&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then push your changes with &lt;code&gt;git push&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Go back to the Github repository and generate a pull request from the new branch. You can view the status of the job through the pull request created, Actions tab or the Terraform Cloud workspace.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Then merge the pull request.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;DIY Deployments&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mariehposa"&gt;
        mariehposa
      &lt;/a&gt; / &lt;a href="https://github.com/mariehposa/terraform-automation"&gt;
        terraform-automation
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Terraform Automation&lt;/h1&gt;
&lt;p&gt;A project to demonstrate how to automate terraform workflow with Github Actions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Github Actions after creating a pull request
&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/33374159/143871982-d2972a02-f2fa-458e-8d79-3cde681cc7ed.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9lCvzku1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/143871982-d2972a02-f2fa-458e-8d79-3cde681cc7ed.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Github Actions after Merging to &lt;strong&gt;main&lt;/strong&gt; branch
&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/33374159/143872424-59e53e0e-6475-4b81-a853-c5c147ec645f.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p2vUiL33--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33374159/143872424-59e53e0e-6475-4b81-a853-c5c147ec645f.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Getting Started&lt;/h2&gt;
&lt;p&gt;These instructions will get you a copy of the project up and running on your local machine for development purpose.&lt;/p&gt;
&lt;h2&gt;
Prerequisites&lt;/h2&gt;
&lt;p&gt;To get started with this project you need a basic knowledge of the following.&lt;/p&gt;
&lt;div class="snippet-clipboard-content position-relative overflow-auto"&gt;&lt;pre&gt;&lt;code&gt;Version Control (Git)
Terraform
AWS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;
Automating Terraform with Github Actions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Login to your AWS account and generate &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After that, login to your Terraform Cloud account. Create a new workspace and select &lt;strong&gt;API-driven workflow&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then navigate to the &lt;strong&gt;Variables&lt;/strong&gt; tab and click on &lt;strong&gt;Add variable&lt;/strong&gt;. Add &lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt; and &lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt; with their respective values.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;From your Terraform Cloud User Settings, click on &lt;strong&gt;Tokens&lt;/strong&gt; and generate an API token named &lt;code&gt;GitHub Actions&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the token to your Github repository as a…&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mariehposa/terraform-automation"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


</description>
      <category>actionshackathon21</category>
      <category>actions</category>
      <category>opensource</category>
      <category>github</category>
    </item>
    <item>
      <title>What was your win this week?</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Fri, 03 Dec 2021 18:29:27 +0000</pubDate>
      <link>https://dev.to/devteam/what-was-your-win-this-week-4l7b</link>
      <guid>https://dev.to/devteam/what-was-your-win-this-week-4l7b</guid>
      <description>&lt;p&gt;Hey there! &lt;/p&gt;

&lt;p&gt;Looking back on this past week, what was something you were proud of accomplishing?&lt;/p&gt;

&lt;p&gt;All wins count — big or small 🎉&lt;/p&gt;

&lt;p&gt;Examples of 'wins' include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Starting a new project&lt;/li&gt;
&lt;li&gt;Fixing a tricky bug&lt;/li&gt;
&lt;li&gt;Embarking on a new creative challenge... or whatever else might spark joy ❤️ &lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Congrats on your accomplishments this week! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/sgFDIjII6GtmE/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/sgFDIjII6GtmE/giphy.gif" alt="Woman and puppet dancing saying &amp;quot;we're number one!&amp;quot;" width="480" height="270"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>weeklyretro</category>
    </item>
    <item>
      <title>🎁 CodeCast's Coding Advent: Day Three 🎁</title>
      <author>CodeCast</author>
      <pubDate>Fri, 03 Dec 2021 18:13:08 +0000</pubDate>
      <link>https://dev.to/codecast/codecasts-coding-advent-day-three-1ohg</link>
      <guid>https://dev.to/codecast/codecasts-coding-advent-day-three-1ohg</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cfkOewZK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/47sqnvhgf782ia410jte.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cfkOewZK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/47sqnvhgf782ia410jte.png" alt="Day Three" width="880" height="880"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#day-three"&gt;
  &lt;/a&gt;
  DAY THREE
&lt;/h2&gt;

&lt;p&gt;Apps like Linktree have become incredibly popular to share multiple links on a single landing page. Our ambassador &lt;a href="https://twitter.com/TironaCodes"&gt;Michael Tirona&lt;/a&gt; has created a three-part series where teaches you how to make your own Linktree clone with React!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codecast.io/casts/KPjp7X3KQw2A-creating-a-linktree-clone-in-react-pt-1"&gt;Find the tutorial here!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rgQcCXbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apbxg3sfypbibeu87wbn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rgQcCXbg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apbxg3sfypbibeu87wbn.png" alt="Linktree Clone" width="503" height="510"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can also be sure to follow us on &lt;a href="https://www.instagram.com/codecastapp/"&gt;Instagram&lt;/a&gt;, &lt;a href="https://twitter.com/CodeCastApp"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.facebook.com/codecastapp"&gt;Facebook&lt;/a&gt;, and &lt;a href="https://www.linkedin.com/company/code-cast/"&gt;LinkedIn&lt;/a&gt; to see our daily advent releases there!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>How to Set Up Elgato's Stream Deck on Ubuntu Linux 21.10</title>
      <author>Erika Heidi</author>
      <pubDate>Fri, 03 Dec 2021 18:11:48 +0000</pubDate>
      <link>https://dev.to/erikaheidi/how-to-set-up-elgatos-stream-deck-on-ubuntu-linux-2110-pdh</link>
      <guid>https://dev.to/erikaheidi/how-to-set-up-elgatos-stream-deck-on-ubuntu-linux-2110-pdh</guid>
      <description>&lt;p&gt;Popular with streamers everywhere in the world, the &lt;a href="https://www.elgato.com/en/stream-deck"&gt;Elgato Stream Deck&lt;/a&gt; is a customizable device that works as an external input, and can be configured to trigger commands and shortcuts at the press of a button. And although the device is super popular with live streamers, it is also very useful for anyone who works with several different applications on a desktop setting, since it greatly facilitates switching windows and running commands on your computer.&lt;/p&gt;

&lt;p&gt;While this looks like a very useful device, the official website says the device is only supported on MacOS and Windows systems. A bummer, for sure! That's what kept me from buying one for quite some time.&lt;/p&gt;

&lt;p&gt;Turns out I got a &lt;a href="https://twitter.com/erikaheidi/status/1439919049136353284"&gt;really nice package from the GitHub Stars program&lt;/a&gt; including a 15-button Stream Deck. I have heard rumors that it was possible to run it on Linux, and that's what brought me to this article! As you can see from the video, I got it working here:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jk4MZWQ4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1466024572705292289/pu/img/b5TBFafNl9DJm3Iy.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--yyVydqgW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1445318007547379715/BCwImL4T_normal.jpg" alt="Erika Heidi ✨ profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Erika Heidi ✨
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/erikaheidi"&gt;@erikaheidi&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Streamdeck running smoothly on Ubuntu 21.10 (rodando liso) 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      12:41 PM - 01 Dec 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1466024623108153347" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1466024623108153347" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1466024623108153347" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;In this post I'll share how I set up my Stream Deck on an &lt;strong&gt;Ubuntu 21.10&lt;/strong&gt; system and which commands / tools I configured so far.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: this was tested on Ubuntu 21.04 and Ubuntu 21.10, but it might work with other versions as well.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-install-raw-streamdeckui-endraw-"&gt;
  &lt;/a&gt;
  Step 1: Install &lt;code&gt;streamdeck-ui&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://timothycrosley.github.io/streamdeck-ui/"&gt;streamdeck-ui program&lt;/a&gt; provides a Linux-compatible graphical user interface to control your Stream Deck, running on top of the &lt;a href="https://github.com/abcminiuser/python-elgato-streamdeck#python-elgato-stream-deck-library"&gt;Python Stream Deck Library&lt;/a&gt;. With this software you can set up each individual key by providing an icon, a command or a shortcut, and an optional title. It supports multiple pages, which means you are not limited to the physical slots in the device. As long as you use one or more keys to paginate through your icon pages, you can have as many buttons as you need.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ECi5VfId--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgv7t5a6brb3920n0nus.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ECi5VfId--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgv7t5a6brb3920n0nus.png" alt="Screenshot of streamdeck-ui already configured" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To get started, install the dependencies with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;python3-pip libhidapi-libusb0 libxcb-xinerama0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you'll need to set up special permissions that will allow you to use the application with a regular system user.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;sudoedit /etc/udev/rules.d/70-streamdeck.rules
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Paste the following content into this file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="0060", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="0063", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="006c", TAG+="uaccess"
SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="006d", TAG+="uaccess"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Save and close the file. Then, reload udev rules with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;udevadm control &lt;span class="nt"&gt;--reload-rules&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The installation instructions advise you to unplug and plug again your device before continuing. Once you do that, run the following command to install &lt;code&gt;streamdeck-ui&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip3 &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--user&lt;/span&gt; streamdeck_ui
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, you'll need to make sure you have &lt;code&gt;$HOME/.local/bin&lt;/code&gt; in your &lt;code&gt;$PATH&lt;/code&gt;. If you are using regular bash, you should have a &lt;code&gt;.bashrc&lt;/code&gt; file where your &lt;code&gt;$PATH&lt;/code&gt; is defined. If you are using zsh, this should be &lt;code&gt;.zshrc&lt;/code&gt; instead. For instance, I use zsh and this is how my &lt;code&gt;$PATH&lt;/code&gt; is defined within my &lt;code&gt;~/.zshrc&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/bin:&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.local/bin:/usr/local/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After updating your $PATH, you can run &lt;code&gt;streamdeck-ui&lt;/code&gt; from your terminal in background mode with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;streamdeck &amp;amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see a screen like that:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pH2kk2UA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz34vsue79s9emw48mip.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pH2kk2UA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lz34vsue79s9emw48mip.png" alt="screenshot of streamdeck-ui with blank configuration" width="880" height="512"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can now start setting up each button.&lt;/p&gt;

&lt;p&gt;Keep in mind that the program must be running all times for the buttons to be actually functional. It will be visible as a system tray icon on the top right of your screen. &lt;/p&gt;

&lt;p&gt;It is recommended that you include the &lt;code&gt;streamdeck&lt;/code&gt; command in your startup commands - on Ubuntu you can set this on the &lt;code&gt;Startup Applications Preferences&lt;/code&gt; utility. Hint: type &lt;code&gt;window&lt;/code&gt; and then &lt;code&gt;Startup&lt;/code&gt; to find this program on Ubuntu:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8JUp2HLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/262plmsqfwxz27bbl4jm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8JUp2HLV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/262plmsqfwxz27bbl4jm.png" alt="Setting up streamdeck to start on login" width="880" height="791"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-command-buttons"&gt;
  &lt;/a&gt;
  Setting up command buttons
&lt;/h2&gt;

&lt;p&gt;Setting up a button to run a command is pretty straightforward with streamdeck-ui. Having an icon is optional, since you can also use a simple text (just needs to keep it very short, as it doesn't support linebreaks). To try it out, configure your first button to open your file browser, called as &lt;code&gt;nautilus&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RLJtZ7oq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p098k9m5vy087c00umha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RLJtZ7oq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p098k9m5vy087c00umha.png" alt="Setting up a command button on streamdeck-ui" width="880" height="516"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The update is effective immediately, so you can click on the button and you should see a new Nautilus window opening up.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-shortcut-buttons"&gt;
  &lt;/a&gt;
  Setting up shortcut buttons
&lt;/h2&gt;

&lt;p&gt;You can also set up shortcuts to run when you click a button, although this may work inconsistently depending on which application is currently on focus. I use shortcuts to switch scenes on OBS, but then I have to first make sure I focus the OBS window and only then I hit the shortcut button. &lt;/p&gt;

&lt;p&gt;To configure shortcuts, use the &lt;strong&gt;Press Keys&lt;/strong&gt; text field to define the sequence of keys. To make it work with OBS, you'll first need to configure your OBS shortcuts on &lt;strong&gt;Settings -&amp;gt; Hotkeys&lt;/strong&gt; (inside OBS).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uokQZThh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qes8areo4eekflmxk51.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uokQZThh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5qes8areo4eekflmxk51.png" alt="Setting up a shortcut button" width="880" height="511"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is also possible to use commands to change which window is currently on focus, that's what we'll see next.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#manipulating-windows-with-raw-xdotool-endraw-"&gt;
  &lt;/a&gt;
  Manipulating windows with &lt;code&gt;xdotool&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;To switch between windows, you'll need to install a tool called &lt;code&gt;xdotool&lt;/code&gt;. On Ubuntu you can install it with the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;apt &lt;span class="nb"&gt;install &lt;/span&gt;xdotool
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This tool allows you to search for a window by title or class, which is an internal name used by each application. This information can be found with the built-in command &lt;code&gt;xprop&lt;/code&gt;, which obtains information about active windows on your graphical interface.&lt;/p&gt;

&lt;p&gt;To find out which class an application uses for its main window, you can run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xprop | &lt;span class="nb"&gt;grep&lt;/span&gt; &lt;span class="s1"&gt;'CLASS'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then, you'll have to click on the window you want to obtain more information about. Make sure you click somewhere inside the window, not at the title bar.&lt;/p&gt;

&lt;p&gt;For instance, if you want to find out the class name for your Firefox browser, after clicking somewhere in the Firefox window you'll get output like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;WM_CLASS(STRING) = "Navigator", "Firefox"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;strong&gt;second&lt;/strong&gt; string in the output is what we need. Once you know the class name for an application, you can move it to active / focused with the following command (in this case, we're activating the Firefox window):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;xdotool search &lt;span class="nt"&gt;--desktop&lt;/span&gt; 0 &lt;span class="nt"&gt;--class&lt;/span&gt; Firefox windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So this is the command you'll have to set up within streamdeck-ui to be able to easily switch applications using your Stream Deck.&lt;/p&gt;

&lt;p&gt;Here is a list with my own buttons that you can probably reuse on your setup in case you want similar functionality:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#firefox"&gt;
  &lt;/a&gt;
  Firefox
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;xdotool search --desktop 0 --class Firefox windowactivate&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#terminal-terminator"&gt;
  &lt;/a&gt;
  Terminal (Terminator)
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xdotool search --desktop 0 --class 'Terminator' windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#phpstorm"&gt;
  &lt;/a&gt;
  PhpStorm
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xdotool search --desktop 0 --class jetbrains-phpstorm windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#obs"&gt;
  &lt;/a&gt;
  OBS
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xdotool search --desktop 0 --class obs windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#zoom"&gt;
  &lt;/a&gt;
  Zoom
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xdotool search --desktop 0 --class Zoom windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#slack"&gt;
  &lt;/a&gt;
  Slack
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;xdotool search --desktop 0 --class slack windowactivate
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is what my current setup looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ECi5VfId--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgv7t5a6brb3920n0nus.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ECi5VfId--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bgv7t5a6brb3920n0nus.png" alt="Screenshot of streamdeck-ui already configured" width="880" height="494"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And this is how it looks like on the device:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U59wRbqV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e03kevdqp6egkpeyrhmz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U59wRbqV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e03kevdqp6egkpeyrhmz.png" alt="photo shows how this configuration looks like on the device itself" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#finding-icons"&gt;
  &lt;/a&gt;
  Finding icons
&lt;/h2&gt;

&lt;p&gt;You can find default icons from the Ubuntu system and applications spread through several directories on &lt;code&gt;/usr/share&lt;/code&gt;. Have a look at &lt;code&gt;/usr/share/icons&lt;/code&gt; and you should find several subdirectories with icons - this might work but it can be difficult to find just the icon you want.&lt;/p&gt;

&lt;p&gt;I personally prefer to look for icons on google images, and have set a local folder in my home directory where I keep these icons and reference them from streamdeck-ui. Icons must be in &lt;code&gt;png&lt;/code&gt; format.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you have enjoyed this article and that it can help you customize your Stream Deck up to the minimal details, for a perfect setup :) Worth noting that the Stream Deck device is pretty handy for anyone working on a desktop, since it can speed up switching windows and running commands on your system.&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>streaming</category>
      <category>livecoding</category>
      <category>linux</category>
    </item>
    <item>
      <title>100 Days Of Code : A Commitment to Developer Life</title>
      <author>TheGrayGodfather</author>
      <pubDate>Fri, 03 Dec 2021 17:24:37 +0000</pubDate>
      <link>https://dev.to/thegraygodfather/100-days-of-code-a-commitment-to-developer-life-29ni</link>
      <guid>https://dev.to/thegraygodfather/100-days-of-code-a-commitment-to-developer-life-29ni</guid>
      <description>&lt;h2&gt;
  &lt;a href="#my-story-of-cowardness"&gt;
  &lt;/a&gt;
  My Story Of Cowardness
&lt;/h2&gt;

&lt;p&gt;Hello, guys I am a noob programmer. &lt;br&gt;
I am in second year of college but I don't know "P" about programming. My real problem is I am lazy, not consistent and I learn things superficially. These habits in day to day life makes me average in every things. &lt;/p&gt;

&lt;p&gt;Not having a programming skill is a shameful thing for a engineer so, I decide to change my lazy lifestyle to diligent and consistent lifestyle. Key stapes to learn anything and become a master in that skill is to do it every day with focus. So I am deciding to pursuing to life changing 100 Days Of Code.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#end-goal-of-100-days"&gt;
  &lt;/a&gt;
  End Goal Of 100 Days
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Solving minimum two problem in c++ everyday.&lt;/li&gt;
&lt;li&gt;Better then average in Data structure and Algorithms.&lt;/li&gt;
&lt;li&gt;Complete DBMS&lt;/li&gt;
&lt;li&gt;Good grip in Java script&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#how-i-am-going-to-accomplish-all-these"&gt;
  &lt;/a&gt;
  How I Am Going To Accomplish All These
&lt;/h2&gt;

&lt;p&gt;I am going to spend minimum 4 hours to 6 hours everyday. From those hours I am going to devout more then half of those time in c++, data structures and algorithms. And other half of time in java script and database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-i-am-going-to-post-in-100-days-of-code"&gt;
  &lt;/a&gt;
  What I Am Going to Post In 100 Days Of Code.
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;What I did yesterday.&lt;/li&gt;
&lt;li&gt;What I am doing today.&lt;/li&gt;
&lt;li&gt;What plans  I have for tomorrow.&lt;/li&gt;
&lt;li&gt;What mistakes and problems I am facing.&lt;/li&gt;
&lt;li&gt;My goal of this week in start of week.&lt;/li&gt;
&lt;li&gt;What I accomplished in this weak at end of this week.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#closing-remark"&gt;
  &lt;/a&gt;
  Closing Remark
&lt;/h2&gt;

&lt;p&gt;I thing by this way I can change my life, otherwise I am fucked. THANKS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PLEAST CORRECT MY MISTAKES AND HEPL ME TO GROW&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/thegraygodfathe"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--snpEA2Le--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2u4nsrg8h87abzjj4y6l.png" alt="Image description" width="291" height="105"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/milan-mohapatra-171773207/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nGmJCNix--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nojt7grbvsj24djvmj60.jpg" alt="Image description" width="291" height="164"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/TheGrayGodfather"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_pKqteV7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rsq6lwb8tmeadzw1u8t3.png" alt="Image description" width="291" height="83"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>algorithms</category>
      <category>webdev</category>
      <category>blockchain</category>
    </item>
    <item>
      <title>PUSHARD Progressively deploy commits between AWS Amplify environments</title>
      <author>Alessandro Annini</author>
      <pubDate>Fri, 03 Dec 2021 17:07:22 +0000</pubDate>
      <link>https://dev.to/ale_annini/pushard-progressively-deploy-commits-between-aws-amplify-environments-4mjj</link>
      <guid>https://dev.to/ale_annini/pushard-progressively-deploy-commits-between-aws-amplify-environments-4mjj</guid>
      <description>&lt;h3&gt;
  &lt;a href="#my-workflow"&gt;
  &lt;/a&gt;
  My Workflow
&lt;/h3&gt;

&lt;p&gt;When creating a new project with AWS Amplify life is good: you have a lot of different AWS services handy and ready to be used in a integrated way. If you ever used Amplify you know what we are talking about.&lt;br&gt;
Everything is fine until you begin to use &lt;a href="https://docs.amplify.aws/cli/teams/overview/"&gt;Amplify environments&lt;/a&gt;. This is because Amplify creates a copy of every service you are using for every environment you are creating. When it comes to Appsync there is no exception.&lt;/p&gt;

&lt;p&gt;If you need different environment like &lt;code&gt;development&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;production&lt;/code&gt; (maybe you even have &lt;code&gt;demo&lt;/code&gt;!) you will find yourself with three times your cognito pools (if you have authentication), three times your lambdas and three times your graphql tables. Often times when you are developing, you will have to make changes to your &lt;code&gt;schema.graphql&lt;/code&gt; but you don't want to reflect those changes in other environments right away because maybe the UI is still not updated or simply because your work isn't completly done yet and you don't want to deploy a broken version.&lt;br&gt;
The problem you can incur into is a known Amplify problem, in fact AWS even has a section on their docs about it: &lt;a href="https://docs.amplify.aws/cli-legacy/graphql-transformer/key/#deploying-multiple-secondary-indices-gsi"&gt;Deploying multiple secondary indices (GSI)&lt;/a&gt;, and their github repository has a lot of issues about this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Attempting to mutate more than 1 global secondary index at the same time on the &amp;lt;table_name&amp;gt; table in the stack.
An error occurred during the push operation: Attempting to mutate more than 1 global secondary index at the same time on the &amp;lt;table_name&amp;gt; table in the  stack.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;If you try to modify 2 or more connections on the same table, when you try to push your changes to Cloud Formation with the command &lt;code&gt;amplify push&lt;/code&gt;, you will get this error. When you're working on the development branch is not a big deal because you only have to make multiple "amplify push" in order to gradually change the connections state.&lt;/p&gt;

&lt;p&gt;The REAL problem comes after you have made a number of amplify push on your development environment and you want to replicate the final schema.graphql to the test or production environment. Suppose you made 10 amplify push on your development environment but your production environment has never been updated after push number 3: now if you try to move your current schema.graphql (let's call it version 10) over your schema.graphql version 3 on production, you will have a big problem. Amplify won't be able to make multiple updates on the secondary indexes of your production tables just like it wasn't before, when you was trying to make only two updates together on the same table.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You would have to replicate the exact sequence of successful updates you made on you development environment to you production one.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here comes into play PUSHARD!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EB12C46d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nautes-tech/pushard/main/images/flow.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EB12C46d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/nautes-tech/pushard/main/images/flow.png" alt="git-action flwo" title="git-action flow" width="490" height="817"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First of all &lt;strong&gt;you have to&lt;/strong&gt; make a commit on git after &lt;strong&gt;every&lt;/strong&gt; &lt;code&gt;amplify push&lt;/code&gt; on your environment.&lt;br&gt;
This Git Action will then take care to grab your commit hisory from development branch, detect the exact slice of commits you need to fully replicate the development verison of schema.graphql to your target environment. In order to deploy every update it will try to merge the current development commit into target branch, launch &lt;code&gt;amplify push&lt;/code&gt; command and finally &lt;code&gt;git commit&lt;/code&gt; the result after every successful operation on the target branch.&lt;br&gt;
If something shoud go south during the process, it will push to git everything is committed at the time, the next time it will try to pick up the process where it left off.&lt;/p&gt;

&lt;p&gt;Now, this flow is correct from a AWS standpoint because DynamoDB will be able to update step by step its tables. But at the same time, when asking many consecutive Cloud Formation updates, especially if you created or updated a lambda in your stack too, will take longer than the time of the simple &lt;code&gt;amplify push&lt;/code&gt; command, so, at the next iteragion of updates loop, you could have another error:&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Resource is not in the state stackUpdateComplete
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;This means that Cloud Formation has not yet completely update your lambda resources and, because of this, it won't be able to make further updates.&lt;br&gt;
Because of this you &lt;strong&gt;have to&lt;/strong&gt; make a commit after every time you create or modify a lambda function. This way our Git Action will be able to successfully push the change to amplify and during the next loop iteration it will wait for Cloud Formation to be in the &lt;code&gt;UPDATE_COMPLETE&lt;/code&gt; state before trying to update the stack again.&lt;/p&gt;

&lt;p&gt;When the git action is starting it can send you a Telegram message writing how many commits it will take from development to the target branch; it will message you after every successful &lt;code&gt;amplify push&lt;/code&gt; operation and if something goes wrong.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/nautes-tech/pushard/blob/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/nautes-tech/pushard/blob/main/README.md"&gt;README&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/nautes-tech"&gt;
        nautes-tech
      &lt;/a&gt; / &lt;a href="https://github.com/nautes-tech/pushard"&gt;
        pushard
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Progressively deploy commits between AWS Amplify environments
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
PUSHARD Progressively deploy commits between AWS Amplify environments&lt;/h1&gt;
&lt;br&gt;
&lt;h2&gt;
Description&lt;/h2&gt;
&lt;p&gt;When creating a new project with AWS Amplify life is good: you have a lot of different AWS services handy and ready to be used in a integrated way. If you ever used Amplify you know what we are talking about
Everything is fine until you begin to use &lt;a href="https://docs.amplify.aws/cli/teams/overview/" rel="nofollow"&gt;Amplify environments&lt;/a&gt;. This is because Amplify creates a copy of every service you are using for every environment you are creating. When it comes to Appsync there is no exception.&lt;/p&gt;
&lt;p&gt;If you need different environment like &lt;code&gt;development&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt; and &lt;code&gt;production&lt;/code&gt; (maybe you even have &lt;code&gt;demo&lt;/code&gt;!) you will find yourself with three times your cognito pools (if you have authentication), three times your lambdas and three times your graphql tables. Often times when you are developing, you will have to make changes to your &lt;code&gt;schema.graphql&lt;/code&gt; but you don't want to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/nautes-tech/pushard"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#submission-category"&gt;
  &lt;/a&gt;
  Submission Category:
&lt;/h3&gt;

&lt;p&gt;DIY Deployments, Maintainer Must-Haves.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yaml-file-or-link-to-code"&gt;
  &lt;/a&gt;
  Yaml File or Link to Code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;pushard&lt;/span&gt;

&lt;span class="na"&gt;on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;workflow_dispatch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;inputs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;deployHash&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Target&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;deploy&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;hash'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
      &lt;span class="na"&gt;skipHashes&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Deploys&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;to&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;skip'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;false&lt;/span&gt;
      &lt;span class="na"&gt;dstBranch&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;Destination&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;branch'&lt;/span&gt;
        &lt;span class="na"&gt;required&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;

&lt;span class="na"&gt;jobs&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="na"&gt;run_pushard&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Run PUSHARD&lt;/span&gt;
    &lt;span class="na"&gt;runs-on&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;ubuntu-18.04&lt;/span&gt;
    &lt;span class="na"&gt;steps&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Checkout&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/checkout@v2&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Setup Node.js environment&lt;/span&gt;
        &lt;span class="na"&gt;uses&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;actions/setup-node@v2.1.5&lt;/span&gt;
        &lt;span class="na"&gt;with&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;node-version&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;14'&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Create working dir&lt;/span&gt;
        &lt;span class="na"&gt;shell&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;bash&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;mkdir tempdir&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install AWS CLI version &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"&lt;/span&gt;
          &lt;span class="s"&gt;sudo unzip awscliv2.zip&lt;/span&gt;
          &lt;span class="s"&gt;sudo ./aws/install&lt;/span&gt;
          &lt;span class="s"&gt;sudo rm -rf awscliv2.zip&lt;/span&gt;
          &lt;span class="s"&gt;sudo rm -rf aws&lt;/span&gt;
          &lt;span class="s"&gt;aws --version&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;Install @aws-amplify/cli node package&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;npm install -g @aws-amplify/cli@7.3.2&lt;/span&gt;

      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;PUSHARD&lt;/span&gt;
        &lt;span class="na"&gt;run&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
          &lt;span class="s"&gt;echo "Target deploy hash: ${{ github.event.inputs.deployHash }}"&lt;/span&gt;
          &lt;span class="s"&gt;echo "Deploys to skip: ${{ github.event.inputs.skipHashes }}"&lt;/span&gt;
          &lt;span class="s"&gt;echo "Destination branch: ${{ github.event.inputs.dstBranch }}"&lt;/span&gt;
          &lt;span class="s"&gt;cd builder&lt;/span&gt;
          &lt;span class="s"&gt;npm install&lt;/span&gt;
          &lt;span class="s"&gt;npm start&lt;/span&gt;
        &lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;DEPLOY_HASH&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.event.inputs.deployHash }}&lt;/span&gt;
          &lt;span class="na"&gt;SKIP_HASHES&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.event.inputs.skipHashes }}&lt;/span&gt;
          &lt;span class="na"&gt;DST_BRANCH&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ github.event.inputs.dstBranch }}&lt;/span&gt;
          &lt;span class="na"&gt;AMPLIFY_PROJECT_REPO&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.AMPLIFY_PROJECT_REPO }}&lt;/span&gt;
          &lt;span class="na"&gt;AWS_ACCESS_KEY_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.ACCESS_KEY_ID }}&lt;/span&gt;
          &lt;span class="na"&gt;AWS_SECRET_ACCESS_KEY&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.SECRET_ACCESS_KEY }}&lt;/span&gt;
          &lt;span class="na"&gt;AWS_PROFILE&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.AWS_PROFILE }}&lt;/span&gt;
          &lt;span class="na"&gt;GH_USERNAME&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GH_USERNAME }}&lt;/span&gt;
          &lt;span class="na"&gt;GH_USER_PAT&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.GH_USER_PAT }}&lt;/span&gt;
          &lt;span class="na"&gt;TELEGRAM_BOT_TOKEN&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.TELEGRAM_BOT_TOKEN }}&lt;/span&gt;
          &lt;span class="na"&gt;TELEGRAM_CHAT_ID&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;${{ secrets.TELEGRAM_CHAT_ID }}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://github.com/nautes-tech/pushard/blob/main/action.yml"&gt;action.yml&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#additional-resources-info"&gt;
  &lt;/a&gt;
  Additional Resources / Info
&lt;/h3&gt;

&lt;p&gt;Made by &lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__767320"&gt;
  
    .ltag__user__id__767320 .follow-action-button {
      background-color: #000000 !important;
      color: #ffffff !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/simoneagostinelli" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jUxUtWZc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--Fjm9Z056--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/767320/62e2eda5-1b42-492a-8121-b67852bcd260.jpg" alt="simoneagostinelli image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/simoneagostinelli"&gt;Simone Agostinelli&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/simoneagostinelli"&gt;&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;



&lt;div class="ltag__user ltag__user__id__104337"&gt;
  
    .ltag__user__id__104337 .follow-action-button {
      background-color: #a705f7 !important;
      color: #edfdfa !important;
      border-color: #a705f7 !important;
    }
  
    &lt;a href="/ale_annini" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZwbYTTEi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--L5SWM70W--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/104337/8e900359-1888-4968-8973-95472187f1f8.jpg" alt="ale_annini image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/ale_annini"&gt;Alessandro Annini&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/ale_annini"&gt;Side projects will save the world. Or at least the day.&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://www.nautes.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fjFAXViV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/4AdCvil.png" alt="Nautes Spa" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>actionshackathon21</category>
      <category>aws</category>
      <category>github</category>
      <category>productivity</category>
    </item>
    <item>
      <title>How to Get Glassmorphism Effect in Flutter</title>
      <author>rrtutors</author>
      <pubDate>Fri, 03 Dec 2021 17:02:14 +0000</pubDate>
      <link>https://dev.to/rrtutors/how-to-get-glassmorphism-effect-in-flutter-3i64</link>
      <guid>https://dev.to/rrtutors/how-to-get-glassmorphism-effect-in-flutter-3i64</guid>
      <description>&lt;p&gt;What is Glassmorphism?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rrtutors.com/tutorials/How-to-Get-Glassmorphism-Effect-in-Flutter"&gt;Flutter Glassmorphism&lt;/a&gt; is a term used to describe UI design that emphasizes light or dark objects, placed on top of colorful backgrounds. A background blur is placed on the objects which allows the background to shine through – giving it the impression of frosted glass&lt;/p&gt;

&lt;p&gt;You can wrap your widget with Back Drop Filter and add an image filter but, this process is a bit complicated so, we will see an easy way all you have to do is add a line like this to your package's pubspec.yaml.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nl"&gt;dependencies:&lt;/span&gt;
  &lt;span class="nl"&gt;glassmorphism:&lt;/span&gt; &lt;span class="o"&gt;^&lt;/span&gt;&lt;span class="mf"&gt;3.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once installed you will get access to a widget called GlassmorphicContainer, it has various properties&lt;/p&gt;

&lt;p&gt;width: used to control the width of the container.&lt;/p&gt;

&lt;p&gt;height: used to control the height of the container.&lt;/p&gt;

&lt;p&gt;borderRadius: used to change the border radius.&lt;/p&gt;

&lt;p&gt;linearGradient: used to provide background gradient with different colors.&lt;br&gt;
    child: which will hold all our widget that will have this effect.&lt;/p&gt;

&lt;p&gt;we can add gradient like this for example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;LinearGradient&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;colors:&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;

                        &lt;span class="nc"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;white&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withOpacity&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.2&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;

                        &lt;span class="nc"&gt;Colors&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;white&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;withOpacity&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.05&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

                      &lt;span class="o"&gt;],&lt;/span&gt; &lt;span class="nl"&gt;begin:&lt;/span&gt; &lt;span class="nc"&gt;Alignment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;topLeft&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nl"&gt;end:&lt;/span&gt; &lt;span class="nc"&gt;Alignment&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;bottomRight&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;this will have the most common white forsted glass effect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--O6uOT0zv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/Screenshot_1638193776.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--O6uOT0zv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/Screenshot_1638193776.png" alt="Flutter Glassmorphism" width="880" height="1760"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--anolqKds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/Screenshot_1638193788.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--anolqKds--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://rrtutors.com/uploads/langpostimg/Screenshot_1638193788.png" alt="Flutter Glassmorphism" width="880" height="1760"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Complete code for &lt;a href="https://rrtutors.com/tutorials/How-to-Get-Glassmorphism-Effect-in-Flutter"&gt;Flutter Login Page - FrostedGlass Background Flutter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find &lt;a href="https://rrtutors.com/tutorials/Flutter-Login-Page-with-wave-animation"&gt;Flutter Login Page&lt;/a&gt; example &lt;/p&gt;

</description>
      <category>flutter</category>
      <category>dart</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Quick Start WebRTC with Infobip</title>
      <author>Michael Bogan</author>
      <pubDate>Fri, 03 Dec 2021 16:58:53 +0000</pubDate>
      <link>https://dev.to/mbogan/quick-start-webrtc-with-infobip-2c1g</link>
      <guid>https://dev.to/mbogan/quick-start-webrtc-with-infobip-2c1g</guid>
      <description>&lt;p&gt;&lt;a href="https://webrtc.org/"&gt;Web Real-Time Communication (WebRTC)&lt;/a&gt; has fast become the de facto framework used for building applications to facilitate audio and video communication over the web. WebRTC connects users through their browsers or on their mobile devices. In this post, we’ll get you up to speed on why WebRTC is so widely adopted for development today. Along the way, we’ll use Infobip’s set of SDKs to get quickly get started.&lt;/p&gt;

&lt;p&gt;Let’s begin by diving a bit deeper into the details and history of WebRTC.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-webrtc"&gt;
  &lt;/a&gt;
  What is WebRTC?
&lt;/h3&gt;

&lt;p&gt;At a high level, WebRTC is a peer-to-peer (P2P) data transmission technology. While it has versatile uses, it’s most commonly used for latency-sensitive applications, and that makes it perfect for P2P video and audio streaming. Many major tech companies—including Zoom, Slack, and Discord—use WebRTC in their implementation to provide secure and seamless streaming experiences to their users.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-long-has-webrtc-been-around"&gt;
  &lt;/a&gt;
  How long has WebRTC been around?
&lt;/h3&gt;

&lt;p&gt;By most accounts, the industry saw WebRTC used to make a cross-browser video call for the first time in February 2013. That means WebRTC has been around for nearly 10 years! For those who pivot on the paperwork, WebRTC reached an official “&lt;a href="https://www.w3.org/TR/2017/CR-webrtc-20171102/"&gt;Candidate Recommendation&lt;/a&gt;” status with W3C in 2017 and “&lt;a href="https://www.w3.org/2021/01/pressrelease-webrtc-rec.html.en"&gt;Recommendation&lt;/a&gt;” status in January 2021. By that gauge, WebRTC’s status as an officially backed technology is fairly new. With that backing of governing technical bodies and industry use, however, WebRTC’s adoption is on the rise. That’s especially true of companies seeking to build audio and video applications.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-choose-webrtc-over-another-option"&gt;
  &lt;/a&gt;
  Why choose WebRTC over another option?
&lt;/h2&gt;

&lt;p&gt;Why might a company choose to build on top of WebRTC as opposed to another option like RTMP? There are several reasons, and we’ll highlight the most important ones here:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#no-central-server"&gt;
  &lt;/a&gt;
  No central server
&lt;/h3&gt;

&lt;p&gt;Because WebRTC is P2P, the clients manage the connection. In other words, there is no client-server architecture with a central infrastructure brokering connections while handling media and static assets. The end-user devices do all of the connection management. Though this puts more resource load on clients, the P2P approach is more secure and resilient.&lt;/p&gt;

&lt;p&gt;One nuance worth mentioning is that WebRTC requires a way to connect clients with one another; this process is called “signaling.” So, while there’s no central server in the sense of connection management, you do need a signaling server to help clients be aware of each other’s presence and negotiate their connection. Still, the resources needed for this signaling server are significantly less than that of maintaining an entire client-server architecture.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#w3cietf-standard"&gt;
  &lt;/a&gt;
  W3C/IETF standard
&lt;/h3&gt;

&lt;p&gt;Historically, perhaps developers have not put a lot of stock in a technology’s endorsement from W3C or IETF. Still, WebRTC’s backing by these bodies means that a great deal of thought, design, and discussion went into this technology. WebRTC has been in the making for over a decade, and its official recommendation is bolstered by a gang of big tech companies that actively use it. You’re in good company with WebRTC.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#high-quality-and-high-speed"&gt;
  &lt;/a&gt;
  High quality and  high speed
&lt;/h3&gt;

&lt;p&gt;WebRTC, unlike TCP-based streaming alternatives (for example, MPEG-DASH or RTMP), uses UDP-packet broadcast. Using UDP alleviates the need for packet-level re-encrypt and retransmission. For video and audio streaming applications, the minor packet misses that come with UDP have a negligible adverse effect on the end-user experience. The end result, though, makes WebRTC &lt;em&gt;fast&lt;/em&gt;. It’s one of the only protocols that can consistently achieve sub-second latency, and it does this out-of-the-box!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#native-functionality"&gt;
  &lt;/a&gt;
  Native functionality
&lt;/h3&gt;

&lt;p&gt;As an officially endorsed technology supported in HTML5, WebRTC is dead simple to get started. You don’t need a plugin. All you need is a WebRTC-compatible browser, and you immediately have access to device detection, media capture, data transfer, and more. When you build on WebRTC, everything in your application is native; your users won’t be required to download or install anything else.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-infobip-help"&gt;
  &lt;/a&gt;
  How can Infobip help?
&lt;/h2&gt;

&lt;p&gt;For working with WebRTC, Infobip offers SDKs for &lt;a href="https://github.com/infobip/infobip-rtc-android"&gt;Android&lt;/a&gt;, &lt;a href="https://github.com/infobip/infobip-rtc-ios"&gt;iOS&lt;/a&gt;, &lt;a href="https://github.com/infobip/infobip-rtc-react-native"&gt;React Native&lt;/a&gt;, and &lt;a href="https://github.com/infobip/infobip-rtc-js"&gt;JavaScript&lt;/a&gt;. That covers pretty much all of WebRTC’s applications. Infobip makes it very easy to get started.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-set-up"&gt;
  &lt;/a&gt;
  Getting set up
&lt;/h3&gt;

&lt;p&gt;Let’s say you’re kicking off a new JavaScript-based project. Getting started with WebRTC and Infobip is as simple as installing the JavaScript SDK with npm or including the distribution file in your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npm install infobip-rtc --save
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# main.js 
let InfobipRTC = require('infobip-rtc');

# or as an ES6 Import
import {InfobipRTC} from "infobip-rtc";
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Infobip also offers a distribution file that you can include:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;script src="//rtc.cdn.infobip.com/latest/infobip.rtc.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#putting-it-to-use"&gt;
  &lt;/a&gt;
  Putting it to use
&lt;/h3&gt;

&lt;p&gt;Infobip takes a hands-off approach to user management. Your users are &lt;em&gt;your&lt;/em&gt; users. To enable Infobip’s services for your users, you just need to create a token for them. Here’s a sample of what the request for the token looks like, along with a response:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# main.js
var settings = {
    "url": "https://{baseUrl}/webrtc/1/token",
    "method": "POST",
    "timeout": 0,
    "headers": {
        "Authorization": "{authorization}",
        "Content-Type": "application/json",
        "Accept": "application/json"
    },
    "data": JSON.stringify({"identity":"Alice","applicationId":"2277594c-76ea-4b8e-a299-e2b6db41b9dc","displayName":"Alice in Wonderland","capabilities":{"recording":"ALWAYS"},"timeToLive":43200}),
};

$.ajax(settings).done(function (response) {
    console.log(response);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Response
{
  "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZGVudGl0eSI6IkFsaWNlIiwibmFtZSI6IkFsaWNlIGluIFdvbmRlcmxhbmQiLCJleHAiOjE1NzkyOTA2MzgsImNhcHMiOlsyXX0.QyCMqjH8DsftChibW2Rw4EByH-eEviUp3-kHVKuJpKg",
  "expirationTime": "2020-01-17T19:50:38.488589Z"
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you’ve created and stored the token, you’re ready to get started!&lt;/p&gt;

&lt;p&gt;Although application use cases will vary greatly, each SDK’s Github repository has fantastic resources for getting started. The official documentation with all the goodies that go along with Infobip’s offering of WebRTC can be found &lt;a href="https://www.infobip.com/docs/voice-and-video/webrtc"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up-webrtc"&gt;
  &lt;/a&gt;
  Wrapping up WebRTC
&lt;/h2&gt;

&lt;p&gt;We’ve covered a lot of ground on WebRTC, so let’s take some time to recap. WebRTC is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A stable, industry-supported framework primarily used for P2P audio and video communication between browser and mobile devices.&lt;/li&gt;
&lt;li&gt;Widely adopted by many tech companies and for varied use cases.&lt;/li&gt;
&lt;li&gt;Preferred over TCP-based alternatives, as its UDP-based approach provides incredible speed while preserving quality.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And check out &lt;a href="https://www.infobip.com/signup"&gt;Infobip's platoform&lt;/a&gt;  a free and quick way to get started with WebRTC.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>architecture</category>
    </item>
    <item>
      <title>How to write a good Technical Article</title>
      <author>Bonnie!</author>
      <pubDate>Fri, 03 Dec 2021 16:57:11 +0000</pubDate>
      <link>https://dev.to/the_greatbonnie/how-to-write-a-good-technical-article-22fo</link>
      <guid>https://dev.to/the_greatbonnie/how-to-write-a-good-technical-article-22fo</guid>
      <description>&lt;p&gt;As a developer, I have made $500 in the last month writing Technical Articles.&lt;/p&gt;

&lt;p&gt;Below are some of the things I have learned about writing a good technical article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-technical-article"&gt;
  &lt;/a&gt;
  What is a technical article?
&lt;/h2&gt;

&lt;p&gt;A technical article is an article that is used to inform, instruct, or direct a specific audience on how to do something.&lt;/p&gt;

&lt;p&gt;To write a good technical article, there are some things you need to get right.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-come-up-with-a-good-structure-or-layout"&gt;
  &lt;/a&gt;
  1. Come up with a good structure or layout.
&lt;/h2&gt;

&lt;p&gt;The format of an excellent technical article includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Title&lt;/li&gt;
&lt;li&gt;Introduction&lt;/li&gt;
&lt;li&gt;Body&lt;/li&gt;
&lt;li&gt;Conclusion&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A title should be a headline that demands attention and should have keyword combinations that reflect what the article is about.&lt;/p&gt;

&lt;p&gt;The introduction should describe the problem and the solutions that the article will cover. Ensure that the introduction lets the reader know what the article is all about.&lt;/p&gt;

&lt;p&gt;In the body part of the article, describe the problem and the solution in detail. Try to tell a story. The story should keep the reader engaged at every step. Make a list of your main points. Then progress from one point to another logically to lead to a conclusion.&lt;/p&gt;

&lt;p&gt;The conclusion should essentially include a summary of all the main points mentioned in the body.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-do-a-lot-of-research"&gt;
  &lt;/a&gt;
  2. Do a lot of research.
&lt;/h2&gt;

&lt;p&gt;Writing a good technical article is challenging because it can take a lot of your time and often requires doing a lot of research.&lt;/p&gt;

&lt;p&gt;Doing research when writing a technical article will help you understand the problem you are trying to solve and the solutions you can come up with.&lt;/p&gt;

&lt;p&gt;The research will also help you understand your audience and the message you are trying to deliver to them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-know-your-audience"&gt;
  &lt;/a&gt;
  3. Know your audience
&lt;/h2&gt;

&lt;p&gt;Knowing your audience when writing a technical article is very important because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It helps you to make decisions about what information you should include.&lt;/li&gt;
&lt;li&gt;It directs you on how you should arrange that information.&lt;/li&gt;
&lt;li&gt;It helps to know what supporting details will be necessary for the reader to understand what you are presenting.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Keeping your audience in mind will help you organize your ideas and how best to support your argument.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-use-examples"&gt;
  &lt;/a&gt;
  4. Use examples
&lt;/h2&gt;

&lt;p&gt;Use examples to help your audience better understand and relate to key points of the technical article you are writing.&lt;/p&gt;

&lt;p&gt;Examples can be in the form of screenshots or code snippets.&lt;/p&gt;

&lt;p&gt;As a technical writer, examples can serve as evidence to support your general claims or arguments.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-read-other-technical-articles"&gt;
  &lt;/a&gt;
  5. Read other technical articles.
&lt;/h2&gt;

&lt;p&gt;Reading other technical articles will help you get inspiration and give you ideas on writing better articles.&lt;/p&gt;

&lt;p&gt;You can get inspiration by reading some of the technical articles I have written and published so far.&lt;/p&gt;

&lt;p&gt;This article shows you how to export Stripe payments data from Stripe to Postgres for deeper queries and data analysis for visualization.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://arctype.com/blog/stripe-payments-sql-postgres/"&gt;https://arctype.com/blog/stripe-payments-sql-postgres/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This article directs you on how to use Stored procedures to allow access to some parts of a table in a database while denying direct select, insert, update and delete operations against the table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://arctype.com/blog/stored-procedures-in-sql/"&gt;https://arctype.com/blog/stored-procedures-in-sql/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>writing</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How to Make a Weather App using JavaScript</title>
      <author>Shantanu Jana</author>
      <pubDate>Fri, 03 Dec 2021 16:55:11 +0000</pubDate>
      <link>https://dev.to/shantanu_jana/how-to-make-a-weather-app-using-javascript-4lke</link>
      <guid>https://dev.to/shantanu_jana/how-to-make-a-weather-app-using-javascript-4lke</guid>
      <description>&lt;p&gt;In this article you will learn how to create weather app using JavaScript. This JavaScript Weather app will help you to know about the weather of any location. If you input the name of any city in the input box here, in the box below you can find out all its information like temperature, wind speed and sky conditions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.foolishdeveloper.com/2021/12/simple-weather-app-using-javascript.html"&gt;Watch its live demo&lt;/a&gt; to learn how it works. I took the help of API Link to create this project. With this link all the information will be collected from other places with the help of "fetch" method. First we created its basic structure using HTML and CSS. Then I implemented it using JavaScript. &lt;/p&gt;

&lt;p&gt;You need to have a basic idea about HTML CSS JavaScript to create this weather application. Here I have shared step-by-step tutorial and a video.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/yQgZb51r9CU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;There are two boxes here. In the first box there is a place to input the name of the city and submit button. The result can be seen in the second box. &lt;/p&gt;

&lt;p&gt;The first box contains an input box for input and a submit button. If you input the name of the city in that box and click on the submit button, you will see all the information in the box below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#html-code-of-simple-weather-app"&gt;
  &lt;/a&gt;
  HTML code of Simple weather app
&lt;/h2&gt;

&lt;p&gt;Below are the HTML codes needed to create this design. Here I have broken the code step-by-step. If you want the code with one, you can &lt;a href="https://www.foolishdeveloper.com/2021/12/simple-weather-app-using-javascript.html"&gt;download source code&lt;/a&gt;.&lt;br&gt;
&lt;strong&gt;Basic structure&lt;/strong&gt;&lt;br&gt;
I have created a basic structure using the following codes. Basic structure is an area with two boxes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container-fluid"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"main"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

   &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;First box&lt;/strong&gt;&lt;br&gt;
Now I have added the HTML code needed to create the first box. Two input functions have been used here. The first input is to input the name of the city and the second is to make a button.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"inputs"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

   &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"Enter any city..."&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"cityinput"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;"Submit"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"add"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

   &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;placeholder=&lt;/span&gt;&lt;span class="s"&gt;"submit"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"add"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/button&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Second box or Display&lt;/strong&gt;&lt;br&gt;
Now arrangements have been made to make the second box i.e. display. Where weather related information can be found. The h2 tag is used here and the three paragraph tags are used. &lt;/p&gt;

&lt;p&gt;The name of your input city can be found in h2. The other three paragraphs include sky conditions, temperature and wind speed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;section&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"display"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"wrapper"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"cityoutput"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"description"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"temp"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"wind"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css-code-of-javascript-weather-app"&gt;
  &lt;/a&gt;
  CSS code of JavaScript weather app
&lt;/h2&gt;

&lt;p&gt;Above I have added the necessary HTML code to create the &lt;a href="https://www.foolishdeveloper.com/2021/12/simple-weather-app-using-javascript.html"&gt;Simple Weather application&lt;/a&gt;. Now it needs to be designed using CSS code. I designed the basics using the following CSS codes.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;box-sizing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;border-box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#448aff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.container-fluid&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;410px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the first box has been designed. I have used white as the background color of the box and &lt;code&gt;padding: 2rem 0 2rem 0&lt;/code&gt; has been used to create some space around it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.inputs&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;justify-content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2b_goXS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0bnelij9to5xzh1763i.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2b_goXS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a0bnelij9to5xzh1763i.jpg" alt="building a weather app using javascript" width="880" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The place to input the name of the city is designed by the following code. Here box &lt;code&gt;height: 3.5rem&lt;/code&gt;, &lt;code&gt;width: 20rem&lt;/code&gt; and color transparent are used.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.inputs&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"text"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#212121&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.1rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt; &lt;span class="m"&gt;#c2c2c2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;4px&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kz8qcDE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7b5bos6rzvi5z31tj4zh.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kz8qcDE1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7b5bos6rzvi5z31tj4zh.jpg" alt="weather app using javascript" width="880" height="382"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have designed the submit button using the following CSS codes. I used button &lt;code&gt;height: 3.2rem&lt;/code&gt;, &lt;code&gt;width: 6.5rem&lt;/code&gt; and background color blue.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.inputs&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"submit"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;3.2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;6.5rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#0a67ca&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.2rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBlDTxJv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4c5pf8v3do747xw4orx.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBlDTxJv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x4c5pf8v3do747xw4orx.jpg" alt="weather app using html css and javascript" width="880" height="389"&gt;&lt;/a&gt;&lt;br&gt;
Now I have added the CSS code required for making the second box i.e. display. This display uses &lt;code&gt;width: 400px&lt;/code&gt; and &lt;code&gt;height: 45vh&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.display&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#16a864&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;9rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;45vh&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt; &lt;span class="nb"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WgKyGdlL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2zdipyi1e9xbh49qhhw.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WgKyGdlL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b2zdipyi1e9xbh49qhhw.jpg" alt="weather forecast app using javascript" width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now the following codes have helped to design all the text information in this box. Although this information is no longer available for viewing. &lt;/p&gt;

&lt;p&gt;This can be seen after using JavaScript. But now I have managed to design it with the necessary CSS code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#0548b5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;sans-serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="m"&gt;50px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin-right&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;text-align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#04214c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="m"&gt;23px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;26px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#9beefb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nc"&gt;.wrapper&lt;/span&gt; &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#90006e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZSQHTEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjfmls4forkn98gdxpf7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ZSQHTEG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cjfmls4forkn98gdxpf7.jpg" alt="weather app using html css and javascript github" width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#javascript-code-of-the-basic-weather-app"&gt;
  &lt;/a&gt;
  JavaScript code of the basic weather app
&lt;/h2&gt;

&lt;p&gt;I have designed this basic &lt;strong&gt;weather app using HTML and CSS&lt;/strong&gt; code above. Now is the time to implement it with JavaScript.&lt;/p&gt;

&lt;p&gt;Below I have given all the JavaScript and all the information below each code. I hope the following explanations will help you understand. If there is any problem, you can take the help of video tutorial below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;//Now we need to determine the constant of one of the id functions. Because no html function can be used directly in JavaScript.&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;inputval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#cityinput&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;btn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#add&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;city&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#cityoutput&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;descrip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#temp&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;wind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#wind&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nx"&gt;apik&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;3045dd712ffe6e702e3245525ac7fa38&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="c1"&gt;//kelvin to celcious. 1 Kelvin is equal to -272.15 Celsius.&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;convertion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;273&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;toFixed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//Now we have to collect all the information with the help of fetch method&lt;/span&gt;

    &lt;span class="nx"&gt;btn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

&lt;span class="c1"&gt;//This is the api link from where all the information will be collected&lt;/span&gt;

        &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.openweathermap.org/data/2.5/weather?q=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;inputval&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;appid=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;apik&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

         &lt;span class="c1"&gt;//.then(data =&amp;gt; console.log(data))&lt;/span&gt;

        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="c1"&gt;//Now you need to collect the necessary information with the API link. Now I will collect that information and store it in different constants.&lt;/span&gt;

            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;nameval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;descrip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;weather&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;description&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;tempature&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;main&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;temp&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;wndspd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;wind&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;speed&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="c1"&gt;//Now with the help of innerHTML you have to make arrangements to display all the information in the webpage.&lt;/span&gt;
            &lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;`Weather of &amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;nameval&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;span&amp;gt;`&lt;/span&gt;
            &lt;span class="nx"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Temperature: &amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt; &lt;span class="nx"&gt;convertion&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tempature&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt; C&amp;lt;/span&amp;gt;`&lt;/span&gt;
            &lt;span class="nx"&gt;description&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Sky Conditions: &amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;descrip&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;span&amp;gt;`&lt;/span&gt;
            &lt;span class="nx"&gt;wind&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHTML&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Wind Speed: &amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;wndspd&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; km/h&amp;lt;span&amp;gt;`&lt;/span&gt;

        &lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="c1"&gt;//Now the condition must be added that what if you do not input anything in the input box.&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;You entered Wrong city name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="c1"&gt;//If you click on the submit button without inputting anything in the input box or typing the wrong city name then the above text can be seen.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BrDF0z7---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f90v7prwp075mekoi7cs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BrDF0z7---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f90v7prwp075mekoi7cs.jpg" alt="build a weather app using javascript" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
Hopefully the tutorial and video above helped you to know how I created this JavaScript Weather application. If you have anything to say, be sure to let me know in the comments.&lt;/p&gt;

&lt;p&gt;If you have learned something from this tutorial, please like the article. You can &lt;a href="https://www.foolishdeveloper.com/2021/12/simple-weather-app-using-javascript.html"&gt;download the source code&lt;/a&gt; needed to create the Simple Weather app.&lt;/p&gt;

&lt;p&gt;You can visit my blog for more tutorials like this. 😊&lt;br&gt;
&lt;a href="https://www.foolishdeveloper.com/"&gt;https://www.foolishdeveloper.com/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Mistakes to Avoid As a Backend Developer</title>
      <author>Joseph Mania</author>
      <pubDate>Fri, 03 Dec 2021 16:46:18 +0000</pubDate>
      <link>https://dev.to/techmaniacc/mistakes-to-avoid-as-a-backend-developer-122j</link>
      <guid>https://dev.to/techmaniacc/mistakes-to-avoid-as-a-backend-developer-122j</guid>
      <description>&lt;p&gt;Currently, I can call myself a backend developer after a whole 3 years of coding. In short, a backend engineer is an individual who deals with the server-side, database, and configurations. This developer must have good knowledge of data structure and algorithms to implement the data in the right way. Minor knowledge to keep security safe.&lt;/p&gt;

&lt;p&gt;As you get more experience in the world of development, you notice it’s not all about the technical skills you have. It’s about using these skills to create a product that is efficient and reliable to non-technical users. This means you must observe the best practices when it comes to writing your code and using the right language or frameworks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Time, memory, and security&lt;/strong&gt; are the key features. If you are a backend developer, there are things you need to do to ensure your software responds as fast as possible. Furthermore, the code has to be clean and simple to allow the program to occupy the minimum space. This is where you need to learn about the mistakes that backend developers make. Be keen and stay updated on best practices.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learning-frameworks-before-the-language"&gt;
  &lt;/a&gt;
  Learning frameworks before the language.
&lt;/h2&gt;

&lt;p&gt;For sure, I had a friend who jumped directly into Django without learning any python. It’s the worst way of learning. Take an example, a child will never exist without a father. So when you want to reward them, you have to prioritize a father before narrowing it down to a kid. Kindly, learning PHP will give you the base foundation before jumping into laravel.&lt;/p&gt;

&lt;p&gt;Yes, you could succeed with frameworks, but they have their disadvantages too. We have people who have developed their site with raw HTML, CSS, JavaScript, and PHP, and their sites are good. Don’t prioritize frameworks over the core language. This can also apply to front-end engineers. Use the right path, learn the language, then swam into frameworks to save development time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#avoiding-code-review"&gt;
  &lt;/a&gt;
  Avoiding Code Review
&lt;/h2&gt;

&lt;p&gt;Of course, no one likes reading his/her code. However, this does not mean you deny your fellow members from reading your code. Let them correct your mistakes, no one is perfect. If you are writing shoddy work, we have to tell you the truth. Peer-to-peer review is very important, but if you are working on a single project, invite some of your friends to review the code. Ask senior developers to help you in one way or another. You will learn a lot.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#starting-a-project-without-knowing-the-tools"&gt;
  &lt;/a&gt;
  Starting a project without knowing the tools
&lt;/h2&gt;

&lt;p&gt;Here, developers argue among themselves which tool is the best. Let’s say you are working for a SaaS startup. You don’t follow the software engineering procedure, jump directly into the code. On the way, if you are working with a team, you might end up disagreeing. This is because each one of you has his/her favorite tools which they prefer. It is the task of a senior backend developer to choose the tools that are favorable to your team.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#less-knowledge-of-databases"&gt;
  &lt;/a&gt;
  Less knowledge of databases
&lt;/h2&gt;

&lt;p&gt;Don’t call yourself a backend engineer without having an intermediate knowledge of databases. In a different project, you will meet different types of databases. Take time and learn how popular DB like Postgres, MYSQL, MariaDB, and SQLite works. Read through the theory before learning the commands. In your lifetime, you will live to fetch and post data in and out of the database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#not-considering-the-security"&gt;
  &lt;/a&gt;
  Not considering the security
&lt;/h2&gt;

&lt;p&gt;It’s okay you are not a cybersecurity major, but you’re a developer and the manager expects everything to work right. Let’s say you launch your site today and someone breaks into it tomorrow. They will blame you. Remember, authentication is the backend process. This goes back to choosing your technology keenly. Recently, many people blame PHP for having loopholes, the reason why many wordpress sites are being hacked.&lt;br&gt;
I didn’t mean PHP is bad(in fact am learning it now😂😂), the community is developing a wall. Always have some knowledge on the best way to safeguard your site. Protect the database and admin panel from any malicious entry.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#overengineering-the-software"&gt;
  &lt;/a&gt;
  Over-engineering the software
&lt;/h2&gt;

&lt;p&gt;Yes, you are an engineer, but adding too many unwanted functionalities doesn’t make you a pro. However good you are, we don’t need your complex code. This is where senior engineers win the cake. Don’t promise too more than expected while implementing a product. Just write a simple code and document the process. If you find the problem to be too simple, just go straightforward solution. Don’t try to be perfect here, software development is sometimes a hard task.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#avoiding-to-read-documentation-of-languageframework"&gt;
  &lt;/a&gt;
  Avoiding to read documentation of language/framework
&lt;/h2&gt;

&lt;p&gt;Hey developers🙄😉, you have to read the documentation while using the technology or tools. YouTube and bloggers have the right knowledge. But if you want to understand the reason and why something works in that way, consult the documentation. Stay updated with the respective document to see the new and outdated features.&lt;/p&gt;

&lt;p&gt;Maybe my learning methodology 🤴 could help you. I always use tutorials or i read blogs as I learn certain frameworks. Then after two months, I will go step by step on the documentation to understand what it entails. You will notice a lot of new things that you haven’t used. Always consider the documentation over other sources.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
