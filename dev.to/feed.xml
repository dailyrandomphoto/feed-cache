<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Types Of Aircrafts In Aerospace Industry</title>
      <author>Sunith</author>
      <pubDate>Tue, 04 May 2021 07:50:59 +0000</pubDate>
      <link>https://dev.to/sunith573/types-of-aircrafts-in-aerospace-industry-3li7</link>
      <guid>https://dev.to/sunith573/types-of-aircrafts-in-aerospace-industry-3li7</guid>
      <description>&lt;p&gt;Introduction&lt;br&gt;
The future of aerospace engineering looks bright, particularly as developments in space exploration and space flight become a reality. Aerospace engineering is a profession that focuses on the construction and research of aircraft, spacecraft, and related technologies using engineering principles. &lt;/p&gt;

&lt;p&gt;Classification Of Aircraft&lt;br&gt;
When it comes to aircraft classifications, we're talking about classes of planes that have identical flying characteristics.&lt;br&gt;
The way they land, as well as their propulsion and in-flight handling. Airman certificate categories are even more closely related to classifications than aircraft categories.&lt;/p&gt;

&lt;p&gt;Lighter Than Air&lt;br&gt;
Balloons, non-rigid airships (blimps), and dirigibles are built to have a sufficient volume within their structure that, when filled with a gas lighter than air, they can fly.&lt;br&gt;
(heated air, hydrogen, or helium) displaces the ambient air and floats, similar to how a cork floats on water.&lt;/p&gt;

&lt;p&gt;Heavier Than Air&lt;br&gt;
This type of aircraft requires a power source to generate the thrust needed for lift. Kites are a simple heavier-than-air craft.&lt;/p&gt;

&lt;p&gt;Civil Aircraft&lt;br&gt;
Civil flights are all nonmilitary planes. Private and corporate jets, as well as commercial airliners, are among them.&lt;br&gt;
Private planes are single-engine monoplanes with non-retractable landing gear that are used for pleasure flying.&lt;/p&gt;

&lt;p&gt;Business Aircraft&lt;br&gt;
These flights are used to produce income for their owners and range from small single-engine planes used for pilot training or transporting small parcels over short distances to four-engine executive jets capable of crossing continents and oceans.&lt;/p&gt;

&lt;p&gt;Classification Of Spacecraft&lt;br&gt;
Spacecraft are specially developed and built structures capable of operating in hostile environments. Their capacities and sophistication differ greatly, as do their purposes.&lt;/p&gt;

&lt;p&gt;Flyby Spacecraft&lt;br&gt;
The initial reconnaissance phase of solar system exploration was carried out by flyby spacecraft. They maintain a constant solar orbit or escape trajectory, never entering planetary orbit.&lt;/p&gt;

&lt;p&gt;Orbiter Spacecraft&lt;br&gt;
A spacecraft designed to fly to a distant planet and enter into orbit around it must be able to decelerate quickly enough to achieve orbit insertion.&lt;/p&gt;

&lt;p&gt;Atmospheric Spacecraft&lt;br&gt;
Atmospheric satellites are planned for a brief mission to collect data on a planet's or satellite's atmosphere. A spacecraft's subsystem complement is usually reduced.&lt;/p&gt;

&lt;p&gt;Lander Spacecraft&lt;br&gt;
Lander spacecraft are intended to enter a planet's surface and stay long enough to transmit data back to Earth.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>EVOLUTION OF PLANES</title>
      <author>Dheeraj06</author>
      <pubDate>Tue, 04 May 2021 07:50:50 +0000</pubDate>
      <link>https://dev.to/dheeraj176/evolution-of-planes-2dd8</link>
      <guid>https://dev.to/dheeraj176/evolution-of-planes-2dd8</guid>
      <description>&lt;p&gt;The first successful powered flight took place in 1903, and it was a huge success. On December 17th, 1903, near Kitty Hawk, North Carolina, Wilbur and Orville Wright flew the first powered aeroplane. The Wright brothers kept working on it, and by 1905, their third plane, the Wright Flyer III, could fly for longer periods of time with greater control. The notion of flying in the same domain as birds has occupied human minds since the dawn of intelligence.&lt;br&gt;
All early ideas about human flight were based on bird mimicry. Several. Unknown ancient and mediaeval people fashioned wings and attempted to leap from towers or roofs flapping violently, with often catastrophic and often futile results. On November 21, 1783, a balloon carrying Pilatre de Rozier and the Marquis d'Arlandes soared into the air and drifted 5 miles across Paris, marking the beginning of human flight.&lt;br&gt;
Hot air from an open fire burning in a big wicker basket underneath inflated and buoyed the balloon. The Montgolfier's were ready for the big move after many public presentations of flight without human passengers, including an 8-minute journey in a balloon carrying a cage containing a pig, a rooster, and a duck. The first flight with human passengers took to the air at 1:54 p.m. on November 21, 1783, and lasted 25 minutes.&lt;/p&gt;

&lt;p&gt;The real creator Of aircraft was "SIR GEORGE CAYLEY (1773-1857)".&lt;br&gt;
George Cayley's blueprint for the modern aeroplane was first proposed in 1799. It was the first design to incorporate a fixed wing for lift, a separate propulsion system (Cayley envisioned paddles), and a horizontal and vertical (cruciform) tail for stability.&lt;br&gt;
Pre Wright Brother Era To Present Plane:&lt;br&gt;
From the early Wright Flyer flown at Kittyhawk to today's supersonic SR-71 Blackbird, aircraft have evolved dramatically over the last century.&lt;br&gt;
Aeronautical/Aerospace engineering has progressed in many areas, each of which has progressed at a different rate: a) aerodynamics, b) power plant engineering, c) control, radios, and navigation aids, d) airframe engineering (hydraulic/electrical systems, internal fittings, and so on), and finally e) structural design.&lt;/p&gt;

&lt;p&gt;The design of aerospace structures, on the other hand, has only taken one fundamental step forward, but this improvement was sufficient to change the entire design process, as will be discussed in this section.&lt;/p&gt;

&lt;p&gt;Hence, As the aircraft industry passes the days, development and design are rising considerably.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Create CSS Gradient Animations Effortlessly 🌌</title>
      <author>Jordi Enric</author>
      <pubDate>Tue, 04 May 2021 07:42:08 +0000</pubDate>
      <link>https://dev.to/jordienr/create-css-gradient-animations-effortlessly-3ok3</link>
      <guid>https://dev.to/jordienr/create-css-gradient-animations-effortlessly-3ok3</guid>
      <description>&lt;p&gt;Here's a preview of what we'll make 👇&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jordienric/embed/JjEVgXv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-create-a-gradient"&gt;
  &lt;/a&gt;
  1. Create a gradient
&lt;/h2&gt;

&lt;p&gt;I'll save mine in a variable for easy reuse.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--main-gradient&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-66deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#15162a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#291a33&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#381a2c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#121e42&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-create-a-container-div-and-add-the-background"&gt;
  &lt;/a&gt;
  2. Create a container div and add the background
&lt;/h2&gt;

&lt;p&gt;We use background-size to zoom into the gradient.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--main-gradient&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-create-the-animation"&gt;
  &lt;/a&gt;
  3. Create the animation
&lt;/h2&gt;

&lt;p&gt;This is a basic animation that changes the background-position. Since we zoomed into the gradient it will look like it's moving.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;gradient&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;00%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-add-the-animation-to-our-container"&gt;
  &lt;/a&gt;
  4. Add the animation to our container!
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--main-gradient&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gradient&lt;/span&gt; &lt;span class="m"&gt;8s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check the codepen &lt;a href="https://codepen.io/jordienric/pen/JjEVgXv"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#follow-me-on-twitter-for-more"&gt;
  &lt;/a&gt;
  Follow me on &lt;a href="https://twitter.com/jordienr"&gt;twitter&lt;/a&gt; for more!
&lt;/h3&gt;

</description>
      <category>css</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Clean Your Code</title>
      <author>Alestor Aldous</author>
      <pubDate>Tue, 04 May 2021 07:40:42 +0000</pubDate>
      <link>https://dev.to/alestor_123/clean-your-code-19dp</link>
      <guid>https://dev.to/alestor_123/clean-your-code-19dp</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WePytQwN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/engpw4yxpik02dnzg5qt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WePytQwN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/engpw4yxpik02dnzg5qt.png" alt="title"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#so-what-is-it-about"&gt;
  &lt;/a&gt;
  So What Is It About
&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Just chill and read &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So i was fixing some messy code as i dig deeper i noticed a set of code that could have been easily made better had the developer put a little effort into fixing it during the inception instead of leaving it “Latter ... ”. Legacy code is mostly the result of developers not trying to  “stay clean” . Small things that may seem little while you are doing them, could easily pile up and haunt you or the next developer at later time.you should have the habbit to keep it clean while you are coding. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#if-you-dont-follow-the-rules-youll-end-like-this-"&gt;
  &lt;/a&gt;
  If you dont follow the rules you'll end like this :
&lt;/h1&gt;

&lt;p&gt;(from yoyo code) :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zq8s8P-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://yoyo-www.yoyogames.com/images/pages/blog/finish/1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zq8s8P-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://yoyo-www.yoyogames.com/images/pages/blog/finish/1.png" alt="yoyocode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-about-cleaning-up-the-messy-code-that-you-wrote-while-waiting-for-the-pr-approval-"&gt;
  &lt;/a&gt;
  What about cleaning up the messy code that you wrote while  waiting for the PR approval ?
&lt;/h2&gt;

&lt;p&gt;Ans :  Bad code is going to attract more bad code and force you  to refactor it “later..”. Do it  yourself  teach yourself the habit of clean coding instead of leaving it for “refactoring later”.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fell-free-to-discuss-about-you-refactoring-methods"&gt;
  &lt;/a&gt;
  Fell free to discuss about you refactoring methods
&lt;/h3&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#keep-coding-"&gt;
  &lt;/a&gt;
  Keep Coding !!!
&lt;/h1&gt;

&lt;h1&gt;
  &lt;a href="#share-with-your-friends-on-twitter"&gt;
  &lt;/a&gt;
  🙏 Share with your friends on &lt;a href="https://twitter.com/intent/tweet?text=%22Clean%20Your%20Code%22%20by%20@alestor123%20%23DEVCommunity%20https://dev.to/alestor_123/clean-your-code-19dp"&gt;Twitter&lt;/a&gt;
&lt;/h1&gt;

</description>
      <category>codequality</category>
      <category>codereview</category>
      <category>discuss</category>
      <category>opensource</category>
    </item>
    <item>
      <title>7 pieces of advice I wish I knew when I started as a Junior Software Engineer</title>
      <author>Jordi Enric</author>
      <pubDate>Tue, 04 May 2021 07:38:46 +0000</pubDate>
      <link>https://dev.to/jordienr/7-pieces-of-advice-i-d-give-to-my-younger-developer-self-np6</link>
      <guid>https://dev.to/jordienr/7-pieces-of-advice-i-d-give-to-my-younger-developer-self-np6</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@corinarainer?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Corina Rainer&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/taking-notes?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Someone asked this question recently and this are my thoughts about it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#write-more-amp-take-notes"&gt;
  &lt;/a&gt;
  Write more &amp;amp; take notes
&lt;/h2&gt;

&lt;p&gt;Writing is a really valuable skill for developers, the sooner you start developing it the better. Take notes so you have stuff you can write about later.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#teach-what-you-learn"&gt;
  &lt;/a&gt;
  Teach what you learn
&lt;/h2&gt;

&lt;p&gt;The best moment to teach something is when you just learned it. Apply to do workshops with other developers, write articles, create videos. Teach what you learned and you will solidify that knowledge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#show-your-work"&gt;
  &lt;/a&gt;
  Show your work
&lt;/h2&gt;

&lt;p&gt;You'll feel imposter syndrome every time. Publish articles, create websites, try to get people to use them. You'll only find the things you can improve at when you see people reacting to your work. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-people"&gt;
  &lt;/a&gt;
  Connect with people
&lt;/h2&gt;

&lt;p&gt;Try not to be just a lurker and participate in conversations about topics you're interested in. Give your opinion and your thoughts. Learn from others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ask-more-questions-even-the-stupid-ones"&gt;
  &lt;/a&gt;
  Ask more questions, even the stupid ones
&lt;/h2&gt;

&lt;p&gt;Specially the stupid ones. Asking questions will start conversations that will make you learn 100% times more than tutorials and books.&lt;/p&gt;

&lt;p&gt;Asking good questions is a great skill, and you develop it by asking stupid questions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chill-you-dont-have-to-know-everything-by-tomorrow"&gt;
  &lt;/a&gt;
  Chill, you don't have to know everything by tomorrow
&lt;/h2&gt;

&lt;p&gt;Learn things as you need them. Don't rush it or you'll burn out of tutorials, books and making projects for the sake of learning technologies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-healthy-lifestyle-will-make-you-more-productive"&gt;
  &lt;/a&gt;
  A healthy lifestyle will make you more productive
&lt;/h2&gt;

&lt;p&gt;5 hours of work a day, exercise and healthy diet will get more done than 12 hours of work a day. If it's not sustainable don't do it.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/jordienr"&gt;twitter&lt;/a&gt; for more.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>codenewbie</category>
      <category>career</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 9 PHP Frameworks For Web Development In 2021</title>
      <author>Rahul</author>
      <pubDate>Tue, 04 May 2021 07:21:25 +0000</pubDate>
      <link>https://dev.to/jainrahul/top-9-php-frameworks-for-web-development-in-2021-3phg</link>
      <guid>https://dev.to/jainrahul/top-9-php-frameworks-for-web-development-in-2021-3phg</guid>
      <description>&lt;p&gt;With an average global salary of $39k, &lt;a href="https://www.php.net/"&gt;PHP&lt;/a&gt; is one of the most popular programming languages in the developer community. It’s the language behind the most popular CMS, WordPress. It is in-use by &lt;a href="https://w3techs.com/technologies/overview/programming_language"&gt;79%&lt;/a&gt; of total websites globally, including the most used social network- Facebook, the largest digital encyclopedia – Wikipedia, China’s news giant Xinhuanet, and Russia’s social network VK.com.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0fjOo52M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/programming-language.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0fjOo52M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/programming-language.png" alt="programming language"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It would be unfair not to credit the rising number of PHP web development frameworks in popularising PHP. Today, we’ve some really good web development frameworks in PHP like Laravel, CodeIgniter, CakePHP, etc. These development frameworks provide a set of libraries &amp;amp; API functions to accelerate the web application development process securely.&lt;/p&gt;

&lt;p&gt;Sadly, despite all these glittery facts &amp;amp; figures, some dare say “PHP is a dead language.” In fact, in a recent survey, 62% of respondents voted PHP as one of the most dreaded programming languages. In the same study, only 3% desired to learn PHP. But google trends for search keywords “php” and “javascript” narrate another story. While the debates will continue, be assured that PHP is not dying anytime soon. Having said that, check out the 9 most popular &lt;a href="https://www.lambdatest.com/blog/9-of-the-best-php-frameworks-for-web-development-2021/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Rahul-4052021&amp;amp;utm_term=Rahul"&gt;PHP frameworks for web development&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uMWNXd2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/google-trend-1024x426.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uMWNXd2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/google-trend-1024x426.png" alt="google trend"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-best-php-frameworks-for-website-development-in-2021"&gt;
  &lt;/a&gt;
  9 best PHP frameworks for website development in 2021
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#1-laravel"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://laravel.com/"&gt;Laravel&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p-0yfA1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/larvel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p-0yfA1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/larvel.png" alt="larvel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Laravel is one of the most popular PHP frameworks for web development with &lt;a href="https://github.com/laravel/laravel"&gt;64k+ stars&lt;/a&gt; on GitHub. Though it ranks 7 on &lt;a href="http://www.phpbenchmarks.com/en/"&gt;PHP Benchmarks&lt;/a&gt; list of top-performing web development PHP frameworks, it tops our list given its huge community, rich feature set, and ease of use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why should you consider Laravel?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open source, huge community, Extensive documentation, Zero overheads for CFOs, LTS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Laravel is an open-source web development framework. Of-course, free. It enjoys awe-inspiring support from the PHP developer community. And as a result, Laravel wheels are always in motion. Right from its launch in 2011 to the time of writing this insight, there have been 20 mega releases, Laravel 8 being the latest stable version. The Laravel web framework community provides LTS versions too. Laravel 6.0 LTS is currently under support. Versions before it are no longer maintained.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Performance, Security &amp;amp; Scalability, faster-time-to-market&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cx07uKi8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/laravel-performance.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cx07uKi8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/laravel-performance.png" alt="laravel performance"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can securely develop Laravel powered apps using MVC architecture. Using an object-oriented and functional programming approach, you can develop highly modular code-bases for your application. This modularity and segmented architecture make the Laravel web framework highly extensible. That means Laravel developers can leverage ready-to-use first-party packages like Envoy, Passport, Horizon, Cashier, JetStream, and Fortify. This also saves significant development time, and new products can be shipped with faster-time-to-market. In-built authentication features can leverage encrypted storage of data for enhanced security. Performance can be boosted by using session &amp;amp; cached memory, optimizing the garbage collection process would also mean improved task execution.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Rich off-the-shelf features&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Built-in access management features for easy authentication &amp;amp; user management&lt;/li&gt;
&lt;li&gt;Easily integrate with popular email services like Amazon SES, sendmail, etc., Delivering messages through SMS/ Slack is also possible.&lt;/li&gt;
&lt;li&gt;In-built Eloquent ORM to convert data between incompatible type systems. Eloquent ORM is an API interface to easily interact with the database. Developers don’t need to write complex queries.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advanced &lt;a href="https://laravel.com/docs/8.x/eloquent"&gt;Eloquent -ORM query example&lt;/a&gt; to select destinations –&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use App\Models\Destination;
use App\Models\Flight;

return Destination::addSelect(['last_flight' =&amp;gt; Flight::select('name')
    -&amp;gt;whereColumn('destination_id', 'destinations.id')
    -&amp;gt;orderByDesc('arrived_at')
    -&amp;gt;limit(1)
])-&amp;gt;get();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Bundle packaging system and composer dependency manager for integrating framework agnostic packages to your PHP web development project. You may use ‘Packalyst,’ which is a huge collection of Laravel PHP packages, 1500+ in total.&lt;/li&gt;
&lt;li&gt;“Reverse routing” for linking and routes, CLI interface, “Blade templating engine” for designing templates, “RESTful controllers” for request handling, in-built “PHUnit Testing,” “Lazy collection,” “Database seeding,” “Real Time-event broadcasting,” “background processing” are some other features that make development work with Laravel an easy-peasy experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the reasons it is considered among the best PHP frameworks for website development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who uses the Laravel framework for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mastercard&lt;/li&gt;
&lt;li&gt;Razorpay&lt;/li&gt;
&lt;li&gt;Olx&lt;/li&gt;
&lt;li&gt;Wattpad&lt;/li&gt;
&lt;li&gt;TransferGo&lt;/li&gt;
&lt;li&gt;9GAG, and &lt;a href="https://stackshare.io/laravel"&gt;3000+ companies&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore Laravel framework alternatives for web development?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No built-in support is available in RoR or Django framework.&lt;/li&gt;
&lt;li&gt;Easy to start, complex to master.&lt;/li&gt;
&lt;li&gt;Usual open-source LTS issues, i.e., migration issues and incompatibility of newer versions with older ones.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-codeigniter"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.codeigniter.com/"&gt;CodeIgniter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Hd0CtNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/codeigniter.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Hd0CtNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/codeigniter.png" alt="codeigniter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodeIgniter is a rapid web application development framework with a ridiculously small size. CodeIgniter 4, the latest version of CodeIgniter, is a mere 1.2 MB in size. Like Laravel, it’s open-source and boasts &lt;a href="https://github.com/bcit-ci/CodeIgniter"&gt;18k+ stars&lt;/a&gt; on GitHub. Just because of how bare-bone it is, we have included it in the second position. Like several other frameworks, CodeIgniter provides a set of libraries and an intuitive interface to accelerate PHP web app development. Currently, this is not tracked by PHPbenchmarks.com but is considered among the best PHP frameworks for website development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of CodeIgniter?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Server requirements&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Codeigniter framework v4 requires PHP 7.2 or above.&lt;/li&gt;
&lt;li&gt;Supports MySQL, PostgreSQL, SQLite3&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is partly &lt;a href="https://www.php-fig.org/psr/"&gt;PSR-compliant&lt;/a&gt;. This means it follows PHP standard recommendations for class and file naming standards, implements autoloading and logger interface, but doesn’t strictly follow caching or HTTP message interface.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Easy to get started. You may directly download CodeIgniter, or you can use composer to install it. Consider it as the “create-react-app” of PHP-CodeIgniter. All you need to do is execute the below command to get started with CodeIgniter:&lt;br&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer create-project codeigniter4/appstarter project-root
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;CodeIgniter applications can be built using MVC architecture and adhere to object-oriented programming practices.&lt;/li&gt;
&lt;li&gt;It provides classes for FTP, image manipulation, email sending, user-agent, unit testing, security, encryption, caching driver, throttling, typography, pagination, form validation, etc. It also provides two tools, i.e., Timer &amp;amp; Iterator, for benchmarking your PHP application.&lt;/li&gt;
&lt;li&gt;You can carry out feature testing by extending FeatureTestCase or FeatureTestTrait class. The template for writing test cases looks as below-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php namespace App;

use CodeIgniter\Test\FeatureTestCase;

class TestFoo extends FeatureTestCase
{
    public function setUp(): void
    {
        parent::setUp();
    }

    public function tearDown(): void
    {
        parent::tearDown();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Who uses CodeIgniter for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sprout Social&lt;/li&gt;
&lt;li&gt;Buffer&lt;/li&gt;
&lt;li&gt;Grindr&lt;/li&gt;
&lt;li&gt;3M&lt;/li&gt;
&lt;li&gt;Geekyants&lt;/li&gt;
&lt;li&gt;Accenture&lt;/li&gt;
&lt;li&gt;Ola&lt;/li&gt;
&lt;li&gt;Remitly&lt;/li&gt;
&lt;li&gt;Amplify&lt;/li&gt;
&lt;li&gt;BigBazaar, and &lt;a href="https://stackshare.io/codeigniter"&gt;1700+ others&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No templating engine&lt;/li&gt;
&lt;li&gt;No official stand on LTS versions&lt;/li&gt;
&lt;li&gt;No in-built authentication, authorization features&lt;/li&gt;
&lt;li&gt;Developers have to write their modules from scratch, while in other best PHP web frameworks like Laravel, a rich set of in-built ready-to-use modules are available.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-symfony"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://symfony.com/"&gt;Symfony&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iNNEQgMx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/symfony.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iNNEQgMx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/symfony.png" alt="symfony"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PHP Benchmarks rank Symfony at number 3 in the list of PHP frameworks for web development. With &lt;a href="https://github.com/symfony/symfony"&gt;24.5k+ GitHub stars&lt;/a&gt;, Symfony is not just a PHP web development framework but also provides a set of 50 stand-alone reusable PHP components for faster web app development. Using Symfony, you can develop web applications, microservices, and APIs too. With commercial support from SensioLabs, Symfony stands ahead of many on the list.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Symfony?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;50+ decoupled components easily installable using composer.&lt;/li&gt;
&lt;li&gt;You’ve ‘Lock’ component for managing access to shared resources, ‘Routing’ for obviously implementing routes, ‘Guard’ for creating complex authentications, ‘MIME’ for manipulating MIME messages and creating advanced emails, ‘Security’ for advanced authorizations, ‘PHPUnit Bridge’ for test reporting.&lt;/li&gt;
&lt;li&gt;Symfony uses open-source Doctrine ORM for database operations. It’s a great alternative to writing repetitive SQL code.&lt;/li&gt;
&lt;li&gt;Symfony supports a diverse set of databases MySql, Oracle, PostgreSQL, SQLite, SQL Server, and SAP Sybase, etc.,&lt;/li&gt;
&lt;li&gt;Though PHP itself is a templating language, Symfony provides Twig, a fast, secure, and flexible templating engine. It makes templating concise through its template-oriented syntax. For example, printing default value while looping over an empty array looks as compact as:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{% for player in players %}
    * {{ player.score }}
{% else %}
    No players data.
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is why it is counted among the best PHP frameworks for website development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who uses Symfony for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BlaBlaCar&lt;/li&gt;
&lt;li&gt;Spotify&lt;/li&gt;
&lt;li&gt;Magento&lt;/li&gt;
&lt;li&gt;Statista&lt;/li&gt;
&lt;li&gt;Practo&lt;/li&gt;
&lt;li&gt;Naukri.com&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For simpler projects, Laravel would make more sense.&lt;/li&gt;
&lt;li&gt;Laravel beats Symfony in performance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-laminas-project"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://getlaminas.org/"&gt;Laminas Project&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SQeI6VC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/laminas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SQeI6VC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/laminas.png" alt="laminas"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Laminas Project is a continuation of one of the most popular PHP web development frameworks, i.e., the Zend PHP framework. Zend had 5k+ GitHub stars before transitioning into the Laminas Project. Zend v3 still ranks 5th in PHPBenchmark. Laminas has three major verticals:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mezzio for building middleware applications in PHP.&lt;/li&gt;
&lt;li&gt;Mezzio for building middleware applications in PHP.&lt;/li&gt;
&lt;li&gt;API tools for creating RESTful APIs in PHP.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Laminas?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is indeed an enterprise-ready PHP web development framework. Laminas Project provides components for dependency injection, caching, form validations, PubSubHubbub(WebSub) interactions, logging, routing, pagination, session managements, diagnostic tests, event dispatchers, feed parsers, etc.&lt;/li&gt;
&lt;li&gt;Event-driven flexible MVC framework for building scalable PHP applications.&lt;/li&gt;
&lt;li&gt;Supported databases include MySQL, MS SQL Server, Oracle, MariaDB, IBMDB2, PostgreSQL, etc.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some noteworthy components of the Laminas framework, apart from the usual ones:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;‘Laminas-log’ – is a PSR-3 compliant logger with support for filtering and formatting.&lt;/li&gt;
&lt;li&gt;‘Laminas-form’ for implementing complex forms, casting them into business objects.&lt;/li&gt;
&lt;li&gt;Laminas-math’ for generating cryptographic numbers&lt;/li&gt;
&lt;li&gt;‘Laminas-session’ for object-oriented interface to session &amp;amp; storage&lt;/li&gt;
&lt;li&gt;‘Laminas-cache’ for caching implementations and codified caching storage strategies for callbacks.&lt;/li&gt;
&lt;li&gt;‘Laminas-db’ for database abstraction, SQL operations.&lt;/li&gt;
&lt;li&gt;‘Laminas-xml2json’ for converting xml documents to JSON format.&lt;/li&gt;
&lt;li&gt;‘Laminas-SOAP’ for creating SOAP applications and interacting with them.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Who uses Laminas for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://www.linuxfoundation.org/blog/lf-forms-laminas-project"&gt;LinuxFoundation&lt;/a&gt;, the Zend framework (now Laminas) has been downloaded more than 400 Mn times. The prominent users include BNP Paribas, BBC, and Offers.com.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Laravel beats ZEND in terms of performance.&lt;/li&gt;
&lt;li&gt;Documentation is not beginner-friendly. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-yii"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.yiiframework.com/"&gt;Yii&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KsMSh6go--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/yii.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KsMSh6go--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/yii.png" alt="yii"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Yii framework has a whopping 11Mn+ downloads from Packagist and 13.6k+ stars on GitHub. Yii, branded as ‘YES, it is!’, is a fast, secure, flexible PHP framework for web development, especially for building MVC architecture websites. It ranks 4 on the PHP Benchmarks list. Yii is a strictly Object-Oriented PHP framework and requires knowledge of inheritance, polymorphism, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Yii?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Thorough Documentation – From installation to explaining web concepts to deploying applications and everything in-between, Yii has documented it all.&lt;/li&gt;
&lt;li&gt;Robust Cache Component – From server side caching to client-side in browser caching, Yii has easy to follow guides for implementing different sorts of caching i.e., data caching, fragment caching, page caching, query caching, HTTP caching etc. For instance,
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// to fetch cached data
$data = $cache-&amp;gt;get($key);
if ($data === false) {
    // $data is unavailable. Compute it from scratch
    $data = $this-&amp;gt;computeFromScratch();
    // now store the static data to cache
    $cache-&amp;gt;set($key, $data);
}
// $data will be available for cache retrieval.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;You can rapidly prototype an MVP using the GII2 code generator provided by Yii to implement CRUD operations for a database.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Security features – Yii provides frameworks &amp;amp; guidelines for implementing authentication, authorization, cryptographic features, password handling, trusted proxies, and headers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For example, authentication can be implemented using the ‘User component’ and implementing Yii’s ‘IdentityInterface’ interface.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Similarly, Yii provides components and classes for handling requests, working with databases, displaying data, fetching data, debugging code, and many more.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Who uses Yii for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deloitte&lt;/li&gt;
&lt;li&gt;Fujitsu&lt;/li&gt;
&lt;li&gt;Lenovo&lt;/li&gt;
&lt;li&gt;Discovery&lt;/li&gt;
&lt;li&gt;Lulo&lt;/li&gt;
&lt;li&gt;Utrip&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Strong object-oriented programming prerequisite.&lt;/li&gt;
&lt;li&gt;If performance is a priority, then better alternatives are available.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-cakephp"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://cakephp.org/"&gt;CakePHP&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hYyqTdWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/cake-php.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hYyqTdWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/cake-php.png" alt="cake php"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CakePHP is an open-source web development PHP framework. It’s ranked 6th in PHP Benchmarks, just above the Laravel web development framework. The newly released v4.0 comes with a renovated skeleton design and provides APIs to enable developers for rapid application development. On GitHub, it has 8.3k+ stars and 555 contributors. For commercial support, you have cakeDC. CakeDC is the organization behind CakePHP. You can build highly secure and scalable web applications, including social networks, eCommerce, and online collaboration platforms using CakePHP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of CakePHP?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It adheres to MVC architecture for PHP-powered web application development.&lt;/li&gt;
&lt;li&gt;Supports other popular design patterns like Associative Data Mapping, Front Controller, etc.&lt;/li&gt;
&lt;li&gt;Supports other popular design patterns like Associative Data Mapping, Front Controller, etc.&lt;/li&gt;
&lt;li&gt;You can leverage code generation and scaffolding features for faster prototype development. Scaffolding refers to techniques to easily access databases or generate project code using certain high-level tools.&lt;/li&gt;
&lt;li&gt;Like many other web development frameworks in this list, the CakePHP web development framework also gets shipped with all batteries included. You have ready-to-use Caching, authentication, validation, internationalization, database APIs features.&lt;/li&gt;
&lt;li&gt;Minimal configuration required. No need for YAML or XML config files.&lt;/li&gt;
&lt;li&gt;You get paid support if required.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You’ve Namespace cake/ORM with classes for&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eager-loading (EagerLoader)&lt;/li&gt;
&lt;li&gt;registry/factor tables (TableRegistry)&lt;/li&gt;
&lt;li&gt;Handling and loading of construction behavior objects (BehaviorRegistry)&lt;/li&gt;
&lt;li&gt;Converting array data into entities (Marshaller)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This makes it count among the best PHP frameworks for website development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who uses CakePHP for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hyundai&lt;/li&gt;
&lt;li&gt;BMW&lt;/li&gt;
&lt;li&gt;Blendtec&lt;/li&gt;
&lt;li&gt;MIT&lt;/li&gt;
&lt;li&gt;Billabong&lt;/li&gt;
&lt;li&gt;Edureka&lt;/li&gt;
&lt;li&gt;House Party&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Abrupt migrations.&lt;/li&gt;
&lt;li&gt;If you’re building performance-critical applications. It’s not like CakePHP’s performance is not good, but if performance comparing websites have ranked other frameworks to be better performing, you must consider their candidature.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-slim"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://www.slimframework.com/"&gt;Slim&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DWj-M4sP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/slim-1024x234.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DWj-M4sP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/slim-1024x234.png" alt="slim"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unlike the other web development PHP frameworks mentioned above, Slim, as the name goes, is a PHP micro-framework for web development. Are you aware of micro-frameworks? The ones listed above are full-stack frameworks. Slim, with 10k+ stars on GitHub, is a minimalistic web application and API development framework. Basically, this means you will only have the recipe and won’t get any ready-to-consume functions. In a full-stack framework, you get components, classes, interface for authorization, authentication, routing, paging, database operations, etc. In micro-framework, you get bare minimum support for HTTP requests and routing requests to appropriate controllers. Then why choose a micro-framework? Because it gives you flexibility and high-extensibility.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Slim?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Efficient, fast routers – Slim ships with powerful ROUTER. This maps routes to specific HTTP request handler methods and URLs. Router natively supports different URL types, including the ones with parameters and patterns. Pattern-based URLs are commonly implemented in e-commerce apps.&lt;/li&gt;
&lt;li&gt;PSR-7 Support – It’s necessary to implement PSR-7 implementation in your Slim project.&lt;/li&gt;
&lt;li&gt;Extensible with first-party PHP components and third-party PHP components on packagist.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Who uses Slim for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gamned&lt;/li&gt;
&lt;li&gt;Bootiq&lt;/li&gt;
&lt;li&gt;AgriTask&lt;/li&gt;
&lt;li&gt;GreenBot&lt;/li&gt;
&lt;li&gt;HHEY&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why to explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you need a full-stack framework.&lt;/li&gt;
&lt;li&gt;Steep learning curve for complex projects.&lt;/li&gt;
&lt;li&gt;For large projects, microframeworks are not suited. No point in reinventing the wheels.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#8-phalcon"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://phalcon.io/en-us"&gt;Phalcon&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oO-ZTMiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/phalcon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oO-ZTMiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/phalcon.png" alt="phalcon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Phalcon is a platform-agnostic ridiculously fast web development PHP framework delivered as a C-extension. It provides high performance and low resource consumption. On GitHub, it has scored 10k+ stars and has 242+ contributors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Phalcon?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Low overheads for MVC architecture web applications – It is compiled to the native platform and is not interpreted.&lt;/li&gt;
&lt;li&gt;The C-extensions classes and functions are loaded with PHP on the webserver as the daemon process starts.&lt;/li&gt;
&lt;li&gt;You can build both single and multi-module MVC applications, as depicted in the image above.&lt;/li&gt;
&lt;li&gt;You can leverage dependency injection features, autoloader features, phalcon ORM for playing with DB records.&lt;/li&gt;
&lt;li&gt;It natively supports PostgreSQL, MySQL, and SQLite.&lt;/li&gt;
&lt;li&gt;You have Phalcon query language for writing queries, Phalcon transactions to ensure data integrity.&lt;/li&gt;
&lt;li&gt;The Phalcon cache component supports backends like Redis, Memcached, Mongo, etc., for quick access to pre-processed data.&lt;/li&gt;
&lt;li&gt;Form-builder, flash messages, VOLT templating engine, translation components are other features worth noting.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the main reasons to consider Phalcon among the best PHP frameworks for website development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who uses Phalcon for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SocialVeo&lt;/li&gt;
&lt;li&gt;KingHost&lt;/li&gt;
&lt;li&gt;Proshore&lt;/li&gt;
&lt;li&gt;Urban Sports Club&lt;/li&gt;
&lt;li&gt;PlaceOnAir&lt;/li&gt;
&lt;li&gt;ESCHER&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not ideal for shared hosting.&lt;/li&gt;
&lt;li&gt;No C know-how is required, but if a critical framework level issue arises, you need to debug in C.&lt;/li&gt;
&lt;li&gt;More Popular framework alternatives with huge communities are available.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#9-lumen"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://lumen.laravel.com/"&gt;Lumen&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qUN0pB6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/lumen.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qUN0pB6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/lumen.jpg" alt="lumen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lumen is a micro-framework for developing PHP-powered web applications. It is written in PHP and created by the Laravel team itself. Lumen has 7.1k+ stars on GitHub and 45+ contributors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EEQY9haX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/lumen-record.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EEQY9haX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/lumen-record.png" alt="lumen record"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Lumen?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can build lightning-fast APIs and microservices for Laravel based applications using Lumen. It is faster than Slim and Silex, the other popular alternative PHP microframeworks.&lt;/li&gt;
&lt;li&gt;You can use Laravel features like Eloquent ORM, testing, validation, authorization, caching, queues, views, etc., with minimal configurations.&lt;/li&gt;
&lt;li&gt;Easily upgradable to full-fledged Laravel application if need be.&lt;/li&gt;
&lt;li&gt;Can leverage Laravel Homestead for meeting system requirements. It works with PHP&amp;gt;=7.3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Can leverage Laravel Homestead for meeting system requirements. It works with PHP&amp;gt;=7.3&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Threat data science&lt;/li&gt;
&lt;li&gt;Index.co&lt;/li&gt;
&lt;li&gt;Publy&lt;/li&gt;
&lt;li&gt;Piio&lt;/li&gt;
&lt;li&gt;ZenChef&lt;/li&gt;
&lt;li&gt;Agro24&lt;/li&gt;
&lt;li&gt;mPokket&lt;/li&gt;
&lt;li&gt;Rooter&lt;/li&gt;
&lt;li&gt;Codepolitan&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you don’t like Laravel.&lt;/li&gt;
&lt;li&gt;If you need a full-stack and best PHP web framework.&lt;/li&gt;
&lt;li&gt;More suited to microservices and APIs, for large-scale applications, consider a full-stack PHP web development framework.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up!
&lt;/h2&gt;

&lt;p&gt;PHPixie, FuelPHP, Ubiquity, Symlex are some other popular &amp;amp; rising PHP web development frameworks. If you’re building a new web application, we think you must be informed that multiple intuitive web development frameworks have evolved over the years. AngularJs, ReactJs ( not a framework but a library), and Django are creating strong ripples in the web community.&lt;/p&gt;

&lt;p&gt;So, if you’re just exploring web development, do consider these PHP alternatives. If you’re already a PHP pro, choose any PHP web development frameworks that best suit your needs. Irrespective of the framework you chose for development, LambdaTest is versatile enough to support all your web application testing requirements with out-of-the-box features like &lt;a href="https://www.lambdatest.com/responsive-test-online?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Rahul-4052021&amp;amp;utm_term=Rahul"&gt;responsive testing&lt;/a&gt; over 45+ devices, parallel testing, simulated network testing, recording testing sessions, etc. Have you subscribed to the &lt;a href="https://www.lambdatest.com/newsletter/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Rahul-4052021&amp;amp;utm_term=Rahul"&gt;LambdaTest newsletter&lt;/a&gt; yet? Ah! I wouldn’t have missed it 🙂 Happy Testing!&lt;/p&gt;

</description>
      <category>php</category>
      <category>framework</category>
      <category>webdev</category>
    </item>
    <item>
      <title>AWS open source news and updates #66</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Tue, 04 May 2021 07:07:35 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-66-1bhj</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-66-1bhj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#may-4th-2021-instalment-66"&gt;
  &lt;/a&gt;
  May 4th, 2021 - Instalment #66
&lt;/h2&gt;

&lt;p&gt;Newsletter #66. &lt;/p&gt;

&lt;p&gt;This week we have a really outstanding collection of new open source projects, including eventbridge-atlas, ecsk, spotinfo, pecos and more, so make sure you spend some time checking those out. Following on from CDK Day, we have plenty of great posts for CDK fans. As always, there are lots of great community and AWS blog posts covering event driven architectures, containers, big data, and so happy to see the AWS DeepRacer open source announcements last week. Finally, we have a couple of great videos, a podcast and events you should check out and put in your diary.&lt;/p&gt;

&lt;p&gt;Before you dive in, make sure you are aware of the following important updates from last week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NodeJS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are using NodeJS then last week we had an important post that you should read and check out the recommendations. Trivikram Kamat writes in, &lt;a href="https://aws-oss.beachgeek.co.uk/fw"&gt;Announcing the end of support for Node.js &amp;lt;10.x in the AWS SDK for JavaScript (v2)&lt;/a&gt; the timelines, versions as well as the motivation behind this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Neuron&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/aws/aws-neuron-sdk"&gt;AWS Neuron&lt;/a&gt; is the SDK for running machine learning inference using AWS Inferentia chips, and last week we announced an important change in how you install and update this SDK. To find out more, read &lt;a href="https://aws-oss.beachgeek.co.uk/go"&gt;End of support for Neuron Conda packages in Deep Learning AMI&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Matt Hansen, Eric Johnson, Al MS, Michele Sancricca, Hari Rajaram, Jeremy Ber, Kumar Abhinav, David Duncan, Tracy Pierce, Trivikram Kamat, Zachary Whitford, Richa Prajapati, Aldo Piddiu, Christian Weber, Mark Richman, Jason Gudalis, Baichuan Sun, Eden Duthie, Charles Frenzel, Thom Lane, David Smith, Camilo Buscaron, Eddie Calleja, Siddalingesha Devarmani Shivakumar, Jayadev Vadakkanmarveettil, Bob Wise, Peder Ulander, Willy Tarreau, Jaana Dogan, Jarrod Watts, Jason Umiker, Alexei Ledenev, yukiarrr, OlegA, David Boyne, Teadeveloper, Hsiang-Fu Yu, Inderjit S. Dhillon, Chris Fife, Eric Beard, Rico Huijbers, Sundeep Kumar, Rahul Sonawane, Jasper Wang and Van Vo Thanh.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-from-open-source-projects"&gt;
  &lt;/a&gt;
  Latest from open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;eventbridge-atlas&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gg"&gt;eventbridge-atlas&lt;/a&gt; this is a great open source project from David Boyne, that allows you to document, discover and share your EventBridge schemas. Great documentation that shows you the motivation behind the project as well as how to get started, David also put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/gh"&gt;Introducing EventBridge Atlas&lt;/a&gt; which is a must read this week.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iDBw6--S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.boyney.io/static/images/blogs/eventbridge-atlas/how-it-works.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iDBw6--S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.boyney.io/static/images/blogs/eventbridge-atlas/how-it-works.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ecsk&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ge"&gt;ecsk&lt;/a&gt; this open source tool from yukiarrr is a CLI tool that you can interactively call Amazon ECS APIs (run-task, execute-command, stop-task), copy files between ECS and local, and view logs. Clear documentation to help you install and get started, check out this demo to see it in action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rms4kOtp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/yukiarrr/ecsk/main/docs/images/ecsk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rms4kOtp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/yukiarrr/ecsk/main/docs/images/ecsk.gif" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;spotinfo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gf"&gt;spotinfo&lt;/a&gt; this open source project from Alexei Ledenev is a command-line tool that helps you determine AWS Spot instance types with the least chance of interruption and provides the savings you get over on-demand rates. Awesome little tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pecos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gj"&gt;pecos&lt;/a&gt; PECOS is a versatile and modular open source machine learning (ML) framework for fast learning and inference on problems with large output spaces, such as extreme multi-label ranking (XMR) and large-scale retrieval. PECOS' design is intentionally agnostic to the specific nature of the inputs and outputs as it is envisioned to be a general-purpose framework for multiple distinct applications. You can read more about this project in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/gk"&gt;Amazon open-sources library for prediction over large output spaces&lt;/a&gt; from Hsiang-Fu Yu and Inderjit S. Dhillon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y4zgLQDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.amazon.science/dims4/default/f395830/2147483647/strip/true/crop/2346x1228%2B0%2B0/resize/1200x628%21/quality/90/%3Furl%3Dhttp%253A%252F%252Famazon-topics-brightspot.s3.amazonaws.com%252Fscience%252F44%252F70%252F4c683029463da1022b8b582635e3%252Frecursive-matcher.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y4zgLQDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.amazon.science/dims4/default/f395830/2147483647/strip/true/crop/2346x1228%2B0%2B0/resize/1200x628%21/quality/90/%3Furl%3Dhttp%253A%252F%252Famazon-topics-brightspot.s3.amazonaws.com%252Fscience%252F44%252F70%252F4c683029463da1022b8b582635e3%252Frecursive-matcher.png" alt="pecos"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-mwaa-local-runner&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gd"&gt;aws-mwaa-local-runner&lt;/a&gt; this is a project I have been waiting to be released for a while, and this provides you with a local environment that replicates an Amazon Managed Workflows for Apache Airflow (MWAA) environment. Check out the docs for details on how to get this up and running, but I have been running it for a while and find it super useful for doing local development and testing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-ec2-dashboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gc"&gt;aws-ec2-dashboard&lt;/a&gt; this open source project from OlegA is a Node.js/JavaScript application that displays list of EC2 instances in a compact and simple way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;yake&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gi"&gt;yake&lt;/a&gt; Alexander Mancevice has put this open source project together that is a Rake like DSL for writing AWS Lambda handlers. Rake is a software task management and build automation tool, so this project might appeal to those Ruby developers looking to explore writing functions and deploying them on AWS Lambda.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;awscloudexplorer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gl"&gt;awscloudexplorer&lt;/a&gt; this open source tool from Teadeveloper for TUI (terminal user interface) lovers to explore the resources in AWS Cloud using a TUI  instead a GUI or AWS web console. tmux and nc fans will love this tool, currently checking it out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://asciinema.org/a/1IkBGa3DB0xKuhCmWtOjeoYSx"&gt;https://asciinema.org/a/1IkBGa3DB0xKuhCmWtOjeoYSx&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#community-open-source-posts"&gt;
  &lt;/a&gt;
  Community open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Direktiv&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g8"&gt;Direktiv v0.2.1: deploying on AWS EKS or Docker and new UI!&lt;/a&gt; I covered this project last week, and Wilhelm Wonigkeit from Direktiv has a new post this time showing you how you can deploy this open source project (an event driven, container based workflow engine) on AWS, as well as covering some of the latest new features they have added. This is a really interesting project, so check it out if you missed this last week.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pwLu2x6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AsAHvteh5UOXZyqjEGdxxRg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pwLu2x6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AsAHvteh5UOXZyqjEGdxxRg.png" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g7"&gt;Get Started With AWS Amplify, Next.JS &amp;amp; Typescript. Full Stack with GraphQL + Authentication in 10 minutes!&lt;/a&gt; Jarrod Watts puts himself in the leaderboard for blog post with the longest title this week, and what a great post it is - 10 minutes you will not regret. Easy to follow with video backup incase you prefer that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HAProxy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g6"&gt;HAProxy Forwards Over 2 Million HTTP Requests per Second on a Single Arm-based AWS Graviton2 Instance&lt;/a&gt; Willy Tarreau takes an in depth look at how HAProxy scales when running on AWS Graviton2 instance types. This is a great post, covering the methodology, results and analysis. As with all benchmark posts, I don't want to spoil the conclusion so make sure you read this post to find out more. I will leave you with this tantalising graph though...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7usmhG5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.haproxy.com/wp-content/uploads/2021/04/7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7usmhG5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.haproxy.com/wp-content/uploads/2021/04/7.png" alt="haproxy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon EKS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are looking to expand upon the core Amazon EKS cluster, perhaps been inspired or manually deploying a number of add-ons that you might have seen as part of the &lt;a href="https://aws-oss.beachgeek.co.uk/ga"&gt;Amazon EKS Workshop&lt;/a&gt;, then this post from Jason Umiker,&lt;a href="https://aws-oss.beachgeek.co.uk/g9"&gt;Automating the provisioning of a production-ready Kubernetes cluster with AWS EKS &amp;amp; CDK&lt;/a&gt; will show you how to automate the configuration of those add-ons. Very nice indeed. What is even better is that Jason has written his CDK app in Python, and that makes me very happy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/aws/using-aws-cdk-to-deploy-your-amazon-managed-workflows-for-apache-airflow-environment-12cf"&gt;Using AWS CDK to deploy your Amazon Managed Workflows for Apache Airflow environment&lt;/a&gt; to celebrate CDK Day last week I put together this post showing you how you can use AWS CDK to configure and deploy an Amazon Managed Workflows for Apache Airflow environment. I hope it is useful, and builds upon earlier posts where I showed you how you can do this via CloudFormation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-open-source-posts"&gt;
  &lt;/a&gt;
  AWS open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;AWS DeepRacer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It has been a while since I have done anything with AWS DeepRacer, but the DeepRacer community are very close to my heart and they have some amazing folks doing some really great things. I am very happy therefore, that last week we published a couple of blog posts announcing the open sourcing of AWS DeepRacer.&lt;/p&gt;

&lt;p&gt;First up we had my good friend (and follower of DeepRacer cars!) David Smith who post, &lt;a href="https://aws-oss.beachgeek.co.uk/g2"&gt;AWS DeepRacer device software now open source&lt;/a&gt; dives into more details about this announcement including a look at some of the sample projects that have been compiled by the AWS DeepRacer team and members of that awesome DeepRacer community, before walking you through some of those samples. David also shares details about discounts you can get yourself which are not to be sniffed at, so make sure you check this post out.&lt;/p&gt;

&lt;p&gt;Following that we have a collaboration between Camilo Buscaron, Eddie Calleja, Siddalingesha Devarmani Shivakumar, and Jayadev Vadakkanmarveettil on the post, &lt;a href="https://aws-oss.beachgeek.co.uk/g3"&gt;AWS DeepRacer is now open source and ready to hit the road with ROS 2&lt;/a&gt; looks at this announcement from the Robotics perspective, taking a look at some of the ROS packages that are being open sourced and how you can use these to start building projects. They also cover the sample projects, taking a look at the Follow the Leader, Off Road and Mapping projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--alB_FweY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/27/deepracer-mapping_1000.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--alB_FweY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/27/deepracer-mapping_1000.gif" alt="deep racer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Really excited as to the possibilities and look forward to sharing future projects in this newsletter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ROS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are into Robotics, this post from Matt Hansen, &lt;a href="https://aws-oss.beachgeek.co.uk/gt"&gt;AWS announces a new developer desktop feature within the AWS RoboMaker IDE&lt;/a&gt;, will be right up your street, showing you a really cool new way we are making it easier for roboticists to develop their robot applications by extending the developer tooling beyond the RoboMaker IDE to now include a full virtual Ubuntu desktop. You can run your favourite ROS tools, Gazebo, RViz, and other tools directly as if it were a local Ubuntu desktop. I can see my Ubuntu machine next to me getting nervous.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J3Y8c9vP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/a9334987ece78b6fe8bf130ef00b74847c1d3da6/2021/04/30/fig5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J3Y8c9vP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/a9334987ece78b6fe8bf130ef00b74847c1d3da6/2021/04/30/fig5.jpg" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Streamlit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g1"&gt;Using Streamlit to build an interactive dashboard for data analysis on AWS&lt;/a&gt; Baichuan Sun, Eden Duthie, Charles Frenzel, and Thom Lane collaborate on this tutorial that show how to stand up an Exploratory Data Analysis (EDA) dashboard for business users using Streamlit. Streamlit is an open source framework for data scientists to efficiently create interactive web-based data applications in pure Python. This walkthrough will show you how you can easily deploy this into your AWS environment with the least effort - always a good thing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CUVW2mpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/27/tholane_arch_1000.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUVW2mpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/27/tholane_arch_1000.png" alt="arch"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Grafana&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/fz"&gt;Using Amazon Managed Service for Grafana to troubleshoot a serverless application&lt;/a&gt; Mark Richman builds upon an earlier blog post to show you how you can integrate Amazon CloudWatch logs and metrics with Amazon Managed Service for Grafana (AMG), using it to see how you might troubleshoot a serverless application built using Amazon API Gateway and AWS Lambda. The post covers how to visualise, analyze, alarm, and notify on metrics and logs across multiple data sources, all from within Grafana and Mark provides a link to the source code so you can try it yourself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YmQ6q-8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/12/Richman-Grafana_F1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YmQ6q-8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/12/Richman-Grafana_F1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As the dust settles after another amazing CDK Day event, what better way to celebrate that to catch up on the latest AWS CDK news.&lt;/p&gt;

&lt;p&gt;Christian Weber dropped his latest post in his regular &lt;a href="https://aws-oss.beachgeek.co.uk/fy"&gt;CDK Corner – April 2021&lt;/a&gt; series. Plenty of updates and news from around the world, so make sure you check out this post. As always, love the community acknowledgements so well done folks who have successfully had their first PRs merged.&lt;/p&gt;

&lt;p&gt;Jasper Wang and Van Vo Thanh put together this post, &lt;a href="https://aws-oss.beachgeek.co.uk/gs"&gt;Building and deploying Fargate with EKS in an enterprise context using the AWS Cloud Development Kit and cdk8s+&lt;/a&gt; that shows you how you can deploy a sample Kubernetes workload on an Amazon EKS cluster running Kubernetes pods on AWS Fargate using cdk8s/cdk8s+, an open-source software development framework for defining Kubernetes applications a la CDK.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lTmaWki9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/03/12/CDK8s-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lTmaWki9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/03/12/CDK8s-1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Announced the evening before CDK Day, Eric Johnson's post &lt;a href="https://aws-oss.beachgeek.co.uk/gp"&gt;Better together: AWS SAM and AWS CDK&lt;/a&gt; announced the public preview of AWS Serverless Application Model CLI (AWS SAM CLI) support for local development and testing of AWS CDK projects. If you are not familiar with AWS SAM/SAM CLI, it is a developer tool that makes it easier to build, locally test, package, and deploy serverless applications. This new capability extends the previous ability to test/package using CloudFormation to now be able to build/test with AWS CDK. If you want to know more check out the videos from CDK Day (I will post when they are uploaded in future newsletters) where Eric showed you this in action. This new capability generated a lot of love at CDK Day, so make sure you check this post out.&lt;/p&gt;

&lt;p&gt;Finally, it was great to see AWS CDKv2 announced last week, in the post &lt;a href="https://aws-oss.beachgeek.co.uk/gq"&gt;Announcing AWS Cloud Development Kit v2 Developer Preview&lt;/a&gt; Chris Fife, Eric Z. Beard, and Rico Huijbers talk you through the changes between CDK v1 and v2. They talk about the AWS Constructs Library, the constructs compatibility layer, the new lifecycle for experimental APIs and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RedHat Linux&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/fv"&gt;Announcing availability of Red Hat Enterprise Linux with High Availability on Amazon EC2&lt;/a&gt; this post from Kumar Abhinav and David Duncan provides a quick walk through of deploying Red Hat Enterprise Linux with High Availability and combining this with the scale, performance and elasticity of AWS to provide an operating system for your highly available compute clusters. I was not aware of Corosync before reading this post, so I am sure you will learn something new too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0wi31jZ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/19/kabhinaa_Red-Hat-Enterprise-Linux_f1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0wi31jZ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/19/kabhinaa_Red-Hat-Enterprise-Linux_f1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gr"&gt;Orchestrate AWS Glue DataBrew jobs using Amazon Managed Workflows for Apache Airflow&lt;/a&gt; Sundeep Kumar and Rahul Sonawane show you how you can use to orchestrate and schedule DataBrew jobs with Amazon Managed Workflows for Apache Airflow (MWAA). In this particular post they create a simple transformation logic pipeline, using DataBrew jobs to join two datasets, rename a column, and add a new column and then use Amazon Athena to verify the results.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kwx9ouZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/04/27/bdb1364-databrew-mwaa-orchestration-1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kwx9ouZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/04/27/bdb1364-databrew-mwaa-orchestration-1.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Flink&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gm"&gt;Enrich your data stream asynchronously using Amazon Kinesis Data Analytics for Apache Flink&lt;/a&gt; from Hari Rajaram and Jeremy Ber show you how you can approach asynchronous enrichment of a data stream through the Apache Flink API for asynchronous I/O with external data sources. Why does this matter? Well, you might need this if you have use cases such as  enriching a streaming payload with additional elements, to passing data elements to an API for a machine learning (ML) prediction, or loading data streams into a data lake for near-real-time analytics. Read the post to find out more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Presto&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I have spent some time recently working with Presto on Amazon EMR, so I enjoyed reading this new post,&lt;a href="https://aws-oss.beachgeek.co.uk/gn"&gt;Amazon EMR introduces EMR runtime for Presto, providing a 2.6 times speedup&lt;/a&gt; from Al MS and Michele Sancricca. Running Presto on Amazon EMR is a popular choice because Amazon EMR provides the latest, stable, open-source community Presto innovations and Amazon EMR platform-level optimisations for Presto workloads - and this posts takes a look at some of those optimisations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Kafka&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/fx"&gt;How Goldman Sachs migrated from their on-premises Apache Kafka cluster to Amazon MSK&lt;/a&gt; this guest post from Zachary Whitford, Richa Prajapati, and Aldo Piddiu from the Global Investment Research engineering team at Goldman Sachs takes a look at their migration journey as they moved from self hosted Apache Kakfa to using Amazon Managed Streaming for Apache Kafka (or Amazon MSK). The post covers the rational and thinking behind the move, the options they considered as well as the lessons learned. If you are using/running Apache Kafka workloads, make sure you read this post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F41zFdCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/04/22/bdb1229-gir-msk-2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F41zFdCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/04/22/bdb1229-gir-msk-2.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Performance Dashboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g0"&gt;New Performance Dashboard on AWS makes delivering open, responsive government simple&lt;/a&gt; Jason Gudalis writes about a newly open sourced solution that aims to help manage and showcase the data you have. The post focuses specifically on doing this with data at the heart of how public services are working, but you could adapt it to your own needs. If you want to see it in action, there is a very short video that shows you what you can expect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IwHU48yc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/04/28/Performance-Dashboard-on-AWS-Figure-1-architecture.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IwHU48yc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/04/28/Performance-Dashboard-on-AWS-Figure-1-architecture.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Node 14.x&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can now use the Node.js 14.x runtime to develop functions in AWS &lt;a href="mailto:Lambda@Edge"&gt;Lambda@Edge&lt;/a&gt;. This runtime is in addition to the currently supported Node.js 10.x and Node.js 12.x runtimes. Node.js 14.x, the current Long Term Support (LTS) version of Node.js, uses the new V8 8.1 engine and provides better performance than the previous LTS version, 12.x. In addition, Node.js 14.x supports new features such as nullish coalescing (?? operator), options chaining (?. operator), and diagnostic reporting&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Kafka&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Managed Streaming for Apache Kafka (Amazon MSK) now supports Apache Kafka version 2.8.0 for new and existing clusters. Apache Kafka 2.8.0 includes several bug fixes and new features that improve performance. Some of the key features include connection rate limiting to avoid problems with misconfigured clients (KIP-612) and topic identifiers which provides performance benefits (KIP-516). There is also an early access feature to replace zookeeper with a self-managed metadata quorum (KIP-500), however this is not recommended for use in production. For a complete list of improvements and bug fixes, see the Apache Kafka &lt;a href="https://downloads.apache.org/kafka/2.8.0/RELEASE_NOTES.html"&gt;release notes for 2.8.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS Secrets Manager launched the AWS Secrets and Configuration Provider (ASCP), a plugin for the industry-standard Kubernetes’ Secrets Store CSI driver. ASCP enables applications running in Kubernetes pods to retrieve secrets from AWS Secrets Manager easily, without the need for custom code. Once installed, ASCP ensures your applications always receive the most recent version of your secrets as these are rotated. As a result, you automatically benefit from the rotation and lifecycle management features that Secrets Manager provides, without added coding effort. ASCP also enables convenient and secure access to your configurations in AWS SSM Parameter Store. You can read more about this in the blog post from Tracy Pierce, &lt;a href="https://aws-oss.beachgeek.co.uk/fu"&gt;How to use AWS Secrets &amp;amp; Configuration Provider with your Kubernetes Secrets Store CSI driver&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-of-the-week"&gt;
  &lt;/a&gt;
  Video of the week
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;ROSA&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A couple of must view videos this week, starting off with Bob Wise and Peder Ulander sharing some insights into how Red Hat OpenShift on AWS (ROSA) is helping enterprises simplify, scale cloud projects as they move toward the edge. This was recorded during the Red Hat Summit, and is well worth watching as it covers more than just ROSA but open source at AWS too. Check out the original coverage &lt;a href="https://aws-oss.beachgeek.co.uk/g4"&gt;here&lt;/a&gt;, or watch the video below from the Cube.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/sqqg1tOyjtk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Copilot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The final video is a recording from the Containers from the Couch crew of the Amazon ECS Workshop, where you will learn how to deploy your application to Amazon ECS using AWS Copilot.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/o8o9Ea9o0aI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#podcast-of-the-week"&gt;
  &lt;/a&gt;
  Podcast of the week
&lt;/h3&gt;

&lt;p&gt;Jaana Dogan (&lt;a class="mentioned-user" href="https://dev.to/rakyll"&gt;@rakyll&lt;/a&gt;
) explains which problems the industry, and especially cloud vendors, try to solve with their investment in open source standards such as OpenTelemetry and gives an update where OpenTelemetry is, the next upcoming milestones and what a bright future with OpenTelemetry being widely adopted could bring.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g5"&gt;The State of OpenTelemetry with Jaana Dogan&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Cloud Native Rust Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 3rd&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rust is a language empowering everyone to build secure, reliable, and efficient software. Rust is becoming more widely used in cloud native, powering everything from lightning-fast service meshes and powerful developer tools to internet-scale distributed databases.&lt;/p&gt;

&lt;p&gt;Come explore what makes Rust a fantastic choice for new cloud native development, and learn about how the community uses Rust today. Find out &lt;a href="https://aws-oss.beachgeek.co.uk/5y"&gt;more and register here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Container Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 4, 2021 | 10:00AM - 6:00PM CEST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Container Day x KubeCon is a fully live, virtual day of sessions all about Amazon EKS and Kubernetes at AWS, hosted by Brent Langston and Adam Keller of Containers from the Couch. At this Day Zero KubeCon event, the AWS Kubernetes team will be revealing new launches, demoing products and features, covering best practices, and answering your questions live on Twitch! If you have a question before the event, you can email the team at &lt;a href="mailto:awscontainerday@amazon.com"&gt;awscontainerday@amazon.com&lt;/a&gt; and maybe get them answered.&lt;/p&gt;

&lt;p&gt;Find out more and to register, &lt;a href="https://aws-oss.beachgeek.co.uk/cr"&gt;click here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;An Introduction to Amazon Managed Blockchain&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;5th May&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Managed Blockchain (AMB) is a fully managed service that makes it easier to build scalable blockchain networks using popular open source frameworks, including Hyperledger Fabric and Ethereum. AMB includes several features and enhancements beyond those provided by the open-source projects on which it is based. It supports public and private blockchain options, each of which favors different use cases. We review reference architectures outlining example applications on both Hyperledger Fabric and Ethereum. In this lecture, you will also hear several customer success stories building solutions on Amazon Managed Blockchain.&lt;/p&gt;

&lt;p&gt;Find out more and register &lt;a href="https://aws-oss.beachgeek.co.uk/dx"&gt;via this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Building And Maintaining Your Own Secure Container OS&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 13th 9am PST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Curtis Rissi, a Principal Partner SA at AWS will walk attendees through the Bottlerocket (an open-source Linux-based operating system meant for hosting containers) build process, and provide some key use cases for customisation: how to add new configuration options; how to add new packages; how to configure your own update repositories; how to add security policy; and other common customisations. &lt;/p&gt;

&lt;p&gt;Find out more and to register, click &lt;a href="https://aws-oss.beachgeek.co.uk/ed"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile and Front-End Live&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 25th, 9:00 - 15:00 PDT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a LIVE streamed event on Twitch  focused on accelerating full-stack mobile and web development. Learn about AWS Amplify, a set of purpose-built tools and services for front-end web and mobile developers that simplify app development. Deep dive into GraphQL and AWS AppSync, a fully-managed GraphQL service that improves app performance and developer productivity.&lt;/p&gt;

&lt;p&gt;You can read more about what you can expect in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/f4"&gt;Mobile and Front-End Live, May 25&lt;/a&gt; and &lt;a href="https://aws-oss.beachgeek.co.uk/f3"&gt;register via this link&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>How to Get Your First Job in Developer Relations</title>
      <author>Alex Lakatos 🥑</author>
      <pubDate>Tue, 04 May 2021 06:34:19 +0000</pubDate>
      <link>https://dev.to/lakatos88/how-to-get-your-first-job-in-developer-relations-2bgn</link>
      <guid>https://dev.to/lakatos88/how-to-get-your-first-job-in-developer-relations-2bgn</guid>
      <description>&lt;p&gt;Hi, my name is Alex, and I’m an… Advocate. A Developer Advocate. With Developer Advocates being one of the most sought out commodities on the market this year, I thought I’d write up the answer to one of the questions that I answer frequently in my DMs - mostly because I &lt;a href="https://www.swyx.io/three-strikes/"&gt;read this thing&lt;/a&gt; from &lt;a href="https://twitter.com/swyx"&gt;@swyx&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;How did you break into Developer Relations?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If I knew what I did exactly to end up here, it would probably be an easy answer. But it isn’t because I didn’t wake up one day and decided this was what I wanted to be when I grew up. My idols and role models were Developer Advocates, and I didn’t think I was good enough to be the same. On top of that, I was a Senior Developer with quite a few years of experience under my belt. I didn’t feel like giving that up to be a “&lt;em&gt;Junior&lt;/em&gt;” anything again.&lt;/p&gt;

&lt;p&gt;If you ask other people in the industry - and I asked quite a few of them in a survey - everybody has a different story. Because &lt;strong&gt;Developer Relations is such a new industry&lt;/strong&gt;. Even defining it is tricky because it depends on which side of the aisle you’re asking. &lt;a href="https://www.leggetter.co.uk/2016/02/03/defining-developer-relations.html"&gt;Phil tried to define Developer Relations&lt;/a&gt; a while back, and when you look at it, it’s got so many roles that overlap. &lt;strong&gt;Evangelism versus Advocacy, Marketing versus Community, Technical Writing versus Developer Experience&lt;/strong&gt;. And they’re all a part of DevRel, but &lt;strong&gt;the skills required for the role depend from company to company&lt;/strong&gt; , not necessarily from role to role.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://medium.com/@dzello/how-i-got-into-developer-advocacy-93bad1678a67"&gt;Josh said that not all journeys are the same&lt;/a&gt;, and I tended to agree with him. But then I got the chance to meet and interview many other Developer Advocates, Community Managers and Technical Writers, and some patterns emerged. Turns out, &lt;a href="https://www.youtube.com/watch?v=Frt_fvEfROU"&gt;while not all journeys were the same, all roads lead to Rome&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’ve spent some time identifying a set of skills each of us in DevRel had before joining the industry. Here’s a list that also tells you how you can acquire them now, outside of DevRel. Because it turns out &lt;strong&gt;you don’t have to give up your career progression&lt;/strong&gt; and start all over, &lt;strong&gt;you can break in&lt;/strong&gt;. Not a single one of us had all the skills we use today.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We’ve all started out with only one or two of the required skills and learned the rest on the job. So don’t worry, you can make do with picking up only a few of these skills!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#community-building"&gt;
  &lt;/a&gt;
  Community Building
&lt;/h2&gt;

&lt;p&gt;There are open-source programs explicitly designed for building community. I’ll share a list of my favourites, but I’m pretty sure most open-source projects won’t say no if you start helping out. It doesn’t have to be something as minor as code. It can be something truly helpful, like commenting on old issues to see if people still care about them. Or getting together with some people to test a project. For example, the Reps program even sponsored pizza or coffee for people to get together and help out around the Mozilla mission. Fedora does the same for its Ambassadors. I’m pretty sure I missed a few, &lt;a href="https://twitter.com/lakatos88"&gt;so let me know on Twitter, and I’ll add more&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://wiki.mozilla.org/Reps"&gt;Mozilla Reps&lt;/a&gt; are passionate Mozillians who mobilize and develop functional and local/regional Mozilla communities. They are committed to educate and empower people to support Mozilla’s mission and contribute to the project based on Mozilla’s leadership agreements.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://fedoraproject.org/wiki/Ambassadors"&gt;Fedora Ambassadors&lt;/a&gt; are responsible for helping to grow the contributor base and act as a liaison between other FLOSS projects and the Fedora community.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#public-speaking"&gt;
  &lt;/a&gt;
  Public Speaking
&lt;/h2&gt;

&lt;p&gt;With a pandemic, travel bans and no in-person events, public speaking is a different beast than when I started. There are different challenges involved in speaking in front of a live audience as opposed to a camera. Most learning communities there haven’t yet adapted to online speaking, so if you find yourself stuck while picking this one up, &lt;a href="https://twitter.com/lakatos88"&gt;please reach out&lt;/a&gt;. I’m more than happy to have learning sessions. We’ve been training people online to speak in public for a few years with Mozilla Tech Speakers, happy to pick it up again.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.globaldiversitycfpday.com/"&gt;Global Diversity CFP Day&lt;/a&gt; is a tech-wide cross-community event based on the successful workshops held in advance of ScotlandCSS and ScotlandJS in 2016. Over the years it has evolved into a focused 1-day event designed to help you go from an idea to skills and a talk ready to submit to a conference.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.toastmasters.org/"&gt;Toastmasters&lt;/a&gt; is a nonprofit educational organization that teaches public speaking and leadership skills through a worldwide network of clubs. While they focus more on improvised topics, it will get you comfortable to step up in front of strangers and try to keep a straight face while you’re talking about a random topic. This will later evolve into not being afraid of the Q&amp;amp;A session of your talks.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://wiki.mozilla.org/TechSpeakers"&gt;Mozilla Tech Speakers&lt;/a&gt; started as an experiment in 2015 designed by &lt;a href="https://twitter.com/freshelectrons"&gt;Havi Hoffman&lt;/a&gt; and &lt;a href="https://twitter.com/dietrich"&gt;Dietrich Ayala&lt;/a&gt; from the Mozilla Developer Relations team. They invited a handful of volunteers who were passionate about giving talks at conferences on Mozilla-related technologies and the Open Web in general to trial a program that would support their conference speaking activities and amplify their impact. It scaled to 100 people, &lt;a href="https://discourse.mozilla.org/t/pausing-tech-speaker-program-support/66157/8"&gt;but sadly in 2020, it was axed&lt;/a&gt; when &lt;a href="https://blog.mozilla.org/blog/2020/08/11/changing-world-changing-mozilla/"&gt;Mozilla did their second round of layoffs&lt;/a&gt;. However, the resources developed for the program are still some of the best around, so check them out.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#technical-writing"&gt;
  &lt;/a&gt;
  Technical Writing
&lt;/h2&gt;

&lt;p&gt;I must admit, writing, in general, was something I struggled with. But new resources and communities for technical writing keep popping up. It’s getting easier to get started. What helped me was &lt;strong&gt;transforming the writing bit from a skill into a habit&lt;/strong&gt;. I’ve struggled with writing consistently for 3 years, tried various things, but I think I’ve finally figured it out. For the past 189 days, I’ve challenged myself to write at least 100 words every day. And you (and me both) would think that’s not a lot. It seemed like a manageable quantity when I started. Turns out those 100 words add up when you do it every day. So far, it’s been 42687 words and 19 articles published in those 189 days. I’ve &lt;a href="https://twitter.com/lakatos88/status/1321423080095469568"&gt;used Twitter as a way to hold myself publicly accountable&lt;/a&gt;, but there are other communities to help you be accountable while you learn or to help improve your writing style.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.writethedocs.org/"&gt;Write the Docs&lt;/a&gt; is a global community of people who care about documentation. They consider everyone who cares about communication, documentation, and their users to be a member of their community. This can be programmers, tech writers, developer advocates, customer support, marketers, and anyone else who wants people to have great experiences with software.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://bloggingfordevs.com/"&gt;Blogging for Devs&lt;/a&gt; is both a free email course and a paid community. Whether you’re just starting out, trying to revive an existing blog, or want to get past a plateau, this course and newsletter is going to help.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://developers.google.com/tech-writing/overview"&gt;Google has a collection of courses&lt;/a&gt; and learning resources that aims to help you improve your technical documentation. Learn how to plan and author technical documents. You can also learn about the role of technical writers at Google.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#event-organizing"&gt;
  &lt;/a&gt;
  Event Organizing
&lt;/h2&gt;

&lt;p&gt;The barrier to start organizing events has considerably lowered with the onset of the pandemic. Before, it involved finding a physical space, a speaker, an audience and a sponsor for the refreshments. It was a lot easier to find an established group and help out instead of starting your own. I went at it the hard way, starting a London JavaScript meetup with &lt;a href="https://twitter.com/chris_noring"&gt;Chris&lt;/a&gt; and &lt;a href="https://twitter.com/simona_cotin"&gt;Simona&lt;/a&gt;. Chris and I convinced our employer to let us use the office during the weekend, and we asked our friends, like Simona, to come in and do free Angular workshops for people. After the meetup group got enough people, sponsors and venues started contacting us, so we didn’t have to run around looking for them. But with our attendee numbers multiplying fast, the three of us weren’t enough to get everything done, so we were always on the lookout for people to help us out. Be those people for other groups! I highly doubt anyone is going to turn you down.&lt;/p&gt;

&lt;p&gt;If helping out a group isn’t your thing, you can always put on a show of your own. In the age of online events, you don’t need a space or a sponsor. You can do it with a Zoom call, a speaker, and an audience. If you’re looking for groups or a place to find your audience, here’s a list.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://techtalks.io/"&gt;techtalks.io&lt;/a&gt; is a new tool for community building that evolved from the need for a better Meetup. I honestly think it’s the natural progression of Meetup. You can join a community of engineering, design, product and UX experts, organize, watch and discuss talks, get involved with a community and share your ideas.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.meetup.com"&gt;Meetup&lt;/a&gt; is a platform for finding and building local communities. People use Meetup to organize events, meet new people, learn new things, find support, get out of their comfort zones, and pursue their passions, together.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#builders"&gt;
  &lt;/a&gt;
  Builders
&lt;/h2&gt;

&lt;p&gt;I’m afraid I don’t have a lot of options here. &lt;strong&gt;The only thing I can tell you is to build things&lt;/strong&gt;. What things? It doesn’t really matter. The goal is to &lt;strong&gt;pick up something new&lt;/strong&gt; , &lt;strong&gt;experiment with it&lt;/strong&gt; for a few days, and then &lt;strong&gt;tell other people what you did&lt;/strong&gt;. It doesn’t have to be a next career move, it doesn’t have to be useful to anyone but yourself, and it doesn’t have to be maintained for years to come. Build things, and that’s it.&lt;/p&gt;

&lt;p&gt;If you’ve stumbled upon my &lt;a href="https://github.com/AlexLakatos/"&gt;GitHub profile&lt;/a&gt;, you’ll see I’m part of a dozen organizations, most of them abandoned, and that’s ok. I’ve also got almost 100 repositories that are just there, with only a handful actively maintained. Some of them are so cringe-worthy, with hacked-together code, that I still haven’t made public. And that’s ok.&lt;/p&gt;

&lt;p&gt;All these got me a valuable skill: I can build something with a clearly defined scope and throw it away as soon as it served its purpose. I don’t get overly attached to a piece of code or a project just because. And it doesn’t have to be perfect.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#can-you-be-a-junior-developer-advocate"&gt;
  &lt;/a&gt;
  Can You Be a Junior Developer Advocate?
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Yes, definitely, of course!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I know this might sound controversial. A lot of the Developer Advocates out there will tell you to be a Solution Architect before thinking about being a Developer Advocate. I’d like to formally and unequivocally call “BullShit!” here. Just because it took some people forever to get here (me included), it doesn’t mean it was right or that you should suffer. No! There are Junior Developer Advocates, Junior Community Managers. I’m not sure about Junior Technical Writers, but surely there are some, so let me know in the comments section below!&lt;/p&gt;

&lt;p&gt;The quality that makes a successful &lt;em&gt;devrella&lt;/em&gt; is being able to &lt;strong&gt;understand developers pain points&lt;/strong&gt;. Sure, some slower people like me need to suffer first before we can understand the problems, so we can fix them. Some smarter people, like &lt;a href="https://twitter.com/mary_grace/"&gt;Mary&lt;/a&gt;, could figure out this one without going through the grind. That means anyone can get there, so Junior Developer Advocates are a thing! Next time you see an opening, don’t let the fact that you haven’t suffered in the industry for the past ten years discourage you from applying. &lt;strong&gt;This field needs a fresh perspective&lt;/strong&gt; a lot more than it needs dinosaurs like me.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#bonus-round"&gt;
  &lt;/a&gt;
  Bonus Round
&lt;/h2&gt;

&lt;p&gt;As Shawn put it, “&lt;strong&gt;DevRel is a not generalizable skill&lt;/strong&gt;, or rather, there’s such a thing as &lt;strong&gt;devrel-company fit&lt;/strong&gt;”. You might have noticed this blog post was technology agnostic. And that’s because it requires a great deal of passion and empathy. Those skills are not as easy to acquire as functional skills. Try to find a product or community you’re passionate about or something you’ve used or been part of before. It’s easier to get your first job in Developer Relations for a company when you’ve already got some domain knowledge. There’s also some degree of credibility involved. I couldn’t get a job advocating for an iOS company, for example. You should try to &lt;strong&gt;get some experience in your space&lt;/strong&gt;, really understand the domain you’re trying to break in as a &lt;em&gt;devrella&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I also co-curate alongside &lt;a href="https://twitter.com/iza_biro"&gt;Julia&lt;/a&gt;, a weekly email roundup of Developer Avocados 🥑 Call-For-Papers, resources and articles. If you want to learn more about DevRel, you &lt;strong&gt;should definitely subscribe&lt;/strong&gt; to &lt;a href="https://developeravocados.net/"&gt;Developer Avocados 🥑 Weekly&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;If you’ve read this far, or you’re considering getting into Developer Relations, &lt;a href="https://twitter.com/lakatos88"&gt;reach out on Twitter&lt;/a&gt;! I’m always happy to answer your questions or help you land your first role in DevRel.&lt;/p&gt;

</description>
      <category>devrel</category>
      <category>speaking</category>
      <category>writing</category>
      <category>career</category>
    </item>
    <item>
      <title>Adding image upload to a React Native app with AWS Amplify</title>
      <author>Derek Bingham ☘️</author>
      <pubDate>Tue, 04 May 2021 05:12:56 +0000</pubDate>
      <link>https://dev.to/aws/adding-image-upload-to-a-react-native-app-with-aws-amplify-4j7m</link>
      <guid>https://dev.to/aws/adding-image-upload-to-a-react-native-app-with-aws-amplify-4j7m</guid>
      <description>&lt;h2&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h2&gt;

&lt;p&gt;In this blog post I will detail how to leverage AWS Amplify, AWS Appsync and Amazon S3 to provide an image upload capability into a react native app. &lt;/p&gt;

&lt;p&gt;This blog assumes that the reader is familiar with AWS Amplify and its feature categories, however if you are not familiar then please have a read of this &lt;a href="https://dev.to/aws-builders/aws-amplify-2l30"&gt;great intro&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/ajonp"&gt;@ajonp&lt;/a&gt;
 one of our AWS community members.&lt;/p&gt;

&lt;p&gt;I will also be working off an existing AWS backend application that has already been created with the AWS Amplify CLI and has had both the 'auth' and 'api' feature categories added.  You can follow along with this creation by going to the official &lt;a href="https://docs.amplify.aws/start/q/integration/react-native"&gt;Amplify react-native docs&lt;/a&gt;. Or ;tldr it and simply &lt;a href="https://github.com/deekob/amplify-react-native-storage"&gt;clone this repo&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note - if you do end up cloning the repo, remember to run 'amplify configure' and 'amplify init' to re-configure the project to a new cloud back end in your own AWS account.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#what-are-we-building-"&gt;
  &lt;/a&gt;
  What are we building ?
&lt;/h2&gt;

&lt;p&gt;The base application we will be adding photo/image storage to should look something like the below image.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--I59UQAiQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfbfqbaoclk9rkmxva9j.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--I59UQAiQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kfbfqbaoclk9rkmxva9j.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are two views in this app &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A list of Todo's that have already been created. &lt;/li&gt;
&lt;li&gt;A form to create a new Todo&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Clicking on 'New To Do' button on the 'list view' will  bring you to the 'create view' and once a new todo has been created the app will navigate back to the 'list view' from the 'create view'&lt;/p&gt;

&lt;p&gt;So, nothing too tricky here, what we are going to add to this app is the ability to save images to our cloud backend when in the 'create view' and the ability to see those images in the 'list view'.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-the-image-concept-to-backend-resources"&gt;
  &lt;/a&gt;
  Adding the image concept to backend resources.
&lt;/h2&gt;

&lt;p&gt;First thing is confirming what amplify feature categories we have installed - to find this out we simply run the &lt;code&gt;amplify status&lt;/code&gt; command which gives the following output&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jBf1cVUh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2r060khirq7hoavla7r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jBf1cVUh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u2r060khirq7hoavla7r.png" alt="Amplify status"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, we have both auth and api feature categories installed - so that means that there is an Amazon Cognito instance handling users and auth, an AWS Appsync instance handling the GraphQL API and an Amazon DynamoDB instance handling data persistence.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#adding-an-s3-storage-bucket"&gt;
  &lt;/a&gt;
  Adding an S3 storage bucket.
&lt;/h2&gt;

&lt;p&gt;First thing is to add the new Storage feature category to this existing backend. This is super easy to do by running the &lt;code&gt;amplify add storage&lt;/code&gt; command in the terminal and selecting the following options &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7oFejpdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgkvv4l1m27m0tcdgpop.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7oFejpdW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cgkvv4l1m27m0tcdgpop.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note - most of these are defaults apart from the 'Who should have access' question where I have selected Auth users only and given them full CRUD privilege.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;
  &lt;a href="#adding-an-image-to-our-api-definition"&gt;
  &lt;/a&gt;
  Adding an 'image' to our API definition
&lt;/h2&gt;

&lt;p&gt;The next step is to add the concept of an image to our GraphQL schema definition. You can find the schema definition  under &lt;code&gt;./amplify/backend/api/myapi/schema.graphql&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We simply add a new String type called image - which will hold our image name when we persist an image and an image pre-signedURL when we retrieve an image. The schema should now look like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fjhGEyjp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kt2qkmusq8wnv5dppd3v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fjhGEyjp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kt2qkmusq8wnv5dppd3v.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: if we want to add FGAC to any of the fields in the schema we could use the '@auth' transformer directive - for more detail on access control, transformer directives and @auth [read this article] &lt;a href="https://aws.amazon.com/blogs/mobile/graphql-security-appsync-amplify/"&gt;https://aws.amazon.com/blogs/mobile/graphql-security-appsync-amplify/&lt;/a&gt; - by Brice Pelle.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once that has been updated, we go back to our terminal and run &lt;code&gt;amplify update api&lt;/code&gt; command to regenerate the api definition.  The output from this command should look similar to the below: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j6q3V1r8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/44zmy7x32kj1ohrbkegl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j6q3V1r8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/44zmy7x32kj1ohrbkegl.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once complete we finally need to call &lt;code&gt;amplify push --y&lt;/code&gt; to push all of our local changes into our cloud back end. This means that out back-end services will now look like the following architectural diagram with the addition of the S3 bucket that the Amplify CLI Storage category has provisioned.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cxaPM-Wp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2e2kgd4tzyzc3de77mot.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cxaPM-Wp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2e2kgd4tzyzc3de77mot.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#updating-the-react-native-client-application"&gt;
  &lt;/a&gt;
  Updating the react native client application
&lt;/h2&gt;

&lt;p&gt;So that is enough messing around in the terminal, now it’s time to write some code.  We will be making all the changes in a single file App.js and the first thing we will do is add in some additional state to store the image name and the imageURI we want to add to each todo.  So, something like&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialTodoState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;description&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;image&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;initialAppState&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;showForm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;imageURI&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;Note - All of the code for the finished app can be found &lt;a href="https://github.com/deekob/amplify-react-native-storage/tree/completed"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#selecting-images"&gt;
  &lt;/a&gt;
  Selecting Images
&lt;/h2&gt;

&lt;p&gt;Once we have that we need to write a function that locates images on the device and displays them for the user to select.  Luckily there is a third-party library called &lt;a href="https://github.com/react-native-image-picker/react-native-image-picker"&gt;React Native Image Picker&lt;/a&gt; that will do most of this for us. So, let’s create a function to call this library, it should look something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;handleChoosePhoto&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
   &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;launchImageLibrary&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="na"&gt;mediaType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;photo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;includeBase64&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;maxHeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;maxWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;updateAppState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;imageURI&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uri&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;uuid&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;v4&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;_todoPhoto.jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
          &lt;span class="nx"&gt;updateTodoState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;handleChoosePhoto&lt;/code&gt; function is calling the &lt;code&gt;launchImageLibrary&lt;/code&gt; function, that is part of react-native-image-picker's api. We  are simply passing in some options like, image type , image height and image width and from the response we get the imageURI ( the location on the image on the device ) and we save this and  a unique image name in the state fields we created earlier.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: We a using the react-native-uuid library to make sure all images have unique names - this makes it easier when we store these names in DynamoDB.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When implemented the 'handleChoosePhoto' UI looks like this:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R4l5GIOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2089sce5eli27lj561gu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R4l5GIOE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2089sce5eli27lj561gu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#uploading-images"&gt;
  &lt;/a&gt;
  Uploading Images
&lt;/h2&gt;

&lt;p&gt;Once we select the image, we can now create a Todo in the 'create view' that contains the image we have selected by simply adding the following tag in the App.js 'render' function&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which should look something like this after adding in the appropriate  tag.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5ebVzWs8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzyeg57yexri1si60un7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5ebVzWs8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uzyeg57yexri1si60un7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We next need to implement the function that is called by the 'Create Todo' button. This &lt;code&gt;addTodo()&lt;/code&gt; function is where we add the image upload code to the existing GraphQL api call as shown below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;addTodo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// new code for images&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;photo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;appstate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;imageURI&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;photoBlob&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;photo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;blob&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Storage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todoState&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;photoBlob&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;private&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;contentType&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;image/jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt;

      &lt;span class="c1"&gt;//existing api code&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;todoState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;([...&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
      &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;graphqlOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;createTodo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;input&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt; &lt;span class="p"&gt;}))&lt;/span&gt;
      &lt;span class="nx"&gt;setTodoState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialTodoState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;setAppState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialAppState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;error creating todo:&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are fetching the blob of the photo we have selected using the stored imageURI and then passing the result along with the unique image name to the Amplify &lt;code&gt;Storage.put()&lt;/code&gt; call. Not forgetting as we are using a new Amplify category of 'Storage' we need to import the relevant libraries at the top of App.js in the imports section&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;graphqlOperation&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Storage&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once we have stored the blob in S3 using &lt;code&gt;Storage.put()&lt;/code&gt; the last part of the function persists the image name along with all the other todo data in DynamoDB via the AppSync GraphQL api call, before finally re-setting any state.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#downloading-images"&gt;
  &lt;/a&gt;
  Downloading Images
&lt;/h2&gt;

&lt;p&gt;So now we have our image uploaded as part of the ‘create view’, the final step is to view the images when our initial 'list view' displays. It is currently looking very empty &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GN-zdm_m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kyd3c5ljzmorwbf48sp8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GN-zdm_m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kyd3c5ljzmorwbf48sp8.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To implement this, we first of all add in an image tag to the UI that renders the list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="na"&gt;uri&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;styles&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&amp;gt;      &lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then we update the &lt;code&gt;fetchTodos&lt;/code&gt; function to retrieve the relevant image for every Todo we have in our list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fetchTodos&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;//fetch the recipes from the server&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;todoData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;graphql&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;graphqlOperation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;listTodos&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
      &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;todos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;todoData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;listTodos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;
      &lt;span class="c1"&gt;// for all todos get the pre-signURL and store in images field&lt;/span&gt;
      &lt;span class="nx"&gt;todos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imageKey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Storage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;private&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageKey&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;imageKey&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;todo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;}));&lt;/span&gt;
      &lt;span class="nx"&gt;setTodos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;todos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;setTodoState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialTodoState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="nx"&gt;setAppState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialAppState&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;error fetching todos &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And that is it!!  your app should now look like this, where the image is downloaded into the app from the S3 bucket using the pre-signed URL that &lt;code&gt;Storage.get()&lt;/code&gt; so conveniently generates.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7IeG_0xs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ze5bhf9jx85ahs6rr87t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7IeG_0xs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ze5bhf9jx85ahs6rr87t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;So that is it, in a few minutes we have added an image upload and download feature into our existing react native application.  &lt;/p&gt;

&lt;p&gt;All we needed to do is update our backend using the Amplify CLI to provision our S3 bucket and change the schemas of our DynamoDB table and Appsync API. Then using the Amplify client libraries write a Storage.put() function and a Storage.get() function to add and retrieve the images. The result was not only fast to achieve, but also came with security built in.&lt;/p&gt;

&lt;p&gt;Thanks for reading, hopefully this makes adding this kind of feature to your react native application a breeze - if you would like me to go into more detail on any of the features of AWS Amplify or indeed anything AWS related in a future post - just post in the comments below.&lt;/p&gt;

&lt;p&gt;Likewise, any feedback is always welcome either here or catch me on the socials.&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>aws</category>
      <category>cloudnative</category>
      <category>cloud</category>
    </item>
    <item>
      <title>A LinkedIn For Newbies (Updated)</title>
      <author>Rotimi</author>
      <pubDate>Tue, 04 May 2021 04:54:16 +0000</pubDate>
      <link>https://dev.to/rotimi_je_suis/a-linkedin-for-newbies-updated-104a</link>
      <guid>https://dev.to/rotimi_je_suis/a-linkedin-for-newbies-updated-104a</guid>
      <description>&lt;p&gt;KwickBox, &lt;a href="https://kwickbox.cloud"&gt;https://kwickbox.cloud&lt;/a&gt; is a new innovative career platform developed specifically for newbies and job seekers with little or no working experience.&lt;/p&gt;

&lt;p&gt;Over the years, LinkedIn has largely favored job seekers with considerably amount of working experience (4+). A job seeker not having work experience does not mean they aren't capable or talented. There are many job seekers with amazing talents that an overlooked. The talent industry needs change.&lt;/p&gt;

&lt;p&gt;It also provides a public platform to showcase the profiles and front pages of job seekers with little or no working experience to recruiters and employers. The platform provides a dead simple user interface where users can easily invite friends and colleagues to review their C.V online&lt;/p&gt;

&lt;p&gt;KwickBox provides a simple user interface which makes setting up a professional C.V site easy as pie. Another interesting feature in the platform is the online C.V review feature. With this feature, users are able to collect diverse feedback from friends and colleagues by simply sharing their C.V site link.&lt;/p&gt;

&lt;p&gt;The project started as a side project. Currently it has 1K+ daily active users and is growing rapidly.&lt;/p&gt;

&lt;p&gt;I am giving out free premium coupon codes to the next 200 people to register on the platform. With premium, you'll be able to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Invite people to review your CV online in a simple manner. Said people will be able to rate each section of your CV and add feedback for improvement.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Access a geographical map to view locations where your CV has been accessed from.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get featured on the platform's website to lots of recruiters and startup companies.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Send out requests to referees to provide valid references.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>showdev</category>
      <category>webdev</category>
      <category>career</category>
      <category>saas</category>
    </item>
    <item>
      <title>jsf - Faking JSON data from a schema </title>
      <author>Andy Challis</author>
      <pubDate>Tue, 04 May 2021 04:47:08 +0000</pubDate>
      <link>https://dev.to/ghandic/jsf-faking-json-data-from-a-schema-5bj0</link>
      <guid>https://dev.to/ghandic/jsf-faking-json-data-from-a-schema-5bj0</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/ghandic/jsf"&gt;https://github.com/ghandic/jsf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Use &lt;strong&gt;jsf&lt;/strong&gt; along with fake data generators to provide consistent and meaningful fake data for your system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#main-features"&gt;
  &lt;/a&gt;
  Main Features
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Provides out of the box data generation from any JSON schema 📦 &lt;/li&gt;
&lt;li&gt;Extendable custom data providers using any lambda functions 🔗&lt;/li&gt;
&lt;li&gt;Multi level state for dependant data (eg multiple objects sharing value, such as children with same surname) 🤓 &lt;/li&gt;
&lt;li&gt;Inbuilt validation of fake JSON produced ✅&lt;/li&gt;
&lt;li&gt;In memory conversion from JSON Schema to Pydantic Models with generated examples 🤯&lt;/li&gt;
&lt;li&gt;Seamless integration with &lt;a href="https://fastapi.tiangolo.com/"&gt;FastAPI&lt;/a&gt; 🚀&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;jsf
&lt;span class="go"&gt;
&lt;/span&gt;&lt;span class="gp"&gt;---&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;100%
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#basic"&gt;
  &lt;/a&gt;
  Basic 😊
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jsf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JSF&lt;/span&gt;

&lt;span class="n"&gt;faker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"object"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;"properties"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"string"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"$provider"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"faker.name"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"string"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"$provider"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"faker.email"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s"&gt;"required"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;fake_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Results in ...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'Jesse Phillips'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s"&gt;'email'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'xroberson@hotmail.com'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#from-json-file"&gt;
  &lt;/a&gt;
  From JSON file 📁
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jsf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JSF&lt;/span&gt;

&lt;span class="n"&gt;faker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSF&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"demo-schema.json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;fake_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;faker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or run stright from the &lt;code&gt;commandline&lt;/code&gt;...&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#native-install" class="anchor"&gt;
  &lt;/a&gt;
  Native install
&lt;/h4&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;jsf &lt;span class="nt"&gt;--schema&lt;/span&gt; src/tests/data/custom.json &lt;span class="nt"&gt;--instance&lt;/span&gt; wow.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h4&gt;
  &lt;a href="#docker" class="anchor"&gt;
  &lt;/a&gt;
  Docker
&lt;/h4&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker run &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="nv"&gt;$PWD&lt;/span&gt;:/data challisa/jsf jsf &lt;span class="nt"&gt;--schema&lt;/span&gt; /data/custom.json &lt;span class="nt"&gt;--instance&lt;/span&gt; /data/example.json
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#fastapi-integration"&gt;
  &lt;/a&gt;
  FastAPI Integration 🚀
&lt;/h3&gt;

&lt;p&gt;Create a file main.py with:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;jsf&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;JSF&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fastapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;FastAPI&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;docs_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;generator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;JSF&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"custom.json"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/generate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response_model&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;generator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pydantic&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_root&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;generator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Run the server with:&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;uvicorn main:app &lt;span class="nt"&gt;--reload&lt;/span&gt;
&lt;span class="go"&gt;
INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
INFO:     Started reloader process [28720]
INFO:     Started server process [28722]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Navigate to &lt;a href="http://127.0.0.1:8000"&gt;http://127.0.0.1:8000&lt;/a&gt; and check out your endpoint. Notice the following are all automatically created:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Schema with descriptions and examples&lt;/li&gt;
&lt;li&gt;Example response&lt;/li&gt;
&lt;li&gt;Data generation by clicking "try it out"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XwvoaBgf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kli4ipus7thnm1ia86zr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XwvoaBgf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kli4ipus7thnm1ia86zr.png" alt="Example Swagger UI - Page 1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TT-fVKAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aoony7l0jkdttf4v11lg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TT-fVKAx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/aoony7l0jkdttf4v11lg.png" alt="Example Swagger UI - Page 2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XviRJLM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uex78wxjmsh3bovkbro9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XviRJLM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uex78wxjmsh3bovkbro9.png" alt="Example Swagger UI - Page 3"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mJadl7eZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/grxjocvh8dojvn000pj4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mJadl7eZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/grxjocvh8dojvn000pj4.png" alt="Example Swagger UI - Page 4"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>json</category>
      <category>faker</category>
      <category>fastapi</category>
    </item>
    <item>
      <title>Crash course in Asynchronous JavaScript (Part 1)</title>
      <author>Chinmay Mhatre</author>
      <pubDate>Tue, 04 May 2021 04:12:21 +0000</pubDate>
      <link>https://dev.to/chinmaymhatre/crash-course-in-asynchronous-javascript-part-1-4g2o</link>
      <guid>https://dev.to/chinmaymhatre/crash-course-in-asynchronous-javascript-part-1-4g2o</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Asynchronous JavaScript can be a daunting concept to learn. However, it is a essential tool in the toolkit of a JavaScript programmer. It can be used to improve the user experience. We'll understand more about the importance of Asynchronous code as we go along further in the article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#topics-that-well-look-into-"&gt;
  &lt;/a&gt;
  Topics that we'll look into :
&lt;/h2&gt;

&lt;p&gt;Part 1&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JavaScript Call Stack&lt;/li&gt;
&lt;li&gt;What Does Asynchronous Mean&lt;/li&gt;
&lt;li&gt;AJAX&lt;/li&gt;
&lt;li&gt;APIs and WebAPIs&lt;/li&gt;
&lt;li&gt;CallBacks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Part 2&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Promises&lt;/li&gt;
&lt;li&gt;Async and Await&lt;/li&gt;
&lt;li&gt;Making Http Request&lt;/li&gt;
&lt;li&gt;API Project&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Basic knowledge of JavaScript is required.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  Note
&lt;/h3&gt;

&lt;p&gt;The goal here is to have an understanding about how all the puzzle pieces fit into the bigger picture.&lt;/p&gt;

&lt;p&gt;Let us begin by understanding how JavaScript works .&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#javascript-call-stack"&gt;
  &lt;/a&gt;
  JavaScript call stack
&lt;/h1&gt;

&lt;p&gt;JavaScript is a single threaded language. It means that JavaScript can only run one piece of code at a time. It does so using something called as the &lt;strong&gt;Call Stack&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Call stack is how the JavaScript engine keeps track of its place in the script and also manages the different function calls. Stack is a data structure which operates on the LIFO(Last in first out) principle .&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lDux3VMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/116772550-7a016100-aa6d-11eb-90d3-d5848092fb0b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lDux3VMW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/116772550-7a016100-aa6d-11eb-90d3-d5848092fb0b.png" alt="stack"&gt;&lt;/a&gt;&lt;br&gt;
Here we can see "3" comes last in the stack so it will be the first one to be executed and after it is executed it will be popped off the stack.&lt;br&gt;
We can visualize this using a tool called &lt;a href="http://latentflip.com/loupe/?code=Y29uc29sZS5sb2coInN0YXJ0IikKc2V0VGltZW91dChmdW5jdGlvbigpeyBjb25zb2xlLmxvZygid2l0aGluIHRoZSBmdW5jdGlvbiIpfSwxMDAwKQpjb25zb2xlLmxvZygiZW5kIik%3D!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D"&gt;loupe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is an example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;End&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Egjao9Mm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/116772686-64d90200-aa6e-11eb-8c13-53f05a3fbfa5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Egjao9Mm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/116772686-64d90200-aa6e-11eb-8c13-53f05a3fbfa5.png" alt="flow 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When we run this code the first log goes into the call stack.&lt;/li&gt;
&lt;li&gt;After execution, it is popped off the call stack &lt;/li&gt;
&lt;li&gt;Then the second log is pushed into the stack. &lt;/li&gt;
&lt;li&gt;After execution it is popped off and the program ends &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is what we call synchronous flow (One after the other).&lt;br&gt;
Whenever we search anything on google, we see that the page refreshes and waits for the response. This is the default synchronous behavior. The programs waits for the response.  &lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#what-does-asynchronous-mean"&gt;
  &lt;/a&gt;
  What does Asynchronous mean
&lt;/h1&gt;

&lt;p&gt;Let us understand Asynchronous with an example :-&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N97JIs6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jfhz7lpww5lfwuc1igz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N97JIs6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2jfhz7lpww5lfwuc1igz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whenever we are searching something on the YouTube search bar, we can see suggestions as soon as we start typing .&lt;br&gt;
This basically means that requests are being made to the server behind the scenes to get the suggestion after each letter you type. &lt;br&gt;
This however, doesn't block the UI of the website improving the experience of the user. This is called as an Asynchronous request.&lt;/p&gt;

&lt;p&gt;Let us take an example of the setTimeout function :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;middle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;end&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What do you think is the output of this code ?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;start
middle 
end
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since JavaScript as we saw is single threaded, the above output should be correct right? But the output is different from what we might expect .&lt;/p&gt;

&lt;p&gt;This is the actual output of the script.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;start
end
middle
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It seems JavaScript moved ahead by printing start and end first, then the setTimeout ran asynchronously, waited for 1sec and returned the result. So why does this work? How can JavaScript hold the variable and continue executing the code simultaneously?&lt;/p&gt;

&lt;p&gt;So the thing is the setTimeout is actually not part of javascript. It is what we call a browser API . We will understand more about APIs in the next section but hang with me for a bit.&lt;/p&gt;

&lt;p&gt;Web Browser APIs are like super powers provided to us by the browser. For example it can do something like holding a value with setTimeout for a specific amount of time and then returning the value.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#working-of-the-settimeout-function"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;working of the setTimeout function&lt;/em&gt;&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--biUT07pb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vle9epegc5h4n9hn1l76.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--biUT07pb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vle9epegc5h4n9hn1l76.png" alt="setTimeout"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Line one is pushed into the stack and 'start' is printed in the console.&lt;/li&gt;
&lt;li&gt;setTimeout is pushed into the stack.&lt;/li&gt;
&lt;li&gt;The call stack pops the function then asks the browser API that "Hey Browser ! Hold the value in the function for 1 sec and remind me to run it after the time is up" &lt;/li&gt;
&lt;li&gt;The call stack moves ahead with the next line of code and prints 'end' in the console&lt;/li&gt;
&lt;li&gt;&lt;p&gt;After the time is completed the browser API then tell the call stack that "Hey remember the function I was holding, you can execute it now".&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GS_xZUCi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/116772561-8f768b00-aa6d-11eb-9991-7701e9ab8552.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GS_xZUCi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/116772561-8f768b00-aa6d-11eb-9991-7701e9ab8552.gif" alt="loki-Trim"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally "middle" is printed in the console.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Asynchronous however is not limited to setTimeout function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-we-need-asynchronous-code"&gt;
  &lt;/a&gt;
  why do we need asynchronous code
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Although some requests may not take much time, some requests like getting data from a database or an API may take a few seconds .&lt;/li&gt;
&lt;li&gt;If we make these requests synchronously it will block the UI while getting the data, since JavaScript can perform only one task at a time. This will degrade the user experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some things that may need an Asynchronous request include :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Getting data from a database.&lt;/li&gt;
&lt;li&gt;Verify user while login and signup.&lt;/li&gt;
&lt;li&gt;Getting JSON data from an external Web API. &lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#ajax"&gt;
  &lt;/a&gt;
  AJAX
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;AJAX stands for &lt;strong&gt;Asynchronous JavaScript and XML&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;AJAX is not a technology or tool, it is a concept .&lt;/li&gt;
&lt;li&gt;It is just a terminology used for describing asynchronous code.&lt;/li&gt;
&lt;li&gt;When we asynchronously exchange data with the server it is called as an AJAX request.&lt;/li&gt;
&lt;li&gt;We can also update the page without reloading the web page.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So what does the xml part in ajax means?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When we talk about exchanging data with different servers running different technology, there has to be a single format of data that can be understood by all the servers .&lt;/li&gt;
&lt;li&gt;XML and JSON provide us these interfaces which let us transfer data in a format understood by all. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#xml"&gt;
  &lt;/a&gt;
  XML
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;XML stands for  &lt;strong&gt;eXtensible Markup Language&lt;/strong&gt; .&lt;/li&gt;
&lt;li&gt;It is similar to html in the sense that it also uses tags like HTML.&lt;/li&gt;
&lt;li&gt;However the key difference is that, HTML is used for displaying data and XML is used for storing and transferring the data. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#syntax"&gt;
  &lt;/a&gt;
  SYNTAX
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;note&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;date&amp;gt;&lt;/span&gt;2015-09-01&lt;span class="nt"&gt;&amp;lt;/date&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;hour&amp;gt;&lt;/span&gt;08:30&lt;span class="nt"&gt;&amp;lt;/hour&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;to&amp;gt;&lt;/span&gt;Tove&lt;span class="nt"&gt;&amp;lt;/to&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;from&amp;gt;&lt;/span&gt;Jani&lt;span class="nt"&gt;&amp;lt;/from&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;body&amp;gt;&lt;/span&gt;This is a reminder&lt;span class="nt"&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/note&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#json"&gt;
  &lt;/a&gt;
  JSON
&lt;/h2&gt;

&lt;p&gt;JSON stands for JavaScript Object Notation. It also is a format for transferring data. It is an alternative to xml. JSON is really easy to read and understand. Even though it looks like JavaScript objects JSON can be used independent of JavaScript to transfer data . Many programming languages have ability to parse and read JSON.&lt;/p&gt;

&lt;p&gt;The two primary parts that make up JSON are keys and values. Together they make a key/value pair.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Key : A key is always a string enclosed in quotation marks.&lt;/li&gt;
&lt;li&gt;Value : A value can be a string, number, Boolean expression, array, or object.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JSON is a more popular format than XML.&lt;/p&gt;

&lt;p&gt;Anyone who is familiar with JavaScript objects will understand JSON very easily.&lt;br&gt;
modern APIs mostly use JSON to transfer and store data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"squadName"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Super hero squad"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"homeTown"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Metro City"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"formed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"secretBase"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Super tower"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"active"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"members"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Molecule Man"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;29&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"secretIdentity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Dan Jukes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Madame Uppercut"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"age"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;39&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"secretIdentity"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Jane Wilson"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;   
  &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#what-is-an-api"&gt;
  &lt;/a&gt;
  What is an API?
&lt;/h1&gt;

&lt;p&gt;API is the acronym for &lt;strong&gt;Application Programming Interface&lt;/strong&gt;.&lt;br&gt;
 API is an interface which has a set of functions that allow programmers to access specific features or data of an application, operating system or other services.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#web-apis"&gt;
  &lt;/a&gt;
  Web APIs
&lt;/h3&gt;

&lt;p&gt;Often when we talk about APIs in terms of web development the APIs refer to 'Web APIs'. &lt;/p&gt;

&lt;p&gt;Web API as the name suggests, is an API over the web which can be accessed using HTTP protocol.&lt;/p&gt;

&lt;p&gt;Typically when we make a request to a webpage we get all sorts of data like html, CSS, JavaScript. On the contrary when we make asynchronous request through JavaScript we might want a particular part of the data.&lt;/p&gt;

&lt;p&gt;Web API takes requests from the different type of client devices like mobile, laptop, etc. and sends them to the web-server to process it and returns the desired data to the client.&lt;/p&gt;

&lt;p&gt;For example: Twitter's APIs provide access to read and write data using which we can integrate twitter's capabilities into our own application. We could for instance, get data about the users tweets and use it in our own application.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RMZqRp7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/116772555-85548c80-aa6d-11eb-8265-b0333694083b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RMZqRp7S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/51131670/116772555-85548c80-aa6d-11eb-8265-b0333694083b.png" alt="api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The data given by the API can be anything for example : images, JSON objects etc.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We'll understand these APIs HTTP requests in detail a little later but stick with me for a while .&lt;/li&gt;
&lt;li&gt;API requests are like any other HTTP request you make to different websites in the search bar like google, Facebook etc. but response from the API is without the unwanted data (html, css etc.).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's take an example to understand this better &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/%24%7Bid%7D.png"&gt;https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a Pokémon API .It returns an image of a Pokémon when we send it a request. we have to replace the id with the id of the Pokémon we want . 1 is Bulbasaur etc.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MfkBEa60--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jrg4a733q2qlf4szhsx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MfkBEa60--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1jrg4a733q2qlf4szhsx.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
This is what we get when we send a request to  &lt;a href="https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png"&gt;https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png&lt;/a&gt;  .&lt;/p&gt;

&lt;p&gt;You all can also give it a try! Just put the above link in the browser and you'll get back the image. You can also try changing the id to see what different results you get.&lt;br&gt;
It is just like any other http request but only with the data(image).&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#query-strings"&gt;
  &lt;/a&gt;
  Query Strings
&lt;/h2&gt;

&lt;p&gt;In the URL of the API we had to replace the id of the image according to what we want.&lt;br&gt;
That is basically a query string. It request the data according to the value we pass in the query string .&lt;/p&gt;

&lt;p&gt;Let take another example &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://api.tvmaze.com/search/shows?q=:query"&gt;http://api.tvmaze.com/search/shows?q=:query&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is another API that we will be using later. &lt;/p&gt;

&lt;p&gt;In the url, &lt;code&gt;?q=:query&lt;/code&gt; is called as the query string and &lt;code&gt;:query&lt;/code&gt; is a variable. The response changes according to the value of the query variable.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://api.tvmaze.com/search/shows?q=flash"&gt;http://api.tvmaze.com/search/shows?q=flash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://api.tvmaze.com/search/shows?q=brooklyn99"&gt;http://api.tvmaze.com/search/shows?q=brooklyn99&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With the Pokémon API, we took a simple example which returns the data instantaneously. However, some actions like retrieval of information from a database may take some more time or might even get rejected. Thus we have to take into consideration handling the errors that we might get.&lt;/p&gt;

&lt;p&gt;We will discuss the various ways to make async request in a few sections.&lt;br&gt;
But before that we'll have to see how to handle the failure of the asynchronous request.&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#callback-function"&gt;
  &lt;/a&gt;
  Callback function
&lt;/h1&gt;
&lt;h2&gt;
  &lt;a href="#definition"&gt;
  &lt;/a&gt;
  Definition
&lt;/h2&gt;

&lt;p&gt;A callback function is a function passed into another function as an argument, which is then invoked inside the outer function to complete some kind of routine or action.&lt;/p&gt;

&lt;h2&gt;Whatttttt!!!!&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hFTuOI9O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/116772565-92717b80-aa6d-11eb-8b3d-732c5602c916.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hFTuOI9O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/116772565-92717b80-aa6d-11eb-8b3d-732c5602c916.gif" alt="neville"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is an example :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;success&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;fail&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;check&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; 
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}}&lt;/span&gt;

&lt;span class="nx"&gt;check&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Let us assume there are 2 functions &lt;code&gt;success&lt;/code&gt; and &lt;code&gt;fail&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;We pass these two function as arguments to a third function called &lt;code&gt;check&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;When &lt;code&gt;check&lt;/code&gt; is executed it calls the &lt;code&gt;success&lt;/code&gt; function if the variable 'a' is equal to 2 else it calls the &lt;code&gt;fail&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;success&lt;/code&gt; and &lt;code&gt;fail&lt;/code&gt; function are called as callback functions since they are passed as arguments and invoked within a &lt;code&gt;check&lt;/code&gt; function after something happens.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Alright! Let's bring out our friendly neighborhood &lt;code&gt;setTimeout&lt;/code&gt; function again.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As we know there are 2 parameters to the setTimeout function . First is a function and second is a delay .
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;someFunction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let us make a function and pass it to setTimeout&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;  
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;I Have been waiting for 3 sec !!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;setTimeout&lt;/code&gt; which is like an outer function calls the "message" function which is an argument. Here, &lt;code&gt;message&lt;/code&gt; function is a callback function. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Let us see how the setTimeout is defined.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="cm"&gt;/*
some code which will hold the value for 3 secs 
*/&lt;/span&gt;
&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;We see that the function(message) which was passed to &lt;code&gt;setTimeout&lt;/code&gt; as an argument was called within setTimeout.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#passing-callbacks-may-not-be-the-best-way"&gt;
  &lt;/a&gt;
  Passing callbacks may not be the best way
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Suppose we want to write a script in which we have to execute multiple async operations but only after the previous operation completes . In this scenario callbacks may not be our best option. Let us see why.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Let's say we are writing a function to change the background colour of the body to the different colors of the rainbow. However, each colour should appear 1 sec apart from each other. For example red appears after 1 sec, orange appears after 2, yellow appears after 3 and so on.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vFLdqqlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/116772534-5dfdbf80-aa6d-11eb-9de0-62ebc01052f6.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vFLdqqlv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/116772534-5dfdbf80-aa6d-11eb-9de0-62ebc01052f6.gif" alt="rainbow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We understand that we can use the setTimeout to delay the colours. However, we cannot just use them independent of each other, since we will have to calculate the delay.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* assume that red , orange , yellow are
 the functions to change the bg color to the respective colour.*/&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;orange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;We could pass a callback to a function which basically runs the next setTimeout only after the previous &lt;code&gt;setTimeout&lt;/code&gt; finishes. &lt;/li&gt;
&lt;li&gt;It'll look something like this :
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;delayedColorChange&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;doNext&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;backgroundColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;doNext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;So, how will we go about calling this function?&lt;/li&gt;
&lt;li&gt;let's say we want to change the colour to red then to orange.&lt;/li&gt;
&lt;li&gt;The "doNext" argument will contain a callback that again calls the delayedColorChange function but now with the colour as orange. something like this
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;delayedColorChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,()&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;delayedColorChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;orange&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="c1"&gt;//This function will be empty since we want to end the &lt;/span&gt;
&lt;span class="c1"&gt;//color change &lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now lets say we want to change the colour to yellow after orange.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;delayedColorChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,()&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;delayedColorChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;orange&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;delayedColorChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;//This function will be empty since we want to end the &lt;/span&gt;
      &lt;span class="c1"&gt;//color change &lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Let's now make a full rainbow.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;delayedColorChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;delayedColorChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;orange&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;delayedColorChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;yellow&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;delayedColorChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;green&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;delayedColorChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;blue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="nx"&gt;delayedColorChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;indigo&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;delayedColorChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;violet&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                             &lt;span class="c1"&gt;//This function will be empty since &lt;/span&gt;
                             &lt;span class="c1"&gt;//we want to end the &lt;/span&gt;
                            &lt;span class="c1"&gt;//color change&lt;/span&gt;
                        &lt;span class="p"&gt;})&lt;/span&gt;
                    &lt;span class="p"&gt;})&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;It gets a little confusing as we go on nesting more callbacks.&lt;/li&gt;
&lt;li&gt;Even though we just used one callback function here it got pretty crazy. APIs or any kind of async request will have two of them, success and failure. In that case, there will be a lot of nesting .&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MGac5qZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/116772563-91d8e500-aa6d-11eb-89be-f893e68c7249.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MGac5qZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/116772563-91d8e500-aa6d-11eb-89be-f893e68c7249.gif" alt="nesting"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Let us assume &lt;code&gt;fakeRequestCallback(url,success,failure)&lt;/code&gt; is a fake function that will request the URL for data.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;success&lt;/code&gt; and &lt;code&gt;failure&lt;/code&gt; are two callback functions.&lt;/li&gt;
&lt;li&gt;If no error, &lt;code&gt;success&lt;/code&gt; is called, else the &lt;code&gt;failure&lt;/code&gt; is called.&lt;/li&gt;
&lt;li&gt;Here is what happens when we make requests to multiple pages but only after the previous request is successful, similar to the rainbow function.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;fakeRequestCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;books.com/page1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;fakeRequestCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;books.com/page2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="nx"&gt;fakeRequestCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;books.com/page3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;},&lt;/span&gt;
                    &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ERROR (3rd req)!!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
            &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ERROR (2nd req)!!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ERROR!!!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZIKkpn55--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/116772533-5ccc9280-aa6d-11eb-9ed3-5fb00ba2c259.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZIKkpn55--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/51131670/116772533-5ccc9280-aa6d-11eb-9ed3-5fb00ba2c259.gif" alt="sigh"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#welcome-to-callback-hell-"&gt;
  &lt;/a&gt;
  Welcome to callback hell .
&lt;/h4&gt;

&lt;p&gt;If there are multiple async operations to be performed and we try to use our good-old callbacks , we’ll find ourselves in the callback hell .&lt;/p&gt;

&lt;p&gt;Let us see if there is a better way in &lt;a href="https://dev.to/chinmaymhatre/crash-course-in-asynchronous-javascript-part-2-29jn"&gt;part 2&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
