<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Opensource Covid Tracker - India</title>
      <author>CoderZ90</author>
      <pubDate>Wed, 17 Nov 2021 04:00:08 +0000</pubDate>
      <link>https://dev.to/official_fire/opensource-covid-tracker-india-57nk</link>
      <guid>https://dev.to/official_fire/opensource-covid-tracker-india-57nk</guid>
      <description>&lt;p&gt;Live Website - &lt;a href="https://covid-tracky.vercel.app"&gt;https://covid-tracky.vercel.app&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello, Welcome to this blog about the my covid tracker website CovidTracky an alternative to covid19india.org. This website aims to provide you the latest and the most accurate data for covid19 cases. I do this because it affects all of us. Today its someone else who is getting infected; tomorrow it could be me, who knows. We need to prevent the spread of the virus. We need to document the data so that people with knowledge can use this data to make informed decision.&lt;/p&gt;

&lt;p&gt;The data for covid19 cases is provided by The Indian Institute Of Hydrebad used for getting updated covid19 cases.&lt;/p&gt;

&lt;p&gt;About me &lt;/p&gt;

&lt;p&gt;I am a 14 years old developer who wants to be the best developer on this planet. I maintain and made this website ( using the source of covid19india.org ). Thanks to covid19india.org team for their outstanding work in creating the original portal, and for making their code base public&lt;/p&gt;

</description>
      <category>covidtracky</category>
    </item>
    <item>
      <title>code every day with me</title>
      <author>duccanhole</author>
      <pubDate>Wed, 17 Nov 2021 02:30:36 +0000</pubDate>
      <link>https://dev.to/coderduck/code-every-day-with-me-4cee</link>
      <guid>https://dev.to/coderduck/code-every-day-with-me-4cee</guid>
      <description>&lt;h2&gt;
  &lt;a href="#day-22"&gt;
  &lt;/a&gt;
  --DAY 22--
&lt;/h2&gt;

&lt;p&gt;Hi, I am going to make #100DaysOfCode Challenge. Everyday I will try solve 1 problem from leetcode or hackerrank. Hope you can go with me until end.&lt;br&gt;
&lt;strong&gt;Now let's solve problem today:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Problem: Excel Sheet Column Title&lt;/li&gt;
&lt;li&gt;Detail: &lt;a href="https://leetcode.com/problems/excel-sheet-column-title/"&gt;here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Idea: it's pretty similar to convert number to binary&lt;/li&gt;
&lt;li&gt;My solution(javascript):
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;convertToTitle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;column&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ZABCDEFGHIJKLMNOPQRSTUVWXYZ&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;tmp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;column&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;tmp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;floor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;column&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;charAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;--&amp;gt;&lt;em&gt;If you have better solution or any question, please comment below. I will appreciate.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>100daysofcode</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>One of my first proyect!</title>
      <author>DanyVeneno</author>
      <pubDate>Wed, 17 Nov 2021 01:22:19 +0000</pubDate>
      <link>https://dev.to/danyveneno/one-of-my-first-proyect-3n70</link>
      <guid>https://dev.to/danyveneno/one-of-my-first-proyect-3n70</guid>
      <description>&lt;p&gt;&lt;a href="https://jvstore.netlify.app/"&gt;https://jvstore.netlify.app/&lt;/a&gt;&lt;br&gt;
This is a demonstration of an online store developed with React.js / Commerce.js / Stripe React is a Facebook Library based on the web language that is JavaScript Commerce.js is a platform that provides administration services for your store Through a control panel it is paid and a payment gateway such as Stripe, which are the most renowned in 2020 and are totally recent technologies, it only takes a little interface design and usability to have a totally store modern, functional to create a user experience that generates value for your clients or users in addition to being safe.&lt;br&gt;
For security reasons, the final purchase section is disabled since it is not to work, it is like a real project, it is simply a demonstration although that part is also already developed. I will tell you at the end of your payment, it automatically sends you an email with which you registered with the purchase number and a description and prints a thank you screen.&lt;br&gt;
To finish, feel free to browse it and see all its functionality. Click on it&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Dockerize &amp; Backup A Postgres Database </title>
      <author>Matthew Cale</author>
      <pubDate>Wed, 17 Nov 2021 01:06:57 +0000</pubDate>
      <link>https://dev.to/mattcale/dockerize-backup-a-postgres-database-2b1l</link>
      <guid>https://dev.to/mattcale/dockerize-backup-a-postgres-database-2b1l</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-this"&gt;
  &lt;/a&gt;
  What is this?
&lt;/h2&gt;

&lt;p&gt;This is a technical guide for doing common management tasks with a Postgres database running in Docker.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-make-this"&gt;
  &lt;/a&gt;
  Why make this?
&lt;/h2&gt;

&lt;p&gt;As a quick reference for taking db backups and restoring databases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steps"&gt;
  &lt;/a&gt;
  Steps
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#run-the-postgres-image"&gt;
  &lt;/a&gt;
  Run The Postgres Image
&lt;/h3&gt;

&lt;p&gt;Docker makes it incredibly easy to get going with a Postgres database with persistent storage. Let's try it out.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Let's just run the Postgres container pointing its volume location to a spot on disk we like. For me that's: &lt;em&gt;~/docker/volumes/postgres&lt;/em&gt;.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
docker run &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;--name&lt;/span&gt; pg-db &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;shiny_metal_pass &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;-p&lt;/span&gt; 6543:5432 &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/docker/volumes/postgres:/var/lib/postgresql/data &lt;span class="se"&gt;\&lt;/span&gt;
 postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Let's dissect this line by line:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;docker run&lt;/code&gt; -- Runs a specified image (in our case it's &lt;code&gt;postgres&lt;/code&gt;, see last line of command). &lt;a href="https://docs.docker.com/engine/reference/run/"&gt;Source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;--name pg-db&lt;/code&gt; -- Sets the name of the container running the postgres image. &lt;a href="https://docs.docker.com/engine/reference/run/#name---name"&gt;Source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-e POSTGRES_PASSWORD=shiny_metal_pass&lt;/code&gt; -- Sets an environment variable which will be the default password for the superuser. Note: This should be a secret 🤫. &lt;a href="https://hub.docker.com/_/postgres"&gt;Source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-d&lt;/code&gt; -- Detach from the terminal instance. i.e. run in the background.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-p 6543:5432&lt;/code&gt; -- Map the local machine's port &lt;code&gt;6543&lt;/code&gt; to the container's port &lt;code&gt;5432&lt;/code&gt;. So from our machine to connect we will use 6543 which in turn will hit the port in the container running on 5432.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-v $HOME/docker/volumes/postgres:/var/lib/postgresql/data&lt;/code&gt; -- Map any data created in the container at &lt;code&gt;/var/lib/postgresql/data&lt;/code&gt; to a desired location on local disk: &lt;code&gt;$HOME/docker/volumes/postgres&lt;/code&gt;. &lt;a href="https://hub.docker.com/_/postgres"&gt;Source&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;postgres&lt;/code&gt; -- The name of the image in Docker hub we want to create a container from. &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When I run it I see the following&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gTEeLyJS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/2Y63BN4/dt-pgdb-001-create-container.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gTEeLyJS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/2Y63BN4/dt-pgdb-001-create-container.png" alt="create-container" width="880" height="551"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When I check our volume location (note: for me this was an empty location prior to invoking the command above) I see this:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r0cJnqma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/S5m3Bh1/dt-pgdb-002-check-mount.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r0cJnqma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/S5m3Bh1/dt-pgdb-002-check-mount.png" alt="check-mount" width="880" height="551"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Finally, let's see if we can connect to our database. I am using &lt;a href="https://tableplus.com/"&gt;TablePlus&lt;/a&gt; but the same concepts apply with any general purpose database IDE or &lt;code&gt;psql&lt;/code&gt; (&lt;a href="https://www.postgresql.org/docs/13/app-psql.html"&gt;found here&lt;/a&gt;). For me the connection looks like this:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--doX664qK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/tx1DZZr/dt-pgdb-003-connect-sql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--doX664qK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/tx1DZZr/dt-pgdb-003-connect-sql.png" alt="connect-sql" width="880" height="725"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;And when we connect we can run the following to get a lay of the land.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- From a SQL Editor (PSQL / TablePlus Session)&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;datname&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;pg_database&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- RESULTS:&lt;/span&gt;
&lt;span class="c1"&gt;-- postgres&lt;/span&gt;
&lt;span class="c1"&gt;-- template1&lt;/span&gt;
&lt;span class="c1"&gt;-- template0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-some-persistent-data"&gt;
  &lt;/a&gt;
  Create Some Persistent Data
&lt;/h3&gt;

&lt;p&gt;So, we've got a database! What now? &lt;strong&gt;Well let's store some data in it!&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start by creating a new database called &lt;code&gt;todo_it_well&lt;/code&gt;. You guessed it this, YATA (&lt;em&gt;yet another todo app&lt;/em&gt;). This time we are doing it in SQL later we will also show you how to use the &lt;code&gt;createdb&lt;/code&gt; tool.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- From a SQL Editor&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;DATABASE&lt;/span&gt; &lt;span class="n"&gt;todo_it_well&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;-- Query 1 OK: CREATE DATABASE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Switch to our new database. For me, in TablePlus, this just means editing my connection to use &lt;code&gt;todo_it_well&lt;/code&gt; instead of &lt;code&gt;postgres&lt;/code&gt; for the chosen database.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mF_Bafug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/Ldt7ybj/dt-pgdb-004-connect-todo-sql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mF_Bafug--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/Ldt7ybj/dt-pgdb-004-connect-todo-sql.png" alt="connect-todo-sql" width="880" height="725"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Next, create some tables. We will, for this demonstration, create a &lt;code&gt;users&lt;/code&gt; table and &lt;code&gt;tasks&lt;/code&gt; table so that users can track their tasks or "todos". The only &lt;em&gt;almost&lt;/em&gt; complex bit of this is declaring a relationship between tasks and users. This post is not about SQL so don't think too hard on these commands for now just know that they make a viable todo application.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- From a SQL Editor&lt;/span&gt;
&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="nv"&gt;"user"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;INT&lt;/span&gt; &lt;span class="nb"&gt;SERIAL&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;created_at&lt;/span&gt; &lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
   &lt;span class="n"&gt;updated_at&lt;/span&gt; &lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
   &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="nv"&gt;"password"&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;display_name&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="nv"&gt;"task"&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="nb"&gt;INT&lt;/span&gt; &lt;span class="nb"&gt;SERIAL&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;created_at&lt;/span&gt; &lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
   &lt;span class="n"&gt;updated_at&lt;/span&gt; &lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="k"&gt;DEFAULT&lt;/span&gt; &lt;span class="n"&gt;NOW&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
   &lt;span class="n"&gt;owner_id&lt;/span&gt; &lt;span class="nb"&gt;INT&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="nb"&gt;TEXT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;completed_on&lt;/span&gt; &lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="n"&gt;removed_on&lt;/span&gt; &lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="k"&gt;CONSTRAINT&lt;/span&gt; &lt;span class="n"&gt;fk_owner&lt;/span&gt; 
    &lt;span class="k"&gt;FOREIGN&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;owner_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="k"&gt;REFERENCES&lt;/span&gt; &lt;span class="nv"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;-- Query 1 OK: CREATE TABLE&lt;/span&gt;
&lt;span class="c1"&gt;-- Query 2 OK: CREATE TABLE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Before we finish this step let's create some real data in here! Let's create some users first and then some tasks for them!
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- From a SQL Editor&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="nv"&gt;"user"&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;"email"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"display_name"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;VALUES&lt;/span&gt; 
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'matt@email.fun'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'password-gasworld'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'matt-the-magic-monkey'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'jennie@yahoo.fun'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'password-sassworld'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'dat-girl-jen'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'timothy24@email.fun'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'pw-vw'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'yo-boi-tom-o-tee'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="c1"&gt;-- users created with ids: 1, 2 and 3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next, the tasks:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- From a SQL Editor&lt;/span&gt;
&lt;span class="k"&gt;INSERT&lt;/span&gt; &lt;span class="k"&gt;INTO&lt;/span&gt; &lt;span class="nv"&gt;"task"&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;"owner_id"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;"label"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;VALUES&lt;/span&gt; 
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'read this awesome post'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tech'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'do dishes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'read chapter of lotr'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'lit'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'sign up to volunteer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'call brother'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'make grocery list'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'health'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'rake leaves'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'house'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Validate that our data looks as expected:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- From a SQL Editor&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; 
   &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
   &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; 
   &lt;span class="nv"&gt;"user"&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt; 
&lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt;
   &lt;span class="nv"&gt;"task"&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;owner_id&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; 
   &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
   &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;completed_on&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;-- RESULTS:&lt;/span&gt;
&lt;span class="c1"&gt;-- display_name description&lt;/span&gt;
&lt;span class="c1"&gt;-- dat-girl-jen read chapter of lotr&lt;/span&gt;
&lt;span class="c1"&gt;-- dat-girl-jen sign up to volunteer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-backup"&gt;
  &lt;/a&gt;
  Create A Backup
&lt;/h3&gt;

&lt;p&gt;So here we are with some valuable customer data that we &lt;strong&gt;really&lt;/strong&gt; do not wanna lose. A good practice for any developer is to take regular (hopefully automated) database backups. Doing this in Postgres isn't too hard so let's get to it. I should state there are several ways to do this. This is just one of many ways to get this job done. I &lt;em&gt;think&lt;/em&gt; it is the most straightforward way; though, there are definitely faster ways.&lt;/p&gt;

&lt;p&gt;This approach consists of issuing a set of commands to the container that could likely be CRON &lt;em&gt;job-ified&lt;/em&gt; without too much effort.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First let's create a &lt;em&gt;backups&lt;/em&gt; directory at a spot that we share with our container's filesystem and our host machine:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
docker &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; pg-db bash &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'mkdir /var/lib/postgresql/data/backups'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;This command (run from the host machine) executes a command (&lt;code&gt;-c&lt;/code&gt;) &lt;code&gt;mkdir&lt;/code&gt; on the container and creates a directory called &lt;em&gt;backups&lt;/em&gt; which is located at the spot on the container that is shared with the host machine. You can verify this on the host by running:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/docker/volumes/postgres | &lt;span class="nb"&gt;grep &lt;/span&gt;backups
&lt;span class="c"&gt;# my machine outputs: backups&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next, let's create our backup
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
docker &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; pg-db bash &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'pg_dump todo_it_well -U postgres  --file=/var/lib/postgresql/data/backups/todo_it_well_db-$(date +%Y-%m-%d).sql'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's breakdown this command:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;docker exec -t pg-db bash -c&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;We tell Docker we want to run a command on the &lt;code&gt;pg-db&lt;/code&gt; container&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pg_dump todo_it_well -U postgres&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;We invoke the &lt;code&gt;pg_dump&lt;/code&gt; tool on the container telling it to target the &lt;code&gt;todo_it_well&lt;/code&gt; db and run commands as the &lt;code&gt;postgres&lt;/code&gt; user.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;code&gt;--file=/var/lib/postgresql/data/backups/todo_it_well_db-$(date +%Y-%m-%d).sql&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is the spot on the container we want to place our back up at and as you can see it is the shared backups directory we just made. There is a little &lt;code&gt;date&lt;/code&gt; logic that interpolates the current date as YEAR-MONTH-DAY.
&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If this went as planned we should have made our database backup and we can verify it on our host machine by running:&lt;br&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/docker/volumes/postgres/backups
&lt;span class="c"&gt;# my machine outputs: todo_it_well_db-2021-11-07.sql&lt;/span&gt;
&lt;span class="nb"&gt;cat&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/docker/volumes/postgres/backups/todo_it_well_db-2021-11-07.sql
&lt;span class="c"&gt;# output includes: -- PostgreSQL database dump&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;If you see some SQL in your output then &lt;strong&gt;congratulations&lt;/strong&gt;! You have successfully created a database backup and your data strategy for your awesome app is just the tiniest bit more durable. 🎉&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#drop-data-and-restore-it"&gt;
  &lt;/a&gt;
  Drop Data And Restore It
&lt;/h3&gt;

&lt;p&gt;Great, so our data has been backed up! This means that you can restore folks back to a particular point in time when things were as they should be. So long as you have an application that can reliably serve this data (ruminates on articles using &lt;a href="https://github.com/pressly/goose"&gt;Goose&lt;/a&gt; to accomplish database versioning) you can restore functionality and value to your users. &lt;/p&gt;

&lt;p&gt;BUT, backing up your data is only half the battle. Actually restoring it is another matter. Let's practice the act of restoring our data. &lt;/p&gt;

&lt;p&gt;First, I should confess that this article commits a sin of simplicity in that I wanted to get going as simply as possible. You more than likely &lt;strong&gt;should not&lt;/strong&gt; place your backups in the exact same spot as the rest of your mounted volume data, but it was useful in getting us going faster. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;So to start, we are going to put our backup temporarily out of this spot so that we can &lt;em&gt;pretend&lt;/em&gt; we had mounted two volumes:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
&lt;span class="c"&gt;# Let's move our data to our home directory and pretend this is where we safely mounted our backups when starting the container, ok?&lt;/span&gt;
&lt;span class="nb"&gt;cp&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nv"&gt;$HOME&lt;/span&gt;/docker/volumes/postgres/backups/todo_it_well_db-2021-11-07.sql &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nv"&gt;$HOME&lt;/span&gt;/todo_it_well_db-2021-11-07.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next, verify that our data is where we expect it to be:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt; | &lt;span class="nb"&gt;grep &lt;/span&gt;todo_it_well_db-2021-11-07.sql
&lt;span class="c"&gt;# my machine outputs todo_it_well_db-2021-11-07.sql&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Ok cool, we are &lt;em&gt;pretending&lt;/em&gt; the we have a spot outside the normal Postgres files where we keep our data safely backed up. &lt;strong&gt;Now, the fun part.&lt;/strong&gt;  OMG! We just got &lt;strong&gt;attacked&lt;/strong&gt; 😰. All records were destroyed by the evil hacker! Let's stop our container and delete all of our persistent data.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
&lt;span class="c"&gt;# Stop the container forcibly&lt;/span&gt;
docker &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-f&lt;/span&gt; pg-db
&lt;span class="c"&gt;# Delete our persistent data&lt;/span&gt;
&lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-rf&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/docker/volumes/postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Verify the data is indeed gone.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
&lt;span class="nb"&gt;ls&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/docker/volumes/postgres
&lt;span class="c"&gt;# my machine outputs: No such file or directory&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now we have discovered the attack and want to bring our application back online. So we start up our container as before:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
docker run &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;--name&lt;/span&gt; pg-db &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="nv"&gt;POSTGRES_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;shiny_metal_pass &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;-d&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;-p&lt;/span&gt; 6543:5432 &lt;span class="se"&gt;\&lt;/span&gt;
 &lt;span class="nt"&gt;-v&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/docker/volumes/postgres:/var/lib/postgresql/data &lt;span class="se"&gt;\&lt;/span&gt;
 postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;However, sadly, our data, including our database, is gone and we cannot connect to the &lt;strong&gt;todo_it_well&lt;/strong&gt; database. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--S1uIxRJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/CvmWsXc/dt-pgdb-005-connect-fail-sql.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--S1uIxRJN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/CvmWsXc/dt-pgdb-005-connect-fail-sql.png" alt="connect-fail-sql" width="880" height="725"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Fear not&lt;/strong&gt;, 🦸‍♀️ we have a backup! Simply copy the backup into the container:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
docker &lt;span class="nb"&gt;cp&lt;/span&gt; &lt;span class="nv"&gt;$HOME&lt;/span&gt;/todo_it_well_db-2021-11-07.sql pg-db:/var
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Next, you will need to recreate the database (so your backup data has a place to restore to):
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# In your terminal&lt;/span&gt;
docker &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; pg-db bash &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"createdb &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;
-h localhost &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;
-p 5432 &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;
-U postgres &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;
todo_it_well"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Finally, run the &lt;code&gt;psql&lt;/code&gt; SQL file command and take a deep breath, you are recovering from a &lt;strong&gt;very stressful attack&lt;/strong&gt; 😉.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;docker &lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; pg-db bash &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s2"&gt;"psql &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;
-U postgres &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;
-d todo_it_well &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;&lt;span class="s2"&gt;
-f /var/todo_it_well_db-2021-11-07.sql"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Lastly, let's verify that our data was properly restored by running our query from earlier:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="c1"&gt;-- From a SQL Editor&lt;/span&gt;
&lt;span class="k"&gt;SELECT&lt;/span&gt; 
   &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;display_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
   &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt; 
   &lt;span class="nv"&gt;"user"&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt; 
&lt;span class="k"&gt;INNER&lt;/span&gt; &lt;span class="k"&gt;JOIN&lt;/span&gt;
   &lt;span class="nv"&gt;"task"&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="k"&gt;ON&lt;/span&gt; &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;owner_id&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; 
   &lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
   &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;completed_on&lt;/span&gt; &lt;span class="k"&gt;IS&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;-- RESULTS&lt;/span&gt;
&lt;span class="c1"&gt;-- display_name description&lt;/span&gt;
&lt;span class="c1"&gt;-- dat-girl-jen read chapter of lotr&lt;/span&gt;
&lt;span class="c1"&gt;-- dat-girl-jen sign up to volunteer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There you have it! You have done a ton! You set up a dockerized Postgres DB, you created you schemas and planted some data in your database, you took a back up of the data and then restored the data from back up after losing it. You rock 🎸. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing Thoughts
&lt;/h2&gt;

&lt;p&gt;There are some issues with our set up and certainly there are some ease of use and durability improvements we could make, but this is a fully working solution. Some of the areas we should checkout:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Custom Dockerfile that includes a backups location.&lt;/li&gt;
&lt;li&gt;A run command that references the previously mentioned backups location mount. &lt;/li&gt;
&lt;li&gt;A cron job run on the host or on the container that creates backups.&lt;/li&gt;
&lt;li&gt;A secure, but accessible spot for these backups to stored. Maybe DigitalOcean Spaces, why not 🦀?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://graspingtech.com/docker-compose-postgresql/"&gt;https://graspingtech.com/docker-compose-postgresql/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://simkimsia.com/how-to-restore-database-dumps-for-postgres-in-docker-container/"&gt;https://simkimsia.com/how-to-restore-database-dumps-for-postgres-in-docker-container/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/40632228/input-file-appears-to-be-a-text-format-dump-please-use-psql"&gt;https://stackoverflow.com/questions/40632228/input-file-appears-to-be-a-text-format-dump-please-use-psql&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tutorialspoint.com/postgresql/postgresql_create_database.htm"&gt;https://www.tutorialspoint.com/postgresql/postgresql_create_database.htm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>web</category>
      <category>docker</category>
      <category>postgres</category>
    </item>
    <item>
      <title>100 días de código: 12, 13 y 14. Ocupaciones de familia </title>
      <author>Daro</author>
      <pubDate>Wed, 17 Nov 2021 00:33:13 +0000</pubDate>
      <link>https://dev.to/darito/100-dias-de-codigo-12-13-y-14-ocupaciones-de-familia-4cpk</link>
      <guid>https://dev.to/darito/100-dias-de-codigo-12-13-y-14-ocupaciones-de-familia-4cpk</guid>
      <description>&lt;p&gt;¡Hey hey hey!&lt;/p&gt;

&lt;p&gt;Pensaron que estaba desaparecido en combate pues ¡no!.&lt;br&gt;
He estado bastante ocupado en estos días anteriores y apenas conseguía tiempo para codificar asi que me dedicaba a ello aunque no pude escribir en el blog.&lt;/p&gt;

&lt;p&gt;La familia, a veces, puede absorber mucho del tiempo pero gracias a ello he pensado que debería crear un programa que me permita crear una forma rápida de escribir el blog aunque sea con una plantilla en caso que no tenga tiempo.&lt;/p&gt;

&lt;p&gt;Pero despues de tanta charla tengo que ponerme al día y contarles que es lo que he hecho...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dia-12"&gt;
  &lt;/a&gt;
  Dia 12:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Practique &lt;strong&gt;touch typing&lt;/strong&gt; durante 30 minutos.&lt;/li&gt;
&lt;li&gt;Logre resolver algunos ejercicios mas en Hacker Rank los cuales resuelvo por hobbie.&lt;/li&gt;
&lt;li&gt;Añadí mas estilos a mi pagina web.&lt;/li&gt;
&lt;li&gt;Ayude a construir un gallinero para la familia.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ayer"&gt;
  &lt;/a&gt;
  Ayer:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Mejore el gallinero.&lt;/li&gt;
&lt;li&gt;Practique &lt;strong&gt;touch typing&lt;/strong&gt; durante &lt;strong&gt;30 minutos&lt;/strong&gt; y ahora ya puedo utilizar la mayor parte de mis manos para escribir.&lt;/li&gt;
&lt;li&gt;Avance con los estilos de mi pagina web.&lt;/li&gt;
&lt;li&gt;Avance con el curso &lt;strong&gt;The Odin Project&lt;/strong&gt;, termine la sección de HTML y comencé la de introducción a CSS.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#hoy"&gt;
  &lt;/a&gt;
  Hoy:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Casi termino con la sección de Css de The Odin Project, solo me falta el proyecto final.&lt;/li&gt;
&lt;li&gt;Practique &lt;strong&gt;touch typing&lt;/strong&gt; durante &lt;strong&gt;30 minutos&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Termine los ejercicios de Css de The odin project.&lt;/li&gt;
&lt;li&gt;Practique un poco mas de Flexbox para mejorar mis habilidades.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;"El tiempo pasa rápido... Dedícaselo a lo que te gusta."&lt;/em&gt; &lt;br&gt;
&lt;em&gt;-David Alonso Ruiz&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Realmente no he avanzado mucho mas que en el curso, pero siento que debo dedicarle mas tiempo a mi pagina asi que se convertirá en mi prioridad.&lt;br&gt;
También debo realizar la revisión de mi sprint semanal pero me gusta la idea de comenzarlo en lunes asi que esperare hasta el siguiente para comentarlo.&lt;br&gt;
Y esto es todo por hoy queridos amigos, que tengan mucho éxito en sus proyectos.&lt;br&gt;
Adiós mundo!&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#links-de-referencias"&gt;
  &lt;/a&gt;
  Links de referencias:
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.theodinproject.com/"&gt;The Odin project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typingstudy.com/"&gt;Pagina para practicar touch typing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>spanish</category>
      <category>100daysofcode</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Top 7 Featured DEV Posts from the Past Week</title>
      <author>Gracie Gregory (she/her)</author>
      <pubDate>Tue, 16 Nov 2021 23:40:27 +0000</pubDate>
      <link>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-2jg3</link>
      <guid>https://dev.to/devteam/top-7-featured-dev-posts-from-the-past-week-2jg3</guid>
      <description>&lt;p&gt;&lt;em&gt;Every Tuesday we round up the previous week's top posts based on traffic, engagement, and a hint of editorial curation. The typical week starts on Monday and ends on Sunday, but don't worry, we take into account posts that are published later in the week.&lt;/em&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sharing-the-wheel-with-copilot"&gt;
  &lt;/a&gt;
  Sharing the wheel with Copilot
&lt;/h2&gt;

&lt;p&gt;GitHub Copilot, that is! Thanks to &lt;a class="mentioned-user" href="https://dev.to/thenomadevel"&gt;@thenomadevel&lt;/a&gt;
 for sharing this breakdown of what this tool does... and doesn't do (i.e. steal your job). &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/thenomadevel" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xe6TcOEW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--MGMv-zC7--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/746775/8262390b-d183-40a1-8bc7-39e183617459.jpg" alt="thenomadevel"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/thenomadevel/what-is-github-copilot-will-it-take-your-jobs--33p5" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What is Github Copilot? Will it take your jobs !?&lt;/h2&gt;
      &lt;h3&gt;Nomadev💻🔱 ・ Nov 10 ・ 4 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#opensource&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#github&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#once-more-with-feeling"&gt;
  &lt;/a&gt;
  Once more with feeling
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/lorena"&gt;@lorena&lt;/a&gt;
 built a machine learning model that detects emotions from speech in a data science bootcamp. Pretty incredible, right? Read all about it here. 👇 &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/lorena" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SnVSYrO4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--fKT8YDvT--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/588430/92d73134-1ac8-4446-a204-474833d21332.jpg" alt="lorena"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/lorena/detecting-emotions-from-speech-with-neural-networks-in-python-3ioe" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Detecting emotions from speech with neural networks in Python&lt;/h2&gt;
      &lt;h3&gt;Lorena Ciutacu ・ Nov 12 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#python&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#machinelearning&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#datascience&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#making-the-leap"&gt;
  &lt;/a&gt;
  Making the leap
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/maxritter"&gt;@maxritter&lt;/a&gt;
 wrote about making the move from being employed by a corporation to working independently as a freelancer. If you've ever considered doing the same, check this out!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/maxritter" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HNJtYK95--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--B7fa0MAH--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/455701/75cccdca-0b49-4ec9-99e8-e704f5428e16.jpg" alt="maxritter"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/maxritter/becoming-self-employed-a-personal-journey-and-best-practices-for-making-the-leap-1phm" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Becoming self-employed: A personal journey and best-practices for making the leap&lt;/h2&gt;
      &lt;h3&gt;Max Ritter ・ Nov 13 ・ 14 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#programming&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#motivation&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#we-are-paid-to-solve-problems-not-to-write-code"&gt;
  &lt;/a&gt;
  We are paid to solve problems not to write code.
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/dvddpl"&gt;@dvddpl&lt;/a&gt;
 explains why we need to learn how to love problems and not mistake our own ego as the entire point as programmers.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/dvddpl" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UboDmADM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--JXv2xuBV--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/132615/9bcf8385-383b-4b64-b5cc-d8a9f4f675b8.jpeg" alt="dvddpl"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/dvddpl/the-screw-and-the-hammer-love-the-problems-not-your-solutions-2i0a" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The screw and the hammer: Love the problems, not your solutions. &lt;/h2&gt;
      &lt;h3&gt;Davide de Paolis ・ Nov 11 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#productivity&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#career&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#personaldevelopment&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-art-of-the-possible"&gt;
  &lt;/a&gt;
  The art of the possible
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/0shuvo0"&gt;@0shuvo0&lt;/a&gt;
 created a pretty amazing app that allows you to draw on a canvas in multiple colors, clear it, and save your creation as an image. Best of all, they provide the code so you can build the same app yourself!&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/0shuvo0" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wZgMNup---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--j0_lvM9_--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/728097/0f6e1da9-f243-42d0-b446-301ac6ea6412.jpeg" alt="0shuvo0"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/0shuvo0/lets-create-a-drawing-app-with-js-4ej3" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Lets create a Drawing APP with JS&lt;/h2&gt;
      &lt;h3&gt;Shuvo ・ Nov 10 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#which-conditional-statement-to-use-when"&gt;
  &lt;/a&gt;
  Which conditional statement to use when
&lt;/h2&gt;

&lt;p&gt;&lt;a class="mentioned-user" href="https://dev.to/sumusiriwardana"&gt;@sumusiriwardana&lt;/a&gt;
 took a problem they used to frequently encounter and turned it into a helpful resource for others. Great stuff, Sumudu.&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/sumusiriwardana" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T8FYshfi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--XrIqHL4c--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/640110/b9b56633-cfb5-44d9-a248-09eef7341767.jpg" alt="sumusiriwardana"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/sumusiriwardana/if-else-or-switch-case-which-one-to-pick-4p3h" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;If-Else or Switch-Case: Which One to Pick?&lt;/h2&gt;
      &lt;h3&gt;Sumudu Siriwardana ・ Nov 10 ・ 7 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#the-nocode-movement"&gt;
  &lt;/a&gt;
  The No-Code Movement
&lt;/h2&gt;

&lt;p&gt;"To reach an age of absolute no-code," writes &lt;a class="mentioned-user" href="https://dev.to/study_web_dev"&gt;@study_web_dev&lt;/a&gt;
 "we need to outdo ourselves with artificial intelligence before anything else." More fantastic insights into where we're headed with "no-code" and the factors involved in that trajectory in this post. &lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/study_web_dev" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kKdo7NKP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--jSR1ZgGz--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386817/aed39147-6fa7-4797-b08d-9dcd96a6aad5.jpg" alt="study_web_dev"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/study_web_dev/is-no-code-the-future-of-creating-websites-4pjn" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Is No-Code the Future of Creating Websites?&lt;/h2&gt;
      &lt;h3&gt;Kyle Prinsloo ・ Nov 9 ・ 8 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#codenewbie&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#coding&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;&lt;em&gt;That's it for our weekly wrap up! Keep an eye on dev.to this week for daily content and discussions...and if you miss anything, we'll be sure to recap it next Tuesday!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>icymi</category>
    </item>
    <item>
      <title>GREYOS - World's first Meta-OS</title>
      <author>George Delaportas (ViR4X)</author>
      <pubDate>Tue, 16 Nov 2021 23:36:48 +0000</pubDate>
      <link>https://dev.to/g0d/greyos-worlds-first-meta-os-37jd</link>
      <guid>https://dev.to/g0d/greyos-worlds-first-meta-os-37jd</guid>
      <description>&lt;p&gt;Hello all, it's been too long but this is the time to tell you about GreyOS!&lt;/p&gt;

&lt;p&gt;GreyOS is an open source Meta-OS (nothing related to metaverse, facebook, etc.). I have been developing this since 2013.&lt;/p&gt;

&lt;p&gt;GreyOS introduces the new computing era with the Cloud Computer (CC), which is always on, available, fast and secure.&lt;/p&gt;

&lt;p&gt;Please check the details at &lt;a href="https://github.com/g0d/GreyOS"&gt;https://github.com/g0d/GreyOS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am looking for contributors, developers and testers to do so much more, create new integrated apps and reshape the computing landscape into something fresh!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ki93MXgC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awwzi81zfcboah2bt9q7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ki93MXgC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/awwzi81zfcboah2bt9q7.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>php</category>
      <category>programming</category>
      <category>opensource</category>
    </item>
    <item>
      <title>How to Rename an AWS S3 Bucket in Terraform</title>
      <author>Kuba Martin</author>
      <pubDate>Tue, 16 Nov 2021 23:00:05 +0000</pubDate>
      <link>https://dev.to/spacelift/how-to-rename-an-aws-s3-bucket-in-terraform-step-by-step-3cb4</link>
      <guid>https://dev.to/spacelift/how-to-rename-an-aws-s3-bucket-in-terraform-step-by-step-3cb4</guid>
      <description>&lt;p&gt;Occasionally you might want to rename an AWS S3 bucket you are managing with Terraform. However, names of S3 buckets are immutable, which means you can’t change them directly. If you tried, Terraform would destroy the old one and then create a new one, resulting in data loss.&lt;/p&gt;

&lt;p&gt;To avoid this, you need to &lt;strong&gt;create a new bucket with the desired name&lt;/strong&gt;, move the data over to it, make the relevant Terraform state replacements, and finally delete the old bucket.&lt;/p&gt;

&lt;p&gt;In this post you will learn how to rename an AWS S3 bucket in Terraform. First things first – let’s say you have a bucket definition in your Terraform code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;aws_s3_bucket&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;my_bucket&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;bucket&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;old&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and you want to change the name of the bucket to &lt;code&gt;new-name&lt;/code&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1-create-the-new-bucket"&gt;
  &lt;/a&gt;
  Step 1 - Create the new bucket
&lt;/h1&gt;

&lt;p&gt;Firstly, we’ll need to create a new bucket. You can do this using the AWS CLI or the &lt;a href="https://docs.aws.amazon.com/awsconsolehelpdocs/latest/gsg/console-help-gsg.pdf"&gt;AWS console&lt;/a&gt;. Just make sure to properly replicate the old settings, especially the ACL (so that your data doesn’t accidentally become public).&lt;/p&gt;

&lt;p&gt;Now, we can copy all the files from the old to the new bucket:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;aws&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt; &lt;span class="nx"&gt;sync&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//old-name s3://new-name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#step-2-modify-the-state"&gt;
  &lt;/a&gt;
  Step 2 - Modify the State
&lt;/h1&gt;

&lt;p&gt;Now that we have our new bucket, we need to remove the old one from our Terraform state and import the new one in its place:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;terraform&lt;/span&gt; &lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="nx"&gt;rm&lt;/span&gt; &lt;span class="nx"&gt;aws_s3_bucket&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;my_bucket&lt;/span&gt;
&lt;span class="nx"&gt;terraform&lt;/span&gt; &lt;span class="nx"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;aws_s3_bucket&lt;/span&gt;&lt;span class="err"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;my_bucket&lt;/span&gt; &lt;span class="nx"&gt;new&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you tried to run Terraform now, it would show you that there’s drift—and yes, there would be! We’ve just imported a bucket into a resource which still has &lt;code&gt;old-name&lt;/code&gt; in the config.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-3-change-the-code"&gt;
  &lt;/a&gt;
  Step 3 - Change the Code
&lt;/h1&gt;

&lt;p&gt;That’s why we now have to finally change the name of the bucket in our Terraform config:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;aws_s3_bucket&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;my_bucket&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;bucket&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="nx"&gt;new&lt;/span&gt;&lt;span class="err"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you run Terraform now, you’ll see that there are no changes to be made.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-4-do-a-cleanup"&gt;
  &lt;/a&gt;
  Step 4 - Do a Cleanup
&lt;/h1&gt;

&lt;p&gt;If you want to, you can now delete your old bucket using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight hcl"&gt;&lt;code&gt;&lt;span class="nx"&gt;aws&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt; &lt;span class="nx"&gt;rm&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//old-name --recursive&lt;/span&gt;
&lt;span class="nx"&gt;aws&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt; &lt;span class="nx"&gt;rb&lt;/span&gt; &lt;span class="nx"&gt;s3&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//old-name&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure all the data has successfully been copied over to the new bucket.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-5-run-the-above-arbitrary-aws-cli-commands-if-youre-using-spacelift"&gt;
  &lt;/a&gt;
  Step 5 - Run the Above Arbitrary AWS CLI Commands if You’re Using Spacelift
&lt;/h1&gt;

&lt;p&gt;If you’re using Spacelift then you can use &lt;a href="https://docs.spacelift.io/concepts/run/task"&gt;tasks&lt;/a&gt; to run the above arbitrary AWS CLI commands. The default runner image already contains the AWS CLI, so no changes are necessary there.&lt;/p&gt;

&lt;p&gt;One additional thing you can do is &lt;a href="https://docs.spacelift.io/concepts/stack/stack-locking"&gt;lock the Stack&lt;/a&gt; while you’re running the migration, this way nobody will accidentally run Terraform or make any other changes while you’re moving the data.&lt;/p&gt;

&lt;p&gt;And that’s it! If you have any questions about how to rename an AWS S3 bucket, drop me a line in the comments and I’ll get back to you straight away.&lt;/p&gt;

&lt;p&gt;You will find more Terraform Tutorials on our website:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://spacelift.io/blog/importing-exisiting-infrastructure-into-terraform"&gt;How to Import Existing Infrastructure into Terraform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spacelift.io/blog/what-are-terraform-modules-and-how-do-they-work"&gt;How to Use Terraform Modules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spacelift.io/blog/how-to-use-terraform-variables"&gt;How to Use Terraform Variables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spacelift.io/blog/terraform-functions-expressions-loops"&gt;How to Use Terraform Functions, Expression and Loops&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spacelift.io/blog/how-to-destroy-terraform-resources"&gt;How to Destroy Resources from Terraform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spacelift.io/blog/terraform-version-upgrade"&gt;How to Upgrade Terraform to the Latest Version&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://spacelift.io/blog/terraform-ansible"&gt;Terraform vs. Ansible&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>terraform</category>
      <category>aws</category>
      <category>tutorial</category>
      <category>devops</category>
    </item>
    <item>
      <title>How to style markdown with Tailwind CSS</title>
      <author>Oz Ertas</author>
      <pubDate>Tue, 16 Nov 2021 22:51:58 +0000</pubDate>
      <link>https://dev.to/oerts/how-to-style-markdown-with-tailwind-css-12m9</link>
      <guid>https://dev.to/oerts/how-to-style-markdown-with-tailwind-css-12m9</guid>
      <description>&lt;p&gt;Tailwind CSS comes with "an opinionated set of base styles" called Preflight. A helpful CSS reset built on top of &lt;a href="https://github.com/sindresorhus/modern-normalize"&gt;modern-normalize&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Margins, headings, lists, and many others get stripped from their defaults. Thus, achieving cross-browser consistency and an easier adaptation of your design system.&lt;/p&gt;

&lt;p&gt;It all sounds helpful, until you need those defaults to style a markdown post.&lt;/p&gt;

&lt;p&gt;In comes &lt;code&gt;@tailwindcss/typography&lt;/code&gt;, a plugin with sensible typographic styles. It adds a set of &lt;code&gt;prose&lt;/code&gt; classes to style content blocks like the one you are reading.&lt;/p&gt;

&lt;p&gt;You can install it via npm or yarn:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# Using npm
npm install @tailwindcss/typography

# Using Yarn
yarn add @tailwindcss/typography
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then add the plugin to your &lt;code&gt;tailwind.config.js&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// tailwind.config.js&lt;/span&gt;
&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;theme&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@tailwindcss/typography&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="c1"&gt;// ...&lt;/span&gt;
  &lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, you can use the &lt;code&gt;prose&lt;/code&gt; class to apply the markdown styling:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;article&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"prose lg:prose-xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Welcome to Mars!&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    Although life on Mars is perfect in every single way, you might have some questions.
  &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;
    Of course there’s air! Just don’t breathe it. And, with the crazy gravity situation, everyone can dunk!
  &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;More information about the &lt;code&gt;prose&lt;/code&gt; class and its modifiers can be found at the &lt;a href="https://github.com/tailwindlabs/tailwindcss-typography"&gt;repository&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>css</category>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Why is `this` a pointer and not an rvalue reference in C++?</title>
      <author>Calin Baenen</author>
      <pubDate>Tue, 16 Nov 2021 22:32:46 +0000</pubDate>
      <link>https://dev.to/baenencalin/why-is-this-a-pointer-and-not-an-rvalue-reference-in-c-33a7</link>
      <guid>https://dev.to/baenencalin/why-is-this-a-pointer-and-not-an-rvalue-reference-in-c-33a7</guid>
      <description>&lt;p&gt;What was the thought behind making &lt;code&gt;this&lt;/code&gt; a pointer of &lt;code&gt;T&lt;/code&gt;, instead of &lt;code&gt;T&amp;amp;&amp;amp;&lt;/code&gt;?&lt;/p&gt;

</description>
      <category>cpp</category>
      <category>discuss</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>How to deploy your Python Flask projects</title>
      <author>Adam Miedema</author>
      <pubDate>Tue, 16 Nov 2021 21:58:14 +0000</pubDate>
      <link>https://dev.to/armiedema/how-to-deploy-your-python-flask-projects-3nme</link>
      <guid>https://dev.to/armiedema/how-to-deploy-your-python-flask-projects-3nme</guid>
      <description>&lt;p&gt;Python's popularity continues to sore and has consistently been one of the top programming languages for web development over the last several years. Python's powerful simplicity is easy-to-learn and easy-to-apply.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://flask.palletsprojects.com/"&gt;Flask&lt;/a&gt; is a straightforward framework for Python web development that makes it easy to get started on your web applications.&lt;/p&gt;

&lt;p&gt;Since Python3 is pre-packaged on Ubuntu 20.04, we can leverage this fact to easily deploy an example Flask framework application using &lt;a href="https://cleavr.io"&gt;Cleavr.io&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;Before proceeding, you'll need to have an active &lt;a href="https://cleavr.io"&gt;Cleavr.io&lt;/a&gt; account and have a server provisioned and ready-to-go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-1-add-a-nodejs-ssr-app"&gt;
  &lt;/a&gt;
  Step 1 - Add a NodeJS SSR app
&lt;/h2&gt;

&lt;p&gt;Add a new NodeJS SSR site to your server in Cleavr.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---nV27qaQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uldlxbnyw8hw49y37qd1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---nV27qaQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/uldlxbnyw8hw49y37qd1.png" alt="add new nodejs ssr site to cleavr managed server" width="660" height="381"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We're using NodeJS SSR as the site's app type as it will install Node AND PM2 to the server. PM2 manages more than just node applications, so we'll take advantage of this to serve our Flask app and keep it alive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-2-configure-app-repo"&gt;
  &lt;/a&gt;
  Step 2 - Configure app repo
&lt;/h2&gt;

&lt;p&gt;Once the site has successfully been added to the server, click the &lt;strong&gt;Setup and deploy&lt;/strong&gt; link to configure the web app.&lt;/p&gt;

&lt;p&gt;On the settings &amp;gt; repo tab, add &lt;code&gt;armgitaar/flask-example&lt;/code&gt; to the repo and keep branch as &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HVFkBYa_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9fe28wuhi6gp98eerkli.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HVFkBYa_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9fe28wuhi6gp98eerkli.png" alt="configure project git repository" width="819" height="257"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this example, we're using a Flask repo originally by &lt;a href="https://github.com/XD-DENG"&gt;XD&lt;/a&gt; that I've modified a bit to make the port number use the one automatically assigned by Cleavr. &lt;a href="https://github.com/armgitaar/flask-example"&gt;View the example repo here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To view the modification, open the &lt;a href="https://github.com/armgitaar/flask-example/blob/master/app.py"&gt;app.py&lt;/a&gt; file and scroll to the very bottom.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if __name__ == "__main__":
    app.run(debug=True, host="0.0.0.0", port=os.environ.get('PORT', 5000))
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Flask apps default to run on port &lt;code&gt;5000&lt;/code&gt;. However, the following allows the app to run on the server assigned port: &lt;code&gt;port=os.environ.get('PORT', 5000)&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-3-configure-entry-and-pm2-ecosystem"&gt;
  &lt;/a&gt;
  Step 3 - Configure entry and PM2 ecosystem
&lt;/h2&gt;

&lt;p&gt;On the &lt;strong&gt;Build&lt;/strong&gt; tab, set &lt;strong&gt;Entry Point&lt;/strong&gt; to &lt;code&gt;app.py&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the PM2 ecosystem, we'll need to set the interpreter to Python3 as well as remove a couple of configs that aren't compatible with Python apps.&lt;/p&gt;

&lt;p&gt;Add interpreter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"interpreter": "/usr/bin/python3",
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Remove the following lines:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; "instances": "max",
 "exec_mode": "cluster_mode",
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The ecosystem should look similar to the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
  "name": "your.domain.com",
  "script": "app.py",
  "args": "",
  "log_type": "json",
  "cwd": "/home/cleavr/your.domain.com/current",
  "interpreter": "/usr/bin/python3",
  "env": {
    "PORT": assigned port number,
    "CI": 1,
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#step-4-configure-deployment-hooks"&gt;
  &lt;/a&gt;
  Step 4 - Configure deployment hooks
&lt;/h2&gt;

&lt;p&gt;On the deployment hooks page,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disable &lt;strong&gt;Install NPM Packages&lt;/strong&gt; hook&lt;/li&gt;
&lt;li&gt;Disable &lt;strong&gt;Build Assets&lt;/strong&gt; hook&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Add a new hook to install Python dependencies:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Order the above hook to run before the activation deployment hook.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#step-5-deploy"&gt;
  &lt;/a&gt;
  Step 5 - deploy!
&lt;/h2&gt;

&lt;p&gt;Once all of the above is complete, deploy the app!&lt;/p&gt;

&lt;p&gt;You should see a page that looks like the following:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dvEijdRp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9la19sr7ngz9b9hdxr4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dvEijdRp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b9la19sr7ngz9b9hdxr4.png" alt="flask example web app" width="880" height="362"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>webdev</category>
      <category>devops</category>
    </item>
    <item>
      <title>The newest Docker VS Code extension feature you’re not using</title>
      <author>Uche Nkadi</author>
      <pubDate>Tue, 16 Nov 2021 21:54:19 +0000</pubDate>
      <link>https://dev.to/uche_nkadi/the-newest-docker-vs-code-extension-feature-youre-not-using-68n</link>
      <guid>https://dev.to/uche_nkadi/the-newest-docker-vs-code-extension-feature-youre-not-using-68n</guid>
      <description>&lt;p&gt;As Docker usage has grown, Docker Compose has become the leader in running multi-service applications locally. Unfortunately, as your application expands and more services must communicate, we’ve found authoring these Compose files can become arduous, time consuming, and mistake prone. We want to make writing Compose files with volumes, ports, and multiple services much easier. &lt;/p&gt;

&lt;p&gt;Today, we’d like to announce the Docker Compose Language Service in the &lt;a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-docker"&gt;Docker Extension for VS Code&lt;/a&gt;. That’s right, the Docker Extension will now provide Docker Compose files with IntelliSense, Tooltips, and syntax validation. Here are a few of the incoming features in our 1.18 release: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;IntelliSense tab completions (i.e. volumes, ports)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mQUP7Vwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qx20ekb3zpw0gsn5d9fn.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mQUP7Vwy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qx20ekb3zpw0gsn5d9fn.gif" alt="Gif showing tab completions" width="880" height="589"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tooltips for Compose keywords (i.e. services, image)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OPi1dPng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26ed2z6qx3it34vc54l6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OPi1dPng--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26ed2z6qx3it34vc54l6.png" alt="Gif showing a tooltip from hovering" width="880" height="471"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Right-click to format a Compose file (Shift + Alt + F) &lt;/li&gt;
&lt;li&gt;YAML Syntax Validation &lt;/li&gt;
&lt;li&gt;Hyperlinks for Docker Images &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In our 1.18 release, this feature will be on by default, so we hope you enjoy it!&lt;/p&gt;

&lt;p&gt;There are more improvements to come! Stay tuned for these features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;More tab completions&lt;/li&gt;
&lt;li&gt;Docker Compose schema validation &lt;/li&gt;
&lt;li&gt;… and much more! &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We love your feedback! If you have any comments or ideas on our Compose language support, feel free to submit an issue to the &lt;a href="https://github.com/microsoft/compose-language-service"&gt;Compose Language Service Repo&lt;/a&gt; or the &lt;a href="https://github.com/microsoft/vscode-docker/issues"&gt;VS Code Docker Repo&lt;/a&gt; for general feedback. &lt;/p&gt;

</description>
      <category>docker</category>
      <category>vscode</category>
      <category>microservices</category>
      <category>cloudnative</category>
    </item>
  </channel>
</rss>
