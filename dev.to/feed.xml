<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to load responsive images in AVIF and WebP using the HTML &lt;picture&gt; element</title>
      <author>Salma Alam-Naylor</author>
      <pubDate>Mon, 29 Nov 2021 14:50:10 +0000</pubDate>
      <link>https://dev.to/whitep4nth3r/how-to-load-responsive-images-in-avif-and-webp-using-the-html-element-2ba5</link>
      <guid>https://dev.to/whitep4nth3r/how-to-load-responsive-images-in-avif-and-webp-using-the-html-element-2ba5</guid>
      <description>&lt;p&gt;&lt;a href="https://www.contentful.com/developers/changelog/#images-api-now-supports-avif-format-conversion"&gt;We released support for the new AVIF image format&lt;/a&gt; on the Contentful Images API at our Fast Forward 2021 conference. This means you can return your images stored in Contentful in the new AVIF format via the REST API with a query parameter, or via the GraphQL API with a transform function in your query.&lt;/p&gt;

&lt;p&gt;But what is AVIF — and should you be using it right now? &lt;/p&gt;

&lt;p&gt;Now this stuff is tricky, so strap in and get ready for a wild ride! In this post, we’ll cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Image formats, compression and browser support&lt;/li&gt;
&lt;li&gt;Why image compression is important&lt;/li&gt;
&lt;li&gt;The HTML &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element&lt;/li&gt;
&lt;li&gt;Lazy loading and browser support&lt;/li&gt;
&lt;li&gt;Performance improvements gained with AVIF&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Are you ready? Let’s go.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-avif"&gt;
  &lt;/a&gt;
  What is AVIF?
&lt;/h2&gt;

&lt;p&gt;In short, AVIF is the new kid on the block when it comes to image compression. Released in 2019 by the &lt;a href="https://aomedia.org/"&gt;Alliance for Open Media&lt;/a&gt;, AVIF claims to offer &lt;a href="https://aomedia.org/av1-features/"&gt;30% better compression than current alternatives&lt;/a&gt; such as WebP. It’s optimized for the web, designed with a low computation footprint, and what’s more — it’s open source.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-is-image-compression-important"&gt;
  &lt;/a&gt;
  Why is image compression important?
&lt;/h2&gt;

&lt;p&gt;Websites in 2021 are an incredibly visual experience, full of images, animations and full-page photography. If you’re not careful, you can end up forcing visitors to your website to download hundreds of megabytes of images on a visit to your page. This risks making your website slow, inevitably causing your visitors to bounce. And we don’t want that!&lt;/p&gt;

&lt;p&gt;A fast experience on the web is crucial to providing a great user experience for visitors to your website, and as of June 2021, Google uses &lt;a href="https://web.dev/vitals/"&gt;Core Web Vitals&lt;/a&gt; scores to rank websites in search results. Core Web Vitals are currently scored on three aspects of user experience — loading, interactivity and visual stability.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#loading"&gt;
  &lt;/a&gt;
  Loading
&lt;/h3&gt;

&lt;p&gt;Loading performance is measured by the &lt;strong&gt;Largest Contentful Paint (LCP)&lt;/strong&gt;. (This has nothing to do with the Contentful CMS in this context! 🙈 ). If you’re forcing users to download megabytes of images when the page first starts to load — for example, large hero images at the top of the page — your LCP time will increase. To provide a good user experience, the LCP should happen within 2.5 seconds of when the page first starts loading.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#interactivity"&gt;
  &lt;/a&gt;
  Interactivity
&lt;/h3&gt;

&lt;p&gt;Interactivity is measured by the &lt;strong&gt;First Input Delay (FID)&lt;/strong&gt; — and measures how soon your web application responds to user input such as clicking and typing into form fields. To provide a good user experience, pages should have an FID of 100 milliseconds or less.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#visual-stability"&gt;
  &lt;/a&gt;
  Visual stability
&lt;/h3&gt;

&lt;p&gt;Visual stability is measured by &lt;strong&gt;Cumulative Layout Shift (CLS)&lt;/strong&gt;. Have you ever clicked on a part of a web page, only to find that you unexpectedly clicked on something else after a rogue element or image was finally loaded? CLS is where content pops into view once it has loaded, often pushing content down or sideways on the web page — and can be extremely frustrating! CLS makes your web page unstable — and usually, large images that take time to load are to blame. A good user experience maintains a CLS score of 0.1 or less.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-is-image-compression-important%C2%A0"&gt;
  &lt;/a&gt;
  Why is image compression important? 
&lt;/h3&gt;

&lt;p&gt;Did you know that the &lt;a href="https://worldpopulationreview.com/country-rankings/internet-speeds-by-country"&gt;average internet speed across the world in 2021&lt;/a&gt; is only 55.13Mbs? That’s only marginally faster than the speed of a slow 3G connection as simulated in Chromium Dev Tools. If you’re the nerdy type and want to look at the source code for the throttling simulations — &lt;a href="https://github.com/ChromeDevTools/devtools-frontend/blob/80c102878fd97a7a696572054007d40560dcdd21/front_end/sdk/NetworkManager.js#L261"&gt;check out this link on GitHub&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E7EhBFgf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/538bdz0cr2y9guzqj75y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E7EhBFgf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/538bdz0cr2y9guzqj75y.png" alt="A graph showing the average internet speed in the world in 2021 a surveyed by world population review dot com as 55.15Mbs." width="880" height="1044"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In "&lt;a href="https://www.smashingmagazine.com/2021/09/modern-image-formats-avif-webp/"&gt;Using Modern Image Formats: AVIF And WebP&lt;/a&gt;, Addy Osmani, engineering manager at Google Chrome, gives us this fascinating piece of data: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you’re optimizing for the Web Vitals, you might be interested to hear that images account for ~42% of the Largest Contentful Paint element for websites.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If almost 50% of your LCP is down to images — you need to deliver them to your website visitors in as few bytes as possible. The smaller the image file sizes are on your web pages, the less time it takes for visitors to your websites to download them — and this is especially important on slow internet connections and older, slower devices. &lt;/p&gt;

&lt;p&gt;Minimizing the size of your images ensures your Core Web Vitals scores are as good as possible across the board, which means you provide a better experience for your users, and ultimately means your pages rank better in Google search results. And to minimise the size of your images — you need to use the image format that yields the lightest results.&lt;/p&gt;

&lt;p&gt;So — if AVIF images currently offer the smallest image file sizes, we should all get on the AVIF train ASAP, right?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#should-you-convert-all-your-images-to-avif-right-now"&gt;
  &lt;/a&gt;
  Should you convert all your images to AVIF right now?
&lt;/h2&gt;

&lt;p&gt;WebP, there are some downsides to adopting this new format in 2021.&lt;/p&gt;

&lt;p&gt;AVIF may not be able to compress non-photographic images as well as PNG or lossless WebP. I found this to be the case in my initial experiments with the hero image on the homepage of &lt;a href="https://whitep4nth3r.com/?utm_source=dev-to"&gt;my personal website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VidqBdkR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k86h3c1ckecxqe9dtjso.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VidqBdkR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k86h3c1ckecxqe9dtjso.png" alt="A screenshot from my Twitch stream, where I am looking to the left and smiling, with VSCode open in the background." width="880" height="468"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whilst this image does contain photographic imagery of my face, most of the image is text and illustrations. As a WebP image, this image came in at 118kb, whilst as an AVIF image, the image size increased to 125kb. &lt;/p&gt;

&lt;p&gt;Secondly, at the time of writing this article, &lt;a href="https://caniuse.com/?search=avif"&gt;not all browsers currently support the AVIF image format&lt;/a&gt;. Edge, Safari and some mobile browsers are not quite there yet.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--epkvKWjN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0dwh41ux1f9xryytpjv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--epkvKWjN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0dwh41ux1f9xryytpjv.png" alt="A screenshot of can I use dot com showing that the support for AVIF is currently only available in Firefox, Chrome, Opera, Android and Samsung Internet browser." width="880" height="559"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#but-all-is-not-lost%C2%A0"&gt;
  &lt;/a&gt;
  But all is not lost! 
&lt;/h3&gt;

&lt;p&gt;There is a beautiful way we can harness the power of native HTML to serve different supported image formats to browsers using the HTML &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; tag. And what’s more, when other browsers do catch up with the AVIF train — you won’t need to change any code! &lt;/p&gt;

&lt;p&gt;Before we look at the HTML, let’s take a look at how you can convert your images stored in Contentful to the new AVIF format using the REST and GraphQL APIs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-convert-your-images-to-avif-using-the-contentful-images-api"&gt;
  &lt;/a&gt;
  How to convert your images to AVIF using the Contentful Images API
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.contentful.com/developers/docs/references/images-api/#/reference/retrieval"&gt;The Contentful Images API&lt;/a&gt; offers a variety of image transformations and manipulations as query parameters on the URL pointing to an image asset. You can change the quality of an image, resize it, add a background color, crop it, add rounded corners and more, as well as change the format of an image. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#using-query-parameters-on-an-image-url"&gt;
  &lt;/a&gt;
  Using query parameters on an image URL
&lt;/h3&gt;

&lt;p&gt;To convert your images stored in Contentful to AVIF, add fm=avif as a query parameter to your image URL. We’ll be using this technique later in the HTML example code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;https://images.ctfassets.net/{space_id}/{asset_id}/{unique_id}/{file_name}?fm=avif
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here’s an example URL for you to play with in your browser. Experiment with changing the format parameter to jpg, png, webp, gif or avif and compare the size of the image returned in the network tab! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://images.ctfassets.net/zz0ob82dbd6h/5YwujztZwQrte5WfgZf3eV/9eba3414d91e8e1e376fc96c0c8e6d63/cat-heavy-breathing-intensifies.gif?fm=avif"&gt;https://images.ctfassets.net/zz0ob82dbd6h/5YwujztZwQrte5WfgZf3eV/9eba3414d91e8e1e376fc96c0c8e6d63/cat-heavy-breathing-intensifies.gif?fm=avif&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the impatient among you, here’s how the image formats compare in terms of size:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;jpg: &lt;strong&gt;76.8kb&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;png: &lt;strong&gt;125kb&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;webp: &lt;strong&gt;167kb&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;gif: &lt;strong&gt;1.2MB&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;avif: &lt;strong&gt;25.3kb&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0QV5EM5f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94qjjr9j14whwjtq0j9f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0QV5EM5f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/94qjjr9j14whwjtq0j9f.png" alt="A stacked collage image showing the same heavy breathing cat gif in five image formats, showing that the avif image is the fewest bytes." width="830" height="1804"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AVIF is the clear winner in terms of reduction in size for this image. However, one interesting thing to note is that whereas the original animated GIF comes in at a whopping 1.2MB, converting the image to WebP reduces the image size by a massive 87% &lt;strong&gt;and preserves the animation frames&lt;/strong&gt;! I think that’s a fascinating achievement and a wonderful nugget of information! I was so excited at this discovery that I shared it on Twitter!&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__video-wrapper"&gt;
        &lt;div class="ltag__twitter-tweet__media--video-preview"&gt;
          &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yOebT15Y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/ext_tw_video_thumb/1460244031586410500/pu/img/MNnDU9pAq4HU3BP2.jpg" alt="unknown tweet media content"&gt;
          &lt;img src="/assets/play-butt.svg" class="ltag__twitter-tweet__play-butt" alt="Play butt"&gt;
        &lt;/div&gt;
        &lt;div class="ltag__twitter-tweet__video"&gt;
          
            
          
        &lt;/div&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--kqF2sPDH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1461360329619763206/FbjYze58_normal.jpg" alt="⚡️ Salma | whitep4nth3r profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        ⚡️ Salma | whitep4nth3r
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/whitep4nth3r"&gt;@whitep4nth3r&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I just discovered that WebP preserves animated frames in GIF images!&lt;br&gt;&lt;br&gt;This GIF converted to WebP reduces the file size by 87% from 1.2Mb to just 167kb. (Look at the file types in the network tab!)&lt;br&gt;&lt;br&gt;Does this mean an end to hugely lossy GIF compression or am I missing something? 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      13:54 PM - 15 Nov 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1460244790059188226" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1460244790059188226" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1460244790059188226" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h3&gt;
  &lt;a href="#using-graphql"&gt;
  &lt;/a&gt;
  Using GraphQL
&lt;/h3&gt;

&lt;p&gt;If you’re using GraphQL, you can convert your images to AVIF via a transform function on the image URL in the GraphQL query, like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight graphql"&gt;&lt;code&gt;&lt;span class="k"&gt;query&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="n"&gt;blogPostCollection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="n"&gt;image&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;AVIF&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And here’s the response returned. You’ll notice that this is the same image URL we used in the example above, demonstrating that the GraphQL API communicates directly with Contentful’s Images API to return what you need in your GraphQL response.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"data"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"blogPostCollection"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"items"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="nl"&gt;"image"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
            &lt;/span&gt;&lt;span class="nl"&gt;"url"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"https://images.ctfassets.net/zz0ob82dbd6h/5YwujztZwQrte5WfgZf3eV/9eba3414d91e8e1e376fc96c0c8e6d63/cat-heavy-breathing-intensifies.gif?fm=avif"&lt;/span&gt;&lt;span class="w"&gt;
          &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However — while you can retrieve images in AVIF format in GraphQL — &lt;strong&gt;remember that not all browsers support this image format yet&lt;/strong&gt; — so you don’t want to lock yourself down to the AVIF image format. &lt;/p&gt;

&lt;p&gt;Now let’s look at how we can take a base image URL and serve it in different ways to browsers that support different image formats using Contentful’s Images API and the native HTML &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; tag. &lt;/p&gt;

&lt;p&gt;And here is what you’ve all been waiting for!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-serve-responsive-images-with-avif-in-supported-browsers-using-the-html-tag"&gt;
  &lt;/a&gt;
  How to serve responsive images with AVIF in supported browsers using the HTML  tag
&lt;/h2&gt;

&lt;p&gt;I’ve attempted to understand &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images"&gt;the low-down on responsive images from MDN&lt;/a&gt; for many years and I must admit it was hard to grasp! &lt;a href="https://www.stefanjudis.com/snippets/a-picture-element-to-load-correctly-resized-webp-images-in-html/"&gt;This post from Stefan Judis&lt;/a&gt; provided a great help in getting to grips with this, in conjunction with MDN.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GfFDQ-R---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h2f5fzjgj4btaq7k0aoq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GfFDQ-R---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h2f5fzjgj4btaq7k0aoq.png" alt='The "one does not simply" meme that reads: "One does not simply use width:100% to create responsive images".' width="651" height="383"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Before we get into the code, we need to understand what we mean by responsive images. Responsive images are not simply about giving all images &lt;code&gt;width: 100%&lt;/code&gt; to fill the size of a container! The real power in responsive images is serving different image files of different sizes to different viewport sizes — and what’s more — screens with different &lt;strong&gt;pixel densities or display resolutions&lt;/strong&gt;. This is called &lt;strong&gt;Resolution Switching&lt;/strong&gt;, and by providing browsers with an array of image URL options by configuring a &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; element’s &lt;code&gt;srcset&lt;/code&gt;, &lt;code&gt;media&lt;/code&gt;, and &lt;code&gt;type&lt;/code&gt; attributes, the most compatible image — according to the current layout and display capabilities — will be displayed. &lt;/p&gt;

&lt;p&gt;Let’s get straight into the HTML code example, and unpack what it does.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/avif"&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=500&amp;amp;fm=avif 500w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=900&amp;amp;fm=avif 900w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=1300&amp;amp;fm=avif 1300w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=1700&amp;amp;fm=avif 1700w,
    "&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 735px) 100vw, 736px"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=500&amp;amp;fm=webp 500w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=900&amp;amp;fm=webp 900w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=1300&amp;amp;fm=webp 1300w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=1700&amp;amp;fm=webp 1700w
    "&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 735px) 100vw, 736px"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=500 500w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=900 900w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=1300 1300w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=1700 1700w
    "&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 735px) 100vw, 736px"&lt;/span&gt;
    &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://images.ctfassets.net/.../img.png"&lt;/span&gt;
    &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Some great alternative text"&lt;/span&gt;
    &lt;span class="na"&gt;loading=&lt;/span&gt;&lt;span class="s"&gt;"lazy"&lt;/span&gt;
    &lt;span class="na"&gt;decoding=&lt;/span&gt;&lt;span class="s"&gt;"async"&lt;/span&gt;
    &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"2032"&lt;/span&gt;
    &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"1076"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#html-element"&gt;
  &lt;/a&gt;
  HTML  element
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; HTML element wraps &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; elements and one &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element to offer alternative versions of an image for different displays, devices or browsers (depending on the image formats supported).&lt;/p&gt;

&lt;p&gt;The magic in the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element is that the browser chooses the most appropriate &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; element to display. If no matches are found — or the browser doesn't support the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element — the browser falls back to the URL in the &lt;code&gt;src&lt;/code&gt; attribute of the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element. The selected image is then presented in the space occupied by the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element. To prevent Cumulative Layout Shift as the image is loading, it’s important to add the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; attributes to the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element for this fallback.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="err"&gt;...&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
    &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://images.ctfassets.net/.../img.png"&lt;/span&gt;
    &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Some great alternative text"&lt;/span&gt;
    &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"2032"&lt;/span&gt;
    &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"1076"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#html-element"&gt;
  &lt;/a&gt;
  HTML  element

&lt;/h2&gt;

&lt;p&gt;The HTML &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; element provides multiple media types for the &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element to select the best-fit for the browser or device. You can also use the &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; element inside HTML &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; elements in the same way.&lt;/p&gt;

&lt;p&gt;In this example, the &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; elements are offering image formats in &lt;code&gt;type="image/avif"&lt;/code&gt; and &lt;code&gt;type="image/webp"&lt;/code&gt;, which browsers will choose to display in that order depending on support.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/avif"&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#html-srcset-and-sizes-attributes"&gt;
  &lt;/a&gt;
  HTML srcset and sizes attributes
&lt;/h3&gt;

&lt;p&gt;The HTML &lt;code&gt;srcset&lt;/code&gt; attribute is a comma-separated list of strings of image URLs and either a width descriptor — such as &lt;code&gt;300w&lt;/code&gt;, or a pixel density descriptor — such as &lt;code&gt;1.5x&lt;/code&gt;.&lt;br&gt;
&lt;br&gt;
 &lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;srcset="
      https://images.ctfassets.net/.../img.png?q=75&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;w=500&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;fm=avif 500w,
      https://images.ctfassets.net/.../img.png?q=75&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;w=900&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;fm=avif 900w,
      https://images.ctfassets.net/.../img.png?q=75&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;w=1300&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;fm=avif 1300w,
      https://images.ctfassets.net/.../img.png?q=75&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;w=1700&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;fm=avif 1700w
    "
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The HTML &lt;code&gt;sizes&lt;/code&gt; attribute is a comma-separated list of media conditions paired with sizes to describe the final rendered image width — &lt;strong&gt;in CSS pixels, not physical pixels&lt;/strong&gt; (&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio"&gt;read more about different types of pixels on MDN&lt;/a&gt;). The browser wants to know the best-fit resources to request as the page is loading. The &lt;code&gt;sizes&lt;/code&gt; attribute helps the browser to calculate the layout of the page and request the most suitable images for the layout — even before the CSS has loaded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;sizes="(max-width: 735px) 100vw, 736px"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;The &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; attributes work together in the browser to determine which image defined in the &lt;code&gt;srcset&lt;/code&gt; to request as the page is being rendered or the viewport resized.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this code example, four image URLs are provided in the &lt;code&gt;srcset&lt;/code&gt; for four different image widths: 500w, 900w, 1300w, 1700w. Notice that the &lt;code&gt;w={width}&lt;/code&gt; parameter on the image URLs is resizing the base image to match with size of the width descriptor &lt;a href="https://www.contentful.com/developers/docs/references/images-api/#/reference/resizing-&amp;amp;-cropping/change-the-resizing-behavior"&gt;using the capabilities of the Contentful Images API&lt;/a&gt;. When not using the Contentful Images API, you may wish to choose completely different image URLs at different viewport widths to serve different image sizes. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-note-on-the-magic-736-number"&gt;
  &lt;/a&gt;
  A note on the magic 736 number
&lt;/h3&gt;

&lt;p&gt;For blog posts on my personal website, the maximum width of the image container will only ever be 736px — in CSS pixels.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;sizes&lt;/code&gt; attribute states that under a viewport width of 736px, choose the most appropriate image from the &lt;code&gt;srcset&lt;/code&gt;, considering that the image will be laid out across the entire viewport width (100vw). Depending on the device, full viewport width (100vw) could translate to 300 device pixels at 1 DPR, 600 device pixels at 2 DPR and 900 device pixels at 3DPR.&lt;/p&gt;

&lt;p&gt;At a viewport width of 736px and above (remember, it’s 736 CSS pixels), the browser knows that the image widths will not exceed 736 CSS pixels as the CSS is controlling the container width. Depending on the device, 736 CSS pixels will be 1472px at 2DPR and 2208px at 3DPR. At all viewport widths, the browser will choose the closest match from the &lt;code&gt;srcset&lt;/code&gt; list. Like magic!&lt;/p&gt;

&lt;p&gt;This is an entirely personal example, and you should configure your image widths according to the layout of your web pages. You can also make further optimizations using CSS &lt;code&gt;calc()&lt;/code&gt; to account for the padding values inside the container to load even smaller images at different viewport widths.&lt;/p&gt;

&lt;p&gt;It’s also important to note that the &lt;code&gt;srcset&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt; attributes only come into effect when the &lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt; element is a direct child of a &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt;
    &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/avif"&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=500&amp;amp;fm=avif 500w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=900&amp;amp;fm=avif 900w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=1300&amp;amp;fm=avif 1300w,
      https://images.ctfassets.net/.../img.png?q=75&amp;amp;w=1700&amp;amp;fm=avif 1700w
    "&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"(max-width: 735px) 100vw, 736px"&lt;/span&gt;
  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#html-loadinglazy-and-decodingasync"&gt;
  &lt;/a&gt;
  HTML loading=”lazy” and decoding=”async”
&lt;/h2&gt;

&lt;p&gt;Lazy loading is a strategy to identify resources such as images, video and other media as non-blocking, or non-critical — and to load these only when needed, such as when a user scrolls that resource into view.&lt;/p&gt;

&lt;p&gt;To prevent visitors to web pages downloading a full page of images that aren’t visible in the viewport yet, we can use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/Performance/Lazy_loading"&gt;native HTML lazy loading&lt;/a&gt; with the &lt;code&gt;loading="lazy"&lt;/code&gt; attribute to defer image loading until a user scrolls near it — no JavaScript required! As stated before, to prevent Cumulative Layout Shift, be sure to add the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; of the base image as attributes to the &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element, which will instruct the browser to leave the correct space on the page in which to finally load your image when it scrolls into view.&lt;/p&gt;

&lt;p&gt;And in addition, the &lt;code&gt;decoding="async"&lt;/code&gt; attribute tells the browser that the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decoding"&gt;image loading can be performed asynchronously&lt;/a&gt;, so that content below the resource — such as paragraphs of text — are not blocked by the image taking a moment to load.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
  &lt;span class="err"&gt;...&lt;/span&gt;
  &lt;span class="na"&gt;loading=&lt;/span&gt;&lt;span class="s"&gt;"lazy"&lt;/span&gt;
  &lt;span class="na"&gt;decoding=&lt;/span&gt;&lt;span class="s"&gt;"async"&lt;/span&gt;
  &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"2032"&lt;/span&gt;
  &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"1076"&lt;/span&gt;
&lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It’s worth a mention that &lt;code&gt;loading="lazy"&lt;/code&gt; isn’t entirely supported across all browsers yet, but at the time of writing this article, &lt;a href="https://webkit.org/blog/12040/release-notes-for-safari-technology-preview-135/"&gt;Safari just shipped it in the newest Tech Preview&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P5u_bYt9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4dyedlufunr1su80xex.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P5u_bYt9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4dyedlufunr1su80xex.png" alt="A screenshot from can I use dot com showing that lazy loading is supported only in Safari's newest tech preview. Firefox, chrome, Opera, Android, Edge, and Samsung Internet are shown to support it." width="880" height="559"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-code-in-action"&gt;
  &lt;/a&gt;
  The code in action
&lt;/h2&gt;

&lt;p&gt;Here’s a video of the code example in action at 1 DPR. Notice the lazy-loading in action as the page is scrolled, and how the browser loads different image URLs from the &lt;code&gt;srcset&lt;/code&gt; when the browser is resized! And let me reiterate — &lt;strong&gt;no JavaScript required&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OHRc2yfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01ela0jzr7vvlsgzm2j2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OHRc2yfY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/01ela0jzr7vvlsgzm2j2.gif" alt="An animated image showing the network tab in Chromium dev tools is loading differently sizes images when the browser window is resized." width="800" height="450"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-did-serving-avif-improve-my-website"&gt;
  &lt;/a&gt;
  How did serving AVIF improve my website?
&lt;/h2&gt;

&lt;p&gt;The code example above is &lt;em&gt;a lot&lt;/em&gt; of HTML to write! But I like it for how self-documenting it is. And what’s more, I’ve bagged some significant performance improvements for my personal website while learning all about AVIF.&lt;/p&gt;

&lt;p&gt;For image-heavy blog posts, and in particular &lt;a href="https://whitep4nth3r.com/blog/personalized-image-social-sharing-with-cloudinary-nextjs"&gt;this blog post&lt;/a&gt;, converting all images from WebP to AVIF reduced the cumulative size of images on a desktop screen at 2 DPR from just over 1Mb to just 404kb. And on mobile devices at 1 DPR, it reduced the cumulative sizes of images from 430kb to 124kb. &lt;strong&gt;That’s a 60-70% reduction across device sizes!&lt;/strong&gt; Those are some huge savings! And plus, all images are lazy-loaded, which means the browser doesn’t request them until the image is near to the visible viewport.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-bottom-line"&gt;
  &lt;/a&gt;
  The bottom line
&lt;/h2&gt;

&lt;p&gt;Responsive images on the web are a tricky business to get right! But if you get them right, you provide a better user experience for your website visitors across browsers, devices and screen sizes, and you get bonus points from Google in your Core Web Vitals scores.&lt;/p&gt;

&lt;p&gt;If you’d like to see the final code example as a React component in the code for my personal blog site, &lt;a href="https://github.com/whitep4nth3r/p4nth3rblog/blob/main/components/ResponsiveImage/index.js"&gt;check it out on GitHub&lt;/a&gt;, and if you have any questions about responsive images and how you can make the best of the Contentful Images API, &lt;a href="https://twitter.com/whitep4nth3r"&gt;find me on Twitter&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>html</category>
      <category>a11y</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Day 2 - Basic CSS | #100DaysOfCode</title>
      <author>MD Jannatin Naim</author>
      <pubDate>Mon, 29 Nov 2021 14:38:37 +0000</pubDate>
      <link>https://dev.to/jannatinnaim/day-2-basic-css-100daysofcode-17d9</link>
      <guid>https://dev.to/jannatinnaim/day-2-basic-css-100daysofcode-17d9</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ciy2e2m_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8l3i5wvc03kxdl4knwq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ciy2e2m_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e8l3i5wvc03kxdl4knwq.jpg" alt="Coding Motivation Banner" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-did-i-learn-today"&gt;
  &lt;/a&gt;
  What did I learn today?
&lt;/h3&gt;

&lt;p&gt;Completed the &lt;a href="https://www.freecodecamp.org/learn/responsive-web-design#basic-css"&gt;Basic CSS&lt;/a&gt; from &lt;a href="https://freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CSS gives websites their looks. It's kinda like makeup but on steroids. I've only scratched the surface of it and I know there's so much to learn about CSS.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-problems-did-i-face"&gt;
  &lt;/a&gt;
  What problems did I face?
&lt;/h3&gt;

&lt;p&gt;I didn't face any problems today either. I'm somewhat familiar with CSS which helped me get through the basics of it. Although, this might change very soon.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-do-i-want-to-do-tomorrow"&gt;
  &lt;/a&gt;
  What do I want to do tomorrow?
&lt;/h3&gt;

&lt;p&gt;Tomorrow I take on the &lt;a href="https://www.freecodecamp.org/learn/responsive-web-design#applied-visual-design"&gt;Applied Design&lt;/a&gt; course. This one seems kinda challenging and probably is. Excited for it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-was-the-experience-so-far"&gt;
  &lt;/a&gt;
  How was the experience so far?
&lt;/h3&gt;

&lt;p&gt;So far so good. I got the basics of HTML and CSS and now comes their practical uses. So, hoping for the best.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#useful-links"&gt;
  &lt;/a&gt;
  Useful Links
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://freecodecamp.org/"&gt;Free Code Camp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/JannatinNaim/"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>100daysofcode</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Memory Management in Javascript</title>
      <author>Dylan Oh</author>
      <pubDate>Mon, 29 Nov 2021 14:26:49 +0000</pubDate>
      <link>https://dev.to/ohdylan/memory-management-in-javascript-4aod</link>
      <guid>https://dev.to/ohdylan/memory-management-in-javascript-4aod</guid>
      <description>&lt;p&gt;Javascript is a high level language that has GC (garbage collections) being done by the modern browsers (Javascript engines). This gives Javascript developers an impression that neither they need to know what is happening behind the scene, nor doing something to improve the memory management of their Javascript app. One of the reasons that lower level languages such as C language are faster and more efficient is because we can control the GC manually, therefore they are more optimised and efficient in memory management.&lt;/p&gt;

&lt;p&gt;There are three main parts of Javascript memory management consists of:&lt;/p&gt;

&lt;p&gt;1) When we assign a value to a variable, it will automatically allocate an available memory piece to store the value and with reference linked to this variable.&lt;/p&gt;

&lt;p&gt;2) This variable is then used in the script.&lt;/p&gt;

&lt;p&gt;3) When variable is not in used anymore (or the reference was removed), the memory in heaps will automatically be freed to prevent memory leaks.&lt;/p&gt;

&lt;p&gt;Javascript is using Mark and Sweep algorithm for memory management as the points above. Basically, it will mark those memory reference that are in used by the script, and sweep the rest off.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;apple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fruits&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FoIa8Llq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3t4bwe1kuvokbcc7vmzw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FoIa8Llq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3t4bwe1kuvokbcc7vmzw.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;apple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;red&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;category&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fruits&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;apple&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--E3TqAgXS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yla9jp1b3eh68xf7ahqv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--E3TqAgXS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yla9jp1b3eh68xf7ahqv.png" alt="Image description" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There might be cases where garbage collection is not able to free up those unused memory and causes memory leaks. We as a Javascript developer, could do something to try preventing them. Three of the  most commonly seen causes of memory leaks are:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1) Event Listeners&lt;/strong&gt;&lt;br&gt;
Event listeners will automatically be removed when the DOM element is detached from the DOM tree and with no more reference to it in Javascript. However, older browser such as IE will not be able to handle this properly. Besides, we should also plan the usage of our event listeners carefully because they are not in used most of the time until events are triggered, and they take up memory when those DOM elements are active.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2) Global Variables&lt;/strong&gt;&lt;br&gt;
There is always a Global Object in Javascript, for example the 'window' object in browser and the 'global' object in Node.js. We should try to avoid using global variables as they will always exist when the global execution context is still in the stacks. This global execution context is created before any code is executed and therefore these global variables will always be attached and not being garbage collected. Again, planning is important. Try to use local variables defined with 'let' and 'const' (not 'var', if we declare with 'var', it will be part of the Global Object) within the blocked scope, for example in functions. The local variables in functions are automatically cleared off when the function call is popped off from the stack. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3) Things that continuously running in the background&lt;/strong&gt;&lt;br&gt;
We should also be careful when we use functions such as setInterval(). When we use a variable in the callback function, this variable will always be attached and not getting cleared off.&lt;/p&gt;

&lt;p&gt;Conclusion: Planning before executing, even the logic of assiging variables. This will help improving the performance of your app especially when it scales up.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>performance</category>
    </item>
    <item>
      <title>Legacy: alarming symptoms and problems</title>
      <author>Catherine Galkina</author>
      <pubDate>Mon, 29 Nov 2021 14:21:08 +0000</pubDate>
      <link>https://dev.to/typeable/legacy-alarming-symptoms-and-problems-5820</link>
      <guid>https://dev.to/typeable/legacy-alarming-symptoms-and-problems-5820</guid>
      <description>&lt;p&gt;Author: Victoriia Zaripova&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;The purpose of this post is to give non-IT specialists a basic insight into the hazards of obsolete computer systems and code, and the way they may harm the business.&lt;/p&gt;

&lt;p&gt;You might have heard the word &lt;strong&gt;"legacy"&lt;/strong&gt; – usually with a negative connotation – from the technical staff. This term is used to denote the methods, technologies, and computer systems or application software that are declared to be obsolete due to some reason. However, does this legacy always have negative implications for the business, is it mandatory to get rid of it and how can you understand that it really creates problems?&lt;/p&gt;

&lt;p&gt;As a rule, the developers, analysts, testers, and support staff are those who face the legacy issues most often, which is evidenced by the broad experience of our own team. For end-users, these issues usually remain under the bonnet, and for CEOs they are concealed behind report figures without showing any logic behind them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zeKURd85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zeKURd85--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy1.jpg" alt="Having legacy code is like driving a fancy-looking car with dieing engine" width="880" height="715"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically, the situation, on the whole, reminds of the permanent tuning of outside appearance and interior in a car where the engine is at its last gasp but the passengers suspect nothing. Sooner or later, this automotive marvel is bound to die somewhere between point A and point B, but until that time the car will make a positive impression, especially if the passenger compartment is extremely comfortable and the suspension – or, speaking straight out, the frontline – allows driving over potholes almost smoothly.&lt;/p&gt;

&lt;p&gt;However, there is also no point in replacing your tried and tested tractor with a trendy smart right on the spot. Everything depends on the objectives and current state of the issue&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-can-you-understand-that-legacy-is-a-hindrance"&gt;
  &lt;/a&gt;
  How can you understand that legacy is a hindrance?
&lt;/h2&gt;

&lt;p&gt;Here is the list of &lt;strong&gt;alarming symptoms and issues&lt;/strong&gt; you can notice even without being a professional:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lack-of-welldefined-and-clear-documentation-for-the-supported-business-processes"&gt;
  &lt;/a&gt;
  Lack of well-defined and clear documentation for the supported business processes
&lt;/h3&gt;

&lt;p&gt;Perhaps, now the documentation seems to be of no importance since each of your employees is a real pro who can explain the entire business process from A to Z at any moment and knows the information system they are using inside out. However, the real-life experience usually shows that this is far from being the case. Moreover, even the terms used by the personnel in different departments differ significantly. The most basic example is the attempt to build the business process for supply agreements approval. Lawyers treat the term “agreement” quite differently from accountants, and both departments focus on entirely different stages of the agreement approval.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qMJ12IZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy2.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qMJ12IZd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy2.jpeg" alt="Well-organised BPM is important" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Today, businesses are more willing to recognize the value of transparent and well-organized business processes and you’ll have little difficulty in finding a post on the advantages of this approach. Here is an example: &lt;a href="https://kissflow.com/workflow/bpm/benefits-of-business-process-management-bpm/"&gt;Benefits of BPM | 11 Massive Advantages of Business Process Management&lt;/a&gt;. Besides, this article is also notable for the studies it’s based on, in particular, the &lt;a href="https://www.horsesforsources.com/digital-workforce-to-shine_041820"&gt;study&lt;/a&gt; of 2020 stating that the outbreak of COVID made businesses invest more in the business process automation and altered their assessment of how important it is to change the obsolete processes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rigidity-in-improvements"&gt;
  &lt;/a&gt;
  Rigidity in improvements
&lt;/h3&gt;

&lt;p&gt;Due to some reasons you are not able to integrate easily and quickly with the leading services, timely scale up or flexibly modify the software and, consequently, always miss the boat of market opportunities.&lt;/p&gt;

&lt;p&gt;Just believe, this is not a chain of tragic accidents, but a disturbing symptom.&lt;/p&gt;

&lt;p&gt;This symptom is especially clearly seen in governmental institutions where rigidity is embedded in the work format, and where all changes require long-term approval. For instance, excess expenses of the US government for the IT infrastructure in 2019 (over 70 billion dollars) triggered the internal &lt;a href="https://www.gao.gov/products/gao-19-471#summary"&gt;investigation&lt;/a&gt; showing that obsolete software is the key issue.&lt;/p&gt;

&lt;p&gt;Nevertheless, commercial companies whose way of operation implies flexibility and openness to new technologies also suffer from the legacy. Airline companies, banks, insurance companies, and retailers sooner or later turn out to be unable to overcome the rigidity of obsolete software. As a result, their operation becomes unstable, they are not able to bring new products and services to market or even stably support the existing ones. For example, in August 2016 Delta Air Lines faced an unexpected failure of the booking, check-in and boarding systems which always seemed to be reliable, which resulted in an hours-long downtime and cancellation of more than 2000 flights. This and other cases are described in the post &lt;a href="https://www.ft.com/content/5bf9de84-d665-11e6-944b-e7eb37a6aa8e"&gt;"Legacy systems are problems for boardrooms not computer geeks"&lt;/a&gt;, &lt;em&gt;Financial Times, Jan. 31, 2017&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pUeL7HQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy3.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pUeL7HQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy3.jpeg" alt="Over 2000 flights have once been cancelled bacuase of obsolete software" width="880" height="608"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#low-spirits-in-the-it-team-and-loss-of-users-loyalty"&gt;
  &lt;/a&gt;
  Low spirits in the IT team and loss of users’ loyalty
&lt;/h3&gt;

&lt;p&gt;One would think that the legacy cannot affect the team morale.&lt;/p&gt;

&lt;p&gt;There is no secret, as any modification of legacy systems resembles a patch on the A-bomb – most probably it won’t go off but you wouldn’t like to touch it again if you can help it. Specialists in obsolete languages and technologies don’t come cheap – one has only to think about the &lt;a href="https://en.wikipedia.org/wiki/Year_2000_problem"&gt;Y2K problem&lt;/a&gt;. Novices, on the other hand, try to patch the old environment with something new, so with time, all this becomes a monstrous zoo of technologies where not every specialist would dare to plunge. As the result, the users complain more and more about the problems and the product development is hindered.&lt;/p&gt;

&lt;p&gt;Moreover, the personnel are more likely to leave as they’ll be demotivated and not willing to dig through the problems of obsolete monstrous code with documentation missing or passed over as verbal folklore.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6trPyMpC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6trPyMpC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://typeable.io/images/legacy4.jpg" alt="Dealing with legacy code is discouraging for the developers" width="650" height="631"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Of course, no one is indispensable, but you should remember that selection and adaptation of a new staff member come at a price and the more complex and intricate the project is, the more time it will take the new employee to become up to speed (while being paid for work with the old code!). Meanwhile, the rest of the team will have to solve business-critical problems.&lt;/p&gt;

&lt;p&gt;And now imagine that dramatic market changes (and they’ve always been dramatic recently) require an immediate response. It’s not necessary to imagine for yourself, you can just read what situation the businesses are facing today: &lt;a href="https://www.accenture.com/us-en/about/company/coronavirus-business-economic-impact"&gt;The coronavirus (COVID-19): business impact&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#standard-solutions"&gt;
  &lt;/a&gt;
  Standard solutions
&lt;/h2&gt;

&lt;p&gt;Thus, we’ve found out that legacy is not just a problem for the IT department but also a potential threat to the company stability and growth. Let’s consider standard solutions for this situation:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;em&gt;Ignore&lt;/em&gt; – this path can be costly if you already see the problems listed above but it can be optimal in some cases. In the long run, if the business pathway is unchangeable, it’s better to rely on the trusted comrade-in-arms with whom you went through fire and water;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Replace it with completely new software&lt;/em&gt; – sometimes this path is the only possible solution because the legacy, like a disease, can infect the environment very quickly.&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Replace gradually/component-wise&lt;/em&gt; – this way is usually the revolution from below, when the IT department systematically performs refactoring of the home system, but it usually requires almost boundless tenacity and consistency;&lt;/li&gt;
&lt;li&gt;
&lt;em&gt;Reengineering of business processes and the software&lt;/em&gt; – this path is perhaps the most radical, practical, and effective but it’s labour-intensive and needs the deliberate commitment of the management. &lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;As you can see, legacy can do harm to the business, not only to the programmers’ nerves. You can deal with the legacy in different ways, and different ways will work for specific cases.&lt;br&gt;
In our next post, we’ll describe in more detail when and what way should be selected and will also tell how technical tools can help you to work with the legacy.&lt;/p&gt;

</description>
      <category>management</category>
      <category>legacy</category>
      <category>development</category>
    </item>
    <item>
      <title>Why Not to Become a Data Engineer</title>
      <author>SeattleDataGuy</author>
      <pubDate>Mon, 29 Nov 2021 14:16:24 +0000</pubDate>
      <link>https://dev.to/seattledataguy/why-not-to-become-a-data-engineer-44ke</link>
      <guid>https://dev.to/seattledataguy/why-not-to-become-a-data-engineer-44ke</guid>
      <description>&lt;p&gt;As companies struggle to manage their massive and complex data sets, the necessity for data engineers has become more apparent.&lt;/p&gt;

&lt;p&gt;Data engineering became the fastest-growing single job in 2019 with &lt;a href="https://seattledataguy.substack.com/p/are-companies-hiring-fewer-data-scientists"&gt;50 percent year-on-year growth&lt;/a&gt;, and there's little reason to believe demand for data engineers will slow soon. As with all careers, though, there are pros and cons to data engineering. Here's what you need to know about this up-and-coming job field and some of the reasons you may or may not want to pursue it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-data-engineer"&gt;
  &lt;/a&gt;
  What Is a Data Engineer?
&lt;/h2&gt;

&lt;p&gt;Data engineers move, remodel, and manage data sets from 10s if not 100s of internal company applications so analysts and data scientists don't need to spend their time constantly pulling data sets.&lt;/p&gt;

&lt;p&gt;They may also create a core layer of data that lets different data sources connect to it to get more information or context. Data engineers spend their time developing data pipelines, managing data warehouses and maintaining all the various infrastructure components they develop along the way.&lt;/p&gt;

&lt;p&gt;These specialists are usually the first people to handle data. They process the data so it's useful for everyone, not just the systems that store it.&lt;/p&gt;

&lt;p&gt;There are obvious reasons to become a data engineer --- like a high salary and numerous opportunities due to limited competition within the job market --- but we're not focusing on those today. Instead, let's ask the question, why not to become a data engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-skills-does-a-data-engineer-need"&gt;
  &lt;/a&gt;
  What Skills Does a Data Engineer Need?
&lt;/h2&gt;

&lt;p&gt;To assist you as a new data engineer, I have created a &lt;a href="https://www.youtube.com/watch?v=LgSHaOvNodA"&gt;skill set pyramid&lt;/a&gt; that can be thought of as a hierarchy of skill set needs. This will help you focus on the skills you should learn first, allowing you to build a solid foundation as you move on to more specific skills. Just remember, the way you learn each step of the pyramid does not need to be overly rigid or stay in a strict order. You can layer each step, helping you progress as you learn. Let’s get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reasons-not-to-become-a-data-engineer"&gt;
  &lt;/a&gt;
  Reasons Not to Become a Data Engineer
&lt;/h2&gt;

&lt;p&gt;Despite being an in-demand career that promises high earnings and job security, becoming a data engineer isn't for everyone. As with most professions, it's important to consider your own skills, talents, and personality before choosing a career in data engineering. Here are some of the reasons you may not want to become a data engineer.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#youre-letting-money-drive-your-career-choice"&gt;
  &lt;/a&gt;
  You're Letting Money Drive Your Career Choice
&lt;/h2&gt;

&lt;p&gt;While money is certainly important, it shouldn't be the driving force behind your career choice. Assuming you're planning to work in the tech field anyway, it's better to &lt;a href="https://www.youtube.com/watch?v=MjuQIdSwa3w"&gt;choose a role you will genuinely enjoy&lt;/a&gt;, even if the earnings could be a bit lower. A difference of $5,000 or even $10,000 in earnings won't drastically impact the lifestyle of a highly paid tech worker, especially once taxes are taken into account. The level of enjoyment you derive from your work, on the other hand, will affect your overall happiness and satisfaction in your professional life.&lt;/p&gt;

&lt;p&gt;The average data engineer earns &lt;a href="https://www.payscale.com/research/US/Job=Data_Engineer/Salary"&gt;$92,650 per year&lt;/a&gt;, which is significantly above the &lt;a href="https://www.jobted.com/salary"&gt;overall US average of $53,490&lt;/a&gt;. The financial benefits of becoming a data engineer, however, become much less clear when compared to other jobs in the tech field. The average software engineer, for example, can expect to make &lt;a href="https://www.payscale.com/research/US/Job=Software_Engineer/Salary"&gt;about $87,690&lt;/a&gt;. As you can see, the difference between a software engineer's salary and a data engineer's salary is fairly negligible. If software engineering would be a more fulfilling job for you, the slightly higher average salary isn't worth going into data engineering.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-dont-enjoy-the-engineering-mindset"&gt;
  &lt;/a&gt;
  You Don't Enjoy the Engineering Mindset
&lt;/h2&gt;

&lt;p&gt;Data engineering requires you to adopt and deploy an engineering mindset, which some people can find rather constrictive. Because data engineers often need to create pieces of infrastructure that other engineers can maintain in the future, they must &lt;a href="https://www.youtube.com/watch?v=qJWZbZ5NNJ8&amp;amp;t=102s"&gt;work within a strict set of rules and standards&lt;/a&gt;. These rules are extremely important but can also seem burdensome to those who prefer more creative freedom in their projects.&lt;/p&gt;

&lt;p&gt;This isn't to say, of course, that there aren't creative aspects to the engineering mindset. High-level problem solving, for instance, often requires engineers to develop creative solutions. Likewise, engineers use creative problem-solving skills to &lt;a href="https://www.engineeringpassion.com/developing-the-engineering-mindset/"&gt;continuously improve&lt;/a&gt; their projects. In order to be a successful data engineer, you'll need to be able to balance your creative impulses with the rigorous mindset of an engineering professional.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-arent-flexible-enough"&gt;
  &lt;/a&gt;
  You Aren't Flexible Enough
&lt;/h2&gt;

&lt;p&gt;One of the most interesting aspects of being a data engineer is the flexibility and lack of definition for the role. Because of its &lt;a href="https://www.youtube.com/watch?v=qJWZbZ5NNJ8&amp;amp;t=300s"&gt;highly interdisciplinary nature&lt;/a&gt;, data engineering combines elements of data analysis, programming, modeling, machine learning, and many other specific skills. Becoming a professional data engineer requires you to flexibly adapt and deploy these various skills as needed for the specific project you're working on.&lt;/p&gt;

&lt;p&gt;The downside of this interdisciplinary approach to data engineering is that it requires more flexibility than most other tech jobs. In your data engineering career, you may take on drastically different roles at different companies while maintaining the same job title. If you prefer to have a well-defined, set role, you likely won't enjoy the somewhat chaotic world of data engineering.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-dont-enjoy-continuous-learning"&gt;
  &lt;/a&gt;
  You Don't Enjoy Continuous Learning
&lt;/h2&gt;

&lt;p&gt;A final reason you may not want to become a data engineer is that you don't enjoy the process of continuous learning. Technologies are constantly shifting and evolving, requiring data engineers to update their skills on an ongoing basis. The&lt;a href="https://www.theseattledataguy.com/what-is-snowflakedb-and-why-you-should-use-it-for-your-cloud-data-warehouse/#page-content"&gt; cloud data warehouse tool Snowflake&lt;/a&gt;, for example, has seen &lt;a href="https://www.morningstar.com/articles/1020679/snowflake-shows-substantial-growth"&gt;substantial growth over the last 10 years&lt;/a&gt; as companies have embraced cloud computing. As trends like this emerge, data scientists must learn to use new tools and technologies to stay at the cutting edge.&lt;/p&gt;

&lt;p&gt;If one of your career goals is to eventually stop learning and rest on your laurels, data engineering won't be a good fit for you. Indeed, this is &lt;a href="https://www.youtube.com/watch?v=qJWZbZ5NNJ8&amp;amp;t=448s"&gt;true of almost all roles&lt;/a&gt; in the tech industry. Continuous learning is crucial for staying on top of trends and technologies, and even the most seasoned experts must pursue ongoing education to remain relevant. Failure to stay on top of new developments practically guarantees that your skills will eventually become outdated. While you might be able to work with older technologies at a handful of companies, your career options will narrow significantly when you stop updating your skills.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion-know-yourself"&gt;
  &lt;/a&gt;
  Conclusion: Know Yourself
&lt;/h2&gt;

&lt;p&gt;As you can see, knowing yourself and your preferences is essential to deciding whether a career in data engineering is right for you. In addition to knowing what you like to do in terms of specific tasks and working conditions, it's also important to consider your own personality. Data engineering is a suitable role for people who prefer to &lt;a href="https://www.youtube.com/watch?v=qJWZbZ5NNJ8&amp;amp;t=639s"&gt;work in the background&lt;/a&gt; within a company, rather than directly driving conversations with management using data insights. If you prefer that more extroverted side of data, though, you may enjoy a role as a data scientist.&lt;/p&gt;

&lt;p&gt;Overall, becoming a data engineer is a great career choice for people who love detail, following engineering guidelines, and building pipelines that allow raw data to be turned into actionable insights. As mentioned earlier, a career in data engineering also offers excellent earning potential and strong job security. With that said, the job isn't for everyone. If some of the reasons detailed above seem to describe you, it may be a good idea to give data engineering a second thought and explore other tech careers that could fit you better.&lt;/p&gt;

&lt;p&gt;If you want to read/watch more about data engineering, then check out the links below:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=uEPCxBaRf6A"&gt;Data Engineer Vs Analytics Engineer Vs Analyst&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.theseattledataguy.com/why-migrate-to-the-modern-data-stack-and-where-to-start/"&gt;Why Migrate To The Modern Data Stack And Where To Start&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://youtube.com/watch?v=s40MptE20Tc&amp;amp;t=1s"&gt;5 Great Data Engineering Tools For 2021 -- My Favorite Data Engineering Tools&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=kSt9NV-qZkc&amp;amp;t=1s"&gt;4 SQL Tips For Data Scientists&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logitanalytics.com/what-are-the-benefits-cloud-data-warehousing-and-why-you-should-migrate/"&gt;What Are The Benefits Of Cloud Data Warehousing And Why You Should Migrate&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
      <category>datascience</category>
      <category>career</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Auto Rename Tag</title>
      <author>LarrocaX</author>
      <pubDate>Mon, 29 Nov 2021 14:08:15 +0000</pubDate>
      <link>https://dev.to/larrocax/auto-rename-tag-1b9e</link>
      <guid>https://dev.to/larrocax/auto-rename-tag-1b9e</guid>
      <description>&lt;p&gt;`&lt;/p&gt;

&lt;p&gt;`Auto Rename Tag is an extension created for html that changes the ending of tag automatically only when you change the start of it&lt;br&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag"&gt;AUTO RENAME TAG&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>productivity</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Why GraphQL IDEs on the market are not what you want</title>
      <author>Dalibor Kundrat</author>
      <pubDate>Mon, 29 Nov 2021 14:07:16 +0000</pubDate>
      <link>https://dev.to/damikun/why-graphql-ides-on-the-market-are-not-what-you-want-5179</link>
      <guid>https://dev.to/damikun/why-graphql-ides-on-the-market-are-not-what-you-want-5179</guid>
      <description>&lt;p&gt;😕 This will not be an educational article, but only a murmur about the state of the market.&lt;/p&gt;

&lt;p&gt;There are a few GraphQL IDEs on the market today that support various features, but &lt;strong&gt;I am not satisfied with any of them.&lt;/strong&gt; (True state)&lt;/p&gt;

&lt;p&gt;These tools should be our internal applications/tools and make it easier to work with GraphQL!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#todays-graphql-ides"&gt;
  &lt;/a&gt;
  Todays GraphQL IDEs
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Graphiql&lt;/code&gt; - Facebook's oldest original still looks like it's from the 90s and does not support tabs. The tool itself is great because it's stable and provides separate packages under Monorepo that are used by different tools. Let us say it's a tool used to build other tools :)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Playgorund&lt;/code&gt; - The good old playgorund was widely used. It was developed by Prisma, but then moved under Graphiql (Graphql Foundation). With that, the project was discontinued and there is nothing as simple and good anymore. Playground was just good for the old days.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Appolo Studio&lt;/code&gt; - Appolo has several products to work with, sometimes I do not even know what is deprecated and what is current (Devtools, Studio and whatever) have you tried it? No relay my taste. It's like with the Appolo client, nice to look at but then you realize there's Relay too :) But they have advanced functionality that is true!&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Altari&lt;/code&gt; - No Relay good UX experience&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Insomnia&lt;/code&gt; - I was surprised by the functionality. I like plugins a lot. It is close to the requirements I will talk about.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Firecamp&lt;/code&gt; - Another IDE, which has the possibility of bee good if they implement what they have planned. But it is not yet finished!&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;And whatever else&lt;/code&gt; - I am just not happy with them.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let me mention one other option that exists. The &lt;code&gt;Postman&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Postman as GraphQL IDE? &lt;strong&gt;Not yet.&lt;/strong&gt; But I see the possibility of it becoming a powerfool tool for GraphQL. &lt;/p&gt;

&lt;p&gt;This is something I do not understand. They have a great feature set and also support the basics of GraphQL, but they just do not care! Important features like introspection are not supported. If they would invest more time, they could become a gamechanger, but they just do not care. (Check out the PRs on Graphql features on Github).&lt;/p&gt;

&lt;p&gt;But back to the topic: if you are a business, you'll probably end up building your own tool.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-requirements"&gt;
  &lt;/a&gt;
  The requirements
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Readable UI experience and easy to work with (most current IDEs are garbage for this UX theme)&lt;/li&gt;
&lt;li&gt;Ability to store your state in the cloud / locally / on your own backend (having your own storage is a really good idea, especially if you are in the private sector)&lt;/li&gt;
&lt;li&gt;Prepare test collections, import/export work with them.&lt;/li&gt;
&lt;li&gt;Headless cli to be able to run collections in CI/CD.&lt;/li&gt;
&lt;li&gt;Voyager built in! Why not? I do not want to have multiple tools.&lt;/li&gt;
&lt;li&gt;You want to monitor your requests and view telemetry data, you want to understand your requests.&lt;/li&gt;
&lt;li&gt;Auth, SSL are standard requirements today&lt;/li&gt;
&lt;li&gt;Query optimization, maybe too much, but it works.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h2&gt;

&lt;p&gt;The company ends up developing a custom tool to get all this done, because it's really not hard to do. (Only time matters). We use &lt;code&gt;Graphiql&lt;/code&gt; as a base and everything else is just WebApp/cli programming as we know it from our daily work.&lt;/p&gt;

&lt;p&gt;Keep things under control.&lt;/p&gt;

&lt;p&gt;Goodbye and have a nice day!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>graphql</category>
      <category>api</category>
    </item>
    <item>
      <title>JavaScript News and Updates of November 2021</title>
      <author>Pavel Lazarev</author>
      <pubDate>Mon, 29 Nov 2021 14:07:10 +0000</pubDate>
      <link>https://dev.to/plazarev/javascript-news-and-updates-of-november-2021-1li6</link>
      <guid>https://dev.to/plazarev/javascript-news-and-updates-of-november-2021-1li6</guid>
      <description>&lt;p&gt;Hello everyone! Welcome to a new edition of my monthly news digest dedicated to the latest developments in JavaScript. The last month of autumn brought several exciting releases and useful info for the web community. This time, you will learn about the latest programming trends from the State of the Octoverse 2021 survey, become familiar with a new product and updates from DHTMLX, estimate changes in Angular and TypeScript, get a foretaste of new capabilities in ASP.NET Core, and find out how JS now can be used in Excel. Besides, I also prepared a pack of articles with useful guides and tips on various JavaScript issues.&lt;/p&gt;

&lt;p&gt;Let’s roll!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-tools-and-updates"&gt;
  &lt;/a&gt;
  New Tools and Updates
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#key-takeaways-from-state-of-the-octoverse-2021"&gt;
  &lt;/a&gt;
  Key Takeaways from State of the Octoverse 2021
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e0d0T2PZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txu860f63esque24d8nn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e0d0T2PZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/txu860f63esque24d8nn.jpg" alt="New survey from GitHub" width="636" height="399"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is time to explore key trends in the software development world highlighted in the latest edition of GitHub's State of the Octoverse. In 2021, this popular annual survey includes valuable insights based not only on traditional analysis of the platform’s repositories but also on responses from more than 12,000 developers. &lt;/p&gt;

&lt;p&gt;The response to a typical question on the most popular programming language remains the same during the past several years. It is JavaScript followed by Python (2nd) and Java (3-rd). Here we can also mention that TypeScript retained its position in the top 4, while PHP dropped from 3rd to 6th place compared to 2020. The survey also includes some other interesting facts. For instance, more than 16 million developers joined GitHub in 2021, increasing the total number of GitHub users to 73 million.  The productivity of the dev community is now comparable with prepandemic levels. Almost half of the interviewed developers (47%) want to have a hybrid working schedule (home +office) after the pandemic is over. Check out the &lt;a href="https://octoverse.github.com/"&gt;full report&lt;/a&gt; to get more useful information from GitHub.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#whats-new-in-angular-13"&gt;
  &lt;/a&gt;
  What’s New in Angular 13
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kdLEZZgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3cpdnng1nivszgdi0md.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kdLEZZgq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c3cpdnng1nivszgdi0md.jpg" alt="Angular 13 release" width="639" height="400"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Angular is one of the most well-known tools in the JavaScript ecosystem. Despite its complexity, this framework still remains a preferred choice for many programmers, especially for those who work on enterprise-scale apps. The Angular development team from Google continues working on the improvement of this product to keep it competitive with other popular JS frameworks.&lt;/p&gt;

&lt;p&gt;Early this month, Angular was finally updated to version 13. This major update comes with a range of useful changes and enhancements for empowering the coding capabilities of web developers. The most notable goodies of this release are the removal of the View Engine, modernized Angular Package Format (APF), simplified API for dynamic creation of components, and support for persistent build cache. Learn more about these and other novelties introduced in v13 by visiting the &lt;a href="https://blog.angular.io/angular-v13-is-now-available-cce66f7bc296"&gt;Angular blog&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#introducing-dhtmlx-kanban-board-v10"&gt;
  &lt;/a&gt;
  Introducing DHTMLX Kanban Board v1.0
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JQy7hyDG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rhhjkqihd2afqhw3fbsy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JQy7hyDG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rhhjkqihd2afqhw3fbsy.jpg" alt="DHTMLX Kanban release" width="639" height="392"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DHTMLX is well-known in the web development community for providing high-quality JavaScript libraries for various business purposes. Recently, the company has expanded the product line of JavaScript for project management with a new promising tool - &lt;a href="https://dhtmlx.com/docs/products/dhtmlxKanban/"&gt;JavaScript Kanban board&lt;/a&gt;. It is written in pure JS and CSS to cover all needs of developers in the workflow visualization. &lt;/p&gt;

&lt;p&gt;DHTMLX Kanban has an intuitive drag-and-drop interface including three main parts: toolbar, board with cards, and editor. All these elements can be easily configured and customized to meet specific project requirements. JavaScript Kanbans built with DHTMLX can be complemented with numerous useful features such as filtering &amp;amp; searching, swimlanes, setting task priority, adding attachments, tracking of time and deadlines, and much more. Numerous localization options help to adjust the Kanban interface to any location. &lt;/p&gt;

&lt;p&gt;This Kanban library is also notable for its high compatibility. It can be integrated with popular JS frameworks and any server-side technology (Go and Node.js backends are included by default). But more interestingly, developers have an opportunity to combine the Kanban component with other popular DHTMLX products, namely Gantt and Scheduler. Thus, devs get everything they need to build a multifunctional solution for project management with DHTMLX. If you are interested to learn more detailed information about DHTMLX Kanban, read the &lt;a href="https://dhtmlx.com/blog/releasing-dhtmlx-kanban-board-v-1-0/"&gt;release article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#new-net-update-boosts-aspnet-core-capabilities"&gt;
  &lt;/a&gt;
  New .NET Update Boosts ASP.NET Core Capabilities
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---EkGpWH6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlza89of0pxszymkxev7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---EkGpWH6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vlza89of0pxszymkxev7.jpg" alt="New capabilities in ASP.NET Core" width="646" height="364"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Microsoft rolled out a long-awaited major update of the .NET cross-platform development platform to version 6. This release includes multiple features and improvements for the whole .NET architecture, including ASP.NET Core. This performant web framework is a successor to ASP.NET that allows building feature-packed UIs, IoT apps, and backend services. From now on, ASP.NET Core supports many useful features such as hot reload, minimal APIs, asynchronous data streaming, null-state analysis, JS modules, and more. Moreover, single-page applications based on ASP.NET Core now have a more flexible pattern that can be utilized with other popular JS frameworks.  Find more details on new additions to ASP.NET Core in this &lt;a href="https://devblogs.microsoft.com/dotnet/announcing-asp-net-core-in-net-6/"&gt;blog post&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-is-now-available-in-excel"&gt;
  &lt;/a&gt;
  JavaScript is Now Available in Excel
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--px4UpNsS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxcgr2wcxoxyuhl580js.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--px4UpNsS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pxcgr2wcxoxyuhl580js.jpg" alt="New JS API in Excel" width="655" height="401"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Excel is probably the first thing that comes to mind when talking about software solutions for working with tabular data. At some point, almost every PC user resorts to this tool and its super handy formulas. Moreover, Excel now also supports JavaScript. This month, Microsoft released a new JavaScript API that will expand the customization capabilities of developers with Excel. It will be possible to create custom data types and related functions within Excel or extend existing ones for achieving various business goals. Learn more about this novelty in this &lt;a href="https://docs.microsoft.com/en-us/office/dev/add-ins/reference/overview/excel-add-ins-reference-overview"&gt;blog post&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#meet-minor-updates-of-dhtmlx-components"&gt;
  &lt;/a&gt;
  Meet Minor Updates of DHTMLX Components
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vT-R6psg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mitqw3rdfc7rrsfdi84.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vT-R6psg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3mitqw3rdfc7rrsfdi84.jpg" alt="Updates of DHTMLX Components" width="639" height="404"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to close the issue of convenient editing and formatting data in a web app, the new DHTMLX Spreadsheet 4.2 is exactly what you need. The most notable part of this release is the appearance of several new types of Excel functions, expanding the list of available formulas from 40 to 170. The DHTMLX development team also added support for boolean operators and a new default number format - Date. In addition, end-users now can easily regulate the size of spreadsheet rows right from the UI and adjust the positioning of text in cells with the new Vertical Align button. Want to learn more? Here is the full &lt;a href="https://dhtmlx.com/blog/dhtmlx-spreadsheet-4-2-with130-new-functions-boolean-operators-date-format-row-resizing-much/"&gt;release article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Moreover, web developers now can also take advantage of DHTMLX Vault 4.1. This JavaScript file uploader was enriched with 3 important features: inline editing, keyboard navigation, and the ability to disable file preview. This &lt;a href="https://dhtmlx.com/blog/dhtmlx-vault-4-1/"&gt;blog post&lt;/a&gt; offers more details on these features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#highlighting-typescript-45"&gt;
  &lt;/a&gt;
  Highlighting TypeScript 4.5
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c2EjHaQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pck5fg0tjr2o40gdzpet.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c2EjHaQk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pck5fg0tjr2o40gdzpet.jpg" alt="TypeScript 4.5 release" width="640" height="391"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TypeScript is justly regarded as a promising technology that may one day reach the level of JavaScript in popularity or even higher. That is why Microsoft dedicates significant efforts to unleash the full potential of this programming language. The recent TypeScript update to version 4.5 is another step in this direction. &lt;/p&gt;

&lt;p&gt;With a new utility type Awaited and modified Promise object, developers get greater opportunities for asynchronous programming. Starting from v4.5, built-in types can be updated separately from the compiler. It is also possible to use template string types as discriminants in unions and disable unused imports. Two EcmaScript proposals, namely "Ergonomic brand checks" and "Import assertions", were also implemented. It was also planned to include the ESM (ECMAScript modules) support for Node.js in this update, but it was temporarily removed due to some implementation issues. To get more details on this release, pay a visit to the &lt;a href="https://devblogs.microsoft.com/typescript/announcing-typescript-4-5/#preserve-value-imports"&gt;Microsoft blog&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#useful-tips-and-articles"&gt;
  &lt;/a&gt;
  Useful Tips and Articles
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#using-react-hooks-in-web-applications"&gt;
  &lt;/a&gt;
  Using React Hooks in Web Applications
&lt;/h3&gt;

&lt;p&gt;Introduced in v16.8, hooks has become a real game-changer for programmers who use React framework for building web applications. They give access to the state of a component and other capabilities of React without writing classes. Hooks allow writing concise, reusable, and easy to debug code. If you want to deepen your understanding of React hooks, explore their practical application, and learn how to create custom hooks, check out this useful &lt;a href="https://www.smashingmagazine.com/2021/11/useful-react-hooks/"&gt;article&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#avoiding-common-mistakes-with-javascript-promises"&gt;
  &lt;/a&gt;
  Avoiding Common Mistakes with JavaScript Promises
&lt;/h3&gt;

&lt;p&gt;Sometimes developers get carried away with using too many complex nested callbacks in their code. It may lead to a serious issue known as callback hell that makes code unmanageable. But fortunately, JavaScript has a special Promise object that helps to avoid this problem by providing an effective way for working with asynchronous operations. But when using JS promises something can also go wrong. The author of this &lt;a href="https://blog.bitsrc.io/5-common-mistakes-in-using-promises-bfcc4d62657f"&gt;article&lt;/a&gt; describes five common mistakes in utilizing JavaScript promises and how to get rid of them in your coding practice.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-implement-microservices-in-nodejs"&gt;
  &lt;/a&gt;
  How to Implement Microservices in Node.js
&lt;/h3&gt;

&lt;p&gt;Usage of microservices can be considered as an alternative to a standard monolithic approach in web application architecture. While a monolithic app comes as a single unit, solutions based on microservices are divided into multiple independent parts. The implication here is that any changes introduced in the monolithic codebase affect the whole system i.e. a new version of the product should be released. The microservice architecture does not have this problem but like any technology, it also has some drawbacks. This &lt;a href="https://frontegg.com/blog/implementing-microservices-in-nodejs"&gt;article&lt;/a&gt; offers a deeper insight into using microservices, their pros and cons, and a guide on implementing this type of architecture with Node.js.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-blockchain-with-javascript"&gt;
  &lt;/a&gt;
  Creating a Blockchain with JavaScript
&lt;/h3&gt;

&lt;p&gt;In recent years, the whole world of high technologies has been buzzing about blockchain. In essence, this innovative technology is designed for securely storing any kind of data. It became the heart of almost all cryptocurrencies. The demand for blockchain developers is skyrocketing, so you can make your first steps in this field right now. The YouTube channel Simply Explained provides a great collection of &lt;a href="https://www.youtube.com/playlist?list=PLzvRQMJ9HDiTqZmbtFisdXFxul5k0F-Q4"&gt;videos&lt;/a&gt; that explain the main operating principles of blockchains and help to build a simple version of your own blockchain with JavaScript.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dealing-with-trojan-source-attacks-in-javascript-code"&gt;
  &lt;/a&gt;
  Dealing with Trojan Source Attacks in JavaScript Code
&lt;/h3&gt;

&lt;p&gt;This month, cyber security researchers from the University of Cambridge revealed a remarkable report dedicated to a new type of source code attack and supply chain attack named Trojan Source. This technique exploits Unicode-based bidirectional control characters to inject malware into source code comments. The main issue here is that these harmful elements are very unlikely to be discovered during the code review. Thus, it is entirely possible that you can get in trouble without suspecting a thing by simply copying benign-looking code from StackOverflow or GitHub. This &lt;a href="https://snyk.io/blog/how-to-detect-mitigate-trojan-source-attacks-javascript-eslint/"&gt;article&lt;/a&gt; offers useful recommendations on how to prevent Trojan Source attacks using ESLint.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
      <category>news</category>
    </item>
    <item>
      <title>Getting your HTTP Cache-Control headers right</title>
      <author>Kevin Farrugia</author>
      <pubDate>Mon, 29 Nov 2021 14:04:12 +0000</pubDate>
      <link>https://dev.to/imkevdev/getting-your-http-cache-control-headers-right-32m9</link>
      <guid>https://dev.to/imkevdev/getting-your-http-cache-control-headers-right-32m9</guid>
      <description>&lt;p&gt;Cross-posted from &lt;a href="https://imkev.dev/cache-control"&gt;https://imkev.dev/cache-control&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Caching plays a fundamental role in performance. What's quicker than a fast request? No request. Getting your caching strategy right can make a huge difference to your users - both repeat &lt;em&gt;and&lt;/em&gt; first time.&lt;/p&gt;

&lt;p&gt;"There are only two hard things in Computer Science: cache invalidation and naming things." (&lt;a href="http://www.tbray.org/ongoing/When/200x/2005/12/23/UPI"&gt;Phil Karlton&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;25 years later, this well-known saying still holds true and while I cannot help you with the naming, I want to share what I know about caching to make it easier for you to decide on a caching strategy. Disclaimer: The scope of this article isn't to serve as a comprehensive guide to all possible caching strategies and how they work - there's already plenty of content like that around. My goal is to provide you with a reference which you could use to answer the question, "How should I cache &lt;em&gt;this&lt;/em&gt; resource?"&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-caching"&gt;
  &lt;/a&gt;
  What is caching?
&lt;/h2&gt;

&lt;p&gt;A cache is a store where you could put a resource. This could be done to avoid having to recalculate an expensive computation or to place the content closer to the user. In websites, this is dictated by the &lt;code&gt;Cache-Control&lt;/code&gt; header; which is defined in the &lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13"&gt;HTTP/1.1 specification&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;Expires&lt;/code&gt; header is no longer needed as its behavior is covered by the &lt;code&gt;Cache-Control&lt;/code&gt; header.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#private-and-shared-caches"&gt;
  &lt;/a&gt;
  Private and shared caches
&lt;/h2&gt;

&lt;p&gt;In addition to caching in your browser, if your content is behind a CDN then your &lt;code&gt;cache-control&lt;/code&gt; headers influence how the CDN caches your content on the edge. Browser cache is referred to as a &lt;em&gt;private&lt;/em&gt; cache, while a CDN cache is referred to as a &lt;em&gt;shared&lt;/em&gt; cache. The cacheability of a resource is set using the directives below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;public&lt;/code&gt; - Any cache may store the response, including a CDN.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;private&lt;/code&gt; - The response is intended for a single user and should only be stored by the browser cache.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;no-store&lt;/code&gt; - Should not be stored on any cache.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h2&gt;

&lt;p&gt;To test the different &lt;code&gt;cache-control&lt;/code&gt; headers, I have created a repository containing a simple NodeJS server. Please feel free to explore the source code on &lt;a href="https://github.com/kevinfarrugia/cache-control/"&gt;GitHub&lt;/a&gt; and run the application locally.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#static-assets"&gt;
  &lt;/a&gt;
  Static assets
&lt;/h2&gt;

&lt;p&gt;Static assets refer to files whose contents do not change and are not generated on request. This includes scripts, stylesheets, and images. As these files are generated at build time, most modern build tools can assign a unique hash to each file. This hash serves as a unique fingerprint for each version of the file and is included in the resource's URL. This could be in the form of a query string parameter (e.g. &lt;code&gt;app.js?v=c4d27698&lt;/code&gt;), or filename (e.g. &lt;code&gt;index-0e6a410d.js&lt;/code&gt;). Having a unique URL means that you can cache these assets for a very long time, even up to one year.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cache-control: max-age=31536000
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the website is redeployed and the contents of one of the source files have changed, then it will be assigned a new URL and create a new cache entry. If the files are served through a CDN, then the CDN will cache this file. Most CDNs will purge the old files on each redeployment.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Freshness - Guaranteed.&lt;/li&gt;
&lt;li&gt;Performance - First user to request the file will receive it from the origin server. Every other user will receive a cached copy.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#caching-the-html-page"&gt;
  &lt;/a&gt;
  Caching the HTML page
&lt;/h2&gt;

&lt;p&gt;One of the major headaches with caching is your HTML page. Generally speaking, your HTML page will make requests for other resources which are needed to render the page, such as CSS, images and JavaScript files. Whenever your website is redeployed, it will update the references to the static assets within the HTML document.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/style.v1.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;becomes&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"/style.v2.css"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So if the HTML document is cached, users with a cached copy will request the old stylesheet, &lt;code&gt;style.v1.css&lt;/code&gt;; which no longer exists on the origin server. So while &lt;code&gt;style.v1.css&lt;/code&gt; is likely to be cached on the user's browser because of its long expiry, it is possible that some users encounter a broken website too. If the cached resource &lt;code&gt;style.v1.css&lt;/code&gt; is removed from the cache before the cached HTML resource, the user will see a broken layout.&lt;/p&gt;

&lt;p&gt;To complicate matters, your HTML may also contain server-side rendered content retrieved from a CMS. If the content is updated on the CMS, the cached HTML is now stale.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#scenarios"&gt;
  &lt;/a&gt;
  Scenarios
&lt;/h2&gt;

&lt;p&gt;When deciding your caching strategy, it is usually a trade-off between performance and freshness. Instead of explaining the different &lt;code&gt;cache-control&lt;/code&gt; directives and their applications, I will be describing some real-life scenarios I worked with and how I would set my &lt;code&gt;cache-control&lt;/code&gt; headers for that type of website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blog"&gt;
  &lt;/a&gt;
  Blog
&lt;/h3&gt;

&lt;p&gt;If you are looking to cache your blog, the chances are that the content is not time-sensitive and you would prioritize performance over freshness. Users are more likely to go directly to the article page instead of navigating through the website. If they revisit your blog, they are likely to return when a new article is published - that is after the cache has expired. The CSS and JavaScript files probably do not change that often either.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cache-control: public, max-age=600, stale-while-revalidate=60
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The blog you're reading uses a &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;max-age&lt;/code&gt;, and &lt;code&gt;stale-while-revalidate&lt;/code&gt; combination. By applying a &lt;code&gt;max-age&lt;/code&gt; of 600 (10 minutes), you can cache the page for the duration of the user's session. If they leave the page and return within 10 minutes, it would load instantly.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;public&lt;/code&gt; directive states that the resource may be cached on both private and shared caches. Therefore if the resource has expired in the user's browser cache, it would request it from the CDN. The CDN may have the resource cached and serve it instantly. If it has expired on the CDN, then it would fetch it from the origin and update the caches.&lt;/p&gt;

&lt;p&gt;Using &lt;code&gt;stale-while-revalidate&lt;/code&gt; means that the resource can be served stale for an additional 60 seconds after it has expired while it is being revalidated.&lt;/p&gt;

&lt;p&gt;In my specific case I am able to cache the HTML file rather aggressively as I ship very little JavaScript - none of which is critical to the user experience - and the critical CSS is inlined in the HTML file. Depending on how important your subresources are to the user experience, you may want to cache for a shorter period. If your blog does not work at all without JavaScript, then you might want to reduce the &lt;code&gt;max-age&lt;/code&gt; to avoid the race condition described earlier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Freshness - Users may receive a worst-case 11-minute old response.&lt;/li&gt;
&lt;li&gt;Performance - The first user to request the resource will wait for it to be fetched from the origin. If the user returns within 11 minutes, they will receive a cached response. If they return after 11 minutes, they will be served a cached copy from the CDN. If no users visit the website for 11 minutes, the first user to visit the website will wait for the resource to be fetched from the origin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#news-website"&gt;
  &lt;/a&gt;
  News website
&lt;/h3&gt;

&lt;p&gt;A news website is updated frequently, with new articles being added to the home page and the content of some articles updated several times per day.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cache-control: public, max-age=30, stale-while-revalidate=30, stale-if-error=600
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By applying a combination of &lt;code&gt;max-age&lt;/code&gt;, &lt;code&gt;stale-while-revalidate&lt;/code&gt;, and &lt;code&gt;stale-if-error&lt;/code&gt; you can always serve content quickly while minimizing the risk of stale data. Resources will be cached on shared or private caches for 30 seconds. When the resource expires, the cache will serve the stale data for another 30 seconds. The &lt;code&gt;stale-if-error&lt;/code&gt; directive indicates that if the origin server does not respond when revalidating the resource, the cache may serve the stale data for another 10 minutes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: The &lt;code&gt;stale-if-error&lt;/code&gt; directive isn't widely &lt;a href="https://caniuse.com/mdn-http_headers_cache-control_stale-if-error"&gt;supported&lt;/a&gt; on the browser but is supported on most CDNs.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Freshness - In the worst case, the user may receive a 1-minute old response. The &lt;code&gt;max-age&lt;/code&gt; and &lt;code&gt;stale-while-revalidate&lt;/code&gt; values may be adjusted to calibrate this worst-case scenario.&lt;/li&gt;
&lt;li&gt;Performance - The first user to request the resource will wait for it to be fetched from the origin. If the same user or any other user revisits the page within 30 seconds, they would get a cached response. If they visit the page beyond 30 seconds but within 60 seconds, then they would get an instant (stale) response while the cache is revalidated. If they revisit the page beyond 60 seconds, then the resource is fetched from the CDN. If no user visits the page for 1 minute, the next user will fetch the resource from the origin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#live-event"&gt;
  &lt;/a&gt;
  Live event
&lt;/h3&gt;

&lt;p&gt;If your website is showing a live event and content is updated frequently, you want the data to be as fresh as possible. An example of a live event may be a sports match showing real-time scores or an election results page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cache-control: public, no-cache
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Setting &lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9.1"&gt;&lt;code&gt;no-cache&lt;/code&gt;&lt;/a&gt; indicates that a cache must not be used for a subsequent request without revalidating it with the origin server. This is the equivalent of &lt;code&gt;must-revalidate, max-age=0&lt;/code&gt;. Once again, setting &lt;code&gt;public&lt;/code&gt; will enable your CDN to cache the resource and avoid hitting your origin server for each user request.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Freshness - Users will always receive a fresh resource.&lt;/li&gt;
&lt;li&gt;Performance - Each request will incur a network call. If the resource has not changed, then the payload would only include the response headers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#loggedin-pages"&gt;
  &lt;/a&gt;
  Logged-in pages
&lt;/h3&gt;

&lt;p&gt;Any page or resource which is only available for a logged-in user or contains data specific to a logged-in session should not be cached.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cache-control: no-store
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Freshness - Users will always receive a fresh resource.&lt;/li&gt;
&lt;li&gt;Performance - Each request will be fetched from the origin.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;HTTP Cache-Control headers remain a cornerstone for good performance. When choosing a caching strategy, take your time to consider the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not all resources are equal.&lt;/li&gt;
&lt;li&gt;Measure the performance gains a user would benefit from if you cache a resource.&lt;/li&gt;
&lt;li&gt;Can you get away with serving stale content?&lt;/li&gt;
&lt;li&gt;Identify how likely your cached resources may become out of sync and what your users would experience in that eventuality.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#recommended-reading"&gt;
  &lt;/a&gt;
  Recommended reading
&lt;/h2&gt;

&lt;p&gt;There is a lot of content explaining how the different &lt;code&gt;cache-control&lt;/code&gt; directives work. Below are some of my favorite resources on the topic.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jakearchibald.com/2016/caching-best-practices/"&gt;Caching best practices &amp;amp; max-age gotchas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.dev/love-your-cache/"&gt;Love your cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://csswizardry.com/2019/03/cache-control-for-civilians/"&gt;Cache-Control for Civilians&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3XkU_DXcgl0"&gt;Remix Run - Introduction to HTTP Caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bfLFHp7Sbkg"&gt;CDN Caching, Static Site Generation, and Server Side Rendering&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching"&gt;HTTP caching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.cloudflare.com/cache/about/cache-control"&gt;Origin Cache Control&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jakearchibald.com/2020/multiple-versions-same-time/"&gt;Different versions of your site can be running at the same time&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@rresenden?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Ricardo Resende&lt;/a&gt; on &lt;a href=""&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

</description>
      <category>performance</category>
      <category>webdev</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>HLS Interstitials in Safari</title>
      <author>Benjamin Wallberg</author>
      <pubDate>Mon, 29 Nov 2021 14:01:51 +0000</pubDate>
      <link>https://dev.to/video/hls-interstitials-on-safari-go7</link>
      <guid>https://dev.to/video/hls-interstitials-on-safari-go7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;As mentioned in our &lt;a href="https://dev.to/video/inserting-hls-interstitials-for-an-existing-vod-library-gbi"&gt;previous post&lt;/a&gt; HLS interstitials doesn't work natively in Safari or in any other HTML5 player, but that doesn't mean that it &lt;em&gt;can't&lt;/em&gt; work.&lt;/p&gt;

&lt;p&gt;"Interstitial playback on Apple devices is accomplished using two players"(GettingStartedWithHLSInterstitials.pdf, p.3)&lt;/p&gt;

&lt;p&gt;This is a common technique used in may AVOD services today, albeit without the ads being part of the HLS manifest, the client creates two &lt;code&gt;&amp;lt;video /&amp;gt;&lt;/code&gt; elements and puts them on top of each other and simply switch between which &lt;code&gt;&amp;lt;video /&amp;gt;&lt;/code&gt; element is visible.&lt;/p&gt;

&lt;p&gt;This means that the only thing we are limited by is our ability to read the HLS interstitials from the manifest.&lt;/p&gt;

&lt;p&gt;In this post we will focus on how to achieve this in Safari and in a future post we will show how to accomplish this using the excellent hls.js library.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reading-the-manifest"&gt;
  &lt;/a&gt;
  Reading the manifest
&lt;/h2&gt;

&lt;p&gt;Since HLS interstitials are added using the existing &lt;code&gt;EXT-X-DATERANGE&lt;/code&gt; tag we can use the built-in browser APIs to read them.&lt;br&gt;
In Safari they have achieved this using the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/TextTrack"&gt;TextTrack&lt;/a&gt; interface&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// listen to the `addtrack` event to detect when a texttrack is added to the video element&lt;/span&gt;
&lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;textTracks&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;addtrack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;TrackEvent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// check if the track is of kind "metadata", this is where Safari adds any EXT-X-DATERANGE information&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;track&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;kind&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;metadata&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// by default the track is disabled, set it to "hidden" to allow it to start parsing any EXT-X-DATERANGE&lt;/span&gt;
    &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hidden&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// track.cues will now be populated with all available EXT-X-DATERANGES in the entire manifest!&lt;/span&gt;
    &lt;span class="nx"&gt;track&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cuechange&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;evt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// if this event is dispatched the `track.activeCues` property will contain the active EXT-X-DATERANGE&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The EXT-X-DATERANGEs will show up in the &lt;code&gt;cues/activeCues&lt;/code&gt; field of the metadata text track as &lt;a href="https://wicg.github.io/datacue/"&gt;DataCue&lt;/a&gt;, the specification for those cues are just in draft so they are subject to change. The relevant part for HLS interstitials is the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="err"&gt;value:&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="err"&gt;key:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"X-ASSET-LIST"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
         &lt;/span&gt;&lt;span class="err"&gt;data:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;url to X-ASSET-LIST&amp;gt;"&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="err"&gt;startTime:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
     &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that each &lt;code&gt;X-*&lt;/code&gt; attribute of the daterange will show up as separate cues, so if you want full support for HLS interstitials you need to read from multiple cues to get a complete HLS interstitial configuration.&lt;/p&gt;

&lt;p&gt;Using this technique we were able to create &lt;a href="https://poc.eyevinn.technology/hls-interstitials/index.html"&gt;this&lt;/a&gt; simple PoC demo show-casing how HLS interstitials can look today in Safari.&lt;br&gt;
The demo contains a preroll and two midrolls, one at 20s and one at 1m 40s.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#learnings"&gt;
  &lt;/a&gt;
  Learnings
&lt;/h2&gt;

&lt;p&gt;When implementing this little PoC we discovered two specific things that one needs to workaround to get this to work.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-metadata-track-becomes-disabled"&gt;
  &lt;/a&gt;
  The metadata track becomes disabled.
&lt;/h3&gt;

&lt;p&gt;When the interstitial video is playing the master video will disable the &lt;code&gt;metadata&lt;/code&gt; track, which means that we can no longer read the EXT-X-DATERANGEs from the manifest.&lt;br&gt;
Luckily the browser does dispatch the "onchange" event on the textTracks so we can force enable it if needed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#safari-reads-a-pdt-of-0-as-false"&gt;
  &lt;/a&gt;
  Safari reads a PDT of 0 as false
&lt;/h2&gt;

&lt;p&gt;If you set the PDT of the HLS to &lt;code&gt;#EXT-X-PROGRAM-DATE-TIME:1970-01-01T00:00:00.000Z&lt;/code&gt; Safari will not set the &lt;code&gt;startTime&lt;/code&gt; field of the EXT-X-DATERANGE cue correctly, it will set all &lt;code&gt;startTime&lt;/code&gt; fields to &lt;code&gt;0&lt;/code&gt;. A simple workaround if you control the HLS is to set it to 1 eg. &lt;code&gt;#EXT-X-PROGRAM-DATE-TIME:1970-01-01T00:00:00.001Z&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-eyevinn-technology"&gt;
  &lt;/a&gt;
  About Eyevinn Technology
&lt;/h2&gt;

&lt;p&gt;Eyevinn Technology is an independent consultant firm specialized in video and streaming. Independent in a way that we are not commercially tied to any platform or technology vendor.&lt;/p&gt;

&lt;p&gt;At Eyevinn, every software developer consultant has a dedicated budget reserved for open source development and contribution to the open source community. This give us room for innovation, team building and personal competence development. And also gives us as a company a way to contribute back to the open source community.&lt;/p&gt;

&lt;p&gt;Want to know more about Eyevinn and how it is to work here. Contact us at &lt;a href="mailto:work@eyevinn.se"&gt;work@eyevinn.se&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>hls</category>
      <category>video</category>
      <category>safari</category>
    </item>
    <item>
      <title>Excel Automation with Python : Latitude and Longitude</title>
      <author>Qihua Hu</author>
      <pubDate>Mon, 29 Nov 2021 13:59:56 +0000</pubDate>
      <link>https://dev.to/qihuahu/excel-automation-with-python-latitude-and-longitude-24ch</link>
      <guid>https://dev.to/qihuahu/excel-automation-with-python-latitude-and-longitude-24ch</guid>
      <description>&lt;p&gt;A few days ago, I received an excel file with geological data from my client. The file contains site ID, latitude and longitude, which looks something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d67fSHwo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umnsdt6aa1gu16hlbfli.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d67fSHwo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umnsdt6aa1gu16hlbfli.jpg" alt="excel geological data" width="671" height="441"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My client's goals are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Highlight the empty cells.&lt;/li&gt;
&lt;li&gt;Unify the longitude and latitude to 6 decimal places, and fix the errors or highlight them.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;By looking at the demo file, it may seems like a simple task, but the actual file contains over 10,000 lines of data, and my client wants it done ASAP, so I have to do it my way, with Python.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4Sj8bLQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hl4tdoom9i25239rc13.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4Sj8bLQc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2hl4tdoom9i25239rc13.gif" alt="patrick star evil smile" width="220" height="167"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setup"&gt;
  &lt;/a&gt;
  Setup
&lt;/h2&gt;

&lt;p&gt;I choose &lt;a href="https://openpyxl.readthedocs.io/en/stable/#"&gt;openpyxl&lt;/a&gt; over &lt;a href="https://www.xlwings.org/"&gt;xlwings&lt;/a&gt;. They are both great python libraries to read/write excel files. However, in my experience openpyxl is faster when dealing with large datasets, and it does not rely on the Excel program.&lt;/p&gt;

&lt;p&gt;(Note: xlwings shines when used in the right circumstances, like writing interactive program.&lt;/p&gt;

&lt;p&gt;Let's install openpyxl first.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install openpyxl
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since this is a very simple program, we will need a &lt;strong&gt;geo.py&lt;/strong&gt; for the main loop, a &lt;strong&gt;reviewer.py&lt;/strong&gt; for data validating and excel editing.the main loop, a &lt;strong&gt;reviewer.py&lt;/strong&gt; for data validating and excel editing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#read-data-into-python-geopy"&gt;
  &lt;/a&gt;
  Read data into Python (geo.py)
&lt;/h2&gt;

&lt;p&gt;First, we need to read the file's content. Open &lt;strong&gt;geo.py&lt;/strong&gt; and write the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;openpyxl&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_workbook&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;workbook&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;reviewer&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;reviewer_geo&lt;/span&gt;

&lt;span class="n"&gt;input_file_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Geo Demo.xlsx'&lt;/span&gt;
&lt;span class="n"&gt;workbook&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_workbook&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_file_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;worksheet&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;workbook&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Sheet1'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;col_latitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'B'&lt;/span&gt;
&lt;span class="n"&gt;col_longitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'C'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will load &lt;code&gt;Sheet1&lt;/code&gt; from &lt;strong&gt;Geo Demo.xlsx&lt;/strong&gt;. You can also use &lt;code&gt;worksheet = workbook[workbook.sheetnames[0]]&lt;/code&gt; to load the first sheet from &lt;strong&gt;Geo Demo.xlsx&lt;/strong&gt;, this is very useful because user may changes the default sheet name.&lt;/p&gt;

&lt;p&gt;I also declare what data is corresponding to each column, this will make our code more readable. Also, if we need to review geological data from other files, which will likely located on other columns, then we will only need to change those declarations. &lt;/p&gt;

&lt;p&gt;Next, let's loop through rows, select the cells, review them with the &lt;code&gt;review_geo&lt;/code&gt; function, and finally save a new excel file with reviewed data. Add the following line to &lt;strong&gt;geo.py&lt;/strong&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;row_start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;    &lt;span class="c1"&gt;# geo data starts at row 2
&lt;/span&gt;&lt;span class="n"&gt;row_end&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;    &lt;span class="c1"&gt;# geo data ends at row 10
&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row_start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;row_end&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;cell_site&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;worksheet&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;col_site&lt;/span&gt;&lt;span class="si"&gt;}{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;cell_latitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;worksheet&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;col_latitude&lt;/span&gt;&lt;span class="si"&gt;}{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;cell_longitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;worksheet&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;col_longitude&lt;/span&gt;&lt;span class="si"&gt;}{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;reviewer_geo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cell_latitude&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;reviewer_geo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cell_longitude&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# save the updated excel
&lt;/span&gt;&lt;span class="n"&gt;output_file_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'Geo Demo Reviewed.xlsx'&lt;/span&gt;
&lt;span class="n"&gt;workbook&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;output_file_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here I use &lt;a href="https://rich.readthedocs.io/en/stable/introduction.html"&gt;rich&lt;/a&gt; to print out the file's content in the main loop (it't not crucial to the program so I didn't show the code here).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mT6VqKwE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ms83y4wh16xvzhi78m2k.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mT6VqKwE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ms83y4wh16xvzhi78m2k.jpg" alt="rich output" width="880" height="497"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lets-review-the-data-reviewerpy"&gt;
  &lt;/a&gt;
  Let's review the data! (reviewer.py)
&lt;/h2&gt;

&lt;p&gt;After we retrieve the data from excel file, we can start to write the reviewing function.&lt;/p&gt;

&lt;p&gt;(Note: openpyxl comes with built-in validation functions, but I usually write my own validators to fit my client's needs.)&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#write-comments-to-excel"&gt;
  &lt;/a&gt;
  Write comments to excel
&lt;/h3&gt;

&lt;p&gt;First, I use &lt;a href="https://openpyxl.readthedocs.io/en/stable/comments.html"&gt;Comments&lt;/a&gt; class of openpyxl to add comment to the cells that contains wrong geo data. I also use PatternFill class of openpyxl to fill the error cells with a background, it can make users identify errors more easily.&lt;/p&gt;

&lt;p&gt;Create two functions in &lt;strong&gt;reviewer.py&lt;/strong&gt;, &lt;code&gt;write_comment&lt;/code&gt; can add red background and comment to a cell. &lt;code&gt;add_green_bg&lt;/code&gt; simply add a green background to a cell.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;openpyxl.comments&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Comment&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;openpyxl.styles&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;PatternFill&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;write_comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;comment_text&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;red_bg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PatternFill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fill_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'solid'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;start_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'FF0000'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;end_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'FF0000'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;red_bg&lt;/span&gt;
    &lt;span class="n"&gt;comment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comment_text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Python'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;comment&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;comment&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_green_bg&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;green_bg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PatternFill&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fill_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'solid'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;start_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'00FF00'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                         &lt;span class="n"&gt;end_color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'00FF00'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fill&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;green_bg&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Create a reviewer_geo function in &lt;strong&gt;reviewer.py.&lt;/strong&gt; This function identifies which value is not desired, and then write comment or add background to the containing cell. You can read the comments in following code to see how it works.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reviewer_geo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;val_geo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="n"&gt;str_geo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val_geo&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# check if cell is empty
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;val_geo&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;write_comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'This cell must be filled'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# if cell is not empty, check if cell contains float
&lt;/span&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val_geo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;write_comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'This cell must be a float number'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c1"&gt;# if cell is not empty, but contains characters other than ditits and dicimal point
&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;str_geo&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;write_comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'This cell must be a float number'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;

        &lt;span class="c1"&gt;# if cell value is a float number, check if cell contains float with 6 decimal places
&lt;/span&gt;        &lt;span class="n"&gt;len_geo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_geo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;len_geo&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;len_geo&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"{:.6f}"&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_geo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;    &lt;span class="c1"&gt;# remove extra decimal points
&lt;/span&gt;            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;write_comment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Geo data must be a float number with 6 decimal places'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h2&gt;

&lt;p&gt;Run the &lt;strong&gt;geo.py&lt;/strong&gt;, and we have the desired result in &lt;strong&gt;Geo Demo Reviewed.xlxs&lt;/strong&gt;. From my experience, with 10,000 lines of data, it could be done in few seconds!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hgihcZ7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogf84s077q7qp2bhztjn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hgihcZ7B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ogf84s077q7qp2bhztjn.png" alt="Image description" width="811" height="426"&gt;&lt;/a&gt; &lt;/p&gt;

</description>
      <category>python</category>
      <category>excel</category>
      <category>automation</category>
    </item>
    <item>
      <title>Code Snap a new way to share code</title>
      <author>LarrocaX</author>
      <pubDate>Mon, 29 Nov 2021 13:50:08 +0000</pubDate>
      <link>https://dev.to/larrocax/code-snap-a-new-way-to-share-code-gl5</link>
      <guid>https://dev.to/larrocax/code-snap-a-new-way-to-share-code-gl5</guid>
      <description>&lt;p&gt;&lt;strong&gt;Code Snap&lt;/strong&gt; is an extension for &lt;strong&gt;Visual Studio Code&lt;/strong&gt;. It lets you save screenshots of the selected code and it looks better and cleaner. It can be customized to your liking and saves the image as png to make it easier to share.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=adpyke.codesnap"&gt;CODE SNAP&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
    </item>
  </channel>
</rss>
