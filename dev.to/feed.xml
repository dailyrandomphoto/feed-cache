<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Why do I keep getting this weird error when trying to load an image?</title>
      <author>Calin Baenen</author>
      <pubDate>Wed, 26 May 2021 09:25:29 +0000</pubDate>
      <link>https://dev.to/baenencalin/why-do-i-keep-getting-this-weird-error-when-trying-to-draw-an-image-2bmg</link>
      <guid>https://dev.to/baenencalin/why-do-i-keep-getting-this-weird-error-when-trying-to-draw-an-image-2bmg</guid>
      <description>&lt;p&gt;So I'm trying to make a game in GoLang using &lt;a href="https://github.com/gen2brain/raylib-go"&gt;Raylib Go (Go bindings of a C library with the same name)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I'm using a temporary variable to test if I can load a texture (I'm only gonna show the one line, as that's the only thing that makes the program crash):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight go"&gt;&lt;code&gt;&lt;span class="k"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="n"&gt;rl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Texture2D&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LoadTexture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"./rsrc/textures/logo.png"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yes, the path "&lt;code&gt;./rsrc/textures/logo.png&lt;/code&gt;" exists (relative to the executable's default directory).&lt;br&gt;
After putting that in, I ran two commands in Command Prompt (Windows 10)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;C:\Users\Administrator\Desktop\Projects\Go\games\RuntDeale&amp;gt;go build ./rsrc/code
C:\Users\Administrator\Desktop\Projects\Go\games\RuntDeale&amp;gt;code
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;br&gt;&lt;br&gt;
After running that last command, no window appeared, and the program had seemed to have ended.&lt;br&gt;
But I got this lovely jumble of text printed to me:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;INFO: FILEIO: [./rsrc/textures/logo.png] File loaded successfully
INFO: IMAGE: [./rsrc/textures/logo.png] Data loaded successfully (76x17)
Exception 0xc0000005 0x8 0x0 0x0
PC=0x0
signal arrived during external code execution

github.com/gen2brain/raylib-go/raylib._Cfunc_LoadTexture(0x14d740b1bb0, 0x0, 0x0, 0xc000000000)
        _cgo_gotypes.go:4223 +0x54
github.com/gen2brain/raylib-go/raylib.LoadTexture(0x972c59, 0x18, 0x0, 0x0, 0x14d00000000)
        C:/Users/Administrator/go/pkg/mod/github.com/gen2brain/raylib-go@v0.0.0-20210227124741-9d258bad6516/raylib/textures.go:69 +0x95
main.main()
        C:/Users/Administrator/Desktop/Projects/Go/games/RuntDeale/rsrc/code/main.go:28 +0xa5
rax     0x700000001
rbx     0x2a527ffaf0
rcx     0xde1
rdi     0x11
rsi     0x4c
rbp     0x7
rsp     0x2a527ff978
r8      0x11
r9      0x7
r10     0x0
r11     0x246
r12     0x1
r13     0x978368
r14     0x37
r15     0xffffffffffffffff
rip     0x0
rflags  0x10246
cs      0x33
fs      0x53
gs      0x2b
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It says the file loaded successfully, but then it has some kind of error, and doesn't really make any sense.&lt;/p&gt;

&lt;p&gt;What does this mean, and how can I fix it?&lt;br&gt;
&lt;br&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
Thanks!&lt;br&gt;
Cheers!&lt;/p&gt;

</description>
      <category>go</category>
      <category>c</category>
      <category>gamedev</category>
      <category>help</category>
    </item>
    <item>
      <title>5 Reasons why we chose to transpile to SolidJS instead of React</title>
      <author>chris-czopp</author>
      <pubDate>Wed, 26 May 2021 09:02:03 +0000</pubDate>
      <link>https://dev.to/chrisczopp/5-reasons-why-we-chose-to-transpile-to-solidjs-instead-of-react-3pcl</link>
      <guid>https://dev.to/chrisczopp/5-reasons-why-we-chose-to-transpile-to-solidjs-instead-of-react-3pcl</guid>
      <description>&lt;p&gt;Choosing a relatively young framework with a limited support over Facebook's giant may seem like craziness. As a core developer at &lt;a href="https://www.glue.codes"&gt;GlueCodes Studio&lt;/a&gt;, I was the one pushing towards taking the risk. The decision has been mainly driven by &lt;a href="http://solidjs.com/"&gt;Solid's&lt;/a&gt; build-time DOM diffing flavoured with a very simple API. I really believe it's a natural replacement of Virtual DOM. I always believed that taking the compromise of re-rendering the whole tree when the app state changes just for a "developer's convenience" is a matter of time. There was &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt; on radar, but I'm rather in favour of JSX, especially because we already provide an abstraction layer for templating using HTML with our meta-framework specific directives. So, I thought it would be awesome to write UIs with this higher level of abstraction and export to more flexible JSX and if you wish, continue development out of our tool. Check out the &lt;a href="https://www.glue.codes/docs-templating-htmlDirectives.html"&gt;docs&lt;/a&gt; for more info.&lt;/p&gt;

&lt;p&gt;Here are the 5 points:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;It does DOM diffing at build-time.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It's function-first and it has a very clean API. Much of it is similar to &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It doesn't recursively call the component every time the app state changes. I mean the body of the function which returns JSX is called just once, making local state management simpler and more natural.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is primary made for JSX, but there is also HyperScript available which can be handy if you need DOM diffing at run-time. In our case, it was useful for Live Preview without compilation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A component returns a DOM element!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;💪 Bonus: It's owned by the community and the core team is very open and responsive.&lt;/p&gt;

&lt;p&gt;Links: &lt;/p&gt;

&lt;p&gt;&lt;a href="http://solidjs.com/"&gt;SolidJS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.glue.codes"&gt;GlueCodes Studio&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let me know what you think.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>solidjs</category>
      <category>react</category>
    </item>
    <item>
      <title>Display Hostname and IP address using Python</title>
      <author>Nishant Gour</author>
      <pubDate>Wed, 26 May 2021 08:49:36 +0000</pubDate>
      <link>https://dev.to/nishantgour/display-hostname-and-ip-address-using-python-5hng</link>
      <guid>https://dev.to/nishantgour/display-hostname-and-ip-address-using-python-5hng</guid>
      <description>&lt;p&gt;In this article, We are going to see how to Display the hostname and the IP address with the help of the language Python.&lt;/p&gt;

&lt;p&gt;As we all know about IP, IP (Internet Protocol) is a fundamental networking concept that provides address assignation capability in a network. &lt;/p&gt;

&lt;p&gt;How we are going to do it?.  so we will be using the socket module of python&lt;/p&gt;

&lt;p&gt;Python provides gethostname(),gethostbyname() two function.&lt;br&gt;
gethostname() retrives the standard host name for the local machine. gethostbyname() retrives host information corresponding to a host name from a host database.&lt;/p&gt;

&lt;p&gt;Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import socket
hostname = socket.gethostname()
ip_address = socket.gethostbyname(hostname)
print(f"Hostname: {hostname}")
print(f"IP Address: {ip_address}")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;let's discuss the above 5 lines of code..&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In our first line, we have imported our socket module.&lt;/li&gt;
&lt;li&gt;in second-line we are getting the hostname by socket.gethostname() method.&lt;/li&gt;
&lt;li&gt;The third line we retrives host information corresponding to a hostname from a host database.&lt;/li&gt;
&lt;li&gt;and then the last two lines are for printing them.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So this is a short and sweet article for all of you!&lt;/p&gt;

&lt;p&gt;I hope you liked it!. Let's catch up in the next articles. &lt;/p&gt;

&lt;p&gt;original published on : &lt;a href="https://codingnuts.tech/"&gt;https://codingnuts.tech/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you liked it, Please &lt;strong&gt;Support Me&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/nishantgour"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XZmDDNkD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.buymeacoffee.com/button-api/%3Ftext%3DBuy%2520me%2520a%2520coffee%26emoji%3D%26slug%3Dnishantgour%26button_colour%3DFFDD00%26font_colour%3D000000%26font_family%3DCookie%26outline_colour%3D000000%26coffee_colour%3Dffffff"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>pythonprogramming</category>
      <category>programming</category>
    </item>
    <item>
      <title>The best time to ask for a Raise</title>
      <author>Dave Sev</author>
      <pubDate>Wed, 26 May 2021 08:30:28 +0000</pubDate>
      <link>https://dev.to/dracount/the-best-time-to-ask-for-a-raise-1co</link>
      <guid>https://dev.to/dracount/the-best-time-to-ask-for-a-raise-1co</guid>
      <description>&lt;p&gt;It had been a grueling eight months of coding into the nights, stressful deadlines, continuous spec changes, bad planning and estimates and bug fixing that was almost impossible to replicate reliably... You know the drill.&lt;/p&gt;

&lt;p&gt;Then the celebrations - Champaign and a company wide barbeque.&lt;/p&gt;

&lt;p&gt;It felt good. The project, despite the delays and hiccups will bring in hundreds of thousands for the company, and the team can finally relax.&lt;/p&gt;

&lt;p&gt;"Now is my chance" I thought, "to get that raise I had been delaying asking for".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yN4KLq7W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6pdy4s5wyywsfkyxs2e.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yN4KLq7W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x6pdy4s5wyywsfkyxs2e.JPG" alt="Capture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All to be disappointed by a meagre 5% increase. I was shattered.&lt;/p&gt;

&lt;p&gt;Truth be told, this didn't happen to me exactly like this, but close.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In case you're interested...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you are looking for guidance in career development, I help IT developers create their dream jobs through self discovery, career planning and how to make the best out of your job. Contact me if you would like to discuss further.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Lets dive in.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#whats-in-it-for-me"&gt;
  &lt;/a&gt;
  What's In It For Me?
&lt;/h1&gt;

&lt;p&gt;Companies don't pay after the fact. They have one degree of loyalty - and that's to its shareholders.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J69aN9V1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rp71am945w2uzh33xdst.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J69aN9V1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rp71am945w2uzh33xdst.JPG" alt="Capture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When they hire, they spend vast amounts of money, hundreds of thousands... Why? In order to solve a problem.&lt;/p&gt;

&lt;p&gt;Once the problem is solved? You have lost your leverage.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JtuYMPdx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kojaiwr7nh2tz4hhkxd0.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JtuYMPdx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kojaiwr7nh2tz4hhkxd0.JPG" alt="Capture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#survival-of-the-fittest"&gt;
  &lt;/a&gt;
  Survival Of The Fittest
&lt;/h1&gt;

&lt;p&gt;Whether you have been working 10 years or 10 months, when the company is downsizing, you both get one months notice and one month's pay.&lt;/p&gt;

&lt;p&gt;So when should you ask for a raise?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;When the project is about to start.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is when the company has the most pain, and will pay for that pain to go away. Take advantage of the right time.&lt;/p&gt;

&lt;p&gt;Let me know if you have had similar experiences before?&lt;/p&gt;




&lt;p&gt;&lt;em&gt;In case you're interested...&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you are looking for guidance in career development, I help IT developers create their dream jobs through self discovery, career planning and how to make the best out of your job. Contact me if you would like to discuss further.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>job</category>
      <category>productivity</category>
    </item>
    <item>
      <title>I made my first app using React.</title>
      <author>jba11er32</author>
      <pubDate>Wed, 26 May 2021 08:20:18 +0000</pubDate>
      <link>https://dev.to/jba11er32/i-made-my-first-app-using-react-7hp</link>
      <guid>https://dev.to/jba11er32/i-made-my-first-app-using-react-7hp</guid>
      <description>&lt;p&gt;The mindset I had when creating this app was whether or not I was able to use it. I constantly have a problem when it comes to my fridge: too many ingredients not being used. Since quarantine has introduced many new activities to the average person, I thought it would also be something others could use as well. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3ctwWylb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5g8w3l1xpiodgodz82eh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3ctwWylb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5g8w3l1xpiodgodz82eh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The app, Clear Your Fridge, allows one to enter an ingredient into the search bar and it will return 10 recipes using that ingredient. When an ingredient is entered, each result will show an image of the recipe, other ingredients needed for the recipe as well as a link to the full recipe online. &lt;/p&gt;

&lt;p&gt;The most challenging problem I had when creating this app was not creating a infinite fetch request from the API. This would have limited me from fetching from the API and I would not be able to test my app. I learned how that could become a problem and also was able to understand the error for future apps I create. I would say that I am pretty proud of the code that I wrote. Clean code was the goal of this app. &lt;/p&gt;

&lt;p&gt;The app uses a third party API: Edamam. Unfortunately, this API is limited to only searching for recipes one ingredient at a time. I struggle with some CSS styling and want to improve on that aspect of my app. I want to include a video for each recipe or even search for recipes using multiple ingredients. I hope that I can get that working in the future.&lt;/p&gt;

&lt;p&gt;As far as using React, there are a lot of aspects and concepts that I want to familiarize myself with. This was a good introduction to test how my knowledge. I plan to improve on this app and am welcome to critiques, comments, and advice. May this app be of use to anyone who comes by it.&lt;/p&gt;

</description>
      <category>react</category>
      <category>firstpost</category>
      <category>javascript</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Top 20 Tips that will change your coding skills forever</title>
      <author>Chaitanya Prabuddha</author>
      <pubDate>Wed, 26 May 2021 08:04:44 +0000</pubDate>
      <link>https://dev.to/line/top-20-tips-that-will-change-your-coding-skills-forever-4cb1</link>
      <guid>https://dev.to/line/top-20-tips-that-will-change-your-coding-skills-forever-4cb1</guid>
      <description>&lt;p&gt;In this small article, I am going to talk about my top 20 tips that can change your coding forever. This article is a summary of all the points, &lt;em&gt;Enjoy&lt;/em&gt;-&lt;/p&gt;

&lt;p&gt;1.Break big pieces of code into small functions, which make it easy for you to improve your code quality.&lt;/p&gt;

&lt;p&gt;2.Do Not Overthink.&lt;/p&gt;

&lt;p&gt;3.Don't take stress of any problem that you were unable to fix.&lt;/p&gt;

&lt;p&gt;4.Make sure to see other people's code and let others see your code.&lt;/p&gt;

&lt;p&gt;5.If you can' solve a problem, just copy-paste with google, its the best way to solve it.&lt;/p&gt;

&lt;p&gt;6.Read documentation of languages.&lt;/p&gt;

&lt;p&gt;7.Take rest regularly, it helps your brain to focus.&lt;/p&gt;

&lt;p&gt;8.Use integration tools and automate as much as you can.&lt;/p&gt;

&lt;p&gt;9.Practice as much as you can, practice makes a man perfect.&lt;/p&gt;

&lt;p&gt;10.Don't shy for asking help.&lt;/p&gt;

&lt;p&gt;11.Be focused on what you do.&lt;/p&gt;

&lt;p&gt;12.Never choose an inefficient shortcut way to save a few minutes.&lt;/p&gt;

&lt;p&gt;13.Users are not technical people. Think about it when you develop your UI/Design.&lt;/p&gt;

&lt;p&gt;14.Log all critical parts rather than to debug it.&lt;/p&gt;

&lt;p&gt;15.Learn as much as you can, Don’t stop learning.&lt;/p&gt;

&lt;p&gt;16.Be Consistent.&lt;/p&gt;

&lt;p&gt;17.Take time to choose you IDE, try to find the best one for you.&lt;/p&gt;

&lt;p&gt;18.Try writing readable code, as you are the only one who will fix it in future.&lt;/p&gt;

&lt;p&gt;19.Don't Remember the code, just learn the logic and you are good to go.&lt;/p&gt;

&lt;p&gt;20.patience and love what you do.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;END&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;*Finally this big topic is over now, Now I would like to talk about my Newsletter -&lt;/p&gt;

&lt;p&gt;I have started a newsletter in which you will get Email twice a week directly from me. I will send you latest tech, coding &amp;amp; Other useful information. I will also be spending a one riddle each time and the first to complete the riddle will get a small gift from me*&lt;/p&gt;

&lt;p&gt;&lt;a href="https://linenewsletter.substack.com/subscribe?utm_source=menu&amp;amp;simple=true&amp;amp;next=https%3A%2F%2Flinenewsletter.substack.com%2Fp%2Fcoming-soon"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--w1fXPsb0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ys8k2zvc8jqdyk51bax0.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>programming</category>
      <category>beginners</category>
      <category>bestofdev</category>
    </item>
    <item>
      <title>How to Make Qrcode Generator using Python.</title>
      <author>MarianVelani</author>
      <pubDate>Wed, 26 May 2021 07:29:03 +0000</pubDate>
      <link>https://dev.to/marianvelani/how-to-make-qrcode-generator-using-python-23mg</link>
      <guid>https://dev.to/marianvelani/how-to-make-qrcode-generator-using-python-23mg</guid>
      <description>&lt;p&gt;Hello beautiful people,I would be sharing out on how I made a python project that generate qrcode using python.&lt;/p&gt;

&lt;p&gt;•&lt;/p&gt;
&lt;h4&gt;You can check how the&lt;a href="https://youtu.be/1ctOrCRKp_k"&gt; runs here&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;• &lt;/p&gt;
&lt;h4&gt;You can also access the&lt;a href="https://compileto.blogspot.com/2021/05/qr-code-generator-using-python.html"&gt; source code&lt;/a&gt;
&lt;/h4&gt; here

&lt;p&gt;Okay, let's get started🦸‍♂️&lt;/p&gt;

&lt;h4&gt;What is a QR Code?&lt;/h4&gt;

&lt;p&gt; A Quick Response Code or a QR Code is a two dimensional scanner tag comprising of framework of minuscule dark squares on a white foundation. Because of its capacity to store more data and quick lucidness, it acquired fame over the customary standardized identifications made out of dark bars and void areas.&lt;/p&gt;

&lt;p&gt;Python offers a QRCode bundle which makes it truly simple to carry out this usefulness. We will start by downloading the accompanying python bundles.&lt;/p&gt;

&lt;h4&gt;pyqrcode module&lt;/h4&gt;

&lt;p&gt;The pyqrcode module is a QR code generator that is simple to use and written in pure python. The module can automates most of the building process for creating QR codes. Most codes can be created using only two lines of code!&lt;/p&gt;

&lt;p&gt;Unlike other generators, all of the helpers can be controlled manually. You are free to set any or all of the properties of your QR code.&lt;/p&gt;

&lt;p&gt;QR codes can be saved as SVG, PNG (by using the pypng module), and plain text. They can also be displayed directly in most Linux terminal emulators. PIL is not used to render the image files.&lt;/p&gt;

&lt;p&gt;The pyqrcode module attempts to follow the QR code standard as closely as possible. The terminology and the encodings used in pyqrcode come directly from the standard. This module also follows the algorithm laid out in the standard.&lt;/p&gt;

&lt;p&gt;pyqrcode module is a QR code generator. The module automates most of the building process for creating QR codes. This module attempts to follow the QR code standard as closely as possible. The terminology and the encodings used in pyqrcode come directly from the standard.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install PyQRCode
from pyqrcode import QRCode
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;PIL&lt;/h4&gt;

&lt;p&gt;The Python Imaging Library adds image processing capabilities to your Python interpreter.&lt;/p&gt;

&lt;p&gt;This library provides extensive file format support, an efficient internal representation, and fairly powerful image processing capabilities.&lt;/p&gt;

&lt;p&gt;The core image library is designed for fast access to data stored in a few basic pixel formats. It should provide a solid foundation for a general image processing tool.&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install Pillow

from PIL import Image
,ImageTk
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;Tkinter&lt;/h4&gt;

&lt;p&gt;The Tkinter library is most popular and very easy to use and it comes with many widgets (these widgets helps in the creation of nice-looking GUI Applications).&lt;br&gt;
Also, Tkinter is a very light-weight module and it is helpful in creating cross-platform applications(so the same code can easily work on Windows, macOS, and Linux)&lt;br&gt;
To use all the functions of Tkinter you need to import it in your code and the command for the same is:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import Tk,Text,Button,Label,StringVar,OptionMenu,Canvas,END
from tkinter import font
from tkinter import font
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Final output:-&lt;/p&gt;

&lt;h4&gt;✈&lt;a href="https://youtu.be/1ctOrCRKp_k"&gt; output video&lt;/a&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--m8YJgu_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjijlyvgqdcsli5cdhbs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--m8YJgu_U--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjijlyvgqdcsli5cdhbs.jpg" alt="compileto.blogspot.com, qrcode generator using python"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tutorial</category>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Database Backup Scripts For MongoDB with Amazon S3</title>
      <author>Adit Modi</author>
      <pubDate>Wed, 26 May 2021 07:23:11 +0000</pubDate>
      <link>https://dev.to/cloudtech/database-backup-scripts-for-mongodb-with-amazon-s3-d08</link>
      <guid>https://dev.to/cloudtech/database-backup-scripts-for-mongodb-with-amazon-s3-d08</guid>
      <description>&lt;p&gt;This article will provide you with database backup scripts that not only allow you to create database backups, but also upload the backup dumps to Amazon S3 and automate the process daily.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#table-of%C2%A0contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;p&gt;-&amp;gt;Why we need a database backup?&lt;br&gt;
-&amp;gt;Why Amazon S3 for backup?&lt;br&gt;
-&amp;gt;What is Cron?&lt;br&gt;
-&amp;gt;What is Chmod?&lt;br&gt;
-&amp;gt;Database Backup Script for MongoDB and Dumping to Amazon S3&lt;br&gt;
-&amp;gt;Generate a shell script which will dump the MongoDB database&lt;br&gt;
-&amp;gt;Create a shell script which sync the backups with Amazon S3&lt;br&gt;
-&amp;gt;Creating the folder in Amazon S3 for the database dumps&lt;br&gt;
-&amp;gt;How to configure the AWS CLI&lt;br&gt;
-&amp;gt;How to set up AWS key &amp;amp; Secret&lt;br&gt;
-&amp;gt;How to set up Cron (to automate the process)&lt;br&gt;
-&amp;gt;Conclusion&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XmldzNlc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n03pa0bkr2iym6n9akeg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XmldzNlc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n03pa0bkr2iym6n9akeg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My Background: I am Cloud , DevOps &amp;amp; Big Data Enthusiast | 4x AWS Certified | 3x OCI Certified | 3x Azure Certified .&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-we-need-a-database%C2%A0backup"&gt;
  &lt;/a&gt;
  Why we need a database backup?
&lt;/h2&gt;

&lt;p&gt;One might think why backup is necessary for my database? The answer is simple, backup creates a copy of your physical, logical, and operational data. Which you can store at any safe place such as Amazon S3. This copy comes into use if the running database gets corrupted. Database backup can include files like control files, datafiles, and archived redo logs.&lt;br&gt;
Remove MongoDB backups from your to-do list.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-amazon-s3-for%C2%A0backup"&gt;
  &lt;/a&gt;
  Why Amazon S3 for backup?
&lt;/h2&gt;

&lt;p&gt;For this tutorial, we have chosen Amazon S3 as it is a very common choice. You can do the same thing if you would like to use another cloud storage provider. The instructions won't differ a lot as long as the cloud provider is S3-compatible.&lt;br&gt;
Below we defined some less known terms that we used in the article:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is%C2%A0cron"&gt;
  &lt;/a&gt;
  What is Cron?
&lt;/h2&gt;

&lt;p&gt;Cron is a software utility that offers time-based job scheduling. It supports Unix computer operating systems. To set up software environments, the developer uses Cron. He/she schedules commands or shell scripts so that they run at chosen times. It could be daily, once a week, or any interval as desired.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is%C2%A0chmod"&gt;
  &lt;/a&gt;
  What is Chmod?
&lt;/h2&gt;

&lt;p&gt;The chmod a short command of 'change mode' enables the admin to set rules for file handling. In other words, with the help of a "chmod" system call. An administrator can change the access permissions of file system objects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#database-backup-script-for-mongodb-and-dumping-to-amazon%C2%A0s3"&gt;
  &lt;/a&gt;
  Database Backup Script for MongoDB and Dumping to Amazon S3
&lt;/h2&gt;

&lt;p&gt;You can automate the creation of backup and storing it to Amazon S3 within a few minutes. Below bullets brief about what you are going to learn in this part of the article:&lt;br&gt;
Create a script that automates the MongoDB backup directory creation&lt;br&gt;
Upload/sync the backups with Amazon S3&lt;br&gt;
Cron will run this command every day (to back up)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#generate-a-shell-script-which-will-dump-the-mongodb%C2%A0database"&gt;
  &lt;/a&gt;
  Generate a shell script which will dump the MongoDB database
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;cd ~&lt;br&gt;
mkdir scripts&lt;br&gt;
cd scripts&lt;br&gt;
nano db_backup.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;#!/bin/bash&lt;br&gt;
DIR=&lt;/code&gt;date +%d-%m-%y&lt;code&gt;&lt;br&gt;
DEST=~/db_backups/$DIR&lt;br&gt;
mkdir $DEST&lt;br&gt;
mongodump -h localhost:27017 -d my_db_name -o $DEST&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now chmod the script to allow it to for execution&lt;br&gt;
&lt;code&gt;chmod +x ~/scripts/db_backup.sh&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-shell-script-which-sync-the-backups-with-amazon%C2%A0s3"&gt;
  &lt;/a&gt;
  Create a shell script which sync the backups with Amazon S3
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;nano db_sync.sh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Copy and paste the script below to it&lt;br&gt;
&lt;code&gt;#!/bin/bash&lt;br&gt;
/usr/local/bin/aws s3 sync ~/db_backups s3://my-bucket-name&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now chmod the script to allow it for execution&lt;br&gt;
&lt;code&gt;chmod +x ~/scripts/db_sync.sh&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-folder-in-amazon-s3-for-the-database%C2%A0dumps"&gt;
  &lt;/a&gt;
  Creating the folder in Amazon S3 for the database dumps
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;cd ~&lt;br&gt;
mkdir db_backups&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-configure-the-aws%C2%A0cli"&gt;
  &lt;/a&gt;
  How to configure the AWS CLI
&lt;/h2&gt;

&lt;p&gt;Before installing the AWS CLI you need to installpython-pi. Type the following commands:&lt;br&gt;
&lt;code&gt;apt-get update&lt;br&gt;
apt-get -y install python-pip&lt;br&gt;
curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-the-aws-cli"&gt;
  &lt;/a&gt;
  Install the AWS CLI
&lt;/h2&gt;

&lt;p&gt;Type the following command:&lt;br&gt;
&lt;code&gt;pip install awscli&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;How to set up AWS key &amp;amp; Secret&lt;br&gt;
Configuration and credential file settings&lt;br&gt;
&lt;code&gt;cd ~&lt;br&gt;
mkdir .aws&lt;br&gt;
nano ~/.aws/config&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Paste in key_id and secret_access_key as shown below&lt;br&gt;
&lt;code&gt;[default]&lt;br&gt;
aws_access_key_id=AKIAIOSFODNN7EXAMPLE&lt;br&gt;
aws_secret_access_key=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;How to set up Cron (to automate the process)&lt;br&gt;
&lt;code&gt;crontab -e&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#paste-the-below-commands-at-the-bottom-to-automate-the-process"&gt;
  &lt;/a&gt;
  Paste the below commands at the bottom to automate the process
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;0 0 * * * ~/scripts/db_backup.sh # take a backup every midnight&lt;br&gt;
0 2 * * * ~/scripts/db_sync.sh # upload the backup at 2am&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This way the backup script will run and also sync with Amazon S3 daily.&lt;br&gt;
Conclusion&lt;br&gt;
Hence, by using these scripts you can achieve 3 goals:&lt;br&gt;
Creating the database backup via a shell script&lt;br&gt;
uploading the dump to Amazon S3&lt;br&gt;
also automating this process using Cron.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3mjteM4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxw7mdjrxp7j7obqyj4p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3mjteM4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sxw7mdjrxp7j7obqyj4p.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Hope this guide helps you understand on how to use shell scripts to take daily backups of your database and push to s3 on a daily basis, feel free to contact me on LinkedIn.&lt;br&gt;
You can view my badges here.&lt;br&gt;
If you are interested in learning more about AWS then follow me on github.&lt;br&gt;
If you liked this content then do clap and share it . Thank You .&lt;/p&gt;

</description>
      <category>aws</category>
      <category>mongodb</category>
      <category>bash</category>
    </item>
    <item>
      <title>Fun tech quiz questions directly in your terminal</title>
      <author>Bobby Iliev</author>
      <pubDate>Wed, 26 May 2021 06:55:11 +0000</pubDate>
      <link>https://dev.to/bobbyiliev/fun-tech-quiz-questions-directly-in-your-terminal-19pk</link>
      <guid>https://dev.to/bobbyiliev/fun-tech-quiz-questions-directly-in-your-terminal-19pk</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YyaVQa2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/june2020/3um936quha6qp3q3o18y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YyaVQa2R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.devdojo.com/images/june2020/3um936quha6qp3q3o18y.png" alt="3um936quha6qp3q3o18y.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Quizzes are a great way to test your knowledge on a specific topic. So I decided to create a tool called &lt;a href="https://quizapi.io"&gt;the Quiz API&lt;/a&gt;! &lt;/p&gt;

&lt;p&gt;Quiz API is a simple HTTP REST API for technical quizzes including a wide variety of topics like: Linux, DevOps, Programming (PHP, JS, Python and etc.), Docker, &lt;br&gt;
Kubernetes and lots more!&lt;/p&gt;

&lt;p&gt;It is free for developers and I've just released a beta version and started adding some cool questions!&lt;/p&gt;

&lt;p&gt;As the Quiz API returns the output in a JSON format, I created a bash script that allows you to answer questions whenever you feel like directly via your terminal!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DfKidwJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.devdojo.com/images/june2020/ckb8sug0y9rs4ha6toeb.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DfKidwJw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.devdojo.com/images/june2020/ckb8sug0y9rs4ha6toeb.gif" alt="QuizAPI Demo"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;p&gt;In order to be able to use the Quiz API bash script you need to have the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An API Key for the Quiz API, you can get it totally for free &lt;a href="https://quizapi.io/register"&gt;here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Access to a bash terminal&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#download-the-quiz-bash-script"&gt;
  &lt;/a&gt;
  Download the Quiz bash script
&lt;/h2&gt;

&lt;p&gt;In order to download the bash script which would allow you to consume the QuizAPI and take questions directly via your terminal, you just need to run this command here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;wget https://quizapi.io/quiz.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Make sure to check the script before running it! This bash script is also available on git and you can check it's contents here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/QuizApi/QuizAPI-BASH/blob/master/quiz.sh"&gt;https://github.com/QuizApi/QuizAPI-BASH/blob/master/quiz.sh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Any pull requests with improvements are more than welcome!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#install-raw-jq-endraw-"&gt;
  &lt;/a&gt;
  Install &lt;code&gt;jq&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;jq&lt;/code&gt; command-line tool is is a lightweight and flexible command-line JSON processor. It is great for parsing JSON output in your terminal and it is required by the Quiz API bash script.&lt;/p&gt;

&lt;p&gt;If you try to run the script without having &lt;code&gt;jq&lt;/code&gt; installed you will get the following message:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;The jq command is required! Please install it and then try again
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you don't have &lt;code&gt;jq&lt;/code&gt; already installed, you can do that by running one of the following commands depending on your OS:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linux"&gt;
  &lt;/a&gt;
  Linux
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu/Debian:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install jq
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or if you are running the latest Ubuntu version you might have to install it with &lt;code&gt;snap&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo snap install jq
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Fedora:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo dnf install jq
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;openSUSE:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo zypper install jq
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Arch:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo pacman -S jq
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mac"&gt;
  &lt;/a&gt;
  Mac:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Homebrew:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install jq
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;MacPort
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;port install jq
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you are on a different system, follow the steps from the official documentation here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://stedolan.github.io/jq/download/"&gt;https://stedolan.github.io/jq/download/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;p&gt;Once you have your API Key and &lt;code&gt;jq&lt;/code&gt; installed you can execute the script by running the following commands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Make the script executable:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chmod +x quiz.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Execute the script:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;./quiz.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As we did not specify the API key, you will get the following output&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Usage: quiz.sh -a API_KEY [-c Category] [-d Difficulty] [-t Tags]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In order for the script to work, we need to pass our API key as an argument. One of the ways to do that is to define our API key as an environment variable:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export API_KEY=your_api_key_here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note: change the &lt;code&gt;your_api_key_here&lt;/code&gt; with your actual &lt;a href="https://quizapi.io/clientarea/settings/token"&gt;Quiz API key&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Then run the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;./quiz.sh -a ${API_KEY}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The script will make a curl request to the Quiz API and it would pars the output for you in a nice interactive cli multiple choice quiz like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; "How to dump pod logs (stdout) in Kubernetes?"
  1 ) "kubectl log my-pod"
  2 ) "kubectl pod logs my-pod"
  3 ) "kubectl logs my-pod"
  4 ) "kubectl pods logs my-pod"
Check an option (again to uncheck, ENTER when done):
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You will be able to select 1 or multiple answers and then press enter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;"How to dump pod logs (stdout) in Kubernetes?"
  1 ) "kubectl log my-pod"
  2 ) "kubectl pod logs my-pod"
  3+) "kubectl logs my-pod"
  4 ) "kubectl pods logs my-pod"
"kubectl logs my-pod" was checked
Check an option (again to uncheck, ENTER when done):

Selected was:  "kubectl logs my-pod"
Correct: is:  "kubectl logs my-pod"
Correct Answer!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#available-arguments"&gt;
  &lt;/a&gt;
  Available arguments
&lt;/h2&gt;

&lt;p&gt;The script allows you to specify different parameters so that you could get the questions that you want.&lt;/p&gt;

&lt;p&gt;The available arguments are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;-c&lt;/code&gt; - get questions only for a specific category&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-d&lt;/code&gt; - get questions only for a specific difficulty (Easy, Medium and Hard)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;-t&lt;/code&gt; - get questions for a specific topic/tag, this lets you combine multiple topics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, if you wanted to get easy Docker questions only, you could run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;./quiz.sh -a ${API_KEY} -d hard -t docker
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#contributions"&gt;
  &lt;/a&gt;
  Contributions
&lt;/h2&gt;

&lt;p&gt;We have added about 1000 questions for the beta version! But we are planning to add a lot more than that in the future.&lt;/p&gt;

&lt;p&gt;As the Quiz API is free for developers, any contributions would be greatly appreciated. If you are feeling adventurous, you could do so via this link here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://quizapi.io/contribute"&gt;https://quizapi.io/contribute&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you notice a wrong question feel free to report it as well:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://quizapi.io/contact"&gt;https://quizapi.io/contact&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Quizzes can be a fun way to test and improve your knowledge, with the Quiz API you are going to be able to do so via your terminal at any time!&lt;/p&gt;

&lt;p&gt;For more information make sure to check out the official documentation here:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://quizapi.io/docs/1.0/overview"&gt;https://quizapi.io/docs/1.0/overview&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Also, feel free to reach out and say hi on twitter:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/bobbyiliev_"&gt;https://twitter.com/bobbyiliev_&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>bash</category>
      <category>php</category>
      <category>laravel</category>
    </item>
    <item>
      <title>Writing functions in Python</title>
      <author>Chris Bongers</author>
      <pubDate>Wed, 26 May 2021 06:51:14 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/writing-functions-in-python-1och</link>
      <guid>https://dev.to/dailydevtips1/writing-functions-in-python-1och</guid>
      <description>&lt;p&gt;Functions are an essential part of programming, as they can execute a block of code at once.&lt;br&gt;
Often it's an excellent way to re-use blocks of code.&lt;/p&gt;

&lt;p&gt;Let's give it a go and see how they work in Python.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-a-function-in-python"&gt;
  &lt;/a&gt;
  Creating a function in Python
&lt;/h2&gt;

&lt;p&gt;A function is made by prefixing the &lt;code&gt;def&lt;/code&gt; keyword.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Bar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;However, running our code now will not do anything since we didn't call our function yet.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#executing-the-function"&gt;
  &lt;/a&gt;
  Executing the function
&lt;/h2&gt;

&lt;p&gt;To run/execute the function, we must call it somewhere in our code. In general, this happens when a specific criterion is matched, but let's just run it as is.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Bar"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When we run our code now, it returns &lt;code&gt;Bar&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#passing-and-returning-data"&gt;
  &lt;/a&gt;
  Passing and returning data
&lt;/h2&gt;

&lt;p&gt;Having a function that prints out something is not convenient so let's see how we can give it data and return something.&lt;/p&gt;

&lt;p&gt;Let's say we want to make a function that multiplies a number by itself and returns the output.&lt;/p&gt;

&lt;p&gt;Meaning, if we put in the number 5, it should run &lt;code&gt;5x5&lt;/code&gt; and return &lt;code&gt;25&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Running this code will indeed return &lt;code&gt;25&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can easily have the function accept multiple arguments like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;multiplier&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;multiplier&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will return &lt;code&gt;50&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And one cool thing we can do is send the arguments based on their key value like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;multiply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;multiplier&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You might not know how many arguments you're expecting in some cases, and you can prepend the argument with an asterisk (*).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;feed_animals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;animals&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;animals&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;animals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="n"&gt;feed_animals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Cow'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Chicken'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'Goat'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Which will return:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;('Cow', 'Chicken', 'Goat')
Goat
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There are some more additions to functions, but this covers the basics for Python functions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
    </item>
    <item>
      <title>Top 6 Latest Trends in Web Development to Outline 2021</title>
      <author>Codica</author>
      <pubDate>Wed, 26 May 2021 06:32:06 +0000</pubDate>
      <link>https://dev.to/codicacom/top-6-latest-trends-in-web-development-to-outline-2021-5bi5</link>
      <guid>https://dev.to/codicacom/top-6-latest-trends-in-web-development-to-outline-2021-5bi5</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2LnN-Mba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mf4unp9efobwedcwxigd.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2LnN-Mba--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mf4unp9efobwedcwxigd.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This article was originally posted on &lt;a href="https://www.codica.com/blog/top-web-development-trends/"&gt;Codica Blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;How to make a website appealing to customers? What should be done to increase its profitability? Questions like this became pressing issues for many owners of online business.&lt;/p&gt;

&lt;p&gt;Luckily, there are web app development trends that help entrepreneurs build modern software solutions that users will love.&lt;/p&gt;

&lt;p&gt;So let’s proceed to the top 6 most influential trends in web application development for 2021 that you should take on board.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-ai-and-chatbots"&gt;
  &lt;/a&gt;
  1. AI and chatbots
&lt;/h1&gt;

&lt;p&gt;Artificial intelligence is one of the most influential technologies in the tech landscape for 2021. AI chatbots, virtual assistants (Alexa, Siri, Cortana), and voice bots are gaining momentum now. Their benefit for businesses lies in their ability to engage with customers more efficiently and boost user experience.&lt;/p&gt;

&lt;p&gt;With chatbots users can get immediate responses to their queries. Also, customers get personalized tips and recommendations. As a result, chatbots serve as a great tool to drive sales and bring businesses more profit.&lt;/p&gt;

&lt;p&gt;Given the wide spread of AI chatbots, businesses of all sizes should use them to provide continuous customer engagement.&lt;/p&gt;

&lt;p&gt;Are you doubting whether AI-powered chatbots are here to stay? The statistics below can dispel your doubts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ox6GAL_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pplfmei8yo94sbivrpm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ox6GAL_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8pplfmei8yo94sbivrpm.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-pwa-progressive-web-apps"&gt;
  &lt;/a&gt;
  2. PWA (Progressive Web Apps)
&lt;/h1&gt;

&lt;p&gt;Progressive web applications have been the talk of the town for several years. In 2021, they remain highly relevant. It is all about their ability to provide users with an almost full mobile application experience.&lt;/p&gt;

&lt;p&gt;The core benefits of &lt;a href="https://www.codica.com/services/progressive-web-apps-development/"&gt;PWA development&lt;/a&gt; for users and companies are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lower app development, maintenance, and support costs;&lt;/li&gt;
&lt;li&gt;Offline capabilities;&lt;/li&gt;
&lt;li&gt;Faster time to market;&lt;/li&gt;
&lt;li&gt;Effortless distribution and installation;&lt;/li&gt;
&lt;li&gt;Reduced device power and storage usage.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thus, this website technology can save the day for those businesses that need to widen their mobile audience. To learn more, check our article to discover what &lt;a href="https://www.codica.com/blog/what-does-progressive-web-apps-pwa-development-mean-definition/"&gt;PWA development means&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Though PWA technology was created not long ago, it has already proven its effectiveness. By turning their websites into PWAs, companies can boost conversion rates, search rankings, and website usability. For this reason, all &lt;a href="https://www.codica.com/case-studies/"&gt;web projects&lt;/a&gt; Codica team delivers are PWA by default.&lt;/p&gt;

&lt;p&gt;To get to the crux of the progressive web app, we recommend checking some successful implementations of this technology. For instance, here’s a PWA of an &lt;a href="https://www.codica.com/case-studies/kids-activities-service-marketplace/"&gt;activity booking platform PlanMyKids&lt;/a&gt; developed by Codica team.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4R0HpKL3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2g4uxz8828zmxl0hxfoi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4R0HpKL3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2g4uxz8828zmxl0hxfoi.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-voice-search-optimization"&gt;
  &lt;/a&gt;
  3. Voice search optimization
&lt;/h1&gt;

&lt;p&gt;In 2021, more and more Internet users prefer communicating with audio over using text information. The remarkable popularity of Clubhouse audio social media tells us that audio will play a bigger part in the future. Even though this app is available only for iOS by invitation, it has already &lt;a href="https://techcrunch.com/2021/02/18/report-social-audio-app-clubhouse-has-topped-8-million-global-downloads/"&gt;reached 8 million downloads&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How to take advantage of this trend in web development? You can boost your web projects with voice search capabilities.&lt;/p&gt;

&lt;p&gt;Voice search optimization brings advantages for both users and business owners. The most significant ones are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Time saving;&lt;/li&gt;
&lt;li&gt;Facilitation of analyzing customer behavior.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;How to optimize your website for voice search? You can try the measures below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create natural language content;&lt;/li&gt;
&lt;li&gt;Use schema markup and snippets;&lt;/li&gt;
&lt;li&gt;Get rid of duplicate pages;&lt;/li&gt;
&lt;li&gt;Keep your contact information up-to-date;&lt;/li&gt;
&lt;li&gt;Monitor search rankings;&lt;/li&gt;
&lt;li&gt;Integrate Web Speech API.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#4-cloud-architecture"&gt;
  &lt;/a&gt;
  4. Cloud architecture
&lt;/h1&gt;

&lt;p&gt;In 2020, we saw a mandatory shift to &lt;a href="https://www.codica.com/blog/remote-work-trends/"&gt;remote work&lt;/a&gt; due to the spread of Covid-19. As a result, cloud, or serverless, applications have grown even more. And the Web, as one of the most cutting-edge domains, has seen a significant increase in the demand for cloud solutions.&lt;/p&gt;

&lt;p&gt;The recent data provided by &lt;a href="https://resources.flexera.com/web/pdf/report-state-of-the-cloud-2020.pdf"&gt;Flexera&lt;/a&gt; states that 98% of enterprises use at least one public or private cloud. Below, you can find a chart from the report.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D2gpQGZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d0zrc9mcg00381g83at.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D2gpQGZO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6d0zrc9mcg00381g83at.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.codica.com/blog/saas-paas-iass-choosing-the-best-cloud-computing-model/"&gt;Cloud computing&lt;/a&gt; can boast of many benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cost-effectiveness;&lt;/li&gt;
&lt;li&gt;On-demand scalability and flexibility;&lt;/li&gt;
&lt;li&gt;Quick time-to-market;&lt;/li&gt;
&lt;li&gt;Delegated maintenance;&lt;/li&gt;
&lt;li&gt;Better disaster recovery and loss prevention options.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Serverless architecture allows developers to build and run applications without thinking about servers. These cloud solutions still run on servers, but they are supported by cloud providers.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#5-mobilefriendly-websites"&gt;
  &lt;/a&gt;
  5. Mobile-friendly websites
&lt;/h1&gt;

&lt;p&gt;The recent findings by &lt;a href="https://datareportal.com/global-digital-overview"&gt;DataReportal&lt;/a&gt; show that the number of global mobile users is 5.22 billion as of January 2021. This statistics emphasizes the importance of mobile-friendliness for the future of the web. With websites optimized for mobile devices, companies get better chances to cover a greater number of mobile users and improve the conversion rate.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNaDOg2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qchqlmw09gqon8o3ukdy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZNaDOg2b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qchqlmw09gqon8o3ukdy.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;How do mobile-friendly websites look? Basically, they have the following key characteristics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easily readable and digestible copy;&lt;/li&gt;
&lt;li&gt;Clickable links and navigation;&lt;/li&gt;
&lt;li&gt;Short and userful menu.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;User experience boost is not the only one benefit of &lt;a href="https://www.codica.com/blog/5-key-website-usability-principles/"&gt;mobile-friendly websites&lt;/a&gt;. They also get the higher position in search results.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#6-blockchain"&gt;
  &lt;/a&gt;
  6. Blockchain
&lt;/h1&gt;

&lt;p&gt;Blockchain is a highly-secure technology that provides transactions verified by a decentralized network. With this technology, all your transactions are carefully protected.&lt;/p&gt;

&lt;p&gt;Speaking of web development, Blockchain can boast of the following advantages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Intelligent prediction system;&lt;/li&gt;
&lt;li&gt;High interactivity for web pages;&lt;/li&gt;
&lt;li&gt;Data safety;&lt;/li&gt;
&lt;li&gt;Security of digital payments.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Want to implement Blockchain technology to safeguard your web app but do not know how? Check our &lt;a href="https://www.codica.com/case-studies/insurance-progressive-web-application/"&gt;PWA case study&lt;/a&gt; to find out how Codica team integrated Blockchain in an insurance web app.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aUlb43ud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8i5uh26vmhqijni1nql.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aUlb43ud--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m8i5uh26vmhqijni1nql.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h1&gt;

&lt;p&gt;In 2021, the current web development trends play a big part in helping businesses stay afloat. However, you don’t need to rush into implementing all of them, as some of them may not fit your goals. But you need to be aware of the most influential technologies that shape the web development domain in 2021.&lt;/p&gt;

&lt;p&gt;In our brief article, we’ve listed the top 6 hottest web development trends for 2021. Do you want to delve deeper into that topic? Visit our thorough article that will answer your questions about the web dev domain: &lt;a href="https://www.codica.com/blog/top-web-development-trends/"&gt;9 New Web Development Trends to Outline 2021&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>2021trends</category>
      <category>web</category>
      <category>trends</category>
    </item>
    <item>
      <title>Modern Full-Stack Serverless, Part II</title>
      <author>Salah Elhossiny</author>
      <pubDate>Wed, 26 May 2021 06:30:38 +0000</pubDate>
      <link>https://dev.to/aws-builders/modern-full-stack-serverless-part-ii-94i</link>
      <guid>https://dev.to/aws-builders/modern-full-stack-serverless-part-ii-94i</guid>
      <description>&lt;h1&gt;
  &lt;a href="#getting-started-with-aws-amplify"&gt;
  &lt;/a&gt;
  Getting Started with AWS Amplify
&lt;/h1&gt;

&lt;p&gt;At the core of most applications is the data/API layer. This layer could look like many things. In the serverless world, this usually will be composed of a combination of API endpoints and serverless functions. These serverless functions could be doing some logic and returning data, interacting with a database of some kind, or even interacting with another API endpoint.&lt;/p&gt;

&lt;p&gt;There are two main ways of creating APIs with Amplify:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A combination of Amazon API Gateway and a Lambda function&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A GraphQL API connected to some type of data source (database, Lambda function, or HTTP endpoint)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;API Gateway is an AWS service that allows you to create API endpoints and route them to different services, often via a Lambda function. When you make an API call, it will route the request through API Gateway, invoke the function, and return the response. Using the Amplify CLI, you can create both the API Gateway endpoint as well as the Lambda function; the CLI will automatically configure the API to be able to invoke the Lambda function via an HTTP request.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--c463cwxY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bprx90xpkgemts88ele.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--c463cwxY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4bprx90xpkgemts88ele.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-and-deploying-a-serverless-function"&gt;
  &lt;/a&gt;
  Creating and Deploying a Serverless Function
&lt;/h2&gt;

&lt;p&gt;At the core of many serverless applications are serverless functions. Serverless functions run your code in stateless compute containers that are event-driven, short-lived (may last for one invocation), and fully managed by the cloud provider of your choice. These functions scale seamlessly and do not require any server operations.&lt;/p&gt;

&lt;p&gt;While most people think of serverless functions as being invoked or triggered by an API call, these functions can also be triggered by a variety of different events. In addition to HTTP requests, a few popular ways to invoke a serverless function are via an image upload to a storage service, a database operation (like create, update, or delete), or even from another serverless function.&lt;/p&gt;

&lt;p&gt;Serverless functions scale automatically, so there’s no need to worry about your application if you get a large spike in traffic. The first time you invoke a function, the service provider will create an instance of the function and run its handler method to process the event. After the function finishes and returns a response, it will remain and process additional events if they come in. If another invocation happens while the first event is still processing, the service will then create another instance.&lt;/p&gt;

&lt;p&gt;Serverless functions also have a payment model that is different from traditional infrastructure. With services like AWS Lambda, you only pay for what you use and are charged based on the number of requests for your functions and the time it takes for your code to execute. This is in contrast to provisioning and paying for infrastructure like servers regardless of whether they are being utilized.&lt;/p&gt;

&lt;p&gt;Now that you know about serverless functions, let’s take a look at how you can create a serverless function and hook it up to an API that will invoke it from an HTTP request.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-the-react-application-and-installing-the-dependencies"&gt;
  &lt;/a&gt;
  Creating the React Application and Installing the Dependencies
&lt;/h2&gt;

&lt;p&gt;To get started, you’ll first need to create the React application. To do so, you can use npx:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;amplify&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;
  &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;amplify&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, you will need to install the dependencies. For this app, you’ll only need the AWS Amplify library:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;aws&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;amplify&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After installing the dependencies, you can now initialize a new Amplify project in the root of the React application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;amplify&lt;/span&gt; &lt;span class="nx"&gt;init&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Enter&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cryptoapp&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Enter&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;environment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;local&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;your&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;preferred&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;editor&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;type&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;that&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;re building: javascript
? What javascript framework are you using: react
? Source Directory Path: src
? Distribution Directory Path: build
? Build Command: npm run-script build
? Start Command: npm run-script start
? Do you want to use an AWS profile? Here, choose *Y* and
pick the AWS
profile you created when you ran `amplify configure`.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, both the Amplify project and the React app have been successfully created and you can begin adding new features.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-a-new-serverless-function-with-amplify-cli"&gt;
  &lt;/a&gt;
  Creating a New Serverless Function with Amplify CLI
&lt;/h2&gt;

&lt;p&gt;In the next step, we’ll create the serverless function that you will be using for this app. The app you are building in this chapter is a cryptocurrency app. At first, you will hardcode an array of cryptocurrency information in the function and return it to the client. Later in this chapter, you’ll update this function to call another API (CoinLore) and asynchronously fetch and return data. To create the function, run the following command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;amplify&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Select&lt;/span&gt; &lt;span class="nx"&gt;which&lt;/span&gt; &lt;span class="nx"&gt;capability&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Lambda&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Provide&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;friendly&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;used&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;
  &lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cryptofunction&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Provide&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;AWS&lt;/span&gt; &lt;span class="nx"&gt;Lambda&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cryptofunction&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;runtime&lt;/span&gt; &lt;span class="nx"&gt;that&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;NodeJS&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;template&lt;/span&gt; &lt;span class="nx"&gt;that&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nx"&gt;Serverless&lt;/span&gt; &lt;span class="nx"&gt;express&lt;/span&gt;
  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Integration&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;Amazon&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt; &lt;span class="nx"&gt;Gateway&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;access&lt;/span&gt; &lt;span class="nx"&gt;other&lt;/span&gt; &lt;span class="nx"&gt;resources&lt;/span&gt; &lt;span class="nx"&gt;created&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;
  &lt;span class="nx"&gt;project&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt;
  &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;Lambda&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;No&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;invoke&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;recurring&lt;/span&gt;
  &lt;span class="nx"&gt;schedule&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;No&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;configure&lt;/span&gt; &lt;span class="nx"&gt;Lambda&lt;/span&gt; &lt;span class="nx"&gt;layers&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt;
  &lt;span class="nx"&gt;No&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;edit&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;local&lt;/span&gt; &lt;span class="nx"&gt;Lambda&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;No&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#walking-through-the-code"&gt;
  &lt;/a&gt;
  Walking Through the Code
&lt;/h3&gt;

&lt;p&gt;When you created this resource, a new folder in amplify/backend was created named function. All of the functions created by the CLI will be stored in this folder. For now, you only have a single function, cryptofunction. In the cryptofunction folder, you will see a couple of configuration files as well as an src directory where the main function code is located.&lt;/p&gt;

&lt;p&gt;Serverless functions are essentially just encapsulated applications running on their own. Because the function you created is in JavaScript, you’ll see that there are all of the things you’d typically see in any JavaScript application, including package.json and index.js files.&lt;/p&gt;

&lt;p&gt;Next, have a look at the function entry point located at src/index.js, in the cryptofunction folder. In this file you’ll see that there is a function called exports.handler. This is the entry point for the function invocation. When the function is invoked, this is the code that is run.&lt;/p&gt;

&lt;p&gt;You can handle the event directly in this function if you would like, but since you will be working with an API, a more useful way to do this is to proxy the path into an express app with routing (i.e., &lt;a href="http://yourapi/"&gt;http://yourapi/&lt;/a&gt;). Doing this gives you multiple routes in a single function as well as multiple HTTP request methods like get, put, post, and delete for each route. The serverless expressframework provides an easy way to do this and has been built into the function boilerplate for you.&lt;/p&gt;

&lt;p&gt;In index.js, you will see a line of code that looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;   &lt;span class="nx"&gt;awsServerlessExpress&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;server&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;context&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This code is where the event, context, and path are proxied to the express server running in app.js. In app.js, you will then be able to create HTTP requests against whatever routes you create for your API (this example being a /coins route to fetch cryptocurrency).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-the-coins-route"&gt;
  &lt;/a&gt;
  Creating the /coins Route
&lt;/h3&gt;

&lt;p&gt;Now that you have seen how the application is structured, let’s create a new route in app.js and return some data from it. The route that you will be creating is a /coins route. This route will be returning an object containing a coins array.&lt;/p&gt;

&lt;p&gt;Let’s add the new route. Before the first app.get('/items') route, add the following code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/* amplify/backend/function/cryptofunction/src/app.js /*

app.get('/coins', function(req, res) {
  const coins = [
    { name: 'Bitcoin', symbol: 'BTC', price_usd: "10000" },
    { name: 'Ethereum', symbol: 'ETH', price_usd: "400" },
    { name: 'Litecoin', symbol: 'LTC', price_usd: "150" }
  ]
  res.json({coins}); 
});  
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-the-api"&gt;
  &lt;/a&gt;
  Adding the API
&lt;/h3&gt;

&lt;p&gt;Now that the function is created and configured, let’s put an API in front of it so you can trigger it with an HTTP request. To do this, you will be using Amazon API Gateway. API Gateway is a fully managed service that enables developers to create, publish, maintain, monitor, and secure REST and WebSocket APIs. API Gateway is one of the services supported by both the Amplify CLI as well as the Amplify client library.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#creating-a-new-api"&gt;
  &lt;/a&gt;
  Creating a New API
&lt;/h3&gt;

&lt;p&gt;To create the API, you can use the Amplify add command. From the root of the project, run the following command in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;amplify&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;api&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Please&lt;/span&gt; &lt;span class="nx"&gt;select&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;one&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;below&lt;/span&gt; &lt;span class="nx"&gt;mentioned&lt;/span&gt; &lt;span class="nx"&gt;services&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nx"&gt;REST&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Provide&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;friendly&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;be&lt;/span&gt; &lt;span class="nx"&gt;used&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;
  &lt;span class="nx"&gt;label&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;category&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;cryptoapi&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Provide&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="sr"&gt;/coin&lt;/span&gt;&lt;span class="err"&gt;s
&lt;/span&gt;  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;Lambda&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Use&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;Lambda&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;already&lt;/span&gt;
  &lt;span class="nx"&gt;added&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt;
  &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="nx"&gt;Amplify&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Choose&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Lambda&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;invoke&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="nx"&gt;cryptofunction&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Restrict&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt; &lt;span class="nx"&gt;access&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;
  &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;Do&lt;/span&gt; &lt;span class="nx"&gt;you&lt;/span&gt; &lt;span class="nx"&gt;want&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="nx"&gt;another&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#deploying-the-api-and-the-lambda-function"&gt;
  &lt;/a&gt;
  Deploying the API and the Lambda Function
&lt;/h3&gt;

&lt;p&gt;Now that the function and API have both been created, you need to deploy them to your account to make them live. To do so, you can run the Amplify push command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;amplify&lt;/span&gt; &lt;span class="nx"&gt;push&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;? Are you sure you want to continue? Y&lt;br&gt;
Once the deployment has successfully completed, the services are live and ready to use.&lt;/p&gt;

&lt;p&gt;You can use the Amplify CLI status command at any time to see the current status of your project. The status command will list out all of the currently configured services in your project and give you the status for each of them:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;amplify&lt;/span&gt; &lt;span class="nx"&gt;status&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The main thing to notice in this status output is the Operation. The Operation tells you what will happen the next time push is run in the project. The Operation property will be set to Create, Update, Delete, or No Change.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#interacting-with-the-new-api"&gt;
  &lt;/a&gt;
  Interacting with the New API
&lt;/h3&gt;

&lt;p&gt;Now that the resources have been deployed, you can begin interacting with the API from the React application.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#configuring-the-client-app-to-work-with-amplify"&gt;
  &lt;/a&gt;
  Configuring the Client App to Work with Amplify
&lt;/h4&gt;

&lt;p&gt;To use the Amplify client library in any application, there is a base configuration that needs to be set up, usually at the root level. When you create the resources, the CLI populates the aws-exports.js file with information about your resources. You will use this file to configure the client application to work with Amplify. To configure the app, open src/index.js and add the following below the last import:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Amplify&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./aws-exports&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;Amplify&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;configure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#the-amplify-client-api-category"&gt;
  &lt;/a&gt;
  The Amplify Client API Category
&lt;/h4&gt;

&lt;p&gt;After the client application has been configured, you can begin interacting with your resources.&lt;/p&gt;

&lt;p&gt;The Amplify client library has various API categories that can be imported and used for various types of functionality, including Auth for authentication, Storage for storing items in S3, and API for interacting with REST and GraphQL APIs.&lt;/p&gt;

&lt;p&gt;In this section, you will be working with the API category. API has various methods available—including API.get, API.post, API.put, and API.del—for interacting with REST APIs, and API.graphql for interacting with GraphQL APIs.&lt;/p&gt;

&lt;p&gt;When working with a REST API, API takes in three arguments: API.get(apiName: String, path: String, data?: Object)&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#apiname"&gt;
  &lt;/a&gt;
  apiName
&lt;/h5&gt;

&lt;p&gt;The name given when you create the API from the command line. In our example, this value would be cryptoapi.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#path"&gt;
  &lt;/a&gt;
  path
&lt;/h5&gt;

&lt;p&gt;The path that you would like to interact with. In our example, we created /coins, so the path would be /coins.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#data"&gt;
  &lt;/a&gt;
  data
&lt;/h5&gt;

&lt;p&gt;This is an optional object containing any properties you’d like to pass to the API, including headers, query string parameters, or a body.&lt;/p&gt;

&lt;p&gt;In our example, the API call is going to look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cryptoapi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/coins&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The API returns a promise, meaning you can handle the call using either a promise or an async function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// promise&lt;/span&gt;
&lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cryptoapi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/coins&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;// async await&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cryptoapi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/coins&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#calling-the-api-and-rendering-the-data-in-react"&gt;
  &lt;/a&gt;
  Calling the API and Rendering the Data in React
&lt;/h4&gt;

&lt;p&gt;Next, let’s call the API and render the data. Update src/App.js with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="c1"&gt;// Import useState and useEffect hooks from React&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;// Import the API category from AWS Amplify&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;aws-amplify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="c1"&gt;// Create coins variable and set to empty array&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;coins&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateCoins&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;([])&lt;/span&gt;
&lt;span class="c1"&gt;// Define function to all API&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fetchCoins&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cryptoapi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/coins&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;updateCoins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coins&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Call fetchCoins function when component loads&lt;/span&gt;
&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;fetchCoins&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;coins&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;coin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;index&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;coin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;coin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;symbol&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;coin&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;price_usd&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then run the app using:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#updating-the-function-to-call-another-api"&gt;
  &lt;/a&gt;
  Updating the Function to Call Another API
&lt;/h4&gt;

&lt;p&gt;Next, you’ll update the function to call another API, the CoinLore API, that will return dynamic data from the CoinLore service. The user will be able to add set filters like limit and start to limit the number of items coming back from the API. To get started, you will first need a way to interact with an HTTP endpoint in the Lambda function. The library you will be using forthis lesson is the Axios library. Axios is a promise-based HTTP client for the browser and Node.js&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#installing-axios"&gt;
  &lt;/a&gt;
  Installing Axios
&lt;/h5&gt;

&lt;p&gt;The first thing you need to do is install the Axios package in your function folder in order to send HTTP requests from the function. Navigate to amplify/backend/function/cryptofunction/src, install Axios, and then navigate back to the root of the app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;amplify&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="sr"&gt;/cryptofunction/&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;
&lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;
&lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#updating-the-function"&gt;
  &lt;/a&gt;
  Updating the Function
&lt;/h4&gt;

&lt;p&gt;Next, update the /coins route in amplify/backend/function/cryptofunction/src/app.js with the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Import axios&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/coins&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Define base url&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;apiUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://api.coinlore.com/api/tickers?
  start=0&amp;amp;limit=10`&lt;/span&gt;

  &lt;span class="c1"&gt;// Check if there are any query string parameters&lt;/span&gt;
  &lt;span class="c1"&gt;// If so, reset the base url to include them&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiGateway&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
  &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiGateway&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;queryStringParameters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apiGateway&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;queryStringParameters&lt;/span&gt;
  &lt;span class="nx"&gt;apiUrl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://api.coinlore.com/api/tickers/?
  start=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;limit=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// Call API and return responseaxios.get(apiUrl)&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;coins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="p"&gt;}))&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the preceding function, we’ve imported the Axios library and then used it to make an API call to the CoinLore API. In the API call, you can pass in a start and limit parameter to the request to define the number of coins to return, as well as to define the starting point.&lt;/p&gt;

&lt;p&gt;In the req parameter, there is an apiGateway property that holds the event and the context variables. In the function just defined, there is a check to see if this event exists as well as the queryStringParameters property on the event. If the queryStringParameters property exists, we use those values to update the base URL with the parameters. Using queryStringParameters, the user can specify the start and limit values when querying the CoinLore API.&lt;/p&gt;

&lt;p&gt;Once the function is updated, you can deploy the updates by running the push command in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt; &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;amplify&lt;/span&gt; &lt;span class="nx"&gt;push&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#updating-the-client-app"&gt;
  &lt;/a&gt;
  Updating the Client App
&lt;/h4&gt;

&lt;p&gt;Now that you have updated the function, let’s update the React app to give the user the option to specify the limit and start parameters.&lt;/p&gt;

&lt;p&gt;To do so, you’ll need to add fields for user input and give the user a button to trigger a new API request. Update src/App.js with the following changes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Create additional state to hold user input for limit and&lt;/span&gt;
&lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="nx"&gt;properties&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;updateInput&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="c1"&gt;// Create a new function to allow users to update the input&lt;/span&gt;
&lt;span class="nx"&gt;values&lt;/span&gt;
&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;updateInputValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nx"&gt;updateInput&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;type&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Update fetchCoins function to use limit and start&lt;/span&gt;
&lt;span class="nx"&gt;properties&lt;/span&gt;
&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;fetchCoins&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;API&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cryptoapi&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;`/coins?
limit=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;limit&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;start=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;start&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;updateCoins&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coins&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;// Add input fields to the UI for user input&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updateInputValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;limit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;limit&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;
&lt;span class="nx"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;updateInputValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="c1"&gt;// Add button to the UI to give user the option to call the&lt;/span&gt;
&lt;span class="nx"&gt;API&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;fetchCoins&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Fetch&lt;/span&gt; &lt;span class="nx"&gt;Coins&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, run the app:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="o"&gt;~&lt;/span&gt; &lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References:
&lt;/h2&gt;

&lt;p&gt;Book: Full Stack Serverless: Modern Application Development with React, AWS, and GraphQL for Nader Dabit &lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Salah856/Modern-Fullstack-Serverless-/blob/main/Ch2.md"&gt;https://github.com/Salah856/Modern-Fullstack-Serverless-/blob/main/Ch2.md&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Part I: &lt;a href="https://dev.to/aws-builders/modern-full-stack-serverless-part-i-34cb"&gt;https://dev.to/aws-builders/modern-full-stack-serverless-part-i-34cb&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/aws-builders/building-rest-api-using-aws-with-serverless-node-js-express-2bk3"&gt;https://dev.to/aws-builders/building-rest-api-using-aws-with-serverless-node-js-express-2bk3&lt;/a&gt; &lt;/p&gt;

</description>
      <category>aws</category>
      <category>serverless</category>
      <category>react</category>
    </item>
  </channel>
</rss>
