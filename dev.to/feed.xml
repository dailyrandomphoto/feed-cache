<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Live From INTERACT: Microsoft’s Developer Velocity Research</title>
      <author>Conor Bronsdon</author>
      <pubDate>Thu, 14 Oct 2021 16:29:00 +0000</pubDate>
      <link>https://dev.to/linearb/live-from-interact-microsofts-developer-velocity-research-52km</link>
      <guid>https://dev.to/linearb/live-from-interact-microsofts-developer-velocity-research-52km</guid>
      <description>&lt;p&gt;This week we have another episode from the 2021 engineering leadership conference INTERACT. In this live conversation, Conor Bronsdon, Community Lead at LinearB and the executive producer of the Dev Interrupted podcast, interviews Henrik Gütle, GM of Azure for Microsoft Canada.&lt;/p&gt;

&lt;p&gt;Henrik joins the &lt;a href="https://devinterrupted.com/podcast/live-from-interact-microsofts-developer-velocity-research/"&gt;Dev Interrupted podcast&lt;/a&gt; to break down the results and key takeaways of Microsoft’s research into the impact of remote work on developer velocity — and what engineering leaders can learn from it.&lt;/p&gt;

&lt;p&gt;The exhaustive study taken over the course of more than a year, both before the pandemic and while it was ongoing, surveyed hundreds of companies regarding a host of topics including: agile practices, cloud adoption, toolsets and talent acquisition. The results of this survey are far-reaching and serve to provide companies with an understanding of transformative business practices.&lt;/p&gt;

&lt;p&gt;If you want to read the Microsoft’s Developer Velocity Report for yourself, you can find it on their website: &lt;a href="https://azure.microsoft.com/en-us/resources/developer-velocity-lessons-from-digital-leaders/"&gt;https://azure.microsoft.com/en-us/resources/developer-velocity-lessons-from-digital-leaders/&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/0JU3SKIjGvr9IoWDICGQ8c"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  Episode Highlights Include:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The business impact of developer velocity&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Whether or not remote teams saw a drop in productivity&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The importance of tooling and toolsets&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Why every leader needs to think about talent acquisition daily&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to interpret this study if you are starting a business&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#check-out-a-clip-from-the-dev-interrupted-youtube"&gt;
  &lt;/a&gt;
  Check out a clip from the Dev Interrupted YouTube
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/cYuGPmgaIgU"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#join-the-dev-interrupted-community"&gt;
  &lt;/a&gt;
  Join the Dev Interrupted Community
&lt;/h2&gt;

&lt;p&gt;With over 1800 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.com/invite/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mf8onEVP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2ANIp55MSa7-kTC6wO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mf8onEVP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/2048/0%2ANIp55MSa7-kTC6wO.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published at &lt;a href="https://devinterrupted.com/podcast/live-from-interact-microsofts-developer-velocity-research/"&gt;https://devinterrupted.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>techtalks</category>
      <category>podcast</category>
      <category>cloud</category>
      <category>agile</category>
    </item>
    <item>
      <title>RDS Auto Restart Protection</title>
      <author>🚀  Vu Dao 🚀 </author>
      <pubDate>Thu, 14 Oct 2021 16:13:51 +0000</pubDate>
      <link>https://dev.to/aws-builders/rds-auto-restart-protection-1bd9</link>
      <guid>https://dev.to/aws-builders/rds-auto-restart-protection-1bd9</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--USjpkv0V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-rds-stopper/blob/master/images/cover.jpg%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--USjpkv0V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-rds-stopper/blob/master/images/cover.jpg%3Fraw%3Dtrue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#abstract"&gt;
  &lt;/a&gt;
  Abstract
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Customers needing to keep an Amazon Relational Database Service (Amazon RDS) instance stopped for more than 7 days, look for ways to efficiently re-stop the database after being &lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_StopInstance.html"&gt;automatically started by Amazon RDS&lt;/a&gt;. If the database is started and there is no mechanism to stop it; customers start to pay for the instance’s hourly cost&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Stopping and starting a DB instance is faster than creating a DB snapshot, and then restoring the snapshot.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This blog provides a step-by-step approach to automatically stop an RDS cluster with fully serverless and using Pulumi to create AWS resources&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table Of Contents
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#Overview-of-Pulumi"&gt;Overview of Pulumi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Solution-overview"&gt;Solution overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Create-RDS-cluster-with-multiple-instances"&gt;Create RDS cluster with multiple instances&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Create-SNS-topic-and-subscribe-event-to-the-RDS-cluster"&gt;Create SNS topic and subscribe event to the RDS cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Create-Lambda-function-which-is-subscribe-to-the-SNS-topic"&gt;Create Lambda function which is subscribe to the SNS topic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Create-lambda-function-to-retrieve-RDS-cluster-and-instances-status"&gt;Create lambda function to retrieve RDS cluster and instances status&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Create-lambda-function-to-stop-RDS-cluster"&gt;Create lambda function to stop RDS cluster&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Create-lambda-function-to-send-slack"&gt;Create lambda function to send slack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#SFN-IAM-role-to-trigger-lambda-functions"&gt;SFN IAM role to trigger lambda functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Pulumi-deploy-stack"&gt;Pulumi deploy stack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Conclusion"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#overview-of-pulumi"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Overview of Pulumi&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.pulumi.com/why-pulumi/"&gt;Why Pulumi?&lt;/a&gt; Pulumi enables developers to write infrastructure as code in their favorite languages, such as TypeScript, JavaScript, Python, and Go.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Here is general steps-by-step to create pulumi project and its stack&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;Create new project
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi new aws-typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Set up aws profile&lt;/li&gt;
&lt;li&gt;When create/init a stack &lt;code&gt;pulumi stack init&lt;/code&gt; the &lt;code&gt;Pulumi.&amp;lt;stack-name&amp;gt;.yaml&lt;/code&gt; is not created so we have to set config ourselves
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi config set aws:region ap-northeast-2
pulumi config set aws:profile myprofile
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Pulumi bash completion&lt;/li&gt;
&lt;li&gt;Feel lazy for typing? Setup bashcompletion for pulumi
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi gen-completion bash &amp;gt; /etc/bash_completion.d/pulumi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Update &lt;code&gt;.bashrc&lt;/code&gt; for alias
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# add Pulumi to the PATH
export PATH=$PATH:$HOME/.pulumi/bin
alias plm='/home/vudao/.pulumi/bin/pulumi'
complete -F __start_pulumi plm
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Import existing resources&lt;/li&gt;
&lt;li&gt;For creating new RDS cluster to test the flow, we can import existing Security group or anything to the stack
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi import aws:ec2/securityGroup:SecurityGroup vpc_sg sg-13a02c7a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ol&gt;
&lt;li&gt;Refresh the stack&lt;/li&gt;
&lt;li&gt; If we manually delete the resources which are managed by the stack we can run refresh to update stack resource status
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pulumi refresh
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#solution-overview"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Solution overview&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4t3KVxmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-rds-stopper/blob/master/images/flow.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img alt="RDS Auto Restart Protection" src="https://res.cloudinary.com/practicaldev/image/fetch/s--4t3KVxmL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-rds-stopper/blob/master/images/flow.png%3Fraw%3Dtrue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The solution relies on RDS event notifications. Once a stopped RDS instance is started by AWS due to exceeding the maximum time in the stopped state; an event (RDS-EVENT-0154) is generated by RDS.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The RDS event is pushed to a dedicated SNS topic &lt;code&gt;sns-rds-event&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Lambda function &lt;code&gt;start-step-func-rds&lt;/code&gt; is subscribed to the SNS topic &lt;code&gt;sns-rds-event&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The function filters messages with &lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Events.Messages.html#USER_Events.Messages.cluster"&gt;event code&lt;/a&gt;: &lt;code&gt;RDS-EVENT-0153&lt;/code&gt; (The DB cluster is being started due to it exceeding the maximum allowed time being stopped.), plus the function validates that the RDS instance is tagged with &lt;code&gt;auto-restart-protection&lt;/code&gt; and that the tag value is set to &lt;code&gt;yes&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Once all conditions are met, the Lambda function starts the AWS Step Functions state machine execution.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The AWS Step Functions state machine integrates with two Lambda functions in order to retrieve the instance state, as well as attempt to stop the RDS instance.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In case the instance state is not ‘available’, the state machine waits for 5 minutes and then re-checks the state.&lt;/li&gt;
&lt;li&gt;Finally, when the Amazon RDS instance state is ‘available’; the state machine will attempt to stop the Amazon RDS instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Note: This blog is for handling RDS cluster with multiple intances, for single instance, catch &lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.Messages.html"&gt;&lt;code&gt;RDS-EVENT-0154&lt;/code&gt;&lt;/a&gt;: The DB instance is being started due to it exceeding the maximum allowed time being stopped.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;
  &lt;a href="#lets-start-writing-iac-using-pulumi-and-typescript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Let's start writing IaC using Pulumi and typescript&lt;/strong&gt;
&lt;/h2&gt;


&lt;h2&gt;
  &lt;a href="#create-rds-cluster-with-multiple-instances"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create RDS cluster with multiple instances&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create RDS cluster with one or more instances&lt;/li&gt;
&lt;li&gt;Using the imported existing VPC (optional)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
  rds.ts
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as aws from "@pulumi/aws";

const vpc_sg = new aws.ec2.SecurityGroup("vpc_sg",
    {
        description: "Allows inbound and outbound traffic for all instances in the VPC",
        name: "vpc-sec",
        revokeRulesOnDelete: false,
        tags: {
            Name: "vpc-sec",
        }
    },
    {
        protect: true,
    }
);

export const rds_cluster = new aws.rds.Cluster('SelTestRdsEventSub', {
    //availabilityZones: ['ap-northeast-2a', 'ap-northeast-2c'],
    clusterIdentifier: 'my-test-rds-sub',
    engine: 'aurora-postgresql',
    masterUsername: 'postgres',
    masterPassword: '*****',
    dbSubnetGroupName: 'aws-test',
    databaseName: "mydb",
    skipFinalSnapshot: true,
    vpcSecurityGroupIds: [vpc_sg.id],
    tags: {
        'Name': 'my-test-rds-sub',
        'stack': 'pulumi-rds',
        'auto-restart-protection': 'yes'
    }
});

export const clusterInstances: aws.rds.ClusterInstance[] = [];

for (const range = {value: 0}; range.value &amp;lt; 1; range.value++) {
    clusterInstances.push(new aws.rds.ClusterInstance(`SelRdsClusterInstance-${range.value}`, {
        identifier: `my-test-rds-sub-${range.value}`,
        clusterIdentifier: rds_cluster.id,
        instanceClass: aws.rds.InstanceType.T3_Medium,
        engine: 'aurora-postgresql',
        engineVersion: rds_cluster.engineVersion,
        dbSubnetGroupName: 'aws-test',
        tags: {
            'Name': `my-test-rds-sub-${range.value}`,
            'stack': 'pulumi-rds-instance',
            'auto-restart-protection': 'yes'
        }
    }))
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-sns-topic-and-subscribe-event-to-the-rds-cluster"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create SNS topic and subscribe event to the RDS cluster&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create a SNS topic to receive events from RDS cluster&lt;/li&gt;
&lt;li&gt;Create event subscription:

&lt;ul&gt;
&lt;li&gt;Target: the SNS topic&lt;/li&gt;
&lt;li&gt;Source Type: Clusters (and point to the cluster which created from above step)&lt;/li&gt;
&lt;li&gt;Specific event categories: &lt;code&gt;notification&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
  index.ts
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as aws from "@pulumi/aws";
import { state_machine_handler } from "./stepFunc";
import { rds_cluster } from "./rds";


const sns_rds_event = new aws.sns.Topic('SnsRdsEvent', {
    displayName: 'sns-rds-event',
    name: 'sns-rds-event',
    tags: {
        'Name': 'sns-rds-event',
        'stack': 'plumi-sns'
    }
});

const rds_event_sub = new aws.rds.EventSubscription('RdsEventSub', {
    enabled: true,
    name: 'rds-event-sub',
    eventCategories: ['notification'],
    sourceType: 'db-cluster',
    sourceIds: [rds_cluster.id],
    snsTopic: sns_rds_event.arn,
    tags: {
        'Name': 'rds-event-sub',
        'stack': 'pulumi-event'
    }
});

const sns_sub = new aws.sns.TopicSubscription('sns-topic-event-sub', {
    endpoint: state_machine_handler.arn,
    protocol: 'lambda',
    topic: sns_rds_event.arn
});

sns_rds_event.onEvent('sns-lambda-trigger', state_machine_handler, sns_sub)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-lambda-function-which-is-subscribe-to-the-sns-topic"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create Lambda function which is subscribe to the SNS topic&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The lambda function will be triggerd by SNS topic whenever there's event&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The lambda function parses the event message to filter event ID &lt;code&gt;RDS-EVENT-0153&lt;/code&gt; and checks the RDS cluster tag for key:value &lt;code&gt;auto-restart-protection: yes&lt;/code&gt;. If all conditions match, then the lambda function execute Step Functions state machine&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create IAM role which is consumed by lambda function&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
  iam-role
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const allowRdsClusterRole = new aws.iam.Role("allow-stop-rds-cluster-role", {
    name: 'lambda-stop-rds-cluster',
    description: 'Role to stop rds cluster base on event',
    assumeRolePolicy: JSON.stringify({
        Version: "2012-10-17",
        Statement: [{
            Action: "sts:AssumeRole",
            Effect: "Allow",
            Sid: "",
            Principal: {
                Service: "lambda.amazonaws.com",
            },
        }],
    }),
    tags: {
        'Name': 'lambda-stop-rds-cluster',
        'stack': 'pulumi-iam'
    },
});

const rds_policy = new aws.iam.RolePolicy("allow-stop-rds-cluster", {
    role: allowRdsClusterRole,
    policy: {
        Version: "2012-10-17",
        Statement: [
            {
                Sid: "AllowRdsStatement",
                Effect: "Allow",
                Resource: "*",
                Action: [
                    "rds:AddTagsToResource",
                    "rds:ListTagsForResource",
                    "rds:DescribeDB*",
                    "rds:StopDB*"
                ]
            },
            {
                Sid: "AllowSfnStatement",
                Effect: "Allow",
                Resource: "*",
                Action: "states:StartExecution"
            },
            {
                Sid: 'AllowLog',
                Effect: 'Allow',
                Resource: "arn:aws:logs:*:*:*",
                Action: [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                ],
            }
        ]
    },
}, {parent: allowRdsClusterRole});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create lambda function which is subscription of the SNS topic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
  start-step-func-lambda
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const state_machine_handler = new aws.lambda.Function('RdsSNSEvent',
    {
        code: new pulumi.asset.FileArchive('lambda-code/start-statemachine-execution-lambda/handler.tar.gz'),
        description: 'Lambda function listen to RDS SNS event topic to trigger step function',
        name: 'start-step-func-rds',
        handler: 'app.handler',
        runtime: aws.lambda.Runtime.Python3d8,
        role: handler.allowRdsClusterRole.arn,
        environment: {
            variables: {
                'STEPFUNCTION_ARN': stepFunction.arn
            }
        },
        tags: {
            'Name': 'start-step-func-rds',
            'stack': 'pulumi-lambda'
        }
    },
    {
        dependsOn: [handler.allowRdsClusterRole]
    }
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create step function state machine with flowing definitions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x4Vy2cNJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-rds-stopper/blob/master/images/step-func.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img alt="sfn-rds-event" src="https://res.cloudinary.com/practicaldev/image/fetch/s--x4Vy2cNJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-rds-stopper/blob/master/images/step-func.png%3Fraw%3Dtrue"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;
  stepFunc.ts
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import * as aws from '@pulumi/aws';
import * as pulumi from '@pulumi/pulumi';
import * as handler from './handler';


export const stepFunction = new aws.sfn.StateMachine('SfnRdsEvent', {
    name: 'sfn-rds-event',
    roleArn: handler.sfn_role.arn,
    tags: {
        'Name': 'sfn-rds-event',
        'stack': 'pulumi-sfn'
    },
    definition: pulumi.all([handler.retrieve_rds_status_handler.arn, handler.stop_rds_cluster_handler.arn, handler.send_slack_handler.arn])
        .apply(([retrieveArn, stopRdsArn, sendSlackArn]) =&amp;gt; {
        return JSON.stringify({
            "Comment": "RdsAutoRestartWorkFlow: Automatically shutting down RDS instance after a forced Auto-Restart",
            "StartAt": "retrieveRdsClustertate",
            "States": {
                "retrieveRdsClustertate": {
                    "Type": "Task",
                    "Resource": retrieveArn,
                    "TimeoutSeconds": 5,
                    "Retry": [
                        {
                        "ErrorEquals": [
                            "Lambda.Unknown",
                            "States.TaskFailed"
                        ],
                        "IntervalSeconds": 3,
                        "MaxAttempts": 2,
                        "BackoffRate": 1.5
                        }
                    ],
                    "Catch": [
                        {
                        "ErrorEquals": [
                            "States.ALL"
                        ],
                        "Next": "fallback"
                        }
                    ],
                    "Next": "isRdsClusterAvailable"
                },
                "isRdsClusterAvailable": {
                    "Type": "Choice",
                    "Choices": [
                        {
                        "Variable": "$.readyToStop",
                        "StringEquals": "yes",
                        "Next": "stopRdsCluster"
                        }
                    ],
                    "Default": "waitFiveMinutes"
                },
                "waitFiveMinutes": {
                    "Type": "Wait",
                    "Seconds": 300,
                    "Next": "retrieveRdsClustertate"
                },
                "stopRdsCluster": {
                    "Type": "Task",
                    "Resource": stopRdsArn,
                    "TimeoutSeconds": 5,
                    "Retry": [
                        {
                        "ErrorEquals": [
                            "States.Timeout"
                        ],
                        "IntervalSeconds": 3,
                        "MaxAttempts": 2,
                        "BackoffRate": 1.5
                        }
                    ],
                    "Catch": [
                        {
                        "ErrorEquals": [
                            "States.ALL"
                        ],
                        "Next": "fallback"
                        }
                    ],
                    "Next": "retrieveRdsClustertateStopping"
                },
                "retrieveRdsClustertateStopping": {
                    "Type": "Task",
                    "Resource": retrieveArn,
                    "TimeoutSeconds": 5,
                    "Retry": [
                        {
                        "ErrorEquals": [
                            "States.Timeout"
                        ],
                        "IntervalSeconds": 3,
                        "MaxAttempts": 2,
                        "BackoffRate": 1.5
                        }
                    ],
                    "Catch": [
                        {
                        "ErrorEquals": [
                            "States.ALL"
                        ],
                        "Next": "fallback"
                        }
                    ],
                    "Next": "isRdsClusterStopped"
                },
                "isRdsClusterStopped": {
                    "Type": "Choice",
                    "Choices": [
                        {
                        "Variable": "$.rdsClusterStatus",
                        "StringEquals": "stopped",
                        "Next": "sendSlack"
                        }
                    ],
                    "Default": "waitFiveMinutesStopping"
                },
                "waitFiveMinutesStopping": {
                    "Type": "Wait",
                    "Seconds": 300,
                    "Next": "retrieveRdsClustertateStopping"
                },
                "sendSlack": {
                    "Type": "Task",
                    "Resource": sendSlackArn,
                    "TimeoutSeconds": 5,
                    "End": true
                },
                "fallback": {
                    "Type": "Task",
                    "Resource": sendSlackArn,
                    "TimeoutSeconds": 5,
                    "End": true
                }
            }
        });
    })
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-lambda-function-to-retrieve-rds-cluster-and-instances-status"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create lambda function to retrieve RDS cluster and instances status&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;
  retrieve-rds-status.ts
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const retrieve_rds_status_handler = new aws.lambda.Function('RetrieveRdsStateFunc', {
    code: new pulumi.asset.FileArchive('lambda-code/retrieve-rds-instance-state-lambda/handler.tar.gz'),
    description: 'Lambda function to retrieve rds instance status',
        name: 'get-rds-status',
        handler: 'app.handler',
        runtime: aws.lambda.Runtime.Python3d8,
        role: allowRdsClusterRole.arn,
        tags: {
            'Name': 'get-rds-status',
            'stack': 'pulumi-lambda'
        }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-lambda-function-to-stop-rds-cluster"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create lambda function to stop RDS cluster&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;
  stop-rds.ts
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const stop_rds_cluster_handler = new aws.lambda.Function('StopRdsClusterFunc', {
    code: new pulumi.asset.FileArchive('lambda-code/stop-rds-instance-lambda/handler.tar.gz'),
    description: 'Lambda function to retrieve rds instance status',
        name: 'stop-rds-cluster',
        handler: 'app.handler',
        runtime: aws.lambda.Runtime.Python3d8,
        role: allowRdsClusterRole.arn,
        tags: {
            'Name': 'stop-rds-cluster',
            'stack': 'pulumi-lambda'
        }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#create-lambda-function-to-send-slack"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Create lambda function to send slack&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;
  send-slack.ts
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const send_slack_handler = new aws.lambda.Function('SendSlackFunc', {
    code: new pulumi.asset.FileArchive('lambda-code/send-slack/handler.tar.gz'),
    description: 'Lambda function to send slack',
        name: 'rds-send-slack',
        handler: 'app.handler',
        runtime: aws.lambda.Runtime.Python3d8,
        role: allowRdsClusterRole.arn,
        tags: {
            'Name': 'rds-send-slack',
            'stack': 'pulumi-lambda'
        }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#sfn-iam-role-to-trigger-lambda-functions"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;SFN IAM role to trigger lambda functions&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;
  sfn-role.ts
  &lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;export const sfn_role = new aws.iam.Role('SfnRdsRole', {
    name: 'sfn-rds',
    description: 'Role to trigger lambda functions',
    assumeRolePolicy: JSON.stringify({
        Version: "2012-10-17",
        Statement: [{
            Action: "sts:AssumeRole",
            Effect: "Allow",
            Sid: "",
            Principal: {
                Service: "states.ap-northeast-2.amazonaws.com",
            },
        }],
    }),
    tags: {
        'Name': 'sfn-rds',
        'stack': 'pulumi-iam'
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;




&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#pulumi-deploy-stack"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Pulumi deploy stack&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xJ41v_HX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-rds-stopper/blob/master/images/pulumi-resources.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xJ41v_HX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/vumdao/aws-rds-stopper/blob/master/images/pulumi-resources.png%3Fraw%3Dtrue"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  🚀 &lt;strong&gt;Conclusion&lt;/strong&gt; &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We now can save time and save money with this solution. Plus, we will receive slack message when there're events&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Although Pulumi Supports Many Clouds and provisioner and can visulize the resources chart within the stack but there're more options such as AWS Cloud Development Kit (CDK)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;div class="ltag__user ltag__user__id__512906"&gt;
  
    .ltag__user__id__512906 .follow-action-button {
      background-color: #000000 !important;
      color: #62df88 !important;
      border-color: #000000 !important;
    }
  
    &lt;a href="/vumdao" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bGwkUMWT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--ugeYdWM---/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/512906/2472752c-cfd5-4e02-b3d8-55b790178884.png" alt="vumdao image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/vumdao"&gt;🚀  Vu Dao 🚀 &lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/vumdao"&gt;Awesome Devops || AWS SA || CloudOpz&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;




&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vumdao"&gt;
        vumdao
      &lt;/a&gt; / &lt;a href="https://github.com/vumdao/vumdao"&gt;
        vumdao
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


</description>
      <category>aws</category>
      <category>rds</category>
      <category>cloudopz</category>
      <category>devops</category>
    </item>
    <item>
      <title>Git Commit Show by Invide #season03</title>
      <author>Saurabh Rai</author>
      <pubDate>Thu, 14 Oct 2021 15:29:32 +0000</pubDate>
      <link>https://dev.to/srbhr/git-commit-show-by-invide-season03-266p</link>
      <guid>https://dev.to/srbhr/git-commit-show-by-invide-season03-266p</guid>
      <description>&lt;p&gt;&lt;strong&gt;Allow us to introduce Git Commit Show 💻 One of the Leading Online Tech Conferences of the year! Is now up for it’s 3rd Season. Book the dates: 27th and 28th November, 2021. (GMT+5:30)&lt;/strong&gt;&lt;/p&gt;




&lt;p&gt;Come join us, live and interact with 👨‍⚖️Industry Leaders 👩‍💼 in Technology👩‍💻, Career🎓, and Open Source📀, to gain gargantuan knowledge in the tech domain and beyond that! &lt;br&gt;
Join us over our &lt;a href="https://discord.gg/BWeENvyktD"&gt;discord&lt;/a&gt; &lt;a href="https://www.youtube.com/c/InvideDeveloperCommunity"&gt;Youtube&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>opensource</category>
      <category>productivity</category>
      <category>career</category>
    </item>
    <item>
      <title>Free Best Login Page Templates (Written in HTML, CSS and JS)</title>
      <author>keshavs759</author>
      <pubDate>Thu, 14 Oct 2021 15:25:10 +0000</pubDate>
      <link>https://dev.to/keshavs759/free-best-login-page-templates-written-in-html-css-and-js-2l7e</link>
      <guid>https://dev.to/keshavs759/free-best-login-page-templates-written-in-html-css-and-js-2l7e</guid>
      <description>&lt;br&gt;
&lt;br&gt;


&lt;p&gt;A login page is a web page or website entry page that requires user identification and authentication, which is often accomplished by providing a username and password combination. If you have some coding experience then you can easily make login pages on your own. But in some cases, you have limited time to complete your project and in such cases, you might need login page templates that you can directly use with your website. Logins might give you access to the full site or just a section of it. Logging in allows the website to track the user's activity and habits in addition to providing site access.&lt;/p&gt;

&lt;p&gt;You can find various sources for the login page templates, but the following are some of the best login page templates that are available for free and you can modify them and even redistribute them.&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;&lt;a href="https://vidyasheela.com/component/transparent-login-page-template-in-html-and-css"&gt;Transparent Login page template in HTML and CSS&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span&gt;This is a responsive transparent login page template in HTML and CSS. If you are searching for a responsive login page HTML and CSS template for free then you definitely have to try it.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IVKOadyi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/45/responsive-transparent-login-form-html-sm.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IVKOadyi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/45/responsive-transparent-login-form-html-sm.jpg" alt="transparent login form html css" title="transparent login form html css"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;You can download this transparent login form from this &lt;a href="https://vidyasheela.com/component/transparent-login-page-template-in-html-and-css"&gt;link.&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;&lt;a href="https://vidyasheela.com/component/simple-login-form-template"&gt;Simple Login Form Template: &lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This one is the simple login form template written HTML, CSS, and javascript. Simple in the sense of its functions. You have inputs for the username or email and password and a login button. The important options like Sign Up and Forget Passwords are also there, however you have to do some backend work to use them. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://vidyasheela.com/component/simple-login-form-template" title="simple login form template html css"&gt;&lt;img title="Simple login form template" src="https://res.cloudinary.com/practicaldev/image/fetch/s--hfcWZU0S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/45/Simple-login-form-template.png" alt="Simple login form template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You can download this template for free from this &lt;a href="https://vidyasheela.com/component/simple-login-form-template"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Also Read:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://vidyasheela.com/post/free-template-for-student-registration-form-in-html"&gt;Free Template for Student Registration Form in HTML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vidyasheela.com/post/best-contact-us-page-html-template"&gt;Best Contact Us Page HTML Template&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vidyasheela.com/post/top-five-best-404-page-templates-free-download"&gt;Top Five Best 404 Page Templates Free Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vidyasheela.com/post/website-under-construction-html-code-free"&gt;Website Under Construction Html Code Free&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://vidyasheela.com/post/how-to-make-a-basic-login-form-and-registration-form-using-html-and-css"&gt;How to make a basic login form and registration form using HTML and CSS?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;&lt;a href="https://vidyasheela.com/component/login-page-with-other-login-options"&gt;Login Page Template with Other Login Options: &lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This template also has all the basic options that a simple login page template needs. In addition to these, the options like login with other emails like Google, Facebook, etc are also included in this template. You can easily add more options with simple code manipulation.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://vidyasheela.com/component/login-page-with-other-login-options" title="free responsive login page template html css"&gt;&lt;img title="login form with other options" src="https://res.cloudinary.com/practicaldev/image/fetch/s--UHJBOO1t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/45/login-form-with-other-login-opt.png" alt="login form with other options"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You can download this login form template for free from this &lt;a href="https://vidyasheela.com/component/login-page-with-other-login-options"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;&lt;a href="https://vidyasheela.com/component/login-form-with-remember-me-option"&gt;Login Form With Remember Me Option:&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If it is one's personal device, then it becomes a bit tedious if they have to input a username and password every time. To make it easier what you can do is use a remember me option which will take care that they don't have to input username and password every time they log in. This login form template is the perfect frontend design for that situation.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://vidyasheela.com/component/login-form-with-remember-me-option" title="responsive login form template in html css and javascript"&gt;&lt;img title="Login form with remember me option" src="https://res.cloudinary.com/practicaldev/image/fetch/s--2cleKV8v--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/45/login-with-remember.png" alt="Login form with remember me option"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You can download this login form template for free from this &lt;a href="https://vidyasheela.com/component/login-form-with-remember-me-option"&gt;link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;&lt;a href="https://vidyasheela.com/component/windows-10-style-login-page"&gt;Windows 10 Style Login Form Template&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a window 10 style login form template. It mimics the login page of windows. Your website looks cool if you use this login page template. It is written completely using HTML, CSS, and Javascript.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://vidyasheela.com/component/windows-10-style-login-page" title="stylish login from design html css and javascript"&gt;&lt;img title="windows 10 style login form" src="https://res.cloudinary.com/practicaldev/image/fetch/s--qJ5yqO9D--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/45/window-10-login-form.png" alt="windows 10 style login form"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;You can download this login form template for free from this &lt;a href="https://vidyasheela.com/component/windows-10-style-login-page"&gt;link&lt;/a&gt;.&lt;/p&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;&lt;a href="https://vidyasheela.com/component/free-login-form-and-registration-form-template-html"&gt;Free login Form and Registration Form Template HTML&lt;/a&gt;&lt;/h3&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a simple but responsive login form and registration form design written completely using HTML, CSS, and javascript. You can download and test this login and registration form HTML design for free. If you want to learn how is this login + registration form made watch &lt;a href="https://www.youtube.com/watch?v=xDv96OAsCK4"&gt;this&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;&lt;a href="https://vidyasheela.com/component/free-login-form-and-registration-form-template-html" title="basic login form with registration form html css"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D9tomRfy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/45/login-and-registration-form.gif" alt="basic login form with registration form html css" title="basic login form with registration form html css"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;You can download this login form template for free from this &lt;a href="https://vidyasheela.com/component/free-login-form-and-registration-form-template-html"&gt;link&lt;/a&gt;.&lt;/p&gt;



&lt;p&gt;Some of the features of these templates are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The design is responsive and clean.&lt;/li&gt;
&lt;li&gt;Other login options are hidden and appear once you click on the Sign-in options link.&lt;/li&gt;
&lt;li&gt;Free to use and modify the template.&lt;/li&gt;
&lt;li&gt;uses pure HTML, CSS, and javascript code.&lt;/li&gt;
&lt;li&gt;code is simple and concise.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;For other similar website components and widgets, you can visit &lt;a href="https://vidyasheela.com/website-components.php"&gt;here&lt;/a&gt;.&lt;/p&gt;



</description>
      <category>html</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>css</category>
    </item>
    <item>
      <title>Introduction to Linear Regression Algorithm with Example</title>
      <author>keshavs759</author>
      <pubDate>Thu, 14 Oct 2021 15:12:45 +0000</pubDate>
      <link>https://dev.to/keshavs759/introduction-to-linear-regression-algorithm-with-example-cf8</link>
      <guid>https://dev.to/keshavs759/introduction-to-linear-regression-algorithm-with-example-cf8</guid>
      <description>&lt;br&gt;
&lt;br&gt;


&lt;p&gt;In this article, we will learn about the linear regression algorithm with examples. First, we will understand the basics of linear regression algorithm, and then we will look at the steps involved in linear regression and finally an example of linear regression.&lt;/p&gt;

&lt;p&gt;Regression is a supervised learning technique for determining the relationship between two or more variables. “&lt;strong&gt;Regression fits a line or curve that passes through all the data points on a target-predictor graph in such a way that the vertical distance between the data points and the regression line is minimum”&lt;/strong&gt;.  Regression is mainly used for prediction, time series analysis, forecasting, etc. There are many types of regression algorithms like linear regression, multiple linear regression, logistic regression, and polynomial regression.&lt;/p&gt;

&lt;p&gt;Linear regression is a statistical method that is used for prediction based on the relationship between the continuous variables. In simple words, we can say that linear regression shows the linear relationship between the independent variable (X-axis) and the dependent variable (Y-axis), consequently &lt;strong&gt;called linear regression&lt;/strong&gt;. If there is a single input variable (x), such linear regression is called &lt;strong&gt;simple linear regression&lt;/strong&gt;. And if there is more than one input variable, such linear regression is called &lt;strong&gt;multiple linear regression&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The linear regression model depicts the relationship between the variables as a sloped straight line as shown in the graph below. When the value of x (independent variable) increases, the value of y (dependent variable) is likewise increasing. In linear regression what we do is find a best fit straight line similar to the red line shown in the graph that fits the given data points best (i.e. with minimum error).&lt;/p&gt;

&lt;p&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8lIOWol5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/Linear-Regression-model.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8lIOWol5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/Linear-Regression-model.jpg" alt="linear regression algorithm with example" title="linear regression algorithm with example"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;Mathematically we represent a linear regression as,&lt;/p&gt;

&lt;p&gt;&lt;span&gt;y = a + bx&lt;/span&gt;,  for simple linear regression&lt;/p&gt;

&lt;p&gt;&lt;span&gt;y = a+ b1x1 + b2x2 + b3x3 + …&lt;/span&gt; for multiple linear regression&lt;/p&gt;



&lt;p&gt;Sometimes these equations are called &lt;strong&gt;hypothesis functions&lt;/strong&gt;.&lt;/p&gt;



&lt;p&gt;where,&lt;/p&gt;

&lt;p&gt;a = intercept of the line or bias&lt;/p&gt;

&lt;p&gt;b, b1, b2,… = liner regression factor or scale factor or weights&lt;/p&gt;

&lt;p&gt;x, x1, x2, … = independent variables&lt;/p&gt;

&lt;p&gt;y = dependent variable&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;During a linear regression analysis, we are given &lt;strong&gt;Xs&lt;/strong&gt; and &lt;strong&gt;Y&lt;/strong&gt; as training data and we have to obtain the intercepts &lt;strong&gt;(a)&lt;/strong&gt;, and regression factors &lt;strong&gt;(b, b1, b2,…). &lt;/strong&gt;Once we get the suitable value of intercepts and regression factors they can be used to predict the value of y for the input value of x.&lt;/p&gt;



&lt;p&gt;&lt;strong&gt;We will consider simple linear regression from now onwards for simplicity.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;A linear line showing the relationship between the dependent and independent variables is called a &lt;strong&gt;regression line&lt;/strong&gt;. On the basis of the relationship between the independent and dependent variables, the regression line can be of two types.&lt;/p&gt;



&lt;h2&gt;Negative Linear Relationship:&lt;/h2&gt;

&lt;p&gt;If the dependent variable decreases on the Y-axis and the independent variable increases on the X-axis, then such a relationship is called a &lt;strong&gt;negative linear relationship&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3xChmdgt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/-ve-regression-line.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3xChmdgt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/-ve-regression-line.jpg" alt="negative linear relation" title="negative linear relation"&gt;&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;In this condition, the equation will be,&lt;strong&gt; y = -a + bx&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;Positive Linear Relationship:&lt;/h2&gt;

&lt;p&gt;If the dependent variable increases on the Y-axis and the independent variable increases on X-axis, then such a relationship is termed a &lt;strong&gt;positive linear relationship.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---kUKFbKp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/positive-regression-line.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---kUKFbKp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/positive-regression-line.jpg" alt="positive regression relation" title="positive regression relation"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this condition, the equation will be, &lt;strong&gt;y = a + bx&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt; &lt;/h2&gt;

&lt;h2&gt;How to find the best-fit line:&lt;/h2&gt;

&lt;p&gt;As we have mentioned earlier, the main motive of linear regression is to find the best fit line for the given data points. And the process of finding this best fit line is called learning of linear regression. Finding the best fit line means getting the best values for &lt;strong&gt;a&lt;/strong&gt; and &lt;strong&gt;b &lt;/strong&gt;based on the given dataset. The best fit line should have minimum error (i.e. the error between the predicted values and actual values should be minimized).&lt;/p&gt;



&lt;h3&gt;&lt;a href="https://vidyasheela.com/post/loss-functions-cost-functions-in-machine-learning"&gt;&lt;strong&gt;Cost function:&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;Cost functions are the error measuring functions that tell how the linear regression model is performing. It compares the &lt;strong&gt;predicted value of y&lt;/strong&gt; with the &lt;strong&gt;actual value of y&lt;/strong&gt; for the same input. There are various types of cost functions there. You can read about them &lt;a href="https://vidyasheela.com/post/loss-functions-cost-functions-in-machine-learning"&gt;here&lt;/a&gt;. From those, typically for the linear regression analysis, we use &lt;strong&gt;Mean Squared Error (MSE).&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--N29fm4EP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/MSE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--N29fm4EP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/MSE.png" alt="mean squared error" title="mean squared error"&gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;strong&gt;Ti &lt;/strong&gt;is the actual/true value, &lt;strong&gt;Yi&lt;/strong&gt;­  is the predicted value and &lt;strong&gt;n&lt;/strong&gt; is the total number of data.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h3&gt;&lt;a href="https://vidyasheela.com/post/introduction-to-gradient-descent-algorithm-with-formula"&gt;&lt;strong&gt;Gradient Descent:&lt;/strong&gt;&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;In order to get the best-fit line, we have to find the suitable value of &lt;strong&gt;a,&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; so that the cost function is minimum. To minimize the cost function we use a gradient descent algorithm. Gradient Descent is an iterative algorithm. The idea behind this algorithm is that we start with random values of &lt;strong&gt;a, &lt;/strong&gt;and &lt;strong&gt;b &lt;/strong&gt;and iteratively update the values such that the cost function is minimized. To read in detail about the gradient descent algorithm &lt;a href="https://vidyasheela.com/post/introduction-to-gradient-descent-algorithm-with-formula"&gt;visit this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6DKjBSrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/gradient%2520sescent.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6DKjBSrA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/gradient%2520sescent.png" alt="gradient descent algorithm" title="gradient descent algorithm"&gt;&lt;/a&gt;&lt;/p&gt;





&lt;h2&gt;Steps involved in Linear Regression Algorithm&lt;/h2&gt;

&lt;p&gt;Since we have covered the basic concepts now let’s look at the steps involved in the linear regression algorithm.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Prepare the given data. Read more from here.&lt;/li&gt;
&lt;li&gt;Decide the hypothesis function (i.e. for simple linear regression, y = a + bx is the hypothesis function )&lt;/li&gt;
&lt;li&gt;Initialize &lt;strong&gt;a,&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; with some random values.&lt;/li&gt;
&lt;li&gt;Update the parameters &lt;strong&gt;a, &lt;/strong&gt;and &lt;strong&gt;b &lt;/strong&gt;using gradient descent algorithm i.e.
&lt;ol&gt;
&lt;li&gt;Calculate y_predicted,&lt;strong&gt; y_predictedi =  a + bxi&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Calculate cost function,
&lt;ol&gt;
&lt;li&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LQagjHtm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/cost-function.png" alt="linear regression cost function" title="linear regression cost function"&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;

&lt;li&gt;Compute the gradient of cost function with respect to parameters (&lt;strong&gt;dJ/da&lt;/strong&gt;, &lt;strong&gt;dj/db&lt;/strong&gt;)&lt;/li&gt;

&lt;li&gt;Update a and b using that gradient:

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;a = a – lr*( dJ/da)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;b = b- lr*( dJ/db), lr &lt;/strong&gt;is learning rate.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;

&lt;li&gt;Repeat from steps I to iv until the desired result is obtained (i.e. cost function is minimized)&lt;/li&gt;

&lt;/ol&gt;

&lt;/li&gt;

&lt;/ol&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;ol&gt;&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;ul&gt;&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;&lt;/ol&gt;

&lt;ol start="5"&gt;
&lt;li&gt;Once the gradient descent is completed we will get updated values of &lt;strong&gt;a, &lt;/strong&gt;and &lt;strong&gt;b &lt;/strong&gt;for which the cost function is minimum. And line corresponding to those values will be the best fit line.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The steps will be similar for the multiple linear regression.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2&gt;Linear Regression Example&lt;/h2&gt;

&lt;p&gt;As mentioned earlier in the introduction section that this article will be learning linear regression algorithm with an example, now it’s time to do so. We will look at an example that you can find in &lt;a href="https://scikit-learn.org/stable/index.html"&gt;scikit-learn.org.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For this linear regression example, the diabetes dataset is used. You can find more about it from&lt;a href="https://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_diabetes.html#examples-using-sklearn-datasets-load-diabetes"&gt; here.&lt;/a&gt; The example below uses only the first feature of the diabetes dataset, in order to illustrate the data points within the two-dimensional plot. The straight line can be seen in the plot, showing how linear regression attempts to draw a straight line that will best minimize the residual sum of squares between the observed responses in the dataset, and the responses predicted by the linear approximation.&lt;/p&gt;

&lt;p&gt;The coefficients, residual sum of squares, and the coefficient of determination are also calculated.&lt;/p&gt;



&lt;pre&gt;&lt;code&gt;# Code source: Jaques Grobler
# License: BSD 3 clause


import matplotlib.pyplot as plt
import numpy as np
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squared_error, r2_score

# Load the diabetes dataset
diabetes_X, diabetes_y = datasets.load_diabetes(return_X_y=True)

# Use only one feature
diabetes_X = diabetes_X[:, np.newaxis, 2]

# Split the data into training/testing sets
diabetes_X_train = diabetes_X[:-20]
diabetes_X_test = diabetes_X[-20:]

# Split the targets into training/testing sets
diabetes_y_train = diabetes_y[:-20]
diabetes_y_test = diabetes_y[-20:]

# Create linear regression object
regr = linear_model.LinearRegression()

# Train the model using the training sets
regr.fit(diabetes_X_train, diabetes_y_train)

# Make predictions using the testing set
diabetes_y_pred = regr.predict(diabetes_X_test)

# The coefficients
print('Coefficients: n', regr.coef_)
# The mean squared error
print('Mean squared error: %.2f'
      % mean_squared_error(diabetes_y_test, diabetes_y_pred))
# The coefficient of determination: 1 is perfect prediction
print('Coefficient of determination: %.2f'
      % r2_score(diabetes_y_test, diabetes_y_pred))

# Plot outputs
plt.scatter(diabetes_X_test, diabetes_y_test,  color='black')
plt.plot(diabetes_X_test, diabetes_y_pred, color='blue', linewidth=3)

plt.xticks(())
plt.yticks(())

plt.show()&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Coefficients:
 [938.23786125]
Mean squared error: 2548.07
Coefficient of determination: 0.47
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p1fGZ8Ff--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/ouptut.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p1fGZ8Ff--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://vidyasheela.com/admin/include/../../web-contents/img/post_img/66/ouptut.jpg" alt="linear regression with example" title="linear regression with example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;



</description>
      <category>machinelearning</category>
      <category>ai</category>
    </item>
    <item>
      <title>The Joy of Contributing to Open Source</title>
      <author>Anish De</author>
      <pubDate>Thu, 14 Oct 2021 15:12:08 +0000</pubDate>
      <link>https://dev.to/anishde12020/the-joy-of-contributing-to-open-source-34gp</link>
      <guid>https://dev.to/anishde12020/the-joy-of-contributing-to-open-source-34gp</guid>
      <description>&lt;p&gt;Back in July of this year, I made a bold decision of completely switching to Pop OS (an ubuntu-based Linux distribution) and I was faced with many hurdles. One of these was an alternative to &lt;a href="https://www.microsoft.com/en-us/p/your-phone/9nmpj99vjbwv?activetab=pivot:overviewtab"&gt;Microsoft's Your Phone application&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;After some research, I stumbled over an application called &lt;a href="https://kdeconnect.kde.org/"&gt;KDE Connect&lt;/a&gt; which turned out to be a great alternative as it not only did everything that Microsoft's Your Phone application did but had some more nifty features.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#my-first-pull-request"&gt;
  &lt;/a&gt;
  My first pull request
&lt;/h1&gt;

&lt;p&gt;As Pop OS uses Cosmic (a fork of the popular GNOME desktop environment), I was better off using &lt;a href="https://extensions.gnome.org/extension/1319/gsconnect/"&gt;GSConnect&lt;/a&gt; instead of the native KDE Connect application. GSConnect is a fork of KDE Connect which integrates well with GNOME. Everything was good until I discovered a feature that allowed me to share the URL of my current tab to my phone. This needed me to download the &lt;a href="https://chrome.google.com/webstore/detail/gsconnect/jfnifeihccihocjbfcfhicmmgpjicaec"&gt;GSConnect chrome extension&lt;/a&gt; but I use Microsoft Edge as my primary web browser. Now, chrome extensions work on Microsoft Edge as it is chromium-based but the GSConnect chrome extension made use of a feature called &lt;a href="https://developer.chrome.com/docs/apps/nativeMessaging/"&gt;native messaging&lt;/a&gt; which helped the browser extension and a program installed on the computer interact with each other. Sadly, this needs dedicated configuration for each browser (it is just a line of code). GSConnect didn't have support for Microsoft Edge at that time and hence I decided to &lt;a href="https://github.com/GSConnect/gnome-shell-extension-gsconnect/issues/1139"&gt;open an issue&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A collaborator got back to me and explained the issue to me. I was a bit stuck and so asked for more help on GitHub and the same person got back to me, giving me a place to start working on the issue. I quickly figured out the problem and fixed the issue on my end. The next step was to open a pull request so I cloned the repository, made the changes, pushed the code, and opened &lt;a href="https://github.com/GSConnect/gnome-shell-extension-gsconnect/pull/1141"&gt;my first ever pull request&lt;/a&gt;. I did mess up with the code style because I had forgotten to read the contributing guide and hence didn't run the linter checks. Anyways, a member got back to me and I fixed the problem and then my pull request was merged 🎉.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-joy-when-my-pull-request-got-merged"&gt;
  &lt;/a&gt;
  The joy when my pull request got merged
&lt;/h2&gt;

&lt;p&gt;As soon as I saw the notification that my pull request had been merged, I felt the joy of contributing to an application used by many people. This is the moment you realize that you are not working for nothing, you are getting happiness from helping others and you are learning a lot yourself. Contributing to open-source also adds to your portfolio, it shows that you care about the project.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-learning"&gt;
  &lt;/a&gt;
  The learning
&lt;/h2&gt;

&lt;p&gt;When I opened the issue, I didn't know anything about native messaging in chrome extensions but from discovering this bug to fixing it, I learned a lot about how native messaging works and how open-source contributions work.&lt;/p&gt;

&lt;p&gt;I have talked about the perks of contributing to open-source in &lt;a href="https://blog.anishde.dev/open-source-in-everyday-life"&gt;my last article&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#getting-started-with-contributing-to-opensource"&gt;
  &lt;/a&gt;
  Getting Started with contributing to open-source
&lt;/h1&gt;

&lt;p&gt;It is not hard to experience the joy of contributing to open-source. Look for issues that you might want to work on and if you find one which you want to work on, it is as simple as making the changes and opening a pull request (make sure to follow the repository's contributing guide if it has one). Also, check out &lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt; where you open 4 &lt;strong&gt;valid&lt;/strong&gt; pull requests on participating repositories and if you are the first 50k to do so, you get some swag. Do check out &lt;a href="https://ayushirawat.com/beginners-guide-to-hacktoberfest-2021"&gt;this guide on getting started with Hacktoberfest&lt;/a&gt; by &lt;a href="https://twitter.com/notifications"&gt;Ayushi Rawat&lt;/a&gt; if you feel stuck.&lt;/p&gt;

&lt;p&gt;Feel free to comment down if you feel like I missed something or you got a question. You can also reach out to me on &lt;a href="https://twitter.com/AnishDe12020"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy contributing :D&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>hacktoberfest</category>
    </item>
    <item>
      <title>HarperDB in the Real World </title>
      <author>Margo McCabe</author>
      <pubDate>Thu, 14 Oct 2021 15:11:03 +0000</pubDate>
      <link>https://dev.to/harperdb/harperdb-in-the-real-world-4f84</link>
      <guid>https://dev.to/harperdb/harperdb-in-the-real-world-4f84</guid>
      <description>&lt;p&gt;By now you may be familiar with &lt;a href="https://harperdb.io/"&gt;HarperDB&lt;/a&gt; and how we’re different from &lt;a href="https://dev.to/harperdb/database-architectures-use-cases-explained-5711"&gt;other databases out there&lt;/a&gt;, but you might be wondering how folks are currently using HarperDB in real-world applications. Or, if you already have a database of choice that’s working well, you may be wondering why you would take the plunge to try something new. Fair enough! To provide some clarity, I’d like to share a few examples of how HarperDB is currently being used in production. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#quotes-from-harperdb-users"&gt;
  &lt;/a&gt;
  Quotes from HarperDB Users
&lt;/h2&gt;

&lt;p&gt;"I’m planning to break out a Monolith and use HarperDB as my datasource for the Front End part of the Platform solution I’m refactoring. One of the main reasons for considering HarperDB, as a Solutions Architect, the amount of time that is required from DEV to PROD to setup is close to none and not to mention that it is easy to adopt it and start working towards a deliverable from Day 1. All of my PoC’s, for Front End, Middleware or BackEnd, use a local HarperDB instance to start off."&lt;br&gt;
-&lt;em&gt;Rick Limon, Framework Science, Mexico&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;“I found out about HarperDB in a Tweet which mentioned how using Flutter with HarperDB was the ultimate combo and believe me they were not telling lies. I have used HarperDB for several projects now which has turned out great. I am currently using HarperDB to remake the Domino's pizza app for android and I can say for a fact everything has been running smooth as expected. I chose HarperDB because of their great response time and how easy it is to integrate due to the cloud functions, and on no occasion have I been let down or has anyone I referred given back a report contrary to what I told them HarperDB does. For that reason I stand with HarperDB”&lt;br&gt;
-&lt;em&gt;Collins, Nigeria&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;"We started looking at all the different databases that are scalable like Couchbase and a bunch of others, but we ended up focusing on HarperDB because of the flexibility... HarperDB scales beautifully; a containerized version of HarperDB tied to persistent storage allows me to scale HarperDB to meet my performance goals. The workload it can perform is amazing, and the ability to actually scale horizontally is amazing as well because it’s not typical for database engines.”&lt;br&gt;
-&lt;em&gt;Ron Lewis, Lumen Technologies, USA&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;“I am a front end developer, currently the maintainer of an open source project... as a real time stream framework for geo-distributed system, we decide to use HarperDB as our database in scenarios of AI / IoT / Virtual Office.”&lt;br&gt;
-&lt;em&gt;Yona&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;“I plan on using HarperDB for my side project (A web application for SCD NGOs). This will be used for the following sections: blog section of application, gallery section, other similar pages as well.” &lt;br&gt;
-&lt;em&gt;Emmanuel Kolawole, Estonia&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;“We are trying to improve our data processes, and I am excited to use HarperDB to store our data and plug it to Tableau dashboards!” &lt;br&gt;
-&lt;em&gt;James&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;“Here are a few things from my journey with HarperDB:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I came to know about it from the &lt;a href="https://townhall.hashnode.com/harperdb-hashnode-hackathon-winners"&gt;Hashnode hackathon&lt;/a&gt;, I made an application where people send birthday wishes to a person and all of them are curated in a single place, &lt;a href="https://vishwall.vercel.app/vishwall/Nivetha/wishes"&gt;for example this&lt;/a&gt; these are some of the wishes my friend received, they are in a regional language (Tamil).&lt;/li&gt;
&lt;li&gt;Then I also made another application for good luck, I used to feel worried before job interviews, so I added a few quotes in the database, and decided to make &lt;a href="https://deepakr-28.github.io/wishyougoodluck/"&gt;this application&lt;/a&gt;, people can get some confidence boost here.&lt;/li&gt;
&lt;li&gt;Since the fetch operation is really easy in HarperDB, this is my go-to platform for storing access tokens for api's which should not be displayed in public, tokens that are refreshed with each session. HarperDB is really convenient, in my workplace we use Azure SQL mostly, but I use HarperDB for all the prototyping and testing. &lt;/li&gt;
&lt;li&gt;I liked Firebase too, but learning curve of HarperDB is smaller compared to Firebase, which is really cool.”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;-&lt;em&gt;Deepak Rawat, India&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;“I am loving my experience with HarperDB so far, I am working on a number of GPS related projects as well as some PWA’s that are going to be utilizing HarperDB.”&lt;br&gt;
-&lt;em&gt;Jason, USA&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#case-studies"&gt;
  &lt;/a&gt;
  Case Studies
&lt;/h2&gt;

&lt;p&gt;In addition to quotes from devs in the community, I wanted to share a couple case studies where you can read about HarperDB projects in greater depth. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#us-army-accelerating-tactical-edge-with-harperdb"&gt;
  &lt;/a&gt;
  US Army: Accelerating Tactical Edge with HarperDB
&lt;/h4&gt;

&lt;p&gt;HarperDB has partnered with &lt;a href="https://www.command-cs.com/"&gt;Command Cyber Solutions&lt;/a&gt; to provide the Army with an innovative solution that will enhance the Army’s tactical edge and data orchestration capabilities. Command Cyber will leverage HarperDB to develop an edge-based analytics platform that can capture facial recognition data and distribute it to other HarperDB nodes for real-time alerting and detection.&lt;/p&gt;

&lt;p&gt;HarperDB will be deployed on the extreme edge, a mobile command center, and a server to not only collect and orchestrate data throughout the nodes, but also propagate rules engines and AI models from the command center to the edge to update logic and thresholds on the fly. This will allow the Army to adjust the priority level of the faces detected from the command center in case a high threat is found. In addition, priority levels of faces detected will be automatically upgraded when they are captured in high sensitivity areas.&lt;/p&gt;

&lt;p&gt;If interested, you can &lt;a href="https://harperdb.io/harperdb-army-case-study/"&gt;view and download the one-pager here&lt;/a&gt; to learn more about the Army case study.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#high-speed-data-monitoring-with-casne-engineering"&gt;
  &lt;/a&gt;
  High Speed Data Monitoring with Casne Engineering
&lt;/h4&gt;

&lt;p&gt;HarperDB and &lt;a href="https://casne.com/"&gt;Casne Engineering&lt;/a&gt; partnered to develop high performance data acquisition and in line analytics capabilities that enable organizations to capture sub-second data streams from industrial control systems like PLC’s and SCADA systems. The solution then filters out the massive amounts of irrelevant data at the edge, and forwards only the pertinent or anomaly data for use in OT historians and machine learning applications. &lt;/p&gt;

&lt;p&gt;This high frequency in-line analytics approach allows operators to gain actual real-time insights and detect anomalies that would normally be missed using traditional low frequency data collection techniques. HarperDB’s data management solution enables organizations to efficiently collect, process, and analyze data streams in conjunction with other unstructured data including machine vision, geospatial, and Internet data feeds. &lt;/p&gt;

&lt;p&gt;HarperDB and Casne recently completed a project for a client in the utilities / energy sector, where they were able to capture high resolution data to predict and prevent equipment failures and downtime with a single data management solution from plant to cloud. &lt;/p&gt;

&lt;p&gt;If interested, you can &lt;a href="https://harperdb.io/download-harperdb-casne-casestudy/"&gt;view and download the one-pager here&lt;/a&gt; to learn more about this case study.&lt;/p&gt;

&lt;p&gt;You can read about other industries that greatly benefit from high-performing, low-latency, geo-distributed databases like HarperDB in &lt;a href="https://dev.to/harperdb/industries-that-need-a-high-performing-low-latency-distributed-database-5cn4"&gt;this article&lt;/a&gt; as well. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developer-examples-featured-projects"&gt;
  &lt;/a&gt;
  Developer Examples / Featured Projects
&lt;/h2&gt;

&lt;p&gt;Lastly, I thought it might be helpful to share a few tutorials and other resources where you can follow along to build cool things with HarperDB: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://harperdb.io/product/featured-projects/"&gt;Featured projects&lt;/a&gt; on our website&lt;/li&gt;
&lt;li&gt;All &lt;a href="https://hashnode.com/n/harperdbhackathon"&gt;Hashnode-HarperDB Hackathon project submissions&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLlgTMTKsypS7FCGm3jAzq6VppF8-AtzPh"&gt;Livestream / code along events&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A few specific tutorials: 

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://blog.hrithwik.me/how-i-used-harperdb-custom-functions-to-build-a-web-app-for-my-newsletter"&gt;How I used HarperDB Custom Functions to build a web app for my newsletter&lt;/a&gt; by Hrithwik Bharadwaj&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://apoorvtyagi.tech/building-microservices-using-spring-boot-harperdb-and-deploying-it-on-aws"&gt;Building Microservices using Spring Boot + HarperDB and Deploying it on AWS&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/apoorvtyagi"&gt;@apoorvtyagi&lt;/a&gt;
 &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://catalins.tech/build-a-rest-api-with-harperdb-and-fastifyjs"&gt;Build A REST API With HarperDB and FastifyJS&lt;/a&gt; by Catalin Pit&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/lordghostx/building-a-contact-manager-with-python-flask-and-harperdb-1h53"&gt;Building a Contact Manager with Python, Flask, and HarperDB&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/lordghostx"&gt;@lordghostx&lt;/a&gt;
 &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.greenroots.info/create-a-serverless-book-library-app-with-harperdb-and-gatsbyjs"&gt;Create a serverless book library app with HarperDB and Gatsbyjs&lt;/a&gt; by &lt;a class="mentioned-user" href="https://dev.to/atapas"&gt;@atapas&lt;/a&gt;
 &lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;So, what do you think, is there anything in here that piques your interest or at least helps to provide some clarity as to why and how folks are using HarperDB? What are your thoughts? &lt;/p&gt;

&lt;p&gt;If you’re currently working with HarperDB, we’d love to hear from you! Share a bit about your project or experience in the comments below.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>showdev</category>
      <category>programming</category>
      <category>database</category>
    </item>
    <item>
      <title>Input Box For Halloween</title>
      <author>Takane Ichinose</author>
      <pubDate>Thu, 14 Oct 2021 15:04:00 +0000</pubDate>
      <link>https://dev.to/takaneichinose/input-box-for-halloween-466o</link>
      <guid>https://dev.to/takaneichinose/input-box-for-halloween-466o</guid>
      <description>&lt;h1&gt;Input Box For Halloween&lt;/h1&gt;

&lt;h2&gt;Description&lt;/h2&gt;

&lt;p&gt;Try to focus on the text box! Trust me, it won't hurt you! 😉&lt;/p&gt;

&lt;p&gt;I can't think of any text boxes having a bad UX interface, so I made an animation of halloween themed objects instead. 😅&lt;/p&gt;

&lt;p&gt;This is an animation of objects when the user focuses on the text box.&lt;/p&gt;

&lt;p&gt;There are few objects will appear during animation. Below is those objects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pumpkins 🎃&lt;/li&gt;
&lt;li&gt;Graves 🪦&lt;/li&gt;
&lt;li&gt;Bats 🦇&lt;/li&gt;
&lt;li&gt;Spider 🕷&lt;/li&gt;
&lt;li&gt;Manor 🏠&lt;/li&gt;
&lt;li&gt;Castle 🏰&lt;/li&gt;
&lt;li&gt;Frankenstein 🧟‍♂️&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the images are made using HTML and CSS only.&lt;/p&gt;

&lt;h3&gt;Apologize&lt;/h3&gt;

&lt;p&gt;I would like to say sorry for the repetitive codes I made especially in CSS, and JavaScript animation.&lt;/p&gt;

&lt;h2&gt;Resources&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://greensock.com"&gt;GreenSock&lt;/a&gt; Animation library for JavaScript. I really love this animation tool!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://fonts.google.com/specimen/Creepster"&gt;Creepster&lt;/a&gt; Font used for this.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/takaneichinose/embed/bGrNaJz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>codepen</category>
      <category>javascript</category>
      <category>showdev</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Stop Writing JavaScript Like This
</title>
      <author>Ruben Gabrielyan</author>
      <pubDate>Thu, 14 Oct 2021 14:53:16 +0000</pubDate>
      <link>https://dev.to/rubengabrielian/stop-writing-javascript-like-this-8po</link>
      <guid>https://dev.to/rubengabrielian/stop-writing-javascript-like-this-8po</guid>
      <description>&lt;p&gt;Most of us are used to writing JavaScript code for a long time. But we might not have updated ourselves with new features which can solve your issues with minimal code. These techniques can help you write clean and optimized JavaScript Code. Today, I’ll be summarizing some optimized JavaScript code snippets which can help you develop your skills.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-shorthand-for-if-with-multiple-conditions"&gt;
  &lt;/a&gt;
  1. Shorthand for if with multiple || conditions
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (fruit === 'apple' || fruit === 'orange' || fruit === 'banana' || fruit ==='grapes') {
    //code
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of using multiple || (OR) conditions, we can use an array with the values and use the includes() method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (['apple', 'orange', 'banana', 'grapes'].includes(fruit)) {
   //code
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-shorthand-for-if-with-multiple-ampamp-conditions"&gt;
  &lt;/a&gt;
  2. Shorthand for if with multiple &amp;amp;&amp;amp; conditions
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if(obj &amp;amp;&amp;amp; obj.address &amp;amp;&amp;amp; obj.address.postalCode) {
    console.log(obj.address.postalCode)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use optional chaining (?.) to replace this snippet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;console.log(obj?.address?.postalCode);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-shorthand-for-null-undefined-and-empty-if-checks"&gt;
  &lt;/a&gt;
  3. Shorthand for null, undefined, and empty if checks
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (first !== null || first !== undefined || first !== '') {
    let second = first;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of writing so many checks, we can write it better this way using ||&lt;br&gt;
(OR) operator.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const second = first || '';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#4-shorthand-for-switch-case"&gt;
  &lt;/a&gt;
  4. Shorthand for switch case
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;switch (number) {
  case 1:
     return 'one';
  case 2:
     return 'two';
  default:
     return;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use a map/ object to write it in a cleaner way.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const data = {
  1: 'one',
  2: 'two'
};
//Access it using
data[num]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#5-shorthand-for-functions-with-a-single-line"&gt;
  &lt;/a&gt;
  5. Shorthand for functions with a single line
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function doubleOf(value) {
  return 2 * value;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Use the arrow function to shorten it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const doubleOf = (value) =&amp;gt; 2 * value
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#buy-me-a-coffee"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.buymeacoffee.com/rubengabriel"&gt;Buy me a coffee&lt;/a&gt;
&lt;/h1&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Confused about online courses ?</title>
      <author>Android Club - VITC</author>
      <pubDate>Thu, 14 Oct 2021 14:40:16 +0000</pubDate>
      <link>https://dev.to/androidvitc/confused-about-online-courses--1n8</link>
      <guid>https://dev.to/androidvitc/confused-about-online-courses--1n8</guid>
      <description>&lt;p&gt;I am a Gen-Z student pursuing engineering.I never knew there was learning beyond college classes but the pandemic helped me realize the importance of pursuing my hobbies and interests and the best way to do this is through online courses. Virtual learning is the need of the hour and has caused significant changes in the educational field. Personally, I have expanded my skill-set by exploring courses like Web Development, playing guitar, photography, content writing and digital marketing ...&lt;/p&gt;

&lt;p&gt;Here are 4 factors I considered while choosing an online course which even you can be mindful of.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Decide the amount of time you can devote.&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;First and foremost, one should recognize the level up to which learner wants to learn and determine the time one would be able to provide to this course. Use duration filter in search options and select the duration slab which one has decided upon earlier.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;The content should be thoroughly analysed&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is always a good practice to know the final outcome you expect from a course and then matching it with the content offered by the course. On Coursera and Udemy one can check the video titles and their descriptions before enrolling on a course. See if the course offers practical assignments and their solutions.&lt;br&gt;
If you are already an intermediate level knower of the skill, you should check if the course offers advanced level skills by analyzing the content of the course.&lt;/p&gt;

&lt;p&gt;Never rely on difficulty level filter in search options!!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Flexibility of the course&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Almost all the online courses offered are fully flexible with respect to the content watching deadlines but some courses offered by universities have assignment submission deadlines from the date of course enrollment (Such courses might even be graded).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;b&gt;Course review and educator review from previous learners&lt;/b&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many course creators run YouTube channels and publish some modules from their courses on YouTube. Those videos are a brilliant way to check your compatibility with educators. Student reviews are subject to one’s personal opinion but can be checked for red flags !! about educators.&lt;/p&gt;

&lt;p&gt;Online courses have become an integral part of our education now. These courses also help digital nomads—someone who espouses a technology-enabled or location-independent lifestyle (I am probably the KING of this clan !!). No matter where you are in this world you can continue with your learning journey.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#warning-serious-talk-ahead"&gt;
  &lt;/a&gt;
  WARNING ! (serious talk ahead)
&lt;/h4&gt;

&lt;p&gt;One of the most important aspects is the inherent flexibility of such courses, however, there is a catch, one has to be extremely self-motivated in order to learn efficiently through these courses.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#happy-learning-"&gt;
  &lt;/a&gt;
  HAPPY LEARNING :))
&lt;/h4&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>productivity</category>
      <category>androidclub</category>
    </item>
    <item>
      <title>Refactoring and Rebasing (Lab 5)</title>
      <author>Ahmad</author>
      <pubDate>Thu, 14 Oct 2021 14:16:08 +0000</pubDate>
      <link>https://dev.to/ar/refactoring-and-rebasing-lab-5-400k</link>
      <guid>https://dev.to/ar/refactoring-and-rebasing-lab-5-400k</guid>
      <description>&lt;p&gt;A few things about my SSG script have always irked me, so this lab was a perfect opportunity to clean those up.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#improvements"&gt;
  &lt;/a&gt;
  Improvements
&lt;/h3&gt;

&lt;p&gt;The first thing I wanted to fix was this very long line of code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Process header markdown
&lt;/span&gt;&lt;span class="n"&gt;headerTag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'{endpTag}&amp;lt;h{size}&amp;gt;{regexContent}&amp;lt;/h{size}&amp;gt;{pTag}'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;endpTag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;regexContent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;pTag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;p&amp;gt;"&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;'(|(?&amp;lt;!\n)\n|&amp;lt;p&amp;gt;)(#{1,5})\s(.*)(&amp;lt;\/p&amp;gt;|(?&amp;lt;!&amp;lt;\/p&amp;gt;)\n|$)'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headerTag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;I was able to greatly simplify the lambda expression and reduce the footprint:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Process header markdown
&lt;/span&gt;&lt;span class="n"&gt;headerTag&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'&amp;lt;h{size}&amp;gt;{content}&amp;lt;/h{size}&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'#'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;r&lt;/span&gt;&lt;span class="s"&gt;'(|(?&amp;lt;!\n)\n|&amp;lt;p&amp;gt;)(#{1,5})\s(.*)(&amp;lt;\/p&amp;gt;|(?&amp;lt;!&amp;lt;\/p&amp;gt;)\n|$)'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headerTag&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;p&gt;The next thing that always bothered me was the fact that everything was in one big file. So I split &lt;code&gt;ssg.py&lt;/code&gt; into three different classes: &lt;code&gt;ssg.py&lt;/code&gt;, &lt;code&gt;SSGParser.py&lt;/code&gt;, and &lt;code&gt;SSGUtil.py&lt;/code&gt;. &lt;code&gt;SSGParser.py&lt;/code&gt;, as the name suggests, contains everything to do with parsing, &lt;code&gt;SSGUtil.py&lt;/code&gt; contains all the "helper" functions, and &lt;code&gt;ssg.py&lt;/code&gt; now only consists of &lt;code&gt;main&lt;/code&gt;. This step really cleaned up my code and I don't cringe when I see it anymore.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3A7I7-z6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd464ed315k7z29f0fxr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3A7I7-z6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qd464ed315k7z29f0fxr.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rebasing"&gt;
  &lt;/a&gt;
  Rebasing
&lt;/h3&gt;

&lt;p&gt;After committing all my improvements, I performed an interactive rebase to squash the commits into one, informative &lt;a href="https://github.com/a-rokay/static-site-generator/commit/0ffa06c506b3fde2d91bbf4029b95f286428c4d5"&gt;commit&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n4_ASIch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cwicmefyyink01xbpw9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n4_ASIch--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2cwicmefyyink01xbpw9.png" alt="Image description"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#outcomes"&gt;
  &lt;/a&gt;
  Outcomes
&lt;/h3&gt;

&lt;p&gt;All in all, I'm very glad I learned about changing the history of a repo by rebasing and how to squash commits. In past labs, I'd have a mini heart attack whenever I realized I forgot something!&lt;/p&gt;

</description>
      <category>opensource</category>
    </item>
    <item>
      <title>JavaScript Framework TodoMVC Size Comparison</title>
      <author>Ryan Carniato</author>
      <pubDate>Thu, 14 Oct 2021 14:13:08 +0000</pubDate>
      <link>https://dev.to/this-is-learning/javascript-framework-todomvc-size-comparison-504f</link>
      <guid>https://dev.to/this-is-learning/javascript-framework-todomvc-size-comparison-504f</guid>
      <description>&lt;p&gt;Size in JavaScript Frameworks is actually a pretty tricky thing to estimate. &lt;/p&gt;

&lt;p&gt;Even nailing down the size of runtimes is unclear. You might go to bundlephobia.com but the size there can be misleading. With tree-shaking not all code is included. Bundlephobia also doesn't include sub-modules. Things like &lt;code&gt;svelte/motion&lt;/code&gt; or &lt;code&gt;preact/hooks&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There isn't only the size of the runtime but the size of the component code. Not all components are equal. Templates in each framework compile differently. Evan You, creator of Vue put together a &lt;a href="https://github.com/yyx990803/vue-svelte-size-analysis"&gt;comparison between Svelte and Vue&lt;/a&gt; which was pretty illuminating.&lt;/p&gt;

&lt;p&gt;I decided to take his process and methodology and apply it in addition to &lt;a href="https://preactjs.com"&gt;Preact&lt;/a&gt;, &lt;a href="https://reactjs.org"&gt;React&lt;/a&gt;, and &lt;a href="https://solidjs.com"&gt;Solid&lt;/a&gt;. So let's begin.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I'm the author of Solid, so be aware of that in terms of any potential bias I might show. I'm trying to keep things as equal as I can.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#the-setup"&gt;
  &lt;/a&gt;
  The Setup
&lt;/h2&gt;

&lt;p&gt;The test looks at the size of the library(vendor) bundle and the component code for &lt;a href="https://todomvc.com/"&gt;TodoMVC&lt;/a&gt;. Every framework has a version and the requirements are well laid out so each is relatively the same.&lt;/p&gt;

&lt;p&gt;I first looked at using only official demos, but Preact and React still use class components that are larger and not as representative of modern development. This did mean an increase in library size for Preact(3.81kb -&amp;gt; 4.39kb), which doesn't contain hooks as part of its main package but is definitely worthwhile for this test. In the end, I couldn't find a Hooks implementation I was happy with so I rolled my own implementation which I based off Solid's. You can find all the implementations &lt;a href="https://gist.github.com/ryansolid/aa5bd12ed4e2f9d592c4b23e58d6fa85"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vendor chunks are pulled from &lt;a href="https://vite.dev"&gt;Vite&lt;/a&gt; which supports all tested frameworks. For component code I used &lt;a href="https://sfc.vuejs.org/"&gt;Vue&lt;/a&gt;, &lt;a href="https://svelte.dev/repl/"&gt;Svelte&lt;/a&gt;, &lt;a href="https://playground.solidjs.com"&gt;Solid&lt;/a&gt;'s REPLs and Terser REPL to minify. For Preact and React I used rollup to generate the compiled code.&lt;/p&gt;

&lt;p&gt;This process is much less rigorous than the benchmarks I typically do. Honestly coding style and available demo code put in a reasonable amount of variance. But I think it is still approximately in line.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h2&gt;

&lt;p&gt;First step is to get the size of the component and vendor code for each. TodoMVC is a pretty reasonable example as it involves basic state handling, conditional and loop rendering, forms, and even serialization to local storage. In so we get a much better idea of what the base size of each framework is than Bundlephobia.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Preact&lt;/th&gt;
&lt;th&gt;React&lt;/th&gt;
&lt;th&gt;Solid&lt;/th&gt;
&lt;th&gt;Svelte&lt;/th&gt;
&lt;th&gt;Vue&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;component size (brotli)&lt;/td&gt;
&lt;td&gt;1.21kb&lt;/td&gt;
&lt;td&gt;1.23kb&lt;/td&gt;
&lt;td&gt;1.26kb&lt;/td&gt;
&lt;td&gt;1.88kb&lt;/td&gt;
&lt;td&gt;1.10kb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vendor size (brotli)&lt;/td&gt;
&lt;td&gt;4.39kb&lt;/td&gt;
&lt;td&gt;36.22kb&lt;/td&gt;
&lt;td&gt;3.86kb&lt;/td&gt;
&lt;td&gt;1.85kb&lt;/td&gt;
&lt;td&gt;16.89kb&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;In general, mutable is smaller than immutable state, and VDOM-less libraries generate more JavaScript for their templates. Vue's components generate the least code, edging out the JSX libraries and Svelte &lt;/p&gt;

&lt;p&gt;Svelte's runtime really is small at 1.85kb. Preact core might be smaller than Solid, but with hooks in tow, the reactive framework ends up being the tinier one.&lt;/p&gt;

&lt;p&gt;From this, it is easy to calculate the size of each framework at N number of TodoMVCs + vendor chunk.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;th&gt;10&lt;/th&gt;
&lt;th&gt;20&lt;/th&gt;
&lt;th&gt;40&lt;/th&gt;
&lt;th&gt;80&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Svelte&lt;/td&gt;
&lt;td&gt;3.73kb&lt;/td&gt;
&lt;td&gt;11.25kb&lt;/td&gt;
&lt;td&gt;20.65kb&lt;/td&gt;
&lt;td&gt;39.45kb&lt;/td&gt;
&lt;td&gt;77.05kb&lt;/td&gt;
&lt;td&gt;152.25kb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Solid&lt;/td&gt;
&lt;td&gt;5.12kb&lt;/td&gt;
&lt;td&gt;10.16kb&lt;/td&gt;
&lt;td&gt;16.46kb&lt;/td&gt;
&lt;td&gt;29.06kb&lt;/td&gt;
&lt;td&gt;54.26kb&lt;/td&gt;
&lt;td&gt;104.66kb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Preact&lt;/td&gt;
&lt;td&gt;5.60kb&lt;/td&gt;
&lt;td&gt;10.44kb&lt;/td&gt;
&lt;td&gt;16.49kb&lt;/td&gt;
&lt;td&gt;28.59kb&lt;/td&gt;
&lt;td&gt;52.79kb&lt;/td&gt;
&lt;td&gt;101.19kb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vue&lt;/td&gt;
&lt;td&gt;17.99kb&lt;/td&gt;
&lt;td&gt;22.39kb&lt;/td&gt;
&lt;td&gt;27.89kb&lt;/td&gt;
&lt;td&gt;38.89kb&lt;/td&gt;
&lt;td&gt;60.89kb&lt;/td&gt;
&lt;td&gt;104.89kb&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;React&lt;/td&gt;
&lt;td&gt;37.45kb&lt;/td&gt;
&lt;td&gt;42.37kb&lt;/td&gt;
&lt;td&gt;48.52kb&lt;/td&gt;
&lt;td&gt;60.82kb&lt;/td&gt;
&lt;td&gt;85.42kb&lt;/td&gt;
&lt;td&gt;134.62kb&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;While Svelte starts the charge in the lead, it is quickly overtaken by Solid, who passes the crown on to Preact. Preact is the smallest for a good chunk of the table before ultimately Vue is.&lt;/p&gt;

&lt;p&gt;So putting the inflection points in a table:&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Svelte&lt;/th&gt;
&lt;th&gt;Solid&lt;/th&gt;
&lt;th&gt;Preact&lt;/th&gt;
&lt;th&gt;Vue&lt;/th&gt;
&lt;th&gt;React&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Svelte&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;3.2&lt;/td&gt;
&lt;td&gt;3.8&lt;/td&gt;
&lt;td&gt;19.3&lt;/td&gt;
&lt;td&gt;52.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Solid&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;10.6&lt;/td&gt;
&lt;td&gt;81.4&lt;/td&gt;
&lt;td&gt;1078.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Preact&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;113.6&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vue&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;React&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;This is the point each framework gets larger than the next. From 0-3 TodoMVCs, Svelte is the smallest. From 3 to 10 Solid is the smallest. 10-113 TodoMVCs Preact is. And more than 113 TodoMVC's Vue is.&lt;/p&gt;

&lt;p&gt;Preact and Vue never intersect with React, and even for Solid that does it is only after about 1080 TodoMVC's. All in all this is pretty consistent with what we see in demo's and benchmarks. Svelte is always smallest for the Hello World's and TodoMVCs, Solid for the "Real World" demos and the types of simple sites people build on streams, and Preact for things on the larger side.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#analysis"&gt;
  &lt;/a&gt;
  Analysis
&lt;/h2&gt;

&lt;p&gt;TodoMVC as a single component is on the larger side and typical implementations do it in 3-4 components so I wouldn't view these component numbers necessarily to be the number of components. But it is easy to see each framework has its sweet spot.&lt;/p&gt;

&lt;p&gt;Size's biggest impact comes during the initial page load. Other code split routes can be lazy-loaded as desired, but initial page load is a cost that every site takes upfront. If you subscribe to the thinking present in Addy Osmani's &lt;a href="https://medium.com/dev-channel/the-cost-of-javascript-84009f51e99e"&gt;The Cost of JavaScript&lt;/a&gt; series and Alex Russell's &lt;a href="https://infrequently.org/2017/10/can-you-afford-it-real-world-web-performance-budgets/"&gt;Can You Afford It?: Real-world Web Performance Budgets&lt;/a&gt; we really should be aiming to keep initial page load JavaScript under 130kb. &lt;/p&gt;

&lt;p&gt;If this is a SPA that budget includes data fetching, state libraries, and router. It's not uncommon for that to be an additional 20 to 25kb JS with most frameworks. Reactive ones like Svelte, Solid, and Vue may have state management built-in but even then when you consider 3rd party utility libraries for formatting I'd say our framework and component code should be less than 100kb.&lt;/p&gt;

&lt;p&gt;At that budget, just how many TodoMVCs does each framework allow for?&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;React&lt;/th&gt;
&lt;th&gt;Vue&lt;/th&gt;
&lt;th&gt;Preact&lt;/th&gt;
&lt;th&gt;Solid&lt;/th&gt;
&lt;th&gt;Svelte&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;10kb&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;4.6&lt;/td&gt;
&lt;td&gt;4.7&lt;/td&gt;
&lt;td&gt;4.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;20kb&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2.8&lt;/td&gt;
&lt;td&gt;12.9&lt;/td&gt;
&lt;td&gt;12.4&lt;/td&gt;
&lt;td&gt;9.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;40kb&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;21&lt;/td&gt;
&lt;td&gt;29.4&lt;/td&gt;
&lt;td&gt;28.7&lt;/td&gt;
&lt;td&gt;20.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;70kb&lt;/td&gt;
&lt;td&gt;27.5&lt;/td&gt;
&lt;td&gt;48.3&lt;/td&gt;
&lt;td&gt;54.2&lt;/td&gt;
&lt;td&gt;52.5&lt;/td&gt;
&lt;td&gt;36.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;100kb&lt;/td&gt;
&lt;td&gt;51.9&lt;/td&gt;
&lt;td&gt;75.6&lt;/td&gt;
&lt;td&gt;79.0&lt;/td&gt;
&lt;td&gt;76.3&lt;/td&gt;
&lt;td&gt;52.2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;Well at 100kb React and Svelte are actually almost identical. And Vue, Preact, and Solid are right next to each other with almost 33% more budget available to them. But that's the upper end. At 40kb Preact and Solid can deliver pretty heft sites with a similar advantage over Vue and Svelte, at a range React isn't even really an option.&lt;/p&gt;

&lt;p&gt;Alex's goal was 5 seconds TTI on a slower device and network. For some industries like eCommerce that target should be more like 3 seconds. 70kb - 25kb = ~45kb budget here. How can a larger library like React even compete?&lt;/p&gt;

&lt;p&gt;React Server components carry about ~8kb more on top of React's current runtime already price them out of this conversation. Multi-Page Meta-Frameworks like &lt;a href="https://astro.build/"&gt;Astro&lt;/a&gt; which remove the need for routing, and possibly other 3rd party libraries, are likely just barely enough. But even amazing tools like Astro bring ~9kb with them when there is JavaScript to load.&lt;/p&gt;

&lt;p&gt;But for the other's there is more room to play. A simple site might only 5-10 islands on a given page any option is good there. Even full SPAs for smaller libraries like Preact, Svelte, or Solid are well within a happy range.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#closing-thoughts"&gt;
  &lt;/a&gt;
  Closing Thoughts
&lt;/h2&gt;

&lt;p&gt;In the ranges that matter, all frameworks are pretty comparable. Svelte might ultimately load more JavaScript across many pages for a really large app, but the others are close enough that on the larger side it won't be felt.&lt;/p&gt;

&lt;p&gt;Looking across the board Preact is the winner on size still. Solid comes close enough that that difference wouldn't be noticed, but Preact deserves the nod. React is priced out of the smaller targets or performance-sensitive ones but once an app gets large enough its size isn't noticeable. Vue sort lands right down the middle in this range, although ultimately it might send the least JavaScript in a really large app.&lt;/p&gt;

&lt;p&gt;Keep in mind this comparison is pretty rough and should be only seen as an estimate. I only regret not being able to put the time in to look at more libraries. Unsurprisingly a lot of TodoMVC examples are written MVC style which is unfair for this comparison or use stores like Redux. I wasn't prepared to write a bunch myself (Preact and React were enough). So this will have to stand.&lt;/p&gt;

&lt;p&gt;Hopefully, this gives you enough to think about until the next time the conversation of size comes up. Or maybe by then, it will be a completely different conversation given the way &lt;a href="https://markojs.com"&gt;Marko&lt;/a&gt; and &lt;a href="https://github.com/BuilderIO/qwik"&gt;Qwik&lt;/a&gt; have been completely shattering the way we measure JavaScript Framework code being sent to the browser.&lt;/p&gt;




&lt;p&gt;Full source for the TodoMVC examples used in this article found &lt;a href="https://gist.github.com/ryansolid/aa5bd12ed4e2f9d592c4b23e58d6fa85"&gt;here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>vue</category>
    </item>
  </channel>
</rss>
