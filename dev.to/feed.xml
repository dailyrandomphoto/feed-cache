<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Tutorial - Video Chat App with Twilio, Rails, and JS.</title>
      <author>Bacancy Technology</author>
      <pubDate>Fri, 10 Dec 2021 08:55:19 +0000</pubDate>
      <link>https://dev.to/bacancy_technology/tutorial-video-chat-app-with-twilio-rails-and-js-1mh4</link>
      <guid>https://dev.to/bacancy_technology/tutorial-video-chat-app-with-twilio-rails-and-js-1mh4</guid>
      <description>&lt;p&gt;In our last tutorial of the Video chat app with Twilio, Rails, and JavaScript, we developed the app with basic calling functionality. Make sure you read that tutorial first and get important insight before moving with this tutorial.&lt;/p&gt;

&lt;p&gt;Here, In this tutorial, we are going to discuss the same demo application. We all are well aware of video calling functionality, we understand that basic calling functionality is not enough. If you are using a Video chat application, the user must need the features like audio mute-unmute, turning the video on-off, and screen sharing.&lt;/p&gt;

&lt;p&gt;Here, I have listed down the steps to make you understand how we can develop such features in your video chat application.&lt;/p&gt;

&lt;p&gt;These are the new features that we will implement in our demo application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Audio mute and unmute&lt;/li&gt;
&lt;li&gt;Video on and off&lt;/li&gt;
&lt;li&gt;Screen sharing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We shared all the steps and technical codes in the article for your better understanding. If you want to implement these steps of the &lt;a href="https://www.bacancytechnology.com/blog/video-chat-app-with-twilio-rails-part-2"&gt;Video Chat App with Twilio, Rails, and JS&lt;/a&gt;, kindly visit our article now.&lt;/p&gt;

</description>
      <category>rails</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to access URL path using useParams hook in React js</title>
      <author>NasreenKhalid</author>
      <pubDate>Fri, 10 Dec 2021 08:43:17 +0000</pubDate>
      <link>https://dev.to/nasreenkhalid/how-to-access-url-path-using-useparams-hook-in-react-js-1gkh</link>
      <guid>https://dev.to/nasreenkhalid/how-to-access-url-path-using-useparams-hook-in-react-js-1gkh</guid>
      <description>&lt;p&gt;In my previous posts, we have studied about various hooks that comes with React package which enables us to perform different functions within our app. Today, we'll explore the useParams hook that comes with React-Router-dom package and allows us to access the URL parameters for example if you want to access the id for a particular URL then you will have to make use of useParams hook.&lt;br&gt;
Let's start by creating a new react app by typing in the following command in our command line:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;useparams&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;example&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we navigate to our app and clear out some unnecessary files like logo.svg, also we can remove the commented out code to make our app look neat and clean.&lt;br&gt;
Now, we would need to install the react-router-dom package in order to be able to access different routes and also make use of useParams hook:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;router&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dom&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we will navigate to App.js file of our app and write some basic code to be displayed on the Home page of our app, we would also need to import BrowserRouter, Switch , Route, Link and useParams objects from react-router-dom to be able to access the navigation properties of this package. After the imports and rendering the home page of our app at the default path of "/", our App.js file will look like the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useParams&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BrowserRouter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="nx"&gt;useParams&lt;/span&gt; &lt;span class="nx"&gt;Hook&lt;/span&gt; &lt;span class="nx"&gt;Demo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;navbar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Welcome&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Route&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/BrowserRouter&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we have to wrap the entire component in BrowserRouter component and the 'Link' method will create a hyperlink to access a particular component.&lt;/p&gt;

&lt;p&gt;Now we will also create an About us page to make things more clear and for this purpose we will have to create an About.js file in the src directory of our project, the code for About.js file is mentioned below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="nx"&gt;Us&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, let's write some code related to useParams hook. Suppose we have a list of products which we want to list down on a Products page on our app, we will first include the products object in the App.js as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;air-jordan-3-valor-blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;VALOUR BLUE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CT8532_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jordan-mars-270-london&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JORDAN MARS 270 LONDON&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CV3042_001_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;air-jordan-1-zoom-racer-blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RACER BLUE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CK6637_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now, we will create a link to the Products page where we will list down all the above products nicely:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Redirect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ProductsPage&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/ProductsPage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/About&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;air-jordan-3-valor-blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;VALOUR BLUE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CT8532_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;jordan-mars-270-london&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;JORDAN MARS 270 LONDON&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CV3042_001_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;air-jordan-1-zoom-racer-blue&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;RACER BLUE&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://secure-images.nike.com/is/image/DotCom/CK6637_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;BrowserRouter&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt; &lt;span class="nx"&gt;useParams&lt;/span&gt; &lt;span class="nx"&gt;Hook&lt;/span&gt; &lt;span class="nx"&gt;Demo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;navbar&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Home&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/products&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Products&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Link&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;

   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;exact&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Welcome&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Home&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Route&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/products&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;ProductsPage&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Route&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/about&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Route&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;   &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/Switch&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/BrowserRouter&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that we have passed the products object as a prop to the ProductsPage component so that we can display it there.&lt;br&gt;
Now create a ProductsPage component and display the products:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import React from 'react'
import { Link, Switch, Route } from 'react-router-dom'


export const ProductsPage = ({products}) =&amp;gt; {

    return (

        &amp;lt;div className="product-box"&amp;gt;

        &amp;lt;h2 className="title"&amp;gt; Products Component&amp;lt;/h2&amp;gt;
        &amp;lt;div className="box"&amp;gt;
        {Object.entries(products).map(([id, {name,img}]) =&amp;gt; (
                &amp;lt;li key={id}&amp;gt;
                    &amp;lt;Link to={`/product/${id}`}&amp;gt;
                        &amp;lt;h2 className="product-name"&amp;gt;{name}&amp;lt;/h2&amp;gt;
                        &amp;lt;img src={img} alt={name}/&amp;gt;
                    &amp;lt;/Link&amp;gt;
                &amp;lt;/li&amp;gt;
            ))} 
        &amp;lt;/div&amp;gt;


        &amp;lt;/div&amp;gt;
    )
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We made use of javascript map method to display the list of products. Notice that the name of each product is also a link which will navigate to the detail page of each product:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useParams&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useParams&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
           &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;This&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;Product&lt;/span&gt; &lt;span class="nx"&gt;Detail&lt;/span&gt; &lt;span class="nx"&gt;component&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&amp;gt;&lt;/span&gt;&lt;span class="err"&gt; 
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="na"&gt;Brand&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the Product component, we will use the useparams hook to extract the id from the url for each product.&lt;br&gt;
You may be wondering from where do the id is passed to the Product component so it was passed from App.js where we defined the Route for the Product component:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;BrowserRouter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;Router&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Redirect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Route&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;Link&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;useParams&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react-router-dom&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;ProductsPage&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/ProductsPage&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/About;
import {Product} from &lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;components&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;Product&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;

function App() {

  const products = {
    "air-jordan-3-valor-blue": {
      name: "VALOUR BLUE",
      img:
        "https://secure-images.nike.com/is/image/DotCom/CT8532_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1"
    },
    "jordan-mars-270-london": {
      name: "JORDAN MARS 270 LONDON",
      img:
        "https://secure-images.nike.com/is/image/DotCom/CV3042_001_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1"
    },
    "air-jordan-1-zoom-racer-blue": {
      name: "RACER BLUE",
      img:
        "https://secure-images.nike.com/is/image/DotCom/CK6637_104_A_PREM?$SNKRS_COVER_WD$&amp;amp;align=0,1"
    }
  };

  return (
    &amp;lt;BrowserRouter&amp;gt;
&amp;lt;div className="App"&amp;gt;
   &amp;lt;h1&amp;gt;React Router useParams Hook Demo&amp;lt;/h1&amp;gt;
   &amp;lt;div className="navbar"&amp;gt;
   &amp;lt;Link to="/"&amp;gt;Home&amp;lt;/Link&amp;gt;
   &amp;lt;Link to="/topics"&amp;gt;Topics&amp;lt;/Link&amp;gt;
   &amp;lt;Link to="/about"&amp;gt;About&amp;lt;/Link&amp;gt;
   &amp;lt;/div&amp;gt;


   &amp;lt;Switch&amp;gt;
     &amp;lt;Route exact path="/"&amp;gt;
       &amp;lt;h2&amp;gt;&amp;lt;p&amp;gt;Welcome to the Home Component&amp;lt;/p&amp;gt;&amp;lt;/h2&amp;gt;

     &amp;lt;/Route&amp;gt;
     &amp;lt;Route path="/products"&amp;gt;
    &amp;lt;ProductsPage products={products}/&amp;gt;
     &amp;lt;/Route&amp;gt;
     &amp;lt;Route path="/about"&amp;gt;
       &amp;lt;About /&amp;gt;
     &amp;lt;/Route&amp;gt;
     &amp;lt;Route path="/product/:id"&amp;gt;&amp;lt;Product products={products}/&amp;gt;&amp;lt;/Route&amp;gt;
   &amp;lt;/Switch&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;/BrowserRouter&amp;gt;

  );
}

export default App;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So, in this manner we were able to display all the products and also output the ID for each product by the use of useParams hook.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed reading the article.&lt;br&gt;
Happy Coding...&lt;/p&gt;

</description>
      <category>react</category>
      <category>useparams</category>
      <category>hooks</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Why Your Website Is Loading So Slowly</title>
      <author>Alex Sanders</author>
      <pubDate>Fri, 10 Dec 2021 08:43:11 +0000</pubDate>
      <link>https://dev.to/alexsan28195851/why-your-website-is-loading-so-slowly-2ihl</link>
      <guid>https://dev.to/alexsan28195851/why-your-website-is-loading-so-slowly-2ihl</guid>
      <description>&lt;p&gt;We’ve all had the experience of dealing with a website that refuses to load in a reasonable amount of time. If you’re like most people, you probably abandoned that site. It’s only natural, given our modern expectations that websites load almost immediately.&lt;/p&gt;

&lt;p&gt;But what if that slow-loading website is yours? What could be responsible for your sluggish site? And what’s the best way to fix it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-impact-of-site-speed"&gt;
  &lt;/a&gt;
  The Impact of Site Speed
&lt;/h2&gt;

&lt;p&gt;According to &lt;a href="https://website.design/"&gt;Website.design&lt;/a&gt;, website loading speed is one of the most important variables to optimize on your website. If your website loads slowly, it could discourage people from visiting. It could cut each visit short – and even if your users stick around, they may have a bad experience, ultimately resulting in a blemish on your brand’s reputation.&lt;/p&gt;

&lt;p&gt;To make matters worse, site speed plays a significant technical role in search engine optimization (SEO). If your site loads too slowly, or if there are interruptions when a visitor reaches your website, it could be detrimental to your SERP rankings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-usual-culprits"&gt;
  &lt;/a&gt;
  The Usual Culprits
&lt;/h2&gt;

&lt;p&gt;So why is your site loading slowly?&lt;/p&gt;

&lt;p&gt;There are several possibilities, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Internet or device issues.&lt;/strong&gt; Let’s start with the obvious. There’s a chance that nothing is inherently wrong with your website – its slow loading times could be an issue with your internet service or the device you’re using. If your computer is running slow, or if there’s a slowdown in your internet download speed, your website could be an unfortunate casualty. Test your website on multiple devices and in multiple areas for a better assessment of its potential.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Poorly optimized images.&lt;/strong&gt; Images are some of the largest and most cumbersome files on your website, so if they’re poorly optimized, they can bog down the entirety of your website. Make sure they’re correctly formatted and compressed (to an extent).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Messy coding.&lt;/strong&gt; Messy coding can also be an obstructive issue. If your code isn’t clean, or if there are serious issues, it’s going to result in loading delays. If you’re using a traditional template or a website builder, you probably won’t have to worry much about this. The same is true if you’re working with a competent website design agency.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;JavaScript problems.&lt;/strong&gt; JavaScript and JQuery plugins have made it much easier to add custom content to your website – but they can also be a problem if they’re installed or used incorrectly. If you’re using too many API calls, it can result in bloating and slow down your entire website.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Excessive requests.&lt;/strong&gt; Your browser uses HTTP requests to retrieve information from JS, CSS, and image files. If these requests are too numerous, it can result in slowdown. Fortunately, minification can reduce the number of files on your site and lead to a faster, more streamlined web experience.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lack of caching.&lt;/strong&gt; &lt;a href="https://www.nexcess.net/blog/wordpress-caching-plugins"&gt;Caching plugins work&lt;/a&gt; by allowing users to store your website information locally. This way, when they visit your site for a second (or subsequent) time, the site can load almost instantly. It won’t work for first-time visitors, but your repeat visitors will thank you.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Too many plugins.&lt;/strong&gt; Caching plugins are incredibly useful, but not every plugin is worth using. In fact, if your site is bogged down with too many plugins, it can sharply reduce your loading speed. Get rid of whatever plugins aren’t adding value to your site.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lack of compression.&lt;/strong&gt; Compression is valuable for reducing the size of your website (and the files therein) – and every bit counts. Even marginal reductions in data can lead to impressive improvements in loading speed.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Hosting issues.&lt;/strong&gt; Your hosting provider also plays a role in how quickly your site can load. If you’re using a shared server, or if the server encounters problems, it can render your site practically inaccessible. Upgrading your hosting can usually fix this issue, though you’ll typically have to pay more money for the service.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Too many ads.&lt;/strong&gt; Ads are a convenient strategy for monetizing a site with decent traffic, but there’s such a thing as too many. If your site is cluttered with ads, it’s going to result in a terrible user experience – including slow loading times.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lack of CDN services.&lt;/strong&gt; Content delivery networks (CDN) use distributed proxy servers and data centers to reduce loading times for users across the globe. If you want to maximize your site speed, a CDN could be worth the investment.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This list is not exhaustive, but it does cover the most common variables responsible for slow loading websites. As you’re optimizing your site, make sure to take advantage of &lt;a href="https://developers.google.com/speed/pagespeed/insights/"&gt;Google’s free PageSpeed Insights tool&lt;/a&gt;. It will tell you everything you need to know about your site speed, such as first contentful paint (FCP), first input delay (FID), and largest contentful paint (LCP). With that information, you can gradually tweak your site to improve its performance and witness your changes making an impact in real time.&lt;/p&gt;

</description>
      <category>design</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Intro to dApp's: Create your dApp backend w/Solidity</title>
      <author>Eda</author>
      <pubDate>Fri, 10 Dec 2021 08:41:01 +0000</pubDate>
      <link>https://dev.to/edatweets_/intro-to-dapps-create-your-dapp-backend-wsolidity-11dm</link>
      <guid>https://dev.to/edatweets_/intro-to-dapps-create-your-dapp-backend-wsolidity-11dm</guid>
      <description>&lt;p&gt;In the &lt;a href="https://eda.hashnode.dev/intro-to-dapps-create-your-dapp-frontend-withreact"&gt;previous post&lt;/a&gt;, we talked about creating a dApp frontend w/React. In this post, we will build the backend for our dApp and connect the two pieces.&lt;/p&gt;

&lt;p&gt;Before we deep dive into the code, I've laid out some fundamentals for building the application's backend. Then we'll move on to creating a basic smart contract and putting the two pieces together.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note: In this article, we will be referring to dApp's on the Ethereum blockchain.&lt;/em&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#intro-to-decentralized-apps-dapps"&gt;
  &lt;/a&gt;
  Intro to Decentralized App's (dApp's)
&lt;/h1&gt;

&lt;p&gt;In the most basic form, a dApp consists of a &lt;strong&gt;backend (smart contract)&lt;/strong&gt; and a &lt;strong&gt;frontend user interface.&lt;/strong&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#smart-contracts"&gt;
  &lt;/a&gt;
  Smart Contracts
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="https://ethereum.org/en/developers/docs/smart-contracts/"&gt;smart contract&lt;/a&gt; is a computer program stored on the blockchain. When the conditions of a smart contract are met, the code is executed by the Ethereum Virtual Machine (EVM). It's basically the server-side of the application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://docs.soliditylang.org/en/v0.8.10/"&gt;Solidity&lt;/a&gt;&lt;/strong&gt; is one of the most popular smart contract languages for Ethereum.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#transaction-amp-gas-fee"&gt;
  &lt;/a&gt;
  Transaction &amp;amp; Gas Fee
&lt;/h2&gt;

&lt;p&gt;An &lt;a href="https://ethereum.org/en/developers/docs/transactions"&gt;Ethereum transaction&lt;/a&gt;  refers to an action initiated by an account on the blockchain. For example, sending tokens to another account, buying an nft, swapping tokens are transactions on Ethereum.&lt;/p&gt;

&lt;p&gt;Each transaction on the blockchain has a cost. So when you want to interact with a smart contract, you need to pay the "&lt;a href="https://ethereum.org/tr/developers/docs/gas/"&gt;gas fee&lt;/a&gt;."&lt;/p&gt;

&lt;p&gt;Gas is the measure of the unit to denote the cost for a transaction. Accordingly, gas fees are the fees that are paid to the network to process the transactions. On Ethereum, gas fees are paid in ETH and denoted in gwei (10-9 ETH). When there is a lot of demand for the network, the gas fees increase, you can check the gas fees from the &lt;a href="https://etherscan.io/gastracker"&gt;Ethereum gas tracker&lt;/a&gt; . &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#application-binary-interface-abi"&gt;
  &lt;/a&gt;
  Application Binary Interface (ABI)
&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://docs.soliditylang.org/en/v0.5.3/abi-spec.html"&gt;Contract Application Binary Interface (ABI)&lt;/a&gt; is the interface between two program modules. Simply put, ABI is like the API (Application Programming Interface) in the Ethereum world. It defines the methods and structures to interact with the smart contract.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#how-to-create-your-own-dapp-wsolidity-and-react"&gt;
  &lt;/a&gt;
  How to create your own dApp w/Solidity and React
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#create-your-smart-contract"&gt;
  &lt;/a&gt;
  Create your Smart Contract
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#project-tools"&gt;
  &lt;/a&gt;
  Project Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://metamask.io/"&gt;Metamask Wallet&lt;/a&gt;: crypto wallet. &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dashboard.alchemyapi.io/"&gt;Alchemy&lt;/a&gt;: ethereum developer platform. We will be using the Alchemy API to interact with Alchemy's Ethereum infrastructure.&lt;/li&gt;
&lt;li&gt; &lt;a href="https://hardhat.org/"&gt;Hardhat&lt;/a&gt;: ethereum development environment. It comes as an npm package.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Choose your IDE and get the "solidity extension." I am using VS Code and am very happy with it. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create an account on  &lt;a href="https://metamask.io/"&gt;metamask&lt;/a&gt; and switch to the rinkeby test network. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get your &lt;a href="https://alchemy.com/?r=63afe97f6fd780ac"&gt;Alchemy API key&lt;/a&gt;. You will need to create an account on Alchemy. Then when logged in, create an App on the Rinkeby Test Network. Here's how your App settings should look like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tl_eTeIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638448516727/ZWykzJeebm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tl_eTeIV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638448516727/ZWykzJeebm.png" alt="Screen Shot 2021-12-01 at 21.07.37.png" width="880" height="279"&gt;&lt;/a&gt;&lt;br&gt;
Once created, head over to the app details and get your key by clicking "view key" on the top right.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install &lt;a href="https://nodejs.org/en/"&gt;node.js&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get some Rinkeby Test Network Ethereum. Try the faucet &lt;a href="https://faucet.rinkeby.io/"&gt;here&lt;/a&gt; to get some Rinkeby ETH.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#building-the-smart-contract"&gt;
  &lt;/a&gt;
  Building the Smart Contract
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create a project folder and head over to its directory. Install hardhat.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir eda-sample-smart-contract
cd eda-sample-smart-contract
npm init -y
npm install --save-dev hardhat
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In your project directory &lt;strong&gt;create a hardhat project&lt;/strong&gt; by running &lt;code&gt;npx hardhat.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ npx hardhat
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The setup wizard will show up. Click enter throughout and keep the default options. Hardhat will create a sample project and install the dependencies for you. Here's how your terminal should look like:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWyyoOtC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638448658575/YOjUkiQ_d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZWyyoOtC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638448658575/YOjUkiQ_d.png" alt="Screen Shot 2021-12-02 at 10.43.25.png" width="880" height="243"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the project from your code editor. Under the 'Contracts' folder, you should see the default &lt;strong&gt;Greeter.sol&lt;/strong&gt; file. ".Sol" is the file extension for the solidity language, and it's our sample smart contract. I've added the smart contract below with some comments to explain what's going on.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.4; // add the solidity version for the compiler
import "hardhat/console.sol";
// create the smart contract 
contract Greeter {
 // create a variable called greeting that will be stored in the contract 
 string private greeting;
 constructor(string memory _greeting) {
     console.log("Deploying a Greeter with greeting:", _greeting); // print to the console 
     greeting = _greeting;
 }
 // create a function to give the greeting message 
 // public: functions are public by default, anyone reading from the contract can call it
 // view: the function will not modify the state, it will only return a value
 // returns: the function declaration tells the type of the return value, here the return type is a string 
 function greet() public view returns (string memory) {
     return greeting; 
 }
 // create a function to change the greeting message 
 function setGreeting(string memory _greeting) public {
     console.log("Changing greeting from '%s' to '%s'", greeting, _greeting); // print to the console
     greeting = _greeting;
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get your &lt;strong&gt;Alchemy API key&lt;/strong&gt;; it's needed to talk to the Rinkeby Test Network from the smart contract. Add it to the &lt;strong&gt;hardhat.config.js&lt;/strong&gt; (see code snippet under step-6). &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add your &lt;strong&gt;metamask private key&lt;/strong&gt; to &lt;strong&gt;hardhat.config.js&lt;/strong&gt;. You can get you private key by clicking Account Details --&amp;gt; Export Private Key from your Metamask extension.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;require('@nomiclabs/hardhat-waffle');
module.exports = {
solidity: '0.8.4', // make sure the version matches the one in smart contract file 
networks: {
 rinkeby: {
   url: ' ', // rinkeby key 
   accounts: [' '], // metamask privte key- DO NOT SHARE THIS!! It has access to all your accounts
 },
},
};
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We need to take our contract from our local machine and put it onto the Rinkeby Test Network. For this, we will use the &lt;strong&gt;sample-script.js&lt;/strong&gt; file under the 'Scripts' folder. (It's usually called deploy.js; but let's leave it as is for this sample project.) Run the command below to deploy the contract to the Rinkeby Test Network.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx hardhat run scripts/sample-script.js --network rinkeby
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;🎉 Once you see the details of your smart contract on the terminal, it means that your smart contract is deployed onto the Rinkeby network! For the next steps, you will need the &lt;strong&gt;smart contract address&lt;/strong&gt; and the &lt;strong&gt;ABI&lt;/strong&gt;. Here is where you can find them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The smart contract address is printed on the terminal&lt;/li&gt;
&lt;li&gt;There is a new folder called artifacts that is generated after deploying the smart contract. The ABI is the json document(Greeter.json) on the following path &lt;em&gt;artifacts/Contracts/Greeter.json.&lt;/em&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8XV75pty--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638454077741/XjJkZ_sCB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8XV75pty--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638454077741/XjJkZ_sCB.png" alt="Screen Shot 2021-12-02 at 17.07.29.png" width="880" height="211"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#connect-to-your-smart-contract-from-the-frontend"&gt;
  &lt;/a&gt;
  Connect to your Smart Contract from the frontend
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;In this section, we will use the code from the &lt;a href="https://eda.hashnode.dev/intro-to-dapps-create-your-dapp-frontend-withreact"&gt;Intro to dApp's: Create your dApp frontend w/React&lt;/a&gt; post. Follow the steps there to create your frontend w/React. Make sure you have ethers.js installed.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#building-the-frontend-of-your-dapp"&gt;
  &lt;/a&gt;
  Building the frontend of your dApp
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Add the &lt;strong&gt;contract address&lt;/strong&gt; to App.js.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// add the contract address
const contractAddress = " "
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We need to add the &lt;strong&gt;contract ABI.&lt;/strong&gt; Copy the ABI file (greeter.json) from the smart contract and add it under /src in the react project. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eHw10qgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638454181519/23ZMMuG2t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eHw10qgU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638454181519/23ZMMuG2t.png" alt="Screen Shot 2021-12-02 at 17.09.34.png" width="880" height="280"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Import greeter.json which is the contract abi to App.js.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import Greeter from './greeter.json'
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Import "useRef" from react to store the mutable greeting value to App.js.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useEffect, useState,  useRef } from 'react';
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inside the App construct on App.js define a new variable to keep the greeting message.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const userGreeting = useRef();
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add the functions to get the greeter message and another to set the greeter message. Have a look at the code below, I have added comments to explain what's going on. Add the code snippet to App.js&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const getGreeting = async () =&amp;gt;  {
 // check that there is a wallet connected
 const { ethereum } = window;
   if (ethereum) {
     // provider is a connection to the ethereum node
     const provider = new ethers.providers.Web3Provider(ethereum);
     // signer is used to sign messages and transactions
     const signer = provider.getSigner();
     // connect to the smart contract 
     const contract = new ethers.Contract(edasSmartContract, Greeter.abi, signer);
     // call the greet function on the smart contract
     const message = await contract.greet();
     // pop up the greet message 
     alert(message);
   }
}
const setGreeting = async (event) =&amp;gt; { 
 event.preventDefault();
 if (userGreeting.current.value === '') {
   return;
 }
 const { ethereum } = window;
 if (ethereum) {
   const provider = new ethers.providers.Web3Provider(ethereum);
   const signer = provider.getSigner();
   const contract = new ethers.Contract(edasSmartContract, Greeter.abi, signer);
   const transaction = await contract.setGreeting(userGreeting)
   await transaction.wait()
   getGreeting() // go back to the getGreeting() func to give the user the greeting 
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next, modify the walletConnected() component to display buttons which call the getGreeting() and setGreeting() functions.&lt;br&gt;
&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;//wallet connected
const walletConnected = () =&amp;gt; (
&amp;lt;div&amp;gt;
  &amp;lt;p&amp;gt;Connected to the wallet&amp;lt;/p&amp;gt;
  &amp;lt;button onClick={getGreeting}&amp;gt;Greet&amp;lt;/button&amp;gt;
  &amp;lt;br/&amp;gt;
  &amp;lt;form onSubmit={setGreeting}&amp;gt;
   &amp;lt;button type="submit"&amp;gt;
     Submit New Greeting Message
   &amp;lt;/button&amp;gt;
   &amp;lt;br/&amp;gt;
   &amp;lt;textarea
     ref={userGreeting}
     placeholder="add your new greeting message here!"
   &amp;gt;&amp;lt;/textarea&amp;gt;
   &amp;lt;/form&amp;gt;
 &amp;lt;/div&amp;gt;
);
&lt;/code&gt;&lt;/pre&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Run the app with the command below. Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to view it in the browser.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm start 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;🙌  If everything is working, when you click the "Greet" you should see the greeting message pop up. You can also change the greet message by submitting a new one; it will ask you to sign and pay for the transaction since you are performing an action on the Rinkeby Network. (I've made some changes to App.css to make my UI prettier 😀)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qn0jO3Cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638470086396/O7m4hguPeF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qn0jO3Cz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1638470086396/O7m4hguPeF.png" alt="Screen Shot 2021-12-02 at 21.34.14.png" width="880" height="204"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;This is a basic introduction to creating your own dApp on Ethereum. As a next step, I'd highly recommend the following resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://buildspace.so/"&gt;Buildspace&lt;/a&gt;: a platform for developers to learn about web3 by creating cool projects. It's a fantastic learning resource where you can also connect with other fellow developers looking to get in the web3 world&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://cryptozombies.io/"&gt;Cryptozombies&lt;/a&gt;: an interactive platform for making smart contracts in Solidity or Libra.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you enjoyed the article! If you have any questions or comments, feel free to drop them below or reach out to me from &lt;a href="https://twitter.com/edatweets_"&gt;Twitter!&lt;/a&gt; &lt;/p&gt;

</description>
      <category>web3</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How I bought loading time of a media from ~3s to  ~100ms or less</title>
      <author>Rohith Gilla</author>
      <pubDate>Fri, 10 Dec 2021 08:34:56 +0000</pubDate>
      <link>https://dev.to/gillarohith/how-i-bought-loading-time-of-a-media-from-3s-to-100ms-or-less-3m2e</link>
      <guid>https://dev.to/gillarohith/how-i-bought-loading-time-of-a-media-from-3s-to-100ms-or-less-3m2e</guid>
      <description>&lt;p&gt;Hello, in this short blog post we will try to cover on how to improve media loading time when you access from firebase storage.&lt;/p&gt;

&lt;p&gt;This approach is very useful when dealing with media content rich applications, for example social media apps.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL:DR
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-it-started"&gt;
  &lt;/a&gt;
  How  it started
&lt;/h3&gt;

&lt;p&gt;It started with 3.8s to load the image which is off 401KB from the bucket.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q8YNhzF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/770QiCJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q8YNhzF7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/770QiCJ.png" alt="https://i.imgur.com/770QiCJ.png" width="880" height="576"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-is-it-going"&gt;
  &lt;/a&gt;
  How is it going
&lt;/h3&gt;

&lt;p&gt;It ended up with 71ms 😎  for the same size of the image from the bucket.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RFZ_Jp7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/0YLNs4r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RFZ_Jp7a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/0YLNs4r.png" alt="https://i.imgur.com/0YLNs4r.png" width="880" height="590"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is an example on how can you improve it when you are using Firebase Storage.&lt;/p&gt;

&lt;p&gt;Note, this approach may not be helpful for you if &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Your bucket data is not public&lt;/li&gt;
&lt;li&gt;Want to have some authorisation to view the media&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#inspiration"&gt;
  &lt;/a&gt;
  Inspiration
&lt;/h2&gt;

&lt;p&gt;Usually social media application, the media will be public. Meaning if you get the url you can access it.&lt;/p&gt;

&lt;p&gt;Best example is instagram, in instagram though a profile is private, if you have the image url of any of the post, and try to open in incognito browser the image loads.&lt;/p&gt;

&lt;p&gt;On further analysis you can see the url is just plain with some cache controls, it doesn't have any media key or some keys.&lt;/p&gt;

&lt;p&gt;I have analysed the response of the image from instagram url&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Image size is very low, amazing how well they pull off the compression without loosing quality.&lt;/li&gt;
&lt;li&gt;Cache headers are configured well.&lt;/li&gt;
&lt;li&gt;TTFB is insanely low&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Image size, I really can't tinker around with that since the application has active users and don't want to mess that database urls 😛&lt;/p&gt;

&lt;p&gt;The problem with Firebase Storage is the storage bucket is in single location, so even say we optimise storage, if the bucket is in US the user from Australia will be cursing the application since it takes even more time for them.&lt;/p&gt;

&lt;p&gt;One way that I have decided to approach the problem is using CDN!&lt;/p&gt;

&lt;p&gt;Content Delivery Network is Magic&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CQTyVPCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://storage.googleapis.com/gweb-cloudblog-publish/images/cdn-5mkui.max-700x700.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CQTyVPCe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://storage.googleapis.com/gweb-cloudblog-publish/images/cdn-5mkui.max-700x700.PNG" alt="https://storage.googleapis.com/gweb-cloudblog-publish/images/cdn-5mkui.max-700x700.PNG" width="700" height="372"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;This is an old image, you can assume this has upgraded to many folds&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now one good thing is that firebase storage buckets are accessible in GCP, which means we can use Google Cloud Platform tools to setup Cloud CDN to the storage bucket we had.&lt;/p&gt;

&lt;p&gt;I have followed &lt;a href="https://cloud.google.com/cdn/docs/setting-up-cdn-with-bucket"&gt;this&lt;/a&gt; guide step by step and was able to set it up seemlessly.&lt;/p&gt;

&lt;p&gt;I have followed the &lt;code&gt;Console&lt;/code&gt; method and not &lt;code&gt;gcloud&lt;/code&gt; cli way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alternatives"&gt;
  &lt;/a&gt;
  Alternatives
&lt;/h2&gt;

&lt;p&gt;Now we know that not everyone uses &lt;strong&gt;GCP&lt;/strong&gt; so what are the other alternatives you may ask.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cloudinary is one of the OG in this era, you get amazing performance with cloudinary.&lt;/li&gt;
&lt;li&gt;If you are in AWS eco system, CloudFront is the service you are looking for. Here is &lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/cloudfront-https-requests-s3/"&gt;guide&lt;/a&gt; on how you can add that to S3 bucket.&lt;/li&gt;
&lt;li&gt;Supabase gives you CDN to their Storage Tier out of the box, you need not customise anything 😀&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want more such short articles let me know in the comments or by reacting to the heart emoji, will write more such content.&lt;/p&gt;

&lt;p&gt;Until then take care!&lt;/p&gt;

&lt;p&gt;Rohith Gilla&lt;/p&gt;

</description>
      <category>cloud</category>
      <category>todayilearned</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>Add AutoMapper to .Net 6 </title>
      <author>Mohamad Lawand</author>
      <pubDate>Fri, 10 Dec 2021 08:24:12 +0000</pubDate>
      <link>https://dev.to/moe23/add-automapper-to-net-6-3fdn</link>
      <guid>https://dev.to/moe23/add-automapper-to-net-6-3fdn</guid>
      <description>&lt;p&gt;In this article we will be adding AutoMapper to our AspNetCore 6 application. &lt;/p&gt;

&lt;p&gt;You can watch the full video on Youtube &lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jmHKWdMzihY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The first thing we need to do is add the packages&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;dotnet add package AutoMapper &lt;span class="nt"&gt;--version&lt;/span&gt; 10.1.1
dotnet add package AutoMapper.Extensions.Microsoft.DependencyInjection &lt;span class="nt"&gt;--version&lt;/span&gt; 8.1.1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next step is adding the AutoMapper to our DI container, inside the program.cs we need to add the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Services&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;AddAutoMapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;AppDomain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CurrentDomain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;GetAssemblies&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now its time to create our AutoMapper profiles, so on the root directory of our application we need to create a folder called Profiles, inside the Profiles folder we will create a new class called UserProfile ("We can call the class anything we want, but per convention we need to name the class based on the entity we want to map as well add the word profile to it"). &lt;/p&gt;

&lt;p&gt;We are going to map the below entity ("User") to the a Dto ("UserDto")&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;Guid&lt;/span&gt; &lt;span class="n"&gt;Id&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;FirstName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;LastName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Phone&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;DateTime&lt;/span&gt; &lt;span class="n"&gt;DateOfBirth&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Country&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Address&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;MobileNumber&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Sex&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserDto&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;FirstName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;LastName&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Email&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Phone&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;DateOfBirth&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;string&lt;/span&gt; &lt;span class="n"&gt;Country&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now inside the UserProfile class we need to add the following&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserProfile&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Profile&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;UserProfile&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;CreateMap&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;UserDto&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FirstName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;FirstName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;LastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Email&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Convert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ToDateTime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateOfBirth&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateOfBirth&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Phone&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Phone&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Country&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s"&gt;$"&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Country&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ForMember&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;dest&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;dest&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;opt&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;opt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;MapFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt; &lt;span class="p"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The UserProfile class MUST inherit from Profile class in order for AutoMapper to recognise it.&lt;/p&gt;

&lt;p&gt;Inside the constructor we define the mapping between the Entity and the Dto. &lt;/p&gt;

&lt;p&gt;Once we complete our profile mapping its now to utilise our new map in our controller.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UsersController&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ControllerBase&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="n"&gt;IUnitOfWork&lt;/span&gt; &lt;span class="n"&gt;_unitOfWork&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// define the mapper&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;readonly&lt;/span&gt; &lt;span class="n"&gt;IMapper&lt;/span&gt; &lt;span class="n"&gt;_mapper&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;// initialise the dependencies with constructor initialisation&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;UsersController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;IMapper&lt;/span&gt; &lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;IUnitOfWork&lt;/span&gt; &lt;span class="n"&gt;unitOfWork&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;   
        &lt;span class="n"&gt;_mapper&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mapper&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="n"&gt;_unitOfWork&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;unitOfWork&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;HttpPost&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="n"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;IActionResult&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nf"&gt;AddUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserDto&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// utilise the mapping :)&lt;/span&gt;
        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_mappedUser&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_mapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;User&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_unitOfWork&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;Add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;_mappedUser&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="n"&gt;_unitOfWork&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;CompleteAsync&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;Result&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;UserDto&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;();&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Content&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nf"&gt;CreatedAtRoute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"GetUser"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_mappedUser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Id&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// return a 201&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So basically we need to initialise the mapper with constructor initialisation.&lt;/p&gt;

&lt;p&gt;Then we need to utilise as follow&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight csharp"&gt;&lt;code&gt;        &lt;span class="kt"&gt;var&lt;/span&gt; &lt;span class="n"&gt;_mappedUser&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_mapper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Entity&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;(&lt;/span&gt;&lt;span class="n"&gt;dto&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;AutoMapper is a powerful tool to keep in our toolset while developing any .Net applications.&lt;/p&gt;

</description>
      <category>dotnet</category>
      <category>automapper</category>
      <category>csharp</category>
      <category>aspnetcore</category>
    </item>
    <item>
      <title> রিয়েক্ট রাউটার ডম v6 - Changes &amp; Updates</title>
      <author>Shakil Ahmed Atik</author>
      <pubDate>Fri, 10 Dec 2021 08:20:57 +0000</pubDate>
      <link>https://dev.to/shakilahmedatik/riyyektt-raauttaar-ddm-v6-changes-updates-2jbc</link>
      <guid>https://dev.to/shakilahmedatik/riyyektt-raauttaar-ddm-v6-changes-updates-2jbc</guid>
      <description>&lt;p&gt;সম্প্রতি React Router Dom তাদের ভার্সন আপডেট করে ভার্সন ৬ রিলিজ করেছে। এই ভার্সনে বেশ কিছু ব্রেকিং চেঞ্জ এবং আপডেট এসেছে যেগুলো পূর্ববর্তী ভার্সন গুলো থেকে বেশ ভিন্ন এবং নতুন। আজকের এই ব্লগে React Router Dom ভার্সন ৬ এর সকল ব্রেকিং চেঞ্জ এবং নিউ ফিচার গুলো সম্পর্কে উদাহরন সহ বিস্তারিত আলোচনা করা হবে।&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#%E0%A6%95%E0%A6%BF%E0%A6%AD%E0%A6%BE%E0%A6%AC%E0%A7%87-%E0%A6%87%E0%A6%A8%E0%A7%8D%E0%A6%B8%E0%A6%9F%E0%A6%B2-%E0%A6%95%E0%A6%B0%E0%A6%AC%E0%A7%8B"&gt;
  &lt;/a&gt;
  কিভাবে ইন্সটল করবো?
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Npm: npm install react-router@next react-router-dom@next&lt;/code&gt;&lt;br&gt;
&lt;code&gt;Yarn: yarn add react-router@next react-router-dom@next&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#1-switch-%E0%A6%8F%E0%A6%B0-%E0%A6%AA%E0%A6%B0%E0%A6%BF%E0%A6%AC%E0%A6%B0%E0%A7%8D%E0%A6%A4%E0%A7%87-routes-%E0%A6%8F%E0%A6%B8%E0%A7%87%E0%A6%9B%E0%A7%87"&gt;
  &lt;/a&gt;
  1. Switch এর পরিবর্তে Routes এসেছে
&lt;/h2&gt;

&lt;p&gt;React Router Dom ভার্সন ৬ এ  রিমুভ করে এর পরিবর্তে  আনা হয়েছে। এটিতে  এর প্রায় সব বৈশিষ্ট্য থাকার পাশাপাশি বেশ কিছু এক্সটা ফিচার রয়েছে।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;উদাহরনঃ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v5&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { BrowserRouter, Switch, Route } from 'react-router-dom';
const App = () =&amp;gt; {
  return (
    &amp;lt;BrowserRouter&amp;gt;
      &amp;lt;Switch&amp;gt;
        &amp;lt;Route exact path="/" component={Home} /&amp;gt;
        &amp;lt;Route path="/dashboard" component={Dashboard} /&amp;gt;
      &amp;lt;/Switch&amp;gt;
    &amp;lt;/BrowserRouter&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { BrowserRouter, Routes, Route } from 'react-router-dom';
const App = () =&amp;gt; {
  return (
    &amp;lt;BrowserRouter&amp;gt;
      &amp;lt;Routes&amp;gt;
        &amp;lt;Route path="/" element={&amp;lt;Home /&amp;gt;} /&amp;gt;
        &amp;lt;Route path="dashboard" element={&amp;lt;Dashboard/&amp;gt;} /&amp;gt;
      &amp;lt;/Routes&amp;gt;
    &amp;lt;/BrowserRouter&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;ভার্সন ৬ এ ভার্সন ৫ এর মতন আর component কে প্রপ্স বা চিল্ড্রেন আঁকারে পাঠানো লাগেনা। element প্রপ এর ভেতর jsx ফরমেটে component কে পাঠাতে হয়।&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-component-%E0%A6%8F%E0%A6%B0-%E0%A6%AC%E0%A6%A6%E0%A6%B2%E0%A7%87-%E0%A6%8F%E0%A6%B8%E0%A7%87%E0%A6%9B%E0%A7%87-element-%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A6%AA"&gt;
  &lt;/a&gt;
  2. component এর বদলে এসেছে element প্রপ
&lt;/h2&gt;

&lt;p&gt;আপনি যদি উপরের উদাহরণে লক্ষ্য করেন, ভার্সন ৬ এ  আমরা component এর পরিবর্তে element ব্যবহার করছি। এটি অনেক হেল্পফুল একটা ফিচার, এখন আমরা সরাসরি element e  প্রপস পাঠাতে পারি।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;উদাহরনঃ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;u&gt;&lt;strong&gt;React Router v5&lt;/strong&gt;&lt;/u&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route exact path="/" component={Home} /&amp;gt;
&amp;lt;Route path="/dashboard" render={routeProps =&amp;gt; (
    &amp;lt;Dashboard isAdmin={true} /&amp;gt;
  )}
/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route path="/" element={&amp;lt;Home /&amp;gt;} /&amp;gt;
&amp;lt;Route path="dashboard" element={&amp;lt;Dashboard isAdmin={true} /&amp;gt;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-exact-%E0%A6%8F%E0%A6%AC%E0%A6%82-strict-%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A6%AA-%E0%A6%97%E0%A6%BE%E0%A7%9F%E0%A7%87%E0%A6%AC%E0%A7%81%E0%A6%B2-%E0%A6%B9%E0%A6%BE%E0%A6%93%E0%A7%9F%E0%A6%BE"&gt;
  &lt;/a&gt;
  3. Exact এবং strict প্রপ গায়েবুল হাওয়া
&lt;/h2&gt;

&lt;p&gt;ভার্সন ৬ এ সবগুলো রাউট exactly ম্যাচ করে বাই ডিফল্ট তাই extact এবং strict প্রপের প্রয়োজন নেই।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;উদাহরনঃ&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v5&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route exact path="/" component={Home} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route path="/" element={&amp;lt;Home /&amp;gt;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-relative-paths-%E0%A6%8F%E0%A6%AC%E0%A6%82-links"&gt;
  &lt;/a&gt;
  4.  Relative paths এবং links
&lt;/h2&gt;

&lt;p&gt;ভার্সন ৬ এ, paths এবং link দূটোই তাদের পেরেন্টে রাউটের সাথে রিলেটিভ। তাই এখন আমাদের রিলেটিভ পাথের প্রয়োজন হলে আমরা  “/” ব্যবহার করা ছাড়াই সেটা করতে পারি।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;উদাহরনঃ&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v5&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route exact path="/" component={Home} /&amp;gt;
&amp;lt;Route path="/dashboard" component={Dashboard} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route path="/" element={&amp;lt;Home /&amp;gt;} /&amp;gt;
&amp;lt;Route path="dashboard" element={&amp;lt;Dashboard /&amp;gt;} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#5-nested-routes-%E0%A6%8F%E0%A6%96%E0%A6%A8-%E0%A6%86%E0%A6%B0%E0%A7%8B-%E0%A6%B8%E0%A6%B9%E0%A6%9C"&gt;
  &lt;/a&gt;
  5. Nested Routes এখন আরো সহজ
&lt;/h2&gt;

&lt;p&gt;রেগুলার রিয়েক্ট এলিমেন্টের মতন এখন শুধু চাইল্ড রাউট গুলোকে পেরেন্ট রাউট দিয়ে র‍্যাপ করে দিলেই হয়ে যাবে নেস্টেড রাউট।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;উদাহরনঃ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v5&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route exact path="/" component={Home} /&amp;gt;
&amp;lt;Route path="/users" component={Users} /&amp;gt;
// ....
users.js
import { useRouteMatch } from 'react-router-dom';
const Users = () =&amp;gt; {
  const { path } = useRouteMatch();
return (
    &amp;lt;div&amp;gt;
      &amp;lt;Switch&amp;gt;
        &amp;lt;Route path={`${path}/:id`} component={UserInfo} /&amp;gt;
        &amp;lt;Route path={`${path}/profile`} component={UserProfile} /&amp;gt;
      &amp;lt;/Switch&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;Route path="/" element={&amp;lt;Home /&amp;gt;} /&amp;gt;
&amp;lt;Route path="users" element={&amp;lt;Users /&amp;gt;}&amp;gt;
  &amp;lt;Route path=":id" element={&amp;lt;UserInfo /&amp;gt;} /&amp;gt;
  &amp;lt;Route path="profile" element={&amp;lt;UserProfile /&amp;gt;} /&amp;gt;
&amp;lt;/Route&amp;gt;
// ....
users.js
import { Outlet } from 'react-router-dom';
const Users = () =&amp;gt; {
  return (
    &amp;lt;div&amp;gt;
      &amp;lt;Outlet/&amp;gt;
    &amp;lt;/div&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#6-usehistory-%E0%A6%8F%E0%A6%B0-%E0%A6%AA%E0%A6%B0%E0%A6%BF%E0%A6%AC%E0%A6%B0%E0%A7%8D%E0%A6%A4%E0%A7%87-%E0%A6%8F%E0%A6%B8%E0%A7%87%E0%A6%9B%E0%A7%87-usenavigte"&gt;
  &lt;/a&gt;
  6. useHistory এর পরিবর্তে এসেছে useNavigte
&lt;/h2&gt;

&lt;p&gt;useHistory কে গায়েবুল হাওয়া করে দিয়ে এর পরিবর্তে চলে এসেছে আরো বেশি পাওয়ারফুল এবং ফিচার প্যাকড useNavigate হুক।&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;উদাহরনঃ&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v5&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useHistory } from 'react-router-dom';
const CustomButton = props =&amp;gt; {
  const history = useHistory();
  const handleClick = () =&amp;gt; {
    history.push('/users');
  }
  return &amp;lt;button onClick={handleClick}&amp;gt;{props.label}&amp;lt;/button&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;u&gt;React Router v6&lt;/u&gt;&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import { useNavigate } from 'react-router-dom';
const CustomButton = props =&amp;gt; {
  const navigate = useNavigate();
  const handleClick = () =&amp;gt; {
    navigate('/users');
  }
  return &amp;lt;button onClick={handleClick}&amp;gt;{props.label}&amp;lt;/button&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#7-%E0%A6%86%E0%A6%B0%E0%A7%8B-%E0%A6%AC%E0%A7%87%E0%A6%B6%E0%A6%BF-%E0%A6%85%E0%A6%AA%E0%A6%9F%E0%A6%BF%E0%A6%AE%E0%A6%BE%E0%A6%87%E0%A6%9C%E0%A6%A1-%E0%A6%86%E0%A6%B0%E0%A7%8B-%E0%A6%AC%E0%A7%87%E0%A6%B6%E0%A6%BF-%E0%A6%AA%E0%A6%BE%E0%A6%93%E0%A7%9F%E0%A6%BE%E0%A6%B0%E0%A6%AB%E0%A7%81%E0%A6%B2"&gt;
  &lt;/a&gt;
  7. আরো বেশি অপটিমাইজড, আরো বেশি পাওয়ারফুল
&lt;/h2&gt;

&lt;p&gt;ভার্সন ৫ এর চেয়ে ভার্সন ৬ অনেক বেশি পাওয়ারফুল এবং ফিচার সমৃদ্ব হওয়ার পরেও এর সাইজ ভার্সন ৫ এর প্রায় অর্ধেকেরও কম।&lt;/p&gt;

&lt;p&gt;ভার্সন ৫ঃ &lt;code&gt;২৮.৪ kb&lt;/code&gt;&lt;br&gt;&lt;br&gt;
ভার্সন ৬ঃ &lt;code&gt;১০.২ kb&lt;/code&gt; &lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Debounced Hover on Nested Components Using Event Delegation</title>
      <author>Jimmy Yeung</author>
      <pubDate>Fri, 10 Dec 2021 08:20:42 +0000</pubDate>
      <link>https://dev.to/jimmyyeung/debounced-hover-on-nested-components-using-event-delegation-18ji</link>
      <guid>https://dev.to/jimmyyeung/debounced-hover-on-nested-components-using-event-delegation-18ji</guid>
      <description>&lt;h2&gt;
  &lt;a href="#consider-the-following-case"&gt;
  &lt;/a&gt;
  Consider the following case:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;FirstLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement1&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement2&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where we want to fire a function &lt;code&gt;logAnalytics()&lt;/code&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;when the cursor is hovered on a &lt;code&gt;DeepestElement&lt;/code&gt; for some seconds (e.g. 1s)&lt;/li&gt;
&lt;li&gt;and we want to know which &lt;code&gt;DeepestElement&lt;/code&gt; is captured (Consider some of the info needs to come from the parent components, so we couldn't simply add a listener in &lt;code&gt;DeepestElement&lt;/code&gt;s)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#one-of-the-approach-is"&gt;
  &lt;/a&gt;
  One of the approach is
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;pass &lt;code&gt;onMouseEnter&lt;/code&gt; handlers into nested div, with the use of debounce from &lt;code&gt;lodash-es&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;FirstLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt;
        &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{(&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;logAnalytic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Some other info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
      &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement1&lt;/span&gt;
       &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement2&lt;/span&gt;
       &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;     &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Delay for one second&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;debouncedMouseEnter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;
    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;debounce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;
      &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;debouncedMouseEnter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;someLabelType1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// Delay for one second&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;debouncedMouseEnter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;
    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;debounce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt;
      &lt;span class="nx"&gt;onMouseEnter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;debouncedMouseEnter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;someLabelType2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But seems lots of useless listeners are added...could we do it in a simpler way?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#event-delegation-approach"&gt;
  &lt;/a&gt;
  Event Delegation Approach
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;First we define a hook &lt;code&gt;useDebounceHover&lt;/code&gt;, the input &lt;code&gt;onHover&lt;/code&gt; will be called &lt;code&gt;onMouseOut&lt;/code&gt; if the time difference between &lt;code&gt;onMouseOver&lt;/code&gt; and &lt;code&gt;onMouseOut&lt;/code&gt; &amp;gt; 1s (&lt;code&gt;onMouseEnter&lt;/code&gt; cannot be used in event delegation, check &lt;a href="https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave#:~:text=Events%20mouseenter%2Fmouseleave%20are%20like,from%20descendants%2C%20are%20not%20counted"&gt;here&lt;/a&gt; and &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/mouseenter_event"&gt;here&lt;/a&gt; for more details)
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DOMAttributes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;MouseEvent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ComponentIdToTypeMapping&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;some_data_id_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;someLabelType1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;some_data_id_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;someLabelType2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useDebounceHover&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Element&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="nx"&gt;onHover&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MouseEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;duration&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="nb"&gt;Pick&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DOMAttributes&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;onMouseOver&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;onMouseOut&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;labelToHoverDurationMap&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useRef&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;some_data_id_1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;some_data_id_2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleMouseOver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MouseEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;labelType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ComponentIdToTypeMapping&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;labelToHoverDurationMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handleMouseOut&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;event&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;MouseEvent&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;T&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;now&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;labelType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ComponentIdToTypeMapping&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="nx"&gt;onHover&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;
        &lt;span class="nx"&gt;now&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="nx"&gt;labelToHoverDurationMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;duration&lt;/span&gt;
      &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;onHover&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;labelToHoverDurationMap&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;labelType&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;onMouseOver&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;handleMouseOver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;onMouseOut&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;handleMouseOut&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useDebounceHover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;And so you could:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;FirstLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;onMouseOver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;onMouseOut&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useDebounceHover&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;logAnalytic&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; 
      &lt;span class="nx"&gt;onMouseOver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onMouseOver&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="nx"&gt;onMouseOut&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;onMouseOut&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
       &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
       &lt;span class="p"&gt;...&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;SecondLayeredElement&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement1&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;DeepestElement2&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
     &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DeepestElement1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;DeepestElement2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;DeepestElement2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The presentation layer should be simpler coz with the hook, we just need to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add a parent div for &lt;code&gt;onMouseOver&lt;/code&gt; and &lt;code&gt;onMouseOut&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;add &lt;code&gt;data-id&lt;/code&gt; to the deepest components&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Note that &lt;a href="https://dev.to/thawsitt/should-i-use-event-delegation-in-react-nl0"&gt;React has done some optimization&lt;/a&gt; so the performance w/o event delegation are similar. &lt;strong&gt;Event Delegation does not help in performance in React.&lt;/strong&gt; But for simplicity, actually my team prefers to use Event Delegation.&lt;/p&gt;

&lt;p&gt;But again, there's always trade-off and it depends on different cases ;D.&lt;/p&gt;

</description>
      <category>react</category>
      <category>eventdelegation</category>
      <category>hover</category>
      <category>simplicity</category>
    </item>
    <item>
      <title>GUI in Python Using Tkinter</title>
      <author>Anjali Kumawat</author>
      <pubDate>Fri, 10 Dec 2021 08:11:11 +0000</pubDate>
      <link>https://dev.to/anjalikumawat2002/gui-in-python-using-tkinter-gfa</link>
      <guid>https://dev.to/anjalikumawat2002/gui-in-python-using-tkinter-gfa</guid>
      <description>&lt;h2&gt;
  &lt;a href="#gui-in-python"&gt;
  &lt;/a&gt;
  GUI in Python
&lt;/h2&gt;

&lt;p&gt;Python libraries to create Graphical Interfaces :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tkinter&lt;/li&gt;
&lt;li&gt;Python QT&lt;/li&gt;
&lt;li&gt;wxPython&lt;/li&gt;
&lt;li&gt;Kivy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tkinter is an inbuilt Python module used to create simple GUI apps.&lt;/p&gt;

&lt;p&gt;Tk provides following widgets :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;button&lt;/li&gt;
&lt;li&gt;canvas&lt;/li&gt;
&lt;li&gt;checkbutton&lt;/li&gt;
&lt;li&gt;Combobox&lt;/li&gt;
&lt;li&gt;entry&lt;/li&gt;
&lt;li&gt;frame&lt;/li&gt;
&lt;li&gt;label&lt;/li&gt;
&lt;li&gt;labelframe&lt;/li&gt;
&lt;li&gt;listbox&lt;/li&gt;
&lt;li&gt;menu&lt;/li&gt;
&lt;li&gt;menubutton&lt;/li&gt;
&lt;li&gt;message&lt;/li&gt;
&lt;li&gt;notebook&lt;/li&gt;
&lt;li&gt;tk_optionmenu&lt;/li&gt;
&lt;li&gt;panedwindow&lt;/li&gt;
&lt;li&gt;progressbar&lt;/li&gt;
&lt;li&gt;radiobutton&lt;/li&gt;
&lt;li&gt;scale&lt;/li&gt;
&lt;li&gt;scrollbar&lt;/li&gt;
&lt;li&gt;separator&lt;/li&gt;
&lt;li&gt;sizegrip&lt;/li&gt;
&lt;li&gt;spinbox&lt;/li&gt;
&lt;li&gt;text&lt;/li&gt;
&lt;li&gt;treeview&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It provided the following top-level windows :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tk_chooseColor&lt;/li&gt;
&lt;li&gt;tk_chooseDirectory&lt;/li&gt;
&lt;li&gt;tk_dialog&lt;/li&gt;
&lt;li&gt;tk_getOpenFile&lt;/li&gt;
&lt;li&gt;tk_getSaveFile&lt;/li&gt;
&lt;li&gt;tk_messageBox&lt;/li&gt;
&lt;li&gt;tk_popup&lt;/li&gt;
&lt;li&gt;toplevel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tk also provides three geometry managers :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;​   place  -  It positions widgets at absolute locations&lt;/li&gt;
&lt;li&gt;​    grid    -  It arranges widgets in a grid&lt;/li&gt;
&lt;li&gt;​    pack  -  It packs widgets into a cavity&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#basics-of-tkinter"&gt;
  &lt;/a&gt;
  Basics of tkinter
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; import tkinter module&lt;/li&gt;
&lt;li&gt; create the main window (container)&lt;/li&gt;
&lt;li&gt; Add any number of widgets to the main window&lt;/li&gt;
&lt;li&gt; Enter the main event loop&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Eg.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import tkinter
window = Tkinter.Tk()          # creates main window
window.title("GUI")
label = tkinter.Label(window , text="Hello World !!").pack()
window.mainloop()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;mainloop() is used when our application is ready to run. mainloop() is an infinite loop used to run the application, wait for an event to occur and process the event till the window is not closed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#widgets"&gt;
  &lt;/a&gt;
  Widgets
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#button"&gt;
  &lt;/a&gt;
  Button
&lt;/h3&gt;

&lt;p&gt;It is used to add a button in our application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = Button(master, option=value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;master&lt;/strong&gt; represents the parent window.&lt;/p&gt;

&lt;p&gt;activebackground    :   sets the background color when button is under the cursor.&lt;/p&gt;

&lt;p&gt;activeforeground     :    sets the foreground color when button is under the cursor.&lt;/p&gt;

&lt;p&gt;bg                          :    sets normal background color&lt;/p&gt;

&lt;p&gt;fg                          :     sets the foreground color&lt;/p&gt;

&lt;p&gt;command            :     to call a function&lt;/p&gt;

&lt;p&gt;font                        :     sets the font of button label&lt;/p&gt;

&lt;p&gt;image                    :     sets the image on the button&lt;/p&gt;

&lt;p&gt;width                     :     sets the width of the button&lt;/p&gt;

&lt;p&gt;height                  :     sets the height of the button&lt;/p&gt;

&lt;p&gt;justify                   :     LEFT , RIGHT , CENTER&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import tkinter as tk
window = tk.Tk()
window.title("Python")
button = tk.Button(window , text = 'GUI',width = 25,command = window.destroy)
button.pack()
window.mainloop()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ods3yj1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62aefbj9ak9pabk98zwa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ods3yj1I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/62aefbj9ak9pabk98zwa.png" alt="Image description" width="880" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#label"&gt;
  &lt;/a&gt;
  Label
&lt;/h3&gt;

&lt;p&gt;It is used to display text or image.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = Label(master,option=value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;bg               :       sets the normal background color&lt;br&gt;
command     :        to call a function&lt;br&gt;
font              :      sets the font of Label text &lt;br&gt;
image          :       sets the image on the Label&lt;br&gt;
width           :        sets the width of the Label&lt;br&gt;&lt;br&gt;
height           :     sets the height of the Label&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *
root = Tk()
l1 = Label(root,text="GUI Python",bg="pink",width = 25)
l1.pack()
root.mainloop()

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GXHTKqJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rp2agtp2g03s17a008c5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GXHTKqJJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rp2agtp2g03s17a008c5.png" alt="Image description" width="880" height="90"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#entry"&gt;
  &lt;/a&gt;
  Entry
&lt;/h3&gt;

&lt;p&gt;(Text Field)&lt;/p&gt;

&lt;p&gt;It is used to input single line of text.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = Entry(master,option=value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;bg      :       sets the background color&lt;/p&gt;

&lt;p&gt;fg      :       sets the foreground color&lt;/p&gt;

&lt;p&gt;font        :       sets the font for widget&lt;/p&gt;

&lt;p&gt;justify :       LEFT , RIGHT , CENTER&lt;/p&gt;

&lt;p&gt;command :       to call a function&lt;/p&gt;

&lt;p&gt;width       :       sets the width of widget&lt;/p&gt;

&lt;p&gt;height      :       sets the height of widget&lt;/p&gt;

&lt;p&gt;show        :       Normally, the characters that the user types appear in the entry. To make a  .password.   entry that echoes each character as (show = "*")&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#methods-of-entry"&gt;
  &lt;/a&gt;
  Methods of Entry
&lt;/h4&gt;

&lt;p&gt;delete(start,end)           :   delete a character or range of characters&lt;/p&gt;

&lt;p&gt;get()                           :     returns the text of widget&lt;/p&gt;

&lt;p&gt;insert(index,string)     :     inserts text at the specified index&lt;/p&gt;

&lt;p&gt;select_range(start,end) :     selects specified range.&lt;/p&gt;

&lt;p&gt;select_present()            :     returns True if there is a selection,false otherwise&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *
master = Tk()
l1=Label(master,text='first Name')
l1.grid(row=0)
l2=Label(master,text='Last Name')
l2.grid(row=1)
e1=Entry(master)
e2=Entry(master)
e1.grid(row=0,column=1)
e2.grid(row=1,column=1)
mainloop()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vsOsd9E6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10au0b7qovh4bhnc781p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vsOsd9E6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/10au0b7qovh4bhnc781p.png" alt="Image description" width="308" height="123"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#text"&gt;
  &lt;/a&gt;
  Text
&lt;/h3&gt;

&lt;p&gt;It is used to edit multi line text and formate the way it has to be displayed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;t = Text(master,option = value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;highlightcolor      :       set the color of focus highlight&lt;/p&gt;

&lt;p&gt;insertbackground  :     set the background of the widget&lt;/p&gt;

&lt;p&gt;bg                       :      sets the normal background color&lt;/p&gt;

&lt;p&gt;fg                        :     sets the foreground color&lt;/p&gt;

&lt;p&gt;bd                       :      sets width of the border around the widget. (Default is 2 pixels)&lt;/p&gt;

&lt;p&gt;font                       :        sets the font&lt;/p&gt;

&lt;p&gt;image                  :        sets the image&lt;/p&gt;

&lt;p&gt;width                   :       sets the width (in pixels)&lt;/p&gt;

&lt;p&gt;height                 :        sets the height (in lines)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *
root = Tk()
t = Text(root , height = 4,width=40)
t.pack()
t.insert(END,'ANJALI KUMAWAT \nCOMPUTER SCIENCE UNDERGRAD \nGWOC"21" CONTRIBUTOR')
mainloop()

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0icy3tcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m244z16lq36nd428cfnk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0icy3tcD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/m244z16lq36nd428cfnk.png" alt="Image description" width="404" height="108"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#methods-of-text"&gt;
  &lt;/a&gt;
  Methods of Text
&lt;/h4&gt;

&lt;p&gt;delete(start,end)   -   deletes a specific character or a range of text&lt;br&gt;
get(start,end)         -       returns a specific character or a range of text&lt;br&gt;
insert(index,string)   -       inserts text at the specified index&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#checkbutton"&gt;
  &lt;/a&gt;
  CheckButton
&lt;/h3&gt;

&lt;p&gt;It is used to display a number of options to a user as toggle buttons.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = CheckButton(master , option = value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;bg              :       sets background color&lt;/p&gt;

&lt;p&gt;fg               :      sets foreground color&lt;/p&gt;

&lt;p&gt;command :       to call a function&lt;/p&gt;

&lt;p&gt;font              :     sets the font&lt;/p&gt;

&lt;p&gt;image         :     sets the image&lt;/p&gt;

&lt;p&gt;cffvalue        :       A checkbutton's associated control variable will be &lt;strong&gt;set to 0&lt;/strong&gt; when it is cleared(off).We can supply an alternate value for the off state.&lt;/p&gt;

&lt;p&gt;onvalue     :       A checkbutton's associated control variable will be &lt;strong&gt;set to 1&lt;/strong&gt; when it is set(on).We can supply an alternate value for the on state.&lt;/p&gt;

&lt;p&gt;state            :      Default is &lt;strong&gt;state=NORMAL&lt;/strong&gt; but we can use &lt;strong&gt;state=DISANLED&lt;/strong&gt; to grey out the control and make is unresponsive.&lt;/p&gt;

&lt;p&gt;variable        :       This is control variable associated with checkbutton that tracks the current state of widget.Normally this variable is an IntVar and 0 means cleared and 1 means set.&lt;/p&gt;

&lt;p&gt;Width           :       sets the width of widget.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#methods-of-checkbutton"&gt;
  &lt;/a&gt;
  Methods of checkbutton
&lt;/h4&gt;

&lt;p&gt;Deselect()      -       clears the checkbutton&lt;br&gt;
Select()        -       selects the checkbutton&lt;br&gt;
Toggle()            -       reverses the state(on/off)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *
root = Tk()
var1 = IntVar()
var2 = IntVar()
c1 = Checkbutton(root,text = "like Mango ? ",variable = var1,onvalue = 1,offvalue = 0,width = 40)
c2 = Checkbutton(root,text = "like Orange ? ",variable = var2,onvalue = 1,offvalue = 0,width = 40)
c1.pack()
c2.pack()
root.mainloop()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2TKIXhKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nz2bfbyfevkmy4ki0zas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2TKIXhKe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nz2bfbyfevkmy4ki0zas.png" alt="Image description" width="373" height="97"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#radiobutton"&gt;
  &lt;/a&gt;
  RadioButton
&lt;/h3&gt;

&lt;p&gt;It is used to offer multiple choice option to the used and user can select one option.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = RadioButton(master,option=value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;bg              :       sets the background color&lt;/p&gt;

&lt;p&gt;fg               :      sets foreground color&lt;/p&gt;

&lt;p&gt;command :       to call a function&lt;/p&gt;

&lt;p&gt;font              :     sets the font&lt;/p&gt;

&lt;p&gt;image         :     sets the image&lt;/p&gt;

&lt;p&gt;width           :       sets the width&lt;/p&gt;

&lt;p&gt;variable        :       variable associated with the Radiobuttons.&lt;/p&gt;

&lt;p&gt;value           :       when a radiobutton is selected by user,its control variable is set to its associated value. If the control variable is an IntVar , give each radiobutton in the group a different integer value option. If the control variable is a StringVar,give each radiobutton a different string value option.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#methods-of-radiobutton"&gt;
  &lt;/a&gt;
  Methods of Radiobutton
&lt;/h4&gt;

&lt;p&gt;select()        -       selects Radiobutton&lt;br&gt;
deselect()      -       deselects Radiobutton&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *

def select():
    if choice.get()==1:
        order = "Large Pizza"
    elif choice.get()==2:
        order = "Medium Pizza"
    else:
        order = "Small Pizza"
    selection = "You have ordered "+order
    label.config(text=selection)

root = Tk()
root.title("Pizza Corner")
choice = IntVar()
rbLarge = Radiobutton(root, text = "Large Pizza",font=20,variable=choice,value=1,command=select)
rbMedium = Radiobutton(root, text = "Medium Pizza",font=20,variable=choice,value=2,command=select)
rbSmall = Radiobutton(root, text = "Small Pizza",font=20,variable=choice,value=3,command=select)
rbLarge.pack(anchor=W)
rbMedium.pack(anchor=W)
rbSmall.pack(anchor=W)
label = Label(root,text="Choose pizza that you want!!",font=35)
label.pack()
mainloop()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Output is :&lt;/p&gt;

&lt;p&gt;When we are not clicking on any RadioButton - &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gvNgll4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wqcqcm115yhhvi3kjfqs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gvNgll4q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wqcqcm115yhhvi3kjfqs.png" alt="Image description" width="880" height="122"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we are clicking on any RadioButton then -&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---A55lLun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bcgpr5nosgxnuvu2emz6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---A55lLun--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bcgpr5nosgxnuvu2emz6.png" alt="Image description" width="880" height="126"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#spinbox"&gt;
  &lt;/a&gt;
  SpinBox
&lt;/h3&gt;

&lt;p&gt;It is used to select a value from fixed number of values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;window = Spinbox(root,option=value)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;bg              :       sets the background color&lt;/p&gt;

&lt;p&gt;fg               :      sets foreground color&lt;/p&gt;

&lt;p&gt;font              :     sets the font&lt;/p&gt;

&lt;p&gt;justify       :     LEFT,RIGHT,CENTER&lt;/p&gt;

&lt;p&gt;width         :     sets the width for widget&lt;/p&gt;

&lt;p&gt;from_        :      sets the minimum value&lt;/p&gt;

&lt;p&gt;to             :        sets the maximum value&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#methods-for-spinbox"&gt;
  &lt;/a&gt;
  Methods for Spinbox
&lt;/h4&gt;

&lt;p&gt;get()       -       returns the value&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;from tkinter import *

def select():
    string = "Selection is "+str(sp.get())
    l.config(text=string)

root = Tk()
sp = Spinbox(root,from_=0,to=10,command=select,width = 15,font=30)
sp.pack()
l=Label(root,text=" ")
l.pack()
mainloop()

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;​Output is :&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Oyh-gDSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wsvyvemguvt4i61yatrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Oyh-gDSx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wsvyvemguvt4i61yatrg.png" alt="Image description" width="880" height="95"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keep Learning......&lt;br&gt;
Keep Coding......👩‍💻❤️🙌&lt;/p&gt;

</description>
      <category>programming</category>
      <category>tutorial</category>
      <category>python</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Tarantool Running on Apple M1: First Results</title>
      <author>tarantool</author>
      <pubDate>Fri, 10 Dec 2021 07:56:57 +0000</pubDate>
      <link>https://dev.to/tarantool/tarantool-running-on-apple-m1-first-results-1omn</link>
      <guid>https://dev.to/tarantool/tarantool-running-on-apple-m1-first-results-1omn</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_j9qAhma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2ua5hp8t1dbq67zfeby.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_j9qAhma--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r2ua5hp8t1dbq67zfeby.jpg" alt="Image description" width="880" height="496"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Author: Alexey Koryakin&lt;/p&gt;

&lt;p&gt;Apple's M1 chips are not the news any more. Many people know that these chips are fast and that MacOS applications have to be adapted for the new architecture. Tarantool development team decided to take on the same challenge.&lt;/p&gt;

&lt;p&gt;My name is Alexey Koryakin, and I am CTO at &lt;a href="http://www.tarantool.io/en/?utm_source=dev&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2021"&gt;Tarantool&lt;/a&gt;, a part of the VK ecosystem. I will explain why we needed this  even though macOS is not used for production servers; — I will show how we solved the task. and I will share you the benchmark results.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-task-and-the-solution"&gt;
  &lt;/a&gt;
  The Task and the Solution
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://www.tarantool.io/en/?utm_source=dev&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2021"&gt;Tarantool&lt;/a&gt; is a high-performance in-memory computing platform that consists of the database and the application server. Many developers install Tarantool on their office computers and write code there. In many cases, it's more convenient than a separate server.&lt;/p&gt;

&lt;p&gt;Some developers from our team also prefer installing Tarantool locally. Among them is our product manager, who bought a new M1-based MacBook Air at the beginning of the year. So one time he asked our technical team: &lt;em&gt;"Why doesn't Tarantool run natively on the M1 chip? I have recently bought a new MacBook Air, and I can launch Tarantool only via Rosetta. The native support of Apple M1 chips could become a cool feature for our community so that people switching to new Macs could efficiently develop Tarantool-based systems"&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The technical team thought and decided:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; Tarantool is known to be very fast. M1 is known to be very fast. And we want to find out how much faster Tarantool could work on M1.&lt;/li&gt;
&lt;li&gt; Apple is actively upgrading its Mac product line, migrating them to M1 chips (and now into M1 Max). Developers and other IT specialists across the world are actively switching to the new platform. The existing x86_64 software is launched via the Rosetta translation environment that impairs the full power of the software (including Tarantool) run on new Apple chips. This must be changed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is how we've ended up with a new task — support of M1 chips &lt;/p&gt;

&lt;p&gt;Around the same time, we were working on the ARM64 support for Linux. Since M1 is essentially ARM64 with some specific features, we assumed that implementing M1 support would be easy. This proved to be not far from the truth: we have finalized most tasks of M1 support with ARM64 support for Linux. The main issues were related to specific features of RISC instructions of ARM architecture. For example, direct transfer of control from one section of the machine code to another one is possible only under 2 MB offsets. Apple ABI that differs from ARM Linux ABI became the distinguishing feature of M1 support. We had to tune Tarantool code specifically for new chips, prying into public &lt;a href="https://developer.apple.com/documentation/xcode/writing-arm64-code-for-apple-platforms"&gt;Apple documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All in all, support of ARM64 and M1 in particular is a relatively simple engineering task. There were some issues, but we were able to resolve them without reading endless specifications and all-nighters. It took us about 4 months, from May until August, to complete the entire endeavor.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#performance-benchmark"&gt;
  &lt;/a&gt;
  Performance Benchmark
&lt;/h2&gt;

&lt;p&gt;M1 is famous for its outstanding performance. Even the code run through Rosetta works fast. We didn't forget the performance either and decided to check how much faster Tarantool could run.&lt;/p&gt;

&lt;p&gt;We compared macOS running on available commodity devices with different hardware. We didn't aim to compare different operating systems or chase after the server CPUs like Xeon. We just wanted to know how much faster Tarantool would run for the developer that switched to a new MacBook, and to assess the perspectives of a new Mac platform. For the test we used several computers owned by the team or available in retail&lt;/p&gt;

&lt;p&gt;● MacBook Pro 16,2 (2020),&lt;br&gt;
● Mac mini 8,1 (2018),&lt;br&gt;
● MacBook Air 10,1 (2020), Apple M1.&lt;/p&gt;

&lt;p&gt;We wrote a &lt;a href="https://gist.github.com/igormunkin/e956396d8fb3348d3ebbad60588af297"&gt;simple benchmark&lt;/a&gt; test  that does three things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; This is Lua code, which means an application server is involved.&lt;/li&gt;
&lt;li&gt; This code writes to the database, which means the transaction engine of the database is involved.&lt;/li&gt;
&lt;li&gt; This code runs on М1 and doesn't crash :)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The benchmark runs in one system thread that starts 50 &lt;a href="http://www.tarantool.io/en/doc/latest/reference/reference_lua/fiber/?utm_source=dev&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2021"&gt;fibers&lt;/a&gt;, each of them inserting 100 operations per one transaction. This scenario provides a greater workload for the CPU rather than for memory or storage. And this is exactly what we need to test the CPU. If the transaction consisted of one or three–four updates, then the workload would rather shift from CPU to RAM or storage.&lt;/p&gt;

&lt;p&gt;We didd multiple tests inserting from 1 up to 20 million records. We repeated every test 15 times and then calculated the median value. These are &lt;a href="https://gist.github.com/igormunkin/e956396d8fb3348d3ebbad60588af297"&gt;complete results&lt;/a&gt; to examine all tests in detail. And here, for illustrative purposes, we show the median value on the diagram.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RBGvZ2m_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3jhvhicp7vhvxj1xyl8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RBGvZ2m_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3jhvhicp7vhvxj1xyl8.png" alt="Wall Clock Benchmark, the median value of 15 iterations. The smaller the value, the faster the code" width="880" height="617"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We see that Tarantool performance on M1 chip is twice better than that of the notebook of the same year based on a different processor.&lt;/p&gt;

&lt;p&gt;Then we have tested M1 for the tasks fulfilled via the Rosetta translator. The performance turned out to be approximately the same as that of the Mac mini 2018, but significantly higher than that of MacBook Pro 2020.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G7oL2C9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvfp8vdrhg639n0e4dqr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G7oL2C9---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/rvfp8vdrhg639n0e4dqr.png" alt="Wall Clock Benchmark. The same devices plus launch via Rosetta" width="800" height="650"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wall Clock Benchmark. The same devices plus launch via Rosetta&lt;/p&gt;

&lt;p&gt;We understand that this doesn't mean double performance of all applications. They all vary in their code, tasks, and conditions. But in any way, you can expect that your local Tarantool installation will work faster.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-sum-up"&gt;
  &lt;/a&gt;
  To Sum Up...
&lt;/h2&gt;

&lt;p&gt;Starting from &lt;a href="https://github.com/tarantool/tarantool/releases/tag/2.10.0-beta1"&gt;2.10.0-beta&lt;/a&gt; Tarantool can natively run on M1 chips. So far this is preliminary support: something may crash or run unstable. We have resolved almost all bugs we knew about, with a few minor ones left. For example, there are some issues with the JIT compiler. But this didn't prevent the team product manager from installing Tarantool on his new MacBook Air and running it every day.&lt;/p&gt;

&lt;p&gt;Later we will resolve other known bugs, and those that the developers will report to us. If you have a new M1 Mac, try the latest version of Tarantool. If something crashes, please &lt;a href="https://github.com/tarantool/tarantool/issues/"&gt;write the bug report&lt;/a&gt;, and we'll help.&lt;/p&gt;

&lt;p&gt;Try Tarantool cluster at &lt;a href="http://try.tarantool.io/?utm_source=dev&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2021"&gt;https://try.tarantool.io&lt;/a&gt;. Download Tarantool at the &lt;a href="https://www.tarantool.io/en/download/os-installation/docker-hub/?utm_source=dev&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2021"&gt;official website&lt;/a&gt;, and get help in the &lt;a href="https://t.me/tarantool?utm_source=dev&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2021"&gt;Telegram chat&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>tutorual</category>
      <category>ios</category>
      <category>m1</category>
      <category>programming</category>
    </item>
    <item>
      <title>5 Steps to Chose Software Development Services in 2022</title>
      <author>Aleksashko</author>
      <pubDate>Fri, 10 Dec 2021 07:54:37 +0000</pubDate>
      <link>https://dev.to/antiloch/5-steps-to-chose-software-development-services-in-2022-24ag</link>
      <guid>https://dev.to/antiloch/5-steps-to-chose-software-development-services-in-2022-24ag</guid>
      <description>&lt;p&gt;Picking a profession has always been a difficult challenge for individuals, no matter what time period they live in. Selecting the job route that would lead them in the proper manner has never been easy for them. People have an interest in engineering and medicine from a young age. Only one choice remained open to the public.&lt;/p&gt;

&lt;p&gt;Software development is a never-ending process that involves analyzing the demands of end users, writing code, fixing bugs, running tests, and executing the final product. It aids in the development of user-friendly websites and mobile apps. Systematic project management strategies are used in software engineering to create complex applications for both small and big businesses.&lt;/p&gt;

&lt;p&gt;For a software development service to thrive in 2022, there are five procedures that must be followed.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#obtaining-the-recommendations"&gt;
  &lt;/a&gt;
  Obtaining the Recommendations
&lt;/h2&gt;

&lt;p&gt;To select a software business that fits your needs and budget is a difficult task. Word of mouth is the best endorsement. Asking around for a well-known &lt;a href="https://www.freshlimesoft.com"&gt;web development firm&lt;/a&gt; is a great way to get referrals from family, friends, and neighbors. You can't go wrong with Google. Ask Google for help if you're stumped and can't discover a solution on your own. Look for your favorites in the yellow pages or corporate listings.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developing-the-capabilities-to-learn"&gt;
  &lt;/a&gt;
  Developing the Capabilities to Learn
&lt;/h2&gt;

&lt;p&gt;Software development is a vocation that needs a lot of time and effort to succeed. TOp-notch software companies give students the opportunity to self-correct their faults and learn from their blunders. To learn coding and programming, you must have a thorough understanding of technical knowledge. You can get the most out of your career if you choose.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#an-understanding-of-programming"&gt;
  &lt;/a&gt;
  An Understanding of Programming
&lt;/h2&gt;

&lt;p&gt;As a developer, coding is a vital tool in your arsenal. In order for them to be successful, they must be well-versed in both front- and back-end development. They include Html and Cascading Style Sheets, JavaScript, Ajax, XML and JSON, PHP and JavaScript, C, C and.NET, Perl, Ruby, and Go.&lt;/p&gt;

&lt;p&gt;A profession in database administration requires significant understanding of relational databases (RDBMS). Datasets having a main and a secondary key may be linked to each other. Numeric and alphanumeric values may be retrieved and matched using these keys.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#acquiring-a-bachelors-degree"&gt;
  &lt;/a&gt;
  Acquiring a Bachelor's Degree
&lt;/h2&gt;

&lt;p&gt;In order to work in the software industry, one must first get an undergraduate degree from an accredited college or university. You must attend a reputable institution in order to get a prestigious degree. It gives you a deep understanding of mathematics, statistics, and computer science. All aspects of software design and development are covered in the software engineering curriculum. An associate degree in software development is the most conventional method of learning about the field. In this course, students are taught about software engineering from both a theoretical and hands-on perspective.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#specialization-is-the-next-step"&gt;
  &lt;/a&gt;
  Specialization is the Next Step
&lt;/h2&gt;

&lt;p&gt;Web development specialization is a higher degree of expertise. Using it helps developers to acquire a degree of excellence and improve their knowledge and experience. In every programming language, you may choose to specialize. In order to get a job as a software systems developer, you may confidently show off your expertise to potential employers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;All in all, these are the procedures to take in 2022 when it comes to selecting &lt;a href="https://www.freshlimesoft.com/services"&gt;software development services&lt;/a&gt;. Software applications are the future of technology, and they will take the world by storm with their cutting-edge and user-friendly design.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>A barebones C++ library template using CMake and Google Test</title>
      <author>Adam.S</author>
      <pubDate>Fri, 10 Dec 2021 07:53:06 +0000</pubDate>
      <link>https://dev.to/basman/a-barebones-c-library-template-using-cmake-and-google-test-44hj</link>
      <guid>https://dev.to/basman/a-barebones-c-library-template-using-cmake-and-google-test-44hj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#objective"&gt;
  &lt;/a&gt;
  Objective
&lt;/h2&gt;

&lt;p&gt;This is a &lt;strong&gt;BAREBONES&lt;/strong&gt; &lt;em&gt;C++&lt;/em&gt; template with &lt;em&gt;Google Test&lt;/em&gt; support using &lt;em&gt;CMake&lt;/em&gt;. It is setup to allow for the building of a &lt;em&gt;static&lt;/em&gt; library using &lt;strong&gt;TDD&lt;/strong&gt; principles; but could be adapted for building a small program. This is in no way the ideal solution.&lt;/p&gt;

&lt;p&gt;This template was created to allow for programming under &lt;em&gt;Mac OS&lt;/em&gt;. But the files should work under other systems.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#directory-structure"&gt;
  &lt;/a&gt;
  Directory Structure
&lt;/h2&gt;

&lt;p&gt;This is the structure that we start with. It should be noted that the &lt;strong&gt;build&lt;/strong&gt; directory will be generated in the root of this structure under &lt;em&gt;VSCode&lt;/em&gt;. This appears, to generally be discouraged and can be changed with some configuration options that I will not go into here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;❯ tree &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nb"&gt;.&lt;/span&gt;
├── CMakeLists.txt
├── README.md
├── src
│   ├── CMakeLists.txt
│   ├── Example.cpp
│   └── Example.hpp
└── tests
    ├── CMakeLists.txt
    └── lib-tester.cpp

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#requirements"&gt;
  &lt;/a&gt;
  Requirements
&lt;/h3&gt;

&lt;p&gt;You will require the following items to be installed. Note that I have used &lt;strong&gt;homebrew&lt;/strong&gt; in order to source the requirements. If you are not using &lt;em&gt;Mac OS&lt;/em&gt; you should be able to find other ways to install the requirements. Google Search will be your friend in this.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#cmake"&gt;
  &lt;/a&gt;
  CMake
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;cmake
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#google-test"&gt;
  &lt;/a&gt;
  Google Test
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;brew &lt;span class="nb"&gt;install &lt;/span&gt;googletest
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#example-execution"&gt;
  &lt;/a&gt;
  Example Execution
&lt;/h2&gt;

&lt;p&gt;Let's build the code in and &lt;em&gt;Out of Source&lt;/em&gt; build folder.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;❯ cmake &lt;span class="nt"&gt;-B&lt;/span&gt; /tmp/testing &lt;span class="nt"&gt;-S&lt;/span&gt; &lt;span class="nb"&gt;.&lt;/span&gt;
&lt;span class="nt"&gt;--&lt;/span&gt; The CXX compiler identification is AppleClang 13.0.0.13000029
&lt;span class="nt"&gt;--&lt;/span&gt; Detecting CXX compiler ABI info
&lt;span class="nt"&gt;--&lt;/span&gt; Detecting CXX compiler ABI info - &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="nt"&gt;--&lt;/span&gt; Check &lt;span class="k"&gt;for &lt;/span&gt;working CXX compiler: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ - skipped
&lt;span class="nt"&gt;--&lt;/span&gt; Detecting CXX compile features
&lt;span class="nt"&gt;--&lt;/span&gt; Detecting CXX compile features - &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="nt"&gt;--&lt;/span&gt; Found GTest: /usr/local/lib/cmake/GTest/GTestConfig.cmake &lt;span class="o"&gt;(&lt;/span&gt;found version &lt;span class="s2"&gt;"1.11.0"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;  
&lt;span class="nt"&gt;--&lt;/span&gt; Configuring &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="nt"&gt;--&lt;/span&gt; Generating &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="nt"&gt;--&lt;/span&gt; Build files have been written to: /tmp/testing
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's compile the code&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;❯ &lt;span class="nb"&gt;cd&lt;/span&gt; /tmp/testing
❯ &lt;span class="nb"&gt;ls
&lt;/span&gt;CMakeCache.txt      CTestTestfile.cmake cmake_install.cmake tests
CMakeFiles          Makefile            src
❯ make
&lt;span class="o"&gt;[&lt;/span&gt; 25%] Building CXX object src/CMakeFiles/mylib.dir/EXample.cpp.o
&lt;span class="o"&gt;[&lt;/span&gt; 50%] Linking CXX static library libmylib.a
&lt;span class="o"&gt;[&lt;/span&gt; 50%] Built target mylib
&lt;span class="o"&gt;[&lt;/span&gt; 75%] Building CXX object tests/CMakeFiles/Test1Tester.dir/lib-tester.cpp.o
&lt;span class="o"&gt;[&lt;/span&gt;100%] Linking CXX executable Test1Tester
&lt;span class="o"&gt;[&lt;/span&gt;100%] Built target Test1Tester
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Things to note: The generated &lt;em&gt;static library&lt;/em&gt; will be called &lt;strong&gt;libmylib.a&lt;/strong&gt; and its name comes from the &lt;strong&gt;project&lt;/strong&gt; variable in the top level &lt;em&gt;CMakeList.txt&lt;/em&gt; file.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cmakelisttxt-contents"&gt;
  &lt;/a&gt;
  CMakeList.txt Contents
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#root"&gt;
  &lt;/a&gt;
  Root
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cmake_minimum_required(VERSION 3.22)
project(mylib
        VERSION 0.1.0.0
        DESCRIPTION "What does it do?"
        LANGUAGES CXX
        )

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED true)
set(CMAKE_POSTION_INDEPENDENT_CODE ON)

enable_testing()

add_subdirectory(src)
add_subdirectory(tests)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;em&gt;project&lt;/em&gt; label here is being used to set several variables.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;mylib&lt;/code&gt; This is used to set the library's name -&amp;gt; &lt;code&gt;libmylib.a&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;enable_testing()&lt;/code&gt; This is used to enable to testing within the IDE&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;add_subdirectory()&lt;/code&gt; This makes the top level aware of the sub-directories. &lt;code&gt;src&lt;/code&gt; is the code source of the library. And &lt;code&gt;tests&lt;/code&gt; is where the source code for the testing code will be written.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#src"&gt;
  &lt;/a&gt;
  src
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;set(LIB_BINARY ${CMAKE_PROJECT_NAME})

set(headers
    Example.hpp)
set(sources
    EXample.cpp)
set(SOURCES ${headers} ${sources})

add_library(${LIB_BINARY} STATIC ${SOURCES})
target_include_directories( ${LIB_BINARY} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;LIB_BINARY&lt;/code&gt; This stores the name of the library to be generated. Coming from &lt;em&gt;project&lt;/em&gt; which was set in the previous &lt;em&gt;CMakeList.txt&lt;/em&gt; covered earlier.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;headers&lt;/code&gt; This will contain references to any and all header files that are need to compile the library.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;sources&lt;/code&gt; This will contain references to any source files that are needed.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;SOURCES&lt;/code&gt; This combines &lt;code&gt;headers&lt;/code&gt; and &lt;code&gt;sources&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;add_library&lt;/code&gt; This tells &lt;em&gt;cmake&lt;/em&gt; that we are declaring we want to generate a library file and not an executable. We also specifiy that it is to be a &lt;strong&gt;Static&lt;/strong&gt; and not &lt;strong&gt;dynamic&lt;/strong&gt; library.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;target_include_directories&lt;/code&gt; this tells &lt;em&gt;cmake&lt;/em&gt; that we should:

&lt;ul&gt;
&lt;li&gt;build a library named &lt;code&gt;lib{LIB_BINARY}.a&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;This directory's contents should be made available to other directories in the main project. This means we will be able to build the test programs using this new library.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#tests"&gt;
  &lt;/a&gt;
  tests
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cmake_minimum_required(VERSION 3.22)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED true)
set(CMAKE_POSTION_INDEPENDENT_CODE ON)

file(GLOB_RECURSE TEST_SOURCES LIST_DIRECTORIES false *.hpp *.cpp)

set(test1 Test1Tester)
set(test1src lib-tester.cpp)

# Specify second test program and source files
#set(test2 Test2Tester)
#set(test2src lib-tester2.cpp)

add_executable(${test1} ${test1src})

# Specify executable for second tester
#add_executable(${test2} ${test2src})

find_package( GTest REQUIRED )      
# adds the gtest include directory
include_directories( ${GTEST_INCLUDE_DIRS} )
# links gtest
target_link_libraries( ${test1} LINK_PUBLIC ${GTEST_LIBRARIES} ${CMAKE_PROJECT_NAME})

# Specify target for second test program
#target_link_libraries( ${test2} LINK_PUBLIC ${GTEST_LIBRARIES} ${CMAKE_PROJECT_NAME})

enable_testing()
add_test(
   NAME ${test1}}
   COMMAND ${test1}
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;file&lt;/code&gt; This another way to get gather the files for compiling. Though it is discouraged.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;test1&lt;/code&gt; This will hold the name of the testing executable.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;test1src&lt;/code&gt; This holds the name of the source file to be used to build the test executable.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;add_executable&lt;/code&gt; This is the executable to be compiled as the test program&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We also need to ensure that we can link in the &lt;em&gt;GTest&lt;/em&gt; library. We do that with the following commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;find_package( GTest REQUIRED )      
# adds the gtest include directory
include_directories( ${GTEST_INCLUDE_DIRS} )

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;This locates the &lt;em&gt;Google Test&lt;/em&gt; libraries that were installed earlier.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Linking the everything together so we have an executable that tests our code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;target_link_libraries( ${test1} LINK_PUBLIC ${GTEST_LIBRARIES} ${CMAKE_PROJECT_NAME})
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;This creates the executable, linking the &lt;em&gt;GTEST&lt;/em&gt; library and the &lt;code&gt;mylib&lt;/code&gt; library&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you look through you will see that I have commented out a &lt;em&gt;second&lt;/em&gt; source and executable. It is possible to build several test programs. This allows you to build different tests programs instead of having one single monalithic test application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#screen-capture"&gt;
  &lt;/a&gt;
  Screen Capture
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X43L9kFI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lx6cbj3neh2g7hbjog6f.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X43L9kFI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lx6cbj3neh2g7hbjog6f.png" alt="VSCode Screen Capture" width="880" height="682"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#github-repo"&gt;
  &lt;/a&gt;
  Github Repo
&lt;/h2&gt;

&lt;p&gt;You can get the &lt;a href="https://github.com/Bas-Man/CMake-CPlusPlus-Lib-GTest"&gt;source here&lt;/a&gt;&lt;/p&gt;

</description>
      <category>cmake</category>
      <category>cpp</category>
      <category>gtest</category>
    </item>
  </channel>
</rss>
