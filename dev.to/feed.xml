<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What Is Green Hat Files?</title>
      <author>Green Hat Files Softwares</author>
      <pubDate>Mon, 23 Aug 2021 12:02:49 +0000</pubDate>
      <link>https://dev.to/greenhatfiles/what-is-green-hat-files-2055</link>
      <guid>https://dev.to/greenhatfiles/what-is-green-hat-files-2055</guid>
      <description>&lt;p&gt;GreenHatFiles is a very unique website that offers a service called Green Hat Files. This is a marketing concept that involves organic SEO (search engine optimization) techniques. If you want to make your online business stand out from the crowd, you need to get the word out about your site and services or products. The way to do this is to get on the first page of Google when people search for a particular keyword.&lt;/p&gt;

&lt;p&gt;By using organic SEO techniques you can get a good page rank and then your site will rank higher for longer. This will create a very high bounce rate (the percentage of people visiting your site who leave within a few minutes). This means that your bounce rate is more than 50%! You are not going to get this kind of results by using normal SEO methods.&lt;/p&gt;

&lt;h2&gt;Is Green Hat Files Legit?&lt;/h2&gt;

&lt;p&gt;Yes, GreenHatFiles Games is a great service for two reasons. First, they have thousands of websites already in place with content already optimized for SEO purposes. This makes it easy for you to get your website listed immediately and start driving traffic immediately. They have tools that allow you to quickly identify the keywords people are using to find your site. This allows you to target those keywords and build content around them.&lt;/p&gt;

&lt;p&gt;The second reason why GreenHatApps is such an excellent service for your website is that they offer an amazing amount of free advice. They have several active forums where you can get expert advice. Some of the topics include building a business website, generating web traffic, optimizing pages etc. They are also a great source for support.&lt;/p&gt;

&lt;h2&gt;Is GreenHatFiles Safe?&lt;/h2&gt;

&lt;p&gt;Many people have asked questions about GreenHatFiles review and the way they work. There have been reviews and discussions on Yahoo Answers. There are many places online where you can ask questions to help you learn how to use this technology for your business. Most people seem to be very pleased with the answers they get. If you do some digging, you will soon find out that people love the help.&lt;/p&gt;

&lt;p&gt;I believe that everyone should at least give it a try. I have had success with it and I am sure other people have had success as well. I personally managed to create my first website using the GreenHat Files. I used it as a base for learning and development and managed to turn it into a very successful business. You never know how far you can go until you try it.&lt;/p&gt;

&lt;h2&gt;How To Download Software From Greenhatfiles?&lt;/h2&gt;

&lt;p&gt;GreenHat Files provides extremely high quality, and in some cases, higher than high SEO standards information software, apps and games. The information is broken down into categories and subcategories so you can get the most benefit for your money. In many cases you can get lifetime value from these sites.&lt;/p&gt;

&lt;p&gt;I have found that using this information has helped me generate more traffic and has helped me make more sales. As an internet marketer, I believe that having good quality information and putting it in front of people who need it can make the world of difference. Sometimes a little knowledge can go a long way. So, if you have questions, you may want to consider Green Hat Files to help your web site.&lt;/p&gt;

&lt;h2&gt;How To Download Games From Greenhatfiles?&lt;/h2&gt;

&lt;p&gt;One great thing about GreenHatFiles Software is the fact that they are completely free. They provide high quality information, but don't cost anything &lt;a href="https://greenhatfiles.com/"&gt;&lt;/a&gt;&lt;a href="https://greenhatfiles.com/"&gt;https://greenhatfiles.com/&lt;/a&gt; . I love that they don't expect you to pay any money to get the information. This is important because many of the paid services tend to place ads on your web page and can be a huge annoyance. With GreenHat Files games, you will only see banners of information that you can view for free.&lt;/p&gt;

&lt;p&gt;Another great thing about GreenHatFiles Apps is that they do a lot of research to get information out there. This information helps to build a community around your site and helps site visitors feel more comfortable about transacting business with you. You can even get special offers and discounts from GreenHatFiles because they monitor and track everything.&lt;/p&gt;

&lt;p&gt;I hope that this little bit of information has helped you understand a little more about what is greenhatamines? I have been using these services for quite some time and they have saved me a TON of money and time. &lt;/p&gt;

&lt;h2&gt;Final Words&lt;/h2&gt;

&lt;p&gt;If you are in need of marketing information that helps to build community awareness, or just general information that can help you learn what is green, then make sure to check out my web site. There are many free reports that you can download, that discuss everything from how to stop drinking caffeine to the latest trends in greenware.&lt;/p&gt;

</description>
      <category>greenhatfiles</category>
      <category>softwares</category>
      <category>gamedev</category>
    </item>
    <item>
      <title>How To Enable Real-Time Merge Conflict Detection in IntelliJ
</title>
      <author>Michael</author>
      <pubDate>Mon, 23 Aug 2021 11:52:16 +0000</pubDate>
      <link>https://dev.to/gitlive/how-to-enable-real-time-merge-conflict-detection-in-intellij-3033</link>
      <guid>https://dev.to/gitlive/how-to-enable-real-time-merge-conflict-detection-in-intellij-3033</guid>
      <description>&lt;p&gt;Ah, the dreaded resolve conflicts popup. You've finished crafting the perfect code, just a quick merge in of master (ahem, main) before you submit your PR, and then... üí•&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9VhR3rS9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629385750547/721xAlFE_.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9VhR3rS9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629385750547/721xAlFE_.png" alt="img-1-full.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If only there was an early warning system for merge conflicts so you could be better prepared or even avoid the conflicts in the first place I hear you say? Well if you are an IntelliJ user today is your lucky day!&lt;/p&gt;

&lt;p&gt;Firstly, you'll need to install and set up &lt;a href="https://plugins.jetbrains.com/plugin/11955-gitlive"&gt;GitLive&lt;/a&gt;. Then if you right click the gutter on IntelliJ, you will see the option to ‚ÄúShow Other's Changes‚Äù.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--79VJTZ-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629381420172/JVuFzhdCH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--79VJTZ-a--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629381420172/JVuFzhdCH.png" alt="img-2-full.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will be disabled if the file open in the editor is not from git or there are no other changes to it from contributors working on other branches (aka you are safe from conflicts). If it's enabled there will be one or more change indicators in the gutter of the editor.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7eNlp6rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386027868/TLFjoPsMb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7eNlp6rU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386027868/TLFjoPsMb.png" alt="img-3-full-2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;These will show you where your teammates have made changes compared to your version of the file and even update in real-time as you and your teammates are editing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p2QqYfSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629718675385/q7tgwkk83.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p2QqYfSe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629718675385/q7tgwkk83.png" alt="key indicators-dark.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you've made a conflicting change you will see the bright red conflict indicator. These conflicts can be uncommitted local changes you have not pushed yet or existing changes on your branch that conflict with your teammates‚Äô changes.&lt;/p&gt;

&lt;p&gt;Click your teammate‚Äôs icon in the gutter to see the diff between your version and theirs, the branch the offending changes are from, and the issue connected to that branch if there is one.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PWgnz_V0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386020142/OYnNBrg8F.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PWgnz_V0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1629386020142/OYnNBrg8F.png" alt="img-5-full-3.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From this popup you can also cherry-pick your teammate‚Äôs change directly from their local version of the file. For simple conflicts this can be a quick way to resolve them as identical changes on different branches will merge cleanly.&lt;/p&gt;

&lt;p&gt;Unfortunately, it's not always possible to resolve a conflict straight away but with the early warning, you'll be better prepared, avoiding any nasty surprises at merge time! &lt;/p&gt;

&lt;p&gt;Check out &lt;a href="https://blog.git.live/gitlive-11.0-Real-time-merge-conflict-detection"&gt;this blog post&lt;/a&gt; or the &lt;a href="https://docs.git.live/docs/mergeconflicts/"&gt;GitLive docs&lt;/a&gt; if you want to learn more.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Upcoming WebdriverIO Workshop</title>
      <author>Dilpreet Johal</author>
      <pubDate>Mon, 23 Aug 2021 11:52:11 +0000</pubDate>
      <link>https://dev.to/automationbro/upcoming-webdriverio-workshop-128c</link>
      <guid>https://dev.to/automationbro/upcoming-webdriverio-workshop-128c</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-webdriverio"&gt;
  &lt;/a&gt;
  What is WebdriverIO?
&lt;/h3&gt;

&lt;p&gt;WebdriverIO is a popular JavaScript automation tool that lets you automate Web &amp;amp; Mobile applications. It is being used by major companies around the world such as Google, Netflix, Microsoft, Mozilla, and many more‚Ä¶&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#why-this-workshop"&gt;
  &lt;/a&gt;
  Why this workshop?
&lt;/h3&gt;

&lt;p&gt;WebdriverIO is becoming one of the most popular frameworks in the IT industry due to its scalability and robustness. It is also one of the easiest frameworks to set up and learn with JavaScript. It is actively maintained by the WebdriverIO team and new updates are released quite frequently, which can make it challenging to learn completely on your own.&lt;/p&gt;

&lt;p&gt;New updates also make it hard to find content online which is fully up-to-date and can get you off the ground right away. That's why I have created this workshop to take you step-by-step with WebdriverIO to make sure you understand and can apply each concept thoroughly. &lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#why-you-should-attend-this-workshop"&gt;
  &lt;/a&gt;
  Why you should attend this workshop?
&lt;/h3&gt;

&lt;p&gt;This workshop will take you from installing WebdriverIO to setting up a fully functional test framework. Here are some of the things we will be covering:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installation &amp;amp; Set-Up&lt;/li&gt;
&lt;li&gt;Writing Tests&lt;/li&gt;
&lt;li&gt;Setting up the framework&lt;/li&gt;
&lt;li&gt;Page Object Model, Cross Browser Testing and Reporting&lt;/li&gt;
&lt;li&gt;Common Interview Questions&lt;/li&gt;
&lt;li&gt;Ask Me Anything Session&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;You will be writing the tests along with me and will have the opportunity to ask me all of your doubts related to WebdriverIO&lt;/strong&gt; so that you fully understand each and every concept.&lt;/p&gt;

&lt;p&gt;This is just touching the surface, check out the link below to find out more about everything that will be covered in this workshop. &lt;br&gt;
&lt;a href="https://mailchi.mp/3ed2a82cf044/webdriverio-workshop"&gt;https://mailchi.mp/3ed2a82cf044/webdriverio-workshop&lt;/a&gt;&lt;/p&gt;



&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/zSlr5CnuZ2I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;üëç You can follow my content here as well - &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/automationbro"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.linkedin.com/company/automation-bro"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;You can also support me by liking and sharing this content.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>testing</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to build animated lists
with MotionLayout and
ViewPager2</title>
      <author>TomislavNovacicBF</author>
      <pubDate>Mon, 23 Aug 2021 11:36:33 +0000</pubDate>
      <link>https://dev.to/bornfightcompany/how-to-build-animated-lists-with-motionlayout-and-viewpager2-5di</link>
      <guid>https://dev.to/bornfightcompany/how-to-build-animated-lists-with-motionlayout-and-viewpager2-5di</guid>
      <description>&lt;p&gt;Hello! This is my first post on this platform, I hope you‚Äôll like it. Pleas leave a comment or react to the post to show me support. P.S. Many more posts are on their way!&lt;/p&gt;

&lt;p&gt;We are all seeing beautiful design concepts made by creative designers every day on various websites and blogs, but most of us never had a chance to try to build them. Have you ever wondered what it‚Äôs like to build such layouts in practice? Is it super easy with modern frameworks or is it too much hassle? Well the purpose of this blog is to solve that mystery and find out how building one of those complex designs looks like first hand.&lt;/p&gt;

&lt;p&gt;Animating widgets like ImageViews, AppBars and DrawerLayouts is easy thanks to MotionLayout (which became stable with the release of ConstrainLayout 2.0), but what about list items? There are a bunch of blogs about animating widgets, but very few are about animation list items. For my sample project, I chose our Filmdom app and tried to implement its landing screen. Below, you will find out how it went and what are the pros and cons of building such a layout.&lt;/p&gt;

&lt;p&gt;Final version of the layout is shown in the video below.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Go3S5Vql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nr27pscfki22ixt9pimj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Go3S5Vql--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nr27pscfki22ixt9pimj.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note: It is considered that you know the basics of MotionLayout and ViewPager2, as we will not go into details of how each of these components work.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The purpose of this blog is list animation, so we will exclude everything else for the point of brevity.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#top-picks-for-you"&gt;
  &lt;/a&gt;
  Top picks for you
&lt;/h3&gt;

&lt;p&gt;To showcase recommended movies, I used ViewPager2 which extends RecyclerView. The only attributes from the XML layout worth mentioning are &lt;strong&gt;clipToPadding&lt;/strong&gt; and &lt;strong&gt;clipChildren&lt;/strong&gt;, we need to set both of those attributes to false. Attribute &lt;strong&gt;clipChildren&lt;/strong&gt; determines whether each child view is allowed to draw outside its own bounds within the parent, and &lt;strong&gt;clipToPadding&lt;/strong&gt; attribute determines whether child view is allowed to draw outside of the parent itself. Without these attributes set to false, our ViewPager would clip two upcoming pages and we would only see the currently selected page which is not what we want. In this case, attribute &lt;strong&gt;paddingEnd&lt;/strong&gt; narrows our selected page, so we have space to show two more pages on the screen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;androidx.viewpager2.widget.ViewPager2&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"match_parent"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;‚Äùwrap_content"&lt;/span&gt;
    &lt;span class="na"&gt;android:clipChildren=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;
    &lt;span class="na"&gt;android:clipToPadding=&lt;/span&gt;&lt;span class="s"&gt;"false"&lt;/span&gt;
    &lt;span class="na"&gt;android:paddingEnd=&lt;/span&gt;&lt;span class="s"&gt;"120dp"&lt;/span&gt;  &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Margins are not supported by &lt;strong&gt;ViewPager.LayoutParams&lt;/strong&gt;, so I had to wrap my fragment‚Äôs layout into an additional &lt;strong&gt;FrameLayout&lt;/strong&gt; for our margin to be applied. I couldn‚Äôt use padding on my layout because it has a background and if I had applied margin on the &lt;strong&gt;ViewPager&lt;/strong&gt; widget directly, then we wouldn‚Äôt see the selected page leaving the screen. Applying padding on the &lt;strong&gt;ViewPager&lt;/strong&gt; widget is also not an option because we have set our &lt;strong&gt;clipToPadding&lt;/strong&gt; and &lt;strong&gt;clipChildren&lt;/strong&gt; attributes, and the result would be that the previous page is visible ‚Äì which is not what we want.&lt;/p&gt;

&lt;p&gt;To achieve a faded effect on the unselected cards like in the design, I had to set the background of the inner &lt;strong&gt;FrameLayout&lt;/strong&gt; to black. It is important that the background follows the shape of the loaded image so we don‚Äôt get excess black area. The reason I didn‚Äôt use some different approach to achieve this is that I needed to create a fade-in/fade-out effect, and the only way I found to do that is by changing the opacity of the view. We will go in further detail about this in the next section. Another thing I had to do to get three pages on the screen at the same time was to use the &lt;strong&gt;setOffscreenPageLimit&lt;/strong&gt; method and set the limit value to ‚Äú3‚Äù on our &lt;strong&gt;ViewPager&lt;/strong&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;FrameLayout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;FrameLayout&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
        &lt;span class="na"&gt;android:layout_marginStart=&lt;/span&gt;&lt;span class="s"&gt;"24dp"&lt;/span&gt;
        &lt;span class="na"&gt;android:background=&lt;/span&gt;&lt;span class="s"&gt;"@drawable/bg_rounded_circle_drawable"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;ImageView&lt;/span&gt;
               &lt;span class="err"&gt;‚Ä¶&lt;/span&gt;
         &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;/FrameLayout&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/FrameLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For the purpose of scaling and fade-in/fade-out animations, I implemented &lt;strong&gt;PageTransformer&lt;/strong&gt; on our &lt;strong&gt;ViewPager&lt;/strong&gt;. In the overridden &lt;strong&gt;transformPage&lt;/strong&gt; method, we first have to set the elevation on each card depending on its position. Line &lt;strong&gt;ViewCompat.setElevation(page, -abs(position))&lt;/strong&gt; sets the highest elevation on the first card in our stack of three and a proportionally smaller elevation on each consecutive card. This gives us the desired visual effect of cards coming towards us. Next thing we have to do is calculate our scale factor, so we can apply the correct values on our movie cards.&lt;/p&gt;

&lt;p&gt;Our &lt;strong&gt;when&lt;/strong&gt; function is scaling our cards if they are visible on the screen, otherwise they have default values. The transition on the X axis is proportional to the scale factor, so we can have smooth animations. The conditions afterwards determine the visibility of movie posters inside our card. Selected card in the center position has visibility at 100% and its visibility drops as it moves away from the center of the &lt;strong&gt;ViewPager&lt;/strong&gt;. We can change the card‚Äôs movie poster visibility through &lt;strong&gt;setAlpha&lt;/strong&gt; method. This &lt;strong&gt;PageTransformer&lt;/strong&gt; setup requires a little bit of trial and error to achieve the desired result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SliderTransformer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;offscreenPageLimit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ViewPager2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;PageTransformer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="k"&gt;companion&lt;/span&gt; &lt;span class="k"&gt;object&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;DEFAULT_TRANSLATION_X&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;.0f&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;DEFAULT_TRANSLATION_FACTOR&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.46f&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;SCALE_FACTOR&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;.14f&lt;/span&gt;
        &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;const&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;DEFAULT_SCALE&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1f&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;transformPage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Float&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

        &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nc"&gt;ViewCompat&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setElevation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="nf"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;scaleFactor&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="nc"&gt;SCALE_FACTOR&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="nc"&gt;DEFAULT_SCALE&lt;/span&gt;
            &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;&lt;span class="o"&gt;..&lt;/span&gt;&lt;span class="n"&gt;offscreenPageLimit&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;1f&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                         &lt;span class="n"&gt;scaleX&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scaleFactor&lt;/span&gt;
                         &lt;span class="n"&gt;scaleY&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scaleFactor&lt;/span&gt;
                         &lt;span class="n"&gt;translationX&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;-(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="p"&gt;/&lt;/span&gt; &lt;span class="nc"&gt;DEFAULT_TRANSLATION_FACTOR&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                         &lt;span class="n"&gt;translationX&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DEFAULT_TRANSLATION_X&lt;/span&gt;
                         &lt;span class="n"&gt;scaleX&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DEFAULT_SCALE&lt;/span&gt;
                         &lt;span class="n"&gt;scaleY&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;DEFAULT_SCALE&lt;/span&gt;
                   &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;recommendedMovieIV&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ImageView&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nf"&gt;findViewById&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recommendedMovieIV&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0f&lt;/span&gt; &lt;span class="p"&gt;||&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;recommendedMovieIV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.5f&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="mf"&gt;0.5f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;recommendedMovieIV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0f&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mf"&gt;0.5f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;recommendedMovieIV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;alpha&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0f&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="nf"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We can conclude that MotionLayout is not designed to work with a single ViewPager2 page. For animating pages, we have to use &lt;strong&gt;PageTransformer&lt;/strong&gt; and if we really want to use MotionLayout on a single page we can do so by putting its implementation logic inside the transformPage method. The issue with that approach is that we then have to find a way to track MotionLayout‚Äôs progress from the value of the position argument and that‚Äôs not an easy job to do. There is a possibility to animate all items in the &lt;strong&gt;ViewPager2/RecyclerView&lt;/strong&gt; pretty easily, but that is not what we are looking for here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#coming-soon"&gt;
  &lt;/a&gt;
  Coming soon
&lt;/h3&gt;

&lt;p&gt;For the upcoming movie list, I also used &lt;strong&gt;ViewPager2&lt;/strong&gt;. Our page‚Äôs layout is wrapped inside MotionLayout as we use it here to achieve the tilting animation on swipe gestures. Each swipe animates the whole ViewPager and all of its pages.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;androidx.constraintlayout.motion.widget.MotionLayout&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:app=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res-auto"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_width=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
    &lt;span class="na"&gt;android:layout_height=&lt;/span&gt;&lt;span class="s"&gt;"wrap_content"&lt;/span&gt;
    &lt;span class="na"&gt;android:minHeight=&lt;/span&gt;&lt;span class="s"&gt;"240dp"&lt;/span&gt;
    &lt;span class="na"&gt;app:layoutDescription=&lt;/span&gt;&lt;span class="s"&gt;"@xml/tilt_scene"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;LinearLayout&lt;/span&gt;
            &lt;span class="err"&gt;‚Ä¶&lt;/span&gt;
     &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/androidx.constraintlayout.motion.widget.MotionLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;MotionScene below is self-explanatory, so I won‚Äôt be getting into details about it. Pages are tilted to the right or to the left depending on the gesture direction.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;MotionScene&lt;/span&gt; &lt;span class="na"&gt;xmlns:android=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res/android"&lt;/span&gt;
    &lt;span class="na"&gt;xmlns:app=&lt;/span&gt;&lt;span class="s"&gt;"http://schemas.android.com/apk/res-auto"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;Transition&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/rightToLeft"&lt;/span&gt;
        &lt;span class="na"&gt;app:constraintSetEnd=&lt;/span&gt;&lt;span class="s"&gt;"@id/end"&lt;/span&gt;
        &lt;span class="na"&gt;app:constraintSetStart=&lt;/span&gt;&lt;span class="s"&gt;"@id/start"&lt;/span&gt;
        &lt;span class="na"&gt;app:duration=&lt;/span&gt;&lt;span class="s"&gt;"1000"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;OnSwipe&lt;/span&gt;
            &lt;span class="na"&gt;app:dragDirection=&lt;/span&gt;&lt;span class="s"&gt;"dragLeft"&lt;/span&gt;
            &lt;span class="na"&gt;app:touchAnchorId=&lt;/span&gt;&lt;span class="s"&gt;"@id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;KeyFrameSet&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;KeyAttribute&lt;/span&gt;
                &lt;span class="na"&gt;android:rotationY=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;
                &lt;span class="na"&gt;app:framePosition=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;
                &lt;span class="na"&gt;app:motionTarget=&lt;/span&gt;&lt;span class="s"&gt;"@id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;KeyAttribute&lt;/span&gt;
                &lt;span class="na"&gt;android:rotationY=&lt;/span&gt;&lt;span class="s"&gt;"-15"&lt;/span&gt;
                &lt;span class="na"&gt;app:framePosition=&lt;/span&gt;&lt;span class="s"&gt;"25"&lt;/span&gt;
                &lt;span class="na"&gt;app:motionTarget=&lt;/span&gt;&lt;span class="s"&gt;"@id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;KeyAttribute&lt;/span&gt;
                &lt;span class="na"&gt;android:rotationY=&lt;/span&gt;&lt;span class="s"&gt;"-30"&lt;/span&gt;
                &lt;span class="na"&gt;app:framePosition=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt;
                &lt;span class="na"&gt;app:motionTarget=&lt;/span&gt;&lt;span class="s"&gt;"@id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;KeyAttribute&lt;/span&gt;
                &lt;span class="na"&gt;android:rotationY=&lt;/span&gt;&lt;span class="s"&gt;"-15"&lt;/span&gt;
                &lt;span class="na"&gt;app:framePosition=&lt;/span&gt;&lt;span class="s"&gt;"75"&lt;/span&gt;
                &lt;span class="na"&gt;app:motionTarget=&lt;/span&gt;&lt;span class="s"&gt;"@id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;KeyAttribute&lt;/span&gt;
                &lt;span class="na"&gt;android:rotationY=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;
                &lt;span class="na"&gt;app:framePosition=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt;
                &lt;span class="na"&gt;app:motionTarget=&lt;/span&gt;&lt;span class="s"&gt;"@id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/KeyFrameSet&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/Transition&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;Transition&lt;/span&gt;
        &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/leftToRight"&lt;/span&gt;
        &lt;span class="na"&gt;app:constraintSetEnd=&lt;/span&gt;&lt;span class="s"&gt;"@id/end"&lt;/span&gt;
        &lt;span class="na"&gt;app:constraintSetStart=&lt;/span&gt;&lt;span class="s"&gt;"@id/start"&lt;/span&gt;
        &lt;span class="na"&gt;app:duration=&lt;/span&gt;&lt;span class="s"&gt;"1000"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;OnSwipe&lt;/span&gt;
            &lt;span class="na"&gt;app:dragDirection=&lt;/span&gt;&lt;span class="s"&gt;"dragRight"&lt;/span&gt;
            &lt;span class="na"&gt;app:touchAnchorId=&lt;/span&gt;&lt;span class="s"&gt;"@+id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;KeyFrameSet&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;KeyAttribute&lt;/span&gt;
                &lt;span class="na"&gt;android:rotationY=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;
                &lt;span class="na"&gt;app:framePosition=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;
                &lt;span class="na"&gt;app:motionTarget=&lt;/span&gt;&lt;span class="s"&gt;"@id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;KeyAttribute&lt;/span&gt;
                &lt;span class="na"&gt;android:rotationY=&lt;/span&gt;&lt;span class="s"&gt;"15"&lt;/span&gt;
                &lt;span class="na"&gt;app:framePosition=&lt;/span&gt;&lt;span class="s"&gt;"25"&lt;/span&gt;
                &lt;span class="na"&gt;app:motionTarget=&lt;/span&gt;&lt;span class="s"&gt;"@id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;KeyAttribute&lt;/span&gt;
                &lt;span class="na"&gt;android:rotationY=&lt;/span&gt;&lt;span class="s"&gt;"30"&lt;/span&gt;
                &lt;span class="na"&gt;app:framePosition=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt;
                &lt;span class="na"&gt;app:motionTarget=&lt;/span&gt;&lt;span class="s"&gt;"@id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;KeyAttribute&lt;/span&gt;
                &lt;span class="na"&gt;android:rotationY=&lt;/span&gt;&lt;span class="s"&gt;"15"&lt;/span&gt;
                &lt;span class="na"&gt;app:framePosition=&lt;/span&gt;&lt;span class="s"&gt;"75"&lt;/span&gt;
                &lt;span class="na"&gt;app:motionTarget=&lt;/span&gt;&lt;span class="s"&gt;"@id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;KeyAttribute&lt;/span&gt;
                &lt;span class="na"&gt;android:rotationY=&lt;/span&gt;&lt;span class="s"&gt;"0"&lt;/span&gt;
                &lt;span class="na"&gt;app:framePosition=&lt;/span&gt;&lt;span class="s"&gt;"100"&lt;/span&gt;
                &lt;span class="na"&gt;app:motionTarget=&lt;/span&gt;&lt;span class="s"&gt;"@id/motionContainer"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;/KeyFrameSet&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/Transition&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ConstraintSet&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/start"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;ConstraintSet&lt;/span&gt; &lt;span class="na"&gt;android:id=&lt;/span&gt;&lt;span class="s"&gt;"@+id/end"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/MotionScene&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To show 5 pages on the screen at the same time, I again had to use the &lt;strong&gt;setOffscreenPageLimit&lt;/strong&gt; method on our &lt;strong&gt;ViewPager&lt;/strong&gt; to set the limit to ‚Äú3‚Äù. I applied a custom &lt;strong&gt;OnPageChangeCallback&lt;/strong&gt; on our &lt;strong&gt;ViewPager&lt;/strong&gt;. This callback is determining the direction of the gesture by comparing the current offset to the previous one. With this information, we can calculate the &lt;strong&gt;realCurrentPosition&lt;/strong&gt;, &lt;strong&gt;nextPosition&lt;/strong&gt; and &lt;strong&gt;realOffset&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;With the &lt;strong&gt;realCurrentPosition&lt;/strong&gt; and &lt;strong&gt;nextPosition&lt;/strong&gt; properties, we are fetching the first two visible pages from ViewPager. On swipe left, we are scaling down the currently selected page and scaling up the following page. For the swipe to the right, it‚Äôs vice-versa. This callback is also responsible for determining the strength of the gesture, so that we can tilt the pages accordingly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UpcomingMovieChangedCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ActivityMainBinding&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;upcomingMoviesAdapter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;GenericMoviesAdapter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;ViewPager2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;OnPageChangeCallback&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;goingLeft&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Boolean&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nc"&gt;Delegates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;notNull&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;lastOffset&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="py"&gt;progress&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Float&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="nc"&gt;Delegates&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;notNull&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;override&lt;/span&gt; &lt;span class="k"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;onPageScrolled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;positionOffset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;positionOffsetPixels&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;realCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;nextPosition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Int&lt;/span&gt;
        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;realOffset&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Float&lt;/span&gt;
        &lt;span class="n"&gt;goingLeft&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;lastOffset&lt;/span&gt; &lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;positionOffset&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;goingLeft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;realCurrentPosition&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;nextPosition&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;
            &lt;span class="n"&gt;realOffset&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;positionOffset&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;nextPosition&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
            &lt;span class="n"&gt;realCurrentPosition&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;
            &lt;span class="n"&gt;realOffset&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;positionOffset&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;currentCard&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcomingMoviesVP&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;RecyclerView&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;layoutManager&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;findViewByPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;realCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;currentCard&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;scaleX&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;realOffset&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nf"&gt;toFloat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;currentCard&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;scaleY&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;realOffset&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nf"&gt;toFloat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;currentCard&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;pivotY&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;

        &lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;nextCard&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcomingMoviesVP&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;RecyclerView&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;layoutManager&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="nf"&gt;findViewByPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nextPosition&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;nextCard&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;scaleX&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;realOffset&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;toFloat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;nextCard&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;scaleY&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;realOffset&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;toFloat&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;nextCard&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="n"&gt;pivotY&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;

        &lt;span class="n"&gt;lastOffset&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;positionOffset&lt;/span&gt;
        &lt;span class="n"&gt;progress&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="k"&gt;when&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;positionOffset&lt;/span&gt;
            &lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;positionOffset&lt;/span&gt;
            &lt;span class="n"&gt;position&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt; &lt;span class="n"&gt;positionOffset&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="mf"&gt;0f&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;PageTransformer&lt;/strong&gt; for upcoming movies is applying translation on the X axis that is equivalent to the page position in the list and negative value of summed page margins. We are using values calculated in our custom &lt;strong&gt;OnPageChangeCallback&lt;/strong&gt; to determine correct transition animation and progress of the transition on our &lt;strong&gt;ViewPager&lt;/strong&gt;. There are also a bunch of page decorations that are not mentioned here, but you can check them out in a repository that is linked at the bottom.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight kotlin"&gt;&lt;code&gt;&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;nextItemVisiblePx&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getDimension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dimen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;viewpager_next_item_visible&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;//50dp&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;currentItemHorizontalMarginPx&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resources&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getDimension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dimen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;viewpager_current_item_horizontal_margin_right&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;//230dp&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;pageTranslationX&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nextItemVisiblePx&lt;/span&gt; &lt;span class="p"&gt;+&lt;/span&gt; &lt;span class="n"&gt;currentItemHorizontalMarginPx&lt;/span&gt;
&lt;span class="kd"&gt;val&lt;/span&gt; &lt;span class="py"&gt;pageTransformer&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;PageTransformer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;View&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nc"&gt;Float&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;translationX&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pageTranslationX&lt;/span&gt; &lt;span class="p"&gt;*&lt;/span&gt; &lt;span class="n"&gt;position&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;upcomingMovieChangedCallback&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goingLeft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;ViewGroup&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;getChildAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;MotionLayout&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;setTransition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leftToRight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;ViewGroup&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;getChildAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;MotionLayout&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;setTransition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;R&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rightToLeft&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;getChildAt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nc"&gt;MotionLayout&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;progress&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;upcomingMovieChangedCallback&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;progress&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upcomingMoviesVP&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;setPageTransformer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pageTransformer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Building complex layouts that include animations is still not an easy job to do ‚Äì even with &lt;strong&gt;MotionLayout&lt;/strong&gt; and &lt;strong&gt;PageTransformer&lt;/strong&gt; classes. Despite the fact that a bunch of popular apps from years ago have designs with multiple pages on the screen with only one page highlighted, there still isn‚Äôt any standardised way of dealing with this issue. This is an easy job to do if we have three pages on the screen, but if we have five or more pages visible on the screen, you will get a massive headache before getting things to behave as you desire (no matter what widget you use for displaying a list of items).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MotionLayout&lt;/strong&gt; and &lt;strong&gt;ViewPager2&lt;/strong&gt; are both great tools, but they are not meant to resolve the above mentioned issue. I think we should have a library dedicated to this kind of list presentation ‚Äì there is no sense in writing a bunch of complex calculations just to get a commonly wanted behaviour.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#looking-to-learn-more"&gt;
  &lt;/a&gt;
  Looking to learn more?
&lt;/h3&gt;

&lt;p&gt;You can find this entire project on &lt;a href="https://gitlab.com/bornfight-mobile/android-public/cinema"&gt;GitLab&lt;/a&gt;, or you can hop over to our projects page to check out the full &lt;a href="https://www.bornfight.com/work/filmdom/"&gt;Filmdom case study&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you know an easier way of solving this issue, or have some other complex layouts in mind that you would like to see come to life, feel free to leave a comment.&lt;/p&gt;

</description>
      <category>engineeringmonday</category>
      <category>android</category>
      <category>design</category>
      <category>animation</category>
    </item>
    <item>
      <title>Top 10 Python Use Cases and Applications</title>
      <author>TAFF Inc | #WeMakeITHappen</author>
      <pubDate>Mon, 23 Aug 2021 11:32:15 +0000</pubDate>
      <link>https://dev.to/taffinc/top-10-python-use-cases-and-applications-5fh4</link>
      <guid>https://dev.to/taffinc/top-10-python-use-cases-and-applications-5fh4</guid>
      <description>&lt;p&gt;Python has grown to be one of the most loved programming languages since its launch in 1991.  According to StackOverflow‚Äôs 2020 developers survey, Python ranks as one of the most widely used programming languages even above Java. &lt;/p&gt;

&lt;p&gt;Every business faces a lot of  challenges when they want to choose the right and best high level programming language for their next big projects while keeping end-to-end functionality, efficient runtime, scalability, and versatility in mind.&lt;/p&gt;

&lt;p&gt;However, hitting that sweet spot of efficiency, functionality, and versatility has gotten a lot easier in the previous decade(s).&lt;/p&gt;

&lt;p&gt;This is probably because of the emergence of the Python programming language ‚Äì the modern holy grail of data science, machine learning, web scraping, and all of the above. Python is a simple programming language that anyone can learn easily and is secure, scalable and supports a rich set of pre-built libraries.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pWMimIOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58a2ubcz5mf8g9m29ym8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pWMimIOS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/58a2ubcz5mf8g9m29ym8.png" alt="Python Apps"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#top-10-use-cases-of-python-web-applications"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Top 10 Use Cases of Python Web Applications&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Python aids in the rapid development of web applications that are both scalable and secure. This is made possible and easier with the availability of web frameworks like Django, Pyramid and Flask. These frameworks offer easy integration with various protocols like HTTPS, SSl, etc and also support JSON and XML.&lt;/p&gt;

&lt;p&gt;Eg: Disqus, YouTube, Eventbrite, Dropbox&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#data-science-implementations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Data Science Implementations&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Data science is a relatively new field that has gained significant importance in recent years and Python is the go-to choice for developers working on Data Science. &lt;/p&gt;

&lt;p&gt;Unlike Java, Python offers many libraries to handle Data science projects like Pandas, NumPy, etc. Additionally, Python also offers data libraries like Matplolib, Seaborn, etc for rich data visualizations. Data science is one of the most lucrative career prospects in the technology industry today and for anyone who wants to start with Data science should know Python first.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#artificial-intelligence"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Artificial Intelligence&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Python is extremely popular in the field of machine learning or AI. Despite the age-old language, Python has evolved to fit into multiple new technologies. &lt;/p&gt;

&lt;p&gt;Python is a stable language that can handle the huge set of computations required for building complicated machine learning modules. Sensorflow, Numpy, Keras, Scikit-learn are some of the popular libraries offered by Python to work on machine learning and artificial intelligence projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#game-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Game Development&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Python is versatile as it supports multiple use cases. Apart from normal web development to complex AI, Python also aids in Game development. &lt;/p&gt;

&lt;p&gt;Python libraries like PySoy and PyGame enable 3D game development. No matter what field you are in, Python already has a library for you to get started easily. &lt;/p&gt;

&lt;p&gt;Eg: Civilization-IV, Disney‚Äôs Toontown Online, Vega Strike&lt;/p&gt;

&lt;p&gt;Original Content- &lt;a href="https://www.taffinc.com/blog/top-10-python-use-cases-and-applications/"&gt;https://www.taffinc.com/blog/top-10-python-use-cases-and-applications/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>pythondevelopment</category>
      <category>appdevelopment</category>
      <category>pythondevelopers</category>
    </item>
    <item>
      <title>Why React Hooks Exist?</title>
      <author>Ritesh Kumar</author>
      <pubDate>Mon, 23 Aug 2021 11:02:48 +0000</pubDate>
      <link>https://dev.to/wordssaysalot/why-react-hooks-exist-4gn4</link>
      <guid>https://dev.to/wordssaysalot/why-react-hooks-exist-4gn4</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;React.js is the most widely used JavaScript library for front-end developers at the moment. It is utilized by developers and corporations all around the world as an open-source project.&lt;/p&gt;

&lt;p&gt;Hooks are one of the most useful features of react. When interacting with the state, hooks allowed us to employ functional components instead of class-based components. Aside from built-in hooks, React also allows us to create our own custom hooks.&lt;/p&gt;

&lt;p&gt;In this post, We'll look at what React Hooks are and why they're important.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#problem-"&gt;
  &lt;/a&gt;
  Problem :
&lt;/h1&gt;

&lt;p&gt;Before react 16.8 (16 Feb 2019) developers were limited to use class-based components if they want to maintain state in the component, and functional components were used for only those components, which don't require any state.&lt;/p&gt;

&lt;p&gt;This results in inconsistency through the app and there were several issues with class-based components.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#issues-"&gt;
  &lt;/a&gt;
  Issues :
&lt;/h1&gt;

&lt;p&gt;The use of two different types of components created these major issues:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Inconsistency through the app&lt;/li&gt;
&lt;li&gt;If someone wants to add states in functional&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;the component that requires the whole state to be converted into the class-based component.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;To use class-based components proper 'bind' has to be maintained.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#hooks"&gt;
  &lt;/a&gt;
  Hooks
&lt;/h1&gt;

&lt;p&gt;Hooks actually doesn't solve the problem related to class-based components.&lt;/p&gt;

&lt;p&gt;I just give some extra power to a functional component that allows developers to do anything with a functional component that they were already doing with class-based components.&lt;/p&gt;

&lt;p&gt;Hooks let you always use functional components instead of having to constantly switch between functions, classes, higher-order components, and render props.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#result"&gt;
  &lt;/a&gt;
  Result
&lt;/h1&gt;

&lt;p&gt;Now most developer uses functional component with hooks because:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;They can add remove states as they require.&lt;/li&gt;
&lt;li&gt;Hooks simplifies the development process and maintains consistency through the app.&lt;/li&gt;
&lt;li&gt;You no longer need to struggle with 'bind'&lt;/li&gt;
&lt;li&gt;Functional components became more versatile than class-based.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#final-notes"&gt;
  &lt;/a&gt;
  Final Notes
&lt;/h1&gt;

&lt;p&gt;Finally, I can guarantee you that learning React Hooks is not difficult. when I first started using react, I wasn't a big fan of hooks. But now I'm completely enamored with it.¬†&lt;br&gt;
It may appear challenging at first, but as long as we focus on the fundamentals and learn how each component works, we will be able to incorporate this¬†feature with ease.¬†&lt;br&gt;
Wait a minute, if you want to learn the basics of react hooks, go through this  &lt;a href="https://reactjs.org/docs/hooks-overview.html"&gt;documentation&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;In the next article of this series, I'll go through some of my favorite instances of custom hooks and how to use them in your own apps. Until then, stay tuned.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h1&gt;

&lt;p&gt;As always, any questions or suggestions, please feel free to leave a response or  &lt;a href="https://twitter.com/dewdropxD"&gt;tweet me&lt;/a&gt;  üê¶! Good luck and happy coding!!&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
    </item>
    <item>
      <title>An Introduction to Semantic Versioning</title>
      <author>Niall Maher</author>
      <pubDate>Mon, 23 Aug 2021 11:01:04 +0000</pubDate>
      <link>https://dev.to/nialljoemaher/an-introduction-to-semantic-versioning-26n9</link>
      <guid>https://dev.to/nialljoemaher/an-introduction-to-semantic-versioning-26n9</guid>
      <description>&lt;p&gt;Semantic versioning is a system to help developers, project managers, and consumers have a universal way of understanding the release process. Semantic versioning is some guidelines so that we can understand what is happening in a release.&lt;/p&gt;

&lt;p&gt;More importantly for us coders, semantic versioning will let us know if a change will break our code.&lt;/p&gt;

&lt;p&gt;You will find most of the major projects in the wild on GitHub that use Semantic Versioning.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#major-version"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Major Version&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;There are two times to increment this version when there is a new&lt;/p&gt;

&lt;p&gt;When we increment this version, it means that there are backwards-incompatible changes in this release. The API has changed and may contain breaking changes for users of the API.&lt;/p&gt;

&lt;p&gt;Reset both minor and patch versions after the major number has been incremented.&lt;/p&gt;

&lt;p&gt;If we were making a major release for &lt;code&gt;1.23.11&lt;/code&gt; it would become &lt;code&gt;2.0.0&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#minor-version"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Minor version&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We increment the minor version when adding new features or functionality that do not break or change the existing API. When you increase the minor version, reset the patch version to zero.&lt;/p&gt;

&lt;p&gt;Use this when you are making non-breaking changes that are not a bug fix.&lt;/p&gt;

&lt;p&gt;If we were making a minor release for &lt;code&gt;1.23.11&lt;/code&gt;, it would become &lt;code&gt;1.24.0&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#patch-version"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Patch version&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Patch versions are used for bug fixes. This is when there are no functionality changes in the updates. There is no limit to these numbers, and we do not need to reset any other numbers.&lt;/p&gt;

&lt;p&gt;If we were making a patch release for &lt;code&gt;1.23.11&lt;/code&gt;, it would become &lt;code&gt;1.23.12&lt;/code&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#prereleases-and%C2%A0build"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Pre-releases and¬†build&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;We won't dive deeply into this syntax as there are many different ways to use it and warrant an article of its own, but I do want you to be aware of how to read pre-releases. But mainly, this is used when we wish to release software informally to some users for testing purposes. These are called pre-releases.&lt;/p&gt;

&lt;p&gt;Pre-releases may not be stable or compatible with the previous major, minor and patch versions that they imply.&lt;/p&gt;

&lt;p&gt;As an example, &lt;code&gt;1.23.11-beta.1&lt;/code&gt;, our pre-release identifier has two parts. The tag "beta" and a version "1". You might also see some build data also appended, such as the commit from which the build came from, eg. &lt;code&gt;1.23.11-beta.1+nialljoemaher-2bf235&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For a deeper dive, I have added a couple of links below to some fantastic articles that helped me understand the pre-release tagging.¬†&lt;/p&gt;




&lt;p&gt;For the official Semantic Versioning guide‚Ää-‚Ää&lt;a href="https://semver.org/"&gt;https://semver.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A more detailed guide and awesome article‚Ää-‚Ää&lt;a href="https://developerexperience.io/practices/semantic-versioning"&gt;https://developerexperience.io/practices/semantic-versioning&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another one I liked while doing some research‚Ää-‚Ää&lt;a href="https://devopedia.org/semantic-versioning"&gt;https://devopedia.org/semantic-versioning&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Happy coding! üíú&lt;/p&gt;




&lt;p&gt;&lt;a href="https://twitter.com/nialljoemaher"&gt;Follow me on Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Subscribe on &lt;a href="https://www.youtube.com/c/Cod%C3%BACommunity"&gt;Cod√∫ Community&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>opensource</category>
    </item>
    <item>
      <title>Sharpen your Ruby: Part 2</title>
      <author>Eric The Coder</author>
      <pubDate>Mon, 23 Aug 2021 10:49:51 +0000</pubDate>
      <link>https://dev.to/ericchapman/sharpen-your-ruby-part-2-42km</link>
      <guid>https://dev.to/ericchapman/sharpen-your-ruby-part-2-42km</guid>
      <description>&lt;p&gt;I develop in Javascript, Python, PHP, and Ruby. By far Ruby is my favorite programming language. Together let start a journey and revisit our Ruby foundations.&lt;/p&gt;

&lt;p&gt;Follow me on Twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;EricTheCoder_&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;You want to sharpen your Ruby?&lt;/h2&gt; 

&lt;p&gt;In this series, we will start from the beginning and will discover every aspect of Ruby one step at a time. &lt;/p&gt;

&lt;p&gt;Each post will include some theory but also exercise and solution.&lt;/p&gt;

&lt;p&gt;If you have any questions/comments or your are new and need help, you can comment below or send me a message.&lt;/p&gt;

&lt;h2&gt;Strings Declaration&lt;/h2&gt;

&lt;p&gt;String variable represents any text data. A key point for the syntax of strings declaration is that they have to be enclosed in single or double-quotes. The program will throw an error if they are not wrapped inside quotation marks.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Bad&lt;/span&gt;
&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Mike&lt;/span&gt; &lt;span class="c1"&gt;# Will throw an error&lt;/span&gt;

&lt;span class="c1"&gt;# Good&lt;/span&gt;
&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;

&lt;span class="c1"&gt;# Good&lt;/span&gt;
&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Mike"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Number can also be represent as string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;text_age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"45"&lt;/span&gt;
&lt;span class="n"&gt;number_age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The variable text_age is a string variable. It cannot be processed in Ruby as a number like be used in addition or multiplication etc. &lt;/p&gt;

&lt;p&gt;The number_age variable is an integer number so that variable can be part of any Ruby number manipulations methods.&lt;/p&gt;

&lt;h2&gt;String concatenation&lt;/h2&gt;

&lt;p&gt;String can be add together like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Hello'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;' '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'World'&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="c1"&gt;# Hello World&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Attention. You cannot add string and number&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;
&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;
&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;' is '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;' years old'&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="c1"&gt;# ERROR&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That code returns an error because Ruby cannot add number to string. &lt;/p&gt;

&lt;p&gt;To make this code work, we have to convert the age variable to string using the to_s method&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;' is '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;age&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to_s&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;' years old'&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="c1"&gt;# Mike is 25 years old&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;String Interpolation&lt;/h2&gt;

&lt;p&gt;String interpolation is replacing placeholders with values in a string literal. &lt;/p&gt;

&lt;p&gt;For string interpolation to work. String has to be wrapped inside a double quotation mark. Here an example&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;
&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Hello &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; 
&lt;span class="c1"&gt;# Hello Mike&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If the last code snippet, the message variable will be processed by Ruby before assignment. The #{name} placeholder will be replaced by the containing variable value.&lt;/p&gt;

&lt;p&gt;Inside placeholder #{} any Ruby expression can be used...&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;45&lt;/span&gt;
&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Your age in 2 years will be &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;age&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="c1"&gt;# Your age in 2 years will be 47&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;In Ruby everything is an object!&lt;/h2&gt;

&lt;p&gt;You maybe have ear this before. What does that mean for us the developer?&lt;/p&gt;

&lt;p&gt;First, what is an object? An object refers to a particular instance of a class with its own methods and properties.&lt;/p&gt;

&lt;p&gt;In Ruby types are defined as classes, so for example, if you have a string variable, it's an instance of the String class.&lt;/p&gt;

&lt;p&gt;For example, take this variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"Hello World"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This 'message' variable will be dynamically typed by Ruby as a string. That string is a class. So message is an instance of the class string. &lt;/p&gt;

&lt;p&gt;In Ruby the String class already has many methods to help do basic and advance string manipulations.&lt;/p&gt;

&lt;p&gt;That also means that the 'message' variable will inherit all the methods and properties of his parent class (String).&lt;/p&gt;

&lt;p&gt;Example of method call (syntax: object.method)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;upcase&lt;/span&gt;
&lt;span class="c1"&gt;# MIKE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;'upcase' is a method of the String class. This method converts all the string characters to uppercase.&lt;/p&gt;

&lt;p&gt;For now, if you don't understand all that class instance thing THAT'S NORMAL! We will cover class and object later. &lt;/p&gt;

&lt;p&gt;The only thing we need to understand for now is that variables like a string variable have methods we can call to automatically do some stuff.&lt;/p&gt;

&lt;p&gt;Here are some string methods available in Ruby.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;upcase&lt;/span&gt;
&lt;span class="c1"&gt;# MIKE&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;downcase&lt;/span&gt;
&lt;span class="c1"&gt;# mike&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'mike'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;capitalize&lt;/span&gt;
&lt;span class="c1"&gt;# Mike&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;reverse&lt;/span&gt;
&lt;span class="c1"&gt;# ekiM&lt;/span&gt;

&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike Taylor'&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;length&lt;/span&gt;
&lt;span class="c1"&gt;# 11&lt;/span&gt;

&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;empty?&lt;/span&gt;
&lt;span class="c1"&gt;# true&lt;/span&gt;

&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mike'&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;include?&lt;/span&gt; &lt;span class="s1"&gt;'ke'&lt;/span&gt;
&lt;span class="c1"&gt;# true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Look how those methods names are self-descriptive. We do not need any comments and any explanation to understand what each method does... Welcome to Ruby world!&lt;/p&gt;

&lt;h2&gt;More String methods&lt;/h2&gt;

&lt;p&gt;Now that we understand the basics we will start to learn more advanced string methods. &lt;/p&gt;

&lt;h3&gt;The sub and gsub method&lt;/h3&gt;

&lt;p&gt;Ruby has a handy string method to replace part of a string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'The sky is blue
puts message.sub '&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="s1"&gt;', '&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;
&lt;span class="c1"&gt;# The sky is red&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note the method call has no parentheses to enclose parameters. In Ruby those are optional.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Valid&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;sub&lt;/span&gt; &lt;span class="s1"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'red'&lt;/span&gt;

&lt;span class="c1"&gt;# Also valid&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The convention is to omit the parentheses unless the code seems clearer with them.&lt;/p&gt;

&lt;p&gt;The sub method replaces the first occurrence. The gsub method replaces all the occurrences.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'The sky is blue and the car is also blue'&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gsub&lt;/span&gt; &lt;span class="s1"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'red'&lt;/span&gt;
&lt;span class="c1"&gt;# The sky is red and the car is also red&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Strip method&lt;/h3&gt;

&lt;p&gt;Remove white space before or after a string&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s1"&gt;'  Welcome to Ruby World  '&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strip&lt;/span&gt;
&lt;span class="c1"&gt;# 'Welcome to Ruby World'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Chaining methods&lt;/h3&gt;

&lt;p&gt;It is possible to chain string methods&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'   Mike Taylor '&lt;/span&gt;
&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Mike'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Paul'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;downcase&lt;/span&gt;
&lt;span class="c1"&gt;# paul taylor&lt;/span&gt;
&lt;span class="c1"&gt;# In that specific situation, using the parentheses make the code easier to read&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;Exercise&lt;/h1&gt;

&lt;p&gt;Create a little program that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Input the user name and store the result in a variable&lt;/li&gt;
&lt;li&gt;Input the user password and store the result in a variable&lt;/li&gt;
&lt;li&gt;Remove password before or after white space&lt;/li&gt;
&lt;li&gt;Convert the password to lowercase&lt;/li&gt;
&lt;li&gt;Display user name and password but replace the password letter 'e' with a star
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here are the result&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Enter user name: _Mike
Enter user password: _secret

The user name is Mike and his password is s*cr*t
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Solution&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'Enter user name: '&lt;/span&gt;
&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;'Enter user password: '&lt;/span&gt;
&lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;gets&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;chomp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;downcase&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"The user name is &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nb"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; and his password is &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gsub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'e'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'*'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;That's it for today. The journey just started, stay tuned for the next post very soon. (later today or tomorrow)&lt;/p&gt;

&lt;p&gt;If you have any comments or questions please do so here or send me a message on Twitter. &lt;/p&gt;

&lt;p&gt;Follow me on Twitter: &lt;a href="https://twitter.com/EricTheCoder_"&gt;EricTheCoder_&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>10 Awesome Youtube channels to learn UI/UX</title>
      <author>Olubisi Idris Ayindeüí°</author>
      <pubDate>Mon, 23 Aug 2021 10:49:17 +0000</pubDate>
      <link>https://dev.to/olanetsoft/10-awesome-youtube-channels-to-learn-ui-ux-mp1</link>
      <guid>https://dev.to/olanetsoft/10-awesome-youtube-channels-to-learn-ui-ux-mp1</guid>
      <description>&lt;p&gt;We've all overheard debates about a product's outstanding 'UX' or a website's awful 'UI' while walking through the hip streets of the world's IT capitals. Is it a code you'll never be able to decipher?&lt;/p&gt;

&lt;p&gt;I usually publish a curated list of resources. Still, I recently discovered some excellent YouTube channels for learning UI/UX to aid in the development of your design skills, and I hope you find them beneficial.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Disclaimer: I am not connected with any of these channels; I am simply sharing this information for educational purposes to assist anyone struggling to understand UI/UX.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#mizko"&gt;
  &lt;/a&gt;
  Mizko
&lt;/h3&gt;

&lt;p&gt;As a designer and entrepreneur, he is 29 years old. Throughout his career, he led strategy and design for more than 70 firms, assisting them in raising more than $300 million. He also worked as an in-house designer, lead designer, and independent contractor (freelancer), finally growing Mizko Media into a ten-person agency.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCZJkZy008cQjqkJeKpJu8tA"&gt;https://www.youtube.com/channel/UCZJkZy008cQjqkJeKpJu8tA&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#jesse-showalter"&gt;
  &lt;/a&gt;
  Jesse Showalter
&lt;/h3&gt;

&lt;p&gt;Every week, Jesse Showalter posts Digital Design &amp;amp; Web Development videos focused on tools, approaches, projects, and more to assist creative people in creating beautiful things. Subscribe to beneficial training videos if you're an aspiring Web Designer, UI Designer, or Front-End Developer who wants to make beautiful things with pixels and code.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/user/JesseAtomic"&gt;https://www.youtube.com/user/JesseAtomic&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flux"&gt;
  &lt;/a&gt;
  Flux
&lt;/h3&gt;

&lt;p&gt;Ran Segall, a designer, and entrepreneur keeps a personal vlog called Flux. On the show, He talks about his experiences as a designer and a business owner, including his successes, setbacks, and lessons learned.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCN7dywl5wDxTu1RM3eJ_h9Q"&gt;https://www.youtube.com/channel/UCN7dywl5wDxTu1RM3eJ_h9Q&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#malewicz"&gt;
  &lt;/a&gt;
  Malewicz
&lt;/h3&gt;

&lt;p&gt;This channel will address UX/UI misconceptions, design best practices and techniques, productivity, and how to improve design and life through numerous life-hacks and routines he employs to keep motivated, calm, and productive.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UC_Dq0oUEi7uXhdUX8prunbw"&gt;https://www.youtube.com/channel/UC_Dq0oUEi7uXhdUX8prunbw&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cuberto-design"&gt;
  &lt;/a&gt;
  Cuberto Design
&lt;/h3&gt;

&lt;p&gt;Cuberto is an international company that works with clients from all over the world. In eight years, they have participated in more than 300 projects. This channel shares tips and tricks for UX/UI design, illustrations, and animations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCzestFrXpwSGCfcbO2pObwQ"&gt;https://www.youtube.com/channel/UCzestFrXpwSGCfcbO2pObwQ&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ajampsmart"&gt;
  &lt;/a&gt;
  AJ&amp;amp;Smart
&lt;/h3&gt;

&lt;p&gt;They are a Berlin-based product design and innovation studio! They often collaborate with some of the world's largest corporations to help them create better products faster.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCeB_OpLspKJGiKv1CYkWFFw"&gt;https://www.youtube.com/channel/UCeB_OpLspKJGiKv1CYkWFFw&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#mike-locke"&gt;
  &lt;/a&gt;
  Mike Locke
&lt;/h3&gt;

&lt;p&gt;Senior UI/UX designer with strong skills in Visual UI Design, User Experience, Usability, Interaction Design, Information Architecture, Research &amp;amp; Analytics, XHTML/CSS, and Strategy &amp;amp; Planning. He is recognized as a creative leader with a diverse skillset that includes everything from design to front-end programming.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/user/mlwebco"&gt;https://www.youtube.com/user/mlwebco&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#saptarshi-prakash"&gt;
  &lt;/a&gt;
  Saptarshi Prakash
&lt;/h3&gt;

&lt;p&gt;Hey there! This is Saptarshi (a.k.a. Sapta), an engineer turned self-taught Product Designer based in Bangalore, India. In the last six years, he has worked with some of the very well-known startups of India and learned anything and everything needed to create unique experiences for the users. Psychology, Visuals, Motion, Illustrations, Writing, to name a few. He is also an active speaker, teacher, and community builder and has delivered over 70 talks, workshops, and webinars on design.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/user/saptarshipr"&gt;https://www.youtube.com/user/saptarshipr&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#punit-chawla"&gt;
  &lt;/a&gt;
  Punit Chawla
&lt;/h3&gt;

&lt;p&gt;He is an experienced UX/UI designer who hails from India. Subscribe to his channel for videos about web design, user interface design, Adobe Xd tutorials, Figma tutorials, design news, and more! Every Monday and Thursday, he posts fantastic design films.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCkfdb6tUwVoGXPPzY7H6hUg"&gt;https://www.youtube.com/channel/UCkfdb6tUwVoGXPPzY7H6hUg&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#careerfoundry"&gt;
  &lt;/a&gt;
  CareerFoundry
&lt;/h3&gt;

&lt;p&gt;CareerFoundry is a premier online school focused on teaching the next generation of technology talent. They provide advanced courses in UX Design, Web Development, Data Analytics, and UI Design, collaborating with the top professionals in each sector to develop the most comprehensive learning materials that promise to take you from novice to job-ready (guaranteed) in 6-10 months.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/user/careerfoundry"&gt;https://www.youtube.com/user/careerfoundry&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-futur"&gt;
  &lt;/a&gt;
  The Futur
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/c/thefuturishere"&gt;https://www.youtube.com/c/thefuturishere&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;Oh, yes. I'm a software engineer that teaches, writes, and builds beautiful apps, but I also have a strong sense of user experience, and I hope you find these resources helpful.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtube.com"&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[Cover image by @&lt;a href="https://dev.to@saviomartin66"&gt;Savio Martin&lt;/a&gt;](&lt;a href="https://slickr.vercel.app/app"&gt;https://slickr.vercel.app/app&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'd love to connect with you at &lt;a href="https://twitter.com/olanetsoft"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.linkedin.com/in/olubisi-idris-ayinde-05727b17a/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/Olanetsoft"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See you in my next blog article. Take care!!!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>ux</category>
      <category>uiweekly</category>
    </item>
    <item>
      <title>Permission denied for laravel 8 storage logs
 [solved] - 2021</title>
      <author>ssbhattarai</author>
      <pubDate>Mon, 23 Aug 2021 10:43:10 +0000</pubDate>
      <link>https://dev.to/613596/permission-denied-for-laravel-8-storage-logs-solved-2021-12ld</link>
      <guid>https://dev.to/613596/permission-denied-for-laravel-8-storage-logs-solved-2021-12ld</guid>
      <description>&lt;p&gt;If you are a laravel developer you may run into the &lt;strong&gt;laraval.log permission error that is **The stream or file "log file location" could not be opened: failed to open stream: Permission denied&lt;/strong&gt;. I found this error mostly while deploying laravel in VPS (virtual private network) in digitalocean droplet.&lt;/p&gt;

&lt;p&gt;To solve this error there is only one command which is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo chown -R www-data:www-data /var/www/{laravel_project_name}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now your storage permission error must be solved by now.&lt;/p&gt;

&lt;p&gt;Happy Coding!!&lt;/p&gt;

</description>
      <category>laravel</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Sending A POST Request In Python</title>
      <author>Aya Bouchiha</author>
      <pubDate>Mon, 23 Aug 2021 10:41:59 +0000</pubDate>
      <link>https://dev.to/ayabouchiha/sending-a-post-request-in-python-3mgh</link>
      <guid>https://dev.to/ayabouchiha/sending-a-post-request-in-python-3mgh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#whats-post-request"&gt;
  &lt;/a&gt;
  What's POST request
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;: is a request that is used for sending information or data to a specific server.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  installation
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;pip install requests
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#sending-post-requests-in-python"&gt;
  &lt;/a&gt;
  Sending POST requests in Python
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'https://jsonplaceholder.typicode.com/posts'&lt;/span&gt;

&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'buy new mouse'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'body'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'I need to buy a new mouse !'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'userId'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,}&lt;/span&gt;
&lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'content-type'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'application/json; charset=UTF-8'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# 201
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status_code&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# True
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ok&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# b'{\n  "title": "buy new mouse",\n  "body": "I need to buy a new mouse !",\n  "userId": 5,\n  "id": 101\n}'
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# {
#   "title": "buy new mouse",
#   "body": "I need to buy a new mouse !",
#   "userId": 5,
#   "id": 101
# }
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# &amp;lt;class 'str'&amp;gt;
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;# https://jsonplaceholder.typicode.com/posts
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# application/json; charset=utf-8
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'Content-Type'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# utf-8
&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encoding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#tutorials-to-learn-requests"&gt;
  &lt;/a&gt;
  tutorials to learn requests
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=tb8gHvYlCFs"&gt;Python Requests Tutorial: Request Web Pages, Download Images, POST Data, Read JSON, and More&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iv-Uc8d3tDs&amp;amp;"&gt;Requests in Python | Python Request Tutorial | Python Tutorial For Beginners | Edureka&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/python-requests-tutorial/"&gt;Python Requests Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://realpython.com/python-requests/"&gt;python-requests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#suggested-posts"&gt;
  &lt;/a&gt;
  Suggested posts
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/all-you-need-to-know-about-python-json-module-5ef0"&gt;All You Need To Know About Python JSON Module&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/5-helpful-python-math-module-methods-44gf"&gt;5 Helpful Python Random Module Methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/5-helpful-python-math-module-methods-44gf"&gt;5 Helpful Python Math Module Methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://dev.to/ayabouchiha/5-useful-python-string-methods-4pe7"&gt;5 Useful Python String Methods&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>SE Internship Log[4]</title>
      <author>Ruheni Alex</author>
      <pubDate>Mon, 23 Aug 2021 10:16:49 +0000</pubDate>
      <link>https://dev.to/ruheni/se-internship-log-4-5hc5</link>
      <guid>https://dev.to/ruheni/se-internship-log-4-5hc5</guid>
      <description>&lt;p&gt;Hello there internet stranger, üëãüèΩ&lt;/p&gt;

&lt;p&gt;Welcome to the 5th edition of the Software Engineering(SE) Log.&lt;/p&gt;

&lt;p&gt;This week was frustrating. I spent the week trying to debug a test that failed 1-3 times a day (a cron job that runs on an hourly basis). &lt;/p&gt;

&lt;p&gt;When does it fail? Anytime of the day.&lt;/p&gt;

&lt;p&gt;Why does it fail? The response data is 0 instead of 20(expectation).&lt;/p&gt;

&lt;p&gt;Why is it 0? No frickin' clue. ü•≤&lt;/p&gt;

&lt;p&gt;Hopefully, the upcoming week will be better than the previous one.&lt;/p&gt;

&lt;p&gt;Enough with the rant. This week, I learned a bunch of stuff ‚Äì rethinking performance, &lt;a href="https://nextjs.org/docs/advanced-features/measuring-performance"&gt;Next.js measuring performance&lt;/a&gt;, &lt;a href="https://github.com/maticzav/label-sync"&gt;label-sync&lt;/a&gt;, and being a proactive.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#technical-skills"&gt;
  &lt;/a&gt;
  Technical Skills
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#rethinking-performance"&gt;
  &lt;/a&gt;
  Re-thinking performance
&lt;/h3&gt;

&lt;p&gt;This won't be about bloated JavaScript bundles or optimizing . I'm not an expert.&lt;/p&gt;

&lt;p&gt;This week, I got a comment on a PR for a task I was working on that I was making an expensive API call ‚Äì introspecting the user's database checking for any tables.&lt;/p&gt;

&lt;p&gt;No big deal? Well, it is. This operation would happen every time a user opens a project.&lt;/p&gt;

&lt;p&gt;This changed how I think about API requests from the frontend in terms of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Cost&lt;/li&gt;
&lt;li&gt;User experience.&lt;/li&gt;
&lt;li&gt;Compute required to make handle a task happen ‚Äì on the API, and the user's resources which in this case is their database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Just because you can do something doesn't mean you should. Compute resources are finite. Evaluate the impact of the requests you make and how you can cut down on what isn't necessary.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nextjs-measuring-performance"&gt;
  &lt;/a&gt;
  Next.js Measuring performance
&lt;/h3&gt;

&lt;p&gt;Vercel provides analytics on application performance for different stacks ‚Äì Next.js included.&lt;/p&gt;

&lt;p&gt;Next.js can provides tooling that allows you to measure analytics and use your own custom analytics.&lt;/p&gt;

&lt;p&gt;The metrics that Next.js allows you to track include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://web.dev/vitals/"&gt;Web Vitals&lt;/a&gt; - these metrics measure and report performance of your application to ensure you're delivering a great user experience. &lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://nextjs.org/docs/advanced-features/measuring-performance#custom-metrics"&gt;Custom Metrics&lt;/a&gt; - this are specific to Next.js measuring time taken for a page to hydrate and render:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;Next.js-hydration&lt;/code&gt; - time take for a page to start and finish hydrating&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Next.js-route-change-to-render&lt;/code&gt; - time taken for a page to render a page after navigating to the route&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;Next.js-render&lt;/code&gt; - time taken for a page to finish rendering after a route change&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;üí° Fun learning project idea - build your own/ custom tool to measure these analytics. The aim would be to learn how to store time-series data, average the data, and visualize the data. Chrome devtools and &lt;a href="https://web.dev/measure"&gt;Web.dev&lt;/a&gt; doesn't measure custom Next.js metrics.&lt;br&gt;
You can see how well my site is performing ü§°&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tsakuo2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33921841/130419796-0257f6c5-a2ea-4f58-943d-0f13d32599dc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tsakuo2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/33921841/130419796-0257f6c5-a2ea-4f58-943d-0f13d32599dc.png" alt="ruheni.dev analytics"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In your Next.js application, edit/ create &lt;code&gt;_app.js&lt;/code&gt; in the &lt;code&gt;/pages&lt;/code&gt; directory. Define the &lt;code&gt;reportWebVitals&lt;/code&gt; function:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;reportWebVitals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;metric&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;switch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;metric&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FCP&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c1"&gt;// handle results - console.log or send to an API (same case for other metrics)&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;LCP&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;CLS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;FID&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;TTFB&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Next.js-hydration&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Next.js-route-change-to-render&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Next.js-render&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
    &lt;span class="k"&gt;default&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These analytics provide insights as to how user experience is in your web application, parts of your application that are not doing too well, and tips on improving performance.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#labelsync"&gt;
  &lt;/a&gt;
  üß∞  Label-sync
&lt;/h3&gt;

&lt;p&gt;Label-sync is a handy tool that makes managing GitHub labels across multiple repositories delightful.&lt;/p&gt;

&lt;p&gt;Why do you need it? You don't.&lt;/p&gt;

&lt;p&gt;The default GitHub labels are good. But, they could be better.&lt;/p&gt;

&lt;p&gt;GitHub labels provide meta-data for a GitHub issue. This could be the context of a given problem, for example backend, frontend, bug, test, improvement, feature, whether an issue requires discussion, time, and the list goes on on what this could be.&lt;/p&gt;

&lt;p&gt;Label-sync allows you to define affected repositories, labels, theme for the labels, descriptions, group labels etc.&lt;/p&gt;

&lt;p&gt;It requires some configuration when starting out. However, managing issues in your projects will be a delight.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This is a personal opinion.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#soft-skills"&gt;
  &lt;/a&gt;
  Soft Skills
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#being-proactive"&gt;
  &lt;/a&gt;
  Being Proactive
&lt;/h3&gt;

&lt;p&gt;Being proactive involves taking responsibility of your life. It involves anticipating problems, seeking solutions and giving it your best shot.&lt;/p&gt;

&lt;p&gt;The alternative to being proactive is reactive - responding to tasks/life as they stream in. &lt;/p&gt;

&lt;p&gt;You are responsible for your own growth, including your career.&lt;/p&gt;

&lt;p&gt;Go out there, ace it and have a great week!&lt;/p&gt;

&lt;p&gt;Till next week. ‚úåüèΩ&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>frontend</category>
      <category>tools</category>
    </item>
  </channel>
</rss>
