<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Solution: Non-decreasing Array</title>
      <author>seanpgallivan</author>
      <pubDate>Tue, 04 May 2021 09:31:47 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-non-decreasing-array-1m5c</link>
      <guid>https://dev.to/seanpgallivan/solution-non-decreasing-array-1m5c</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/non-decreasing-array/discuss/1190763"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-665-medium-nondecreasing-array"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/non-decreasing-array/"&gt;Leetcode Problem #665 (&lt;em&gt;Medium&lt;/em&gt;): Non-decreasing Array&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Given an array &lt;code&gt;nums&lt;/code&gt; with &lt;code&gt;n&lt;/code&gt; integers, your task is to check if it could become non-decreasing by modifying &lt;strong&gt;at most one element&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We define an array is non-decreasing if &lt;code&gt;nums[i] &amp;lt;= nums[i + 1]&lt;/code&gt; holds for every &lt;code&gt;i&lt;/code&gt; (&lt;strong&gt;0-based&lt;/strong&gt;) such that (&lt;code&gt;0 &amp;lt;= i &amp;lt;= n - 2&lt;/code&gt;).&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [4,2,3]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;You could modify the first 4 to 1 to get a non-decreasing array.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nums = [4,2,1]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;You can't get a non-decreasing array by modify at most one element.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;n == nums.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= n &amp;lt;= 10^4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-10^5 &amp;lt;= nums[i] &amp;lt;= 10^5&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This problem seems easy at first read. If we iterate through the nums array (&lt;strong&gt;N&lt;/strong&gt;), count the number of instances in which an element is lower than the one preceeding (&lt;strong&gt;err&lt;/strong&gt;), and then see that count go above &lt;strong&gt;1&lt;/strong&gt;, then we should be able to &lt;strong&gt;return false&lt;/strong&gt;. The problem becomes more difficult, however, once we realize that we're allowed to modify one element, which will naturally impact its relationship with the surrounding elements.&lt;/p&gt;

&lt;p&gt;With that in mind, we can think of the different possible scenarios faced when we find an incidence of decreasing value. Consider the base scenario, with &lt;strong&gt;N[i-1] = a&lt;/strong&gt; and &lt;strong&gt;N[i] = b&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IzvJ280h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/3tVUgNt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IzvJ280h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/3tVUgNt.png" alt="Visual 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From here, we can see that there are three possible scenarios for each of the surrounding elements (&lt;strong&gt;N[i-2]&lt;/strong&gt; and &lt;strong&gt;N[i+1]&lt;/strong&gt;). They can either be larger than &lt;strong&gt;a&lt;/strong&gt; (&lt;strong&gt;x &amp;gt;= a&lt;/strong&gt;), in between &lt;strong&gt;a&lt;/strong&gt; and &lt;strong&gt;b&lt;/strong&gt; (&lt;strong&gt;b &amp;lt; y &amp;lt; a&lt;/strong&gt;) or smaller than &lt;strong&gt;b&lt;/strong&gt; (&lt;strong&gt;z &amp;lt;= b&lt;/strong&gt;):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wx_5UCtn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/K99nyd7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wx_5UCtn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/K99nyd7.png" alt="Visual 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Scenarios &lt;strong&gt;XAB&lt;/strong&gt; and &lt;strong&gt;ABZ&lt;/strong&gt; can quickly be determined to trigger a &lt;strong&gt;return&lt;/strong&gt; of &lt;strong&gt;false&lt;/strong&gt; because in both cases the &lt;strong&gt;err&lt;/strong&gt; count will increment to &lt;strong&gt;2&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--meqnLOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/rR1I59s.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--meqnLOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/rR1I59s.png" alt="Visual 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Things get more complicated, however, once the values are staggered. In the case of &lt;strong&gt;ZABX&lt;/strong&gt;, we either move &lt;strong&gt;a&lt;/strong&gt; down or &lt;strong&gt;b&lt;/strong&gt; up in order to achieve increasing values, while in &lt;strong&gt;YABX&lt;/strong&gt; we can only move &lt;strong&gt;b&lt;/strong&gt; up and in &lt;strong&gt;ZABY&lt;/strong&gt; we can only move &lt;strong&gt;a&lt;/strong&gt; down:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U0eytFpp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sEIQIu4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U0eytFpp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/sEIQIu4.png" alt="Visual 4"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the final scenario, &lt;strong&gt;YABY&lt;/strong&gt;, there is no possible way to fix the array, even though there's only one incidence of a descending value:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oDT2yfYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ikfi44d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oDT2yfYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/ikfi44d.png" alt="Visual 5"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With this all in mind, we can write our function to &lt;strong&gt;return false&lt;/strong&gt; if we see &lt;strong&gt;err &amp;gt; 1&lt;/strong&gt; or if we see the &lt;strong&gt;YABY&lt;/strong&gt; scenario. If we reach the end without triggering either condition, we can &lt;strong&gt;return true&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Time Complexity: O(N)&lt;/strong&gt; where N is the length of N&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Space Complexity: O(1)&lt;/strong&gt; with no modification of inputs&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;There are only minor differences in the code of all four languages.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;checkPossibility&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt; 
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;checkPossibility&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
                &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;checkPossibility&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;])&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;length&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;N&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]))&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Solution&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;checkPossibility&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;err&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
                &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;err&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Background Toggle with clip path only HTML and CSS</title>
      <author>Nikhil Chandra Roy</author>
      <pubDate>Tue, 04 May 2021 09:22:56 +0000</pubDate>
      <link>https://dev.to/nikhilroy2/background-toggle-with-clip-path-only-html-css-edl</link>
      <guid>https://dev.to/nikhilroy2/background-toggle-with-clip-path-only-html-css-edl</guid>
      <description>&lt;h2&gt;
  &lt;a href="#background-toggle-with-clip-path-only-html-css"&gt;
  &lt;/a&gt;
  Background Toggle with clip path only html css
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8Mcbzz2lhxs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In this tutorial, I have used only HTML and CSS.&lt;br&gt;
for background transition effect I have used &lt;a href="https://bennettfeely.com/clippy/"&gt; clip-path generator &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang="en"&amp;gt;

&amp;lt;head&amp;gt;
    &amp;lt;meta charset="UTF-8"&amp;gt;
    &amp;lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&amp;gt;
    &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
    &amp;lt;link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.1.1/css/all.css"&amp;gt;
    &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;input type="checkbox" name="" id="check"&amp;gt;
    &amp;lt;label for="check"&amp;gt;
        &amp;lt;i class="fas fa-sun"&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;i class="fas fa-moon"&amp;gt;&amp;lt;/i&amp;gt;
    &amp;lt;/label&amp;gt;
    &amp;lt;main&amp;gt;&amp;lt;/main&amp;gt;
&amp;lt;/body&amp;gt;

&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;for icon I have used font-awesome icons.&lt;br&gt;
when toggling it will show sun and moon with black background.&lt;br&gt;
&lt;strong&gt;CSS&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;*{
    box-sizing: border-box;
    margin: 0;
}
label{
    position: fixed;
    top: 50%;
    left: 50%;
    width: 80px;
    height: 35px;
    background: #7d68ee;
    transform: translate(-50%, -50%);
    border-radius: 25px;
    cursor: pointer;
}
label .fas{
    position: absolute;
    top: 50%;
    left: 10%;
    transform: translateY(-50%);
    transition: .5s;
    color: white;
}
label .fa-moon{
    opacity: 0;
}
input:checked ~ label .fas{
    left: 70%;
}
input:checked ~ label .fa-sun{
    opacity: 0;
}
input:checked ~ label .fa-moon{
    opacity: 1;
}
input{
    display: none;
}
main{
    background: #000;
    position: relative;
    z-index: -1;
    width: 100%;
    height: 100vh;
    transition: 1s;
    clip-path: polygon(80% 0, 100% 0, 100% 12%, 100% 20%, 98% 3%, 82% 0, 65% 0);

}
input:checked ~ main{
    clip-path: polygon(0 0, 100% 0, 100% 12%, 100% 100%, 0 100%, 0 89%, 0 38%);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you like my tutorial, don't forget to share your thought.&lt;br&gt;
Thanks.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>background</category>
      <category>animation</category>
    </item>
    <item>
      <title>Music player using python.</title>
      <author>MarianVelani</author>
      <pubDate>Tue, 04 May 2021 09:13:31 +0000</pubDate>
      <link>https://dev.to/marianvelani/music-player-using-python-373d</link>
      <guid>https://dev.to/marianvelani/music-player-using-python-373d</guid>
      <description>&lt;p&gt;In this Project, we will create a Music Player Application in Python.&lt;br&gt;
using Tkinter and Pygame module. where they can play their favorite songs. And we have to install this music player on our computer, based the Operating system &lt;br&gt;
    i.e Windows, Macintosh, Android, Linux, etc. Then we can listen to our favorite songs.&lt;/p&gt;

&lt;p&gt;Screenshot of actual music player python program output.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eCC4UOqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9juggpy7951nm3bvfcz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eCC4UOqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9juggpy7951nm3bvfcz.png" alt="How to make music player using python"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/I5xbxzji7f4"&gt;https://youtu.be/I5xbxzji7f4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Source code:&lt;br&gt;
&lt;a href="http://compileto.blogspot.com/2021/05/music-player-application-using-tkinter.html"&gt;http://compileto.blogspot.com/2021/05/music-player-application-using-tkinter.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
    </item>
    <item>
      <title>How To Make A SlideShow Using OpenCV</title>
      <author>Siddharth Chandra</author>
      <pubDate>Tue, 04 May 2021 08:03:59 +0000</pubDate>
      <link>https://dev.to/siddharth2016/how-to-make-a-slideshow-using-opencv-5ge7</link>
      <guid>https://dev.to/siddharth2016/how-to-make-a-slideshow-using-opencv-5ge7</guid>
      <description>&lt;p&gt;We have been making slideshows for most of our college/office presentations to look great while presenting using Microsoft PowerPoint, let's take this as an image processing activity and see how we can achieve slide show utility using Python's OpenCV library in this article.&lt;/p&gt;

&lt;p&gt;It could be a pass time activity or something new to learn or just to show off your friends or juniors, so without any further ado, let's get started!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: If you do not have OpenCV installed, I suggest you visit &lt;a href="https://blog.codekaro.info/lets-draw-opencv-logo-using-opencv"&gt;here&lt;/a&gt; and check **Prerequisites&lt;/em&gt;* steps on the process of installation.*&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h3&gt;
  &lt;a href="#necessary-imports"&gt;
  &lt;/a&gt;
  Necessary Imports
&lt;/h3&gt;

&lt;p&gt;First, create a python file, name it whatever you like, for this article let's say &lt;code&gt;slideshow.py&lt;/code&gt;. Now add the following imports to the file created:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# ./slideshow.py
&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;cv2&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ceil&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;We import &lt;code&gt;cv2&lt;/code&gt; for all image processing tasks, &lt;code&gt;numpy&lt;/code&gt; with alias &lt;code&gt;np&lt;/code&gt; to create an initial window for display (all things in OpenCV works with numpy under the hood), &lt;code&gt;ceil&lt;/code&gt; from &lt;code&gt;math&lt;/code&gt; to satisfy a future condition (how do I know if need it or not?, well you don't, during the process of making an app there would be times when you will have to continuously improve your program and it's fine, but for this article, I want to keep everything at one place from starting, so don't worry just know that we will need this import) and lastly we import &lt;code&gt;os&lt;/code&gt; to extract all image files that we need in a slideshow.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Note: You also need a set of images you would want to view as a slideshow. Collect them and keep them in the &lt;code&gt;./images&lt;/code&gt; folder and don't worry about the size of images.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#variables-image-window-and-alphabeta"&gt;
  &lt;/a&gt;
  Variables, Image Window and Alpha-Beta
&lt;/h3&gt;

&lt;p&gt;Add the following code to the same file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;dst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"./images/"&lt;/span&gt;       &lt;span class="c1"&gt;# Images destination
&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dst&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;# Get their names in a list
&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uint8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;        &lt;span class="c1"&gt;# Image window of size (360, 360)
&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;     &lt;span class="c1"&gt;# alpha
&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;     &lt;span class="c1"&gt;# beta
&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dst&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;First 3 lines find out the image name of all the images present in the &lt;code&gt;./images&lt;/code&gt; folder. We use the &lt;code&gt;os.listdir&lt;/code&gt; method to list all the contents of a directory and then keep them in the &lt;code&gt;images&lt;/code&gt; variable and also we keep the length as a measure for total available images.&lt;/li&gt;
&lt;li&gt;Next, we create an image window of size &lt;code&gt;(360, 360, 3)&lt;/code&gt;, which is a 3 channel image. Initially, it will all be black (filled with zeros).&lt;/li&gt;
&lt;li&gt;Then we define some more constants, &lt;code&gt;i&lt;/code&gt; to be used to loop over images, &lt;code&gt;a&lt;/code&gt; to keep initial alpha value and &lt;code&gt;b&lt;/code&gt; for initial beta value, we will see how these are used for image transition that ultimately will give the slideshow effect.&lt;/li&gt;
&lt;li&gt;At last, we take the first image from the list of images, resize it to fit the window, this will be the first image to appear on the slideshow.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#slideshow-loop"&gt;
  &lt;/a&gt;
  SlideShow Loop
&lt;/h3&gt;

&lt;p&gt;Let's create our slideshow, add the following code to the same file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="c1"&gt;# Slide Show Loop
&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;
        &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;
        &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;length&lt;/span&gt;    &lt;span class="c1"&gt;# Getting new image from directory
&lt;/span&gt;        &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imread&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dst&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;images&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;img&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;360&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mf"&gt;0.01&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mf"&gt;0.01&lt;/span&gt;

    &lt;span class="c1"&gt;# Image Transition from one to another
&lt;/span&gt;    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addWeighted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;img&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Slide Show"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;waitKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="mh"&gt;0xff&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nb"&gt;ord&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'q'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;break&lt;/span&gt;

&lt;span class="n"&gt;cv2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;destroyAllWindows&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Now, we create a while infinite loop. Inside it, there is a conditional that checks for &lt;code&gt;ceil(a)&lt;/code&gt; if it reaches &lt;code&gt;0&lt;/code&gt; (zero) then we reset the &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; values, update &lt;code&gt;i&lt;/code&gt; in a circular fashion using modulus operator &lt;code&gt;%&lt;/code&gt; on the length of the list of images to get the index of next image, and update &lt;code&gt;img&lt;/code&gt; variable to contain a new image and resize it.&lt;/li&gt;
&lt;li&gt;Outside of the conditional, we use &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; to decrease and increase alpha and beta values respectively. This variation will give us the transition effect that seems to be smooth. We will use these with the &lt;code&gt;cv2.addWeighted&lt;/code&gt; method that just overlaps one image over another depending on the weight of the given images.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;result&lt;/code&gt; stores the new updated image that we will display using the &lt;code&gt;cv2.imshow&lt;/code&gt; method of the OpenCV. At last, we wait for a key event and breaks out of the while loop if it happens and destroy all windows created during execution using the &lt;code&gt;cv2.destroyAllWindow&lt;/code&gt; method.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;cv2.addWeighted&lt;/code&gt; method is what helps us to achieve the slideshow effect that we wanted. Here, the alpha &lt;code&gt;a&lt;/code&gt; value is the weight for the resulting image (that was initially a black window) and the beta &lt;code&gt;b&lt;/code&gt; value is for a new image that will overlap the &lt;code&gt;result&lt;/code&gt; window. Make sure that sum of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; remains equal to&lt;code&gt;1&lt;/code&gt; (one). For more information on this, please visit &lt;a href="https://docs.opencv.org/3.4/d5/dc4/tutorial_adding_images.html"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#demo-how-it-looks"&gt;
  &lt;/a&gt;
  Demo - How It Looks
&lt;/h3&gt;

&lt;p&gt;The images I took are logos of my favourite programming languages - Python, Scala and ReactJS (currently learning).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YAiMHCtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619347152591/cjuu6ZS_W.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YAiMHCtI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1619347152591/cjuu6ZS_W.gif" alt="demo.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;For complete script, visit &lt;a href="https://github.com/siddharth2016/Opencv-Python-Computer-Vision/blob/master/imageSlideShow.py"&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#what-next"&gt;
  &lt;/a&gt;
  What Next?
&lt;/h3&gt;

&lt;p&gt;Well, that's it from me. If you followed this, you might be seeing a wonderful slideshow of your collection of images. As for the next steps, you can enhance this application by adding the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add buttons to change the type of slideshow. Currently, it is only doing a smooth transition, try to implement a different animated transition.&lt;/li&gt;
&lt;li&gt;Add a utility to select a number of images and not all, as we did, we just took every image. Also, you can try to handle exception like what if a non-image comes from the folder.&lt;/li&gt;
&lt;/ul&gt;




&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Just starting your Open Source Journey? Don't forget to check &lt;a href="https://github.com/siddharth2016/hello-open-source"&gt;Hello Open Source&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Want to showcase your Python project or just out there to explore? Check &lt;a href="https://github.com/siddharth2016/awesome-python-repos"&gt;Awesome Python Repos&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Want to make a simple and awesome game from scratch? Check out &lt;a href="https://github.com/siddharth2016/PongPong"&gt;PongPong&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Want to &lt;code&gt;++&lt;/code&gt; your GitHub Profile README? Check out &lt;a href="https://github.com/marketplace/actions/quote-readme"&gt;Quote - README&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Till next time!&lt;/p&gt;

&lt;p&gt;Namaste 🙏&lt;/p&gt;

</description>
      <category>python</category>
      <category>opencv</category>
      <category>computervision</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to move from WordPress to Jamstack using our Gatsby WordPress Starter</title>
      <author>andrzejwp</author>
      <pubDate>Tue, 04 May 2021 07:59:17 +0000</pubDate>
      <link>https://dev.to/flotiq/how-to-move-from-wordpress-to-jamstack-using-our-gatsby-wordpress-starter-aa2</link>
      <guid>https://dev.to/flotiq/how-to-move-from-wordpress-to-jamstack-using-our-gatsby-wordpress-starter-aa2</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;This article originally appeared as a blog post on &lt;a href="https://flotiq.com/blog/how-to-move-from-wordpress-to-jamstack-using-our-gatsby-wordpress-starter"&gt;Flotiq.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Let’s say that you are the owner of a WordPress site and you have heard about Jamstack, the “modern way” to build websites. You want to check if this approach is good for a WordPress replacement. Using Gatsby WordPress starter and migration tools you can test it in just a few minutes.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When you have a WordPress site with data, you could be worried about the migration, creating a new Gatsby template, and deploying your new site. These things can stop you from deciding to check the Jamstack way of developing your project. Let’s see how to move your WordPress to a Gatsby template without pain, in 2 simple steps.&lt;/p&gt;

&lt;p&gt;Next, optionally, we set up the project live via Netlify, and configure Netlify Plugin in Flotiq, to simplify the build process to one-click action.&lt;/p&gt;

&lt;p&gt;In the next steps, we assume that you have an account in Flotiq (&lt;a href="https://editor.flotiq.com/register.html"&gt;click here to register for free&lt;/a&gt;).&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-1-migrate-data-to-headlesscms"&gt;
  &lt;/a&gt;
  Step 1: Migrate data to HeadlessCMS
&lt;/h1&gt;

&lt;p&gt;The first step is to migrate your data to Headless CMS. We recommend using our migration tool. Go to the &lt;a href="https://flotiq.com/services/migrate-wordpress-to-flotiq-headless-cms/"&gt;WordPress to Flotiq migration service&lt;/a&gt;, fill in the required data and start the import. This process will import your media, posts, pages, authors, tags and categories.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PSUAq55w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-7e6ab218-c302-404b-a314-342c50e04927.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PSUAq55w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-7e6ab218-c302-404b-a314-342c50e04927.png" alt="WordPress to Flotiq migration service"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Check your Flotiq Account after the migration is done.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DhMzsS6h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-6391f3bd-fe36-47e4-b68d-f3ef032827b7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DhMzsS6h--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-6391f3bd-fe36-47e4-b68d-f3ef032827b7.png" alt="Content Types in Flotiq"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now your data is stored in the Headless CMS and you can manage it in Flotiq. But we want to achieve more - let’s set up a brand new site based on this data.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-2-setup-starter-locally"&gt;
  &lt;/a&gt;
  Step 2: Setup starter locally
&lt;/h1&gt;

&lt;p&gt;Now we can use our Gatsby Starter - WordPress Blog. For detailed instructions &lt;a href="https://github.com/flotiq/gatsby-starter-wordpress-blog"&gt;check the project’s GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Run the project from a template using Flotiq CLI. Type the following commands:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npm install -g flotiq-cli
flotiq start [flotiqApiKey] [yourProjectName] https://github.com/flotiq/gatsby-starter-wordpress-blog
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The &lt;em&gt;flotiqApKey&lt;/em&gt; is your &lt;code&gt;Read and write API key&lt;/code&gt; to your Flotiq account, and &lt;em&gt;yourProjectName&lt;/em&gt; is your custom project name.&lt;/p&gt;

&lt;p&gt;This script will download the starter, add the required configuration to the &lt;code&gt;.env&lt;/code&gt; file, install dependencies and run gatsby.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wait a moment, and that’s it! Your site is now running at &lt;a href="http://localhost:8000"&gt;http://localhost:8000&lt;/a&gt;.&lt;/strong&gt; To exit the process type Ctrl+C.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kAAiEpl---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-9a724e06-463a-4e19-ab3d-29091c48d9a7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kAAiEpl---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-9a724e06-463a-4e19-ab3d-29091c48d9a7.png" alt="Gatsby WordPress Starter is working!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next - start developing. Use your favourite IDE to edit project files. There are commands you would use to develop a project&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;gatsby develop - build again your site and expose it on the localhost:8000&lt;/li&gt;
&lt;li&gt;gatsby clean - clear cached data (like posts, media)&lt;/li&gt;
&lt;li&gt;gatsby build - build the site for production environment&lt;/li&gt;
&lt;li&gt;gatsby serve - view the production site locally&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To learn more about Gatsby development process &lt;a href="https://www.gatsbyjs.com/docs/tutorial/part-zero/"&gt;check this tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now you can develop and test your site, learn Gatsby and check the Flotiq features.&lt;/strong&gt; You can also take the next extra steps to publish your site on the Internet.&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#step-3-deploy-your-site-to-netlify-optional"&gt;
  &lt;/a&gt;
  Step 3: Deploy your site to Netlify (optional)
&lt;/h1&gt;

&lt;p&gt;You can go live with your site in multiple ways. One way is to simply copy your files from the public directory (created after running Gatsby build) to your server. This fully static page will serve your content without a backend.&lt;/p&gt;

&lt;p&gt;Another way is to use a deploy solution like Netlify. The benefit of this solution is that you can configure automatically build after pushing to the repository or even rebuilding directly from the Flotiq dashboard (using Netlify Plugin).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-create-your-project-repository-in-github"&gt;
  &lt;/a&gt;
  1. Create your project repository in GitHub
&lt;/h2&gt;

&lt;p&gt;Netlify will use your repository to fetch files, run build commands and publish your website. Create an empty repository for your project:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IIgb5FXs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-d1b43559-7b05-4757-9b13-7ca4fb965f56.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IIgb5FXs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-d1b43559-7b05-4757-9b13-7ca4fb965f56.png" alt="Create an empty repository for your project"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-push-your-project-to-the-newly-created-repository"&gt;
  &lt;/a&gt;
  2. Push your project to the newly created repository.
&lt;/h2&gt;

&lt;p&gt;GitHub will show you tips to quickly set up your repository - follow the part &lt;code&gt;…or push an existing repository from the command line&lt;/code&gt;. In projects directory type:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add origin git@github.com:[accountName]/[projectName].git
git branch -M main
git push -u origin main
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now your files are stored in GitHub with all benefits of using version control.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-setup-netlify-site"&gt;
  &lt;/a&gt;
  3. Setup Netlify site
&lt;/h2&gt;

&lt;p&gt;Now let’s publish our site. We will use Netlify for this step. To create a site go to the &lt;a href="https://netlify.com/"&gt;Netlify&lt;/a&gt; dashboard. We will create a site from the Git repository.&lt;/p&gt;

&lt;p&gt;Click the &lt;code&gt;New Site from Git&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nMcrdrVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-60081a11-4bbc-4cda-b669-5f2e86ce1a60.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nMcrdrVW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-60081a11-4bbc-4cda-b669-5f2e86ce1a60.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Choose &lt;code&gt;GitHub&lt;/code&gt; as the project source.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxqrg65m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-6448593f-f1d8-4203-a1f1-46cf2e848069.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kxqrg65m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-6448593f-f1d8-4203-a1f1-46cf2e848069.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find your new repository.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n9E2FuwO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-b9323571-a37e-469c-8b81-45cc64c392a5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n9E2FuwO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-b9323571-a37e-469c-8b81-45cc64c392a5.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add variable &lt;code&gt;GATSBY_FLOTIQ_API_KEY&lt;/code&gt; with your &lt;code&gt;flotiqApiKey&lt;/code&gt; (like we do in local setup, in the &lt;code&gt;.env&lt;/code&gt; file).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FNOCjNuL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-0b9320f1-5f7b-46f8-aafe-b84a273a690a.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FNOCjNuL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-0b9320f1-5f7b-46f8-aafe-b84a273a690a.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, click the &lt;code&gt;Deploy site&lt;/code&gt; button, and wait 2-3 minutes. When the status change, click on your new automatically generated address.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It’s your site, live on the Web. Congratulations!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can change your site URL, or even bind your domain - for further information check the &lt;a href="https://docs.netlify.com/domains-https/custom-domains"&gt;Netlify Docs&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#step-4-use-the-netlify-plugin-in-flotiq-to-deploy-your-site-automatically-optional"&gt;
  &lt;/a&gt;
  Step 4: Use the Netlify plugin in Flotiq to deploy your site automatically (optional)
&lt;/h1&gt;

&lt;p&gt;For now, every time when you push to the main branch, your site will rebuild automatically. That’s a convenient solution. But what if we want to rebuild the site every time when creating data in Flotiq? Follow these steps to enable the &lt;code&gt;Build Site&lt;/code&gt; button in Flotiq.&lt;/p&gt;

&lt;p&gt;Go back to the Netlify dashboard. Add a build hook in the Build &amp;amp; Deploy settings. The name of this webhook is up to you:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZK43zyMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-671c4bf0-2abc-4dff-a317-177521a6ecf9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZK43zyMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-671c4bf0-2abc-4dff-a317-177521a6ecf9.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once the hook is created, you get your custom website hook.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kftM6ven--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-148227cb-a346-4355-8090-ff7519d6702b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kftM6ven--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-148227cb-a346-4355-8090-ff7519d6702b.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After these steps, you can not only manage your data in Flotiq Headless CMS. You can also trigger a rebuild of your site by clicking &lt;code&gt;Build site&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FUj7mDRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-96121528-8671-4874-8985-4eb66bf2a084.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FUj7mDRI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://api.flotiq.com/image/0x0/_media-96121528-8671-4874-8985-4eb66bf2a084.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now your site is live, and you can easily manage the site content. You can take the benefits of Headless CMS and the Gatsby ecosystem.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next steps
&lt;/h1&gt;

&lt;p&gt;Use the data stored and managed in Flotiq in multiple ways, building other websites or &lt;a href="https://flotiq.com/docs/Deep-Dives/mobile-expo-product-showcase/"&gt;mobile applications&lt;/a&gt;. Extend your project scope by adding new functionalities like &lt;a href="https://flotiq.com/docs/Deep-Dives/node-js-ecommerce-snipcart-gatsby-demo/"&gt;e-commerce&lt;/a&gt; or a &lt;a href="https://flotiq.com/docs/Deep-Dives/storing-location-data-headless-cms/"&gt;map with a store locator&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>wordpress</category>
      <category>flotiq</category>
    </item>
    <item>
      <title>Types Of Aircrafts In Aerospace Industry</title>
      <author>Sunith</author>
      <pubDate>Tue, 04 May 2021 07:50:59 +0000</pubDate>
      <link>https://dev.to/sunith573/types-of-aircrafts-in-aerospace-industry-3li7</link>
      <guid>https://dev.to/sunith573/types-of-aircrafts-in-aerospace-industry-3li7</guid>
      <description>&lt;p&gt;Introduction&lt;br&gt;
The future of aerospace engineering looks bright, particularly as developments in space exploration and space flight become a reality. Aerospace engineering is a profession that focuses on the construction and research of aircraft, spacecraft, and related technologies using engineering principles. &lt;/p&gt;

&lt;p&gt;Classification Of Aircraft&lt;br&gt;
When it comes to aircraft classifications, we're talking about classes of planes that have identical flying characteristics.&lt;br&gt;
The way they land, as well as their propulsion and in-flight handling. Airman certificate categories are even more closely related to classifications than aircraft categories.&lt;/p&gt;

&lt;p&gt;Lighter Than Air&lt;br&gt;
Balloons, non-rigid airships (blimps), and dirigibles are built to have a sufficient volume within their structure that, when filled with a gas lighter than air, they can fly.&lt;br&gt;
(heated air, hydrogen, or helium) displaces the ambient air and floats, similar to how a cork floats on water.&lt;/p&gt;

&lt;p&gt;Heavier Than Air&lt;br&gt;
This type of aircraft requires a power source to generate the thrust needed for lift. Kites are a simple heavier-than-air craft.&lt;/p&gt;

&lt;p&gt;Civil Aircraft&lt;br&gt;
Civil flights are all nonmilitary planes. Private and corporate jets, as well as commercial airliners, are among them.&lt;br&gt;
Private planes are single-engine monoplanes with non-retractable landing gear that are used for pleasure flying.&lt;/p&gt;

&lt;p&gt;Business Aircraft&lt;br&gt;
These flights are used to produce income for their owners and range from small single-engine planes used for pilot training or transporting small parcels over short distances to four-engine executive jets capable of crossing continents and oceans.&lt;/p&gt;

&lt;p&gt;Classification Of Spacecraft&lt;br&gt;
Spacecraft are specially developed and built structures capable of operating in hostile environments. Their capacities and sophistication differ greatly, as do their purposes.&lt;/p&gt;

&lt;p&gt;Flyby Spacecraft&lt;br&gt;
The initial reconnaissance phase of solar system exploration was carried out by flyby spacecraft. They maintain a constant solar orbit or escape trajectory, never entering planetary orbit.&lt;/p&gt;

&lt;p&gt;Orbiter Spacecraft&lt;br&gt;
A spacecraft designed to fly to a distant planet and enter into orbit around it must be able to decelerate quickly enough to achieve orbit insertion.&lt;/p&gt;

&lt;p&gt;Atmospheric Spacecraft&lt;br&gt;
Atmospheric satellites are planned for a brief mission to collect data on a planet's or satellite's atmosphere. A spacecraft's subsystem complement is usually reduced.&lt;/p&gt;

&lt;p&gt;Lander Spacecraft&lt;br&gt;
Lander spacecraft are intended to enter a planet's surface and stay long enough to transmit data back to Earth.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Simplest Way to Include Icons in Your Project: Using Unpkg</title>
      <author>Shubham Jain</author>
      <pubDate>Tue, 04 May 2021 07:44:44 +0000</pubDate>
      <link>https://dev.to/shubhamjain/simplest-way-to-include-icons-in-your-project-using-unpkg-53op</link>
      <guid>https://dev.to/shubhamjain/simplest-way-to-include-icons-in-your-project-using-unpkg-53op</guid>
      <description>&lt;p&gt;The web has come a long way in the past years, but there are still things that aren't straightforward. Using icons is one of them.&lt;/p&gt;

&lt;p&gt;Icon fonts, inline SVGs, &lt;a href="https://css-tricks.com/svg-symbol-good-choice-icons/"&gt;SVG Symbols&lt;/a&gt;—all have their own issues. Inline SVGs are great, for example, but they make the code messy, and can't be cached. Additionally, copy-pasting the SVG itself is pretty time-consuming and a PITA. &lt;/p&gt;

&lt;p&gt;Using icons should be simpler. Here's what I always wanted: I see an icon I want to use and I am able to use it right away. No copy-paste; only have to know the name of the icon. No struggling to make the Webpack/Grunt pipeline work. No creating a new SVG file/component for every icon I want to use. &lt;/p&gt;

&lt;p&gt;Luckily, I have found a way. Follow along! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#svgloader-load-svgs-from-a-cdn"&gt;
  &lt;/a&gt;
  svg-loader: Load SVGs from a CDN
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://github.com/shubhamjain/svg-loader"&gt;svg-loader&lt;/a&gt; is a simple library that allows you to inline SVGs hosted on an external source. Here's a more &lt;a href="https://dev.to/shubhamjain/a-better-way-to-use-svgs-1mg9"&gt;detailed article&lt;/a&gt; I wrote about it, but to put it simply, you use it this way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"text/javascript"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/external-svg-loader@1.0.0/svg-loader.min.js"&lt;/span&gt; &lt;span class="na"&gt;async&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;svg&lt;/span&gt; &lt;span class="na"&gt;data-src=&lt;/span&gt;&lt;span class="s"&gt;"https://s2.svgbox.net/assets/logo-white.svg"&lt;/span&gt; 
    &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt;
    &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt; 
    &lt;span class="na"&gt;fill=&lt;/span&gt;&lt;span class="s"&gt;"purple"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/svg&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The library will fetch the SVG using XHR and inject it inline. The benefit? You can now customize the fill, inherit the colors, and use states like hover, which wouldn't have been possible with &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;

&lt;p&gt;The concept isn't new as &lt;a href="https://github.com/iconfu/svg-inject"&gt;svg-inject&lt;/a&gt; does something similar. However, svg-loader makes this ultra-convenient. You only have to worry about including the script somewhere in the code. Rest everything is handled. And it's framework-agnostic, too (works with React/Vue/Angular...).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#svgloader-unpkg-killer-combo"&gt;
  &lt;/a&gt;
  svg-loader + unpkg = killer combo
&lt;/h2&gt;

&lt;p&gt;Recently, I discovered that I can use the library and &lt;a href="http://unpkg.com/"&gt;unpkg&lt;/a&gt; to quickly include an icon available on Github. &lt;/p&gt;

&lt;p&gt;Take, for instance, &lt;a href="https://github.com/Templarian/MaterialDesign"&gt;MDI repository&lt;/a&gt;. To my knowledge, it's the most extensive icon repository on Github that has 5k+ icons. &lt;/p&gt;

&lt;p&gt;Since the repo has an NPM package, we can browse it on unpkg: &lt;a href="https://unpkg.com/@mdi/svg/"&gt;https://unpkg.com/@mdi/svg/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5N-U3vXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4ym8ggdvd4d0gxazzzz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5N-U3vXH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4ym8ggdvd4d0gxazzzz.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you click any file and use "View Raw" you'll see that the permalink to any icon is something like this: &lt;code&gt;https://unpkg.com/@mdi/svg@5.9.55/svg/__ICON__.svg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can use this to start using the icon in our project. Example:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/shubhamjainco/embed/rNyBVmY?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Hurray! Now, if you need to use the &lt;code&gt;cog&lt;/code&gt; icon, you don't have to hunt for the SVG code, or download it, you can just use &lt;code&gt;cog.svg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The first load can have a slight delay because Unpkg fetches the package and extracts the file, but after the first request, the file is cached and served from Cloudflare CDN.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#qampa-about-this-approach"&gt;
  &lt;/a&gt;
  Q&amp;amp;A About this Approach
&lt;/h2&gt;

&lt;p&gt;There might fair amount of questions about this approach, so I will try to answer the most common of them. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-if-there-are-changes-in-the-repo-like-renaming-files-wont-it-break-my-icons"&gt;
  &lt;/a&gt;
  What if there are changes in the repo (like, renaming files)? Won't it break my icons?
&lt;/h3&gt;

&lt;p&gt;No. With unpkg, you'll most likely be using versioned URLs (instead of &lt;code&gt;@latest&lt;/code&gt;), which will make sure that the contents remain the same regardless of changes in the repository. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#isnt-it-inefficient-to-fire-xhr-for-every-icon-instead-of-bundling-them"&gt;
  &lt;/a&gt;
  Isn't it inefficient to fire XHR for every icon, instead of bundling them?
&lt;/h3&gt;

&lt;p&gt;No. With HTTP2, the cost of making is incredibly low. For non-blocking resources loaded asynchronously, it's almost irrelevant. Here is me loading 50 icons using the same approach.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/shubhamjainco/embed/BaWBowd?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Besides, the icons are also cached when loaded first-time, so the subsequent loads are incredibly fast. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-if-unpkg-goes-away"&gt;
  &lt;/a&gt;
  What if unpkg goes away?
&lt;/h3&gt;

&lt;p&gt;It won't. It's a project &lt;a href="https://developers.cloudflare.com/sponsorships"&gt;supported officially&lt;/a&gt; by Cloudflare and serves 3B+ requests per day. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-if-i-want-to-use-an-icon-set-that-doesnt-have-an-npm-package"&gt;
  &lt;/a&gt;
  What if I want to use an icon set that doesn't have an npm package?
&lt;/h3&gt;

&lt;p&gt;You can use &lt;a href="https://www.jsdelivr.com/"&gt;jsDeliver&lt;/a&gt; that has a similar API and &lt;a href="https://www.jsdelivr.com/features"&gt;supports raw Github repos&lt;/a&gt; as well. &lt;/p&gt;




&lt;p&gt;I feel this is a pretty nifty approach for icons. You can use icons from &lt;a href="https://unpkg.com/browse/font-awesome-svg-png@1.2.2/black/svg/"&gt;Font Awesome&lt;/a&gt;, &lt;a href="https://unpkg.com/browse/@primer/octicons@13.0.0/build/svg/"&gt;Octicons&lt;/a&gt;, or any of the awesome icon sets hosted on Github.&lt;/p&gt;

&lt;p&gt;It's fast, very reliable, and keeps the code clean. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>css</category>
      <category>webdev</category>
      <category>svg</category>
    </item>
    <item>
      <title>Create CSS Gradient Animations Effortlessly 🌌</title>
      <author>Jordi Enric</author>
      <pubDate>Tue, 04 May 2021 07:42:08 +0000</pubDate>
      <link>https://dev.to/jordienr/create-css-gradient-animations-effortlessly-3ok3</link>
      <guid>https://dev.to/jordienr/create-css-gradient-animations-effortlessly-3ok3</guid>
      <description>&lt;p&gt;Here's a preview of what we'll make 👇&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/jordienric/embed/JjEVgXv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-create-a-gradient"&gt;
  &lt;/a&gt;
  1. Create a gradient
&lt;/h2&gt;

&lt;p&gt;I'll save mine in a variable for easy reuse.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nd"&gt;:root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--main-gradient&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;linear-gradient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;-66deg&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#15162a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#291a33&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#381a2c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;#121e42&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#2-create-a-container-div-and-add-the-background"&gt;
  &lt;/a&gt;
  2. Create a container div and add the background
&lt;/h2&gt;

&lt;p&gt;We use background-size to zoom into the gradient.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--main-gradient&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-create-the-animation"&gt;
  &lt;/a&gt;
  3. Create the animation
&lt;/h2&gt;

&lt;p&gt;This is a basic animation that changes the background-position. Since we zoomed into the gradient it will look like it's moving.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@keyframes&lt;/span&gt; &lt;span class="n"&gt;gradient&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;50&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;100&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;00%&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#4-add-the-animation-to-our-container"&gt;
  &lt;/a&gt;
  4. Add the animation to our container!
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--main-gradient&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;background-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;400%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;animation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;gradient&lt;/span&gt; &lt;span class="m"&gt;8s&lt;/span&gt; &lt;span class="n"&gt;ease&lt;/span&gt; &lt;span class="n"&gt;infinite&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check the codepen &lt;a href="https://codepen.io/jordienric/pen/JjEVgXv"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And that's it!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#follow-me-on-twitter-for-more"&gt;
  &lt;/a&gt;
  Follow me on &lt;a href="https://twitter.com/jordienr"&gt;twitter&lt;/a&gt; for more!
&lt;/h3&gt;

</description>
      <category>css</category>
      <category>codenewbie</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>7 pieces of advice I wish I knew when I started as a Junior Software Engineer</title>
      <author>Jordi Enric</author>
      <pubDate>Tue, 04 May 2021 07:38:46 +0000</pubDate>
      <link>https://dev.to/jordienr/7-pieces-of-advice-i-d-give-to-my-younger-developer-self-np6</link>
      <guid>https://dev.to/jordienr/7-pieces-of-advice-i-d-give-to-my-younger-developer-self-np6</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@corinarainer?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Corina Rainer&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/taking-notes?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Someone asked this question recently and this are my thoughts about it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#write-more-amp-take-notes"&gt;
  &lt;/a&gt;
  Write more &amp;amp; take notes
&lt;/h2&gt;

&lt;p&gt;Writing is a really valuable skill for developers, the sooner you start developing it the better. Take notes so you have stuff you can write about later.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#teach-what-you-learn"&gt;
  &lt;/a&gt;
  Teach what you learn
&lt;/h2&gt;

&lt;p&gt;The best moment to teach something is when you just learned it. Apply to do workshops with other developers, write articles, create videos. Teach what you learned and you will solidify that knowledge.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#show-your-work"&gt;
  &lt;/a&gt;
  Show your work
&lt;/h2&gt;

&lt;p&gt;You'll feel imposter syndrome every time. Publish articles, create websites, try to get people to use them. You'll only find the things you can improve at when you see people reacting to your work. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-people"&gt;
  &lt;/a&gt;
  Connect with people
&lt;/h2&gt;

&lt;p&gt;Try not to be just a lurker and participate in conversations about topics you're interested in. Give your opinion and your thoughts. Learn from others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ask-more-questions-even-the-stupid-ones"&gt;
  &lt;/a&gt;
  Ask more questions, even the stupid ones
&lt;/h2&gt;

&lt;p&gt;Specially the stupid ones. Asking questions will start conversations that will make you learn 100% times more than tutorials and books.&lt;/p&gt;

&lt;p&gt;Asking good questions is a great skill, and you develop it by asking stupid questions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#chill-you-dont-have-to-know-everything-by-tomorrow"&gt;
  &lt;/a&gt;
  Chill, you don't have to know everything by tomorrow
&lt;/h2&gt;

&lt;p&gt;Learn things as you need them. Don't rush it or you'll burn out of tutorials, books and making projects for the sake of learning technologies.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-healthy-lifestyle-will-make-you-more-productive"&gt;
  &lt;/a&gt;
  A healthy lifestyle will make you more productive
&lt;/h2&gt;

&lt;p&gt;5 hours of work a day, exercise and healthy diet will get more done than 12 hours of work a day. If it's not sustainable don't do it.&lt;/p&gt;

&lt;p&gt;Follow me on &lt;a href="https://twitter.com/jordienr"&gt;twitter&lt;/a&gt; for more.&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>codenewbie</category>
      <category>career</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 9 PHP Frameworks For Web Development In 2021</title>
      <author>Rahul</author>
      <pubDate>Tue, 04 May 2021 07:21:25 +0000</pubDate>
      <link>https://dev.to/jainrahul/top-9-php-frameworks-for-web-development-in-2021-3phg</link>
      <guid>https://dev.to/jainrahul/top-9-php-frameworks-for-web-development-in-2021-3phg</guid>
      <description>&lt;p&gt;With an average global salary of $39k, &lt;a href="https://www.php.net/"&gt;PHP&lt;/a&gt; is one of the most popular programming languages in the developer community. It’s the language behind the most popular CMS, WordPress. It is in-use by &lt;a href="https://w3techs.com/technologies/overview/programming_language"&gt;79%&lt;/a&gt; of total websites globally, including the most used social network- Facebook, the largest digital encyclopedia – Wikipedia, China’s news giant Xinhuanet, and Russia’s social network VK.com.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0fjOo52M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/programming-language.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0fjOo52M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/programming-language.png" alt="programming language"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It would be unfair not to credit the rising number of PHP web development frameworks in popularising PHP. Today, we’ve some really good web development frameworks in PHP like Laravel, CodeIgniter, CakePHP, etc. These development frameworks provide a set of libraries &amp;amp; API functions to accelerate the web application development process securely.&lt;/p&gt;

&lt;p&gt;Sadly, despite all these glittery facts &amp;amp; figures, some dare say “PHP is a dead language.” In fact, in a recent survey, 62% of respondents voted PHP as one of the most dreaded programming languages. In the same study, only 3% desired to learn PHP. But google trends for search keywords “php” and “javascript” narrate another story. While the debates will continue, be assured that PHP is not dying anytime soon. Having said that, check out the 9 most popular &lt;a href="https://www.lambdatest.com/blog/9-of-the-best-php-frameworks-for-web-development-2021/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Rahul-4052021&amp;amp;utm_term=Rahul"&gt;PHP frameworks for web development&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uMWNXd2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/google-trend-1024x426.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uMWNXd2V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/google-trend-1024x426.png" alt="google trend"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-best-php-frameworks-for-website-development-in-2021"&gt;
  &lt;/a&gt;
  9 best PHP frameworks for website development in 2021
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#1-laravel"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://laravel.com/"&gt;Laravel&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p-0yfA1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/larvel.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p-0yfA1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/larvel.png" alt="larvel"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Laravel is one of the most popular PHP frameworks for web development with &lt;a href="https://github.com/laravel/laravel"&gt;64k+ stars&lt;/a&gt; on GitHub. Though it ranks 7 on &lt;a href="http://www.phpbenchmarks.com/en/"&gt;PHP Benchmarks&lt;/a&gt; list of top-performing web development PHP frameworks, it tops our list given its huge community, rich feature set, and ease of use.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why should you consider Laravel?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Open source, huge community, Extensive documentation, Zero overheads for CFOs, LTS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Laravel is an open-source web development framework. Of-course, free. It enjoys awe-inspiring support from the PHP developer community. And as a result, Laravel wheels are always in motion. Right from its launch in 2011 to the time of writing this insight, there have been 20 mega releases, Laravel 8 being the latest stable version. The Laravel web framework community provides LTS versions too. Laravel 6.0 LTS is currently under support. Versions before it are no longer maintained.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Performance, Security &amp;amp; Scalability, faster-time-to-market&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cx07uKi8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/laravel-performance.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cx07uKi8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/laravel-performance.png" alt="laravel performance"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can securely develop Laravel powered apps using MVC architecture. Using an object-oriented and functional programming approach, you can develop highly modular code-bases for your application. This modularity and segmented architecture make the Laravel web framework highly extensible. That means Laravel developers can leverage ready-to-use first-party packages like Envoy, Passport, Horizon, Cashier, JetStream, and Fortify. This also saves significant development time, and new products can be shipped with faster-time-to-market. In-built authentication features can leverage encrypted storage of data for enhanced security. Performance can be boosted by using session &amp;amp; cached memory, optimizing the garbage collection process would also mean improved task execution.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Rich off-the-shelf features&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Built-in access management features for easy authentication &amp;amp; user management&lt;/li&gt;
&lt;li&gt;Easily integrate with popular email services like Amazon SES, sendmail, etc., Delivering messages through SMS/ Slack is also possible.&lt;/li&gt;
&lt;li&gt;In-built Eloquent ORM to convert data between incompatible type systems. Eloquent ORM is an API interface to easily interact with the database. Developers don’t need to write complex queries.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advanced &lt;a href="https://laravel.com/docs/8.x/eloquent"&gt;Eloquent -ORM query example&lt;/a&gt; to select destinations –&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;use App\Models\Destination;
use App\Models\Flight;

return Destination::addSelect(['last_flight' =&amp;gt; Flight::select('name')
    -&amp;gt;whereColumn('destination_id', 'destinations.id')
    -&amp;gt;orderByDesc('arrived_at')
    -&amp;gt;limit(1)
])-&amp;gt;get();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Bundle packaging system and composer dependency manager for integrating framework agnostic packages to your PHP web development project. You may use ‘Packalyst,’ which is a huge collection of Laravel PHP packages, 1500+ in total.&lt;/li&gt;
&lt;li&gt;“Reverse routing” for linking and routes, CLI interface, “Blade templating engine” for designing templates, “RESTful controllers” for request handling, in-built “PHUnit Testing,” “Lazy collection,” “Database seeding,” “Real Time-event broadcasting,” “background processing” are some other features that make development work with Laravel an easy-peasy experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the reasons it is considered among the best PHP frameworks for website development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who uses the Laravel framework for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mastercard&lt;/li&gt;
&lt;li&gt;Razorpay&lt;/li&gt;
&lt;li&gt;Olx&lt;/li&gt;
&lt;li&gt;Wattpad&lt;/li&gt;
&lt;li&gt;TransferGo&lt;/li&gt;
&lt;li&gt;9GAG, and &lt;a href="https://stackshare.io/laravel"&gt;3000+ companies&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore Laravel framework alternatives for web development?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No built-in support is available in RoR or Django framework.&lt;/li&gt;
&lt;li&gt;Easy to start, complex to master.&lt;/li&gt;
&lt;li&gt;Usual open-source LTS issues, i.e., migration issues and incompatibility of newer versions with older ones.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-codeigniter"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://www.codeigniter.com/"&gt;CodeIgniter&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_Hd0CtNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/codeigniter.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_Hd0CtNw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/codeigniter.png" alt="codeigniter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CodeIgniter is a rapid web application development framework with a ridiculously small size. CodeIgniter 4, the latest version of CodeIgniter, is a mere 1.2 MB in size. Like Laravel, it’s open-source and boasts &lt;a href="https://github.com/bcit-ci/CodeIgniter"&gt;18k+ stars&lt;/a&gt; on GitHub. Just because of how bare-bone it is, we have included it in the second position. Like several other frameworks, CodeIgniter provides a set of libraries and an intuitive interface to accelerate PHP web app development. Currently, this is not tracked by PHPbenchmarks.com but is considered among the best PHP frameworks for website development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of CodeIgniter?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Server requirements&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Codeigniter framework v4 requires PHP 7.2 or above.&lt;/li&gt;
&lt;li&gt;Supports MySQL, PostgreSQL, SQLite3&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is partly &lt;a href="https://www.php-fig.org/psr/"&gt;PSR-compliant&lt;/a&gt;. This means it follows PHP standard recommendations for class and file naming standards, implements autoloading and logger interface, but doesn’t strictly follow caching or HTTP message interface.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Easy to get started. You may directly download CodeIgniter, or you can use composer to install it. Consider it as the “create-react-app” of PHP-CodeIgniter. All you need to do is execute the below command to get started with CodeIgniter:&lt;br&gt;&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer create-project codeigniter4/appstarter project-root
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;CodeIgniter applications can be built using MVC architecture and adhere to object-oriented programming practices.&lt;/li&gt;
&lt;li&gt;It provides classes for FTP, image manipulation, email sending, user-agent, unit testing, security, encryption, caching driver, throttling, typography, pagination, form validation, etc. It also provides two tools, i.e., Timer &amp;amp; Iterator, for benchmarking your PHP application.&lt;/li&gt;
&lt;li&gt;You can carry out feature testing by extending FeatureTestCase or FeatureTestTrait class. The template for writing test cases looks as below-
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php namespace App;

use CodeIgniter\Test\FeatureTestCase;

class TestFoo extends FeatureTestCase
{
    public function setUp(): void
    {
        parent::setUp();
    }

    public function tearDown(): void
    {
        parent::tearDown();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Who uses CodeIgniter for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sprout Social&lt;/li&gt;
&lt;li&gt;Buffer&lt;/li&gt;
&lt;li&gt;Grindr&lt;/li&gt;
&lt;li&gt;3M&lt;/li&gt;
&lt;li&gt;Geekyants&lt;/li&gt;
&lt;li&gt;Accenture&lt;/li&gt;
&lt;li&gt;Ola&lt;/li&gt;
&lt;li&gt;Remitly&lt;/li&gt;
&lt;li&gt;Amplify&lt;/li&gt;
&lt;li&gt;BigBazaar, and &lt;a href="https://stackshare.io/codeigniter"&gt;1700+ others&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No templating engine&lt;/li&gt;
&lt;li&gt;No official stand on LTS versions&lt;/li&gt;
&lt;li&gt;No in-built authentication, authorization features&lt;/li&gt;
&lt;li&gt;Developers have to write their modules from scratch, while in other best PHP web frameworks like Laravel, a rich set of in-built ready-to-use modules are available.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-symfony"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://symfony.com/"&gt;Symfony&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iNNEQgMx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/symfony.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iNNEQgMx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/symfony.png" alt="symfony"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PHP Benchmarks rank Symfony at number 3 in the list of PHP frameworks for web development. With &lt;a href="https://github.com/symfony/symfony"&gt;24.5k+ GitHub stars&lt;/a&gt;, Symfony is not just a PHP web development framework but also provides a set of 50 stand-alone reusable PHP components for faster web app development. Using Symfony, you can develop web applications, microservices, and APIs too. With commercial support from SensioLabs, Symfony stands ahead of many on the list.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Symfony?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;50+ decoupled components easily installable using composer.&lt;/li&gt;
&lt;li&gt;You’ve ‘Lock’ component for managing access to shared resources, ‘Routing’ for obviously implementing routes, ‘Guard’ for creating complex authentications, ‘MIME’ for manipulating MIME messages and creating advanced emails, ‘Security’ for advanced authorizations, ‘PHPUnit Bridge’ for test reporting.&lt;/li&gt;
&lt;li&gt;Symfony uses open-source Doctrine ORM for database operations. It’s a great alternative to writing repetitive SQL code.&lt;/li&gt;
&lt;li&gt;Symfony supports a diverse set of databases MySql, Oracle, PostgreSQL, SQLite, SQL Server, and SAP Sybase, etc.,&lt;/li&gt;
&lt;li&gt;Though PHP itself is a templating language, Symfony provides Twig, a fast, secure, and flexible templating engine. It makes templating concise through its template-oriented syntax. For example, printing default value while looping over an empty array looks as compact as:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{% for player in players %}
    * {{ player.score }}
{% else %}
    No players data.
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is why it is counted among the best PHP frameworks for website development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who uses Symfony for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;BlaBlaCar&lt;/li&gt;
&lt;li&gt;Spotify&lt;/li&gt;
&lt;li&gt;Magento&lt;/li&gt;
&lt;li&gt;Statista&lt;/li&gt;
&lt;li&gt;Practo&lt;/li&gt;
&lt;li&gt;Naukri.com&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For simpler projects, Laravel would make more sense.&lt;/li&gt;
&lt;li&gt;Laravel beats Symfony in performance.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-laminas-project"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://getlaminas.org/"&gt;Laminas Project&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SQeI6VC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/laminas.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SQeI6VC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/laminas.png" alt="laminas"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Laminas Project is a continuation of one of the most popular PHP web development frameworks, i.e., the Zend PHP framework. Zend had 5k+ GitHub stars before transitioning into the Laminas Project. Zend v3 still ranks 5th in PHPBenchmark. Laminas has three major verticals:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mezzio for building middleware applications in PHP.&lt;/li&gt;
&lt;li&gt;Mezzio for building middleware applications in PHP.&lt;/li&gt;
&lt;li&gt;API tools for creating RESTful APIs in PHP.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Laminas?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is indeed an enterprise-ready PHP web development framework. Laminas Project provides components for dependency injection, caching, form validations, PubSubHubbub(WebSub) interactions, logging, routing, pagination, session managements, diagnostic tests, event dispatchers, feed parsers, etc.&lt;/li&gt;
&lt;li&gt;Event-driven flexible MVC framework for building scalable PHP applications.&lt;/li&gt;
&lt;li&gt;Supported databases include MySQL, MS SQL Server, Oracle, MariaDB, IBMDB2, PostgreSQL, etc.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Some noteworthy components of the Laminas framework, apart from the usual ones:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;‘Laminas-log’ – is a PSR-3 compliant logger with support for filtering and formatting.&lt;/li&gt;
&lt;li&gt;‘Laminas-form’ for implementing complex forms, casting them into business objects.&lt;/li&gt;
&lt;li&gt;Laminas-math’ for generating cryptographic numbers&lt;/li&gt;
&lt;li&gt;‘Laminas-session’ for object-oriented interface to session &amp;amp; storage&lt;/li&gt;
&lt;li&gt;‘Laminas-cache’ for caching implementations and codified caching storage strategies for callbacks.&lt;/li&gt;
&lt;li&gt;‘Laminas-db’ for database abstraction, SQL operations.&lt;/li&gt;
&lt;li&gt;‘Laminas-xml2json’ for converting xml documents to JSON format.&lt;/li&gt;
&lt;li&gt;‘Laminas-SOAP’ for creating SOAP applications and interacting with them.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Who uses Laminas for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;According to &lt;a href="https://www.linuxfoundation.org/blog/lf-forms-laminas-project"&gt;LinuxFoundation&lt;/a&gt;, the Zend framework (now Laminas) has been downloaded more than 400 Mn times. The prominent users include BNP Paribas, BBC, and Offers.com.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Laravel beats ZEND in terms of performance.&lt;/li&gt;
&lt;li&gt;Documentation is not beginner-friendly. &lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-yii"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://www.yiiframework.com/"&gt;Yii&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KsMSh6go--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/yii.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KsMSh6go--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/yii.png" alt="yii"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Yii framework has a whopping 11Mn+ downloads from Packagist and 13.6k+ stars on GitHub. Yii, branded as ‘YES, it is!’, is a fast, secure, flexible PHP framework for web development, especially for building MVC architecture websites. It ranks 4 on the PHP Benchmarks list. Yii is a strictly Object-Oriented PHP framework and requires knowledge of inheritance, polymorphism, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Yii?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Thorough Documentation – From installation to explaining web concepts to deploying applications and everything in-between, Yii has documented it all.&lt;/li&gt;
&lt;li&gt;Robust Cache Component – From server side caching to client-side in browser caching, Yii has easy to follow guides for implementing different sorts of caching i.e., data caching, fragment caching, page caching, query caching, HTTP caching etc. For instance,
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// to fetch cached data
$data = $cache-&amp;gt;get($key);
if ($data === false) {
    // $data is unavailable. Compute it from scratch
    $data = $this-&amp;gt;computeFromScratch();
    // now store the static data to cache
    $cache-&amp;gt;set($key, $data);
}
// $data will be available for cache retrieval.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;You can rapidly prototype an MVP using the GII2 code generator provided by Yii to implement CRUD operations for a database.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Security features – Yii provides frameworks &amp;amp; guidelines for implementing authentication, authorization, cryptographic features, password handling, trusted proxies, and headers.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For example, authentication can be implemented using the ‘User component’ and implementing Yii’s ‘IdentityInterface’ interface.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Similarly, Yii provides components and classes for handling requests, working with databases, displaying data, fetching data, debugging code, and many more.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Who uses Yii for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Deloitte&lt;/li&gt;
&lt;li&gt;Fujitsu&lt;/li&gt;
&lt;li&gt;Lenovo&lt;/li&gt;
&lt;li&gt;Discovery&lt;/li&gt;
&lt;li&gt;Lulo&lt;/li&gt;
&lt;li&gt;Utrip&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Strong object-oriented programming prerequisite.&lt;/li&gt;
&lt;li&gt;If performance is a priority, then better alternatives are available.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#6-cakephp"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://cakephp.org/"&gt;CakePHP&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hYyqTdWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/cake-php.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hYyqTdWj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/cake-php.png" alt="cake php"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CakePHP is an open-source web development PHP framework. It’s ranked 6th in PHP Benchmarks, just above the Laravel web development framework. The newly released v4.0 comes with a renovated skeleton design and provides APIs to enable developers for rapid application development. On GitHub, it has 8.3k+ stars and 555 contributors. For commercial support, you have cakeDC. CakeDC is the organization behind CakePHP. You can build highly secure and scalable web applications, including social networks, eCommerce, and online collaboration platforms using CakePHP.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of CakePHP?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It adheres to MVC architecture for PHP-powered web application development.&lt;/li&gt;
&lt;li&gt;Supports other popular design patterns like Associative Data Mapping, Front Controller, etc.&lt;/li&gt;
&lt;li&gt;Supports other popular design patterns like Associative Data Mapping, Front Controller, etc.&lt;/li&gt;
&lt;li&gt;You can leverage code generation and scaffolding features for faster prototype development. Scaffolding refers to techniques to easily access databases or generate project code using certain high-level tools.&lt;/li&gt;
&lt;li&gt;Like many other web development frameworks in this list, the CakePHP web development framework also gets shipped with all batteries included. You have ready-to-use Caching, authentication, validation, internationalization, database APIs features.&lt;/li&gt;
&lt;li&gt;Minimal configuration required. No need for YAML or XML config files.&lt;/li&gt;
&lt;li&gt;You get paid support if required.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You’ve Namespace cake/ORM with classes for&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eager-loading (EagerLoader)&lt;/li&gt;
&lt;li&gt;registry/factor tables (TableRegistry)&lt;/li&gt;
&lt;li&gt;Handling and loading of construction behavior objects (BehaviorRegistry)&lt;/li&gt;
&lt;li&gt;Converting array data into entities (Marshaller)&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This makes it count among the best PHP frameworks for website development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who uses CakePHP for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hyundai&lt;/li&gt;
&lt;li&gt;BMW&lt;/li&gt;
&lt;li&gt;Blendtec&lt;/li&gt;
&lt;li&gt;MIT&lt;/li&gt;
&lt;li&gt;Billabong&lt;/li&gt;
&lt;li&gt;Edureka&lt;/li&gt;
&lt;li&gt;House Party&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Abrupt migrations.&lt;/li&gt;
&lt;li&gt;If you’re building performance-critical applications. It’s not like CakePHP’s performance is not good, but if performance comparing websites have ranked other frameworks to be better performing, you must consider their candidature.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-slim"&gt;
  &lt;/a&gt;
  7. &lt;a href="https://www.slimframework.com/"&gt;Slim&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DWj-M4sP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/slim-1024x234.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DWj-M4sP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/slim-1024x234.png" alt="slim"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Unlike the other web development PHP frameworks mentioned above, Slim, as the name goes, is a PHP micro-framework for web development. Are you aware of micro-frameworks? The ones listed above are full-stack frameworks. Slim, with 10k+ stars on GitHub, is a minimalistic web application and API development framework. Basically, this means you will only have the recipe and won’t get any ready-to-consume functions. In a full-stack framework, you get components, classes, interface for authorization, authentication, routing, paging, database operations, etc. In micro-framework, you get bare minimum support for HTTP requests and routing requests to appropriate controllers. Then why choose a micro-framework? Because it gives you flexibility and high-extensibility.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Slim?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Efficient, fast routers – Slim ships with powerful ROUTER. This maps routes to specific HTTP request handler methods and URLs. Router natively supports different URL types, including the ones with parameters and patterns. Pattern-based URLs are commonly implemented in e-commerce apps.&lt;/li&gt;
&lt;li&gt;PSR-7 Support – It’s necessary to implement PSR-7 implementation in your Slim project.&lt;/li&gt;
&lt;li&gt;Extensible with first-party PHP components and third-party PHP components on packagist.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Who uses Slim for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Gamned&lt;/li&gt;
&lt;li&gt;Bootiq&lt;/li&gt;
&lt;li&gt;AgriTask&lt;/li&gt;
&lt;li&gt;GreenBot&lt;/li&gt;
&lt;li&gt;HHEY&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why to explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you need a full-stack framework.&lt;/li&gt;
&lt;li&gt;Steep learning curve for complex projects.&lt;/li&gt;
&lt;li&gt;For large projects, microframeworks are not suited. No point in reinventing the wheels.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#8-phalcon"&gt;
  &lt;/a&gt;
  8. &lt;a href="https://phalcon.io/en-us"&gt;Phalcon&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oO-ZTMiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/phalcon.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oO-ZTMiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/phalcon.png" alt="phalcon"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Phalcon is a platform-agnostic ridiculously fast web development PHP framework delivered as a C-extension. It provides high performance and low resource consumption. On GitHub, it has scored 10k+ stars and has 242+ contributors.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Phalcon?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Low overheads for MVC architecture web applications – It is compiled to the native platform and is not interpreted.&lt;/li&gt;
&lt;li&gt;The C-extensions classes and functions are loaded with PHP on the webserver as the daemon process starts.&lt;/li&gt;
&lt;li&gt;You can build both single and multi-module MVC applications, as depicted in the image above.&lt;/li&gt;
&lt;li&gt;You can leverage dependency injection features, autoloader features, phalcon ORM for playing with DB records.&lt;/li&gt;
&lt;li&gt;It natively supports PostgreSQL, MySQL, and SQLite.&lt;/li&gt;
&lt;li&gt;You have Phalcon query language for writing queries, Phalcon transactions to ensure data integrity.&lt;/li&gt;
&lt;li&gt;The Phalcon cache component supports backends like Redis, Memcached, Mongo, etc., for quick access to pre-processed data.&lt;/li&gt;
&lt;li&gt;Form-builder, flash messages, VOLT templating engine, translation components are other features worth noting.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are the main reasons to consider Phalcon among the best PHP frameworks for website development.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Who uses Phalcon for their web applications?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SocialVeo&lt;/li&gt;
&lt;li&gt;KingHost&lt;/li&gt;
&lt;li&gt;Proshore&lt;/li&gt;
&lt;li&gt;Urban Sports Club&lt;/li&gt;
&lt;li&gt;PlaceOnAir&lt;/li&gt;
&lt;li&gt;ESCHER&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not ideal for shared hosting.&lt;/li&gt;
&lt;li&gt;No C know-how is required, but if a critical framework level issue arises, you need to debug in C.&lt;/li&gt;
&lt;li&gt;More Popular framework alternatives with huge communities are available.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#9-lumen"&gt;
  &lt;/a&gt;
  9. &lt;a href="https://lumen.laravel.com/"&gt;Lumen&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qUN0pB6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/lumen.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qUN0pB6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/lumen.jpg" alt="lumen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lumen is a micro-framework for developing PHP-powered web applications. It is written in PHP and created by the Laravel team itself. Lumen has 7.1k+ stars on GitHub and 45+ contributors.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EEQY9haX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/lumen-record.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EEQY9haX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/03/lumen-record.png" alt="lumen record"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the features of Lumen?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can build lightning-fast APIs and microservices for Laravel based applications using Lumen. It is faster than Slim and Silex, the other popular alternative PHP microframeworks.&lt;/li&gt;
&lt;li&gt;You can use Laravel features like Eloquent ORM, testing, validation, authorization, caching, queues, views, etc., with minimal configurations.&lt;/li&gt;
&lt;li&gt;Easily upgradable to full-fledged Laravel application if need be.&lt;/li&gt;
&lt;li&gt;Can leverage Laravel Homestead for meeting system requirements. It works with PHP&amp;gt;=7.3&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Can leverage Laravel Homestead for meeting system requirements. It works with PHP&amp;gt;=7.3&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Threat data science&lt;/li&gt;
&lt;li&gt;Index.co&lt;/li&gt;
&lt;li&gt;Publy&lt;/li&gt;
&lt;li&gt;Piio&lt;/li&gt;
&lt;li&gt;ZenChef&lt;/li&gt;
&lt;li&gt;Agro24&lt;/li&gt;
&lt;li&gt;mPokket&lt;/li&gt;
&lt;li&gt;Rooter&lt;/li&gt;
&lt;li&gt;Codepolitan&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Why explore alternative web development frameworks?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If you don’t like Laravel.&lt;/li&gt;
&lt;li&gt;If you need a full-stack and best PHP web framework.&lt;/li&gt;
&lt;li&gt;More suited to microservices and APIs, for large-scale applications, consider a full-stack PHP web development framework.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up!
&lt;/h2&gt;

&lt;p&gt;PHPixie, FuelPHP, Ubiquity, Symlex are some other popular &amp;amp; rising PHP web development frameworks. If you’re building a new web application, we think you must be informed that multiple intuitive web development frameworks have evolved over the years. AngularJs, ReactJs ( not a framework but a library), and Django are creating strong ripples in the web community.&lt;/p&gt;

&lt;p&gt;So, if you’re just exploring web development, do consider these PHP alternatives. If you’re already a PHP pro, choose any PHP web development frameworks that best suit your needs. Irrespective of the framework you chose for development, LambdaTest is versatile enough to support all your web application testing requirements with out-of-the-box features like &lt;a href="https://www.lambdatest.com/responsive-test-online?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Rahul-4052021&amp;amp;utm_term=Rahul"&gt;responsive testing&lt;/a&gt; over 45+ devices, parallel testing, simulated network testing, recording testing sessions, etc. Have you subscribed to the &lt;a href="https://www.lambdatest.com/newsletter/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Rahul-4052021&amp;amp;utm_term=Rahul"&gt;LambdaTest newsletter&lt;/a&gt; yet? Ah! I wouldn’t have missed it 🙂 Happy Testing!&lt;/p&gt;

</description>
      <category>php</category>
      <category>framework</category>
      <category>webdev</category>
    </item>
    <item>
      <title>AWS open source news and updates #66</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Tue, 04 May 2021 07:07:35 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-66-1bhj</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-66-1bhj</guid>
      <description>&lt;h2&gt;
  &lt;a href="#may-4th-2021-instalment-66"&gt;
  &lt;/a&gt;
  May 4th, 2021 - Instalment #66
&lt;/h2&gt;

&lt;p&gt;Newsletter #66. &lt;/p&gt;

&lt;p&gt;This week we have a really outstanding collection of new open source projects, including eventbridge-atlas, ecsk, spotinfo, pecos and more, so make sure you spend some time checking those out. Following on from CDK Day, we have plenty of great posts for CDK fans. As always, there are lots of great community and AWS blog posts covering event driven architectures, containers, big data, and so happy to see the AWS DeepRacer open source announcements last week. Finally, we have a couple of great videos, a podcast and events you should check out and put in your diary.&lt;/p&gt;

&lt;p&gt;Before you dive in, make sure you are aware of the following important updates from last week.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NodeJS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are using NodeJS then last week we had an important post that you should read and check out the recommendations. Trivikram Kamat writes in, &lt;a href="https://aws-oss.beachgeek.co.uk/fw"&gt;Announcing the end of support for Node.js &amp;lt;10.x in the AWS SDK for JavaScript (v2)&lt;/a&gt; the timelines, versions as well as the motivation behind this.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Neuron&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/aws/aws-neuron-sdk"&gt;AWS Neuron&lt;/a&gt; is the SDK for running machine learning inference using AWS Inferentia chips, and last week we announced an important change in how you install and update this SDK. To find out more, read &lt;a href="https://aws-oss.beachgeek.co.uk/go"&gt;End of support for Neuron Conda packages in Deep Learning AMI&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: Matt Hansen, Eric Johnson, Al MS, Michele Sancricca, Hari Rajaram, Jeremy Ber, Kumar Abhinav, David Duncan, Tracy Pierce, Trivikram Kamat, Zachary Whitford, Richa Prajapati, Aldo Piddiu, Christian Weber, Mark Richman, Jason Gudalis, Baichuan Sun, Eden Duthie, Charles Frenzel, Thom Lane, David Smith, Camilo Buscaron, Eddie Calleja, Siddalingesha Devarmani Shivakumar, Jayadev Vadakkanmarveettil, Bob Wise, Peder Ulander, Willy Tarreau, Jaana Dogan, Jarrod Watts, Jason Umiker, Alexei Ledenev, yukiarrr, OlegA, David Boyne, Teadeveloper, Hsiang-Fu Yu, Inderjit S. Dhillon, Chris Fife, Eric Beard, Rico Huijbers, Sundeep Kumar, Rahul Sonawane, Jasper Wang and Van Vo Thanh.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-from-open-source-projects"&gt;
  &lt;/a&gt;
  Latest from open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;eventbridge-atlas&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gg"&gt;eventbridge-atlas&lt;/a&gt; this is a great open source project from David Boyne, that allows you to document, discover and share your EventBridge schemas. Great documentation that shows you the motivation behind the project as well as how to get started, David also put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/gh"&gt;Introducing EventBridge Atlas&lt;/a&gt; which is a must read this week.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iDBw6--S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.boyney.io/static/images/blogs/eventbridge-atlas/how-it-works.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iDBw6--S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.boyney.io/static/images/blogs/eventbridge-atlas/how-it-works.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ecsk&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/ge"&gt;ecsk&lt;/a&gt; this open source tool from yukiarrr is a CLI tool that you can interactively call Amazon ECS APIs (run-task, execute-command, stop-task), copy files between ECS and local, and view logs. Clear documentation to help you install and get started, check out this demo to see it in action.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rms4kOtp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/yukiarrr/ecsk/main/docs/images/ecsk.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rms4kOtp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/yukiarrr/ecsk/main/docs/images/ecsk.gif" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;spotinfo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gf"&gt;spotinfo&lt;/a&gt; this open source project from Alexei Ledenev is a command-line tool that helps you determine AWS Spot instance types with the least chance of interruption and provides the savings you get over on-demand rates. Awesome little tool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;pecos&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gj"&gt;pecos&lt;/a&gt; PECOS is a versatile and modular open source machine learning (ML) framework for fast learning and inference on problems with large output spaces, such as extreme multi-label ranking (XMR) and large-scale retrieval. PECOS' design is intentionally agnostic to the specific nature of the inputs and outputs as it is envisioned to be a general-purpose framework for multiple distinct applications. You can read more about this project in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/gk"&gt;Amazon open-sources library for prediction over large output spaces&lt;/a&gt; from Hsiang-Fu Yu and Inderjit S. Dhillon.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y4zgLQDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.amazon.science/dims4/default/f395830/2147483647/strip/true/crop/2346x1228%2B0%2B0/resize/1200x628%21/quality/90/%3Furl%3Dhttp%253A%252F%252Famazon-topics-brightspot.s3.amazonaws.com%252Fscience%252F44%252F70%252F4c683029463da1022b8b582635e3%252Frecursive-matcher.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y4zgLQDt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://assets.amazon.science/dims4/default/f395830/2147483647/strip/true/crop/2346x1228%2B0%2B0/resize/1200x628%21/quality/90/%3Furl%3Dhttp%253A%252F%252Famazon-topics-brightspot.s3.amazonaws.com%252Fscience%252F44%252F70%252F4c683029463da1022b8b582635e3%252Frecursive-matcher.png" alt="pecos"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-mwaa-local-runner&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gd"&gt;aws-mwaa-local-runner&lt;/a&gt; this is a project I have been waiting to be released for a while, and this provides you with a local environment that replicates an Amazon Managed Workflows for Apache Airflow (MWAA) environment. Check out the docs for details on how to get this up and running, but I have been running it for a while and find it super useful for doing local development and testing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-ec2-dashboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gc"&gt;aws-ec2-dashboard&lt;/a&gt; this open source project from OlegA is a Node.js/JavaScript application that displays list of EC2 instances in a compact and simple way.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;yake&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gi"&gt;yake&lt;/a&gt; Alexander Mancevice has put this open source project together that is a Rake like DSL for writing AWS Lambda handlers. Rake is a software task management and build automation tool, so this project might appeal to those Ruby developers looking to explore writing functions and deploying them on AWS Lambda.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;awscloudexplorer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gl"&gt;awscloudexplorer&lt;/a&gt; this open source tool from Teadeveloper for TUI (terminal user interface) lovers to explore the resources in AWS Cloud using a TUI  instead a GUI or AWS web console. tmux and nc fans will love this tool, currently checking it out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://asciinema.org/a/1IkBGa3DB0xKuhCmWtOjeoYSx"&gt;https://asciinema.org/a/1IkBGa3DB0xKuhCmWtOjeoYSx&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#community-open-source-posts"&gt;
  &lt;/a&gt;
  Community open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Direktiv&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g8"&gt;Direktiv v0.2.1: deploying on AWS EKS or Docker and new UI!&lt;/a&gt; I covered this project last week, and Wilhelm Wonigkeit from Direktiv has a new post this time showing you how you can deploy this open source project (an event driven, container based workflow engine) on AWS, as well as covering some of the latest new features they have added. This is a really interesting project, so check it out if you missed this last week.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pwLu2x6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AsAHvteh5UOXZyqjEGdxxRg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pwLu2x6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1000/1%2AsAHvteh5UOXZyqjEGdxxRg.png" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GraphQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g7"&gt;Get Started With AWS Amplify, Next.JS &amp;amp; Typescript. Full Stack with GraphQL + Authentication in 10 minutes!&lt;/a&gt; Jarrod Watts puts himself in the leaderboard for blog post with the longest title this week, and what a great post it is - 10 minutes you will not regret. Easy to follow with video backup incase you prefer that.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HAProxy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g6"&gt;HAProxy Forwards Over 2 Million HTTP Requests per Second on a Single Arm-based AWS Graviton2 Instance&lt;/a&gt; Willy Tarreau takes an in depth look at how HAProxy scales when running on AWS Graviton2 instance types. This is a great post, covering the methodology, results and analysis. As with all benchmark posts, I don't want to spoil the conclusion so make sure you read this post to find out more. I will leave you with this tantalising graph though...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7usmhG5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.haproxy.com/wp-content/uploads/2021/04/7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7usmhG5q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.haproxy.com/wp-content/uploads/2021/04/7.png" alt="haproxy"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon EKS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are looking to expand upon the core Amazon EKS cluster, perhaps been inspired or manually deploying a number of add-ons that you might have seen as part of the &lt;a href="https://aws-oss.beachgeek.co.uk/ga"&gt;Amazon EKS Workshop&lt;/a&gt;, then this post from Jason Umiker,&lt;a href="https://aws-oss.beachgeek.co.uk/g9"&gt;Automating the provisioning of a production-ready Kubernetes cluster with AWS EKS &amp;amp; CDK&lt;/a&gt; will show you how to automate the configuration of those add-ons. Very nice indeed. What is even better is that Jason has written his CDK app in Python, and that makes me very happy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/aws/using-aws-cdk-to-deploy-your-amazon-managed-workflows-for-apache-airflow-environment-12cf"&gt;Using AWS CDK to deploy your Amazon Managed Workflows for Apache Airflow environment&lt;/a&gt; to celebrate CDK Day last week I put together this post showing you how you can use AWS CDK to configure and deploy an Amazon Managed Workflows for Apache Airflow environment. I hope it is useful, and builds upon earlier posts where I showed you how you can do this via CloudFormation.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-open-source-posts"&gt;
  &lt;/a&gt;
  AWS open source posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;AWS DeepRacer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It has been a while since I have done anything with AWS DeepRacer, but the DeepRacer community are very close to my heart and they have some amazing folks doing some really great things. I am very happy therefore, that last week we published a couple of blog posts announcing the open sourcing of AWS DeepRacer.&lt;/p&gt;

&lt;p&gt;First up we had my good friend (and follower of DeepRacer cars!) David Smith who post, &lt;a href="https://aws-oss.beachgeek.co.uk/g2"&gt;AWS DeepRacer device software now open source&lt;/a&gt; dives into more details about this announcement including a look at some of the sample projects that have been compiled by the AWS DeepRacer team and members of that awesome DeepRacer community, before walking you through some of those samples. David also shares details about discounts you can get yourself which are not to be sniffed at, so make sure you check this post out.&lt;/p&gt;

&lt;p&gt;Following that we have a collaboration between Camilo Buscaron, Eddie Calleja, Siddalingesha Devarmani Shivakumar, and Jayadev Vadakkanmarveettil on the post, &lt;a href="https://aws-oss.beachgeek.co.uk/g3"&gt;AWS DeepRacer is now open source and ready to hit the road with ROS 2&lt;/a&gt; looks at this announcement from the Robotics perspective, taking a look at some of the ROS packages that are being open sourced and how you can use these to start building projects. They also cover the sample projects, taking a look at the Follow the Leader, Off Road and Mapping projects.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--alB_FweY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/27/deepracer-mapping_1000.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--alB_FweY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/27/deepracer-mapping_1000.gif" alt="deep racer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Really excited as to the possibilities and look forward to sharing future projects in this newsletter.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ROS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are into Robotics, this post from Matt Hansen, &lt;a href="https://aws-oss.beachgeek.co.uk/gt"&gt;AWS announces a new developer desktop feature within the AWS RoboMaker IDE&lt;/a&gt;, will be right up your street, showing you a really cool new way we are making it easier for roboticists to develop their robot applications by extending the developer tooling beyond the RoboMaker IDE to now include a full virtual Ubuntu desktop. You can run your favourite ROS tools, Gazebo, RViz, and other tools directly as if it were a local Ubuntu desktop. I can see my Ubuntu machine next to me getting nervous.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J3Y8c9vP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/a9334987ece78b6fe8bf130ef00b74847c1d3da6/2021/04/30/fig5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J3Y8c9vP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/a9334987ece78b6fe8bf130ef00b74847c1d3da6/2021/04/30/fig5.jpg" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Streamlit&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g1"&gt;Using Streamlit to build an interactive dashboard for data analysis on AWS&lt;/a&gt; Baichuan Sun, Eden Duthie, Charles Frenzel, and Thom Lane collaborate on this tutorial that show how to stand up an Exploratory Data Analysis (EDA) dashboard for business users using Streamlit. Streamlit is an open source framework for data scientists to efficiently create interactive web-based data applications in pure Python. This walkthrough will show you how you can easily deploy this into your AWS environment with the least effort - always a good thing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CUVW2mpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/27/tholane_arch_1000.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CUVW2mpB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/27/tholane_arch_1000.png" alt="arch"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Grafana&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/fz"&gt;Using Amazon Managed Service for Grafana to troubleshoot a serverless application&lt;/a&gt; Mark Richman builds upon an earlier blog post to show you how you can integrate Amazon CloudWatch logs and metrics with Amazon Managed Service for Grafana (AMG), using it to see how you might troubleshoot a serverless application built using Amazon API Gateway and AWS Lambda. The post covers how to visualise, analyze, alarm, and notify on metrics and logs across multiple data sources, all from within Grafana and Mark provides a link to the source code so you can try it yourself.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YmQ6q-8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/12/Richman-Grafana_F1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YmQ6q-8s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/12/Richman-Grafana_F1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As the dust settles after another amazing CDK Day event, what better way to celebrate that to catch up on the latest AWS CDK news.&lt;/p&gt;

&lt;p&gt;Christian Weber dropped his latest post in his regular &lt;a href="https://aws-oss.beachgeek.co.uk/fy"&gt;CDK Corner – April 2021&lt;/a&gt; series. Plenty of updates and news from around the world, so make sure you check out this post. As always, love the community acknowledgements so well done folks who have successfully had their first PRs merged.&lt;/p&gt;

&lt;p&gt;Jasper Wang and Van Vo Thanh put together this post, &lt;a href="https://aws-oss.beachgeek.co.uk/gs"&gt;Building and deploying Fargate with EKS in an enterprise context using the AWS Cloud Development Kit and cdk8s+&lt;/a&gt; that shows you how you can deploy a sample Kubernetes workload on an Amazon EKS cluster running Kubernetes pods on AWS Fargate using cdk8s/cdk8s+, an open-source software development framework for defining Kubernetes applications a la CDK.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lTmaWki9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/03/12/CDK8s-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lTmaWki9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/03/12/CDK8s-1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Announced the evening before CDK Day, Eric Johnson's post &lt;a href="https://aws-oss.beachgeek.co.uk/gp"&gt;Better together: AWS SAM and AWS CDK&lt;/a&gt; announced the public preview of AWS Serverless Application Model CLI (AWS SAM CLI) support for local development and testing of AWS CDK projects. If you are not familiar with AWS SAM/SAM CLI, it is a developer tool that makes it easier to build, locally test, package, and deploy serverless applications. This new capability extends the previous ability to test/package using CloudFormation to now be able to build/test with AWS CDK. If you want to know more check out the videos from CDK Day (I will post when they are uploaded in future newsletters) where Eric showed you this in action. This new capability generated a lot of love at CDK Day, so make sure you check this post out.&lt;/p&gt;

&lt;p&gt;Finally, it was great to see AWS CDKv2 announced last week, in the post &lt;a href="https://aws-oss.beachgeek.co.uk/gq"&gt;Announcing AWS Cloud Development Kit v2 Developer Preview&lt;/a&gt; Chris Fife, Eric Z. Beard, and Rico Huijbers talk you through the changes between CDK v1 and v2. They talk about the AWS Constructs Library, the constructs compatibility layer, the new lifecycle for experimental APIs and more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;RedHat Linux&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/fv"&gt;Announcing availability of Red Hat Enterprise Linux with High Availability on Amazon EC2&lt;/a&gt; this post from Kumar Abhinav and David Duncan provides a quick walk through of deploying Red Hat Enterprise Linux with High Availability and combining this with the scale, performance and elasticity of AWS to provide an operating system for your highly available compute clusters. I was not aware of Corosync before reading this post, so I am sure you will learn something new too.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0wi31jZ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/19/kabhinaa_Red-Hat-Enterprise-Linux_f1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0wi31jZ7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/04/19/kabhinaa_Red-Hat-Enterprise-Linux_f1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gr"&gt;Orchestrate AWS Glue DataBrew jobs using Amazon Managed Workflows for Apache Airflow&lt;/a&gt; Sundeep Kumar and Rahul Sonawane show you how you can use to orchestrate and schedule DataBrew jobs with Amazon Managed Workflows for Apache Airflow (MWAA). In this particular post they create a simple transformation logic pipeline, using DataBrew jobs to join two datasets, rename a column, and add a new column and then use Amazon Athena to verify the results.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kwx9ouZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/04/27/bdb1364-databrew-mwaa-orchestration-1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kwx9ouZF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/04/27/bdb1364-databrew-mwaa-orchestration-1.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Flink&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/gm"&gt;Enrich your data stream asynchronously using Amazon Kinesis Data Analytics for Apache Flink&lt;/a&gt; from Hari Rajaram and Jeremy Ber show you how you can approach asynchronous enrichment of a data stream through the Apache Flink API for asynchronous I/O with external data sources. Why does this matter? Well, you might need this if you have use cases such as  enriching a streaming payload with additional elements, to passing data elements to an API for a machine learning (ML) prediction, or loading data streams into a data lake for near-real-time analytics. Read the post to find out more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Presto&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I have spent some time recently working with Presto on Amazon EMR, so I enjoyed reading this new post,&lt;a href="https://aws-oss.beachgeek.co.uk/gn"&gt;Amazon EMR introduces EMR runtime for Presto, providing a 2.6 times speedup&lt;/a&gt; from Al MS and Michele Sancricca. Running Presto on Amazon EMR is a popular choice because Amazon EMR provides the latest, stable, open-source community Presto innovations and Amazon EMR platform-level optimisations for Presto workloads - and this posts takes a look at some of those optimisations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Kafka&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/fx"&gt;How Goldman Sachs migrated from their on-premises Apache Kafka cluster to Amazon MSK&lt;/a&gt; this guest post from Zachary Whitford, Richa Prajapati, and Aldo Piddiu from the Global Investment Research engineering team at Goldman Sachs takes a look at their migration journey as they moved from self hosted Apache Kakfa to using Amazon Managed Streaming for Apache Kafka (or Amazon MSK). The post covers the rational and thinking behind the move, the options they considered as well as the lessons learned. If you are using/running Apache Kafka workloads, make sure you read this post.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F41zFdCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/04/22/bdb1229-gir-msk-2.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F41zFdCo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/04/22/bdb1229-gir-msk-2.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Performance Dashboard&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g0"&gt;New Performance Dashboard on AWS makes delivering open, responsive government simple&lt;/a&gt; Jason Gudalis writes about a newly open sourced solution that aims to help manage and showcase the data you have. The post focuses specifically on doing this with data at the heart of how public services are working, but you could adapt it to your own needs. If you want to see it in action, there is a very short video that shows you what you can expect.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IwHU48yc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/04/28/Performance-Dashboard-on-AWS-Figure-1-architecture.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IwHU48yc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/9e6a55b6b4563e652a23be9d623ca5055c356940/2021/04/28/Performance-Dashboard-on-AWS-Figure-1-architecture.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Node 14.x&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can now use the Node.js 14.x runtime to develop functions in AWS &lt;a href="mailto:Lambda@Edge"&gt;Lambda@Edge&lt;/a&gt;. This runtime is in addition to the currently supported Node.js 10.x and Node.js 12.x runtimes. Node.js 14.x, the current Long Term Support (LTS) version of Node.js, uses the new V8 8.1 engine and provides better performance than the previous LTS version, 12.x. In addition, Node.js 14.x supports new features such as nullish coalescing (?? operator), options chaining (?. operator), and diagnostic reporting&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Kafka&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Managed Streaming for Apache Kafka (Amazon MSK) now supports Apache Kafka version 2.8.0 for new and existing clusters. Apache Kafka 2.8.0 includes several bug fixes and new features that improve performance. Some of the key features include connection rate limiting to avoid problems with misconfigured clients (KIP-612) and topic identifiers which provides performance benefits (KIP-516). There is also an early access feature to replace zookeeper with a self-managed metadata quorum (KIP-500), however this is not recommended for use in production. For a complete list of improvements and bug fixes, see the Apache Kafka &lt;a href="https://downloads.apache.org/kafka/2.8.0/RELEASE_NOTES.html"&gt;release notes for 2.8.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS Secrets Manager launched the AWS Secrets and Configuration Provider (ASCP), a plugin for the industry-standard Kubernetes’ Secrets Store CSI driver. ASCP enables applications running in Kubernetes pods to retrieve secrets from AWS Secrets Manager easily, without the need for custom code. Once installed, ASCP ensures your applications always receive the most recent version of your secrets as these are rotated. As a result, you automatically benefit from the rotation and lifecycle management features that Secrets Manager provides, without added coding effort. ASCP also enables convenient and secure access to your configurations in AWS SSM Parameter Store. You can read more about this in the blog post from Tracy Pierce, &lt;a href="https://aws-oss.beachgeek.co.uk/fu"&gt;How to use AWS Secrets &amp;amp; Configuration Provider with your Kubernetes Secrets Store CSI driver&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#video-of-the-week"&gt;
  &lt;/a&gt;
  Video of the week
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;ROSA&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A couple of must view videos this week, starting off with Bob Wise and Peder Ulander sharing some insights into how Red Hat OpenShift on AWS (ROSA) is helping enterprises simplify, scale cloud projects as they move toward the edge. This was recorded during the Red Hat Summit, and is well worth watching as it covers more than just ROSA but open source at AWS too. Check out the original coverage &lt;a href="https://aws-oss.beachgeek.co.uk/g4"&gt;here&lt;/a&gt;, or watch the video below from the Cube.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/sqqg1tOyjtk"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Copilot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The final video is a recording from the Containers from the Couch crew of the Amazon ECS Workshop, where you will learn how to deploy your application to Amazon ECS using AWS Copilot.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/o8o9Ea9o0aI"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#podcast-of-the-week"&gt;
  &lt;/a&gt;
  Podcast of the week
&lt;/h3&gt;

&lt;p&gt;Jaana Dogan (&lt;a class="mentioned-user" href="https://dev.to/rakyll"&gt;@rakyll&lt;/a&gt;
) explains which problems the industry, and especially cloud vendors, try to solve with their investment in open source standards such as OpenTelemetry and gives an update where OpenTelemetry is, the next upcoming milestones and what a bright future with OpenTelemetry being widely adopted could bring.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/g5"&gt;The State of OpenTelemetry with Jaana Dogan&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Cloud Native Rust Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 3rd&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Rust is a language empowering everyone to build secure, reliable, and efficient software. Rust is becoming more widely used in cloud native, powering everything from lightning-fast service meshes and powerful developer tools to internet-scale distributed databases.&lt;/p&gt;

&lt;p&gt;Come explore what makes Rust a fantastic choice for new cloud native development, and learn about how the community uses Rust today. Find out &lt;a href="https://aws-oss.beachgeek.co.uk/5y"&gt;more and register here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Container Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 4, 2021 | 10:00AM - 6:00PM CEST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Container Day x KubeCon is a fully live, virtual day of sessions all about Amazon EKS and Kubernetes at AWS, hosted by Brent Langston and Adam Keller of Containers from the Couch. At this Day Zero KubeCon event, the AWS Kubernetes team will be revealing new launches, demoing products and features, covering best practices, and answering your questions live on Twitch! If you have a question before the event, you can email the team at &lt;a href="mailto:awscontainerday@amazon.com"&gt;awscontainerday@amazon.com&lt;/a&gt; and maybe get them answered.&lt;/p&gt;

&lt;p&gt;Find out more and to register, &lt;a href="https://aws-oss.beachgeek.co.uk/cr"&gt;click here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;An Introduction to Amazon Managed Blockchain&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;5th May&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Managed Blockchain (AMB) is a fully managed service that makes it easier to build scalable blockchain networks using popular open source frameworks, including Hyperledger Fabric and Ethereum. AMB includes several features and enhancements beyond those provided by the open-source projects on which it is based. It supports public and private blockchain options, each of which favors different use cases. We review reference architectures outlining example applications on both Hyperledger Fabric and Ethereum. In this lecture, you will also hear several customer success stories building solutions on Amazon Managed Blockchain.&lt;/p&gt;

&lt;p&gt;Find out more and register &lt;a href="https://aws-oss.beachgeek.co.uk/dx"&gt;via this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Building And Maintaining Your Own Secure Container OS&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 13th 9am PST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Curtis Rissi, a Principal Partner SA at AWS will walk attendees through the Bottlerocket (an open-source Linux-based operating system meant for hosting containers) build process, and provide some key use cases for customisation: how to add new configuration options; how to add new packages; how to configure your own update repositories; how to add security policy; and other common customisations. &lt;/p&gt;

&lt;p&gt;Find out more and to register, click &lt;a href="https://aws-oss.beachgeek.co.uk/ed"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile and Front-End Live&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;May 25th, 9:00 - 15:00 PDT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is a LIVE streamed event on Twitch  focused on accelerating full-stack mobile and web development. Learn about AWS Amplify, a set of purpose-built tools and services for front-end web and mobile developers that simplify app development. Deep dive into GraphQL and AWS AppSync, a fully-managed GraphQL service that improves app performance and developer productivity.&lt;/p&gt;

&lt;p&gt;You can read more about what you can expect in the blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/f4"&gt;Mobile and Front-End Live, May 25&lt;/a&gt; and &lt;a href="https://aws-oss.beachgeek.co.uk/f3"&gt;register via this link&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>Become a Faster Developer with Vim</title>
      <author>jones268</author>
      <pubDate>Tue, 04 May 2021 06:55:14 +0000</pubDate>
      <link>https://dev.to/jones268/become-a-faster-developer-with-vim-53el</link>
      <guid>https://dev.to/jones268/become-a-faster-developer-with-vim-53el</guid>
      <description>&lt;p&gt;Vim is the world’s most powerful text editor. It's available for nearly every computing platform in existence, and its core design philosophy is simplicity. Vim gives you the power to do what you want it to do with a minimal amount of effort. &lt;/p&gt;

&lt;p&gt;Vim is a &lt;strong&gt;keyboard-based text editor&lt;/strong&gt; originally released in 1991. It is named after the word "vi" from the command line. You can do everything faster than with a mouse, it supports macros, jumping to lines and much much more.&lt;/p&gt;

&lt;p&gt;Vim can be used in the terminal, over SSH, inside Jetbrains tools such as PyCharm, AndroidStudio, inside Visual Studio Code... and basically everywhere.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-master-vim"&gt;
  &lt;/a&gt;
  How to Master Vim?
&lt;/h2&gt;

&lt;p&gt;If you want to become a faster developer and are new to vim, you can try &lt;a href="https://vim.is/"&gt;this tutorial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vim is an amazing tool for editing text. If you don’t use Vim, you should seriously consider it. It makes writing code faster and more efficient.&lt;/p&gt;

&lt;p&gt;The problem is that Vim isn’t easy for beginners and the learning curve can be steep, especially if you’re not coming from a background in hardcore operating systems or programming.&lt;/p&gt;

&lt;p&gt;As a beginner, it can be discouraging to use vim. You'll be frustrated not understanding commands, not knowing the right timing to hit the key. &lt;/p&gt;

&lt;p&gt;The exercises make it easier and fun to learn Vim. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ni56-96--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wm815yhfcdx95a593ec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ni56-96--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/9wm815yhfcdx95a593ec.png" alt="learn vim"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Personally I use Vim mode all the time in Visual Studio Code and the terminal. One workflow everywhere and much faster than not using vim.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cKMtJ4dI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfvjfxj9i40gn5wo8qae.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cKMtJ4dI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mfvjfxj9i40gn5wo8qae.png" alt="visual studio vim"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Vim is your best friend because it's used by programmers, writers and developers all over the world. Learning Vim is a must to maximize your development speed and efficiency.&lt;/p&gt;

</description>
      <category>linux</category>
      <category>vim</category>
      <category>productivity</category>
    </item>
  </channel>
</rss>
