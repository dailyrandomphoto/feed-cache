<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Escaping Ctrl + S in Vs Code</title>
      <author>Amritanshu Dev Rawat</author>
      <pubDate>Sun, 30 May 2021 08:09:15 +0000</pubDate>
      <link>https://dev.to/amritanshu/escaping-ctrl-s-in-vs-code-1o86</link>
      <guid>https://dev.to/amritanshu/escaping-ctrl-s-in-vs-code-1o86</guid>
      <description>&lt;p&gt;Are you also tired of pressing ctrl + s every single time?&lt;/p&gt;

&lt;p&gt;Here you can change your setting to AutoSave&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Vs code -&amp;gt; Click on file -&amp;gt; Select AutoSave&lt;/strong&gt;**&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/e15nV4NR6b8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Twitter:
&lt;a href="https://twitter.com/NewGenDeveloper"&gt;https://twitter.com/NewGenDeveloper&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>vscode</category>
      <category>codenewbie</category>
      <category>code</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Space Physics</title>
      <author>Sooraj</author>
      <pubDate>Sun, 30 May 2021 07:46:45 +0000</pubDate>
      <link>https://dev.to/soorajsnblaze333/space-physics-m9d</link>
      <guid>https://dev.to/soorajsnblaze333/space-physics-m9d</guid>
      <description>&lt;p&gt;So last month I was bored and decided to have some fun by coding some space related stuff. I took 5 space related topics but I have added 2 of them here since the rest are still in work in progress. I have been so much in to Space and Astronomy recently and then I wrote this simply to understand what happens and how it happens. These are my codepens&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How a satellite/asteroid/comet changes it speed and trajectory using the help of a planet or any other object with a gravitational force.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/SoorajSnBlz/embed/QWpOGvq?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Saturn's rings using real gravitational physics. The rings are actually small particles moving at high speed held together by the gravitational force but I keep the trails to look like there are more particles there. There are lots of properties to adjust on the codepen. Feel free to check it out.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tWkTJbyY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/logfiz1n1f4z32zyy0xh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tWkTJbyY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/logfiz1n1f4z32zyy0xh.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The code is a little unoptimized for now so I am not adding the codepen embed here but here is the link to check it out &lt;a href="https://codepen.io/SoorajSnBlz/pen/Vwprmdv"&gt;https://codepen.io/SoorajSnBlz/pen/Vwprmdv&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>canvas</category>
      <category>physics</category>
      <category>math</category>
    </item>
    <item>
      <title>YAGNI Principle in 100 seconds</title>
      <author>Richard Wynn</author>
      <pubDate>Sun, 30 May 2021 07:20:45 +0000</pubDate>
      <link>https://dev.to/richardwynn/yagni-principle-in-100-seconds-1i6j</link>
      <guid>https://dev.to/richardwynn/yagni-principle-in-100-seconds-1i6j</guid>
      <description>&lt;h2&gt;
  &lt;a href="#bulb-what-does-yagni-stand-for"&gt;
  &lt;/a&gt;
  üí° What does YAGNI stand for?
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;YAGNI&lt;/strong&gt; stands for &lt;em&gt;You Ain‚Äôt Gonna Need It&lt;/em&gt;. It‚Äôs a principle from software development methodology of Extreme Programming (XP). This principle says that you should not create features that it's not really necessary.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u53Aunfr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq3ggyimlj9h32ektgrx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u53Aunfr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tq3ggyimlj9h32ektgrx.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This principle is similar to the &lt;strong&gt;&lt;a href="https://dev.to/richardwynn/kiss-design-principle-in-100-seconds-3ca6"&gt;KISS&lt;/a&gt;&lt;/strong&gt; principle, once that both of them aim for a simpler solution. The difference between them is that YAGNI focus on removing unnecessary functionality and logic, and &lt;strong&gt;&lt;a href="https://dev.to/richardwynn/kiss-design-principle-in-100-seconds-3ca6"&gt;KISS&lt;/a&gt;&lt;/strong&gt; focus on the complexity.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-yagni"&gt;
  &lt;/a&gt;
  Why YAGNI?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Any work that's only used for a feature that's needed tomorrow, means losing effort from features that need to be done for the current iteration.&lt;/li&gt;
&lt;li&gt;Creeping featurism leads to code bloat; the software will becomes larger and much more complicated.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#quotes"&gt;
  &lt;/a&gt;
  Quotes
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;Always implement things when you actually need them, never when you just foresee that you need them.&lt;/em&gt; (Ron Jeffries, one of the co-founders of the XP)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#memo-when-not-to-practice-yagni"&gt;
  &lt;/a&gt;
  üìù When not to practice YAGNI
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Learning something new:&lt;/strong&gt; Evaluate a new technology exclusively to gain the time back later and minimize the risk of losing more time by making the wrong decision.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Current design decisions based on future needs:&lt;/strong&gt; Don't sabotage your efforts because you think they violate YANGI. Instead, make the future-proof design decision, but only implement enough to fulfill the current need.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Abstracting external dependencies:&lt;/strong&gt; Take time to astract these dependencies will avoid rework and decrease the complexity.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Testing, Security, Scale, and Business Requirements:&lt;/strong&gt; YAGNI is not a free-pass on writing tests, secure code, considering scale, or business requirements.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wQx2cQRR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xzhlcc5kmgp61gmngpzp.jpg" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#iphone-keep-in-touch"&gt;
  &lt;/a&gt;
  üì± Keep in Touch
&lt;/h2&gt;

&lt;p&gt;If you like this article, don't forget to follow and stay in touch with my latest ones in the future by following me via:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Twitter:&lt;/strong&gt; &lt;a href="https://twitter.com/RichardWynn01"&gt;https://twitter.com/RichardWynn01&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Medium:&lt;/strong&gt; &lt;a href="https://richard-wynn.medium.com"&gt;https://richard-wynn.medium.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Github:&lt;/strong&gt; &lt;a href="https://github.com/richard-wynn"&gt;https://github.com/richard-wynn&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>design</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Creating your own bind() (Polyfill of bind)</title>
      <author>Uddesh</author>
      <pubDate>Sun, 30 May 2021 06:48:50 +0000</pubDate>
      <link>https://dev.to/uddeshjain/creating-your-own-bind-polyfill-of-bind-433j</link>
      <guid>https://dev.to/uddeshjain/creating-your-own-bind-polyfill-of-bind-433j</guid>
      <description>&lt;p&gt;So, what is polyfill?&lt;/p&gt;

&lt;p&gt;Polyfill is a fallback for a method that is not supported by the browser by default. You can find browser support for any function or method on the &lt;code&gt;mdn&lt;/code&gt; website.&lt;/p&gt;

&lt;p&gt;Now, what is &lt;code&gt;bind()&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;According to &lt;code&gt;mdn&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;bind()&lt;/code&gt; method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This definition sounds really fancy, but what does that mean?&lt;/p&gt;

&lt;p&gt;In simple words,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;bind()&lt;/code&gt; takes an object as an argument and returns a new function whose &lt;code&gt;this&lt;/code&gt; refers to the object we passed as an argument.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, we got the idea about &lt;code&gt;polyfill&lt;/code&gt; and &lt;code&gt;bind()&lt;/code&gt;. So, let's try to implement it.&lt;/p&gt;

&lt;p&gt;1). let's create an object that we are going to use as a call site.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2). Create a &lt;code&gt;function&lt;/code&gt; that we need to bind with the object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you call this function now, It will print &lt;code&gt;undefined&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;3). Add your bind() to the function prototype.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Putting it all together.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Jack&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is the basic implementation of &lt;code&gt;bind()&lt;/code&gt;, But it has few edge cases. Let's say you want to pass some arguments in &lt;code&gt;myBind()&lt;/code&gt;. How will you do that? Currently, we are not accepting arguments other than the object itself. Let's implement this functionality.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// id will be undefined&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a_random_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Jack, undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are trying to pass &lt;code&gt;id&lt;/code&gt; in &lt;code&gt;myBind&lt;/code&gt; but not able to access it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The solution
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// id will be undefined&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Accepting any number of arguments passed to myBind&lt;/span&gt;
&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a_random_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// Jack, a_random_id&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we solved an edge case. However, there is one more improvement we can make. What if we want to pass arguments to &lt;code&gt;newFunc()&lt;/code&gt;?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-problem"&gt;
  &lt;/a&gt;
  The problem
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// id will be undefined&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Accepting any number of arguments passed to myBind&lt;/span&gt;
&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a_random_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New York&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Jack, a_random_id, undefined&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are passing 'New York' but not able to access it inside &lt;code&gt;myFunc&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-solution"&gt;
  &lt;/a&gt;
  The solution
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Jack&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;city&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// id will be undefined&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="c1"&gt;// Accepting any number of arguments passed to myBind&lt;/span&gt;
&lt;span class="nb"&gt;Function&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;func&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;// Accepting arguments passed to newFunc&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;newArgs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;func&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[...&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;newArgs&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newFunc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;myFunc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;myBind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;a_random_id&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;newFunc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;New York&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// Jack, a_random_id, New York&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now I think we have covered almost all the cases. But, still, if there is anything left, Let me know in the comment section.&lt;/p&gt;

&lt;p&gt;Time to celebrate. You have implemented your own &lt;code&gt;bind()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I hope this will be helpful for you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3o6ZtcOxQ9vi8vb9Cg/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3o6ZtcOxQ9vi8vb9Cg/giphy.gif" alt="Bye"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>javascript</category>
      <category>node</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Introduction to Design Patterns</title>
      <author>Tamerlan Gudabayev</author>
      <pubDate>Sun, 30 May 2021 06:43:25 +0000</pubDate>
      <link>https://dev.to/tamerlang/introduction-to-design-patterns-540o</link>
      <guid>https://dev.to/tamerlang/introduction-to-design-patterns-540o</guid>
      <description>&lt;p&gt;I hate the feeling when I don't know something. &lt;/p&gt;

&lt;p&gt;This is where impostor syndrome hits. &lt;/p&gt;

&lt;p&gt;I had this feeling when my teammate said, "Oh, just use X pattern" and I had no idea what that was.&lt;/p&gt;

&lt;p&gt;This is why I've studied and scoured the internet for all sorts of resources on design patterns.&lt;/p&gt;

&lt;p&gt;I'm gonna jumble them all up into this series on design patterns. &lt;/p&gt;

&lt;p&gt;This is the first post of the series, where we will go over:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What are design patterns?&lt;/li&gt;
&lt;li&gt;History of design patterns&lt;/li&gt;
&lt;li&gt;Why should you learn them?&lt;/li&gt;
&lt;li&gt;Different types of design patterns&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#design-patterns"&gt;
  &lt;/a&gt;
  Design Patterns
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VtM-lZet--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/grrms4846ajfhz4snbs5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VtM-lZet--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/grrms4846ajfhz4snbs5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you google design patterns, you would get something like this:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In software engineering, a software design pattern is a general, reusable solution to a commonly occurring problem within a given context in software design. It is not a finished design that can be transformed directly into source or machine code.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Honestly this sounds way too complicated.&lt;/p&gt;

&lt;p&gt;Basically, a design pattern is a &lt;strong&gt;solution&lt;/strong&gt; to a &lt;strong&gt;common problem&lt;/strong&gt; in software design. You can think of them as blue-prints that you can customize to solve a recurring problem in your code.&lt;/p&gt;

&lt;p&gt;Patterns are not snippets of code, that you can simply copy. Patterns give you a general solution, you can follow and alter the solution to fit your application specific needs.&lt;/p&gt;

&lt;p&gt;Patterns are often confused with algorithms, they both indeed offer a solution to common problems. Algorithms give a step-by-step guide to the solution while a pattern gives more of a high-level concept of the solution.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#history-of-patterns"&gt;
  &lt;/a&gt;
  History of patterns
&lt;/h2&gt;

&lt;p&gt;Patterns are not only used in software, they are also used in other fields of engineering. A pattern is simple a common solution to a recurring problem, this description can be applied to many different fields. &lt;/p&gt;

&lt;p&gt;The concept of a pattern first came in civil engineering by an engineer named Christopher Alexander. While working on designing buildings and towns, he saw that there came many recurring problems and general solutions to solve them. He documented his experience in his book &lt;a href="https://www.amazon.com/Pattern-Language-Buildings-Construction-Environmental/dp/0195019199"&gt;A Pattern Language: Towns, Buildings, Construction&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The same idea was picked up by software developers notably:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Erich Gamma&lt;/li&gt;
&lt;li&gt;John Vlissides&lt;/li&gt;
&lt;li&gt;Ralph Johnson&lt;/li&gt;
&lt;li&gt;Richard Helm&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In 1994 they wrote the first book on software design patterns named &lt;a href="https://www.amazon.com/gp/product/0201633612/"&gt;Design Patterns: Elements of Reusable Object-Oriented Software&lt;/a&gt;. This book introduced 23 patterns solving various problems of object-oriented design. Due to its long name, people started calling it "the book by the gang of four", which was soon shortened to "the GoF book".&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-i-learn-patterns"&gt;
  &lt;/a&gt;
  Why should I learn patterns?
&lt;/h2&gt;

&lt;p&gt;I personally know many developers who don't know any patterns but manage just "fine". A lot of developers are like that. They even might be implementing some patterns without even knowing it. So what's the point of learning these so called "patterns"?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Design patterns is a toolkit of solutions to common problems. Even if you won't ever encounter such problems, it's still beneficial to know how to solve them using object-oriented design principles.&lt;/li&gt;
&lt;li&gt;It provides a common language between developers. You can simply say to your colleague, "Oh, just use a singleton for that", and everyone will understand you. There's no need to explain what a singleton if you already know the pattern.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#type-of-design-patterns"&gt;
  &lt;/a&gt;
  Type of Design Patterns
&lt;/h2&gt;

&lt;p&gt;Patterns can be categorized by their intent, or purpose. The three main groups of patterns are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Creational patterns&lt;/strong&gt;: helps us better create/instantiate objects, making them more flexible and reduces code duplication.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Structural patterns&lt;/strong&gt;: helps us combine objects into larger entities while maintaining flexibility and efficiency.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Behavioral patterns&lt;/strong&gt;: helps us with communication between objects, makes sure to reduce side effects.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you were convinced by the end of this to study design patterns, or to at least think about them. In the upcoming weeks I will dedicate a post to a specific pattern, so stay tuned for that. &lt;/p&gt;

&lt;p&gt;As always if you have any questions, feel free to leave them down in the comments and I will get back to you.&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>programming</category>
      <category>computerscience</category>
      <category>architecture</category>
    </item>
    <item>
      <title>Please stop the forem app pop-up</title>
      <author>jeikabu</author>
      <pubDate>Sun, 30 May 2021 06:41:29 +0000</pubDate>
      <link>https://dev.to/jeikabu/please-stop-the-forem-app-pop-up-2015</link>
      <guid>https://dev.to/jeikabu/please-stop-the-forem-app-pop-up-2015</guid>
      <description>&lt;p&gt;Please stop the forem app message from constantly popping up on mobile. It's annoying. &lt;/p&gt;

</description>
      <category>meta</category>
      <category>ux</category>
    </item>
    <item>
      <title>Master ‚Äòthis‚Äô in JavaScript</title>
      <author>Somnath Singh</author>
      <pubDate>Sun, 30 May 2021 06:21:19 +0000</pubDate>
      <link>https://dev.to/polymathsomnath/master-this-in-javascript-1bk</link>
      <guid>https://dev.to/polymathsomnath/master-this-in-javascript-1bk</guid>
      <description>&lt;p&gt;In this article, we cover the all-important yet so confusing topic in JavaScript which is the ‚Äú&lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;‚Äù keyword.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;If ‚Äú&lt;em&gt;this&lt;/em&gt;‚Äù scares you, do not worry! We will learn how to determine the value of the ‚Äú&lt;em&gt;this&lt;/em&gt;‚Äù keyword using five simple rules.&lt;/p&gt;

&lt;p&gt;Those five simple rules are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;em&gt;The Regular One ‚Äî&lt;/em&gt; &lt;strong&gt;Default binding&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;em&gt;Function Inside an Object&lt;/em&gt; ‚Äî &lt;strong&gt;Implicit binding&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;em&gt;Function Borrowing&lt;/em&gt; ‚Äî &lt;strong&gt;Explicit binding&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;em&gt;Using Function to Create Objects&lt;/em&gt; ‚Äî &lt;strong&gt;New binding&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;em&gt;How Arrow Function Differs from the Regular Ones‚Äî&lt;/em&gt; &lt;strong&gt;Lexical binding&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Don‚Äôt worry about these scary names. Computer Science people have a fancy for naming terms so that they sound extra-terrestrial. Under the hood, they are just common concepts that any willing human can understand.&lt;/p&gt;

&lt;p&gt;The ‚Äú&lt;em&gt;this‚Äù&lt;/em&gt; variable corresponds to how you invoke a function. These rules help us to determine the value of &lt;em&gt;this&lt;/em&gt; in various scenarios.&lt;/p&gt;

&lt;p&gt;Once you understand these rules, then you would not fear them anymore.&lt;/p&gt;

&lt;p&gt;Before we begin, &lt;a href="https://javascript.plainenglish.io/why-do-developers-fear-this-fb7497f95570?sk=7c1a7d83bd97af7ce9a9cd97fc8abda2"&gt;please go through this article&lt;/a&gt; to understand how &lt;em&gt;this&lt;/em&gt; works.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-this-in-brief"&gt;
  &lt;/a&gt;
  What is ‚Äúthis‚Äù in brief
&lt;/h1&gt;

&lt;p&gt;In JavaScript, whenever a function is called, a new execution context is created by the JavaScript engine. That execution context exists until the function has finished executing. Every execution context contains a variable called ‚Äòthis‚Äô.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rule-1-default-binding"&gt;
  &lt;/a&gt;
  #Rule 1. Default binding
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G19seZhr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2386/0%2Axc7asnogg5WscyrC.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G19seZhr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2386/0%2Axc7asnogg5WscyrC.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When calling a function in a standard way shown above, ‚Äú&lt;em&gt;this&lt;/em&gt;‚Äù will actually refer to the global object!&lt;/p&gt;

&lt;p&gt;In the browser, the global object means the Window object.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i1yGSx6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1838/0%2ABkSOWChHCrsTt2V5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i1yGSx6j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1838/0%2ABkSOWChHCrsTt2V5.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One exception to remember ‚Äî that is when strict mode is enabled. By writing ‚Äúuse-strict‚Äù you can prevent anything from being declared on the global object.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lpOEWF26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2160/0%2AMDVIyQlMzbnDv4Kf.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lpOEWF26--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2160/0%2AMDVIyQlMzbnDv4Kf.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rule-2-implicit-binding"&gt;
  &lt;/a&gt;
  #Rule 2. &lt;strong&gt;Implicit binding&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;If the function is contained within an object, then that object will be referenced by ‚Äúthis‚Äù.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kp4g8-lF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3296/1%2AOKrRTgSIiLQ5dJRIyTk-Qg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kp4g8-lF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3296/1%2AOKrRTgSIiLQ5dJRIyTk-Qg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the above, the &lt;code&gt;this&lt;/code&gt; keyword will point to the &lt;code&gt;personObj&lt;/code&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rule-3-explicit-binding"&gt;
  &lt;/a&gt;
  #Rule 3. &lt;strong&gt;Explicit binding&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;We saw how &lt;code&gt;this&lt;/code&gt; points to the global object and in another case, it points to the object which contains it. Wouldn‚Äôt it be nice to able to control what this variable ends up being when the function is called?&lt;/p&gt;

&lt;p&gt;Words like &lt;em&gt;call&lt;/em&gt;, &lt;em&gt;apply&lt;/em&gt;, and &lt;em&gt;bind&lt;/em&gt; usually causes terror in new developers. In reality, they are all functions that can be used to &lt;em&gt;explicitly&lt;/em&gt; set the value of ‚Äúthis‚Äù.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#let-us-understand-it-with-an-example"&gt;
  &lt;/a&gt;
  Let us understand it with an example.
&lt;/h2&gt;

&lt;p&gt;Suppose we have two objects, let us say &lt;code&gt;personObj&lt;/code&gt; and &lt;code&gt;readerObj&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6s2uMYiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2456/1%2At1FOex7gNulGnwVEb6Mf6w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6s2uMYiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2456/1%2At1FOex7gNulGnwVEb6Mf6w.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Both the object has a name property. The &lt;code&gt;personObj&lt;/code&gt; has a function that can print the value inside the &lt;code&gt;name&lt;/code&gt; but, the &lt;code&gt;readerObj&lt;/code&gt; does not have any such feature!&lt;/p&gt;

&lt;p&gt;Here we can make use of one of the three methods ‚Äî &lt;code&gt;call&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt; or &lt;code&gt;bind&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This process is called function borrowing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h2RbhlcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1966/1%2ADi_MsxdvDTqd0DkEBr3YfQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h2RbhlcR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1966/1%2ADi_MsxdvDTqd0DkEBr3YfQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We borrowed the &lt;code&gt;sayName&lt;/code&gt; method for the &lt;code&gt;readerObj.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we can print the name property that is in &lt;code&gt;readerObj&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MtkIlTao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2466/1%2AkmRaS-zUJgG_QkrCS-FUIQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MtkIlTao--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2466/1%2AkmRaS-zUJgG_QkrCS-FUIQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are calling the &lt;code&gt;sayName&lt;/code&gt; method from &lt;code&gt;personObj&lt;/code&gt;, but at the same time, we are instructing the JavaScript engine that the ‚Äòthis‚Äô variable in the &lt;code&gt;sayName&lt;/code&gt; method should point to &lt;code&gt;readerObj&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So when the JavaScript engine executes the code, the &lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt; variable in the &lt;code&gt;sayName&lt;/code&gt; function does not point to the &lt;code&gt;personObj&lt;/code&gt; but it points to the &lt;code&gt;readerObj&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Does that make sense?&lt;/p&gt;

&lt;p&gt;Not just that ‚Äî we can also pass some arguments when we use the &lt;code&gt;call&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mpfz3sig--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1860/1%2ApQtSBG6fv5pp_L_lfpNKmg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mpfz3sig--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1860/1%2ApQtSBG6fv5pp_L_lfpNKmg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We passed Namaste as an argument&lt;/p&gt;

&lt;p&gt;We can make use of the argument in the &lt;code&gt;sayName&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nUObTtXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1260/1%2AURmM8Vf09inNezYtA2TvMA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nUObTtXV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1260/1%2AURmM8Vf09inNezYtA2TvMA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we execute the code, we will get the output along with the passed argument.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x0NF0gEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2956/1%2ARcaHst9aMECBaFntGO_9nA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x0NF0gEz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2956/1%2ARcaHst9aMECBaFntGO_9nA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The apply method works the same way, but instead of regular arguments, it takes an array as an argument.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Qd-bzOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3416/1%2AolLUIkdy373Jhrw3-i3mwg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Qd-bzOS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3416/1%2AolLUIkdy373Jhrw3-i3mwg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9ccifByb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2628/1%2AD2IhX_eA_J2F-29dnExflQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9ccifByb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2628/1%2AD2IhX_eA_J2F-29dnExflQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The bind method also works the same way ‚Äî it can accept a regular argument.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WWvxxhnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2328/1%2AVvootgY_bLF7xy7k_mKcGg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WWvxxhnq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2328/1%2AVvootgY_bLF7xy7k_mKcGg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But unlike &lt;em&gt;call&lt;/em&gt;  and &lt;em&gt;apply ‚Äî&lt;/em&gt; &lt;strong&gt;&lt;em&gt;bind&lt;/em&gt;&lt;/strong&gt; returns a function ‚Äî that function can be stored in a variable and can be executed in the future.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W6a-zREi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3350/1%2AB7USlXrakqraX9w7ntLtwA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W6a-zREi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/3350/1%2AB7USlXrakqraX9w7ntLtwA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hleJcp_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2604/1%2A5kvl7us01wuPUlEpn-KJ3g.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hleJcp_R--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2604/1%2A5kvl7us01wuPUlEpn-KJ3g.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One can see the use of bind in function currying ‚Äî a topic that we will cover in the future.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rule-4-new-binding"&gt;
  &lt;/a&gt;
  #Rule &lt;strong&gt;4. New binding&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;We use the &lt;strong&gt;&lt;em&gt;new&lt;/em&gt;&lt;/strong&gt; keyword to create an instance or copy of an object. What the &lt;strong&gt;new&lt;/strong&gt; keyword does is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  It creates an &lt;strong&gt;empty object&lt;/strong&gt; and then instructs the keyword &lt;strong&gt;this&lt;/strong&gt; to point to that empty object.&lt;/li&gt;
&lt;li&gt;  It then adds a &lt;code&gt;return this&lt;/code&gt; statement to the end of that function.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Remember, when an instance of an object gets created using the &lt;em&gt;new&lt;/em&gt; keyword, ‚Äú&lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;‚Äù always points to that newly created instance.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#let-us-understand-this-with-an-example"&gt;
  &lt;/a&gt;
  Let us understand this with an example.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2nKsDJPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1702/1%2ArdIo3Y77Y054oibfUKFLXg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2nKsDJPF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1702/1%2ArdIo3Y77Y054oibfUKFLXg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we run this code, what are we supposed to get?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--svI0ZJXW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1960/1%2A-0ealF7SmoQwwUbFX3CsGA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--svI0ZJXW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1960/1%2A-0ealF7SmoQwwUbFX3CsGA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we said ‚Äî an empty object!&lt;/p&gt;

&lt;p&gt;What is happening under the hood is&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k8Mp6iTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2240/1%2AMjlTUBtzshIO2lToU4b_zQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k8Mp6iTO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2240/1%2AMjlTUBtzshIO2lToU4b_zQ.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;What? Are we invoking the function?&lt;/p&gt;

&lt;p&gt;Yes!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G2c-Tc-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/2556/1%2A7jkc1tuK7hNbx25EVcxvLQ.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G2c-Tc-L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/2556/1%2A7jkc1tuK7hNbx25EVcxvLQ.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See, I told you it is getting invoked.&lt;/p&gt;

&lt;p&gt;Let us look at the whole thing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EpgZUpz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2240/1%2ADw9PlvHl5SXw94wwiFZFTg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EpgZUpz8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2240/1%2ADw9PlvHl5SXw94wwiFZFTg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we put some value in the function, it will put that in the newly created object and then return it!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PQDIYH3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1864/1%2AByTa5ihFcU6xzningnM3eg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PQDIYH3M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1864/1%2AByTa5ihFcU6xzningnM3eg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we &lt;code&gt;console.log(newPersonObj)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zqjqDm23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1768/1%2AYeOXSqQdt8Zi8qJmpbQFRg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zqjqDm23--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1768/1%2AYeOXSqQdt8Zi8qJmpbQFRg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let us finish this concept with an animation.&lt;/p&gt;

&lt;p&gt;Since &lt;code&gt;dev.to&lt;/code&gt; supports animation of 500 frames only, I am attaching  an external link to the animation&lt;br&gt;
&lt;a href="https://miro.medium.com/max/1210/1*0wJYjMQ9uwVEYzBj89oL4A.gif"&gt;Go here for the animation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above example, we are using a function to create an object.&lt;/p&gt;

&lt;p&gt;This type of function is known as a function constructor.&lt;/p&gt;

&lt;p&gt;Remember, in the &lt;code&gt;newPersonObj&lt;/code&gt;, which stores the copy of &lt;code&gt;personObj&lt;/code&gt;‚Äî the ‚Äúthis" variable points to empty &lt;code&gt;personObj&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Does it make sense now?&lt;/p&gt;

&lt;p&gt;Good! Let us now understand the last rule.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#rule-5-lexical-binding"&gt;
  &lt;/a&gt;
  #Rule &lt;strong&gt;5. Lexical binding&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With the advent of ES6 ‚Äî we got arrow functions. Arrow functions with their ultra-lean syntax are a natural replacement for their traditional anonymous counterparts.&lt;/p&gt;

&lt;p&gt;To explicitly invoke an arrow function, as with a regular anonymous function, you would assign it to a variable first:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0LeqN0lE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2598/1%2AMEaHjDB5yTXm_T6tDO_HwA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0LeqN0lE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2598/1%2AMEaHjDB5yTXm_T6tDO_HwA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Arrow functions are just like regular anonymous functions, with one major exception- the behavior of this object inside the function.&lt;/p&gt;

&lt;p&gt;In a regular function, the value of "&lt;code&gt;this&lt;/code&gt;" is context-based- call the function inside a link, and "&lt;code&gt;this&lt;/code&gt;" points to the link's object; call it inside one more function like &lt;code&gt;setInterval()&lt;/code&gt;, then "&lt;code&gt;this&lt;/code&gt;" points to the global window object.&lt;/p&gt;

&lt;p&gt;For example, the following example attempts to call the &lt;code&gt;start()&lt;/code&gt; method of a custom object to increment its counter property by 1 every second, though it fails due to an incorrect assumption of the "&lt;code&gt;this&lt;/code&gt;" object reference counter.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9lIKoBWJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2976/1%2AhoYm0GaVU-9eIG431Vs1wg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9lIKoBWJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2976/1%2AhoYm0GaVU-9eIG431Vs1wg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0lNOE56t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1552/1%2AJJvXhLyOOGZfSstSj2sS4A.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0lNOE56t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1552/1%2AJJvXhLyOOGZfSstSj2sS4A.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the above, &lt;code&gt;this.counter&lt;/code&gt; fails to properly reference the counter property of the &lt;code&gt;countup&lt;/code&gt; object, though the error may not be so obvious to spot. One can either mistakenly or carelessly assume that "&lt;code&gt;this&lt;/code&gt;" points to the &lt;code&gt;countup&lt;/code&gt; object, when in fact it points to the global &lt;code&gt;window&lt;/code&gt; object due to the context "&lt;code&gt;this&lt;/code&gt;" is being called- inside the global window method &lt;code&gt;setInterval()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The result is a reference to a non-existent &lt;code&gt;window.counter&lt;/code&gt; property that will repeatedly return &lt;code&gt;NaN&lt;/code&gt; when we try to increment it. To properly reference the &lt;code&gt;countup&lt;/code&gt; object then inside the anonymous function, we should cache a reference to the correct "&lt;code&gt;this&lt;/code&gt;" object before the context changes to a different one:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--frdK0bEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2692/1%2A_ecuxy27FcjFnlfPRKVZLg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--frdK0bEZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2692/1%2A_ecuxy27FcjFnlfPRKVZLg.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XeIu7fXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1516/1%2AQd4QDX0XnfXBcnkjdQUVgw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XeIu7fXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1516/1%2AQd4QDX0XnfXBcnkjdQUVgw.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The "&lt;code&gt;this&lt;/code&gt;" object inside an arrow function is lexically bound, which is just a fancy way of saying its value is static and determined by the place where the ‚Äú&lt;code&gt;this&lt;/code&gt;" keyword is defined.&lt;/p&gt;

&lt;p&gt;Contrast that with regular functions, where "&lt;code&gt;this&lt;/code&gt;" is dynamic and based on the context it's called regardless of the scope at the time "&lt;code&gt;this&lt;/code&gt;" was defined.&lt;/p&gt;

&lt;p&gt;Let‚Äôs take the previous example that gave us trouble initially, and see how changing over to using an arrow function intuitively addresses the problem:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PMwuGKPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2804/1%2ARxgs1sNx3TXP7cvNe-PsoA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PMwuGKPO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/2804/1%2ARxgs1sNx3TXP7cvNe-PsoA.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XeIu7fXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1516/1%2AQd4QDX0XnfXBcnkjdQUVgw.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XeIu7fXp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://miro.medium.com/max/1516/1%2AQd4QDX0XnfXBcnkjdQUVgw.gif" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We solved the problem by just using an arrow function.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;If you understood all the rules, then pat yourself on the back ‚Äî you deserve it! Now you are no more someone who is afraid of JavaScript‚Äôs most confusing concept ‚Äî the "&lt;em&gt;this&lt;/em&gt;" keyword.&lt;/p&gt;

&lt;p&gt;In this article we learned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  When calling a &lt;strong&gt;&lt;em&gt;function&lt;/em&gt;&lt;/strong&gt; in a standard way shown above, ‚Äú&lt;em&gt;this&lt;/em&gt;‚Äù will actually refer to the global object!&lt;/li&gt;
&lt;li&gt;  If the function is contained within an &lt;strong&gt;&lt;em&gt;object,&lt;/em&gt;&lt;/strong&gt; then ‚Äú&lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;‚Äù will point to that object.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;&lt;em&gt;call&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;apply&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;bind&lt;/em&gt;&lt;/strong&gt; are functions that are available to us by JavaScript to alter the behaviour of ‚Äú&lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;‚Äù in our program.&lt;/li&gt;
&lt;li&gt;  &lt;strong&gt;&lt;em&gt;new&lt;/em&gt;&lt;/strong&gt; keyword or operator when used makes an empty object, then instructs ‚Äú&lt;strong&gt;&lt;em&gt;this‚Äù&lt;/em&gt;&lt;/strong&gt; to point to that newly created object&lt;/li&gt;
&lt;li&gt;  Arrow function enables us to lexically bind the ‚Äú&lt;strong&gt;&lt;em&gt;this&lt;/em&gt;&lt;/strong&gt;‚Äù keyword in the program, what this means is its value is static and determined by the place where the ‚Äú&lt;code&gt;this&lt;/code&gt;" keyword is defined.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#note-of-gratitude"&gt;
  &lt;/a&gt;
  Note of Gratitude
&lt;/h1&gt;

&lt;p&gt;I wanted to take this last opportunity to say thank you.&lt;/p&gt;

&lt;p&gt;Thank you for being here! I would not be able to do what I do without  people like you  who follow along and take that leap of faith to read my post.&lt;/p&gt;

&lt;p&gt;I hope you‚Äôll &lt;a href="https://twitter.com/tweetsbysoma"&gt;&lt;strong&gt;join me&lt;/strong&gt;&lt;/a&gt; in &lt;a href="https://dev.to/polymathsomnath"&gt;&lt;strong&gt;my future blog post&lt;/strong&gt;&lt;/a&gt; and stick around because I think we have something great here. And I hope that I will be able to help you along in your career for many more years to come!&lt;/p&gt;

&lt;p&gt;See you next time. Bye!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>node</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to change font is VS Code</title>
      <author>Amritanshu Dev Rawat</author>
      <pubDate>Sun, 30 May 2021 06:00:23 +0000</pubDate>
      <link>https://dev.to/amritanshu/how-to-change-font-is-vs-code-4alp</link>
      <guid>https://dev.to/amritanshu/how-to-change-font-is-vs-code-4alp</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
Search for the font you want or go to  &lt;a href="https://fonts.google.com/"&gt;Google fonts&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wbK_QQlo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350695833/fW-UlMuMH.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wbK_QQlo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350695833/fW-UlMuMH.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
I want Noto Sans JP font. So, I searched for it and clicked on the first one.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8wkKKSAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350825497/RTfjxN1G8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8wkKKSAr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350825497/RTfjxN1G8.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Click on Download family on the top right&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FCXrBTQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350880508/8VTe7LMyI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FCXrBTQK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350880508/8VTe7LMyI.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Extract the downloaded file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Js-c-NQN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350978121/WsLfHzpHO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Js-c-NQN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622350978121/WsLfHzpHO.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Either your fonts are inside Folder -&amp;gt; fonts -&amp;gt; ttf or Directly inside the Folder&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Here, the fonts are directly inside the Folder, select the file with type OpenType font file&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PVcX_rKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351110611/HirE03pcg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PVcX_rKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351110611/HirE03pcg.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Search Control panel&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8br4wP8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351170539/s9BvKNuo-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8br4wP8A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351170539/s9BvKNuo-.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Click on large icons on the top right&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--STRvjDc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351187346/JSU8GadMP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--STRvjDc0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351187346/JSU8GadMP.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Click On Fonts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IwzjxyE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351211014/mclwfuhrJ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IwzjxyE0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351211014/mclwfuhrJ.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
This type of page will open up&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SqOakb-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351232676/TgvCYju-O.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SqOakb-r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351232676/TgvCYju-O.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Copy all your fonts from the extracted folder&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1qhSD6ju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351259482/DuWb0mhVHR.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1qhSD6ju--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351259482/DuWb0mhVHR.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Paste them on the fonts page&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---AER-Glz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351304975/xIGn3mXIDo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---AER-Glz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351304975/xIGn3mXIDo.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wUy3p_To--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351335081/oLH22bqs-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wUy3p_To--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622351335081/oLH22bqs-.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Open VSCode and Go to file -&amp;gt; preferences -&amp;gt; settings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ev_BbXyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352058095/99tOJLFqt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ev_BbXyW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352058095/99tOJLFqt.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Search for Font Family&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PA5dXzRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352101161/5u_TdZYJ8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PA5dXzRX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352101161/5u_TdZYJ8.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;My editor before adding font&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--42xdvOxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352365856/CbSeONdVy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--42xdvOxj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352365856/CbSeONdVy.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
My Editor after adding font&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ztPXGOyM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352390072/m8vIDE93I.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ztPXGOyM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622352390072/m8vIDE93I.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You have to add 'Noto Sans JP' or the font you want at the start and then add a comma(,) after it. Save the file Restart the IDE,&lt;br&gt;
If you want to add the font and it doesn't work, ping me on Twitter I will try to help you asap!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/k2Rl4U3qg5A"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Twitter:
&lt;a href="https://twitter.com/NewGenDeveloper"&gt;https://twitter.com/NewGenDeveloper&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>codenewbie</category>
      <category>vscode</category>
      <category>tutorial</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>HTML : Disable resizing of textarea</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Sun, 30 May 2021 05:42:13 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/html-disable-resizing-of-textarea-4m6k</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/html-disable-resizing-of-textarea-4m6k</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-textarea"&gt;
  &lt;/a&gt;
  What is textarea?
&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; element is often used in a form, to collect user inputs like comments or reviews.&lt;/p&gt;

&lt;p&gt;A text area can hold an unlimited number of characters.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-resize-texarea"&gt;
  &lt;/a&gt;
  How to resize texarea?
&lt;/h1&gt;

&lt;p&gt;You can resize a textarea by clicking on the bottom right corner of the textarea and dragging the mouse.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IhpLZYTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jywc6ssurqzvmf2oaswr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IhpLZYTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jywc6ssurqzvmf2oaswr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-disable-resizing-textarea"&gt;
  &lt;/a&gt;
  How to disable resizing textarea?
&lt;/h1&gt;

&lt;p&gt;The following CSS rule disables resizing behavior for textarea elements:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;textarea&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With above code all of your textareas will be disabled to resize.&lt;/p&gt;

&lt;p&gt;You can use class attribute in your tag -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"textarea1"&lt;/span&gt; &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 Enter your message here...
&lt;span class="nt"&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.textarea1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To disable a specific textarea with the name attribute set to foo&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt; &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 Enter your message here...
&lt;span class="nt"&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;textarea&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Or, using an id attribute -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;textarea&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"foo"&lt;/span&gt; &lt;span class="na"&gt;rows=&lt;/span&gt;&lt;span class="s"&gt;"4"&lt;/span&gt; &lt;span class="na"&gt;cols=&lt;/span&gt;&lt;span class="s"&gt;"50"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 Enter your message here...
&lt;span class="nt"&gt;&amp;lt;/textarea&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nf"&gt;#foo&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;This property does nothing unless the overflow property is something other than visible, which is the default for most elements. So generally to use this, you'll have to set something like &lt;code&gt;overflow: scroll&lt;/code&gt;;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1&gt;
  &lt;a href="#demo"&gt;
  &lt;/a&gt;
  Demo
&lt;/h1&gt;

&lt;p&gt;resize has below values that you can use with your text areas - &lt;br&gt;
&lt;code&gt;none:&lt;/code&gt; the element is not resizeable. &lt;br&gt;
&lt;code&gt;both:&lt;/code&gt; the user can resize the element‚Äôs height and/or width.&lt;br&gt;
&lt;code&gt;horizontal:&lt;/code&gt; the user can resize the element horizontally (increasing the width).&lt;br&gt;
&lt;code&gt;vertical:&lt;/code&gt; the user can resize the element vertically (increasing the height).&lt;br&gt;
&lt;code&gt;inherit:&lt;/code&gt; the element inherits the resize value of its parent.&lt;/p&gt;

&lt;p&gt;Below is the demo where you can click on the value names and can see the demo of selected value version of textarea -&lt;br&gt;
&lt;iframe height="600" src="https://codepen.io/team/css-tricks/embed/QbJqMG?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/rkycom"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With all that being said, I highly recommend you keep learning!&lt;/p&gt;

&lt;p&gt;Thank you for reading this article. Please feel free to connect with me on &lt;a href="https://www.linkedin.com/in/www-rajeshkumaryadav-com/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com/rky_com"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>25+  JavaScript Project With Source Code to Build your Skills</title>
      <author>Neha Soni</author>
      <pubDate>Sun, 30 May 2021 05:01:11 +0000</pubDate>
      <link>https://dev.to/nehasoni__/25-javascript-project-with-source-code-to-build-your-skills-18e7</link>
      <guid>https://dev.to/nehasoni__/25-javascript-project-with-source-code-to-build-your-skills-18e7</guid>
      <description>&lt;p&gt;Hello amazing people,&lt;br&gt;&lt;br&gt;
If you are interested in becoming a web developer then JavaScript is one of the best and essential coding language you can learn, but getting familiar with JavaScript basics means using those skills to build JavaScript projects. So, in this blog post, I will share with you some HTML and Javascript projects with source code that can be used in your personalized Web Development projects.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-javascript-projects-for-beginners"&gt;
  &lt;/a&gt;
  Best JavaScript Projects for Beginners
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-counter-app"&gt;
  &lt;/a&gt;
  1.) Counter app
&lt;/h3&gt;

&lt;p&gt;This project will give you more practice working with the DOM. Here, the user can add the number of counts and also delete the counts.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) addEventListener()&lt;br&gt;
3.) textContent&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FhrsIP3F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621423093197/T6Xn5ykds.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FhrsIP3F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621423093197/T6Xn5ykds.png" alt="Screenshot (255).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/LeCoding-tech/Counter-app"&gt;Counter App&lt;/a&gt;  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-background-color-change-app"&gt;
  &lt;/a&gt;
  2.) Background Color Change App
&lt;/h3&gt;

&lt;p&gt;In this app, the background color of the canvas changes when the user clicks on a button.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) eventListener()&lt;br&gt;
2.) Array&lt;br&gt;
3.) Math.random()&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KVAsbGUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621423460649/GRFvC3Thu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KVAsbGUs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621423460649/GRFvC3Thu.png" alt="Screenshot (257).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/color-changing-app"&gt;Background color Changer App&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-calculator"&gt;
  &lt;/a&gt;
  3.) Calculator
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to perform the basic functionality(&lt;code&gt;+,-,*,/&lt;/code&gt;) of the calculator.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) DOM Manipulation&lt;br&gt;
2.) document.querySelector()&lt;br&gt;
3.) addEventListener()&lt;br&gt;
4.) Immediately Invoked Function Expressions&lt;br&gt;
5.) textContent&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fwid9fAd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621424753025/qXTq33uNI.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fwid9fAd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621424753025/qXTq33uNI.png" alt="Screenshot (259).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/ayoisaiah/javascript-calculator"&gt;JavaScript Calculator&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-image-slider-project"&gt;
  &lt;/a&gt;
  4.) Image Slider Project
&lt;/h3&gt;

&lt;p&gt;The main functionality of this project is that , when an arrow is clicked, the next image in the array shows up.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) DOM Manipulation&lt;br&gt;
2.) Arrays&lt;br&gt;
3.) forEach()&lt;br&gt;
4.) eventListeners&lt;br&gt;
5.) JavaScript CSS Manipulation&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4vIk--X7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621425429967/vtG_v4lMr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4vIk--X7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621425429967/vtG_v4lMr.png" alt="Screenshot (261).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/background-image-slider-project"&gt;Image Slider&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-build-a-digital-clock"&gt;
  &lt;/a&gt;
  5.)  Build a Digital Clock
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to build a digital clock with date(Day, Month, Year).&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) setTimeInterval()&lt;br&gt;
2.) Date()&lt;br&gt;
3.) Arrays&lt;br&gt;
4.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--n5PCmH2Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621426587066/lBQv6r4mA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--n5PCmH2Z--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621426587066/lBQv6r4mA.png" alt="Screenshot (265).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/nehasoni05/Digital_Clock"&gt;Digital Clock&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-build-an-analog-clock"&gt;
  &lt;/a&gt;
  6.)  Build an Analog Clock
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to build a realtime analog clock using HTML, CSS, and Javascript.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) Date()&lt;br&gt;
3.) setInterval()&lt;br&gt;
4.) rotate()&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ciuRfj6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621427148049/gWlO-pTSZ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ciuRfj6L--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621427148049/gWlO-pTSZ.png" alt="Screenshot (267).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/dgray0229/javascript-analog-clock"&gt;Analog Clock&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-loan-calculator"&gt;
  &lt;/a&gt;
  7.) Loan Calculator
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to calculate and displays the results for monthly payment, total payment, and total interest according to loan amount interest rate, and years to repay.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;&lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) setInterval()&lt;br&gt;
3.) Math.pow()&lt;br&gt;
4.) toFixed()&lt;br&gt;
5.) parseFloat()&lt;br&gt;
6.) DOM manipulation&lt;br&gt;
7.) JavaScript CSS Manipulation&lt;br&gt;
8.) eventListener()&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--27zGt2HM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482096751/qP4S_ECju.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--27zGt2HM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482096751/qP4S_ECju.png" alt="Screenshot (271).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/CBStanley12/js-loan-calculator"&gt;Loan Calculator&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-guess-my-number"&gt;
  &lt;/a&gt;
  8.) Guess my number
&lt;/h3&gt;

&lt;p&gt;In this project you have to guess a number, if your PREDICTED NUMBER is equal to the SECRET NUMBER you won!!! ‚ô•&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) Math.random()&lt;br&gt;
3.) eventListeners&lt;br&gt;
4.) textContent&lt;br&gt;
5.) Math.trunc()&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nHBb4lQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482617486/_R_NooU-r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nHBb4lQZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482617486/_R_NooU-r.png" alt="Screenshot (273).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/08Gunjan/GUESS-MY-NUMBER"&gt;Guess my number&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-palindrome-checker"&gt;
  &lt;/a&gt;
  9.) Palindrome Checker
&lt;/h3&gt;

&lt;p&gt;A palindrome checker checks if a string is a palindrome or not. A palindrome is a word or sentence that's spelled the same way both forward and backward, ignoring punctuation, case, and spacing&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) toUpperCase()&lt;br&gt;
3.) split()&lt;br&gt;
4.) reverse()&lt;br&gt;
5.) join()&lt;br&gt;
6.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l8-mLd_2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482985084/LxERejNpv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l8-mLd_2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621482985084/LxERejNpv.png" alt="Screenshot (275).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/AdishiSood/JavaScript-Projects/tree/main/Palindrome_Checker"&gt;Palindrome Checker&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-mobile-number-validator"&gt;
  &lt;/a&gt;
  10.) Mobile Number Validator
&lt;/h3&gt;

&lt;p&gt;This project lets you find out if the mobile number you have entered is active and able to receive calls or not.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) test()&lt;br&gt;
3.) forEach()&lt;br&gt;
4.) DOM manipulation&lt;br&gt;
5.)  event Listeners&lt;br&gt;
6.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L3yKLp6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621483309276/gw6ICU_Vr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L3yKLp6Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621483309276/gw6ICU_Vr.png" alt="Screenshot (277).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/AdishiSood/JavaScript-Projects/tree/main/Mobile_Number_validator"&gt;Mobile Number Validator&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-roman-numeral-converter"&gt;
  &lt;/a&gt;
  11.) Roman Numeral Converter
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to convert arabic numbers to Roman numerals  or vice-versa.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.getElementById()&lt;br&gt;
2.) event Listeners&lt;br&gt;
3.) arabicToRoman()&lt;br&gt;
4.) romanToArabic()&lt;br&gt;
5.) objects&lt;br&gt;
6.) for loop&lt;br&gt;
7.) Math.floor()&lt;br&gt;
8.) indexOf()&lt;br&gt;
9.) replace()&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Mmh4VI_3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621483854397/HzkgU0wFf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Mmh4VI_3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621483854397/HzkgU0wFf.png" alt="Screenshot (279).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/AdishiSood/JavaScript-Projects/tree/main/Roman_Numeral_Converter"&gt;Roman Numeral Converter &lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-weather-app"&gt;
  &lt;/a&gt;
  12.) Weather app
&lt;/h3&gt;

&lt;p&gt;This is an awesome project to build if you want to learn more about APIs and how to work with them&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) toFixed()&lt;br&gt;
3.) event Listeners&lt;br&gt;
4.) API&lt;br&gt;
5.) fetch()&lt;br&gt;
6.) then()&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--88KRN1ef--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621485266043/B1Wc95Tn0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--88KRN1ef--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621485266043/B1Wc95Tn0.png" alt="Screenshot (281).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/Bhaskar-maity/Javascript-weather-app"&gt;Weather app &lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-stopwatch"&gt;
  &lt;/a&gt;
  13.) Stopwatch
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to build a stopwatch that have a functionality like start,pause, and stop&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) document.getElementById()&lt;br&gt;
2.) parseInt()&lt;br&gt;
3.) setTimeout&lt;br&gt;
4.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---yanoa8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621486360383/qMrVydh4A.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---yanoa8r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621486360383/qMrVydh4A.png" alt="Screenshot (283).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://dev.to/gspteck/create-a-stopwatch-in-javascript-2mak"&gt;Stopwatch&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-random-quote-generator"&gt;
  &lt;/a&gt;
  14.) Random Quote Generator
&lt;/h3&gt;

&lt;p&gt;The main objective of this project is to fetches a new random quote from an API, upon the click of a button, and displays it in the browser.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) document.getElementById()&lt;br&gt;
2.) async()&lt;br&gt;
3.) await&lt;br&gt;
4.) fetch()&lt;br&gt;
5.) Math.floor()&lt;br&gt;
6.) Math.random()&lt;br&gt;
7.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---z1lFNIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621486800935/Fz4mOMRFe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---z1lFNIf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621486800935/Fz4mOMRFe.png" alt="image_1.png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/nehasoni05/Random_Quote_Generator"&gt;Random Quote Generator&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-bmi-calculator"&gt;
  &lt;/a&gt;
  15.) BMI Calculator
&lt;/h3&gt;

&lt;p&gt;The objective of this JavaScript project is to wire up a very basic JavaScript BMI Calculator.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.querySelector()&lt;br&gt;
2.) event listeners&lt;br&gt;
3.) parseInt()&lt;br&gt;
4.) toFixed()&lt;br&gt;
5.) innerHTML&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z6dJEwvO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621487215276/DiJ_Y6_-4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z6dJEwvO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621487215276/DiJ_Y6_-4.png" alt="Screenshot (287).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/BMI-calculator"&gt;BMI Calculator&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#16-tip-calculator"&gt;
  &lt;/a&gt;
  16.) TIP Calculator
&lt;/h3&gt;

&lt;p&gt;In this project, the user adds an amount and a tip percent and the calculator then outputs a total tip and bill amount.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) document.getElementById()&lt;br&gt;
2.) event listeners&lt;br&gt;
3.) Number()&lt;br&gt;
4.) DOM manipulation&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J3giTxv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621487472283/kz0Ac6BIb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J3giTxv---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621487472283/kz0Ac6BIb.png" alt="Screenshot (289).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/percentage-tip-calculator"&gt;TIP Calculator&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#17-word-length-calculator"&gt;
  &lt;/a&gt;
  17.) Word Length Calculator
&lt;/h3&gt;

&lt;p&gt;In this project, the user enters the word and the calculator outputs its length.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) DOM manipulation&lt;br&gt;
2.) event listeners&lt;br&gt;
3.) length method&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f71OzHRc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621609937078/LLfmK6Rrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f71OzHRc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621609937078/LLfmK6Rrg.png" alt="Screenshot (297).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/word-count-tool"&gt;Word Length Calculator&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#18-day-of-the-week"&gt;
  &lt;/a&gt;
  18.) Day of the Week
&lt;/h3&gt;

&lt;p&gt;This project uses displays the day of the week along with a corresponding quote.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) DOM manipulation&lt;br&gt;
2.) Date() Object&lt;br&gt;
3.) switch statement&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zZcC_9Nj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621610479688/eN-ywzfPb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zZcC_9Nj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621610479688/eN-ywzfPb.png" alt="Screenshot (299).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/day-of-the-week-app"&gt;Day of the Week&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#19-covid19-tracker"&gt;
  &lt;/a&gt;
  19.) Covid-19 Tracker
&lt;/h3&gt;

&lt;p&gt;Using this website you can track corona cases in any country which you want.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) DOM manipulation&lt;br&gt;
2.) API&lt;br&gt;
     and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sxi_lUpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621660257362/hKFuLsBg3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sxi_lUpY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621660257362/hKFuLsBg3.png" alt="Screenshot (314).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/Ashish2030/Corona-Tracker"&gt;Covid-19 Tracker&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#intermediate-javascript-projects"&gt;
  &lt;/a&gt;
  Intermediate JavaScript Projects
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-discussion-portal"&gt;
  &lt;/a&gt;
  1.) Discussion Portal
&lt;/h3&gt;

&lt;p&gt;It is a portal where one user can add questions and the other user can respond to those questions and you can also search the question. Also once the query is resolved, the user can delete the added question and response.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) JavaScript CSS Manipulation&lt;br&gt;
2.) JavaScript DOM Manipulation&lt;br&gt;
3.) local storage&lt;br&gt;
4.) Jquery&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0Ycrt7yQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621651625504/TAkfq1fPD.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0Ycrt7yQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621651625504/TAkfq1fPD.png" alt="Screenshot (301).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/AdishiSood/Discussion-App"&gt;Discussion Portal&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-quiz-app"&gt;
  &lt;/a&gt;
  2.) Quiz App
&lt;/h3&gt;

&lt;p&gt;Quiz apps are a fun way to improve your skills as a JavaScript developer. In this project, questions are dynamically generated using an object constructor. You have the 'Retake Quiz' option available at the end :)&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) JavaScript CSS Manipulation&lt;br&gt;
2.) JavaScript DOM Manipulation&lt;br&gt;
3.) event listeners&lt;br&gt;
4.) Math.random()&lt;br&gt;
5.) Objects&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hfAetddH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621651925529/fs0IMLsVK.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hfAetddH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621651925529/fs0IMLsVK.png" alt="Screenshot (303).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code:-&lt;/strong&gt; &lt;a href="https://github.com/WebDevSimplified/JavaScript-Quiz-App"&gt;Quiz app&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-whack-a-mole-game"&gt;
  &lt;/a&gt;
  3.) Whack a Mole game
&lt;/h3&gt;

&lt;p&gt;Whac-A-Mole is a popular arcade game. When the Game Start, by clicking on the title, a Mole will "Pop" from a random Hole, with random duration. Every successful "Whack" will add 1 to the Score. The game ends after 10 seconds have passed.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) JavaScript CSS Manipulation&lt;br&gt;
2.) JavaScript DOM Manipulation&lt;br&gt;
3.) event listeners&lt;br&gt;
4.) Audio()&lt;br&gt;
4.) Jquery&lt;br&gt;
5.) local storage&lt;br&gt;
6.) switch statement&lt;br&gt;
7.) Math.random() , Math.round() and much more...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kLGQOftK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621652753078/s1TLoVN8x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kLGQOftK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621652753078/s1TLoVN8x.png" alt="Screenshot (305).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code:-&lt;/strong&gt; &lt;a href="https://github.com/mitri-dvp/JavaScript-Whack-A-Mole"&gt;Whack a Mole&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-notes-app-project"&gt;
  &lt;/a&gt;
  4.) Notes App Project
&lt;/h3&gt;

&lt;p&gt;The objective of this JavaScript project is to create a notes application that uses local storage and allows for edits, among other things.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) JavaScript CSS Manipulation&lt;br&gt;
2.) JavaScript DOM Manipulation&lt;br&gt;
3.) event listeners&lt;br&gt;
4.) conditionals&lt;br&gt;
5.) Jquery&lt;br&gt;
6.) local storage&lt;br&gt;
      and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tQeN2uqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621653249971/lsVWi4DVT.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tQeN2uqz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621653249971/lsVWi4DVT.png" alt="Screenshot (307).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code:-&lt;/strong&gt; &lt;a href="https://github.com/JS-Beginners/notes-app"&gt;Notes app&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-tetris-game"&gt;
  &lt;/a&gt;
  5.) Tetris Game
&lt;/h3&gt;

&lt;p&gt;Tetris is a surprising game. The aim of Tetris is simple; you bring down blocks from the top of the screen. You can move the blocks around, either left to right, and/or you can rotate them. Your objective is to get all the blocks to fill all the empty space in a line at the bottom of the screen; whenever you do this, you‚Äôll find that the blocks vanish and you get awarded some points.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) HTML canvas&lt;br&gt;
2.) DOM Manipulation&lt;br&gt;
3.) Math.floor() , Math.random()&lt;br&gt;
4.) event listeners&lt;br&gt;
5.) Date()&lt;br&gt;
     and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RJncg-Oi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621653911780/uIJdiltoj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RJncg-Oi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621653911780/uIJdiltoj.png" alt="Screenshot (309).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code :-&lt;/strong&gt;  &lt;a href="https://github.com/nehasoni05/Tetris_Game"&gt;Tetris Game&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-music-player-app"&gt;
  &lt;/a&gt;
  6.) Music Player app
&lt;/h3&gt;

&lt;p&gt;In this application, you will be creating a music player with a clean user interface that can be used to play music in the browser. You will also implement features like seeking and volume control. &lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) Jquery&lt;br&gt;
2.) DOM Manipulation&lt;br&gt;
3.) Array of objects&lt;br&gt;
4.) event listeners&lt;br&gt;
5.) CSS Manipulation&lt;br&gt;
6.) setInterval(), clearInterval()&lt;br&gt;
7.) Math.floor() , Math.random()&lt;br&gt;
     and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vYtyiuDn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621654487905/WOF2kV9rE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vYtyiuDn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621654487905/WOF2kV9rE.png" alt="music (2).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code :-&lt;/strong&gt;  &lt;a href="https://github.com/sayantanm19/js-music-player"&gt; Music Player&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-tic-tac-toe-game"&gt;
  &lt;/a&gt;
  7.) Tic Tac Toe Game
&lt;/h3&gt;

&lt;p&gt;The goal of the game is for players to position their marks so that they make a continuous line of three cells vertically, horizontally, or diagonally. An opponent can prevent a win by blocking the completion of the opponent's line.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) Jquery&lt;br&gt;
2.) DOM Manipulation &lt;br&gt;
3.) CSS Manipulation&lt;br&gt;
     and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FmoS5sRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621655301888/VLvwni9AO.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FmoS5sRF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621655301888/VLvwni9AO.png" alt="Screenshot (312).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source code:-&lt;/strong&gt; &lt;a href="https://github.com/robhitt/tic-tac-toe-js"&gt;Tic Tac Toe&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-pomodoro-clock"&gt;
  &lt;/a&gt;
  8.) Pomodoro Clock
&lt;/h3&gt;

&lt;p&gt;The Pomodoro Technique is a time management method developed by Francesco Cirillo. The technique uses a timer to break down work into intervals, traditionally 25 minutes in length, separated by short breaks.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) DOM Manipulation&lt;br&gt;
2.) event listeners&lt;br&gt;
3.) switch statement&lt;br&gt;
4.) setInterval()&lt;br&gt;
     and much more...&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--neg7-o4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621660867342/KSPmmpCus.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--neg7-o4p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621660867342/KSPmmpCus.png" alt="Screenshot (316).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source code :-&lt;/strong&gt; &lt;a href="https://github.com/builders/pomodoro-clock"&gt;Pomodoro Clock&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;### 9.) Filter Fun&lt;br&gt;
In this project, the user can upload a photo and apply various filters to it.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt;&lt;br&gt;
1.) HTML canvas&lt;br&gt;
2.) SimpleImage() object &lt;br&gt;
3.) getRed() ,getGreen(), getBlue() methods&lt;br&gt;
4.) Math.floor(), Math.random()&lt;br&gt;
   and much more....&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zBIkpKNW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621661266762/dOuofQrFk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zBIkpKNW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621661266762/dOuofQrFk.png" alt="Screenshot (318).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source Code:-&lt;/strong&gt; &lt;a href="https://github.com/nehasoni05/FilterFun"&gt;Filter Fun&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-rock-paper-scissors-game"&gt;
  &lt;/a&gt;
  10.) Rock, Paper, Scissors game
&lt;/h3&gt;

&lt;p&gt;Rock, paper, and scissors game is a simple fun game in which both the players have to make a rock, paper, or scissors. It has only two possible outcomes a draw, or a win for one player and a loss for the other player. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jm21FXPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621661813306/RwFHsmG7C.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jm21FXPa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621661813306/RwFHsmG7C.png" alt="Screenshot (320).png"&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;Source code :-&lt;/strong&gt; &lt;a href="https://github.com/javitocor/Rock-Paper-Scissors-JS"&gt;Rock, Paper, Scissors&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-todo-list-project"&gt;
  &lt;/a&gt;
  11.)  To-Do List Project
&lt;/h3&gt;

&lt;p&gt;The main objective of this JavaScript Project is to wire up a todo list application.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Key concepts covered :-&lt;/strong&gt; &lt;br&gt;
1.) DOM Manipulation&lt;br&gt;
2.) Arrays&lt;br&gt;
3.) forEach()&lt;br&gt;
4.) eventListeners&lt;br&gt;
5.) Nested Functions&lt;br&gt;
6.) Local Storage API&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d_kxx5I_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621426017200/hM7KkXkBr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d_kxx5I_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1621426017200/hM7KkXkBr.png" alt="Screenshot (263).png"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;strong&gt;Source Code:-&lt;/strong&gt;  &lt;a href="https://github.com/JS-Beginners/todo-list-project-2"&gt;To-Do List&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;There are lots of projects you can work on as a JavaScript developer. If you want to start a career as a web developer, building your own JavaScript projects is the best way to learn the language. As you start learning JavaScript and finish your first beginner-level projects, you will quickly feel more comfortable working independently. Also, you will surely find more fun project ideas as you go.&lt;/p&gt;

&lt;p&gt;So, which projects are you going to build next? Let me know in the comments below!&lt;br&gt;
üòä&lt;/p&gt;

&lt;p&gt;If you liked this article, share it with others! &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading ü§ùü§ù
&lt;/h3&gt;

&lt;p&gt;I would ‚ù§ to connect with you at  &lt;a href="https://twitter.com/nehasoni__"&gt;Twitter&lt;/a&gt;  |  &lt;a href="https://www.linkedin.com/in/neha-soni-70a6231b1/"&gt;LinkedIn&lt;/a&gt; | &lt;a href="https://github.com/nehasoni05"&gt;GitHub&lt;/a&gt;&lt;br&gt;
Let me know in the comment section if you have any doubt or feedback.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You should definitely check out my other Blogs:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/introduction-to-javascript-basics-g6n"&gt;Introduction to JavaScript: Basics&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/playing-with-javascript-objects-k4h"&gt;Playing with JavaScript Objects&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/nehasoni__/7-javascript-data-structures-you-must-know-57ah"&gt;7 JavaScript Data Structures you must know&lt;/a&gt;&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/digital-clock-using-javascript-2648"&gt;Digital Clock using JavaScript&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://dev.to/nehasoni__/introduction-to-reactjs-3553"&gt;Introduction to ReactJS
&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;See you in my next Blog article, Take care!!&lt;br&gt;&lt;br&gt;
&lt;strong&gt;Happy LearningüòÉüòÉ&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>programming</category>
    </item>
    <item>
      <title>Despliegue de tu aplicaci√≥n de React usando Github Actions</title>
      <author>Vanessa Aristizabal</author>
      <pubDate>Sun, 30 May 2021 04:57:37 +0000</pubDate>
      <link>https://dev.to/vanessamarely/despliegue-de-tu-aplicacion-de-react-usando-github-actions-4od1</link>
      <guid>https://dev.to/vanessamarely/despliegue-de-tu-aplicacion-de-react-usando-github-actions-4od1</guid>
      <description>&lt;p&gt;Cuando creamos nuestras aplicaciones, usando una librer√≠a o framework, llega el momento donde deseamos verla desplegada en alg√∫n entorno o alg√∫n hosting gratuito o de pago.&lt;/p&gt;

&lt;p&gt;Para ello lo que normalmente hacemos es generar el build de la aplicaci√≥n ejecutando el siguiente comando:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uL8QCix3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xiesy54bmr9x2q9h7y6v.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uL8QCix3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xiesy54bmr9x2q9h7y6v.png" alt="Build de la aplicaci√≥n"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Luego subimos los archivos al hosting o entorno usando FTP, hablando de lo com√∫nmente conocido para desarrolladores que hace tiempo publican sus cambios o la aplicaci√≥n a producci√≥n. Aunque ahora existen nuevas formas automatizadas para facilitarnos la vida.&lt;/p&gt;

&lt;p&gt;Hablando del proceso anterior (por FTP), este es muy manual, porque cada vez que deseamos subir nuestros nuevos cambios, debemos generar el build y actualizar los archivos.&lt;/p&gt;

&lt;p&gt;Existen herramientas como Github Actions que nos ahorran ese trabajo, permiti√©ndonos desplegar nuestra aplicaci√≥n a un hosting gratuito como Github Pages, de forma automatizada, cada vez que ejecutamos alg√∫n evento desde nuestra terminal de comandos como el push de nuestro repositorio.&lt;/p&gt;

&lt;p&gt;Puedes ampliar la informaci√≥n sobre el &lt;a href="https://dev.to/vanessamarely/despliegue-de-tus-aplicaciones-usando-github-actions-32f1"&gt;despliegue con Github Actions&lt;/a&gt; en mi otro art√≠culo, donde te explico ademas un poco sobre CI/CD.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#c%C3%B3mo-despliego-mi-aplicaci%C3%B3n"&gt;
  &lt;/a&gt;
  ¬øC√≥mo despliego mi aplicaci√≥n?
&lt;/h1&gt;

&lt;p&gt;Una vez tenemos nuestra aplicaci√≥n creada y queremos realizar el proceso de despliegue a alg√∫n entorno, debemos hacer una configuraci√≥n manual para luego, con Github Actions, todo se realice de forma automatizada.&lt;/p&gt;

&lt;p&gt;Para facilitarnos la configuraci√≥n usaremos el paquete de &lt;a href="https://www.npmjs.com/package/gh-pages"&gt;gh-package&lt;/a&gt;, y para esto ejecutaremos:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wvFWhoIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wr0zi3d3gwfygmfifg4x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wvFWhoIO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wr0zi3d3gwfygmfifg4x.png" alt="Instalando el paquete: gh-package"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Configuramos nuestro package.json&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zyA_k_mx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tbp0z8e61ioagpaenzb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zyA_k_mx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tbp0z8e61ioagpaenzb.png" alt="Configuramos el package.json"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nota: Debemos asegurarnos que colocamos en el ‚Äòhomepage‚Äô el nombre del repositorio correctamente. En este caso estoy usando este: &lt;a href="https://github.com/vanessamarely/deploy-react-example"&gt;deploy-react-example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Hacemos deploy de nuestra aplicaci√≥n:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CTojnzFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18wl67orks97r9usejmp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CTojnzFv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18wl67orks97r9usejmp.png" alt="Deploy de nuestra aplicaci√≥n"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Subimos los cambios a nuestro repositorio:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--402gCZGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztgfnreyapempv3u338x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--402gCZGb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ztgfnreyapempv3u338x.png" alt="Subimos los cambios"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;En la pesta√±a settings del repositorio en Github puedes en pages revisar cu√°l ser√° la url que Github cre√≥ de tu repositorio:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u2eRzyh3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf0nhcso9jwav7czph57.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u2eRzyh3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf0nhcso9jwav7czph57.png" alt="Pesta√±a settings"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Y ejecutando el comando para despliegue, ver tus cambios en Github pages, aunque este a√∫n es un proceso manual.‚Äå&lt;/p&gt;

&lt;p&gt;En la pesta√±a de GitHub Actions en nuestro repositorio de GitHub, podemos ver varias plantillas para hacer el despliegue. Es bueno usar alguna de las opciones sugeridas, dependiendo de que herramienta vayas a emplear para hacer el despliegue.&lt;/p&gt;

&lt;p&gt;Para este caso vamos a crear nuestra plantilla manual o nuestro flujo de trabajo.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--A3RqXBLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2ciokpyjvdf4h0mtb45.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A3RqXBLb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a2ciokpyjvdf4h0mtb45.png" alt="Pesta√±a Github Actions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Primero vamos a crear en nuestro proyecto, en la ra√≠z una carpeta llamada: ‚Äú&lt;strong&gt;.github&lt;/strong&gt;‚Äù.&lt;/li&gt;
&lt;li&gt;Dentro de la carpeta ‚Äú&lt;strong&gt;.github&lt;/strong&gt;‚Äù crearemos otra carpeta llamada: ‚Äú&lt;strong&gt;workflows&lt;/strong&gt;‚Äù&lt;/li&gt;
&lt;li&gt;Dentro de la carpeta crearemos un archivo llamada deploy.yml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En el archivo &lt;strong&gt;deploy.yml&lt;/strong&gt;, es donde realizaremos la configuraci√≥n.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i1vgyylw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjqfdwon8555qcnhwexu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i1vgyylw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fjqfdwon8555qcnhwexu.png" alt="Archivo del flujo de trabajo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;En este archivo en el &lt;strong&gt;on&lt;/strong&gt;: en branches debemos colocar el nombre de nuestra rama por defecto: &lt;strong&gt;main&lt;/strong&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Guardamos nuestro archivo, hacemos un commit y un push&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tP8duMMp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53969jfrciqhxm8afmtv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tP8duMMp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/53969jfrciqhxm8afmtv.png" alt="Guardamos nuestros cambios"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Si revisamos en la pesta√±a ‚Äú&lt;strong&gt;Actions&lt;/strong&gt;‚Äù, empezar√° nuestro despliegue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LHQu39zt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bj3mcpwam5b4x24z8shf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LHQu39zt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bj3mcpwam5b4x24z8shf.png" alt="Inicio de ejecuci√≥n de jobs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cuando el despliegue ha sido exitoso, vamos a ver que todos los checks de los jobs funcionan correctamente.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mVFsJYXj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/626qzzf1kuuejt32lfzg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mVFsJYXj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/626qzzf1kuuejt32lfzg.png" alt="Jobs exitosos"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Una vez terminen los jobs podemos revisar nuestra p√°gina, haciendo uso del link que Github Pages g√©nero para nosotros, por ejemplo: &lt;a href="https://vanessamarely.github.io/deploy-react-example/"&gt;https://vanessamarely.github.io/deploy-react-example/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Cada vez que realicemos un cambio en nuestro repositorio y hagamos push de ellos, Github Actions entrar√° en acci√≥n, ejecutando los jobs, mostrando los checks de los pasos exitosos.&lt;/p&gt;

&lt;p&gt;En el caso de que alguno falle, podremos ir a revisar en el log y solucionar el problema en nuestro repositorio y volver a subir los cambios (push), para que puedan ejecutarse los jobs nuevamente.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YnykMbGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l147rmiopbtalni8cpb5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YnykMbGe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/l147rmiopbtalni8cpb5.png" alt="Ejemplo de alg√∫n fallo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lqZUdUdG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p457twun2fz3v1whmhjn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lqZUdUdG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p457twun2fz3v1whmhjn.png" alt="Proceso Exitoso"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Podemos verificar que los cambios ya fueron realizados en el entorno de Github Pages, revisando su estado, para ello en la pagina de nuestro repositorio, damos clic en &lt;strong&gt;Environments&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h7ktV3Pi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5j07363ov93hth17tl7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h7ktV3Pi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v5j07363ov93hth17tl7.png" alt="Repositorio"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Se nos abre la p√°gina de deployments y podemos verificar el estado del logo de cada despliegue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pv6hmLYo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6byubd6dtmkg94z5xxzo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pv6hmLYo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6byubd6dtmkg94z5xxzo.png" alt="Despliegue a Github Pages"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Haciendo clic en alguno de los enlaces de ‚Äò&lt;strong&gt;View Deployment&lt;/strong&gt;‚Äô, podemos verificar en ese punto c√∫al fue el resultado del despliegue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5K7_zxYB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwilyu5rc5p2dwurpdxc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5K7_zxYB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wwilyu5rc5p2dwurpdxc.png" alt="App en Github Pages"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;El repositorio usado para este ejemplo solo contiene la instalaci√≥n del &lt;a href="https://es.reactjs.org/docs/create-a-new-react-app.html"&gt;create-react-app&lt;/a&gt; y un cambio de mensaje en el componente App.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/vanessamarely/deploy-react-example"&gt;https://github.com/vanessamarely/deploy-react-example&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusi%C3%B3n"&gt;
  &lt;/a&gt;
  Conclusi√≥n
&lt;/h1&gt;

&lt;p&gt;Github Actions nos facilit√≥ el despliegue en nuestras aplicaciones de una forma amena y sencilla. Con Github pages no solo podemos tener un hosting gratuito de nuestro proyectos, que sumado a la integraci√≥n de Github Action podemos realizar el proceso de CI/CD automatizado.&lt;/p&gt;

&lt;p&gt;Espero este art√≠culo sea de ayuda, para que con √©l puedan hacer el despliegue de tu aplicaci√≥n de React f√°cilmente.&lt;/p&gt;

&lt;p&gt;Te invito a seguirme en twitter con el handle: &lt;a href="https://twitter.com/vanessamarely"&gt;@vanessamarely&lt;/a&gt;&lt;/p&gt;

</description>
      <category>github</category>
      <category>githubactions</category>
      <category>cicd</category>
      <category>react</category>
    </item>
    <item>
      <title>Beautify Your GitHub Profile like a Pro</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 30 May 2021 04:55:22 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/beautify-your-github-profile-like-a-pro-5093</link>
      <guid>https://dev.to/ruppysuppy/beautify-your-github-profile-like-a-pro-5093</guid>
      <description>&lt;p&gt;If you have ever used &lt;strong&gt;GitHub&lt;/strong&gt;, you must have come across some impressive-looking profiles and thought "Damn! I want my profile to look like that." Well, this article will help you with precisely that.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#1-add-a-raw-readme-endraw-"&gt;
  &lt;/a&gt;
  1. Add a &lt;code&gt;ReadMe&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;This is simply the easiest way to boost the visual appeal of your profile many folds. To create a &lt;code&gt;ReadMe&lt;/code&gt; for your &lt;strong&gt;GitHub&lt;/strong&gt; profile, create a new repository with your username. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lm3TVWg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prognnv0kl3t9o4y57te.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lm3TVWg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/prognnv0kl3t9o4y57te.png" alt="ReadMe Repository"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Initialize the repository with a &lt;code&gt;ReadMe.md&lt;/code&gt; file and anything you write in the file will be shown in your &lt;strong&gt;GitHub&lt;/strong&gt; Profile.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DwQfMWQG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18md8cuyzdd4n4tzfyeq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DwQfMWQG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/18md8cuyzdd4n4tzfyeq.PNG" alt="ReadMe Demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;ReadMe&lt;/code&gt; is the perfect place to describe yourself, list out your achievements and skills. You can also add badges like these to make your profile look even more attractive. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--chf73s-H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Linked_In-0077B5%3Fstyle%3Dfor-the-badge%26logo%3DLinkedIn%26logoColor%3Dwhite" alt="linked-in"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/ruppysuppy"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---yDJLJ2---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/GitHub-000000%3Fstyle%3Dfor-the-badge%26logo%3DGitHub%26logoColor%3Dwhite" alt="github"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.instagram.com/tapajyotib/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sg7TEMKA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://img.shields.io/badge/Instagram-E4405F%3Fstyle%3Dfor-the-badge%26logo%3Dinstagram%26logoColor%3Dwhite" alt="instagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To create the badge the syntax is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;![&lt;/span&gt;&lt;span class="nv"&gt;&amp;lt;Badge Name&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;https://img.shields.io/badge/&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;Badge&lt;/span&gt; &lt;span class="na"&gt;Text&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;-&lt;span class="nt"&gt;&amp;lt;Background&lt;/span&gt; &lt;span class="na"&gt;Color&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;?style=for-the-badge&amp;amp;logo=&lt;span class="nt"&gt;&amp;lt;Icon&lt;/span&gt; &lt;span class="na"&gt;Name&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&amp;amp;logoColor=&lt;span class="nt"&gt;&amp;lt;Logo&lt;/span&gt; &lt;span class="na"&gt;Color&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So the &lt;strong&gt;Github&lt;/strong&gt; badge would look like:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;![&lt;/span&gt;&lt;span class="nv"&gt;github&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;https://img.shields.io/badge/GitHub-000000?style=for-the-badge&amp;amp;logo=GitHub&amp;amp;logoColor=white&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can browse through the list of available icons on &lt;a href="https://simpleicons.org/"&gt;Simple Icons&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#2-manage-your-repositories"&gt;
  &lt;/a&gt;
  2. Manage your &lt;em&gt;Repositories&lt;/em&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Github&lt;/strong&gt; allows you to pin &lt;em&gt;Repositories&lt;/em&gt; and &lt;em&gt;Gists&lt;/em&gt; in your profile. This is a remarkable feature that enables you to display the things you want to showcase. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AaipZvZ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqiqe58zim5qmijcp2zg.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AaipZvZ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/iqiqe58zim5qmijcp2zg.PNG" alt="Pinned repositories"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It's also a good idea to add &lt;em&gt;details&lt;/em&gt;, &lt;em&gt;tags&lt;/em&gt; and &lt;em&gt;emojis&lt;/em&gt; to make the repository more engaging.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zMH5gEBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wa625c2laimozg15jyf.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zMH5gEBs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6wa625c2laimozg15jyf.PNG" alt="Repository with details"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2uHlpiKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf06qycuobmhv71zrdo3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2uHlpiKh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lf06qycuobmhv71zrdo3.PNG" alt="Repository with no details"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the one with details is way more engaging than the one without any.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#3-contribute-contribute-and-contribute-some-more"&gt;
  &lt;/a&gt;
  3. &lt;strong&gt;Contribute&lt;/strong&gt;, &lt;strong&gt;Contribute&lt;/strong&gt; and &lt;strong&gt;Contribute&lt;/strong&gt; some more!
&lt;/h1&gt;

&lt;p&gt;This is simply the most important step to make your &lt;strong&gt;GitHub&lt;/strong&gt; look awesome! I get it, getting started is scary, so if you need help, check out this &lt;a href="https://dev.to/ruppysuppy/zero-to-hero-get-started-with-open-source-10b7"&gt;article on how to get started with &lt;strong&gt;Open Source Development&lt;/strong&gt;&lt;/a&gt;. You don't have to start with huge features or projects; begin with documentation fixes, then move on to tiny bug fixes and features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Open Source Development&lt;/strong&gt; can boost your profile regardless if you are going for a &lt;em&gt;job interview&lt;/em&gt; or &lt;em&gt;freelancing&lt;/em&gt;. After a few good contributions, you will start getting job offers from various companies. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FtLhJ8FK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixcxnjh9u7azfsrboxt0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FtLhJ8FK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ixcxnjh9u7azfsrboxt0.PNG" alt="Open Source Contributions"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One essential thing to keep in mind is: &lt;strong&gt;DO NOT TRY TO CHEAT THE PROCESS&lt;/strong&gt;. Every one of your contributions is listed on &lt;strong&gt;GitHub&lt;/strong&gt;. There are a lot of people who create fake issues to get a green dot for contribution. This only creates &lt;em&gt;negative impression&lt;/em&gt; on the person viewing your profile. If you keep making tiny incremental improvements, you will make it; if you try to use a shortcut, you will likely crash and burn. As the saying goes, "Slow and steady wins the race."&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Want to work together? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a student &amp;amp; freelancer who will soon start off as a Digital Nomad as soon as I graduate. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for weekly new tidbits on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Connect to me on:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Portfolio&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.linkedin.com/in/tapajyoti-bose-429a601a0"&gt;LinkedIn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>markdown</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
