<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>5 Articles every WebDev should read this week (#49)</title>
      <author>martin krause</author>
      <pubDate>Fri, 10 Dec 2021 15:49:22 +0000</pubDate>
      <link>https://dev.to/martinkr/5-articles-every-webdev-should-read-this-week-49-i49</link>
      <guid>https://dev.to/martinkr/5-articles-every-webdev-should-read-this-week-49-i49</guid>
      <description>&lt;p&gt;A curated list of the top five web development must-reads from last week. Don't miss out on the latest web development stories and insights. Read all about the cutting edge in web development, working in tech and the new tools and frameworks while learning a few new tricks.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#web-almanac"&gt;
  &lt;/a&gt;
  Web Almanac
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The Web Almanac is a comprehensive report on the state of the web, backed by real data and trusted web experts. The 2021 edition is comprised of 24 chapters spanning aspects of page content, user experience, publishing, and distribution.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://almanac.httparchive.org/en/2021/"&gt;https://almanac.httparchive.org/en/2021/&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#a-roadmap-to-the-mandantory-2fa-at-npm"&gt;
  &lt;/a&gt;
  A roadmap to the mandantory 2FA at npm
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Today we are introducing enhanced login verification to the npm registry, and we will begin a staged rollout to maintainers beginning December 7 and concluding January 4. Maintainers on the npm registry who have access to publish packages and do not have two-factor authentication (2FA) enabled will receive an email with a one-time password (OTP) when authenticating through either the npmjs.com website or the npm CLI&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.blog/2021-12-07-enrolling-npm-publishers-enhanced-login-verification-two-factor-authentication-enforcement/"&gt;https://github.blog/2021-12-07-enrolling-npm-publishers-enhanced-login-verification-two-factor-authentication-enforcement/&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#fonts-knowledge"&gt;
  &lt;/a&gt;
  Fonts Knowledge
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Welcome to our library of original guides to the world of typography, which the Google Fonts team is producing in collaboration with typographic experts from around the world. Google Fonts Knowledge enables designers and developers of all skill sets to choose and use type with purpose.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://fonts.google.com/knowledge"&gt;https://fonts.google.com/knowledge&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#underrated-react-hooks-youre-missing-out-on"&gt;
  &lt;/a&gt;
  Underrated React Hooks you’re missing out on
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;If you’re a React developer who likes to write function components over class components, then this article is for you; we’ll look at three helpful yet somewhat underrated React Hooks that you might not be so familiar with, useImperativeHandle, useLayoutEffect, and useDebugValue.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://blog.logrocket.com/underrated-react-hooks-youre-missing-out-on/"&gt;https://blog.logrocket.com/underrated-react-hooks-youre-missing-out-on/&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#tailwind-css-v30"&gt;
  &lt;/a&gt;
  Tailwind CSS v3.0
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Tailwind CSS v3.0 is here — bringing incredible performance gains, huge workflow improvements, and a seriously ridiculous number of new features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://tailwindcss.com/blog/tailwindcss-v3"&gt;https://tailwindcss.com/blog/tailwindcss-v3&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Follow me on &lt;a href="http://twitter.com/_martinkr"&gt;Twitter: @martinkr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@burntime"&gt;Alex Kulikov&lt;/a&gt; on &lt;a href="https://unsplash.com"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://modernfrontend.dev/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cH97ToOx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://modernfrontend.dev/banner/banner_583-111.png" alt="Subscribe to the weekly modern frontend development newsletter" width="583" height="111"&gt;&lt;/a&gt;&lt;/p&gt;




</description>
      <category>webdev</category>
      <category>tutorial</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>Working with Bootstrap Notes: Part 3</title>
      <author>Randy Rivera</author>
      <pubDate>Fri, 10 Dec 2021 15:35:35 +0000</pubDate>
      <link>https://dev.to/rthefounding/working-with-bootstrap-notes-part-3-2p4n</link>
      <guid>https://dev.to/rthefounding/working-with-bootstrap-notes-part-3-2p4n</guid>
      <description>&lt;ul&gt;
&lt;li&gt;We can also center our heading element to make it look way better, by just adding the class &lt;code&gt;text-center&lt;/code&gt; to our &lt;code&gt;h2&lt;/code&gt; element.&lt;/li&gt;
&lt;li&gt;Remember to separate each of them with a space when adding several classes like this.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"red-text text-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;your text&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Code:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container-fluid"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"red-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CatPhotoApp&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Answer:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class= &lt;/span&gt;&lt;span class="s"&gt;"text-center red-text"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CatPhotoApp&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-bootstrap-button"&gt;
  &lt;/a&gt;
  Create A BootStrap Button
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Let's create a new &lt;code&gt;button&lt;/code&gt; element below our kitten photo(below is a link to the creator of FreeCodeCamp to follow along). We're gonna give it  the &lt;code&gt;btn&lt;/code&gt; and &lt;code&gt;btn-default&lt;/code&gt; classes as well as the text of &lt;code&gt;like&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Code:&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.freecodecamp.org/curriculum/cat-photo-app/running-cats.jpg"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"img-responsive"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Three kittens running towards the camera."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
/* insert button here */
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Answer:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-default"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Like&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#create-a-block-element-bootstrap-button"&gt;
  &lt;/a&gt;
  Create a Block Element Bootstrap Button
&lt;/h3&gt;

&lt;p&gt;*Normally, your button elements with the btn and btn-default classes are only as wide as the text that they have.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It would only be as wide as the word &lt;code&gt;Submit&lt;/code&gt;. By Making them Block Elements with the additional class of &lt;code&gt;btn-block&lt;/code&gt;, our button will stretch to fill the page's entire horizontal space and any elements following it flow onto a &lt;code&gt;new line&lt;/code&gt; below the block, like so.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-default btn-block"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Submit&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#taste-the-bootstrap-color-rainbow"&gt;
  &lt;/a&gt;
  Taste the Bootstrap Color Rainbow
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;btn-primary&lt;/code&gt; class is the main color we'll be using in our app. It's useful for highlighting actions you want your user to take. By just replacing Bootstrap's &lt;code&gt;btn-default&lt;/code&gt; class with &lt;code&gt;btn-primary&lt;/code&gt; in our button.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-primary btn-block"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Like&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#call-out-optional-actions-with-btninfo"&gt;
  &lt;/a&gt;
  Call out Optional Actions with btn-info
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;btn-info&lt;/code&gt; class is used to call attention to optional actions that the user can take. Let's create a new block-level Bootstrap button below the &lt;code&gt;like&lt;/code&gt; button with the text &lt;code&gt;info&lt;/code&gt; and add Bootstrap's &lt;code&gt;btn-info&lt;/code&gt; and &lt;code&gt;btn-block&lt;/code&gt; classes to it.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-info btn-block"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Info&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#warn-your-users-of-a-dangerous-action-with-btndanger"&gt;
  &lt;/a&gt;
  Warn Your Users of a Dangerous Action with btn-danger
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;btn-danger&lt;/code&gt; class is the button color you'll use to notify users that the button performs a destructive action, such as deleting a cat photo.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-block btn-danger"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Delete&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#use-the-bootstrap-grid-to-put-elements-side-by-side"&gt;
  &lt;/a&gt;
  Use the Bootstrap Grid to Put Elements Side by Side
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Bootstrap uses a responsive 12-column grid system, which makes it easy to put elements into rows and specify each element's relative width.&lt;/li&gt;
&lt;li&gt;For Example Bootstrap's &lt;code&gt;col-md-*&lt;/code&gt; class. &lt;code&gt;md&lt;/code&gt; means medium, and &lt;code&gt;*&lt;/code&gt; is a number specifying how many columns wide the element should be.&lt;/li&gt;
&lt;li&gt;We'll use &lt;code&gt;col-xs-*&lt;/code&gt;, where &lt;code&gt;xs&lt;/code&gt; means extra small(like an extra-small mobile phone) and &lt;code&gt;*&lt;/code&gt; is the number of columns specifying how many columns wide the element should be.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"row"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-xs-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-block btn-primary"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Like&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-xs-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-block btn-info"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Info&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"col-xs-4"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;button&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"btn btn-block btn-danger"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Delete&lt;span class="nt"&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;We put &lt;code&gt;Like&lt;/code&gt;, &lt;code&gt;Info&lt;/code&gt;, and &lt;code&gt;Delete&lt;/code&gt; buttons side-by-side by nesting all three of the, within one &lt;code&gt;&amp;lt;div class="row"&amp;gt;&lt;/code&gt; element. Then each of them within a &lt;code&gt;&amp;lt;div class="col-xs-4"&amp;gt;&lt;/code&gt; element.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ditch-custom-css-for-bootstrap"&gt;
  &lt;/a&gt;
  Ditch Custom CSS for Bootstrap
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Here FreeCodeCamp just wants us to clean up our code and make our app look more conventional by using Bootstrap's built-in styles. &lt;/li&gt;
&lt;li&gt;In the current code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class="nc"&gt;.red-text&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Lobster&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Monospace&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;16px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Monospace&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.thick-green-border&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.smaller-image&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;100px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container-fluid"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"red-text text-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CatPhotoApp&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Click here for &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;cat photos&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;.&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"smaller-image thick-green-border"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A cute orange cat lying on its back."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;They want us to Delete the &lt;code&gt;.red-text-&lt;/code&gt;. &lt;code&gt;p&lt;/code&gt;, and &lt;code&gt;smaller-image&lt;/code&gt; CSS declarations from your &lt;code&gt;style&lt;/code&gt; element so that the only declarations left in your &lt;code&gt;style&lt;/code&gt; element are &lt;code&gt;h2&lt;/code&gt; and &lt;code&gt;thick-green-border&lt;/code&gt;. Then delete the &lt;code&gt;p&lt;/code&gt; element that contains a dead link. Then remove the &lt;code&gt;red-text&lt;/code&gt; class from your &lt;code&gt;h2&lt;/code&gt; element and replace it with the &lt;code&gt;text-primary&lt;/code&gt; Bootstrap class.&lt;/li&gt;
&lt;li&gt;Finally!!! They want us to remove the &lt;code&gt;smaller-image&lt;/code&gt; class from the first &lt;code&gt;img&lt;/code&gt; element and replace it with the &lt;code&gt;img-responsive&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Answer:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Lobster&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Monospace&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nc"&gt;.thick-green-border&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;green&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;solid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;50%&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"container-fluid"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-primary text-center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;CatPhotoApp&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

  &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"img-responsive thick-green-border"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A cute orange cat lying on its back."&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#use-a-span-to-target-inline-elements"&gt;
  &lt;/a&gt;
  Use a span to target Inline Elements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;We can also use spans to create inline elements. Remember when we used the &lt;code&gt;btn-block&lt;/code&gt; class to make the button fill the entire row?&lt;/li&gt;
&lt;li&gt;Well with that being said by Using the inline &lt;code&gt;span&lt;/code&gt; element. We can put several elements on the same line, and even style different parts of the same line differently.&lt;/li&gt;
&lt;li&gt;Let's do so by nesting the word &lt;code&gt;love&lt;/code&gt; inside the &lt;code&gt;p&lt;/code&gt; element that currently has the text &lt;code&gt;things cats love&lt;/code&gt;. Give the &lt;code&gt;span&lt;/code&gt; the class &lt;code&gt;text-danger&lt;/code&gt; to make the text red.&lt;/li&gt;
&lt;li&gt;Code
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Things cats love:&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;cat nip&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;laser pointers&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;lasagna&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Answer:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Things cats &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-danger"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;love:&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;cat nip&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;laser pointers&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;lasagna&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Larson, Q., 2019. Frontend Development Libraries. [online] Freecodecamp.org. Available at: &lt;a href="https://www.freecodecamp.org/learn/front-end-development-libraries/Bootstrap"&gt;https://www.freecodecamp.org/learn/front-end-development-libraries/Bootstrap&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>programming</category>
      <category>css</category>
    </item>
    <item>
      <title>Accordion Panel with HTML-CSS</title>
      <author>Enes Kılıç</author>
      <pubDate>Fri, 10 Dec 2021 15:35:25 +0000</pubDate>
      <link>https://dev.to/enesskilic/accordion-panel-with-html-css-3ed0</link>
      <guid>https://dev.to/enesskilic/accordion-panel-with-html-css-3ed0</guid>
      <description>&lt;p&gt;In this post, we will make an Accordion Panel. We can make this component with HTML &lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt; tag without Javascript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you want to see all HTML-CSS projects look this &lt;a href="https://github.com/enesskilic/html-css-projects"&gt;Repository&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;



&lt;br&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;details&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;Panel Title&lt;span class="nt"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;Panel Content&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;That's it. Toggles Panel content on clicking the Panel Title. You can make different components with using this tag.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;My component with some styles.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/eneskilic/embed/qBPOvpB?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>A sample e-commerce web app built with ReactJS, ExpressJS and MongoDB
</title>
      <author>Linh Truong Cong Hong</author>
      <pubDate>Fri, 10 Dec 2021 15:29:34 +0000</pubDate>
      <link>https://dev.to/linhtch90/a-sample-e-commerce-web-app-built-with-reactjs-expressjs-and-mongodb-ch0</link>
      <guid>https://dev.to/linhtch90/a-sample-e-commerce-web-app-built-with-reactjs-expressjs-and-mongodb-ch0</guid>
      <description>&lt;p&gt;MERN stack which stands for MongoDB, ExpressJS, ReactJS and NodeJS has become a popular choice for fullstack Javascript web developer.&lt;/p&gt;

&lt;p&gt;As a personal project for education purpose, I developed a basic bookstore web app with MERN stack.&lt;/p&gt;

&lt;p&gt;Through this project, beginners could have a useful resource to understand how to implement ReactJS, Redux, React Router and others related libraries in React ecosystem to build up a functional front-end solution.&lt;/p&gt;

&lt;p&gt;In addition, the back-end developed with ExpressJS and MongoDB is also an example for building a web api with Javascript.&lt;/p&gt;

&lt;p&gt;Further detail information is available on Homepage of the live demo at:&lt;br&gt;
&lt;a href="https://bn-bookstore.herokuapp.com/#/"&gt;https://bn-bookstore.herokuapp.com/#/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The source code is available at:&lt;br&gt;
&lt;a href="https://github.com/linhtch90/bn_bookstore_public_source"&gt;https://github.com/linhtch90/bn_bookstore_public_source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please give me a Github star ⭐ as a compliment if my effort is useful for you! Thanks!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>react</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>CakePHP Translation: Agile Localization for Devs</title>
      <author>dianavoroniak</author>
      <pubDate>Fri, 10 Dec 2021 15:11:53 +0000</pubDate>
      <link>https://dev.to/crowdin/cakephp-translation-agile-localization-for-devs-32eh</link>
      <guid>https://dev.to/crowdin/cakephp-translation-agile-localization-for-devs-32eh</guid>
      <description>&lt;p&gt;&lt;a href="https://github.com/cakephp/cakephp"&gt;CakePHP&lt;/a&gt; is an open-source web framework for PHP which uses commonly known design patterns. Based on model-view-controller, it is generally used for handling web applications, the informative &lt;a href="https://bakery.cakephp.org/"&gt;CakePHP library&lt;/a&gt; makes the development clear.&lt;/p&gt;

&lt;p&gt;Our article will teach you how CakePHP Translation basics can help you automate your localization and translate regular app updates with ease.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#automate-localization-with-vcs-integrations"&gt;
  &lt;/a&gt;
  Automate Localization with VCS Integrations
&lt;/h2&gt;

&lt;p&gt;Localization is an important step that opens your product to a global market. In order to reap the benefits of localization and enjoy both the result and process, it should be organized in a highly agile manner.&lt;/p&gt;

&lt;p&gt;The best way to do it is to integrate the localization process into your development workflow. For this, use a localization management platform that integrates with your software repository.  &lt;/p&gt;

&lt;p&gt;On Crowdin, you can connect your localization projects with &lt;a href="https://store.crowdin.com/collections/frontpage/products/github"&gt;GitHub&lt;/a&gt;, &lt;a href="https://store.crowdin.com/collections/frontpage/products/gitlab"&gt;GitLab&lt;/a&gt;, &lt;a href="https://store.crowdin.com/products/bitbucket?_pos=1&amp;amp;_sid=499a27e7c&amp;amp;_ss=r"&gt;Bitbucket&lt;/a&gt;, &lt;a href="https://store.crowdin.com/collections/frontpage/products/azure-repos"&gt;Azure Repos&lt;/a&gt; or install &lt;a href="https://support.crowdin.com/cli-tool/"&gt;Crowdin Console Client (CLI)&lt;/a&gt; that allows you to integrate with GIT, SVN, Mercurial, and more.  &lt;/p&gt;

&lt;p&gt;Integration with your repository ensures that the new texts from the selected branches are sent to your localization project right away, and all the translations are automatically added to your repo as a pull request.  &lt;/p&gt;

&lt;p&gt;Make all of these steps automated to save your time for other tasks.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cakephp-localization-basics"&gt;
  &lt;/a&gt;
  CakePHP Localization Basics
&lt;/h2&gt;

&lt;p&gt;Developers often underestimate the complexity of localization. An application aiming for a multilingual market should contain more than just translated copy. You should also consider date and time formats, currency symbols, and pluralization.  &lt;/p&gt;

&lt;p&gt;To make it easier for you to understand the basics, let’s talk about CakePHP localization and gettext.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cakephp-gettext"&gt;
  &lt;/a&gt;
  CakePHP – Gettext
&lt;/h3&gt;

&lt;p&gt;Since CakePHP follows standard gettext strategies, CakePHP localization requires storing translatable text in &lt;a href="https://support.crowdin.com/file-formats/po/#custom-attributes"&gt;.po files&lt;/a&gt;. It is one of the most common human/machine-readable file formats.&lt;/p&gt;

&lt;p&gt;So that's why the first step towards the multilingual CakePHP app is to install &lt;a href="https://www.gnu.org/software/gettext/"&gt;gettext&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#set-up-cakephp-translations"&gt;
  &lt;/a&gt;
  Set Up CakePHP Translations
&lt;/h3&gt;

&lt;p&gt;The simplest way to “transform” a single-language application into a multilingual application is to use the &lt;code&gt;__()&lt;/code&gt; function in your code. &lt;/p&gt;

&lt;p&gt;Here is an example of some code for a single-language application:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;h2&amp;gt;Home page&amp;lt;/h2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To internationalize your code, all you need to do is to wrap all strings you need to localize in __() like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&amp;lt;?= __('Home page') ?&amp;gt;&amp;lt;/h2&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These two code examples are identical in terms of functionality – they will both send the content to the browser. The &lt;code&gt;__()&lt;/code&gt; function will translate the passed string if a translation is available. If there are no translations, it returns the texts without any changes. That means, the original string will appear on the web page.&lt;/p&gt;

&lt;p&gt;Note: You do not need to instantiate the L10n class. It happens automatically the first time the &lt;code&gt;__()&lt;/code&gt; function is called.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#create-language-files"&gt;
  &lt;/a&gt;
  Create Language Files
&lt;/h3&gt;

&lt;p&gt;Create one or more .po files, depending on how the file is and how many languages you want. Place files under &lt;em&gt;src/Locale/&lt;/em&gt; and within this directory. It's important to create a subfolder for each language the application needs to support.&lt;/p&gt;

&lt;p&gt;If you choose to use just one .po file, you'll wrap your strings with the &lt;code&gt;__()&lt;/code&gt; helper. If you choose to have multiple .po files in order to avoid one massive file, you can use the &lt;code&gt;__d()&lt;/code&gt; helper so that you could specify the domain (domain = name of the .po file without the .po extension).&lt;/p&gt;

&lt;p&gt;Translation folders can be the two or three-letter ISO code of the language or the full locale name such as &lt;code&gt;fr_FR&lt;/code&gt;, &lt;code&gt;es_ES&lt;/code&gt;, &lt;code&gt;es_DO&lt;/code&gt;, which contains both the language and the country where it is spoken.&lt;/p&gt;

&lt;p&gt;View Crowdin &lt;a href="https://support.crowdin.com/api/language-codes/"&gt;languages codes&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/src
        /Locale
            /fr
                mywebapp.po
            /es
                mywebapp.po

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The source strings will be marked with “&lt;strong&gt;msgid&lt;/strong&gt;” and shouldn’t be changed. Strings marked with “&lt;strong&gt;msgstr&lt;/strong&gt;” are where you put the translation. The translation starts blank and needs to be filled in. Don't forget to keep quotes around your translation.  &lt;/p&gt;

&lt;p&gt;If “&lt;strong&gt;msgctxt&lt;/strong&gt;” is given, it will be used as part of the translation title, which you can use to provide the context. In the next section, we will cover more details about context.&lt;/p&gt;

&lt;p&gt;An example translation file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;msgid "Settings and privacy"
msgstr "Paramètres et confidentialité"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once you install the integration with your VSC system, you can customize content synchronization between your repository and Crowdin. For this, change the configuration in the Crowdin UI, or edit the configuration file based on your preferences and upload it.  &lt;/p&gt;

&lt;p&gt;For example, you can define the path for files, map your own languages to be recognizable in your localization projects, rename translation files, select files and directories that you don’t need to translate, and more.  &lt;/p&gt;

&lt;p&gt;Read more about &lt;a href="https://support.crowdin.com/vcs-integrations-configuring-online/?q=language%20codes#creating-a-configuration"&gt;VCS Integrations&lt;/a&gt; and a &lt;a href="https://support.crowdin.com/configuration-file/"&gt;configuration file&lt;/a&gt;.  &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-string-context"&gt;
  &lt;/a&gt;
  Add String Context
&lt;/h3&gt;

&lt;p&gt;Providing translators with context improves translation quality, makes the translation process easier, and streamlines the QA process by reducing the possibility of user error.  &lt;/p&gt;

&lt;p&gt;You can add a “comment” to your string to give translators hints about a translatable string.&lt;/p&gt;

&lt;p&gt;Let's look at the word "email". In English, it refers to a noun and a verb. To specify which one is used here, you can use the &lt;code&gt;__x()&lt;/code&gt; function. The context will appear on the &lt;strong&gt;msgctxt&lt;/strong&gt; line in the resulting .po file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;echo __x('noun', 'email');

echo __x('verb', 'email');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The first argument is the context of the message, and the second is the message to be translated.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;msgctxt "noun"
msgid "email"
msgstr ""
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#set-the-default-locale"&gt;
  &lt;/a&gt;
  Set the Default Locale
&lt;/h3&gt;

&lt;p&gt;You can set the default locale in your &lt;em&gt;config/app.php&lt;/em&gt; file by setting &lt;code&gt;App.defaultLocale&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The default locale controls several aspects of your application, including the default language, the date and time formats. It can also control the number or currency format whenever any of those is displayed using CakePHP’s localization libraries.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;'App' =&amp;gt; [
    ...
    'defaultLocale' =&amp;gt; env('APP_DEFAULT_LOCALE', 'en_US'),
    ...
]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check out the official &lt;a href="https://book.cakephp.org/3/en/core-libraries/internationalization-and-localization.html"&gt;CakePHP documentation&lt;/a&gt; to discover further information about using plurals, variables, and more.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#provide-context-improve-the-translation-quality"&gt;
  &lt;/a&gt;
  Provide Context – Improve the Translation Quality
&lt;/h2&gt;

&lt;p&gt;Context ensures the quality of your localized product and makes the translation process easier. There are a lot of ways to provide context. It can be screenshots, videos, a link to the entire file, or even better – a visual preview right in the Editor where translators work.  &lt;/p&gt;

&lt;p&gt;The original context is particularly important when sentences are short or consist of few words, as often happens in our case with web applications.  &lt;/p&gt;

&lt;p&gt;To make it easier for you to provide context for translators and reduce manual work, Crowdin has created an &lt;a href="https://support.crowdin.com/enterprise/in-context/"&gt;In-Context Localization tool&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;You can use the tool to create an overlay for your app. Translators can translate and receive context in real-time. In-context localization is connected with the actual project created in Crowdin, which contains the translatable files. The translators can preview their translations as if in the real app interface. Translation files are stored within your Crowdin project, and you can decide when to pull them to your application (for example, only pull them after reviewing by a proofreader, so you can be confident in the quality of the final product).&lt;/p&gt;

&lt;p&gt;Read our article about the &lt;a href="https://blog.crowdin.com/2019/11/05/no-context-no-quality-give-translators-context-to-get-better-translations/"&gt;In-Context tool&lt;/a&gt; and other ways to provide context for translators  on Crowdin.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#localize-your-app-with-crowdin"&gt;
  &lt;/a&gt;
  Localize Your App with Crowdin
&lt;/h3&gt;

&lt;p&gt;Automate localization process, release your app in several languages simultaneously, and provide an enhanced experience for your global customers with Crowdin. &lt;/p&gt;

&lt;p&gt;Get started and register a &lt;a href="https://accounts.crowdin.com/register?utm_source=dev.to&amp;amp;utm_medium=referral&amp;amp;utm_campaign=cakephp-localization&amp;amp;utm_content=article"&gt;Crowdin&lt;/a&gt; account.&lt;/p&gt;

</description>
      <category>cakephp</category>
      <category>webdev</category>
      <category>localization</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Final Blog for OSD600</title>
      <author>Ahmad</author>
      <pubDate>Fri, 10 Dec 2021 15:01:50 +0000</pubDate>
      <link>https://dev.to/ar/final-blog-for-osd600-265m</link>
      <guid>https://dev.to/ar/final-blog-for-osd600-265m</guid>
      <description>&lt;p&gt;Out of all the courses I've taken, OSD600 has had the biggest impact on me. For once, I'm coming out of a course feeling ready to tackle the subject in the real world. Having a great professor really helped.&lt;/p&gt;

&lt;p&gt;I've always known about git but didn't understand why, when, and how it's used. But man has this course opened my eyes. I now use git in every personal project, even if I don't intend on putting it on GitHub.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advice"&gt;
  &lt;/a&gt;
  Advice
&lt;/h2&gt;

&lt;p&gt;If I were to give any newcomers advice, it'd be to get to work on pull requests as soon as possible. Some reviewers take &lt;em&gt;days&lt;/em&gt; to respond which can bleed the little time you have. By the time you address their concerns, time's up.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>🚀10 Trending projects on GitHub for web developers - 10th December 2021</title>
      <author>Iain Freestone</author>
      <pubDate>Fri, 10 Dec 2021 14:56:15 +0000</pubDate>
      <link>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-10th-december-2021-28l1</link>
      <guid>https://dev.to/iainfreestone/10-trending-projects-on-github-for-web-developers-10th-december-2021-28l1</guid>
      <description>&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-turborepo"&gt;
  &lt;/a&gt;
  1. Turborepo
&lt;/h3&gt;

&lt;p&gt;The high-performance build system for JavaScript &amp;amp; TypeScript codebases&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/vercel"&gt;
        vercel
      &lt;/a&gt; / &lt;a href="https://github.com/vercel/turborepo"&gt;
        turborepo
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The high-performance build system for JavaScript &amp;amp; TypeScript codebases
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
   &lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/4060187/106504110-82f58d00-6494-11eb-87b7-a16d4f68bc5a.png"&gt;&lt;img width="340" alt="Turborepo logo" src="https://res.cloudinary.com/practicaldev/image/fetch/s--2dbIuNMM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/4060187/106504110-82f58d00-6494-11eb-87b7-a16d4f68bc5a.png"&gt;&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;  
  &lt;a href="https://www.npmjs.com/package/turbo" rel="nofollow"&gt;
    &lt;img alt="" src="https://camo.githubusercontent.com/1c0a2fd499b8eb9349295bb110c0d288188405652bf7d50a01b2c6a56ce46e98/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f747572626f"&gt;
  &lt;/a&gt;
  &lt;a href="https://vercel.com" rel="nofollow"&gt;
    &lt;img src="https://camo.githubusercontent.com/c56f739dec6769355e1841389345ad5edfaeb990ce6d20226fe7dfff3040c523/68747470733a2f2f62616467656e2e6e65742f62616467652f69636f6e2f4d616465253230427925323056657263656c3f69636f6e3d76657263656c266c6162656c26636f6c6f723d626c61636b266c6162656c436f6c6f723d626c61636b"&gt;
  &lt;/a&gt;
&lt;/p&gt;

&lt;h2&gt;
Documentation&lt;/h2&gt;
&lt;p&gt;Visit &lt;a href="https://turborepo.org" rel="nofollow"&gt;https://turborepo.org&lt;/a&gt; to view the full documentation.&lt;/p&gt;
&lt;h2&gt;
Community&lt;/h2&gt;
&lt;p&gt;To chat with other community members, you can join the &lt;a href="https://turborepo.org/discord" rel="nofollow"&gt;Turborepo Discord&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Our &lt;a href="https://github.com/vercel/turborepo/blob/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Turborepo community channels.&lt;/p&gt;
&lt;h2&gt;
Updates&lt;/h2&gt;
&lt;p&gt;Follow &lt;a href="https://twitter.com/turborepo" rel="nofollow"&gt;@turborepo&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Author&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Jared Palmer (&lt;a href="https://twitter.com/jaredpalmer" rel="nofollow"&gt;@jaredpalmer&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/vercel/turborepo"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#2-statsigs-opensource-status-page"&gt;
  &lt;/a&gt;
  2. Statsig's Open-Source Status Page
&lt;/h3&gt;

&lt;p&gt;A simple, zero-dependency, pure js/html status page based on GitHub Pages and Actions.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/statsig-io"&gt;
        statsig-io
      &lt;/a&gt; / &lt;a href="https://github.com/statsig-io/statuspage"&gt;
        statuspage
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A simple, zero-dependency, pure js/html status page based on GitHub Pages and Actions.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a href="https://github.com/statsig-io/statuspage../../actions/workflows/health-check.yml"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OC2hI2Tw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/statsig-io/statuspage../../actions/workflows/health-check.yml/badge.svg" alt="Health Check"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;
Statsig's Open-Source Status Page&lt;/h1&gt;
&lt;p&gt;We tried various Status Pages out there, and built this as a fun little hobby project to make status pages as simple as possible.&lt;/p&gt;
&lt;h2&gt;
Demo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://status.statsig.com" rel="nofollow"&gt;https://status.statsig.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Setup instructions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Fork the &lt;a href="https://github.com/statsig-io/statuspage/"&gt;template repository&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Update &lt;code&gt;urls.cfg&lt;/code&gt; to include your urls.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-source-haproxy-config position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;key1=https://example.com
key2=https://statsig.com&lt;/pre&gt;

&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Update &lt;code&gt;index.html&lt;/code&gt; and change the title.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight highlight-text-html-basic position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;title&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;My Status Page&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;title&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="pl-kos"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;Services Status&lt;span class="pl-kos"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="pl-ent"&gt;h1&lt;/span&gt;&lt;span class="pl-kos"&gt;&amp;gt;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Set up GitHub Pages for your repository.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/74588208/121419015-5f4dc200-c920-11eb-9b14-a275ef5e2a19.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GvXMxDBH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/74588208/121419015-5f4dc200-c920-11eb-9b14-a275ef5e2a19.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
How does it work?&lt;/h2&gt;
&lt;p&gt;This project uses Github actions to wake up every hour and run a shell script (&lt;code&gt;health-check.sh&lt;/code&gt;). This script runs &lt;code&gt;curl&lt;/code&gt; on every url in your config and appends the result of that run to a log file and commits it to the repository. This log is then pulled dynamically from &lt;code&gt;index.html&lt;/code&gt; and displayed in a easily consumable fashion. You can also run that script from your own infrastructure to…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/statsig-io/statuspage"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#3-awesome-software-architecture"&gt;
  &lt;/a&gt;
  3. Awesome Software Architecture
&lt;/h3&gt;

&lt;p&gt;A curated list of awesome articles, videos, and other resources to learn and practice about software architecture, patterns, and principles.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/mehdihadeli"&gt;
        mehdihadeli
      &lt;/a&gt; / &lt;a href="https://github.com/mehdihadeli/awesome-software-architecture"&gt;
        awesome-software-architecture
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A curated list of awesome articles, videos, and other resources to learn and practice about software architecture, patterns, and principles.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
🎨 Awesome Software Architecture &lt;a href="https://awesome.re" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/5d0405ddcbeac98b5806832e6254a0a102e09b47637c2ddec9a8094cb2257b31/68747470733a2f2f617765736f6d652e72652f62616467652d666c6174322e737667" alt="Awesome"&gt;&lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://twitter.com/mehdi_hadeli" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/557cae32c31a2862ac12e368ad083ee1f50fa86f65f5e4395f3d7981936974f0/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d406d656864695f686164656c692d2532333144413146323f7374796c653d666c61742d737175617265266c6f676f3d74776974746572266c6f676f436f6c6f723d666666666666" alt="Twitter URL"&gt;&lt;/a&gt;
&lt;a href="https://www.linkedin.com/in/mehdihadeli/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d56847f02efe03fbf9005522573eab8a188a165cff793cfcbf6f6ab435b3d3ff/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2d6d65686469686164656c692d626c75653f7374796c653d666c61742d737175617265266c6f676f3d6c696e6b6564696e266c6f676f436f6c6f723d666666666666" alt="Linkedin Url URL"&gt;&lt;/a&gt;
&lt;a href="https://dotnetuniversity.com/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/ba733c2a07f7d084686bb643c10c7b7e3b2fa9ce1b9aa331004953def581c427/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f626c6f672d646f746e6574756e69766572736974792e636f6d2d627269676874677265656e3f7374796c653d666c61742d737175617265" alt="blog"&gt;&lt;/a&gt;
&lt;a href="http://creativecommons.org/publicdomain/zero/1.0/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/eeaee172024653635746ba1879011c130d5659d55a3e8e1369defe32941cc0bf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d434330253230312e302d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265" alt="License: CC0-1.0"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/tweet?url=https://github.com/mehdihadeli/awesome-software-architecture&amp;amp;text=A%20curated%20list%20of%20awesome%20articles%20and%20resources%20to%20learn%20and%20practice%20about%20software%20architecture%2C%20patterns%2C%20and%20principles&amp;amp;hashtags=dotnetcore,dotnet,csharp,microservices,netcore,aspnetcore,ddd,cqrs,softwarearchitecture,designpatterns,modularmonolith" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/90bc908826728c0e4261acfff5619fd732c7be2b2a00624fce6363c9a3623c90/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c2f687474702f736869656c64732e696f2e7376673f7374796c653d736f6369616c" alt="Tweet"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/mehdihadeli/awesome-software-architecture./banner.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Vc17k700--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mehdihadeli/awesome-software-architecture./banner.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Curated list of awesome articles and resources to learn and practice about software architecture, patterns and principles. this repository will be updated continuously, keep yourself up to date .&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;🚀 This awesome list is available in this link:&lt;/strong&gt;
&lt;strong&gt;&lt;a href="https://mehdihadeli.github.io/awesome-software-architecture" rel="nofollow"&gt;https://mehdihadeli.github.io/awesome-software-architecture&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://mehdihadeli.github.io/awesome-software-architecture" rel="nofollow"&gt; &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PCHC7qAM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/mehdihadeli/awesome-software-architectureassets/home.png" alt="home page"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stars.medv.io/mehdihadeli/awesome-software-architecture" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c5699af46b229f376d2d7486f6aa94f34add33afdbb3996dd118b8809fc80326/68747470733a2f2f73746172732e6d6564762e696f2f6d65686469686164656c692f617765736f6d652d736f6674776172652d6172636869746563747572652e737667" alt="Sparkline"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Support ⭐
&lt;/h2&gt;

&lt;p&gt;Star this repository, And we will be happy together :)&lt;/p&gt;

&lt;p&gt;Thanks a bunch for supporting me!&lt;/p&gt;

&lt;h2&gt;
Contribution&lt;/h2&gt;

&lt;p&gt;Contributions are always welcome! Please take a look at the &lt;a href="https://github.com/mehdihadeli/awesome-software-architecture/blob/main/contributing.md"&gt;contribution guidelines&lt;/a&gt; pages first.&lt;/p&gt;

&lt;p&gt;Thanks to all &lt;a href="https://github.com/mehdihadeli/awesome-software-architecture/graphs/contributors"&gt;contributors&lt;/a&gt;, you're awesome and wouldn't be possible without you! The goal is to build a categorized community-driven collection of very well-known resources.&lt;/p&gt;

&lt;/div&gt;
&lt;br&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/mehdihadeli/awesome-software-architecture"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;





&lt;h3&gt;
  &lt;a href="#4-react-cool-img"&gt;
  &lt;/a&gt;
  4. React Cool Img
&lt;/h3&gt;

&lt;p&gt;A React &lt;a href="" class="article-body-image-wrapper"&gt;&lt;img&gt;&lt;/a&gt; component let you handle image UX and performance as a Pro!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/wellyshen"&gt;
        wellyshen
      &lt;/a&gt; / &lt;a href="https://github.com/wellyshen/react-cool-img"&gt;
        react-cool-img
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      😎 🏞 A React &amp;lt;Img /&amp;gt; component let you handle image UX and performance as a Pro!
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
&lt;em&gt;&lt;b&gt;REACT COOL IMG&lt;/b&gt;&lt;/em&gt;
&lt;/h1&gt;
&lt;p&gt;This is a lightweight React &lt;code&gt;&amp;lt;Img /&amp;gt;&lt;/code&gt; component, which helps you handle image UX (user experience) and performance optimization as a professional guy 🤓&lt;/p&gt;
&lt;p&gt;It empowers the standard &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img" rel="nofollow"&gt;&lt;code&gt;img&lt;/code&gt;&lt;/a&gt; tag by many cool &lt;a href="https://github.com/wellyshen/react-cool-img#features"&gt;features&lt;/a&gt; without breaking your original development experience. Ideally, it can be an &lt;code&gt;img&lt;/code&gt; tag replacement for &lt;a href="https://reactjs.org" rel="nofollow"&gt;React.js&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;⚡️ Live demo: &lt;a href="https://react-cool-img.netlify.app" rel="nofollow"&gt;https://react-cool-img.netlify.app&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;❤️ it? ⭐️ it on &lt;a href="https://github.com/wellyshen/react-cool-img/stargazers"&gt;GitHub&lt;/a&gt; or &lt;a href="https://twitter.com/intent/tweet?text=With%20@React-Cool-Img,%20my%20web%20app%20becomes%20more%20powerful.%20Thanks,%20@Welly%20Shen%20%F0%9F%A4%A9" rel="nofollow"&gt;Tweet&lt;/a&gt; about it.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/wellyshen/react-cool-img/actions?query=workflow%3ACI"&gt;&lt;img src="https://camo.githubusercontent.com/96457be04243496ef5656d8053f869e45906d91a78d5657e6fdabaa387169358/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f776f726b666c6f772f7374617475732f77656c6c797368656e2f72656163742d636f6f6c2d696d672f43493f7374796c653d666c61742d737175617265" alt="build status"&gt;&lt;/a&gt;
&lt;a href="https://coveralls.io/github/wellyshen/react-cool-img?branch=master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c4e5ca5cacf1198b474c73df22cfcfce5b5ecd5bf09a42be92cebfa34c6bde32/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f77656c6c797368656e2f72656163742d636f6f6c2d696d673f7374796c653d666c61742d737175617265" alt="coverage status"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/react-cool-img" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/2cd76d30530d9df0912089097d2c967ec37c75140d14fbb06bce4f08935467cb/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f72656163742d636f6f6c2d696d673f7374796c653d666c61742d737175617265" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://www.npmtrends.com/react-cool-img" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a7d7414d61f38fc2ba63bacf3d2815974384ceb17f4c907db326d813db38464b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f72656163742d636f6f6c2d696d673f7374796c653d666c61742d737175617265" alt="npm downloads"&gt;&lt;/a&gt;
&lt;a href="https://www.npmtrends.com/react-cool-img" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e490886723845b64f8f9d32e104ce8cf169a2ba648873b0ec29d46aa30971451/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f64742f72656163742d636f6f6c2d696d673f7374796c653d666c61742d737175617265" alt="npm downloads"&gt;&lt;/a&gt;
&lt;a href="https://bundlephobia.com/result?p=react-cool-img" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d775eb44a40d7e5499a6f8320815005a1fb65cd689c32957afaf45aae179444f/68747470733a2f2f62616467656e2e6e65742f62756e646c6570686f6269612f6d696e7a69702f72656163742d636f6f6c2d696d673f6c6162656c3d677a697025323073697a65267374796c653d666c61742d737175617265" alt="gzip size"&gt;&lt;/a&gt;
&lt;a href="https://github.com/wellyshen/react-cool-img#contributors-"&gt;&lt;img src="https://camo.githubusercontent.com/3652cf14752405199f980594bbcde1d3c6e6b07ade2a54a4f7f1e02b8f98a6a5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f616c6c5f636f6e7472696275746f72732d312d6f72616e67653f7374796c653d666c61742d737175617265" alt="All Contributors"&gt;&lt;/a&gt;
&lt;a href="https://github.com/wellyshen/react-cool-imgCONTRIBUTING.md"&gt;&lt;img src="https://camo.githubusercontent.com/71e397063e80d7be259be6cffe71736bdd5ae6ebe31531f20b873b6883663e1d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e3f7374796c653d666c61742d737175617265" alt="PRs welcome"&gt;&lt;/a&gt;
&lt;a href="https://twitter.com/intent/tweet?text=With%20@react-cool-img,%20my%20web%20app%20becomes%20more%20powerful.%20Thanks,%20@Welly%20Shen%20%F0%9F%A4%A9" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/67808bf13ccf985a7e2311f016af23d6fc8111b94b56ac209fdb543b52de41e7/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f7374796c653d736f6369616c2675726c3d68747470732533412532462532466769746875622e636f6d25324677656c6c797368656e25324672656163742d636f6f6c2d696d67" alt="Twitter URL"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
🖼 Placeholders for satisfying various image loading states (e.g. loading image &amp;gt; actual image &amp;gt; error image).&lt;/li&gt;
&lt;li&gt;
🛋 &lt;a href="https://github.com/wellyshen/react-cool-img#the-smart-way-to-load-images"&gt;Smart lazy loading&lt;/a&gt; with performant and efficient way, using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API" rel="nofollow"&gt;Intersection Observer&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
🤖 Built-in &lt;a href="https://github.com/wellyshen/react-cool-img#retry"&gt;auto-retry&lt;/a&gt; mechanism. User won't miss out your important information.&lt;/li&gt;
&lt;li&gt;
🚫 Aborts any current image downloads on component unmount potentially saving bandwidth and browser resources.&lt;/li&gt;
&lt;li&gt;
🔍 &lt;a href="https://github.com/wellyshen/react-cool-img#javascript-availability-and-seo"&gt;Supports server-side rendering / Javascript is disabled / SEO&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
📜 Supports &lt;a href="https://www.typescriptlang.org" rel="nofollow"&gt;TypeScript&lt;/a&gt; type definition.&lt;/li&gt;
&lt;li&gt;
🦔 Tiny size (&lt;a href="https://bundlephobia.com/result?p=react-cool-img" rel="nofollow"&gt;~ 2kB gzipped&lt;/a&gt;). No…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/wellyshen/react-cool-img"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#5-klipse"&gt;
  &lt;/a&gt;
  5. Klipse
&lt;/h3&gt;

&lt;p&gt;Klipse is a JavaScript plugin for embedding interactive code snippets in tech blogs.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/viebel"&gt;
        viebel
      &lt;/a&gt; / &lt;a href="https://github.com/viebel/klipse"&gt;
        klipse
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Klipse is a JavaScript plugin for embedding interactive code snippets in tech blogs.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Klipse&lt;/h1&gt;
&lt;p&gt;Klipse is a JavaScript plugin for embedding interactive code snippets in tech blogs. See examples at &lt;a href="https://blog.klipse.tech/" rel="nofollow"&gt;https://blog.klipse.tech/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Get paid support for Klipse on &lt;a href="https://xscode.com/viebel/klipse" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/1c4450fba4e47a17d8040579113be57e2f1ed84903d0e58c90fd430e051a10f5/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417661696c61626c652532306f6e2d7873253341636f64652d626c75653f7374796c653d3f7374796c653d706c6173746963266c6f676f3d6170707665796f72266c6f676f3d646174613a696d6167652f706e673b6261736536342c6956424f5277304b47676f414141414e5355684555674141414541414141424143414d41414143647434487341414141475852465748525462325a30643246795a5142425a4739695a53424a6257466e5a564a6c5957523563636c6c5041414141415a51544652462f2f2f2f2f2f2f2f56587a316241414141414a30556b35542f77446c747a424b414141416c556c455156523432757a58537771414d417745304d6e394c2b33476774676b6b33355177636e534a6f39532b7947774d3944436f6f4362676e3459724a3443495055635146372f58534262783254457a3473415a3271315241454342416959426c437476774e2b4b6959416c47375544476a35394d56695439684f77457141685943744173555a764c36493657386332776362642b4c495753434853546553414145436e674e3478784944534b39663442397433373757643748354e74372f587a3865416777417665734c526a595950755541414141415355564f524b35435949493d" alt="xscode"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://xscode.com/viebel/klipse" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gLLq0nml--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/viebel/klipse/raw/master/images/klipse-banner.png%3Fraw%3Dtrue" alt="xscode"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Technically, Klipse is a small piece of JavaScript code that evaluates code snippets in the browser and it is pluggable on any web page.&lt;/p&gt;
&lt;p&gt;If you like this stuff, please consider a (small donation) on &lt;a href="https://www.patreon.com/bePatron?u=18227864" rel="nofollow"&gt;Patreon&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
Plugin&lt;/h2&gt;
&lt;p&gt;The klipse plugin is a &lt;code&gt;JavaScript&lt;/code&gt; tag (see details &lt;a href="https://github.com/viebel/klipse#integration"&gt;below&lt;/a&gt;) that transforms static code snippets of an html page into live and interactive snippets:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Live&lt;/strong&gt;: The code is executed in your browser&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Interactive&lt;/strong&gt;: You can modify the code and it is evaluated as you type&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The code evaluation is done in the browser: no server is involved at all!&lt;/p&gt;
&lt;h1&gt;
Live demo&lt;/h1&gt;
&lt;p&gt;With the klipse plugin, the code is evaluated as you type...&lt;/p&gt;
&lt;p&gt;Here is a &lt;a href="https://book.klipse.tech/" rel="nofollow"&gt;live demo&lt;/a&gt; of the embedding of klipse in a web…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/viebel/klipse"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#6-simple-git"&gt;
  &lt;/a&gt;
  6. Simple Git
&lt;/h3&gt;

&lt;p&gt;A light weight interface for running git commands in any node.js application.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/steveukx"&gt;
        steveukx
      &lt;/a&gt; / &lt;a href="https://github.com/steveukx/git-js"&gt;
        git-js
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      A light weight interface for running git commands in any node.js application.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
Simple Git&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/simple-git" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/8a5bcef2b82123a97f5b0954714767ecd17b6ae87e6bbd6ff68d8664143ce7c6/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f73696d706c652d6769742e737667" alt="NPM version"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A lightweight interface for running &lt;code&gt;git&lt;/code&gt; commands in any &lt;a href="https://nodejs.org" rel="nofollow"&gt;node.js&lt;/a&gt; application.&lt;/p&gt;
&lt;h1&gt;
Installation&lt;/h1&gt;
&lt;p&gt;Use your favourite package manager:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://npmjs.org" rel="nofollow"&gt;npm&lt;/a&gt;: &lt;code&gt;npm install simple-git&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://yarnpkg.com/" rel="nofollow"&gt;yarn&lt;/a&gt;: &lt;code&gt;yarn add simple-git&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
System Dependencies&lt;/h1&gt;
&lt;p&gt;Requires &lt;a href="https://git-scm.com/downloads" rel="nofollow"&gt;git&lt;/a&gt; to be installed and that it can be called using the command &lt;code&gt;git&lt;/code&gt;.&lt;/p&gt;
&lt;h1&gt;
Usage&lt;/h1&gt;
&lt;p&gt;Include into your JavaScript app using:&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// require the library, main export is a function&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;simpleGit&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;require&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-s"&gt;'simple-git'&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;git&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-s1"&gt;simpleGit&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;Include in a TypeScript app using:&lt;/p&gt;
&lt;div class="highlight highlight-source-ts position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-c"&gt;// Import `SimpleGit` types and the default function exported from `simple-git`&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s1"&gt;simpleGit&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-smi"&gt;SimpleGit&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'simple-git'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;git&lt;/span&gt;: &lt;span class="pl-smi"&gt;SimpleGit&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;simpleGit&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;

&lt;span class="pl-c"&gt;// prior to v2.6.0 required importing from `simple-git/promise`&lt;/span&gt;
&lt;span class="pl-c"&gt;// this import is still available but is now deprecated&lt;/span&gt;
&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-s1"&gt;gitP&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt;&lt;span class="pl-smi"&gt;SimpleGit&lt;/span&gt;&lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'simple-git/promise'&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;
&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;git&lt;/span&gt;: &lt;span class="pl-smi"&gt;SimpleGit&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-en"&gt;gitP&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
Configuration&lt;/h2&gt;
&lt;p&gt;…&lt;/p&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/steveukx/git-js"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#7-flatpickr"&gt;
  &lt;/a&gt;
  7. flatpickr
&lt;/h3&gt;

&lt;p&gt;lightweight, powerful javascript datetimepicker with no dependencies&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/flatpickr"&gt;
        flatpickr
      &lt;/a&gt; / &lt;a href="https://github.com/flatpickr/flatpickr"&gt;
        flatpickr
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      lightweight, powerful javascript datetimepicker with no dependencies
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h2&gt;
flatpickr - javascript datetime picker&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://circleci.com/gh/flatpickr/flatpickr/tree/master" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6aa03ca6095e54b16a051024bc1826a0ef0dc44c5d5bcc2c4202fb77f1fc0863/68747470733a2f2f636972636c6563692e636f6d2f67682f666c61747069636b722f666c61747069636b722f747265652f6d61737465722e7376673f7374796c653d736869656c64" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://coveralls.io/github/chmln/flatpickr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/6db7fea1d9b7e359069d7475a3ae7d09c85e63974b5db6985bab0515bee757b9/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f63686d6c6e2f666c61747069636b722f62616467652e7376673f6272616e63683d6d6173746572" alt="Coverage"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/flatpickr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/483293432feea6ef113b33f7e37c7dc7d8998a753c64cf16cad65d2f085584b1/68747470733a2f2f62616467652e667572792e696f2f6a732f666c61747069636b722e737667" alt="npm version"&gt;&lt;/a&gt;
&lt;a href="https://cdnjs.com/libraries/flatpickr" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f20685348a3824773b885c9e099cdf3d7d15401dbe6bb89580a762f8f4c92b0b/68747470733a2f2f696d672e736869656c64732e696f2f63646e6a732f762f666c61747069636b722e737667" alt="CDNJS"&gt;&lt;/a&gt;
&lt;a href="https://raw.githubusercontent.com/flatpickr/flatpickr/master/LICENSE.md" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c9323d494d852db83ccb95324646a70c1102b73ccfcef4a3bc025fbf485bfad8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d706c6173746963" alt="License"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549371/3cbb65da-028d-11e6-976d-a6f63f32061f.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ca7US1sf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549371/3cbb65da-028d-11e6-976d-a6f63f32061f.PNG" alt="blue"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549373/3cbe975a-028d-11e6-9192-43975f0146da.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SiZ8mbpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549373/3cbe975a-028d-11e6-9192-43975f0146da.PNG" alt="green"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549440/de9bf55e-028d-11e6-9271-46782a99efea.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--t3zUe1d---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549440/de9bf55e-028d-11e6-9271-46782a99efea.PNG" alt="confetti"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549374/3cc01102-028d-11e6-9ff4-0cf208a310c4.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y7x6UPi---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549374/3cc01102-028d-11e6-9ff4-0cf208a310c4.PNG" alt="red"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549370/3cadb750-028d-11e6-818d-c6a1bc6349fc.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rI2wpaiC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549370/3cadb750-028d-11e6-818d-c6a1bc6349fc.PNG" alt="default"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://cloud.githubusercontent.com/assets/11352152/14549372/3cbc8514-028d-11e6-8daf-ec1ba01c9d7e.PNG"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4YQhzXF8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cloud.githubusercontent.com/assets/11352152/14549372/3cbc8514-028d-11e6-8daf-ec1ba01c9d7e.PNG" alt="dark"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Motivation&lt;/h2&gt;
&lt;p&gt;Almost every large SPA or project involves date and time input. Browser's native implementations of those are inconsistent and limited in functionality. Most other libraries require you to pull in heavy dependencies like jQuery, Bootstrap, and moment.js. I wanted something that was good-looking out of the box, dependency-free, powerful, and extensible.&lt;/p&gt;
&lt;p&gt;Feature overview:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dependency-free (no bloated bundles)&lt;/li&gt;
&lt;li&gt;Simple, polished UX&lt;/li&gt;
&lt;li&gt;Date + time input&lt;/li&gt;
&lt;li&gt;Range selections&lt;/li&gt;
&lt;li&gt;Ability to select multiple dates&lt;/li&gt;
&lt;li&gt;Can be used as just a time picker&lt;/li&gt;
&lt;li&gt;Display dates in a human-friendly format&lt;/li&gt;
&lt;li&gt;Easily disable specific dates, date ranges, or any date using arbitrary logic&lt;/li&gt;
&lt;li&gt;Week numbers&lt;/li&gt;
&lt;li&gt;51 locales&lt;/li&gt;
&lt;li&gt;8 colorful themes (incl. dark and material)&lt;/li&gt;
&lt;li&gt;Numerous plugins&lt;/li&gt;
&lt;li&gt;Libraries available for React, Angular, Vue, Ember, and more&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://user-images.githubusercontent.com/11352152/36033089-f37dc1d0-0d7d-11e8-8ec4-c7a56d1ff92e.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--anC_KThZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/11352152/36033089-f37dc1d0-0d7d-11e8-8ec4-c7a56d1ff92e.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;flatpickr provides more functionality at a fraction of the size of other libraries.&lt;/p&gt;
&lt;h2&gt;
Compatibility&lt;/h2&gt;
&lt;p&gt;IE9 and up, Edge, iOS Safari 6+, Chrome 8+, Firefox 6+&lt;/p&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/flatpickr/flatpickr"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#8-ringclientapi"&gt;
  &lt;/a&gt;
  8. ring-client-api
&lt;/h3&gt;

&lt;p&gt;Unofficial API for Ring Doorbells, Cameras, Alarm System, and Smart Lighting&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/dgreif"&gt;
        dgreif
      &lt;/a&gt; / &lt;a href="https://github.com/dgreif/ring"&gt;
        ring
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Unofficial API for Ring Doorbells, Cameras, Alarm System, and Smart Lighting
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h1&gt;
ring-client-api&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/ring-client-api" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/e7a1b4f367b364f6a29cae6fa6385549501a1e20e0d6bcf9124b1bfcd0b96018/68747470733a2f2f62616467656e2e6e65742f6e706d2f762f72696e672d636c69656e742d617069" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://www.npmjs.com/package/ring-client-api" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/15055ea5a02d5750e716517505446b767358eba895945523d99aa280c0651bef/68747470733a2f2f62616467656e2e6e65742f6e706d2f64742f72696e672d636c69656e742d617069" alt="npm"&gt;&lt;/a&gt;
&lt;a href="https://www.paypal.me/dustingreif" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/479b93888f411b07b06a6fb07719f40bf10d750d6f7dc5c11150bc5e1595fd59/68747470733a2f2f62616467656e2e6e65742f62616467652f446f6e6174652f50617950616c2f393142453039" alt="Donate"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is an unofficial TypeScript api for &lt;a href="https://shop.ring.com/pages/doorbell-cameras" rel="nofollow"&gt;Ring Doorbells&lt;/a&gt;
&lt;a href="https://shop.ring.com/pages/security-cameras" rel="nofollow"&gt;Ring Cameras&lt;/a&gt;
the &lt;a href="https://shop.ring.com/pages/security-system" rel="nofollow"&gt;Ring Alarm System&lt;/a&gt;
&lt;a href="https://shop.ring.com/pages/smart-lighting" rel="nofollow"&gt;Ring Smart Lighting&lt;/a&gt;,
and third party devices that connect to the Ring Alarm System.
Built to support the &lt;a href="https://github.com/dgreif/ring./homebridge"&gt;homebridge-ring Plugin&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;npm i ring-client-api&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;
Setup and Config&lt;/h2&gt;
&lt;p&gt;First, generate a &lt;code&gt;refreshToken&lt;/code&gt; using the instructions in the &lt;a href="https://github.com/dgreif/ring/wiki/Refresh-Tokens"&gt;Refresh Tokens Wiki&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight highlight-source-js position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;&lt;span class="pl-k"&gt;import&lt;/span&gt; &lt;span class="pl-kos"&gt;{&lt;/span&gt; &lt;span class="pl-v"&gt;RingApi&lt;/span&gt; &lt;span class="pl-kos"&gt;}&lt;/span&gt; &lt;span class="pl-k"&gt;from&lt;/span&gt; &lt;span class="pl-s"&gt;'ring-client-api'&lt;/span&gt;

&lt;span class="pl-k"&gt;const&lt;/span&gt; &lt;span class="pl-s1"&gt;ringApi&lt;/span&gt; &lt;span class="pl-c1"&gt;=&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-v"&gt;RingApi&lt;/span&gt;&lt;span class="pl-kos"&gt;(&lt;/span&gt;&lt;span class="pl-kos"&gt;{&lt;/span&gt;
  &lt;span class="pl-c1"&gt;refreshToken&lt;/span&gt;: &lt;span class="pl-s"&gt;'token generated with ring-auth-cli.  See https://github.com/dgreif/ring/wiki/Refresh-Tokens'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;

  &lt;span class="pl-c"&gt;// The following are all optional. See below for details&lt;/span&gt;
  &lt;span class="pl-c1"&gt;cameraStatusPollingSeconds&lt;/span&gt;: &lt;span class="pl-c1"&gt;20&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;cameraDingsPollingSeconds&lt;/span&gt;: &lt;span class="pl-c1"&gt;2&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt;
  &lt;span class="pl-c1"&gt;locationIds&lt;/span&gt;: &lt;span class="pl-kos"&gt;[&lt;/span&gt;&lt;span class="pl-s"&gt;'488e4800-fcde-4493-969b-d1a06f683102'&lt;/span&gt;&lt;span class="pl-kos"&gt;,&lt;/span&gt; &lt;span class="pl-s"&gt;'4bbed7a7-06df-4f18-b3af-291c89854d60'&lt;/span&gt;&lt;span class="pl-kos"&gt;]&lt;/span&gt;
&lt;span class="pl-kos"&gt;}&lt;/span&gt;&lt;span class="pl-kos"&gt;)&lt;/span&gt;&lt;span class="pl-kos"&gt;;&lt;/span&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
Optional Parameters&lt;/h3&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Default&lt;/th&gt;
&lt;th&gt;Explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cameraStatusPollingSeconds&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;undefined&lt;/code&gt; (No Polling)&lt;/td&gt;
&lt;td&gt;How frequently to poll for updates to your cameras and chimes (in seconds).  Information like light/siren/volume/snooze status do not update in real time and need to be requested periodically.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cameraDingsPollingSeconds&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;
&lt;code&gt;undefined&lt;/code&gt; (No&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/dgreif/ring"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#9-the-geek-cookbook"&gt;
  &lt;/a&gt;
  9. The Geek Cookbook
&lt;/h3&gt;

&lt;p&gt;The "Geek's Cookbook" is a collection of guides for establishing your own highly-available "private cloud" and using it to run self-hosted services such as GitLab, Plex, NextCloud, etc.&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/geek-cookbook"&gt;
        geek-cookbook
      &lt;/a&gt; / &lt;a href="https://github.com/geek-cookbook/geek-cookbook"&gt;
        geek-cookbook
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      The "Geek's Cookbook" is a collection of guides for establishing your own highly-available "private cloud" and using it to run self-hosted services such as GitLab, Plex, NextCloud, etc.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://geek-cookbook.funkypenguin.co.nz" rel="nofollow"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6R9H8JGh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/geek-cookbook/autopenguin/master/images/readme_header.png" alt="geek-cookbook"&gt;&lt;/a&gt;
&lt;a href="http://chat.funkypenguin.co.nz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/07f1c618dde27f059af8bd5411f644c2dac846d8b35ed9022e55426ef95e09fc/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3339363035353530363037323130393036373f636f6c6f723d626c61636b266c6162656c3d486f742532305377656174792532304765656b73266c6f676f3d646973636f7264266c6f676f436f6c6f723d7768697465267374796c653d666f722d7468652d6261646765" alt="Discord"&gt;&lt;/a&gt;
&lt;a href="https://discourse.geek-kitchen.funkypenguin.co.nz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/f418a9d3179e907f793ac0f8e3794ec6eeba3ad1941f0acee3e3c0584932e13e/68747470733a2f2f696d672e736869656c64732e696f2f646973636f757273652f746f706963733f636f6c6f723d626c61636b266c6162656c3d466f72756d73266c6f676f3d646973636f75727365266c6f676f436f6c6f723d7768697465267365727665723d6874747073253341253246253246646973636f757273652e6765656b2d6b69746368656e2e66756e6b7970656e6775696e2e636f2e6e7a267374796c653d666f722d7468652d6261646765" alt="Forums"&gt;&lt;/a&gt;
&lt;a href="https://geek-cookbook.funkypenguin.co.nz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a60238ae641587fe158ef21f26195fc27a08781474aa1d4eb1778488b76a2f2b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f526563697065732d34342d626c61636b3f7374796c653d666f722d7468652d626164676526636f6c6f723d626c61636b" alt="Cookbook"&gt;&lt;/a&gt;
&lt;a href="https://www.twitch.tv/funkypenguinz" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/b262cdcccd28e78e04aff558dee88d698576ee045512752a5766dee05c511964/68747470733a2f2f696d672e736869656c64732e696f2f7477697463682f7374617475732f66756e6b7970656e6775696e6e7a3f7374796c653d666f722d7468652d6261646765266c6162656c3d4c6976654765656b696e67266c6f676f436f6c6f723d7768697465266c6f676f3d747769746368" alt="Twitch Status"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;👋 Welcome, traveller!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;a href="https://geek-cookbook.funkypenguin.co.nz" rel="nofollow"&gt;Geek Cookbook&lt;/a&gt; is a collection of geek-friendly "recipes" to run popular applications on &lt;a href="https://geek-cookbook.funkypenguin.co.nz/ha-docker-swarm/design" rel="nofollow"&gt;Docker Swarm&lt;/a&gt; or &lt;a href="https://geek-cookbook.funkypenguin.co.nz/kubernetes/" rel="nofollow"&gt;Kubernetes&lt;/a&gt;, in a progressive, easy-to-follow format.  &lt;em&gt;&lt;strong&gt;Come and &lt;a href="http://chat.funkypenguin.co.nz" rel="nofollow"&gt;join us&lt;/a&gt;, fellow geeks!&lt;/strong&gt;&lt;/em&gt; &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cKhqSoCc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.githubassets.com/images/icons/emoji/neckbeard.png" class="article-body-image-wrapper"&gt;&lt;img class="emoji" title=":neckbeard:" alt=":neckbeard:" src="https://res.cloudinary.com/practicaldev/image/fetch/s--cKhqSoCc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.githubassets.com/images/icons/emoji/neckbeard.png" height="20" width="20"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/geek-cookbook/geek-cookbook#what-is-this"&gt;What is this?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#who-is-this-for"&gt;Who is this for?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#why-should-i-read-this"&gt;Why should I read this?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#what-have-you-done-for-me-lately-changelog"&gt;What have you done for me lately? (CHANGELOG)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/geek-cookbook/geek-cookbook#what-do-you-want-from-me"&gt;What do you want from me?&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#get-in-touch-"&gt;Get in touch 👋&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#buy-my-book-"&gt;Buy my book 📖&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#sponsor--patronizepatreon-me-%EF%B8%8F"&gt;Sponsor me ❤️&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/geek-cookbook/geek-cookbook#work-with-me-"&gt;Work with me 🤝&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;
What is this?&lt;/h1&gt;
&lt;p&gt;Funky Penguin's "&lt;strong&gt;&lt;a href="https://geek-cookbook.funkypenguin.co.nz" rel="nofollow"&gt;Geek Cookbook&lt;/a&gt;&lt;/strong&gt;" is a collection of how-to guides for establishing your own container-based self-hosting platform, using either &lt;a href="https://github.com/geek-cookbook/geek-cookbook/ha-docker-swarm/design/"&gt;Docker Swarm&lt;/a&gt; or &lt;a href="https://github.com/geek-cookbook/geek-cookbook/kubernetes/"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Running such a platform enables you to run self-hosted tools such as &lt;a href="https://github.com/geek-cookbook/geek-cookbook/recipes/autopirate/"&gt;AutoPirate&lt;/a&gt; (&lt;em&gt;Radarr, Sonarr, NZBGet and friends&lt;/em&gt;), &lt;a href="https://www.plex.tv/" rel="nofollow"&gt;Plex&lt;/a&gt;, &lt;a href="https://nextcloud.com/" rel="nofollow"&gt;NextCloud&lt;/a&gt;, and includes elements such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/geek-cookbook/geek-cookbook/ha-docker-swarm/traefik/"&gt;Automatic SSL-secured access&lt;/a&gt; to all services (&lt;em&gt;with LetsEncrypt&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/geek-cookbook/geek-cookbook/ha-docker-swarm/traefik-forward-auth/"&gt;SSO / authentication layer&lt;/a&gt; to protect unsecured…&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/geek-cookbook/geek-cookbook"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#10-floating-ui"&gt;
  &lt;/a&gt;
  10. Floating UI
&lt;/h3&gt;

&lt;p&gt;JavaScript positioning library for tooltips, popovers, dropdowns, and more&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/floating-ui"&gt;
        floating-ui
      &lt;/a&gt; / &lt;a href="https://github.com/floating-ui/floating-ui"&gt;
        floating-ui
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      🍿 JavaScript positioning library for tooltips, popovers, dropdowns, and more
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;
  &lt;a rel="noopener noreferrer" href="https://github.com/atomiks/floating-ui/blob/main/website/assets/logo.png"&gt;&lt;img height="300" src="https://res.cloudinary.com/practicaldev/image/fetch/s--rjE8RYWP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/atomiks/floating-ui/raw/main/website/assets/logo.png" alt="Floating UI"&gt;&lt;/a&gt;
&lt;/p&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Popper is now Floating UI! For Popper v2, visit &lt;a href="https://github.com/floating-ui/popper-core/tree/v2.x"&gt;its dedicated branch.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://floating-ui.com" rel="nofollow"&gt;Website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Floating UI is a low-level library for positioning "floating" elements like
tooltips, popovers, dropdowns, menus and more. Since these types of elements
float on top of the UI without disrupting the flow of content, challenges arise
when positioning them.&lt;/p&gt;
&lt;p&gt;Floating UI exposes primitives which enable a floating element to be positioned
next to a given reference element while appearing in view for the user as best
as possible. Features include overflow prevention (or collision awareness)
placement flipping, and more.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Tiny&lt;/strong&gt;: 600-byte core with highly modular architecture for tree-shaking&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Low-level&lt;/strong&gt;: Hyper-granular control over positioning behavior&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pure&lt;/strong&gt;: Predictable, side-effect free behavior&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Extensible&lt;/strong&gt;: Powerful middleware system&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Platform-agnostic&lt;/strong&gt;: Runs on any JavaScript environment which provides
measurement APIs, including the web and React Native&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
Installation&lt;/h2&gt;
&lt;p&gt;To use it on the web:&lt;/p&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;npm install @floating-ui/dom&lt;/pre&gt;

&lt;/div&gt;
&lt;div class="highlight highlight-source-shell position-relative overflow-auto js-code-highlight"&gt;
&lt;pre&gt;yarn add @floating-ui/dom&lt;/pre&gt;

&lt;/div&gt;…&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/floating-ui/floating-ui"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;





&lt;h3&gt;
  &lt;a href="#stargazing"&gt;
  &lt;/a&gt;
  Stargazing 📈
&lt;/h3&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/Eugeny/tabby"&gt;Tabby&lt;/a&gt; +1,739 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +1,558 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +1,504 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/mtdvio/every-programmer-should-know"&gt;Every programmer should know&lt;/a&gt; +1,307 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/appsmithorg/appsmith"&gt;Appsmith&lt;/a&gt; +1,229 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-7-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=weeklyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 7 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/argyleink/open-props"&gt;Open Props&lt;/a&gt; +108%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NitzanHen/agrippa"&gt;Agrippa&lt;/a&gt; +73%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Bogdanp/awesome-advent-of-code"&gt;Awesome Advent of Code&lt;/a&gt; +31%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/BuilderIO/mitosis"&gt;JSX Lite&lt;/a&gt; +23%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sergiodxa/remix-auth"&gt;Remix Auth&lt;/a&gt; +19%&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-risers-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChange&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top risers over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/EbookFoundation/free-programming-books"&gt;Free Programming Books&lt;/a&gt; +4,424 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/sindresorhus/awesome"&gt;Awesome&lt;/a&gt; +4,391 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/kamranahmedse/developer-roadmap"&gt;Developer Roadmap&lt;/a&gt; +3,788 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/public-apis/public-apis"&gt;Public APIs&lt;/a&gt; +3,637 stars&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University&lt;/a&gt; +3,554 stars&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;
  &lt;a href="#top-growth-over-last-30-days"&gt;
  &lt;/a&gt;
  &lt;a href="https://stargazing.dev/?owner=&amp;amp;order=monthlyStarChangePercent&amp;amp;minimumStars=0&amp;amp;search=&amp;amp;reverseOrder=false&amp;amp;moreFilters=false"&gt;Top growth(%) over last 30 days&lt;/a&gt;🔗
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://github.com/medusajs/medusa"&gt;Medusa&lt;/a&gt; +205%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/teafuljs/teaful"&gt;Fragstore&lt;/a&gt; +108%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/Shopify/hydrogen"&gt;Hydrogen&lt;/a&gt; +102%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/eBay/nice-modal-react"&gt;Nice Modal React&lt;/a&gt; +82%&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/NitzanHen/agrippa"&gt;Agrippa&lt;/a&gt; +80%&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For all for the latest rankings please checkout &lt;a href="https://stargazing.dev"&gt;Stargazing.dev&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Trending Projects is available as a weekly newsletter please sign up at &lt;a href="https://stargazing.dev/"&gt;Stargazing.dev&lt;/a&gt; to ensure you never miss an issue.&lt;/p&gt;

&lt;p&gt;If you enjoyed this article you can &lt;a href="https://twitter.com/stargazing_dev"&gt;follow me&lt;/a&gt; on Twitter where I regularly post about HTML, CSS and JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>productivity</category>
      <category>typescript</category>
    </item>
    <item>
      <title>A load balanced restaurant </title>
      <author>Abhinav Pandey</author>
      <pubDate>Fri, 10 Dec 2021 14:43:40 +0000</pubDate>
      <link>https://dev.to/abh1navv/a-load-balanced-restaurant-5560</link>
      <guid>https://dev.to/abh1navv/a-load-balanced-restaurant-5560</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-a-load-balancer"&gt;
  &lt;/a&gt;
  What is a load balancer?
&lt;/h2&gt;

&lt;p&gt;Load balancers are typically used to distribute traffic across multiple servers to improve performance.&lt;/p&gt;

&lt;p&gt;The servers in the pool are called nodes.&lt;br&gt;
A load balancer is a server that is used to distribute traffic to the nodes in the pool.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; - This article is written with the perspective of server-side load balancing. The details may be slightly different for client-side load balancing.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-does-a-typical-load-balancer-work"&gt;
  &lt;/a&gt;
  How does a typical load balancer work?
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;The load balancer receives a request from the client.&lt;/li&gt;
&lt;li&gt;The load balancer forwards the request to a server capable of handling the request.&lt;/li&gt;
&lt;li&gt;The server processes the request and sends the response back to the load balancer.&lt;/li&gt;
&lt;li&gt;The load balancer forwards the response back to the client.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: "Capable of handling the request" - There could be multiple servers capable of handling the request. There could also be unhealthy servers which are down. The load balancer needs to know which servers are not working fine.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#algorithms-used-by-load-balancers"&gt;
  &lt;/a&gt;
  Algorithms used by load balancers
&lt;/h2&gt;

&lt;p&gt;There are multiple algorithms that can be used to distribute traffic across multiple servers. We will use the analogy of a restaurant to analyze this.&lt;/p&gt;

&lt;p&gt;Imagine a restaurant:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The manager is the load balancer.&lt;/li&gt;
&lt;li&gt;Each customer is a request.&lt;/li&gt;
&lt;li&gt;Each waiter is a server. (Pun intended)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#static-algorithms"&gt;
  &lt;/a&gt;
  Static algorithms
&lt;/h2&gt;

&lt;p&gt;These algorithms do not take into account the real time details of the servers. They have a set of predefined rules and act accordingly.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#round-robin"&gt;
  &lt;/a&gt;
  Round Robin
&lt;/h3&gt;

&lt;p&gt;In round-robin algorithm, the servers are maintained in a list. The load balancer iterates through the list and forwards the request to the next server in the list.&lt;/p&gt;

&lt;p&gt;This means that each server is equally likely to receive a request and the load balancer will distribute the traffic equally across all servers. This is the simplest algorithm and is used by most load balancers as the default algorithm.&lt;/p&gt;

&lt;p&gt;If the manager were to use round-robin, they only need to maintain a list of waiters and as customers come, the next waiter is chosen from the list. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Concerns&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;It assumes that all waiters are equally efficient which is not always true. &lt;/li&gt;
&lt;li&gt;It assumes that each customer generates equal amount of work which is definitely not true.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Similarly, servers can have different performance and some requests may be heavier than others. This means that it is possible to have a skewed distribution of load. It also means that an unhealthy server will keep receiving requests and will fail slowly.&lt;/p&gt;

&lt;p&gt;Let's see another variation of round-robin algorithm.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#weighted-round-robin"&gt;
  &lt;/a&gt;
  Weighted Round Robin
&lt;/h3&gt;

&lt;p&gt;The only difference here is that the servers are weighted.&lt;/p&gt;

&lt;p&gt;The manager is told that some waiters are more efficient than others. Now the list also contains the efficiency of each waiter.&lt;br&gt;
For e.g. there are three waiters and their efficiency is in the ratio of 3:4:5 so the manager distributes the traffic to the waiters in the ratio of 3:4:5.&lt;/p&gt;

&lt;p&gt;This solves one concern of the round-robin algorithm - the efficiency of the waiters.&lt;/p&gt;

&lt;p&gt;When is weighted round-robin used?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Usually when the hardware is different for each server. This isn't very common.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#iphashing"&gt;
  &lt;/a&gt;
  IP-Hashing
&lt;/h3&gt;

&lt;p&gt;The rules of IP-Hashing are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The load balancer receives the IP address of the client.&lt;/li&gt;
&lt;li&gt;The load balancer uses the IP address to hash the IP address and then modulo the hash value with the number of servers in the pool.&lt;/li&gt;
&lt;li&gt;The load balancer forwards the request to the server with the modulo value.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This can be seen as a partitioning algorithm. &lt;br&gt;
This is particularly useful when you want one client to be sent to the same server always - because the hash will always choose the same server. &lt;/p&gt;

&lt;p&gt;If servers maintain some state about the client they have seen before, this can be useful. For e.g., the server can maintain a cache based on request parameters and serve them faster next time.&lt;/p&gt;

&lt;p&gt;However, this again has a skewing problem and could be worse than round-robin because some clients may send more requests that others.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The hash function doesn't need to be only about IP address. It can use more parameters if needed.&lt;/p&gt;

&lt;p&gt;Let's see how this translates to the restaurant analogy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The manager decides that all customers with names starting with "A-I" should be sent to the first waiter. "J-R" should be sent to the second waiter and "S-Z" should be sent to the third waiter.&lt;/li&gt;
&lt;li&gt;This means that if I visit the restaurant, I will always be sent to the first waiter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This could be beneficial for me because it is now possible for the waiter to maintain some information about me like what I like, what I dislike, etc.&lt;br&gt;
Based on this information, the waiter may serve me better the next time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What about skewing?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What if there are too many customers with names starting with "A-I" and too few with names starting with "J-R" and "S-Z"?&lt;/li&gt;
&lt;li&gt;The first waiter may get exhausted and may not be able to serve with full efficiency.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;When is IP-hashing good?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Low application load so that even after skewing, a single server works fine.&lt;/li&gt;
&lt;li&gt;When maintaining state about the client is beneficial.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#dynamic-algorithms"&gt;
  &lt;/a&gt;
  Dynamic algorithms
&lt;/h2&gt;

&lt;p&gt;In dynamic algorithms, the load balancer is aware of the load on the servers when it decides which server to send the request to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#least-connection"&gt;
  &lt;/a&gt;
  Least Connection
&lt;/h3&gt;

&lt;p&gt;In this algorithm, the load balancer selects the server with the least number of connections.&lt;br&gt;
The load balancer needs to maintain a map of the servers and their number of connections.&lt;/p&gt;

&lt;p&gt;In our restaurant analogy, the manager needs to maintain a map of the waiters and the number of customers they are currently serving.&lt;br&gt;
This is harder for the manager now but less painful for the waiters. &lt;/p&gt;

&lt;p&gt;This helps in the below way:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The waiters could have different efficiency and it won't skew the load on them.&lt;/li&gt;
&lt;li&gt;The customers may require more time and it won't skew the load on the waiters.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#improvements-over-least-connection"&gt;
  &lt;/a&gt;
  Improvements over least connection
&lt;/h3&gt;

&lt;p&gt;Further, if we want to make this even better in terms of waiter efficiency, we can use weights. This will be equivalent to having servers of different hardware capacities. This is called &lt;strong&gt;weighted least connection&lt;/strong&gt;.&lt;br&gt;
Now the busy-ness of the server will be measured using the formula - (number of connections of the server) / (weight of the server).&lt;/p&gt;

&lt;p&gt;*&lt;em&gt;Can there still be a problem? *&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Only in extreme scenarios. If a server is faulty or failing slowly, it will hold connections longer than it should.&lt;/li&gt;
&lt;li&gt;In such a case, the load balancer will not be able to make a decision to not send more requests to the faulty server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If the load balancer somehow had a way to measure real time efficiency of the server, this could be used to improve the algorithm.&lt;/p&gt;

&lt;p&gt;There could be many metrics. One of them is the number of requests served by the server in a given time period - also known as the &lt;strong&gt;average response time&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This is often used in conjunction with weighted least connection where the server with the lowest average response time is selected.&lt;/p&gt;

&lt;p&gt;In our restaurant analogy, the manager simply keeps track of how many customers each waiter has served in a given time period. &lt;/p&gt;

&lt;p&gt;I'm not sure if managers would do that on paper but a good manager always knows which of the waiters needs a break. And as for load balancers, it is possible for load balancers to give servers a break if they perform below a certain threshold.&lt;/p&gt;




&lt;p&gt;This is probably getting a little out of hand now. If we go beyond this, we are going to need a manager with a Mathematics degree. So that's it for now.&lt;/p&gt;

&lt;p&gt;Stay tuned for more on system design. I also write about Java Design patterns, a beginner's series on Golang and occasional articles on other topics. Follow me for more.&lt;br&gt;
If you want to connect with me, you can find me on Twitter &lt;a href="https://twitter.com/abh1navv"&gt;@abh1navv&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>devops</category>
      <category>programming</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>0.4 Final Week</title>
      <author>Ahmad</author>
      <pubDate>Fri, 10 Dec 2021 14:43:05 +0000</pubDate>
      <link>https://dev.to/ar/release-04-236b</link>
      <guid>https://dev.to/ar/release-04-236b</guid>
      <description>&lt;p&gt;My goal for the third week of 0.4 was to put the finishing touches on the function I've been writing, then write some tests.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#writing-tests"&gt;
  &lt;/a&gt;
  Writing tests
&lt;/h2&gt;

&lt;p&gt;The testing suite of the project takes advantage of a photo viewer called &lt;code&gt;feh&lt;/code&gt;, which is only available on Linux systems. I created a Ubuntu VM and attempted to run my tests. I ran into a host of issues, detailed &lt;a href="https://github.com/takelley1/OCVBot/issues/14"&gt;here&lt;/a&gt;. Apparently Ubuntu couldn't display the images fast enough for the tester. Taking the project owner's advice, I installed Lubuntu which &lt;em&gt;finally&lt;/em&gt; ended up working.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#pull-request"&gt;
  &lt;/a&gt;
  Pull request
&lt;/h2&gt;

&lt;p&gt;After all of that troubleshooting with the testing suite, I was finally able to create my &lt;a href="https://github.com/takelley1/OCVBot/pull/15"&gt;PR&lt;/a&gt;. The project owner requested some minor changes, which I quickly addressed and pushed the fixes for. At the time of writing this though (December 10, 2021), he hasn't gotten back to approve those changes.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#run-down"&gt;
  &lt;/a&gt;
  Run down
&lt;/h3&gt;

&lt;p&gt;The passed world's position is calculated using the &lt;code&gt;row&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt; values from &lt;code&gt;worlds.json&lt;/code&gt;. Using the position, the scroll bar is clicked to attempt to get as close to the world as possible. If the world is not visible, the list will repeatedly scroll down a "tick" and the world will be searched for again. Once the world is found, it is clicked and we wait until the "Current world" text at the top of the world switcher changes. If it doesn't change before reaching the timeout time, false is returned.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#example"&gt;
  &lt;/a&gt;
  Example
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;behavior&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;switch_worlds_logged_in&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"382"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vBU0SOvJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/86167097/144728379-b523f78f-1068-4418-96d5-1e7a217a0597.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vBU0SOvJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://user-images.githubusercontent.com/86167097/144728379-b523f78f-1068-4418-96d5-1e7a217a0597.gif" alt="Example" width="248" height="336"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#outcomes"&gt;
  &lt;/a&gt;
  Outcomes
&lt;/h2&gt;

&lt;p&gt;Working on this issue was a rollercoaster for me. I had a &lt;a href="https://github.com/takelley1/OCVBot/issues/12#issuecomment-984198060"&gt;bunch of issues&lt;/a&gt; implementing my original idea. The scroll bar just did not want to cooperate, which I could not foresee. I ended up adding CV to click on the world and the &lt;code&gt;scroll&lt;/code&gt; function from &lt;code&gt;pyautogui&lt;/code&gt; to find it, if it was off the screen from the scroll bar's inconsistent behaviour.&lt;/p&gt;

&lt;p&gt;The main takeaway I have from release 0.4, is that there will always be unforeseen issues. I never would have thought the scroll bar would be so inconsistent. Luckily, I was able to solve the problem with the help of the project owner and some friends.&lt;/p&gt;

</description>
    </item>
    <item>
      <title>DevTips Daily Update 10/12/21</title>
      <author>James Bubb</author>
      <pubDate>Fri, 10 Dec 2021 14:42:50 +0000</pubDate>
      <link>https://dev.to/codebubb/devtips-daily-update-101221-3am1</link>
      <guid>https://dev.to/codebubb/devtips-daily-update-101221-3am1</guid>
      <description>&lt;p&gt;So in this week's videos on DevTips Daily, we've still being carrying on with our end-to-end project and there's been lots of configuration and setup of our server to get it ready to deploy our code. For example, we setup a web server, pointed our domain to it and enable HTTPS with an SSL certificate!&lt;/p&gt;

&lt;p&gt;Here's a link to each individual tutorial:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/3K-pCTW6oR4"&gt;Installing nginx&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3K-pCTW6oR4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/A0pb8Aa9L7M"&gt;nginx Configuration&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/A0pb8Aa9L7M"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/HVfo_bacbo8"&gt;Pointing the domain to the server&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/HVfo_bacbo8"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/8i3OjPqPHmc"&gt;SSL with LetsEncrypt&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/8i3OjPqPHmc"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/jE8pv_ULHKA"&gt;Directories for Node App&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/jE8pv_ULHKA"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/DJHdeqxTL-w"&gt;Setup Node.js on the server&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/DJHdeqxTL-w"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://youtu.be/JUfhhrGZ8eQ"&gt;Setup Docker on Ubuntu Server&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/JUfhhrGZ8eQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Next week we're going to be carrying on with the project again, we've got a touch more configuration to do and then we'll be revisiting our GitHub action to finally push our code to our server!&lt;/p&gt;

&lt;p&gt;Thanks for watching 👍&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>devtipsdaily</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Underrated Next.js feature 🤯</title>
      <author>Tuomo Kankaanpää</author>
      <pubDate>Fri, 10 Dec 2021 14:42:16 +0000</pubDate>
      <link>https://dev.to/tumee/underrated-nextjs-feature-56ii</link>
      <guid>https://dev.to/tumee/underrated-nextjs-feature-56ii</guid>
      <description>&lt;p&gt;&lt;em&gt;This article was originally published on &lt;a href="https://www.tuomokankaanpaa.com/newsletter"&gt;my newsletter&lt;/a&gt;. If you want to stay up to date and read these as soon as they are published, &lt;a href="https://www.tuomokankaanpaa.com/newsletter"&gt;sign up&lt;/a&gt; for the newsletter!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ahoy,&lt;/p&gt;

&lt;p&gt;Winter has come to Finland. It has been snowing a lot and the temperature has been around -15C for the past week or two. Although I love that there is snow (helps with the darkness) and cold weather in December, I have been mostly staying inside and doing a lot of coding lately.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a_B1yCT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gu2qjewl47lu5y52s0l.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a_B1yCT4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gu2qjewl47lu5y52s0l.jpg" alt="Winter is here!" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On top of coding, I have been planning to do one or two Next.js videos before the end of the year. As always, if you have any wishes or suggestions on what kind of videos you would like me to do, let me know (reply this email or &lt;a href="https://www.twitter.com/tuomokankaanpaa"&gt;hit me up on Twitter&lt;/a&gt;)!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#latest-youtube-videos"&gt;
  &lt;/a&gt;
  Latest Youtube videos
&lt;/h2&gt;

&lt;p&gt;As always, I have been uploading one video per week on my &lt;a href="https://www.youtube.com/tuomokankaanpaa"&gt;Youtube channel&lt;/a&gt;. Here are the latest videos from the channel since my last email.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#need-to-show-draft-content-in-production-this-is-how"&gt;
  &lt;/a&gt;
  Need to show DRAFT content in PRODUCTION? THIS IS HOW!
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/bQRhCTlXJQw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This is part 3 of the unofficial "Building a blog with Next.js" series.&lt;/p&gt;

&lt;p&gt;In this part we add possibility to view draft blog posts from the headless CMS in production environment. So there is no need for a preview or staging environment and it enables you (or who ever writes the blog posts) to preview the posts in the environment they will be shown for end users.&lt;/p&gt;

&lt;p&gt;This is possible with the Next.js Preview feature. Preview feature is one of the less talked about features in Next.js. I also think it is kind of underrated, even though it makes it possible to easily implement the draft content viewing feature, which is in my opinion crucial for every blog application.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#best-vs-code-theme-my-honest-opinion"&gt;
  &lt;/a&gt;
  Best VS Code Theme! My HONEST opinion.
&lt;/h3&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/6C26mVeDjxo"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;I have been looking for a nice new theme for my VS Code and I think I've finally found one that I really like. You might have seen me using it already in some of the previous videos since I've been testing it out for some time now.&lt;/p&gt;

&lt;p&gt;So in this video I want to share with you this theme I currently use in my VS Code. Even though I really love this theme, I reserve the right to change my opinion in the future if I come across an even more awesome theme 😂&lt;/p&gt;

&lt;p&gt;That's all for this week!&lt;/p&gt;

&lt;p&gt;Cheers,&lt;br&gt;
Tuomo&lt;/p&gt;

</description>
      <category>nextjs</category>
      <category>vscode</category>
      <category>watercooler</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How accessible are links and buttons?</title>
      <author>Frank van Eldijk-Smeding</author>
      <pubDate>Fri, 10 Dec 2021 14:36:59 +0000</pubDate>
      <link>https://dev.to/beingfrankly/how-accessible-are-links-and-buttons-3560</link>
      <guid>https://dev.to/beingfrankly/how-accessible-are-links-and-buttons-3560</guid>
      <description>&lt;p&gt;Links and buttons are one of the main basic elements that you’ll find on any website. Yet, a lot of them are not as accessible as we would like. And we’re bound to make mistakes as developers, if we don't know how they're understood by assistive technologies.&lt;/p&gt;

&lt;p&gt;In this short article I'll focus on screen readers and voice recognition and how they deal with links and buttons. I'll not cover every possible problem that could happen. I'm going to reserve that for a different article which I'll publish soon.&lt;/p&gt;

&lt;p&gt;Before we continue, I want to avoid any confusion upfront. When we’re talking about links or buttons, I assume that they're using the proper semantic element, a &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Using a different HTML element — like a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; which looks like a link or a button — might not be set up right. And this could cause other problems for assistive technologies. If you want to know more on this, I've written an article on why we should [[The rules on using ARIA#1 Prefer semantic HTML over ARIA|prefer semantic HTML]].&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-assistive-technologies-understand-a-web-page"&gt;
  &lt;/a&gt;
  How assistive technologies understand a web page
&lt;/h2&gt;

&lt;p&gt;This is possible through the use of many accessibility API’s. The platform that the browser runs on uses one of those API’s to read the content of a web page.&lt;/p&gt;

&lt;p&gt;How this process actually works in the background would be too much for this article. If you want to learn the details I recommend you to read &lt;a href="https://www.smashingmagazine.com/2015/03/web-accessibility-with-accessibility-api/"&gt;Web Accessibility with Accessibility API&lt;/a&gt;. It’s a great article written by &lt;a href="https://twitter.com/leoniewatson"&gt;Léonie Watson&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The part that’s important for us to know is that those API's expose certain information. This happens for every object in the DOM. This information is crucial for assistive technologies to understand what each object means.&lt;/p&gt;

&lt;p&gt;There are two pieces of information I want to focus on, and those are the &lt;code&gt;role&lt;/code&gt; and the &lt;code&gt;name&lt;/code&gt;. The &lt;code&gt;role&lt;/code&gt; of the DOM object exposes its purpose. It could be a link, a button or something else like an image. The &lt;code&gt;name&lt;/code&gt; of the DOM object gives its identity. It’s also referred as the &lt;a href="https://www.w3.org/TR/accname-1.1/#dfn-accessible-name"&gt;Accessible Name&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See the Pen &lt;a href="https://codepen.io/beingfrankly/pen/KKXMxMQ"&gt;&lt;br&gt;
  Cards with "read more" links&lt;/a&gt; by Frank van Eldijk-Smeding (&lt;a href="https://codepen.io/beingfrankly"&gt;@beingfrankly&lt;/a&gt;)&lt;br&gt;
  on &lt;a href="https://codepen.io"&gt;CodePen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So, let’s use the example above to quickly recap what we’ve learned.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; element will have the &lt;code&gt;role&lt;/code&gt; of “main”. The &lt;code&gt;name&lt;/code&gt; is empty because we didn’t supply one.&lt;/li&gt;
&lt;li&gt;Each &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element will have the &lt;code&gt;role&lt;/code&gt; of “paragraph”. Again the &lt;code&gt;name&lt;/code&gt; is empty since we didn’t supply one.&lt;/li&gt;
&lt;li&gt;Every &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element will have the &lt;code&gt;role&lt;/code&gt; of “link”. The &lt;code&gt;name&lt;/code&gt; will be “Read more”. This happens because the &lt;code&gt;name&lt;/code&gt; — or Accessible Name — is determined from a list of possible options. And in this case it was the value inside the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element that’s used for the Accessible Name.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve picked this example on purpose because it’s quite common to see a list of cards. Each card having a title, some text and at the bottom a “Read more” link.&lt;/p&gt;

&lt;p&gt;So, let’s see which problems could happen for screen readers &amp;amp; voice recognition if we leave the example above untouched.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#potential-problems-for-screen-readers-amp-voice-recognition"&gt;
  &lt;/a&gt;
  Potential problems for screen readers &amp;amp; voice recognition
&lt;/h2&gt;

&lt;p&gt;When a sighted user sees a “Read more” link that’s near other elements, they’re able to group them together. The context behind the “Read more” link is then related to the text and the title. It becomes clear what to expect when they press the link. This happens because of the &lt;a href="https://lawsofux.com/law-of-proximity/"&gt;Law of Proximity&lt;/a&gt; and/or the &lt;a href="https://lawsofux.com/law-of-common-region/"&gt;Law of Common Region&lt;/a&gt;, depending on how the elements are visually styled.&lt;/p&gt;

&lt;p&gt;Yet, people who rely on screen readers are usually not able to scan the page, and group elements based on visual proximity. So, in this case the “Read more” link doesn’t have any meaning to them.&lt;/p&gt;

&lt;p&gt;For people who depend on voice recognition, might be able to group elements together. But, they’ll have a different problem. To interact with elements they say “Click” — I’m using Voice Control on MacOS — followed by the Accessible Name of the link. This will then press the element that matches the Accessible Name.&lt;/p&gt;

&lt;p&gt;So, in our first example it would be “Click, Read more”. But, this will number each “Read more” link. Because the voice recognition software doesn’t understand which link they meant.&lt;/p&gt;

&lt;p&gt;Both cases lead up to a poor user experience and could end up in frustration. How could we solve this?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-solution-well-one-of-many"&gt;
  &lt;/a&gt;
  The solution (well, one of many)
&lt;/h2&gt;

&lt;p&gt;Well, there are a couple options available to us. But, let’s focus on one solution for now to keep this article brief. I’ll write an in-depth article on a lot more problems/situations and solutions soon.&lt;/p&gt;

&lt;p&gt;If we remove the “Read more” link, we could solve both problems. But, what becomes our link then? Well, the entire card could turn into our link. Then give the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; either an &lt;code&gt;aria-label&lt;/code&gt;, matching the value of our title. Or use an &lt;code&gt;aria-labelledby&lt;/code&gt;, which then refers to our &lt;code&gt;&amp;lt;div class="title"&amp;gt;&lt;/code&gt;. Let’s check it out!&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;See the Pen &amp;lt;a href="https://codepen.io/beingfrankly/pen/PoJGGyj"&amp;gt;
Cards with "read more" links&amp;lt;/a&amp;gt; by Frank van Eldijk-Smeding (&amp;lt;a href="https://codepen.io/beingfrankly"&amp;gt;@beingfrankly&amp;lt;/a&amp;gt;)
on &amp;lt;a href="https://codepen.io"&amp;gt;CodePen&amp;lt;/a&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;p&gt;When a screen reader user tabs through the links, or use a shortcut to get a list of links. They’ll hear each link announced with the name of the title instead of “Read more”.&lt;/p&gt;

&lt;p&gt;The problem with voice recognition is also solved. Because it’s now possible to use the command “Click” followed by the name of the title.&lt;/p&gt;

&lt;p&gt;If you’ve liked this piece of content and you want to get regular updates on other things I write about then follow me on &lt;a href="https://twitter.com/frank_vaneldijk"&gt;Twitter&lt;/a&gt;. And if you have any comments or questions then don’t hesitate to DM me!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Assistive technologies understand the content of a web page through the platform’s accessibility API.&lt;/li&gt;
&lt;li&gt;Links and buttons should be clear on their own, and not depend on their surrounding context to make sense.&lt;/li&gt;
&lt;li&gt;Voice recognition software have shortcuts to interact with elements&lt;/li&gt;
&lt;li&gt;Command “Click” with the name of the label. The label name needs to match the Accessible Name&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>html</category>
      <category>a11y</category>
    </item>
  </channel>
</rss>
