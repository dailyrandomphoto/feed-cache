<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>‚úî||ü§¢ Commit or Vomit | Angular codestyle</title>
      <author>Jasper de Jager</author>
      <pubDate>Tue, 13 Apr 2021 10:28:14 +0000</pubDate>
      <link>https://dev.to/jmdejager/commit-or-vomit-angular-codestyle-2mpl</link>
      <guid>https://dev.to/jmdejager/commit-or-vomit-angular-codestyle-2mpl</guid>
      <description>&lt;p&gt;Photo by &lt;a href="https://unsplash.com/@oskaryil?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Oskar Yildiz&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/code?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;
&lt;span class="nt"&gt;&amp;lt;some-component&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"complicated div"&lt;/span&gt;
  &lt;span class="na"&gt;[title]=&lt;/span&gt;&lt;span class="s"&gt;"'test'"&lt;/span&gt;
  &lt;span class="na"&gt;subtitle=&lt;/span&gt;&lt;span class="s"&gt;"test div"&lt;/span&gt;
  &lt;span class="na"&gt;[color]=&lt;/span&gt;&lt;span class="s"&gt;"divColor"&lt;/span&gt;
&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&lt;/span&gt; &lt;span class="na"&gt;*ngFor=&lt;/span&gt;&lt;span class="s"&gt;"let item of list"&lt;/span&gt;
      &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"list-item"&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;i18n&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;list item&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
      {{item}}
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/some-component&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;What do you think of the presented codestyle:&lt;/p&gt;

&lt;p&gt;‚ù§: Commit (something I could commit)&lt;br&gt;
üè∑: Vomit (I'd never commit this)&lt;br&gt;
ü¶Ñ: I like your post please continue this series!&lt;/p&gt;

&lt;p&gt;Let's vote! üòä&lt;/p&gt;

</description>
      <category>angular</category>
      <category>webdev</category>
      <category>programming</category>
      <category>discuss</category>
    </item>
    <item>
      <title>Build Glass Website with HTML and CSS Tutorial</title>
      <author>pawanbhayde</author>
      <pubDate>Tue, 13 Apr 2021 10:10:25 +0000</pubDate>
      <link>https://dev.to/pawanbhayde/build-glass-website-with-html-and-css-tutorial-b5g</link>
      <guid>https://dev.to/pawanbhayde/build-glass-website-with-html-and-css-tutorial-b5g</guid>
      <description>&lt;p&gt;Learn Build Glass Website with HTML and CSS Tutorial. Add a Glass Effects on your website using HTML and CSS. Easy way to learn HTML for beginners. You will easily make this Glass Website by following my Youtube video tutorial. I also provide you HTML, CSS, and Js Code which helps you to understand this Tutorial.&lt;/p&gt;

&lt;p&gt;Watch Video :- &lt;a href="https://youtu.be/Uax2fYDB6ZM"&gt;https://youtu.be/Uax2fYDB6ZM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read Blog Post:- &lt;a href="https://www.websitemakers.xyz/2021/04/build-glass-website-with-html-and-css.html"&gt;https://www.websitemakers.xyz/2021/04/build-glass-website-with-html-and-css.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How To Find Broken Images Using Selenium WebDriver?</title>
      <author>himanshuseth004</author>
      <pubDate>Tue, 13 Apr 2021 10:01:11 +0000</pubDate>
      <link>https://dev.to/himanshusheth004/how-to-find-broken-images-using-selenium-webdriver-i9b</link>
      <guid>https://dev.to/himanshusheth004/how-to-find-broken-images-using-selenium-webdriver-i9b</guid>
      <description>&lt;p&gt;A web product‚Äôs user experience is one of the key elements that help in user acquisition and user retention. Though immense focus should be given to the design &amp;amp; development of new product features, a continuous watch should be kept on the overall user experience. Like 404 pages (or dead links), broken images on a website (or web app) could also irk the end-users. Manual inspection and removal of broken images is not a feasible and scalable approach. Instead of using third-party tools to inspect broken images, you should leverage &lt;a href="https://www.lambdatest.com/selenium-automation?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;Selenium automation testing&lt;/a&gt; and see how to find broken images using Selenium WebDriver on your website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VSOKaWeE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image22.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VSOKaWeE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image22.gif" alt="Not Found"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this part of the &lt;a href="https://www.lambdatest.com/selenium?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;Selenium Tutorial&lt;/a&gt;, we look at how to find broken images on websites using Selenium WebDriver. From an end-user‚Äôs perspective, even a single broken image on a page could be an experience dampener ‚Äì a prime reason to find broken images on websites.&lt;/p&gt;

&lt;p&gt;By the end of this blog, you would be able to find broken images using &lt;a href="https://www.lambdatest.com/blog/selenium-webdriver-with-python/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;Selenium WebDriver with Python&lt;/a&gt;, Java, C#, and PHP.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-broken-images-in-web-testing"&gt;
  &lt;/a&gt;
  What are Broken Images in Web Testing?
&lt;/h2&gt;

&lt;p&gt;Broken image is a link/image that does not show up as a picture, clicking upon which takes the end-user to a defunct picture. The user encounters a 404 Error when clicked on the broken image. This error means that there is an issue with the image URL, and the image is not loaded properly (due to various reasons).&lt;/p&gt;

&lt;p&gt;Shown below is an example of broken images on a website:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_QL0i-f7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Broken-Images-in-Web-Testing.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_QL0i-f7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Broken-Images-in-Web-Testing.png" alt="Broken Images in Web Testing"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From an end-user experience and retention point of view, fixing broken images should be considered equally important as fixing broken links on websites. Selenium WebDriver can be used to find broken images on websites. The internal logic for locating broken images might vary based on how the images are fetched from the server.&lt;/p&gt;

&lt;p&gt;Here are two ways in which images are read from the server:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Absolute Path ‚Äì&lt;/strong&gt; As the name indicates, the website uses the absolute path (or complete path) in the ‚Äòsrc‚Äô attribute that specifies the path to the intended image. The &amp;lt;img&amp;gt; tag in HTML creates a holding space for the referenced image.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Shown below is an example of usage of an absolute path in the ‚Äòsrc‚Äô attribute of the &amp;lt;img&amp;gt; tag:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--P_IESo4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Absolute-Path-1024x556.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--P_IESo4n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Absolute-Path-1024x556.png" alt="Absolute Path"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The image shown above is fetched from an absolute location (i.e., the HostName is used in the &amp;lt;src&amp;gt; attribute):&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ISPBT7N3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image2-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ISPBT7N3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image2-2.png" alt="Broken Image Test"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Relative Path ‚Äì&lt;/strong&gt; On many websites, a relative image on a path is placed in the attribute. The relative path is always relative to the root of the document (i.e., website/web app).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example, in &amp;lt;img src=‚Äùassets/img/image.jpg‚Äù alt=‚Äùsome text‚Äù&amp;gt;; the path of image.jpg is relative to the root. If the website URL is &lt;a href="https://www.someexample.com"&gt;https://www.someexample.com&lt;/a&gt;, the relative path of the image (image.jpg) will equate to &lt;a href="https://www.someexample.com/assets/img/image.jpg"&gt;https://www.someexample.com/assets/img/image.jpg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is a sample usage of relative path in the &amp;lt;src&amp;gt; attribute of the &amp;lt;img&amp;gt; tag:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p6T1DH5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image3-2-1024x555.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p6T1DH5C--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image3-2-1024x555.png" alt="usage of relative path"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You would be curious to know what leads to broken images on a website. Let‚Äôs look at the ‚Äòwhy part‚Äô of broken images?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#major-reasons-for-broken-images-on-a-webpage"&gt;
  &lt;/a&gt;
  Major reasons for Broken images on a webpage
&lt;/h3&gt;

&lt;p&gt;Here are some of the prominent reasons that lead to broken images (i.e., file not found or 404 error for images) on a website (or web apps):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Incorrect Image Format ‚Äì&lt;/strong&gt; In case you have uploaded the image in a .jpg format, but the image is identified as a .png format in the code, it leads to an error when the image is getting displayed. It is necessary to ensure that the image formats coincide when uploading to the server and referring to the same in the code.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Incorrect Image URL ‚Äì&lt;/strong&gt; When rendering the specified image, the browser reads the image location from the &amp;lt;src&amp;gt; attribute in the &amp;lt;img&amp;gt; tag. If a wrong image path or incorrect filename is mentioned in the &amp;lt;src&amp;gt; attribute, it leads to issues in displaying the image (and 404 errors).&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Deleted Image file ‚Äì&lt;/strong&gt; The HTML code link could be referring to a file that is either wrongly spelled in the code or no longer exist on the server.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Site relocation ‚Äì&lt;/strong&gt; After relocating the site from one provider to another, a thorough check should be conducted to verify whether all the site assets are available and accessible on the new server.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;301 redirection ‚Äì&lt;/strong&gt; During a website redesign activity, 301 redirects should be done for the site content and the images used on the site. Along with the redirection of URLs, utmost attention should be given to the redirection of the images that reside in those URLs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Unavailability of the server ‚Äì&lt;/strong&gt; In scenarios where the server does not give a response within a certain time-frame, images would fail to appear on the site.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Like broken links, attention should be given to ensure that your web product is free from broken images.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-should-you-check-for-broken-images"&gt;
  &lt;/a&gt;
  Why should you check for broken images?
&lt;/h3&gt;

&lt;p&gt;Here are the two major reasons for checking for broken images on websites:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Broken images on a website hamper the end-user experience, which could negatively impact the growth of the product.&lt;/li&gt;
&lt;li&gt;Images are an essential part of the content marketing strategy. However, broken images could create SEO issues. Images with missing ALT tags and broken internal images are problematic from an SEO point of view and should be looked into on a high priority.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-to-find-broken-images-using-selenium-webdriver"&gt;
  &lt;/a&gt;
  How to Find Broken Images Using Selenium WebDriver?
&lt;/h2&gt;

&lt;p&gt;When a user visits a website, the user request is sent to the website‚Äôs server, which processes the request. In response to the browser‚Äôs request, the server sends a three-digit code referred to as the HTTP Status Code to the browser.&lt;/p&gt;

&lt;p&gt;Some of the commonly used classes of HTTP Status Codes are 1xx, 2xx, 3xx, 4xx, and 5xx.&lt;br&gt;&lt;br&gt;
To find broken images using the Selenium WebDriver, we would be using the 4xx class of status code, indicating that the particular page or the complete website is not reachable. The status code of class 2xx (particularly 200) suggests that the request sent by the web browser was successful, and the appropriate response was sent to the browser.&lt;/p&gt;

&lt;p&gt;When an image is not available on the server, a response code 404 (Page Not Found) is sent to the web browser. You can refer to our earlier blog for detailed information on &lt;a href="https://www.lambdatest.com/blog/broken-links-testing-using-selenium/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;HTTP Status Codes and Status Codes presented on the detection of broken links/images&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Irrespective of the programming language being used to detect broken images, the basic principles remain the same. Here are some of the steps that can be followed to find broken images on websites:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use the &amp;lt;img&amp;gt; tag to collect details of the images present on the page.&lt;/li&gt;
&lt;li&gt;For each &amp;lt;img&amp;gt; tag, get the attribute &amp;lt;src&amp;gt; from the tag.&lt;/li&gt;
&lt;li&gt;Convert the path obtained from the &amp;lt;src&amp;gt; attribute to an ‚ÄòAbsolute Path.‚Äô Conversion to absolute path might not be required for Selenium Java, Selenium C#, and Selenium Python. Converting the ‚Äòrelative path‚Äô of the image(s) to ‚Äòabsolute path‚Äô is a must when Selenium PHP is used.&lt;/li&gt;
&lt;li&gt;Send an HTTP request to the image link obtained from step(3) and capture the response code received in response to the request.&lt;/li&gt;
&lt;li&gt;Based on the response code sent by the server, you should validate whether the image is broken. Response code 200 (i.e., HttpStatusCode.OK) means that the image is available on the server.&lt;/li&gt;
&lt;li&gt;Validate whether the link is broken or not based on the response code sent by the server.&lt;/li&gt;
&lt;li&gt;Repeat steps (2-6) for every image present on the page.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The naturalWidth attribute returns the original width of the image, and it is zero for a broken image. For Selenium with Java, you could also check if the naturalWidth attribute of the image is zero or not.&lt;/p&gt;

&lt;p&gt;In this Selenium Tutorial, we demonstrate how to find broken images using Selenium WebDriver in Java, Python, C#, and PHP. The tests are run on the latest version of the Chrome Browser on the Windows 10 platform. The execution is carried out on the cloud-based Selenium Grid provided by LambdaTest.&lt;/p&gt;

&lt;p&gt;To get started with LambdaTest, you should create an account on the website and note the user-name &amp;amp; access-key from the &lt;a href="https://accounts.lambdatest.com/detail/profile"&gt;profile section on LambdaTest&lt;/a&gt;. The browser capabilities are generated using LambdaTest Capabilities Generator.&lt;/p&gt;

&lt;p&gt;Here is the test scenario to find broken images on the website:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Test Scenario&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Go to &lt;a href="https://the-internet.herokuapp.com/broken_images"&gt;https://the-internet.herokuapp.com/broken_images&lt;/a&gt; on Chrome (latest)&lt;/li&gt;
&lt;li&gt;Read the details about the images present on the page&lt;/li&gt;
&lt;li&gt;Send HTTP request for each image&lt;/li&gt;
&lt;li&gt;Check the response code of the HTTP request. If the response code is 200, the image is not broken; else, the image is broken.&lt;/li&gt;
&lt;li&gt;Print whether the image is broken or not on the terminal&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The URL under test &lt;a href="https://the-internet.herokuapp.com/broken_images"&gt;https://the-internet.herokuapp.com/broken_images&lt;/a&gt; has two broken images and two proper images.&lt;/p&gt;

&lt;p&gt;Shown below are the two broken images on the website:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X6Y3jgsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/broken-images-1024x509.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X6Y3jgsE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/broken-images-1024x509.png" alt="broken images"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are the two proper (or not broken) images on the website:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--It8cBRKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image5-1-1024x509.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--It8cBRKv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image5-1-1024x509.png" alt="broken image check"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#how-to-find-broken-images-using-selenium-java"&gt;
  &lt;/a&gt;
  How to find Broken Images using Selenium Java?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;FileName ‚Äì pom.xml&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&amp;gt;
    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

    &amp;lt;groupId&amp;gt;org.brokenimages&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;BrokenImages&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
    &amp;lt;dependencies&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.testng&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;testng&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;6.9.10&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;slf4j-nop&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.7.28&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;selenium-java&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.0.0-alpha-7&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;selenium-remote-driver&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.0.0-alpha-7&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;selenium-chrome-driver&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.0.0-alpha-7&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;httpclient&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;4.5.13&amp;lt;/version&amp;gt;
        &amp;lt;/dependency&amp;gt;
    &amp;lt;/dependencies&amp;gt;

    &amp;lt;build&amp;gt;
        &amp;lt;defaultGoal&amp;gt;install&amp;lt;/defaultGoal&amp;gt;
        &amp;lt;plugins&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;3.0&amp;lt;/version&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;source&amp;gt;1.8&amp;lt;/source&amp;gt;
                    &amp;lt;target&amp;gt;1.8&amp;lt;/target&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
            &amp;lt;plugin&amp;gt;
                &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
                &amp;lt;configuration&amp;gt;
                    &amp;lt;source&amp;gt;11&amp;lt;/source&amp;gt;
                    &amp;lt;target&amp;gt;11&amp;lt;/target&amp;gt;
                &amp;lt;/configuration&amp;gt;
            &amp;lt;/plugin&amp;gt;
        &amp;lt;/plugins&amp;gt;
    &amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;FileName ‚Äì testng.xml&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd"&amp;gt;
&amp;lt;suite name="Broken Images Detection Demo"&amp;gt;
    &amp;lt;test verbose="2" preserve-order="true" name="Detect broken images in Selenium WebDriver"&amp;gt;
        &amp;lt;classes&amp;gt;
            &amp;lt;class name="brokenimages.test_brokenimages"&amp;gt;
            &amp;lt;/class&amp;gt;
        &amp;lt;/classes&amp;gt;
    &amp;lt;/test&amp;gt;
&amp;lt;/suite&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;FileName ‚Äì test_brokenimages.java&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package brokenimages;

import java.io.IOException;
import java.net.MalformedURLException;
import java.util.List;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.HttpClientBuilder;
import org.openqa.selenium.By;
import java.net.URL;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class test_brokenimages
{
    /*  protected static ChromeDriver driver; */
    WebDriver driver = null;
    String URL = "https://the-internet.herokuapp.com/broken_images";
    public static String status = "passed";
    String username = "user-name";
    String access_key = "access-key";

    @BeforeClass
    public void testSetUp() throws MalformedURLException {
        DesiredCapabilities capabilities = new DesiredCapabilities();
        capabilities.setCapability("build", "[Java] Finding broken images on a webpage using Selenium");
        capabilities.setCapability("name", "[Java] Finding broken images on a webpage using Selenium");
        capabilities.setCapability("platform", "Windows 10");
        capabilities.setCapability("browserName", "Chrome");
        capabilities.setCapability("version","latest");
        capabilities.setCapability("tunnel",false);
        capabilities.setCapability("network",true);
        capabilities.setCapability("console",true);
        capabilities.setCapability("visual",true);

        driver = new RemoteWebDriver(new URL("http://" + username + ":" + access_key + "@hub.lambdatest.com/wd/hub"),
                capabilities);
        System.out.println("Started session");
    }

    @Test(description="Approach 1: Find broken images on a web page using Selenium WebDriver", enabled=true)
    protected void test_selenium_broken_images_appr_1()
    {
        Integer iBrokenImageCount = 0;

        driver.navigate().to(URL);
        driver.manage().window().maximize();

        try
        {
            iBrokenImageCount = 0;
            List&amp;lt;WebElement&amp;gt; image_list = driver.findElements(By.tagName("img"));
            /* Print the total number of images on the page */
            System.out.println("The page under test has " + image_list.size() + " images");
            for (WebElement img : image_list)
            {
                if (img != null)
                {
                    HttpClient client = HttpClientBuilder.create().build();
                    HttpGet request = new HttpGet(img.getAttribute("src"));
                    HttpResponse response = client.execute(request);
                    /* For valid images, the HttpStatus will be 200 */
                    if (response.getStatusLine().getStatusCode() != 200)
                    {
                        System.out.println(img.getAttribute("outerHTML") + " is broken.");
                        iBrokenImageCount++;
                    }
                }
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
            status = "failed";
            System.out.println(e.getMessage());
        }
        status = "passed";
        System.out.println("The page " + URL + " has " + iBrokenImageCount + " broken images");
    }

    @Test(description="Approach 2: Find broken images on a web page using Selenium WebDriver", enabled = true)
    protected void test_selenium_broken_images_appr_2()
    {
        Integer iBrokenImageCount = 0;

        driver.navigate().to(URL);
        driver.manage().window().maximize();

        try
        {
            iBrokenImageCount = 0;
            List&amp;lt;WebElement&amp;gt; image_list = driver.findElements(By.tagName("img"));
            /* Print the total number of images on the page */
            System.out.println("The page under test has " + image_list.size() + " images");
            for (WebElement img : image_list)
            {
                if (img != null)
                {
                    if (img.getAttribute("naturalWidth").equals("0"))
                    {
                        System.out.println(img.getAttribute("outerHTML") + " is broken.");
                        iBrokenImageCount++;
                    }
                }
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
            status = "failed";
            System.out.println(e.getMessage());
        }
        status = "passed";
        System.out.println("The page " + URL + " has " + iBrokenImageCount + " broken images");
    }

    @AfterClass
    public void tearDown()
    {
        if (driver != null) {
            ((JavascriptExecutor) driver).executeScript("lambda-status=" + status);
            driver.quit();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Code Walkthrough [Approach ‚Äì 1]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Import the required packages&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Apache HttpClient library is used for handling the HTTP requests. To use the latest version of HttpClient library, the &lt;a href="https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient/4.5.13"&gt;dependency&lt;/a&gt; for the library is added to the Maven Build file (pom.xml).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
      &amp;lt;groupId&amp;gt;org.apache.httpcomponents&amp;lt;/groupId&amp;gt;
      &amp;lt;artifactId&amp;gt;httpclient&amp;lt;/artifactId&amp;gt;
      &amp;lt;version&amp;gt;4.5.13&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To find the broken images on the page under test, the HttpClient library is used for checking the status codes of the images present on the page. The necessary packages are imported so that its methods can be used in the implementation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.HttpClientBuilder;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Find all the images on the page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The findElements method in Selenium is used for fetching the details of all the images present on the page. The images are located using the tagName ‚Äò img.‚Äô&lt;/p&gt;

&lt;p&gt;The images are placed in a list, which will be further iterated to find broken images on the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;List&amp;lt;WebElement&amp;gt; image_list = driver.findElements(By.tagName("img"));
System.out.println("The page under test has " + image_list.size() + " images");
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Create a new instance of HttpClient&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The HttpClient class offers an API that primarily consists of three core classes ‚Äì HttpClient, HttpRequest, and HttpResponse. HttpResponse describes the result of an HttpRequest call. For reading the response body, we create a new instance of HttpClient and request the objects. The new instance of the class is created with the build() method of HttpClientBuilder class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HttpClient client = HttpClientBuilder.create().build();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Create a new instance of HttpGet&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/CloseableHttpClient.html"&gt;CloseableHttpClient&lt;/a&gt; provides the execute method for sending and receiving the data. The execute method uses the parameter of type HttpUriRequest, which has many sub-classes, including HttpGet and HttpPost.&lt;/p&gt;

&lt;p&gt;We first create a new HttpGet object with the HttpUriRequest set to path retrieved by reading the src attribute in the WebElement img.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HttpGet request = new HttpGet(img.getAttribute("src"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example ‚Äì getAttribute(‚Äúsrc‚Äù) for the image ‚ÄúFork me on GitHub‚Äù will return /img/forkme_right_green_007200.png.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc7c39OP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image11-1-1024x548.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jc7c39OP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image11-1-1024x548.png" alt="Broken Image Test Using Selenium"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Retrieve the response object&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The execute method executes the HTTP request using the default context. It returns the response body (i.e. HttpResponse).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;HttpResponse response = client.execute(request);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;6. Read the Status Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The getStatusLine method of the HttpResponse class obtains the status line of the response [obtained from step(5)]. The getStatusCode method returns the &lt;a href="https://hc.apache.org/httpcomponents-core-ga/httpcore/apidocs/org/apache/http/HttpStatus.html"&gt;HttpStatus&lt;/a&gt; in an integer format. Response Code 200 (SC_OK) means that the HTTP request was executed successfully.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (response.getStatusLine().getStatusCode() != 200)
{
    System.out.println(img.getAttribute("outerHTML") + " is broken.");
    iBrokenImageCount++;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If HttpStatus is 200, the concerned image is not broken, whereas HttpStatus for a broken image is 404. Steps (3) thru‚Äô (6) are repeated for all the WebElement entries in the image list. The outerHTML attribute for the broken images is printed for reference on the terminal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Code Walkthrough [Approach ‚Äì 2]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Find all the images on the page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Similar to Step(2) in Approach ‚Äì 1, the findElements method in Selenium is used to fetch the details of images present on the image. The tagName img is used with the findElements method to achieve the same.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;List&amp;lt; WebElement &amp;gt; image_list = driver.findElements(By.tagName("img"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Read the naturalWidth attribute&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The naturalWidth attribute of the WebElements identified in Step(1) is read. For broken images, naturalWidth will be zero whereas it is non-zero for normal images.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (img.getAttribute("naturalWidth").equals("0"))
{
    System.out.println(img.getAttribute("outerHTML") + " is broken.");
      iBrokenImageCount++;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Step (2) is repeated for all the WebElements in the list image_list, which was obtained in Step (1). The variable iBrokenImageCount indicates the number of broken images on the page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shown below are the execution snapshots of Approach ‚Äì 1 and Approach ‚Äì 2. As expected, we see that there are two broken images on the webpage under test.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8t3eEv64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Execution-1024x142.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8t3eEv64--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Execution-1024x142.png" alt="Execution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PppnUOdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image6-1024x138.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PppnUOdZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image6-1024x138.png" alt="test execution snapshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-find-broken-images-using-selenium-python"&gt;
  &lt;/a&gt;
  How to find Broken Images using Selenium Python?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FileName ‚Äì test_brokenimages.py&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import requests
import urllib3
import pytest
from requests.exceptions import MissingSchema, InvalidSchema, InvalidURL
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys

capabilities = {
    "build": "[Python] Finding broken images on a webpage using Selenium",
    "name": "[Python] Finding broken images on a webpage using Selenium",
    "platform": "Windows 10",
    "browserName": "Chrome",
    "version": "latest"
}

user_name = "user-name"
app_key = "access-key"
URL = "https://the-internet.herokuapp.com/broken_images"
iBrokenImageCount = 0

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
remote_url = "http://" + user_name + ":" + app_key + "@hub.lambdatest.com/wd/hub"
driver = webdriver.Remote(command_executor=remote_url, desired_capabilities=capabilities)
driver.maximize_window()
driver.get(URL)

image_list = driver.find_elements(By.TAG_NAME, "img")
print('Total number of images on '+ URL + ' are ' + str(len(image_list)))

for img in image_list:
    try:
        response = requests.get(img.get_attribute('src'), stream=True)
        if (response.status_code != 200):
            print(img.get_attribute('outerHTML') + " is broken.")
            iBrokenImageCount = (iBrokenImageCount + 1)

    except requests.exceptions.MissingSchema:
        print("Encountered MissingSchema Exception")
    except requests.exceptions.InvalidSchema:
        print("Encountered InvalidSchema Exception")
    except:
        print("Encountered Some other Exception")

driver.quit()

print('The page ' + URL + ' has ' + str(iBrokenImageCount) + ' broken images')
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Code Walkthrough&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Import Modules&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The requests module is imported so that we can send HTTP requests to the target URL. In case the requests module is not installed on the dev machine, run the command pip install requests to install the same.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Kchd5E1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Import-Modules-1024x214.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Kchd5E1w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Import-Modules-1024x214.png" alt="Import Modules"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;import requests
import urllib3
from requests.exceptions import MissingSchema, InvalidSchema, InvalidURL
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Fetch details about the images present on the page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;WebElements with the ‚Äòimg‚Äô tag are read using the find_elements method in Selenium.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;image_list = driver.find_elements(By.TAG_NAME, "img")
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Send an HTTP request&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The get() method in the requests module sends a GET request to the URL passed to it. The src attribute in the img tag contains the location of the image on the server. It is passed to the requests.get() method. Stream in the get() method is set to true, so the response to the HTTP request is immediately downloaded.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;response = requests.get(img.get_attribute('src'), stream=True)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In return, we get requests.Response() object that contains the server‚Äôs response to the HTTP request.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Read the Status Code from the Response object&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The status_code property in requests.Response() object indicates the status of the HTTP request. HTTP Status Code of 200 means that the image is not broken whereas the image is broken if the Status Code is 404.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (response.status_code != 200):
   print(img.get_attribute('outerHTML') + " is broken.")
   iBrokenImageCount = (iBrokenImageCount + 1)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Repeat steps (3) through (4) for all the WebElement entries in the list (i.e., image_list).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We run the file by triggering the command python &amp;lt;file_name.py&amp;gt; on the terminal. As shown below, two broken images were found on the page under test.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tfdn1ZHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image8-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tfdn1ZHH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image8-1.png" alt="Test Execution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-find-broken-images-using-selenium-c"&gt;
  &lt;/a&gt;
  How to find Broken Images using Selenium C#?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FileName ‚Äì BrokenImageTest.cs&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using OpenQA.Selenium;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Chrome;
using NUnit.Framework;
using System.Threading;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using OpenQA.Selenium.Remote;
using System;
using System.Threading;
using System.Net.Http;
using System.Threading.Tasks;

namespace TestBrokenImages
{
    [TestFixture("chrome", "latest", "Windows 10")]
    public class TestBrokenImages
    {
        private String browser;
        private String version;
        private String os;

        IWebDriver driver;

        public TestBrokenImages(String browser, String version, String os)
        {
            this.browser = browser;
            this.version = version;
            this.os = os;
        }

        [SetUp]
        public void Init()
        {
            String username = "user-name";
            String accesskey = "access-key";
            String gridURL = "@hub.lambdatest.com/wd/hub";

            DesiredCapabilities capabilities = new DesiredCapabilities();

            capabilities.SetCapability("user", username);
            capabilities.SetCapability("accessKey", accesskey);
            capabilities.SetCapability("browserName", browser);
            capabilities.SetCapability("version", version);
            capabilities.SetCapability("platform", os);
            capabilities.SetCapability("build", "[C#] Finding broken images on a webpage using Selenium");
            capabilities.SetCapability("name", "[C#] Finding broken images on a webpage using Selenium");

            driver = new RemoteWebDriver(new Uri("https://" + username + ":" + accesskey + gridURL), capabilities, TimeSpan.FromSeconds(600));

            System.Threading.Thread.Sleep(2000);
        }

        [Test]
        public async Task LT_Broken_Images_Test()
        {
            int broken_images = 0;
            String test_url = "https://the-internet.herokuapp.com/broken_images";
            driver.Url = test_url;
            using var client = new HttpClient();
            var image_list = driver.FindElements(By.TagName("img"));

            /* Loop through all the images */
            foreach (var img in image_list)
            {
                try
                {
                    /* Get the URI */
                    HttpResponseMessage response = await client.GetAsync(img.GetAttribute("src"));
                    /* Reference - https://docs.microsoft.com/en-us/dotnet/api/system.net.httpwebresponse.statuscode?view=netcore-3.1 */
                    if (response.StatusCode == HttpStatusCode.OK)
                    {
                        System.Console.WriteLine("Image at the link " + img.GetAttribute("src") + " is OK, status is "
                                + response.StatusCode);
                    }
                    else
                    {
                        System.Console.WriteLine("Image at the link " + img.GetAttribute("src") + " is Broken, status is "
                                + response.StatusCode);
                        broken_images++;
                    }
                }
                catch (Exception ex)
                {
                    if ((ex is ArgumentNullException) ||
                       (ex is NotSupportedException))
                    {
                        System.Console.WriteLine("Exception occured\n");
                    }
                }
            }
            /* Perform wait to check the output */
            System.Threading.Thread.Sleep(2000);
            Console.WriteLine("\nThe page " + test_url + " has " + broken_images + " broken images");
        }

        [TearDown]
        public void Cleanup()
        {
            if (driver != null)
                driver.Quit();
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Code Walkthrough&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We have used the NUnit framework for demonstration. You can check out our earlier blog on &lt;a href="https://www.lambdatest.com/blog/nunit-testing-tutorial-for-selenium-csharp/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;NUnit Test automation with Selenium C#&lt;/a&gt; to get started with the NUnit framework.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Include HttpClient namespace&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclient"&gt;HttpClient&lt;/a&gt; class provides the base class used for sending HTTP requests and receiving the corresponding response from the resource identified by URI.&lt;/p&gt;

&lt;p&gt;It is recommended to use HttpClient instead of HttpWebRequest (of the System.Net.HttpWebRequest namespace) for detecting broken images using Selenium WebDriver.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using System.Net.Http;
using System.Threading.Tasks;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Create a method that returns an async task&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The GetAsync method is used for sending a GET request to the specified URI as an asynchronous operation.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[Test]
public async Task LT_Broken_Images_Test()
{
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Create an instance of HttpClient&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;An instance of the HttpClient is created. The methods offered by HttpClient class will be further used for fetching the details of images present on the page under test.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;using var client = new HttpClient();
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Read the images present on the page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The details of the images present on the page are fetched by locating the WebElements with TagName ‚Äòimg‚Äô property.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var image_list = driver.FindElements(By.TagName("img"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The findElements method returns a list that is iterated to check the broken images on the page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Iterate through the image list to check for broken images&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The GetAsync method in HttpClient class sends an async GETrequest to the corresponding URI. The value of the anchor‚Äôs ‚Äòsrc‚Äô attribute collected using the GetAttribute method is passed in the GetAsync method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;foreach (var img in image_list)
{
  try
  {
    /* Get the URI */
    HttpResponseMessage response=await client.GetAsync(img.GetAttribute("src"));
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;6. Read the HttpStatus Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On completion of the Async operation in Step(5), &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpresponsemessage?view=netcore-3.1"&gt;HttpResponseMessage&lt;/a&gt; is returned. The response includes the data and status code. Response code HttpStatusCode.OK (i.e., 200) indicates that the image was located on the server, and it was read successfully. We keep a counter of the number of broken images on the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (response.StatusCode == HttpStatusCode.OK)
{
    System.Console.WriteLine("Image at the link " + img.GetAttribute("src") + " is OK, status is "+ response.StatusCode);
}
else
{
    System.Console.WriteLine("Image at the link " + img.GetAttribute("src") + " is Broken, status is "+ response.StatusCode);
    broken_images++;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The exceptions NotSupportedException and ArgumentNullException are handled as part of exception handling.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;catch (Exception ex)
{
    if ((ex is ArgumentNullException) ||  (ex is NotSupportedException))
    {
            System.Console.WriteLine("Exception occured\n");
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here is the execution snapshot, which indicates that two broken images were present on the page under test.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BiD0Jhyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Execution-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BiD0Jhyp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Execution-1.png" alt="Execution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ndmhnCYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/two-broken-images-1024x202.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ndmhnCYt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/two-broken-images-1024x202.png" alt="two broken images"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-find-broken-images-using-selenium-php"&gt;
  &lt;/a&gt;
  How to find Broken Images using Selenium PHP?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FileName ‚Äì composer.json&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;{
   "require":{
      "php":"&amp;gt;=7.1",
      "phpunit/phpunit":"^9",
      "phpunit/phpunit-selenium": "*",
      "php-webdriver/webdriver":"*"
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;FileName ‚Äì tests\BrokenImageTest.php&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
require 'vendor/autoload.php';

use PHPUnit\Framework\TestCase;
use Facebook\WebDriver\Remote\DesiredCapabilities;
use Facebook\WebDriver\Remote\RemoteWebDriver;
use Facebook\WebDriver\WebDriverBy;

$GLOBALS['LT_USERNAME'] = "user-name";
# accessKey:  AccessKey can be generated from automation dashboard or profile section
$GLOBALS['LT_APPKEY'] = "access-key";

class BrokenImageTest extends TestCase
{

  protected $webDriver;

  public function build_browser_capabilities(){
    /* $capabilities = DesiredCapabilities::chrome(); */
    $capabilities = array(
      "build" =&amp;gt; "[PHP] Finding broken images on a webpage using Selenium",
      "name" =&amp;gt; "[PHP] Finding broken images on a webpage using Selenium",
      "platform" =&amp;gt; "macOS High Sierra",
      "browserName" =&amp;gt; "MicrosoftEdge",
      "version" =&amp;gt; "latest"
    );
    return $capabilities;
  }

  public function setUp(): void
  {
    $capabilities = $this-&amp;gt;build_browser_capabilities();
    /* Download the Selenium Server 3.141.59 from 
    https://selenium-release.storage.googleapis.com/3.141/selenium-server-standalone-3.141.59.jar
    */
    $url = "https://". $GLOBALS['LT_USERNAME'] .":" . $GLOBALS['LT_APPKEY'] ."@hub.lambdatest.com/wd/hub";
    $this-&amp;gt;webDriver = RemoteWebDriver::create($url, $capabilities);
  }

  public function tearDown(): void
  {
    $this-&amp;gt;webDriver-&amp;gt;quit();
  }

  /*
  * @test
  */ 
  public function test_searchbrokenimages()
  {
    $test_url = "https://the-internet.herokuapp.com/broken_images";
    # For site with absolute path
    # $test_url = "https://www.lambdatest.com/blog";
    # End - For site with absolute path
    $base_url = "https://the-internet.herokuapp.com/";

    $driver = $this-&amp;gt;webDriver;
    $driver-&amp;gt;get($test_url);
    $this-&amp;gt;assertEquals("The Internet", $driver-&amp;gt;getTitle());
    # For site with absolute path
    # $this-&amp;gt;assertEquals("LambdaTest | A Cross Browser Testing Blog", $driver-&amp;gt;getTitle());
    # End - For site with absolute path
    $driver-&amp;gt;manage()-&amp;gt;window()-&amp;gt;maximize();

    $iBrokenImageCount = 0;

    /* file_get_contents is used to get the page's HTML source */
    $html = file_get_contents($test_url);

    /* Instantiate the DOMDocument class */
    $htmlDom = new DOMDocument;

    /* The HTML of the page is parsed using DOMDocument::loadHTML */
    @$htmlDom-&amp;gt;loadHTML($html);

    /* Extract the links from the page */
    $image_list = $htmlDom-&amp;gt;getElementsByTagName('img');

    /* The DOMNodeList object is traversed to check for its validity */
    foreach($image_list as $img)
    {
        $img_path = $img-&amp;gt;getAttribute('src');
        # Convert relative path to absolute path
        $search_path = "/" . $img_path;
        $abs_path = relative2absolute($search_path, $base_url);
        # When absolute path is used for fetching the images
        # For site with absolute path
        # $abs_path = $img_path;
        # For site with absolute path

        $response = @get_headers($abs_path);
        if (preg_match("|200|", $response[0]))
        {
          print($abs_path . " is not broken\n");
        }
        else
        {
          print($abs_path . " is broken\n");
          $iBrokenImageCount = $iBrokenImageCount + 1;
        }
    }
    print("\nThe page " . $test_url . " has " . $iBrokenImageCount . " broken images");
  }
}
?&amp;gt;

&amp;lt;?php
    function relative2absolute($rel_path, $base_path)
    {
        /* return if already absolute URL */
        if (parse_url($rel_path, PHP_URL_SCHEME) != '') return $rel_path;

        /* queries and anchors */
        if ($rel_path[0]=='#' || $rel_path[0]=='?') return $base_path.$rel_path;

        /* parse base URL and convert to local variables:
            $scheme, $host, $path */
        extract(parse_url($base_path));

        /* remove non-directory element from path */
        $new_path = preg_replace('#/[^/]*$#', '', $base_path);

        /* destroy path if relative url points to root */
        if ($rel_path[0] == '/') $new_path = '';

        /* dirty absolute URL */
        $abs_path = "$host$new_path/$rel_path";

        /* replace '//' or '/./' or '/foo/../' with '/' */
        $repl = array('#(/\.?/)#', '#/(?!\.\.)[^/]+/\.\./#');
        for($counter=1; $counter&amp;gt;0; $abs_path=preg_replace($repl, '/', $abs_path, -1, $counter)) {}

        /* absolute URL is ready! */
        return $scheme.'://'.$abs_path;
    }
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Code Walkthrough&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To find broken images with Selenium PHP, we would be using the PHPUnit framework with Selenium. Refer to our &lt;a href="https://www.lambdatest.com/blog/selenium-php-tutorial/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;detailed Selenium PHP tutorial&lt;/a&gt; for a quick recap on Selenium with PHPUnit.&lt;/p&gt;

&lt;p&gt;Run the command composer require on the terminal for installing the packages mentioned in composer.json.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ysPvULvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image13.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ysPvULvg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image13.png" alt="command composer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the overall walkthrough of the source code:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Read the page source&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;HTML source of the page under test (i.e. &lt;a href="https://the-internet.herokuapp.com/"&gt;https://the-internet.herokuapp.com/&lt;/a&gt;) is read using the file_get_contents function in PHP. HTML source is read in a local String variable $html.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$html = file_get_contents($test_url);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Instantiate the DOMDocument class&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The entire HTML document is represented in the DOMDocument class. It also serves as the root of the source tree.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$htmlDom = new DOMDocument;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;3. Parse HTML source of the page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;DOMDocument::loadHTML() function in PHP parses the HTML source available in the String variable $html. The function returns a DOMDocument object when executed successfully.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@$htmlDom-&amp;gt;loadHTML($html);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;4. Extract the Images using ‚Äòimg‚Äô tag&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Entries in the &amp;lt;img&amp;gt; HTML tag are read using the getElementsByTagName method of the DOMDocument class. As we are looking for broken images, search is based on the &amp;lt;img&amp;gt; tag from the parsed HTML source.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$image_list = $htmlDom-&amp;gt;getElementsByTagName('img');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;5. Read the entries enclosed in ‚Äòsrc‚Äô attribute&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The values of the ‚Äòsrc‚Äô attribute are read from the &amp;lt;img&amp;gt; entries extracted in Step(4).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$img_path = $img-&amp;gt;getAttribute('src');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For example ‚Äì The ‚Äòsrc‚Äô attribute in &amp;lt;img src=‚Äùimg/avatar-blank.jpg‚Äù&amp;gt; is ‚Äúimg/avatar-blank.jpg‚Äù.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. Convert the relative path to absolute path&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This step is only applicable if the ‚Äòsrc‚Äô attribute in the &amp;lt;img&amp;gt; tag returns a relative path from the root of the document.&lt;/p&gt;

&lt;p&gt;In the case of &lt;a href="http://the-internet.herokuapp.com/broken_images"&gt;http://the-internet.herokuapp.com/broken_images&lt;/a&gt;, the images are read using the relative path.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--37ruSm2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Convert-the-relative-path-1024x547.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--37ruSm2M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Convert-the-relative-path-1024x547.png" alt="Convert the relative path"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Take the LambdaTest blog case, the images in the blogs are read using the absolute path of the images on the server. Shown below is an example of how the absolute path of the image is used in the ‚Äòsrc‚Äô attribute of the &amp;lt;img&amp;gt; tag:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DHZA7eqO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-1024x516.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DHZA7eqO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-1024x516.png" alt="LambdaTest blog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We created a new function relative2absolute() that takes the following arguments ‚Äì relative path obtained from the &amp;lt;src&amp;gt; attribute and root document of the URL under test.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;?php
function relative2absolute($rel_path, $base_path)
{
        /* return if already absolute URL */
        if (parse_url($rel_path, PHP_URL_SCHEME) != '') return $rel_path;

        /* queries and anchors */
        if ($rel_path[0]=='#' || $rel_path[0]=='?') return $base_path.$rel_path;

        /* parse base URL and convert to local variables:
            $scheme, $host, $path */
        extract(parse_url($base_path));

      .............................................
        .............................................
        .............................................

}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Relative Path (Sample)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;For &lt;a href="http://the-internet.herokuapp.com/broken_images"&gt;http://the-internet.herokuapp.com/broken_images&lt;/a&gt;, the relative path would equate to /$img_path. If the $img_path is img/avatar-blank.jpg; the final relative path used by the relative2absolute function would be /img/avatar-blank.jpg The base URL is set to &lt;a href="https://the-internet.herokuapp.com/"&gt;https://the-internet.herokuapp.com/&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$test_url = "https://the-internet.herokuapp.com/broken_images";

..........................................................
..........................................................
..........................................................


# Convert relative path to absolute path
$search_path = "/" . $img_path;
$abs_path = relative2absolute($search_path, $base_url);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Absolute path (Sample)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If an absolute path is used in the &amp;lt;src&amp;gt; attribute, the absolute path and the relative path would be the same. In such a scenario, Step (6) becomes optional.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$test_url = "https://www.lambdatest.com/blog";

..........................................................
..........................................................
..........................................................
$img_path = $img-&amp;gt;getAttribute('src');
$abs_path = $img_path;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We came up with the relative2absolute function with support from the StackOverflow Community ‚ò∫.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Convert the relative path to absolute path&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The get_headers() function is used to fetch all the headers sent by the server in response to the HTTP request. For a broken image, the HTTP status code is 404, whereas the status code is 200 if the image is present on the server.&lt;/p&gt;

&lt;p&gt;The preg_match() function in PHP does a case-insensitive search for ‚Äú200‚Äù (HTTP Status Code if the request is completed successfully) in the response code. The local variable iBrokenImageCount is incremented when a broken image is present on the page.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$response = @get_headers($abs_path);
if (preg_match("|200|", $response[0]))
{
    print($abs_path . " is not broken\n");
}
else
{
    print($abs_path . " is broken\n");
    $iBrokenImageCount = $iBrokenImageCount + 1;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Execution&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To run the test that is using the PHPUnit framework, run the following command from the root folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;vendor\bin\phpunit  --debug test
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the test is run against &lt;a href="https://the-internet.herokuapp.com/broken_images"&gt;https://the-internet.herokuapp.com/broken_images&lt;/a&gt;, it shows that the page has two broken images.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V-GnovuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/selenium.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V-GnovuN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/selenium.png" alt="test broken image using selenium"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We executed the same test against the &lt;a href="https://www.lambdatest.com/blog/?utm_source=dev&amp;amp;utm_medium=Blog&amp;amp;utm_campaign=Himanshu-13042021&amp;amp;utm_term=Himanshu"&gt;LambdaTest blog&lt;/a&gt; after doing the minimal changes in the code under the ‚ÄòFor a site with absolute path‚Äô comment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ANVIzAFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ANVIzAFh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-1.png" alt="LambdaTest blog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OTP-0i21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OTP-0i21--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/LambdaTest-blog-2.png" alt="LambdaTest blog"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The site uses the absolute path in &amp;lt;src&amp;gt; attribute of img tag. As seen below, there are zero broken images on the LambdaTest blog.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f17z7ABW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Absolute-Path-1-1024x721.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f17z7ABW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/Absolute-Path-1-1024x721.png" alt="absolute path"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#thats-all-folks"&gt;
  &lt;/a&gt;
  That‚Äôs all folks
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--90etocuQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image20.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--90etocuQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.lambdatest.com/blog/wp-content/uploads/2021/02/image20.gif" alt="Fixed"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Like broken links on web pages, broken images could also hinder the overall user experience. It also creates a negative impact on the search rankings, thereby hampering your SEO efforts. Instead of relying on third-party tools where you are putting the privacy &amp;amp; data at stake, you should find broken images using Selenium WebDriver. In this Selenium tutorial, we had a look at how to find broken images using Selenium WebDriver with Java, Python, C#, and PHP languages.&lt;/p&gt;

&lt;p&gt;What strategy do you follow for finding broken images on webpage(s)? Do leave your thoughts in the comments section‚Ä¶&lt;/p&gt;

&lt;p&gt;Happy Testing ‚ò∫&lt;/p&gt;

</description>
      <category>selenium</category>
      <category>seleniumwebdriver</category>
      <category>java</category>
      <category>python</category>
    </item>
    <item>
      <title>Solution: Flatten Nested List Iterator</title>
      <author>seanpgallivan</author>
      <pubDate>Tue, 13 Apr 2021 09:33:39 +0000</pubDate>
      <link>https://dev.to/seanpgallivan/solution-flatten-nested-list-iterator-483i</link>
      <guid>https://dev.to/seanpgallivan/solution-flatten-nested-list-iterator-483i</guid>
      <description>&lt;p&gt;&lt;em&gt;This is part of a series of Leetcode solution explanations (&lt;a href="https://dev.to/seanpgallivan/leetcode-solutions-index-57fl"&gt;index&lt;/a&gt;). If you liked this solution or found it useful,&lt;/em&gt; &lt;strong&gt;&lt;em&gt;please like&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;this post and/or&lt;/em&gt; &lt;strong&gt;&lt;em&gt;upvote&lt;/em&gt;&lt;/strong&gt; &lt;em&gt;&lt;a href="https://leetcode.com/problems/flatten-nested-list-iterator/discuss/1156268"&gt;my solution post on Leetcode's forums&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#leetcode-problem-341-medium-flatten-nested-list-iterator"&gt;
  &lt;/a&gt;
  &lt;a href="https://leetcode.com/problems/flatten-nested-list-iterator/"&gt;Leetcode Problem #341 (&lt;em&gt;Medium&lt;/em&gt;): Flatten Nested List Iterator&lt;/a&gt;
&lt;/h4&gt;




&lt;h4&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Description:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You are given a nested list of integers &lt;code&gt;nestedList&lt;/code&gt;. Each element is either an integer or a list whose elements may also be integers or other lists. Implement an iterator to flatten it.&lt;/p&gt;

&lt;p&gt;Implement the &lt;code&gt;NestedIterator&lt;/code&gt; class:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;code&gt;NestedIterator(List&amp;lt;NestedInteger&amp;gt; nestedList)&lt;/code&gt; Initializes the iterator with the nested list &lt;code&gt;nestedList&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt; &lt;code&gt;int next()&lt;/code&gt; Returns the next integer in the nested list.&lt;/li&gt;
&lt;li&gt; &lt;code&gt;boolean hasNext()&lt;/code&gt; Returns &lt;code&gt;true&lt;/code&gt; if there are still some integers in the nested list and &lt;code&gt;false&lt;/code&gt; otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#examples"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Examples:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 1:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nestedList = [[1,1],2,[1,1]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[1,1,2,1,1]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Example 2:&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Input:&lt;/td&gt;
&lt;td&gt;nestedList = [1,[4,[6]]]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Output:&lt;/td&gt;
&lt;td&gt;[1,4,6]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Explanation:&lt;/td&gt;
&lt;td&gt;By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6].&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#constraints"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Constraints:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= nestedList.length &amp;lt;= 500&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The values of the integers in the nested list is in the range &lt;code&gt;[-10^6, 10^6]&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;




&lt;h4&gt;
  &lt;a href="#idea"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Idea:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;em&gt;Code&lt;/em&gt;: &lt;a href="#javascript-code"&gt;&lt;em&gt;JavaScript&lt;/em&gt;&lt;/a&gt; | &lt;a href="#python-code"&gt;&lt;em&gt;Python&lt;/em&gt;&lt;/a&gt; | &lt;a href="#java-code"&gt;&lt;em&gt;Java&lt;/em&gt;&lt;/a&gt; | &lt;a href="#c-code"&gt;&lt;em&gt;C++&lt;/em&gt;&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;This problem is fairly straightforward, as long as we pay attention to the behavior of the &lt;strong&gt;NestedInteger&lt;/strong&gt; class.&lt;/p&gt;

&lt;p&gt;It is easiest to apply our flattening method (&lt;strong&gt;flatten()&lt;/strong&gt;) during the class construction process, so that we only ever store the flattened list (&lt;strong&gt;data&lt;/strong&gt;) in our class instance. Since there can be multiple layers of nesting, we should make &lt;strong&gt;flatten&lt;/strong&gt; a &lt;strong&gt;recursive&lt;/strong&gt; function.&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;flatten&lt;/strong&gt;, we should iterate through the given &lt;strong&gt;list&lt;/strong&gt; and if the current element (&lt;strong&gt;el&lt;/strong&gt;) is an integer we should push its contained value onto &lt;strong&gt;data&lt;/strong&gt;, otherwise we should recursively call &lt;strong&gt;flatten&lt;/strong&gt; on the nested list contained in &lt;strong&gt;el&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once our &lt;strong&gt;data&lt;/strong&gt; is successfully flattened, &lt;strong&gt;next()&lt;/strong&gt; should be as easy as removing and returning the lead element of &lt;strong&gt;data&lt;/strong&gt;. When &lt;strong&gt;data&lt;/strong&gt; is reduced to a length of &lt;strong&gt;0&lt;/strong&gt;, then &lt;strong&gt;hasNext()&lt;/strong&gt; can &lt;strong&gt;return false&lt;/strong&gt;.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#implementation"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Implementation:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;There are only minor differences between the code for all four languages.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#javascript-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Javascript Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;NestedIterator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isInteger&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getInteger&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getList&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;hasNext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;

    &lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#python-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Python Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NestedIterator&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;NestedInteger&lt;/span&gt;&lt;span class="p"&gt;]):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isInteger&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getInteger&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getList&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;hasNext&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#java-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;Java Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NestedIterator&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;Iterator&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nc"&gt;Queue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Integer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;LinkedList&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;NestedIterator&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NestedInteger&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; 
        &lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;flatten&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;NestedInteger&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;NestedInteger&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isInteger&lt;/span&gt;&lt;span class="o"&gt;())&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getInteger&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nf"&gt;flatten&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getList&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nc"&gt;Integer&lt;/span&gt; &lt;span class="nf"&gt;next&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;poll&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;boolean&lt;/span&gt; &lt;span class="nf"&gt;hasNext&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;size&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#c-code"&gt;
  &lt;/a&gt;
  &lt;strong&gt;&lt;em&gt;C++ Code:&lt;/em&gt;&lt;/strong&gt;
&lt;/h4&gt;

&lt;p&gt;&lt;br&gt;(&lt;em&gt;Jump to&lt;/em&gt;: &lt;a href="#description"&gt;&lt;em&gt;Problem Description&lt;/em&gt;&lt;/a&gt; || &lt;a href="#idea"&gt;&lt;em&gt;Solution Idea&lt;/em&gt;&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight cpp"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NestedIterator&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="n"&gt;queue&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nl"&gt;public:&lt;/span&gt;
    &lt;span class="n"&gt;NestedIterator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NestedInteger&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nestedList&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;vector&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;NestedInteger&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NestedInteger&lt;/span&gt; &lt;span class="n"&gt;el&lt;/span&gt; &lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isInteger&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getInteger&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
            &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;flatten&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getList&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;front&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kt"&gt;bool&lt;/span&gt; &lt;span class="n"&gt;hasNext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
      <category>java</category>
      <category>cpp</category>
    </item>
    <item>
      <title>Top 25 Android Games under 25 mb (Part 1)</title>
      <author>Konchada Sai Ansul</author>
      <pubDate>Tue, 13 Apr 2021 09:10:41 +0000</pubDate>
      <link>https://dev.to/saiansulsblog/top-25-android-games-under-25-mb-part-1-4d0m</link>
      <guid>https://dev.to/saiansulsblog/top-25-android-games-under-25-mb-part-1-4d0m</guid>
      <description>&lt;p&gt;Hey Guys,&lt;br&gt;
Welcome back to a new post of &lt;strong&gt;SAI ANSUL'S BLOG&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this blog after a long research I have got for you best gamesüéÆ under 25mb which won't affect your phone's storage.&lt;/p&gt;

&lt;p&gt;These games are self-tested and selected under various criteria mentioned below:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; Under 25mb &lt;/li&gt;
&lt;li&gt; Genre: Adventure, Classic &amp;amp; Educational &lt;/li&gt;
&lt;li&gt;Top Rated on Playstore‚≠ê&lt;/li&gt;
&lt;li&gt; Friendly for all users&lt;/li&gt;
&lt;li&gt; Free for all
I have also shared the link of each game. Click on the title and directly download it from Google Play store.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So let's start,&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-mekorama"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://play.google.com/store/apps/details?id=com.martinmagni.mekorama"&gt; Mekorama&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pYMBZ4pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618253353658/EU8QZade-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pYMBZ4pN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618253353658/EU8QZade-.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.4‚≠ê, developed by &lt;strong&gt;Martin Magni&lt;/strong&gt;. This game is a puzzle game with  around 50 levels with charming robots, collective play cards, this is a mind relaxing game. Do give it a try!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-no-humanity-the-hardest-game"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://play.google.com/store/apps/details?id=com.sweatychair.lastofhumanity"&gt;No Humanity - The Hardest Game&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7u_jiAM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618253603485/9u6jvAx0Y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7u_jiAM_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618253603485/9u6jvAx0Y.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.3‚≠ê, developed by &lt;strong&gt;Sweaty Chair Studio&lt;/strong&gt;. This game is very fun and challenging, the best thing is it does not have ads! The best things loved by the users is its charming style. The game has&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Mild frustration,&lt;/li&gt;
&lt;li&gt;Unfair gameplay,&lt;/li&gt;
&lt;li&gt;Ugly doodle&lt;/li&gt;
&lt;li&gt;space themed apocalypse&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-bottle-flip-3d"&gt;
  &lt;/a&gt;
  3.  &lt;a href="https://play.google.com/store/apps/details?id=pampam.ibf2"&gt;Bottle Flip 3d&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lD9AYive--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618254066877/wv6dWzyFF.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lD9AYive--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618254066877/wv6dWzyFF.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4‚≠ê, developed by &lt;strong&gt;tastypill&lt;/strong&gt;. If you have noticed recently this game was in trending, every corner of world was playing this game, so &lt;strong&gt;tastypill&lt;/strong&gt; has brought us this game in a digital way. This is a arcade game in which you have to flip the plastic bottle on other objects in the house like chair, table, television, shelves and more with different room levels. You need to tap on the screen on the correct time so that the bottle flips and bottle reaches on the other objects and at end you go a new level. This  game requires agility and coordination and its great fun to play it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-paper-wings"&gt;
  &lt;/a&gt;
  4.  &lt;a href="https://play.google.com/store/apps/details?id=com.filgames.soar"&gt;Paper Wings &lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4ObhI-A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618255534541/W8DtIyK2K.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Q4ObhI-A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618255534541/W8DtIyK2K.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.4‚≠ê, developed by &lt;strong&gt;FillGames&lt;/strong&gt;.  This game is fast paced arcade game about catching falling balls mid-air to keep your bird alive. As you gain points, you grow in levels  in the game. In each stage there is a new difficult task. in this game  you need to guide your origami bird in the air, collect all the coins, avoid the hazards, unlock other species and complete the bird family! It also has online multiplayer features in it now. So now you can play this amazing game with your 4 friends at a time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-ultimate-soccerfootball"&gt;
  &lt;/a&gt;
  5.  &lt;a href="https://play.google.com/store/apps/details?id=com.cg.football"&gt;Ultimate Soccer-Football&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZB210bkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618255764241/KGDs4LXSt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZB210bkv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618255764241/KGDs4LXSt.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with rating of 4‚≠ê, developed by &lt;strong&gt;Mouse Games&lt;/strong&gt;. This is addictive, its is realastic and the overall playing experience is superb .Build the best squad  and lead them all the way to win the league champion or World Cup of FIFA!, it is the definitive mobile football simulation, featuring simple controls, smooth animations and insane actions. Pass and dribble around opponents, take aim, shoot and Goal! You can also control every aspect of your team through the management system: trade in the transfer market, train your players to improve their ability and put them on the path to a successful win.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-pewpew"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://play.google.com/store/apps/details?id=com.jyaif.pewpew"&gt; PewPew&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YddgqLiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618301118090/h7BV2foiq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YddgqLiO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618301118090/h7BV2foiq.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.2‚≠ê, developed by &lt;strong&gt;Jean-Fran√ßois Geyelin&lt;/strong&gt;. This is a best multidirectional shooting game. It has many modes like: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pandemonium:
Some enemies explode when they die, and the other spin maniacally everywhere. Hide from the explosions or deftly go through them&lt;/li&gt;
&lt;li&gt;Dodge this:
As you collect boxes, there are more and more enemies moving around. Naturally, you have to dodge them all.&lt;/li&gt;
&lt;li&gt;Assault:
You fight against waves of enemies. Spoiler: at the end, they win and you die.&lt;/li&gt;
&lt;li&gt;Chromatic Conflict (NSF color blinds):
Enemies of different color appear. You can only destroy the ones that are the same color as your ship
This game also does not have any ads, you can also play it online.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#7-archery-master"&gt;
  &lt;/a&gt;
  7.  &lt;a href="https://play.google.com/store/apps/details?id=com.junerking.archery"&gt;Archery Master&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IM11wx4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618301559591/XFYcmIGC-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IM11wx4W--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618301559591/XFYcmIGC-.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This game comes with rating of 4.2‚≠ê, developed by &lt;strong&gt;Terrain-Droid&lt;/strong&gt;. This game delivers ultra realistic archery experience that features cool 3D graphics, amazing animations and simple playing controls. Shoot arrows at targets generally set at various distance to earn coins for new bows, arrows and upgrades. Get ready for the intense challenges from Olympic Archery champions.  This game also has 4 maps, that are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pine Forest&lt;/li&gt;
&lt;li&gt;Archery Field&lt;/li&gt;
&lt;li&gt;Deadly Desert&lt;/li&gt;
&lt;li&gt;Rain Forest
This game has more than 100 levels in normal mode.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#8-galactic-rush-3d"&gt;
  &lt;/a&gt;
  8.  &lt;a href="https://play.google.com/store/apps/detailsid=com.offroadarcade.zigzagalien3d"&gt;Galactic Rush 3D&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tiNQ9vC7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618302097129/b8vG-kjHe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tiNQ9vC7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618302097129/b8vG-kjHe.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.2‚≠ê, developed by &lt;strong&gt;Offroadstudios&lt;/strong&gt;. This game comes under the category of action. In this there is a 3d galaxy world with Aliens on mars, you need to make them survive. You just tap on the button to switch the direction, avoid falling off the edges and collect stars to unlock characters &amp;amp; power-ups. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#9-the-last-vikings"&gt;
  &lt;/a&gt;
  9.  &lt;a href="https://play.google.com/store/apps/details?id=com.springloaded.thelastvikings"&gt;The Last Vikings&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ohm24XKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618302636748/pUvPZ-oHU.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ohm24XKB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618302636748/pUvPZ-oHU.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 4.4‚≠ê, developed by &lt;strong&gt;Springloaded Ltd.&lt;/strong&gt;. This game is simple but innovative and addictive. This game has battle mythical and legendary dragons, hydras and more.&lt;br&gt;
You need to collect and upgrade more than 50 unique and varied heroes, build different Viking boats to conquer as many villages as you can and discover and try different combinations of powerful weapons. This game has good graphics and mechanics.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-game-dev-story-lite"&gt;
  &lt;/a&gt;
  10.   &lt;a href="https://play.google.com/store/apps/details?id=net.kairosoft.android.gamedev3enL"&gt;Game Dev Story Lite&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tn4T15LO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618303146331/OZMUHsCju.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tn4T15LO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618303146331/OZMUHsCju.png" alt="image.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This game comes with rating of 3.9‚≠ê, developed by *&lt;em&gt;Kairosoft Co.,Ltd *&lt;/em&gt;. In this game you have to manage your own game company. Your company's staff members can have a variety of game-related professions, from programmer to sound engineer. This game reminds you of the retro styling built games. This is a amazing game give it a try. &lt;/p&gt;

&lt;p&gt;This was it for today guys. Do comment which game you liked the most.&lt;/p&gt;

&lt;p&gt;Stay tuned for some more interesting blogs coming up soon. &lt;/p&gt;

&lt;p&gt;And part 2 of this blog is also coming soon!&lt;/p&gt;

&lt;p&gt;If you like my content and want to support my efforts please likeüëçüèª, shareüì≤ &amp;amp; subscribe to the newsletter to be get notified whenever I post a new blog.&lt;/p&gt;

</description>
      <category>android</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Top 4 Hospital Management Systems in JavaScript to Consider</title>
      <author>Pavel Lazarev</author>
      <pubDate>Tue, 13 Apr 2021 09:09:34 +0000</pubDate>
      <link>https://dev.to/plazarev/top-4-hospital-management-systems-in-javascript-to-consider-45ee</link>
      <guid>https://dev.to/plazarev/top-4-hospital-management-systems-in-javascript-to-consider-45ee</guid>
      <description>&lt;p&gt;In this article, we talk about hospital management system apps and templates. This kind of software is designed for automating clinical workflow and providing effective patient care. It allows handling health-related data, including clinical, laboratory, insurance, and financial records.&lt;/p&gt;

&lt;p&gt;We‚Äôve gathered 4 examples of hospital management systems written in JavaScript. Nevertheless, we‚Äôd love to see more solutions you may share in the comments below.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dhtmlx-demo-app-for-hospital-management"&gt;
  &lt;/a&gt;
  DHTMLX demo app for hospital management
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3QBNyy0y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77r3cds7fv0i3zcvyuv8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3QBNyy0y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/77r3cds7fv0i3zcvyuv8.png" alt="javascript-hospital-manageent-system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;DHTMLX provides a user-friendly &lt;a href="https://dhtmlx.com/docs/products/demoApps/dhtmlxHospital/#patients"&gt;hospital management demo app&lt;/a&gt; based on several highly customizable JavaScript widgets from the Suite UI library. It can be integrated into an existing project to ensure effective coordination between medical staff.&lt;/p&gt;

&lt;p&gt;The template provides 2 modules that users can switch between with a tab bar. The first module allows working with patient information to provide quality medical care. All the essential data is displayed in a nested list by which hospital personnel can manage bed allocation, monitor patient vitals, and edit patient records.&lt;/p&gt;

&lt;p&gt;In order to add a patient record, hospital staff can fill a patient registration form. It combines multiple controls, such as input fields, radio buttons, combo boxes, and date pickers, that are arranged in 5 groups:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;personal information&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;communication details&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;emergency contact&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;insurance information&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;patient allocation.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Therefore, users can create an extensive patient record as well as assign an attending physician, room, and bed for stay. Having added numerous patients, hospital personnel can easily find a required record using a filter bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h9P0CdoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w447qnnpoimxq7fxd9uv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h9P0CdoY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w447qnnpoimxq7fxd9uv.png" alt="medical-hierarchy-diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The second module contains a medical hierarchy chart built with the DHTMLX &lt;a href="https://dhtmlx.com/docs/products/dhtmlxDiagram/"&gt;JavaScript diagram library&lt;/a&gt;. Each shape displays a hospital staff photo, name, position, and contact information. Users may expand or collapse the org chart branches and search for a specialist via the filter bar.&lt;/p&gt;

&lt;p&gt;Being developed with the Suite &lt;a href="https://dhtmlx.com/docs/products/dhtmlxSuite/"&gt;JavaScrip UI widgets library&lt;/a&gt;, this demo app supports wide configuration and customization options. You can improve its functionality by setting drag-n-drop, inline editing, multiselection of items, exporting to Excel, and dynami—Å loading, as well as attaching any other DHTMLX components or custom HTML content.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hospital-management-system-with-reactjs"&gt;
  &lt;/a&gt;
  Hospital management system with ReactJS
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yqz5x0Fc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enhcga73r4bxiks41bb2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yqz5x0Fc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/enhcga73r4bxiks41bb2.png" alt="reactjs-hospital-management-system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://www.codegrape.com/item/hospital-management-system-react-js-and-firebase/43571"&gt;HMS app&lt;/a&gt; is written with React JS and Firebase. It includes 10 key modules that an admin can navigate via a sidebar. The main dashboard page allows monitoring the number of hospital personnel and patients admitted during the current year. Besides, it includes several cards displaying the number of records collected by each hospital system section.&lt;/p&gt;

&lt;p&gt;The other 7 modules are responsible for patients and hospital staff (doctors, nurses, pharmacists, lab workers, receptionists, and accountants) management. The admin can add records by manually filling the form, entering personal information, contact details, and uploading a photo. Each record can be updated and deleted.&lt;/p&gt;

&lt;p&gt;The hospital management module allows allocating patients to available beds and assigning a caretaker. It also provides information about medicine prescriptions, blood supplies, scheduled surgeries and their status, birth, and death reports.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1LgRHzjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5y7ec70g9hmjrdelkk1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1LgRHzjJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s5y7ec70g9hmjrdelkk1.png" alt="react-js-hospital-management-system"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The last module focuses on payments management. On the payroll page, the admin may add, update, and delete payment details, as well as generate a payment receipt to a hospital employee.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#medicapp-hospital-admin-template"&gt;
  &lt;/a&gt;
  MedicApp hospital admin template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a-4HUIdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmi3chv1dci7v741blqu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a-4HUIdV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kmi3chv1dci7v741blqu.png" alt="medicapp-hospital-admin-dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://preview.themeforest.net/item/medicapp-medical-html5bootstrap-admin-template/full_screen_preview/25040486"&gt;MedicApp&lt;/a&gt; is a JavaScript/HTML5 template based on Bootstrap 4 grid. It includes 6 modules to manage hospital workflow, collect patient information, and handle invoices.&lt;/p&gt;

&lt;p&gt;The hospital dashboard module is built with interactive charts and a list of recent doctor appointments, thus allowing users to quickly access all necessary information within a single look. Five other modules are accountable for appointment, patient, doctor, department, and payment management. Users can add new records, specify personal and contact info, attach social network accounts, and upload profile photos.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cwbw5ZOr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzafj6l4an6nu0wmn4n2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cwbw5ZOr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lzafj6l4an6nu0wmn4n2.png" alt="medicapp-profile-page"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With MedicApp, admins can create patient and hospital staff profiles. In addition to name and contact data, such pages contain an events timeline displaying staff day-to-day activities and a chart with a number of medical visits.&lt;/p&gt;

&lt;p&gt;MedicApp allows receiving notifications, use searching and profile settings. The template provides vertical and horizontal layouts. Besides, users can change the color of a sidebar and toolbar by switching between light and dark modes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#proclinic-hospital-admin-template"&gt;
  &lt;/a&gt;
  ProClinic hospital admin template
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dgAP5c05--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aekgnayrj25tq3yqwmz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dgAP5c05--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3aekgnayrj25tq3yqwmz.png" alt="proclinic-hospital-admin-dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://preview.themeforest.net/item/proclinic-bootstrap4-hospital-admin-template/full_screen_preview/22856974"&gt;ProClinic hospital management solution&lt;/a&gt; is built with JavaScript, HTML5, and Bootstrap 4 framework. The template covers patient, doctor, appointment management and room allocation. Moreover, it allows working with payments.&lt;/p&gt;

&lt;p&gt;The admin dashboard allows hospital staff to track doctor appointments, their status, and the number of patients per year with the help of charts. Users can also check doctors‚Äô availability by searching their name and specialty in the corresponding table.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--42r2EUa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mneg8th6o17c10ud9h7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--42r2EUa5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8mneg8th6o17c10ud9h7.png" alt="proclinic-patient-list"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The other 5 modules display hospital data in grid tables. Users can add new records, edit or delete existing data and export it to CSV, PDF, and Excel. Each column allows sorting records in alphabetical order or according to their status.&lt;/p&gt;

&lt;p&gt;ProClinic includes horizontal and vertical views, the latter of which provides RTL support. Users can receive notifications, use search, change account settings, and choose between 5 color themes to tailor their experience.&lt;/p&gt;

&lt;p&gt;Have you anything to add? Let‚Äôs discuss other JS-based hospital management systems below!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>html</category>
      <category>webdev</category>
      <category>management</category>
    </item>
    <item>
      <title>Knowing when your writing sucks </title>
      <author>Grant Hair</author>
      <pubDate>Tue, 13 Apr 2021 09:03:11 +0000</pubDate>
      <link>https://dev.to/granthair5/knowing-when-your-writing-sucks-d3p</link>
      <guid>https://dev.to/granthair5/knowing-when-your-writing-sucks-d3p</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r3WezYhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ham3cu591grji20uxw04.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r3WezYhD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ham3cu591grji20uxw04.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I recently started a series I called the Bullet Point Series. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://dev.to/granthair5/bullet-point-series-intro-2hpo"&gt;https://dev.to/granthair5/bullet-point-series-intro-2hpo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This series was awful. &lt;/p&gt;

&lt;p&gt;The topics of conversation were too vague. &lt;/p&gt;

&lt;p&gt;The bullet point lists were far too long. &lt;/p&gt;

&lt;p&gt;Part 1 came before the intro. &lt;/p&gt;

&lt;p&gt;The whole thing was a mess. &lt;/p&gt;

&lt;p&gt;But I thought I was being really clever. Oh yeah short sharp blog posts is what people want that will really take off I thought. &lt;/p&gt;

&lt;p&gt;I could not have been more wrong. My implementation sucked. My writing style was lazy. It felt robotic and un-personal. That makes it very difficult for people to relate. &lt;/p&gt;

&lt;p&gt;I gave this series a few weeks, no one read it and it fell into the abyss so at that point I had 2 options: &lt;/p&gt;

&lt;p&gt;1: Continue writing in the hope that maybe I'll get lucky and this idea will really take off. &lt;/p&gt;

&lt;p&gt;2: Call it quits and know when to back out and try something new. &lt;/p&gt;

&lt;p&gt;I chose option 2 due to my programming background. Sometimes instead of following Alice down the rabbit hole the best option is to say "Nah forget that" and walk away to the pub. I usually choose this approach when tackling "impossible" bugs in a technique I like to call "next day programming" &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T8VwQLy9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/785/1%2A7LzhJXDIubcYIOzWKBRaMA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T8VwQLy9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/785/1%2A7LzhJXDIubcYIOzWKBRaMA.jpeg" alt="https://miro.medium.com/max/785/1*7LzhJXDIubcYIOzWKBRaMA.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Usually, the next day that "impossible" bug doesn't seem all that impossible but if you continue to bash your head off the wall chances are you won't break down the wall you'll just end up with a headache. &lt;/p&gt;

&lt;p&gt;So, to the handful of people that read the bullet point series I thank you but I am more grateful to those of you who chose not to read it because I feel we learn more from the stuff that doesn't work or the mistakes we make than the glory we can easily become accustomed to. &lt;/p&gt;

&lt;p&gt;Stay tuned for more non bullet point series posts and I hope you all enjoy what is to come. &lt;/p&gt;

&lt;p&gt;Thanks, üëã&lt;/p&gt;

</description>
      <category>writing</category>
    </item>
    <item>
      <title>State Management Battle in React 2021: Hooks, Redux, and Recoil</title>
      <author>Mihaela</author>
      <pubDate>Tue, 13 Apr 2021 08:32:01 +0000</pubDate>
      <link>https://dev.to/workshub/state-management-battle-in-react-2021-hooks-redux-and-recoil-2am0</link>
      <guid>https://dev.to/workshub/state-management-battle-in-react-2021-hooks-redux-and-recoil-2am0</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction:
&lt;/h2&gt;

&lt;p&gt;Over the years, the massive growth of React.JS has given birth to different state management libraries, amongst other things.&lt;br&gt;
The state management libraries available in React at our disposal at the time of this article are enormous. Therefore, knowing what state management library to choose for a particular project not to get carried away by the noise and news from the React community is a significant factor in facilitating the development of an application.&lt;br&gt;
Some developers tackle the challenge by using React Hooks; others combine them with application state management libraries like Redux or the newly release Recoil.&lt;/p&gt;

&lt;p&gt;In this article, we will discuss state management using Redux, Hooks, and Recoil in a typical React application and their best uses cases.&lt;br&gt;
 We will also try to answer questions like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What metric to consider before choosing a state management library?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Note&lt;/em&gt;: This tutorial will be beneficial to readers interested in developing React application that requires a state management library.&lt;br&gt;
This article isn‚Äôt an intro to state management in React. It requires a basic understanding of React, hooks, and a bit of Redux; hence, if you‚Äôre starting with React and state management in React, please go through these basics before beginning this tutorial üòé.&lt;/p&gt;

&lt;p&gt;##What‚Äôs State in a Nutshell?&lt;/p&gt;

&lt;p&gt;State management is simply a way to engender communication and sharing of data across components. It creates a concrete data structure to represent your app's State that you can read and write.&lt;br&gt;
Since React 16.8, every React component, whether functional or class, can have a state.&lt;br&gt;
In the simplest definition, State is a JavaScript object that represents the part of a component that can change based on a resultant action of a user. You could also say states are simply the memory of a component.&lt;br&gt;
When a user performs an action in a typical React app, changes occur in the component's state. While this isn't bad, it quickly becomes a problem if the app begins to scale; hence, such an app's complexity makes it extremely difficult to keep track of all dependencies.&lt;/p&gt;

&lt;p&gt;To answer the introduction question, suppose we are building an eCommerce application; in an app like this, just about every element can be a component ‚Äì the shopping cart, the buttons, the view cart session, checkout, login bar, etc. In this app, just a single user action of adding to the cart can influence many other components by:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;changing the State of the cart component itself,&lt;/li&gt;
&lt;li&gt;adding the cart to the user's cart history,&lt;/li&gt;
&lt;li&gt;checkout product items.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And that's to mention only a few from the other plenty stuff that we could add to the eCommerce app. If the engineers in charge do not consider scalability while developing the app, they might soon quickly run into many bugs and problems in the long run.&lt;br&gt;
Constantly debugging and revamping an app like this could eventually be a pain.&lt;/p&gt;

&lt;p&gt;The above scenarios show us the importance of the state in a typical React application.&lt;br&gt;
In managing the state in this application, we could use any library of our choice; they would still get the job done regardless. &lt;/p&gt;

&lt;p&gt;Usually, the state will have to be lifted to the closest parent component and the next until it gets to an ancestor common to both components that need the state, and then it is passed down. This process can be overwhelming and makes the state challenging to maintain. Often it might warrant you to pass data to components that do not even need it.&lt;/p&gt;

&lt;p&gt;State management gets messy as the app grows bigger. That is why you need a state management tool like Redux, Recoil, making it easier to maintain these states. &lt;br&gt;
In the following sections, we would practically look at all the state management libraries(Redux, Hooks, Recoil), their uniqueness, and what to consider before going for any of them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#redux"&gt;
  &lt;/a&gt;
  Redux
&lt;/h2&gt;

&lt;p&gt;The first on our list is Redux; It has been around for a while, pretty much the first react-based state management library.&lt;br&gt;
The state management library Redux was created to address the problem in our eCommerce app. It provides a JavaScript object called the store, which, once set up, includes all states in your application and updates them when necessary. Here is a simplified visualization of how Redux works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AtAaKDgP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_A4F5E8BF1842A18F95E53C37AE2DEB9C870C228C8E0ED5FEAAFE5522A96BF838_1616174128598_Redux%2BWorkflow.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AtAaKDgP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_A4F5E8BF1842A18F95E53C37AE2DEB9C870C228C8E0ED5FEAAFE5522A96BF838_1616174128598_Redux%2BWorkflow.jpg" alt="Redux workflow"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perhaps you're asking, why is Redux often used with React? The reason from my experiences is because, Redux handles state updates in response to user's actions, especially in UI; Asides from that, Redux can be used as standalone state management from any framework.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-redux"&gt;
  &lt;/a&gt;
  When to use Redux?
&lt;/h2&gt;

&lt;p&gt;Redux is one of the most popular React state management libraries as of the time of this article.&lt;br&gt;
In this section, we would look closely into when to use Redux in an application.&lt;/p&gt;

&lt;p&gt;Firstly, Redux allows you to manage your app's state in a single place and keep changes in your app more predictable and traceable. It makes occurring changes in your app easier to figure out. Unfortunately, all of these benefits come with specific constraints and tradeoffs.&lt;br&gt;
Frequently, developers feel using Redux adds up some boilerplate code, making little things seemingly overwhelming; however, that depends solely on the app's architectural decision.&lt;/p&gt;

&lt;p&gt;One of the easiest ways to know when you genuinely need to use Redux is when managing state locally begins to look messy. &lt;br&gt;
As the application grows, so does state sharing across components gets tedious.&lt;br&gt;
At that point, you'd now start looking for ways to make the process hassle-free.&lt;br&gt;
In the next section, we would look at why we should Redux with React.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-use-redux"&gt;
  &lt;/a&gt;
  Why use Redux?
&lt;/h2&gt;

&lt;p&gt;Using Redux with React takes away the hassle of lifting upstate, making it easier for you to trace which action causes any change, hence simplifying the app and making it easier to maintain.&lt;br&gt;
Let's take a look at some tradeoffs that come with using Redux for state management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Community Support&lt;/strong&gt;&lt;br&gt;
As the official binding library for React and Redux, React-Redux encompasses a large community of users. that makes it easier to ask for help, learn about best practices, use libraries that build on React-Redux, and reuse your knowledge across different applications.&lt;br&gt;
It's the highest stared React state management library on Github. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enhances Performance&lt;/strong&gt;&lt;br&gt;
React Redux assures performance optimization so that only the connected component only re-renders when it needs to; hence keeping the app's state global wouldn't result in any problem.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redux makes the state predictable&lt;/strong&gt;&lt;br&gt;
In Redux, the state is always predictable. If the same state and action move to a reducer, it will obtain the same result because reducers are pure functions. The state is also immutable and is never changed. It makes it possible to implement arduous tasks like infinite undo and redo. It is also possible to implement time travel ‚Äî that is, the ability to move back and forth among the previous states and view the results in real-time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;State persistence on Local Storage&lt;/strong&gt;&lt;br&gt;
Persisting some of the app‚Äôs state on local storage and restoring it after a refresh is possible. It makes storing things like cart data on local storage really awesome.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Server-side rendering&lt;/strong&gt;&lt;br&gt;
We can also use redux for server-side rendering. With it, you can handle the app's initial render by sending the state of an app to the server along with its response to the server request. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redux is maintainable&lt;/strong&gt;&lt;br&gt;
Redux is strict about how code should get designed, making it easier for someone abreast with Redux to understand any Redux application structure. It generally makes it easier to maintain. It also helps you segregate your business logic from your component tree. For large-scale apps, it's critical to keep your app more predictable and maintainable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Debugging is made easy&lt;/strong&gt;&lt;br&gt;
Redux makes it easy to debug an application. By logging actions and state, it is easy to understand coding errors, network errors, and other forms of bugs that might come up during production.&lt;br&gt;
Besides logging, it has excellent DevTools that allows you to time-travel actions, persists actions on page refresh, etc. For medium- and large-scale apps, debugging takes more time than actually developing features. &lt;/p&gt;

&lt;p&gt;While Redux has its benefits, it doesn't warrant that you add Redux in all your apps.&lt;br&gt;
Your application can work well without Redux.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#recoil"&gt;
  &lt;/a&gt;
  Recoil
&lt;/h2&gt;

&lt;p&gt;Recoil seems to be the newest tool on the state management community‚Äî A community with tons of excellent libraries like Context, Mobx, and Redux, etc.&lt;/p&gt;

&lt;p&gt;Before going into details about Recoil, I'd like to point out that this new state management library is not the "official" state management library for React.&lt;br&gt;
However, the record shows that it was built and released by engineers from Facebook's team, the React creator.&lt;br&gt;
But then, just as Redux isn't an official state management library for React, Recoil isn't either but may gain mass adoption by React enthusiasts if it proves valuable to the React ecosystem at large.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-primary-problem-recoil-solves"&gt;
  &lt;/a&gt;
  The primary problem Recoil solves
&lt;/h2&gt;

&lt;p&gt;While it has its learning curve, it still solves the same as most other state management libraries: global state management.&lt;br&gt;
After using Recoil for only a short while, here are the distinctions I think Recoils comes very handy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;React-like approach and simplicity&lt;/strong&gt;&lt;br&gt;
 The simplicity of Recoil is second to none, hence the reason it's on this list.&lt;br&gt;
 You could build whatever app you build with Recoil as you could make just as with Redux or MobX.&lt;br&gt;
 However, Recoil feels like using a global version of React's useState. It also supports Concurrent Mode, a huge plus (this is still in the works at the time of writing).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Easy Learning Curve&lt;/strong&gt;&lt;br&gt;
Recoil doesn't impose a strict learning curve as Redux and Mobx do.&lt;br&gt;
They aren't so much to learn asides from Atom and Selectors, which are easy to understand.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;App-wide observation&lt;/strong&gt;&lt;br&gt;
Similar to other state management libraries, Recoil handles app-wide state observations well. Other benefits of using Recoil includes;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Boilerplate-free API&lt;/li&gt;
&lt;li&gt;Distributed and incremental state definition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Recoil's central core concepts are Atoms and Selectors; covering this section is beyond the scope of this article. However, you can check their documentation for an in-depth overview.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#when-to-use-recoil"&gt;
  &lt;/a&gt;
  When to use Recoil
&lt;/h2&gt;

&lt;p&gt;In less than two years of its release, Recoil has grown so much that it has about 12k plus stars on Github at the time of this article. Asides from that, it's gradually gaining momentum and mass adoption amongst React enthusiasts and the React community at large.&lt;br&gt;
Personally speaking, the only reason I have used Recoil in any of my projects is when I don't intend to have so much Redux boilerplate in my codebase. I have used Recoil on production once, and nothing terrible has happened; everything still works very well to date.&lt;/p&gt;

&lt;p&gt;So when to use Recoil might solely depend on your app's architecture decision, and if you are a lover of simplicity like myself, you might jump into using Recoil üòé.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-react-hooks"&gt;
  &lt;/a&gt;
  Using React Hooks
&lt;/h2&gt;

&lt;p&gt;Hooks is one of the most outstanding features ever added to the React library since its creation. Hooks brought ‚Äòstate‚Äô to functional components. Now, functional components can create and manage local states on their own, just like class components.&lt;br&gt;
Anyone already into React should get familiar with React hooks, including &lt;code&gt;useState&lt;/code&gt;, &lt;code&gt;useEffect&lt;/code&gt;, and &lt;code&gt;useReducer&lt;/code&gt;,  etc.&lt;br&gt;
This section will discuss how handy React Hooks can be standalone without intermeddling with any external state management library.&lt;/p&gt;

&lt;p&gt;You could use React Hooks as your primary state management tool without any library, but this will depend on your experience and understanding of React hooks.&lt;/p&gt;

&lt;p&gt;They are powerful on their own and can accomplish almost anything an external library could do.&lt;/p&gt;

&lt;p&gt;To some extent, other state management tools have a few advantages. Still, their procedures make it challenging to get started. Like in the case of Redux, some boilerplate code is needed to get it working in our application; hence, it introduces unnecessary complexity.&lt;br&gt;
On the other hand, with the &lt;code&gt;useContext&lt;/code&gt; API and React Hooks, there is no need to install external libraries to get our app working. It makes it a much simpler, more straightforward way to handle global state management in React applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Assuming you‚Äôre already familiar with &lt;code&gt;useState&lt;/code&gt;, we would look into two hooks that aid the process of state management in React.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-usereducer-endraw-hook"&gt;
  &lt;/a&gt;
  The &lt;code&gt;useReducer&lt;/code&gt; Hook
&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;useReducer&lt;/code&gt; Hook came with React 16.8. Just like the &lt;code&gt;reduce()&lt;/code&gt; method in JavaScript, the &lt;code&gt;useReducer&lt;/code&gt; Hook receives two values as its argument ‚Äî a reducer function and an initial state ‚Äî and then returns a new state:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const [state, dispatch] = useReducer((state, action) =&amp;gt; {
  const { type } = action;
  switch(action) {
    case 'action description':
      const newState = // do something with the action
      return newState;
    default:
      throw new Error()
  }
}, []);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;In the snippet above, we‚Äôve defined our state and a corresponding method, &lt;code&gt;dispatch&lt;/code&gt;, handling it. When we call the &lt;code&gt;dispatch&lt;/code&gt; method, the &lt;code&gt;useReducer()&lt;/code&gt; Hook will perform an action based on the &lt;code&gt;type&lt;/code&gt; that our method receives in its action argument:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;...
return (
  &amp;lt;button onClick={() =&amp;gt;
    dispatch({ type: 'action type'})}&amp;gt;
  &amp;lt;/button&amp;gt;
)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h3&gt;
  &lt;a href="#usecontext"&gt;
  &lt;/a&gt;
  useContext
&lt;/h3&gt;

&lt;p&gt;This hook is used to get the current context of a Provider. To create and provide a context, we use the &lt;code&gt;React.createContext&lt;/code&gt; API.&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const myContext = React.createContext()
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;We put the root component between the &lt;code&gt;myContext&lt;/code&gt; Provider:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function App() {
    return (
        &amp;lt;myContext.Provider value={900}&amp;gt;
            &amp;lt;Root /&amp;gt;
        &amp;lt;/myContext.Provider&amp;gt;
    )
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;To consume the value provided by the &lt;code&gt;&amp;lt;myContext.Provider&amp;gt;&amp;lt;/myContext.Provider&amp;gt;&lt;/code&gt; we use the &lt;code&gt;useContext&lt;/code&gt; hook.&lt;/p&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;function Root() {&lt;br&gt;
    const value = useContext(myContext)&lt;br&gt;
    return (&lt;br&gt;
        &amp;lt;&amp;gt;&lt;br&gt;
            &amp;lt;h3&amp;gt;My Context value: {value} &amp;lt;/h3&amp;gt;&lt;br&gt;
        &amp;lt;/&amp;gt;&lt;br&gt;
    )&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;
&lt;h2&gt;
&lt;br&gt;
  &lt;a href="#using-usereducer-and-usecontext"&gt;&lt;br&gt;
  &lt;/a&gt;&lt;br&gt;
  Using useReducer and useContext&lt;br&gt;
&lt;/h2&gt;

&lt;p&gt;Using useContext together with useReducer takes the component co-located state management on another level. Suddenly we can pass the state container created by useReducer and its dispatch function to any component from any top-level component. It can also be the most top-level component to make the state "global." It's also possible to pass things down only using React props, but React's Context API makes your state and dispatch function available anywhere without explicitly passing everything down the component tree.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this article, we tried to cover the most trending state management tools for React in 2021, how they play an essential role in React state management, and when to use them in a project.&lt;br&gt;
I'd like to know what your experiences are in managing state in a typical React application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://blog.logrocket.com/when-and-when-not-to-use-redux-41807f29a7fb/"&gt;When (and when not) to use Redux&lt;/a&gt; - Christian Nwamba&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.robinwieruch.de/react-state-usereducer-usestate-usecontext"&gt;React State Hooks: useReducer, useState, useContext&lt;/a&gt; - Robin Weiruch&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.logrocket.com/react-recoil-reusable-code-block-component/"&gt;Recoil in action: Building a reusable code block component&lt;/a&gt; - Tomi Odunsanya&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://blog.logrocket.com/refactoring-redux-app-to-use-recoil/"&gt;Refactoring a Redux app to use Recoil&lt;/a&gt; - Ohans Emmanuel &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://dev.to/alexandrudanpop/why-react-projects-still-use-redux-in-2020-395p"&gt;Why React projects still use Redux&lt;/a&gt; - Alexandru-Dan Pop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Article by Blessing Krofegha, originally published on &lt;a href="https://javascript.works-hub.com/learn/state-management-battle-in-react-2021-hooks-redux-and-recoil-9977a"&gt;JavaScript Works&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>redux</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to make use of Vue.js Plugins in Nuxt</title>
      <author>Joel Olawanle</author>
      <pubDate>Tue, 13 Apr 2021 08:08:49 +0000</pubDate>
      <link>https://dev.to/olawanle_joel/how-to-make-use-of-vue-js-plugins-in-nuxt-2bao</link>
      <guid>https://dev.to/olawanle_joel/how-to-make-use-of-vue-js-plugins-in-nuxt-2bao</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In computing, a plugin is a software component that makes it easier for users to add a specific feature/functionality to a computer program or website. For example, if you want to sell products, take donations or maybe add carousels to your website/web application, you are going to need a plugin to handle that faster without needing to write lots of complicated codes.&lt;/p&gt;

&lt;p&gt;Nuxt.js is a frontend framework built upon Vue.js that offers great development features such as server-side rendering (SSR), automatically generated routes, improved meta tags managing, and SEO improvement. &lt;/p&gt;

&lt;p&gt;In this article, I will be showing you how to make use of Vue.js Plugins in Nuxt.js understanding fully well that Nuxt is a frontend framework built upon Vue.js.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#vue-plugins"&gt;
  &lt;/a&gt;
  Vue Plugins
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Vue.js&lt;/strong&gt; &lt;strong&gt;plugins&lt;/strong&gt; are a powerful but simple way to add global-level functionality to your app. They have a variety of uses, from distributing app-wide components to adding additional capabilities such as routing and immutable data stores to your app. &lt;/p&gt;

&lt;p&gt;Making use of Vue Plugins in vue is much easier due to how the documentation properly explains it, but in the case of nuxt, this can be a little bit tricky for beginners but in this article, I will explain the various ways of installing vue plugins in Nuxt by installing the &lt;a href="https://www.npmjs.com/package/vue-awesome-swiper"&gt;vue-awsome-swiper plugin&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#creating-nuxt-app"&gt;
  &lt;/a&gt;
  Creating Nuxt App
&lt;/h2&gt;

&lt;p&gt;This first thing would be for us to create our nuxt app, and suppose you have a nuxt app and just want to learn how to install plugins, you can click &lt;a href="https://www.dropbox.com/scl/fi/s2h9b4afswbq0jm5d3p43/Making-use-of-Vue-Plugins-in-Nuxt.paper?dl=0&amp;amp;rlkey=oessw2xaxa0q9q0gmzy2raaao#:uid=490193140321199466227516&amp;amp;h2=Installing-Vue-awesome-swiper"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can create our Nuxt app by either using the scaffolding tool ‚Äî &lt;code&gt;create-nuxt-app&lt;/code&gt; ‚Äî or building from scratch. &lt;/p&gt;

&lt;p&gt;To get started, run the following using your package manager of choice:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;    npx create-nuxt-app &lt;span class="nt"&gt;&amp;lt;project-name&amp;gt;&lt;/span&gt;
    //or
    yarn create nuxt-app &lt;span class="nt"&gt;&amp;lt;project-name&amp;gt;&lt;/span&gt;
    //or
    npm init nuxt-app &lt;span class="nt"&gt;&amp;lt;project-name&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Be sure to replace &lt;code&gt;&amp;lt;project-name&amp;gt;&lt;/code&gt; with the name of your project/app.&lt;/p&gt;

&lt;p&gt;Once installation is complete, we will be presented with a series of questions to help configure our application for development, including name, Nuxt options, UI framework, TypeScript, linter, testing framework, and the like.&lt;/p&gt;

&lt;p&gt;The answers to these questions are mostly personal preference. Here‚Äôs what my configuration looks like for this article:&lt;br&gt;
Once that‚Äôs done, we‚Äôll run the following command in our terminal:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pG-ZVCTv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616594763052_1.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pG-ZVCTv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616594763052_1.PNG" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;    $ cd &lt;span class="nt"&gt;&amp;lt;project-name&amp;gt;&lt;/span&gt;
    $ npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With the above steps complete, our app should be running on &lt;a href="http://localhost:3000/"&gt;http://localhost:3000&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installing-vueawesomeswiper"&gt;
  &lt;/a&gt;
  Installing Vue-awesome-swiper
&lt;/h2&gt;

&lt;p&gt;This plugin can be installed either using yarn or npm in your preferred package manager.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;    npm install swiper vue-awesome-swiper --save
    //or
    yarn add swiper vue-awesome-swiper
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once that is done we can now register our plugin. You can either register your plugin globally or locally:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#global-registration"&gt;
  &lt;/a&gt;
  Global Registration
&lt;/h2&gt;

&lt;p&gt;This is done by creating a file in the plugins directory of your Nuxt project then import the vue-awesome-swiper and finally tell Vue to use it. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Don‚Äôt get confused, I will explain all these in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UqNW-zpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616599958359_3.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UqNW-zpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616599958359_3.PNG" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;For example&lt;/strong&gt; I created a file called ‚Äúvue-awesome-swiper.js‚Äù in the plugins folder, You can give your file any name but so you don‚Äôt get confused in a scenario where you will be making use of so many plugins this convention might be the best. Once you have created the file &lt;code&gt;plugins/vue-awesome-swiper.js&lt;/code&gt;, then paste the code below in the file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;//plugins/vue-awesome-swiper.js&lt;/span&gt;

    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Vue&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;VueAwesomeSwiper&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-awesome-swiper&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;swiper/swiper-bundle.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="nx"&gt;Vue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;use&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;VueAwesomeSwiper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="cm"&gt;/* { default options with global component } */&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; The first three lines of the code above are simply importing the vue-awesome-swiper and the swiper-bundle CSS file. The last line of code tells Vue to use the plugin we just imported. Without the &lt;code&gt;vue.use()&lt;/code&gt; command nothing will work.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Once you have your plugin file set up, the next thing will be to add the file path inside the &lt;code&gt;plugins&lt;/code&gt; key of our &lt;code&gt;nuxt.config.js&lt;/code&gt;. The plugins property lets you add Vue.js plugins easily to your main application. All the paths defined in the &lt;code&gt;plugins&lt;/code&gt; property will be imported before initializing the main application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="c1"&gt;//nuxt.config.js&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;plugins&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;~/plugins/vue-awesome-swiper.js&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can now make use of this plugin in your application. To properly explain how this plugin works I will be making use of the vue-awesome-swiper to convert the image below which is cool on the desktop to slide on mobile devices.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TpT_SUpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616592705018_2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TpT_SUpQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://paper-attachments.dropbox.com/s_7B7E05198F7065003CEA689008D9697DF876E87EB4B74CA5A1DABCA4FC973C94_1616592705018_2.PNG" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating a slider&lt;/strong&gt;&lt;br&gt;
Below is a code to a very simple template you can either use in your components or pages to create a slider.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;swiper&lt;/span&gt; &lt;span class="na"&gt;ref=&lt;/span&gt;&lt;span class="s"&gt;"mySwiper"&lt;/span&gt; &lt;span class="na"&gt;:options=&lt;/span&gt;&lt;span class="s"&gt;"swiperOptions"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;Slide 1&lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;Slide 2&lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;Slide 3&lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;Slide 4&lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;Slide 5&lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"swiper-pagination"&lt;/span&gt; &lt;span class="na"&gt;slot=&lt;/span&gt;&lt;span class="s"&gt;"pagination"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/swiper&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;template&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="nt"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;carrousel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;swiperOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;pagination&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.swiper-pagination&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="c1"&gt;// Some Swiper option/callback...&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mySwiper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$swiper&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Current Swiper instance object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slideTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="k"&gt;script&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Explaining the code above, in the template section we have a &lt;code&gt;swiper&lt;/code&gt; tag consisting of 6 &lt;code&gt;swiper-slide&lt;/code&gt; tags. The content of your slide will be in the &lt;code&gt;swiper-slide&lt;/code&gt; tag. For example, take a look at the code below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight vue"&gt;&lt;code&gt;    &lt;span class="nt"&gt;&amp;lt;swiper-slide&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mt-14 mx-10 flex flex-col items-center space-y-6"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt;
          &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"~/assets/images/1.jpg"&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"rounded-xl h-80 w-80 object-cover object-center"&lt;/span&gt;
          &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;
        &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

        &lt;span class="nt"&gt;&amp;lt;h2&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"font-bold text-4xl"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;$5&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"text-center text-gray-300"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
          Lorem, ipsum dolor sit amet consectetur adipisicing elit.
          Dolor tempore at labore sed molestias soluta asperiores
          aliquam ipsa consequuntur.
        &lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt;
          &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;
          &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"bg-gray-900 px-10 py-4 rounded-xl text-xl uppercase"&lt;/span&gt;
          &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Buy Now&lt;span class="nt"&gt;&amp;lt;/a&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/swiper-slide&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In case you want to see how I was able to make use of the Vue-awesome swiper to convert that image to a slider as seen below, you can find my source code &lt;a href="https://github.com/olawanlejoel/explaining-vue-plugins"&gt;here&lt;/a&gt; and the live site &lt;a href="https://explaining-vue-plugins.netlify.app/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---ovoRolW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/Buji9k1yK8hMlVNxry/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---ovoRolW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://media0.giphy.com/media/Buji9k1yK8hMlVNxry/giphy.gif" alt="mobile-swiper"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#local-registration"&gt;
  &lt;/a&gt;
  Local Registration
&lt;/h2&gt;

&lt;p&gt;As I said earlier, you can either register your plugin globally or locally. To install your plugin locally, all you have to do is create a component or page and import the plugin within the script tag just as it‚Äôs done when you import components or anything in vue.js.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Swiper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SwiperSlide&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;directive&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-awesome-swiper&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;swiper/swiper-bundle.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

      &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;carrousel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;swiperOptions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;pagination&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;.swiper-pagination&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
              &lt;span class="p"&gt;},&lt;/span&gt;
              &lt;span class="c1"&gt;// Some Swiper option/callback...&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;Swiper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;SwiperSlide&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="na"&gt;directives&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;directive&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="na"&gt;computed&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$refs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mySwiper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;$swiper&lt;/span&gt;
          &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="nx"&gt;mounted&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Current Swiper instance object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slideTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; You must make sure you already have your plugin installed either via npm or yarn before this would work.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You might begin to ask yourself of the importance or essence of making use of a local registration when you can easily make use of it globally. The truth is that it‚Äôs totally up to you, both ways work fine but suppose you would be making use of the swiper plugin more than once then registering it globally would be better for cleaner codes, and in a situation you are working in a team.&lt;/p&gt;

&lt;p&gt;I decided to extract what was added to the script tag for the local registration below, so you would understand perfectly.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Swiper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SwiperSlide&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;directive&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;vue-awesome-swiper&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;swiper/swiper-bundle.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;

    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;components&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;Swiper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;SwiperSlide&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
      &lt;span class="na"&gt;directives&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;swiper&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;directive&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Explaining the code above, we imported the plugin‚Äôs components and directives and then declared them.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; The example used for the global registration would also work for the local registration.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We‚Äôve taken a look at the basics of making use of vue-plugins in nuxt.js. Though there are few other things I did not explain, I believe this would help you.ü§ó&lt;/p&gt;

&lt;p&gt;Don't forget to check &lt;a href="https://nuxtjs.org/docs/2.x/directory-structure/plugins#vue-plugins"&gt;Nuxt Documentation&lt;/a&gt; for more information.&lt;/p&gt;




&lt;p&gt;As always, any questions or suggestions, please feel free to leave a response or &lt;a href="https://twitter.com/olawanle_joel"&gt;tweet me&lt;/a&gt; ü§≠! Be sure to connect with me on &lt;a href="https://github.com/olawanlejoel"&gt;socials&lt;/a&gt;! üòé&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;




</description>
      <category>vue</category>
      <category>nuxt</category>
      <category>jamstack</category>
      <category>javascript</category>
    </item>
    <item>
      <title>5 Tips On How To Stay Motivated And Productive As A Developer</title>
      <author>Boyan Iliev</author>
      <pubDate>Tue, 13 Apr 2021 08:00:15 +0000</pubDate>
      <link>https://dev.to/boiliev/5-tips-on-how-to-stay-motivated-and-productive-as-a-developer-mgp</link>
      <guid>https://dev.to/boiliev/5-tips-on-how-to-stay-motivated-and-productive-as-a-developer-mgp</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Whether you are a senior developer, or you have just started getting into code, there comes a time when you start losing motivation. It is normal to lose motivation and that lack of motivation can sometimes stick for a long time. Unfortunately, there can be hundreds of reasons that can make you lose motivation. For example, you can't get your code to run the way you want it to. This happens to a lot of us and it can be hard to get back to being productive.&lt;/p&gt;

&lt;p&gt;In this post, I would like to share with you some tips that you can try to help you stay motivated or get that motivation back.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#stay-off-your-phone"&gt;
  &lt;/a&gt;
  Stay off your phone
&lt;/h1&gt;

&lt;p&gt;It's no secret that our mobile devices are very addictive. Of course, some people can't afford to stay off their phone because it is connected with their work. But for most of us, it is a big waste of time. When we surf the internet we can really lose motivation. Spending way too much time on social media, YouTube, or Netflix can make us lose motivation and even make us depressed. This is why when you start feeling down and feel that you are getting a little unproductive, just leave your phone at the other end of the room. &lt;strong&gt;Or just try to stay off of it for as long as you can&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I noticed that this really helped me to be more concentrated and made me enjoy much more the time I spent coding.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#set-minigoals-for-you-to-complete"&gt;
  &lt;/a&gt;
  Set mini-goals for you to complete
&lt;/h1&gt;

&lt;p&gt;If you don't have a &lt;strong&gt;daily to-do list&lt;/strong&gt;, I highly recommend that you make one. You can add in it all the stuff that you want to achieve the next day. So the night before you go to bed make a list and add a few small tasks to it. Some that will be helpful for you, but at the same time not that hard. When you finish one of those tasks and see the progress that you've done when crossing it out from your list will give you a boost of motivation.&lt;/p&gt;

&lt;p&gt;Also, I would recommend that you try to complete the hardest tasks first. I personally prefer to get them out of the way first and then do the other stuff.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wake-up-properly"&gt;
  &lt;/a&gt;
  Wake up properly
&lt;/h1&gt;

&lt;p&gt;The worst thing to do when you wake up is to get straight away on your phone. You've just slept 7-10 hours and you're body is dehydrated and your brain is confused. And it's not the best idea for your eyes to be staring at a screen before they have even opened up yet.&lt;/p&gt;

&lt;p&gt;I would recommend that you lay in bed for 5 minutes so that you can fully wake up. Then go &lt;strong&gt;drink as much water as you can so that you can hydrate after a night of sleeping&lt;/strong&gt;. Try to stay off any screens for as long as you can in the morning so that your body and mind can get ready for the day. You will feel much more energetic and will have all the power to do all of the stuff that you have to.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#surround-yourself-with-techrelated-stuff"&gt;
  &lt;/a&gt;
  Surround yourself with tech-related stuff
&lt;/h1&gt;

&lt;p&gt;Try to make the stuff you do during the day as connected to web development as possible. Seeing what other people create and the knowledge their share on all the different web dev community websites really makes you feel like you are a part of something big and lift you up. Try to chat with as many developers as you can. We have such an amazing community that just by getting surrounded by it can give you the motivation you need. Some of these sites are the &lt;a href="https://devdojo.com/"&gt;DevDojo&lt;/a&gt; website and &lt;a href="https://dev.to/"&gt;DEV&lt;/a&gt;. Also, another cool thing is the &lt;a href="https://daily.dev/"&gt;daily.dev&lt;/a&gt; extension.&lt;/p&gt;

&lt;p&gt;Try sharing some of your knowledge or share a project your working on. See all the feedback you get. You can learn so many things that way. Or you can help someone else learn something. It's really fun and it can really boost your motivation and productivity when you see other developers that have the same interests as you.&lt;/p&gt;

&lt;p&gt;And finally:&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#look-back-at-the-things-you-have-accomplished"&gt;
  &lt;/a&gt;
  Look back at the things you have accomplished
&lt;/h1&gt;

&lt;p&gt;When you think that you are stuck and can't get anywhere, for example, if you don't know how to get your code to run properly, just sit for a moment and think of how you used to be when you started programming. Think of all the progress that you have made in the last couple of months. This can boost your motivation and productivity by seeing how far you've come.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;These things have really helped me stay motivated and productive. I kept losing motivation because I had to study for my exams and then I couldn't get motivated to code. When I started using these tips, I became more motivated than I have ever been. &lt;/p&gt;

&lt;p&gt;I hope that this post has helped you get more productive and motivated!&lt;/p&gt;

</description>
      <category>developer</category>
      <category>productivity</category>
      <category>motivation</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Understanding Web Vitals</title>
      <author>kaspera</author>
      <pubDate>Tue, 13 Apr 2021 07:54:51 +0000</pubDate>
      <link>https://dev.to/kaspera/understanding-web-vitals-2d6c</link>
      <guid>https://dev.to/kaspera/understanding-web-vitals-2d6c</guid>
      <description>&lt;p&gt;Web Vitals are a set of metrics that Google views as essential to a website‚Äôs user experience (UX). Google started the Web Vitals initiative to provide website owners unified guidance for quality signals regarding UX.&lt;/p&gt;

&lt;p&gt;Web Vitals can be grouped into two categories: Core Web Vitals and Other Web Vitals. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--14BLxVJT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o252v0brh3uui5atu9rv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--14BLxVJT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o252v0brh3uui5atu9rv.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When reading articles about Web Vitals, these will often refer to the Core Web Vitals. As the name reveals, these are the metrics that, according to Google, matter the most.&lt;/p&gt;

&lt;p&gt;And Google has really put their money where their mouth is. Starting May 2021, Core Web Vitals will become an official ranking factor in Google.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#core-web-vitals"&gt;
  &lt;/a&gt;
  Core Web Vitals
&lt;/h2&gt;

&lt;p&gt;The Core Web Vitals consists of three metrics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Largest Contentful Paint (LCP) &lt;/li&gt;
&lt;li&gt;First Input Delay (FID)&lt;/li&gt;
&lt;li&gt;Cumulative Layout Shift (CLS)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are metrics that all site owners should measure. Google also captures these metrics in their &lt;a href="https://developers.google.com/web/tools/chrome-user-experience-report"&gt;Chrome User Experience Report (CrUX)&lt;/a&gt;, powered by real-world Chrome users‚Äô experience.&lt;/p&gt;

&lt;p&gt;Tip: You can monitor your own and your competitor‚Äôs CrUX-data by using Alertdesk‚Äôs competitor monitoring solution.&lt;/p&gt;

&lt;p&gt;The Core Web Vitals are not set in stone but will evolve over time. For now, they focus on three aspects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Loading ‚Äì Largest Contentful Paint (LCP)&lt;/li&gt;
&lt;li&gt;Interactivity ‚Äì First Input Delay (FID)&lt;/li&gt;
&lt;li&gt;Visual Stability ‚Äì Cumulative Layout Shift (CLS)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let‚Äôs look at what exactly they are and what the recommended ‚Äúscore‚Äù is for each. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#largest-contentful-paint-lcp"&gt;
  &lt;/a&gt;
  Largest Contentful Paint (LCP)
&lt;/h3&gt;

&lt;p&gt;Largest Contentful Paint (LCP) is used for measuring perceived load speed. It shows the time it takes to load what is most likely the main content ‚Äì the largest image or text block visible for the user.&lt;/p&gt;

&lt;p&gt;The elements that are considered in LCP are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Images (

&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;

,

&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt;

,

&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;

)
* Videos (

&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;

)&lt;/li&gt;
&lt;li&gt;Background images (elements loaded via the url() function)&lt;/li&gt;
&lt;li&gt;Block level elements (

&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;

,

&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;

, etc. ‚Äì &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements"&gt;see full list here&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;A good LCP is anything below 2.5 seconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZwOQE4kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umwerbzoszmrn5dnr4b7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZwOQE4kc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/umwerbzoszmrn5dnr4b7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/lcp/"&gt;You can read more about Largest Contentful Paint (LCP) here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-input-delay-fid"&gt;
  &lt;/a&gt;
  First Input Delay (FID)
&lt;/h3&gt;

&lt;p&gt;First Input Delay (FID) is used for measuring load responsiveness. It shows the time it takes from a user interacting with a page (e.g., clicking a button) to the browser begin processing this event. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good FID is anything below 100 milliseconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cwEIxsdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0weysaa6harnlwjuq3w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cwEIxsdr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h0weysaa6harnlwjuq3w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/fid/"&gt;You can read more about First Input Delay (FID) here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cumulative-layout-shift-cls"&gt;
  &lt;/a&gt;
  Cumulative Layout Shift (CLS)
&lt;/h3&gt;

&lt;p&gt;Cumulative Layout Shift (CLS) is used for measuring visual stability. It represents how often a user experiences unexpected layout shifts.&lt;/p&gt;

&lt;p&gt;A layout shift is when an element changes its position. These individual layout shifts get a score (layout shift score = impact fraction * distance fraction) and accumulate to the CLS score.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good CLS is anything below a 0.1 score.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_NV_iSHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwx5mkvdoa7lh4harcv1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_NV_iSHM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwx5mkvdoa7lh4harcv1.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/cls/"&gt;You can read more about Cumulative Layout Shift (CLS) here.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-web-vitals"&gt;
  &lt;/a&gt;
  Other Web Vitals
&lt;/h2&gt;

&lt;p&gt;Even though Core Web Vitals are the most important of the Web Vitals (&lt;a href="https://media.giphy.com/media/aVtdz7iNVPI1W/giphy.gif"&gt;duh&lt;/a&gt;), it doesn‚Äôt mean the Other Web Vitals aren‚Äôt. They also play a role in the overall user experience.&lt;/p&gt;

&lt;p&gt;Let‚Äôs take a look at them. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#first-contentful-paint-fcp"&gt;
  &lt;/a&gt;
  First Contentful Paint (FCP)
&lt;/h3&gt;

&lt;p&gt;Like LCP, First Contentful Paint (FCP) is also used for measuring perceived load speed. It shows the time it takes for any part of the page‚Äôs content (text, images, background images, , and non-white -elements) to be shown on screen. &lt;/p&gt;

&lt;p&gt;So the time it takes for the first content to be visible for the user. Having a fast FCP helps to reassure the user that something is happening.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good FCP is anything below 2 seconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/fcp/"&gt;You can read more about First Contentful Paint (FCP) here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#time-to-interactive-tti"&gt;
  &lt;/a&gt;
  Time To Interactive (TTI)
&lt;/h3&gt;

&lt;p&gt;Like FID, Time To Interactive (TTI) is also used for measuring load responsiveness. It shows the time it takes for the page to be capable of responding to user input quickly and reliably.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good TTI is anything below 3.8 seconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/tti/"&gt;You can read more about Time To Interactive (TTI) here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#total-blocking-time-tbt"&gt;
  &lt;/a&gt;
  Total Blocking Time (TBT)
&lt;/h3&gt;

&lt;p&gt;Total Blocking Time (TBT) is yet another metric for measuring load responsiveness. It measures the time between First Contentful Paint (FCP) and Time to Interactive (TTI).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good TBT is anything below 300 ms.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/tbt/"&gt;You can read more about Total Blocking Time (TBT) here.&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#speed-index"&gt;
  &lt;/a&gt;
  Speed Index
&lt;/h3&gt;

&lt;p&gt;Speed Index measures how quickly content gets displayed during load. It gets measured by capturing a video of the page loading and afterward computing the visual progression between frames. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A good Speed Index is anything below 4.3 seconds.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://web.dev/speed-index/"&gt;You can read more about Speed Index here.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to dive into the juicy details about Web Vitals and how to optimize them, we recommend you check out Google‚Äôs official documentation about Web Vitals: &lt;a href="https://web.dev/learn-web-vitals/"&gt;https://web.dev/learn-web-vitals/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-alertdesk-to-track-your-web-vitals"&gt;
  &lt;/a&gt;
  ü©∫ Use Alertdesk to track your Web Vitals
&lt;/h2&gt;

&lt;p&gt;Alertdesk helps you keep track of your page‚Äôs web vitals.&lt;/p&gt;

&lt;p&gt;Each day we run an automated test from both a Mobile and a Desktop perspective, where we collect and store your metrics.&lt;/p&gt;

&lt;p&gt;Dive into our powerful reports and find the low-hanging fruits that can skyrocket your performance.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.alertdesk.com/?utm_source=devto&amp;amp;utm_medium=organic&amp;amp;utm_campaign=article&amp;amp;utm_content=understanding-web-vitals"&gt;Start tracking your web vitals today with Alertdesk. Try us free for 14 days.&lt;/a&gt;&lt;/p&gt;

</description>
      <category>performance</category>
      <category>monitoring</category>
      <category>ux</category>
    </item>
    <item>
      <title>How Can We Identify Emerging Influencers Using Machine Learning?</title>
      <author>Kyle Jones</author>
      <pubDate>Tue, 13 Apr 2021 07:53:29 +0000</pubDate>
      <link>https://dev.to/kerldev/how-can-we-identify-emerging-influencers-using-machine-learning-2eei</link>
      <guid>https://dev.to/kerldev/how-can-we-identify-emerging-influencers-using-machine-learning-2eei</guid>
      <description>&lt;p&gt;In the age of social media more than ever, marketing teams are turning to influencers to advertise their new, innovative products or services. The number of followers, impressions and engagements all impact traffic, which in turn helps drive one very important metric - sales. This makes the ability to identify the next up-and-coming influencer all the more important and valuable, with 61% of marketers agreeing that it‚Äôs difficult to find the right influencers for a campaign.&lt;/p&gt;

&lt;p&gt;Influencer marketing is an industry that has seen rapid growth over the past few years with an increase between 40 and 50 percent year on year, according to &lt;a href="https://influencermarketinghub.com/influencer-marketing-benchmark-report-2020/"&gt;Influencer Marketing Hub&lt;/a&gt;. It allows companies to increase brand awareness and trust through directly interacting with their target audience in a way never seen before in other strands of marketing.&lt;/p&gt;

&lt;p&gt;Take &lt;a href="https://www.gymshark.com/"&gt;Gymshark&lt;/a&gt;, recently valued at ¬£1.3bn, this fitness clothing brand was one of the earliest adopters of the influencer marketing model. They are renowned for marketing products through their community of Instagram influencers and YouTubers, with their success being a testament to the importance of influencer marketing, showing that when done right it can be a key driver to exponential growth. &lt;/p&gt;

&lt;p&gt;As an industry, influencer marketing is expected to hit &lt;a href="https://digitalmarketinginstitute.com/en-gb/blog/20-influencer-marketing-statistics-that-will-surprise-you"&gt;$10bn in 2020&lt;/a&gt;, growing enormously from just $3bn in 2017. Increasingly companies are valuing the involvement of influencers in their marketing, so it is now more important than ever to be able to identify emerging influencers and those with the most potential to drive success for a brand. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-what-makes-an-influencer"&gt;
  &lt;/a&gt;
  So what makes an influencer?
&lt;/h2&gt;

&lt;p&gt;The most obvious type of influencer are celebrities - individuals with large numbers of followers who are often idolized. Similarly, other types of influencers include industry experts, thought leaders and bloggers.&lt;br&gt;
These categories, although relatively vague terms, all have some similar traits that provide us with some insight on what features to look for when trying to identify the next big influencer.&lt;br&gt;
Common traits in these categories are that the individuals often have a sizable audience that they engage with through some kind of platform, and in most cases, they are individuals who talk about topics in a particular niche. For example, Andrew Ng could be considered an influencer due to his sizeable audience on Twitter, where he regularly posts about machine learning.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-we-quantify-influence"&gt;
  &lt;/a&gt;
  How do we quantify influence?
&lt;/h2&gt;

&lt;p&gt;As with a large amount of machine learning problems, being able to express a complex idea like influence is paramount to identifying trends. In the context of social media, there are three main types of data we can use:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Number of Followers&lt;/li&gt;
&lt;li&gt;Number of Impressions&lt;/li&gt;
&lt;li&gt;Engagements&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The number of followers and impressions, when measured over time, gives us an idea of the reach of the potential influencer. Engagements then give us information about how the individual is able to convert that reach, giving us insight into how likely the users that are viewing the posts are to be motivated into doing a particular thing, such as purchasing a product.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-we-predict-an-emerging-influencer"&gt;
  &lt;/a&gt;
  How do we predict an emerging influencer?
&lt;/h2&gt;

&lt;p&gt;A &lt;a href="http://cs229.stanford.edu/proj2014/Ruishan%20Liu,%20Yang%20Zhao,%20Liuyu%20Zhou,%20Predict%20Influencers%20in%20the%20Social%20Network.pdf"&gt;paper published by students at Stanford University&lt;/a&gt; discusses a potential solution, while Kaggle (a website which hosts data science and machine learning competitions) &lt;a href="https://www.kaggle.com/c/predict-who-is-more-influential-in-a-social-network"&gt;has several others&lt;/a&gt;. Kaggle's most effective entry makes use of a Bayesian Optimized Light Gradient Boosted Machine that is trained using data that compares two individual's social media statistics, including those discussed above. Bayesian optimization is a process that allows us to fine-tune hyper-parameters for a machine learning model. &lt;a href="https://medium.com/@pushkarmandot/https-medium-com-pushkarmandot-what-is-lightgbm-how-to-implement-it-how-to-fine-tune-the-parameters-60347819b7fc"&gt;LightGBM is a relatively new gradient boosting framework that uses tree-based learning&lt;/a&gt; and differs from other tree-based algorithms in that the tree grows vertically (leaf-wise) rather than horizontally (level-wise).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hPHRLbYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vin1i38uvgurnkw6vgv9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hPHRLbYv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/vin1i38uvgurnkw6vgv9.jpg" alt="Diagram Illustrating Leaf-wise Tree Growth" title="Illustration of Leaf-wise Growth"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7xAoFcDP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/73mrqryvmwh8je7b2r4m.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7xAoFcDP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/73mrqryvmwh8je7b2r4m.jpg" alt="Diagram Illustrating Level-wise Tree Growth" title="Illustration of Level-wise Growth"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Some advantages of LightGBM is that it is fast, requires a lower amount of memory and supports GPU learning, however, it is quite sensitive to overtraining. In this implementation, the LightGBM manages to correctly identify which of the two individuals are the most influential with around 87% accuracy, making this model ideal for assisting in deciding between a relatively low number of potential influencers. However, despite this being one of the most accurate machine learning solutions for this problem, it is held back by the need for a large amount of curated data in order to be effective. This means that access to a large volume of user data needs to be accessed via an API or by web scraping, before then pre-processing the data into a given format to be used by the model.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-we-do-to-improve-the-implementation"&gt;
  &lt;/a&gt;
  What can we do to improve the implementation?
&lt;/h2&gt;

&lt;p&gt;The difficulty in quantifying influence is that these values better describe an individual‚Äôs reach rather than their influence. However, we could also use Natural Language Processing techniques such as sentiment analysis, named entity recognition and document classification to analyse the post itself, along with the text-based engagements. This would give us a better understanding of what topics and what type of posts get a better reach as well as which of these garner the most positive interactions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-decide-if-the-influencer-youve-predicted-is-right-for-you"&gt;
  &lt;/a&gt;
  How do you decide if the influencer you‚Äôve predicted is right for you?
&lt;/h2&gt;

&lt;p&gt;Even with the work mentioned above, the influencer may not necessarily be the right fit for the strategy you have in mind. In order to build brand awareness or to increase a social following, you might need to choose a macro-influencer, whereas to reach an ideal audience a micro-influencer might be a better choice. The relevancy of the influencer's usual posts and the quality of the post could also contribute to choosing a different influencer.&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
