<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>What is Apple thinking?</title>
      <author>Ben Halpern</author>
      <pubDate>Mon, 09 Aug 2021 14:00:35 +0000</pubDate>
      <link>https://dev.to/ben/what-is-apple-thinking-1hge</link>
      <guid>https://dev.to/ben/what-is-apple-thinking-1hge</guid>
      <description>&lt;p&gt;It's been a few days. You've probably read about this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apple-plans-to-scan-us-iphones-for-child-abuse-imagery"&gt;
  &lt;/a&gt;
  &lt;a href="https://www.ft.com/content/14440f81-d405-452f-97e2-a81458f5411f"&gt;Apple plans to scan US iPhones for child abuse imagery&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Apple intends to install software on American iPhones to scan for child abuse imagery, according to people briefed on its plans, raising alarm among security researchers who warn that it could open the door to surveillance of millions of people‚Äôs personal devices.&lt;/p&gt;

&lt;p&gt;Apple detailed its proposed system ‚Äî known as ‚ÄúneuralMatch‚Äù ‚Äî to some US academics earlier this week, according to two security researchers briefed on the virtual meeting. The plans could be publicised more widely as soon as this week, they said.&lt;/p&gt;

&lt;p&gt;The automated system would proactively alert a team of human reviewers if it believes illegal imagery is detected, who would then contact law enforcement if the material can be verified. The scheme will initially roll out only in the US.&lt;/p&gt;

&lt;p&gt;Apple declined to comment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Has Apple spoken more to this yet? I have yet to see anyone in our industry offer up rationale for why this company that fought so hard to deny the FBI access to a terrorist's iPhone is no proactively developing surveillance functionality into the device in this way. I think we can all agree that preventing child predators is a good thing, but not like this.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/VtvjbmoDx-I"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;With a few days to digest this and gather info/opinions, what are your thoughts?&lt;/p&gt;

</description>
      <category>news</category>
      <category>ios</category>
      <category>security</category>
      <category>discuss</category>
    </item>
    <item>
      <title>10 VS Code extensions every Frontend Developer should use</title>
      <author>Coderfiy</author>
      <pubDate>Mon, 09 Aug 2021 13:25:46 +0000</pubDate>
      <link>https://dev.to/googlie/10-vs-code-extensions-every-frontend-developer-should-use-3g8c</link>
      <guid>https://dev.to/googlie/10-vs-code-extensions-every-frontend-developer-should-use-3g8c</guid>
      <description>&lt;p&gt;¬†&lt;span&gt;Hello everyone, my name is suman and I'm a frontend developer. In this blog post, I would like to share 10 VS code extensions that every frontend developer should use. The purpose of using these extensions is to write faster, cleaner, and more consistent code.¬†&lt;/span&gt;&lt;span&gt;Let's Jump in!&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;span&gt;&lt;a href="https://www.codelivly.com/10-vs-code-extensions-every-frontend-developer-should-use/"&gt;10 VS Code extensions every Frontend Developer should use&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>üöÄ20 Best CSS3 Library For Developers.</title>
      <author>Coderfiy</author>
      <pubDate>Mon, 09 Aug 2021 13:23:31 +0000</pubDate>
      <link>https://dev.to/googlie/20-best-css3-library-for-developers-3a8d</link>
      <guid>https://dev.to/googlie/20-best-css3-library-for-developers-3a8d</guid>
      <description>&lt;p&gt;Web Developers used to spend a lot of time creating beautiful CSS. Thanks to the CSS libraries, we now have a better, faster, and more effective way to build responsive websites and web applications.&lt;/p&gt;
&lt;p&gt;Are you still looking for the best CSS libraries? Do you want to know which library you should try? In this article, we have 20 best CSS libraries for your inspiration.&lt;/p&gt;
&lt;h2&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#how-do-css-libraries-work"&gt;&lt;/a&gt;ü§î How do CSS libraries work?&lt;/h2&gt;
&lt;p&gt;CSS library gives web developers a basic structure, which includes grid, interactive UI patterns, web typography, tooltips, buttons, form elements, icons. This structure helps web developers to start quickly and efficiently when they are designing a website or web applications.&lt;/p&gt;
&lt;p&gt;Here we have put together¬†&lt;span&gt;20 best CSS libraries.&lt;/span&gt;¬†We hope you like them, and most importantly, find the best one for your needs.&lt;/p&gt;
&lt;h4&gt;
&lt;br&gt;
&lt;a href="https://dev.to/chetan_atrawalkar/20-best-css3-library-for-developers-58p#lets-go"&gt;&lt;/a&gt;Let's go....ü§©&lt;/h4&gt;
&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/20-best-css3-library-for-developers/&amp;amp;ved=2ahUKEwii76qFzaPyAhWvyzgGHX9RA-kQFnoECAMQBQ&amp;amp;usg=AOvVaw2AtoxfMkY_y5JPLB2VuSdV"&gt;üöÄ20 Best CSS3 Library For Developers&lt;/a&gt;&lt;/b&gt;.

</description>
    </item>
    <item>
      <title>Python Increment - Everything you need to know</title>
      <author>hrishikesh1990</author>
      <pubDate>Mon, 09 Aug 2021 13:19:44 +0000</pubDate>
      <link>https://dev.to/hrishikesh1990/python-increment-everything-you-need-to-know-4ek5</link>
      <guid>https://dev.to/hrishikesh1990/python-increment-everything-you-need-to-know-4ek5</guid>
      <description>&lt;p&gt;In this short tutorial, we learn about how to increment in Python. We also look at why the unary increment/ decrement operator does not work in Python.&lt;/p&gt;

&lt;p&gt;This tutorial is a part of our initiative at &lt;a href="#https://flexiple.com/"&gt;Flexiple&lt;/a&gt;, to write short curated tutorials around often used or interesting concepts.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents-python-increment"&gt;
  &lt;/a&gt;
  Table of Contents - Python increment
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#why-doesnt-the-operator-work-in-python"&gt;Why doesn‚Äôt the ‚Äú++/--‚Äù operator work in Python?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#python-increment"&gt;Python Increment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code-and-explanation"&gt;Code and Explanation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#python-increment-closing-thoughts"&gt;Python increment - Closing thoughts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-doesnt-the-operator-work-in-python"&gt;
  &lt;/a&gt;
  Why doesn‚Äôt the ‚Äú++/--‚Äù operator work in Python?
&lt;/h2&gt;

&lt;p&gt;If you have used programming languages like C you have likely used the ++/ -- operator to increment or decrement a variable. However, if you have tried the same in Python you would receive an Invalid Syntax error.&lt;/p&gt;

&lt;p&gt;Python does not treat variables the same way as C. Python uses names and objects and these values are immutable. The below examples would help you get a better understanding of this concept.  &lt;/p&gt;

&lt;p&gt;Let us assign the same integer value to multiple values and check the Id of the objects.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1833296619824
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1833296619824
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1833296619824
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see since all the variables have the same values Python assigns the same value for all the objects. Python does this to increase memory efficiency. &lt;/p&gt;

&lt;p&gt;Now if the value of one variable is changed, Python changes the value by reassigning the variable with another value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;  &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1825080174928
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1833296619824
&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 1833296619824
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Since the value of ‚Äòa‚Äô was changed, Python creates a new object and assigns it. However, the value of ‚Äòb‚Äô  and ‚Äòc‚Äô remains the same. &lt;/p&gt;

&lt;p&gt;In languages like C, each variable is given a value, if that value is incremented only that variable is affected. Since that is not the case in Python increment works differently. &lt;/p&gt;

&lt;p&gt;The value needs to be reassigned and incremented by 1.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-increment"&gt;
  &lt;/a&gt;
  Python Increment:
&lt;/h2&gt;

&lt;p&gt;Since ints are immutable, values need to be incremented and reassigned.&lt;/p&gt;

&lt;p&gt;This can be done using a = a +1, but Python supports a += 1 as well. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#code-and-explanation"&gt;
  &lt;/a&gt;
  Code and Explanation:
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;#Output - 3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code shows how to increment values using Python increment. You could use the Id function before and after the values and check how the id changes after you have incremented the value. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#python-increment-closing-thoughts"&gt;
  &lt;/a&gt;
  Python increment - Closing thoughts:
&lt;/h2&gt;

&lt;p&gt;Python increment can be quite easy to learn in case you are coming from another language. In case you are new to it, I would recommend you practice Python increment a few times. &lt;/p&gt;

&lt;p&gt;And in case you are wondering where Python increments are used, they are used to count occurrences of a particular instance. Eg: Likes, log in, etc. &lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
      <category>beginners</category>
    </item>
    <item>
      <title>10 Magical JavaScript Tips For every web developer</title>
      <author>Coderfiy</author>
      <pubDate>Mon, 09 Aug 2021 13:19:39 +0000</pubDate>
      <link>https://dev.to/googlie/10-magical-javascript-tips-for-every-web-developer-5akh</link>
      <guid>https://dev.to/googlie/10-magical-javascript-tips-for-every-web-developer-5akh</guid>
      <description>&lt;p id="f6cc"&gt;In this article, we will discuss the 15 useful JavaScript tips for every web developer to save their valuable and precious time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p id="e1bb"&gt;I am always ready to learn although I do not always like being taught&lt;/p&gt;

&lt;p id="0fe5"&gt;‚Äî Winston Churchill&lt;/p&gt;


&lt;/blockquote&gt;
&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;h1 id="fa85"&gt;Tip 1. Flatten the array of the array&lt;/h1&gt;
&lt;p id="4e31"&gt;This tip will help you to flatten a deeply nested array of arrays by using¬†&lt;code&gt;Infinity&lt;/code&gt;¬†in¬†&lt;code&gt;flat&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;span id="e3aa"&gt;var array = [123, 500, [1, 2, [34, 56, 67, [234, 1245], 900]], 845, [30257]]&lt;/span&gt;&lt;span id="16da"&gt;//flatten array of array&lt;br&gt;array.flat(Infinity)&lt;/span&gt;&lt;span id="b0d8"&gt;// output:&lt;br&gt;// [123, 500, 1, 2, 34, 56, 67, 234, 1245, 900, 845, 30257]&lt;/span&gt;&lt;/pre&gt;
&lt;h1 id="902c"&gt;Tip 2. Easy Exchange Variables&lt;/h1&gt;
&lt;p id="ebf9"&gt;You probably swap the two variables using a third variable¬†&lt;code&gt;temp&lt;/code&gt;. But this tip will show you a new way to exchange variables using destructuring.&lt;/p&gt;
&lt;pre&gt;&lt;span id="298c"&gt;//example 1&lt;/span&gt;&lt;span id="3316"&gt;var a = 6;&lt;br&gt;var b = 7;&lt;/span&gt;&lt;span id="b133"&gt;[a,b] = [b,a]&lt;/span&gt;&lt;span id="aa36"&gt;console.log(a,b) // 7 6&lt;/span&gt;&lt;/pre&gt;
&lt;br&gt;Read More: &lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/magical-javascript-tips-for-every-web-developer/"&gt;10 Magical JavaScript Tips for Every Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;

</description>
      <category>javascript</category>
    </item>
    <item>
      <title>Data Structure Series: Linked List</title>
      <author>Chuck Choi</author>
      <pubDate>Mon, 09 Aug 2021 13:11:34 +0000</pubDate>
      <link>https://dev.to/chuckchoiboi/data-structure-series-linked-list-27ol</link>
      <guid>https://dev.to/chuckchoiboi/data-structure-series-linked-list-27ol</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r3s65hg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xpt6in1hml7m89611hj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r3s65hg5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5xpt6in1hml7m89611hj.png" alt="data-structure-series-intro"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We use forks to eat pasta, spoons to eat soup, and chopsticks to eat dumplings. Each silverwares have its advantages/disadvantages, hence working better than the other for the food that it interacts well with. &lt;strong&gt;Just like that, different data structures are better suited and perform better than the others based on the situations/use cases.&lt;/strong&gt; They each have their pros and cons. Understanding these pros and cons can help you be a better programmer, as it will allow you to choose an appropriate data structure(s) based on the circumstances/goals you have, and it helps to drastically improve the performance of the algorithm being applied. I will be putting these blog series together on well known programming data structures in JavaScript, and link them all in one blog post in the future. Feel free to leave a comment if you have any questions!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of Contents
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#first"&gt;What is a Linked List?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#second"&gt;Implementation in JavaScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#third"&gt;Helper Methods&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fourth"&gt;Big O&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fifth"&gt;Helpful Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;




&lt;h2&gt;
  &lt;a href="#1-what-is-a-linked-list"&gt;
  &lt;/a&gt;
  1. What is a Linked List? &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;A Linked List is a collection of data in a sequence, with each of the data referencing its next node (or previous node if it is a Doubly Linked List) from its &lt;em&gt;'head'&lt;/em&gt; to the &lt;em&gt;'tail'&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rF1IzRWH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0n3m9367xhmbbntpaaxs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rF1IzRWH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0n3m9367xhmbbntpaaxs.png" alt="linked-list1"&gt;&lt;/a&gt;&lt;br&gt;
A &lt;strong&gt;Linked List&lt;/strong&gt; is a type of data that is represented in a sequential collection. Each piece of data in that collection is called the &lt;em&gt;node&lt;/em&gt;, which references its adjacent node in the sequence. The first node of a linked list is called the &lt;strong&gt;'head'&lt;/strong&gt;, and the last node is called the &lt;strong&gt;'tail'&lt;/strong&gt;. There are two types of linked lists: &lt;strong&gt;Singly Linked List&lt;/strong&gt; and &lt;strong&gt;Doubly Linked List&lt;/strong&gt;. As the names suggest, Singly Linked Lists‚Äô nodes are linked in only single direction, so each nodes references its next node. On the other hand, Doubly Linked Lists‚Äô nodes reference both its previous and the next node. &lt;strong&gt;In summary, a Linked List is a collection of data in a sequence, with each of the data referencing its next node (or previous node if it is a Doubly Linked List) from its &lt;em&gt;'head'&lt;/em&gt; to the &lt;em&gt;'tail'&lt;/em&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It sounds a bit similar to a built-in data structure &lt;em&gt;Array&lt;/em&gt;, doesn't it? The difference is that &lt;strong&gt;Arrays store each data in a consecutive manner in the memory&lt;/strong&gt; meaning that the elements are stored next to each other. And each elements is indexed based on the position, and each element is directly accessible using those indices. Meanwhile, &lt;em&gt;Linked Lists&lt;/em&gt; store each data anywhere in the memory, but the nodes &lt;strong&gt;reference&lt;/strong&gt; their next and previous node. So in order to access a specific node in a Linked List, you need to traverse the list sequentially from its head or tail to the other end until you get to the node you are looking for.&lt;/p&gt;

&lt;p&gt;Because of these differences, there are things that linked lists can do better than arrays, and vice versa: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#arrays-can-search-faster"&gt;
  &lt;/a&gt;
  Arrays can search faster
&lt;/h3&gt;

&lt;p&gt;As we discussed, &lt;strong&gt;Arrays&lt;/strong&gt; support random access, so we can access any elements in the (n)th index very quickly while &lt;strong&gt;Linked Lists&lt;/strong&gt; support sequential access, so we have to start from the head or tail to the (n)th node or value of the node we are looking for, thus taking longer time to search an element. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h3&gt;
  &lt;a href="#linked-lists-can-insertdelete-faster"&gt;
  &lt;/a&gt;
  Linked Lists can insert/delete faster
&lt;/h3&gt;

&lt;p&gt;In order to insert or delete an element in the beginning or middle of an &lt;strong&gt;Array&lt;/strong&gt;, you have to shift all of the elements on the right since its &lt;em&gt;consecutive&lt;/em&gt; index positions will change. So inserting and deleting an element in an array can be costly unless you are inserting or removing the last element of the array (since there's no elements after the last element). With &lt;strong&gt;Linked Lists&lt;/strong&gt;, inserting/deleting the first and the last element takes constant time since we just have to update the head/tail. Inserting/deleting an element in the middle can take linear time as well though, since you'd have to find the position to insert/delete by traversing the list one element at a time. However, there's no need to update all the elements that come afterwards, you just have to rearrange its adjacent nodes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;
  &lt;a href="#2-implementation-in-javascript"&gt;
  &lt;/a&gt;
  2. Implementation in JavaScript &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Singly Linked List&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// each node references its NEXT node&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;SinglyLinkedList&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;SLL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;SinglyLinkedList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;firstNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;secondNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;thirdNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;46&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// set the first new node as the SLL's head&lt;/span&gt;
&lt;span class="nx"&gt;SLL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;firstNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;SLL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// second as its next&lt;/span&gt;
&lt;span class="nx"&gt;firstNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;secondNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;SLL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// the third as the second's next &lt;/span&gt;
&lt;span class="c1"&gt;// while also setting it as a tail since it's the last one.&lt;/span&gt;
&lt;span class="nx"&gt;secondNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;SLL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;thirdNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;SLL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// This SLL will look something like this:&lt;/span&gt;
&lt;span class="c1"&gt;// (16) =&amp;gt; (2) =&amp;gt; (46)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Doubly Linked List&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// each node references both its NEXT and PREVIOUS node&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;DoublyLinkedList&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;DLL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;DoublyLinkedList&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;firstNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;361&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;secondnode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;thirdNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// set the first new node as the DLL's head&lt;/span&gt;
&lt;span class="nx"&gt;DLL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;firstNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;DLL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// second as its next, and head as its prev&lt;/span&gt;
&lt;span class="nx"&gt;firstNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;secondNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;secondNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;firstNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;DLL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// the third as the second's next &lt;/span&gt;
&lt;span class="c1"&gt;// while also setting it as a tail since it's the last one.&lt;/span&gt;
&lt;span class="nx"&gt;secondNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;DLL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;thirdNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;thirdNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;secondNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nx"&gt;DLL&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// This SLL will look something like this:&lt;/span&gt;
&lt;span class="c1"&gt;// (361) &amp;lt;=&amp;gt; (99) &amp;lt;=&amp;gt; (4)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We will set up a &lt;code&gt;Node&lt;/code&gt; class which accepts a value and set it to its value, with its next property (and prev if Doubly Linked List) initialized to null. Linked List class will be a sequential collection of these nodes, which will have its head and tail. We will want to keep track of the list's length, and increment/decrement it every time a new node is added or removed. Since &lt;strong&gt;Singly Linked Lists's&lt;/strong&gt; nodes only reference the &lt;code&gt;next&lt;/code&gt; node and &lt;strong&gt;Doubly Linked Lists'&lt;/strong&gt; nodes reference both their &lt;code&gt;next&lt;/code&gt; and &lt;code&gt;previous&lt;/code&gt; nodes, Singly Linked Lists are simpler but less powerful than Doubly Linked Lists. &lt;/p&gt;

&lt;p&gt;If you were to implement a helper method to pop the last element of the list, it's easier to do that with &lt;strong&gt;Doubly Linked Lists&lt;/strong&gt; as you simply have to remove the tail of the list, and set the new tail to be the previous node of the tail being removed. On the other hand, we can access the tail of the list, but will have to traverse the entire list and remember the previous node until you hit the tail so you can remove the tail and set the remembered previous node to be the new tail.&lt;/p&gt;

&lt;p&gt;The main drawback of using &lt;strong&gt;Doubly Linked List&lt;/strong&gt; vs &lt;strong&gt;Singly Linked List&lt;/strong&gt; is that &lt;strong&gt;Doubly Linked List&lt;/strong&gt; takes up more space than the &lt;strong&gt;Singly Linked List&lt;/strong&gt; since you have to set each nodes' next and previous node. But in return, it opens up more doors to make your data and its algorithms efficient. With that being said, here are couple helper methods to utilize &lt;strong&gt;Linked Lists&lt;/strong&gt; better. However, we will only focus on &lt;strong&gt;Doubly Linked Lists&lt;/strong&gt; for this blog post.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-helper-methods-doubly-linked-list-only"&gt;
  &lt;/a&gt;
  3. Helper Methods (Doubly Linked List only) &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;push()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// accepts a value as an argument&lt;/span&gt;
&lt;span class="c1"&gt;// appends a new node with the value passed at the end of the list&lt;/span&gt;
&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;newNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudo code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a new node with the value passed to the function&lt;/li&gt;
&lt;li&gt;If the head property is &lt;code&gt;null&lt;/code&gt;, set the &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt; to be the newly created node&lt;/li&gt;
&lt;li&gt;If the head is not &lt;code&gt;null&lt;/code&gt;, set the next property on the &lt;code&gt;tail&lt;/code&gt; to be that node&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;prev&lt;/code&gt; property on the newly created node to be the &lt;code&gt;tail&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;tail&lt;/code&gt; to be the newly created node&lt;/li&gt;
&lt;li&gt;Increment the &lt;code&gt;length&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Return the Linked List&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;pop()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// removes the last node (tail) of the list&lt;/span&gt;
&lt;span class="nx"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;removedNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;removedNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;removedNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;removedNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudo code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If there is no &lt;code&gt;head&lt;/code&gt;, return &lt;code&gt;undefined&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Store the current &lt;code&gt;tail&lt;/code&gt; in a variable to return later&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;length&lt;/code&gt; is 1, set the &lt;code&gt;head&lt;/code&gt; or &lt;code&gt;tail&lt;/code&gt; to be &lt;code&gt;null&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Update the &lt;code&gt;tail&lt;/code&gt; to be the previous Node&lt;/li&gt;
&lt;li&gt;Set the new &lt;code&gt;tail&lt;/code&gt;'s &lt;code&gt;next&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Decrement the &lt;code&gt;length&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Return the node removed&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;unshift()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// accepts a value as an argument&lt;/span&gt;
&lt;span class="c1"&gt;// prepends a new node with the value passed at the beginning of the list&lt;/span&gt;
&lt;span class="nx"&gt;unshift&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;newNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;newNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;newNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudo code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a new node with the &lt;code&gt;value&lt;/code&gt; passed to the function&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;length&lt;/code&gt; is 0, set the &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt; to be the new node&lt;/li&gt;
&lt;li&gt;Otherwise

&lt;ul&gt;
&lt;li&gt;Set the &lt;code&gt;prev&lt;/code&gt; property on the &lt;code&gt;head&lt;/code&gt; to be the new node&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;next&lt;/code&gt; property on the new node to be the &lt;code&gt;head&lt;/code&gt; property&lt;/li&gt;
&lt;li&gt;Update the &lt;code&gt;head&lt;/code&gt; to be the new node&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;Increment the &lt;code&gt;length&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Return the Linked List&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;shift()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// removes the first node (head) of the list&lt;/span&gt;
&lt;span class="nx"&gt;shift&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;oldHead&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;oldHead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;oldHead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;oldHead&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudo code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If &lt;code&gt;length&lt;/code&gt; is 0, return &lt;code&gt;undefined&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Store the current &lt;code&gt;head&lt;/code&gt; property in a variable&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;length&lt;/code&gt; is one, set the &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;tail&lt;/code&gt; to be &lt;code&gt;null&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Update the &lt;code&gt;head&lt;/code&gt; to be the &lt;code&gt;next&lt;/code&gt; of the old &lt;code&gt;head&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;head&lt;/code&gt;'s &lt;code&gt;prev&lt;/code&gt; property to &lt;code&gt;null&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Set the old &lt;code&gt;head&lt;/code&gt;'s &lt;code&gt;next&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Decrement the &lt;code&gt;length&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Return old &lt;code&gt;head&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;get()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// accepts an index as an argument&lt;/span&gt;
&lt;span class="c1"&gt;// returns the node at the index passed&lt;/span&gt;
&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;idx&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nx"&gt;idx&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;idx&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;
            &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tail&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prev&lt;/span&gt;
            &lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudo code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If the index is less than 0 or greater or equal to the &lt;code&gt;length&lt;/code&gt;, return &lt;code&gt;null&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;If the index is less than or equal to half the length of the list

&lt;ul&gt;
&lt;li&gt;Loop through the list starting from the &lt;code&gt;head&lt;/code&gt; and loop towards the middle&lt;/li&gt;
&lt;li&gt;Return the node once it is found&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;If the index is greater than half the length of the list

&lt;ul&gt;
&lt;li&gt;Loop through the list starting from the &lt;code&gt;tail&lt;/code&gt; and loop towards the middle&lt;/li&gt;
&lt;li&gt;Return the node once it is found&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&lt;strong&gt;set()&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// accepts an index and value as arguments&lt;/span&gt;
&lt;span class="c1"&gt;// finds the node at the index, and updates the node's value to the value passed&lt;/span&gt;
&lt;span class="c1"&gt;// returns false if the node is not found, true if the value is updated&lt;/span&gt;
&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;foundNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;idx&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;foundNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;foundNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Pseudo code:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a variable which is the result of the &lt;code&gt;get&lt;/code&gt; method at the index passed to the function&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;get&lt;/code&gt; method does not return a valid node, return &lt;code&gt;false&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;value&lt;/code&gt; of the node found from &lt;code&gt;get&lt;/code&gt; method to the &lt;code&gt;value&lt;/code&gt; passed to the function&lt;/li&gt;
&lt;li&gt;return &lt;code&gt;true&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#4-big-o"&gt;
  &lt;/a&gt;
  4. Big O &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CPfnluil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38wer67h7y7yvvf0b92d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CPfnluil--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/38wer67h7y7yvvf0b92d.png" alt="linked-list-big-o"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Space Complexity&lt;/strong&gt;: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;O(n)&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Space complexity of this data structure is linear, as the size of the list increase, so does the space&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;Push/Pop&lt;/strong&gt; and &lt;strong&gt;Shift/Unshift&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;O(1)&lt;/em&gt; Time Complexity&lt;/li&gt;
&lt;li&gt;It will take constant time to add/remove the node at the head and tail of a Linked List, since we just have to add a new node to the either end, and update the newly added node as its head/tail, or its previous/next element as head or tail if the node is being removed.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;strong&gt;Get/Set&lt;/strong&gt; and &lt;strong&gt;Insert/Delete&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;em&gt;O(n)&lt;/em&gt; Time Complexity&lt;/li&gt;
&lt;li&gt;In order for us to find an element in a Linked List, we will need to traverse the list to find the index or value of the index. Due to this nature of the Linked List, modifying the node in the middle of the list will take linear time (the time complexity changes based on the list size). Although Insert/Delete methods are not listed in the helper method above, you get the idea that we will have to traverse the list to find an index of the list to insert/delete the element.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#5-helpful-resources"&gt;
  &lt;/a&gt;
  5. Helpful Resources &lt;a&gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.udemy.com/course/js-algorithms-and-data-structures-masterclass/"&gt;&lt;strong&gt;Online Course&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;(Udemy Course)&lt;/strong&gt;&lt;br&gt;
Check out this Udemy course named JavaScript Algorithms and Data Structures Masterclass! It is created by &lt;a href="https://www.youtube.com/c/ColtSteeleCode"&gt;Colt Steele&lt;/a&gt;, and I referenced his code for the data structure implementation part of this blog post. Personally, I didn't know where to start with algorithms and data structures especially coming from a non-tech background. This course is very well structured for beginners to build a foundation on these topics.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://visualgo.net/en"&gt;&lt;strong&gt;Visual Animation&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;(VisuAlgo)&lt;/strong&gt;&lt;br&gt;
Data structures can be difficult to comprehend for some people just by looking at the code/text. The instructor in the course above uses a website named VisuAlgo that has visual representation of algorithms and data structures through animation.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.interviewcake.com/data-structures-reference"&gt;&lt;strong&gt;Data Structure Cheat Sheet&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;(Interview Cake)&lt;/strong&gt;&lt;br&gt;
Also, here's a really well-summarized cheat sheet/visualizations on data structures.&lt;/p&gt;

</description>
      <category>datastructure</category>
      <category>linkedlist</category>
      <category>programming</category>
      <category>javascript</category>
    </item>
    <item>
      <title>How to See Which Branch Your Teammate is on in Webstorm
</title>
      <author>Fred</author>
      <pubDate>Mon, 09 Aug 2021 12:44:29 +0000</pubDate>
      <link>https://dev.to/gitlive/how-to-see-which-branch-your-teammate-is-on-in-webstorm-32c8</link>
      <guid>https://dev.to/gitlive/how-to-see-which-branch-your-teammate-is-on-in-webstorm-32c8</guid>
      <description>&lt;p&gt;&lt;em&gt;‚ÄúWhat branch are you on?‚Äù&lt;/em&gt; is often the first question you ask when a teammate says &lt;em&gt;‚ÄúThe tests aren't passing‚Äù&lt;/em&gt; or &lt;em&gt;‚ÄúThe build failed‚Äù&lt;/em&gt;. Here‚Äôs how you can get an answer to that question without even needing to ask.&lt;/p&gt;

&lt;p&gt;In Webstorm, open up the Team Window by clicking GitLive on the bottom tool window bar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p-2Sxmvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628254250014/ldMs-fiu3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p-2Sxmvp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628254250014/ldMs-fiu3.png" alt="Webstorm-full-ide.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This will show a list of your teammates, if they are online (or away) and the issue they are currently working on. Locate the teammate you are interested in and click the arrow on the left-hand side of their avatar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uBIwmqm---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628254282439/KoKG15Dpa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uBIwmqm---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628254282439/KoKG15Dpa.png" alt="team window-scaled 1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now you will see all the repositories they have cloned including the name of their current branch! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aQpBAJB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628254297037/eDt_8Fkea.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aQpBAJB---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628254297037/eDt_8Fkea.png" alt="branch name- scaled 1.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: If an issue has been connected to the branch you‚Äôll see the issue name instead, if that's the case just hover your cursor over the issue name and a tooltip will appear showing you the branch name (and even the commit hash)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b-S5v-qD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628507276877/on8tPVqHA.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b-S5v-qD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1628507276877/on8tPVqHA.png" alt="issue and branch name-scaled 2.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't have the GitLive extension installed yet? You can find it &lt;a href="https://plugins.jetbrains.com/plugin/11955-gitlive"&gt;here&lt;/a&gt; and, if you need help setting it up, follow the instructions in &lt;a href="https://docs.git.live/docs/installation/"&gt;GitLive docs&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>How to Run an Effective Sprint Planning Meeting</title>
      <author>Alex Omeyer</author>
      <pubDate>Mon, 09 Aug 2021 12:31:43 +0000</pubDate>
      <link>https://dev.to/alexomeyer/how-to-run-an-effective-sprint-planning-meeting-5g07</link>
      <guid>https://dev.to/alexomeyer/how-to-run-an-effective-sprint-planning-meeting-5g07</guid>
      <description>&lt;p&gt;There are plenty of posts that tell you that sprint planning should include things like shaking hands, making pledges, and a team song (I wish I were joking). This is not one of them. Nor am I advocating for you to buy into any particular school of thought (i.e. Scrum vs Agile) or suggesting that you need to sign up to someone‚Äôs downloadable program for $XX, the author of which will haunt your inbox forever. &lt;/p&gt;

&lt;p&gt;Instead, I want to offer practical strategies to make planning a Sprint less painful so that you feel organised rather than overwhelmed and have achievable goals rather than just another staggering list of to-dos. A successful Sprint should leave you feeling like you‚Äôve worked on things that are important and worthy of your time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-purpose-of-a-sprint-planning-meeting"&gt;
  &lt;/a&gt;
  What is the purpose of a sprint planning meeting?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---twqBOs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4zdf3r2cqaj160u0mtgj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---twqBOs---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4zdf3r2cqaj160u0mtgj.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The purpose of sprint planning is to define what can be completed during the next sprint and decide how the work will get done and by who. This included reviewing any leftover tasks from the last sprint and creating a plan of action for these as appropriate.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sprint-planning-attendees"&gt;
  &lt;/a&gt;
  Sprint planning attendees
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#scrum-mastersprint-leader"&gt;
  &lt;/a&gt;
  Scrum Master*/Sprint leader
&lt;/h4&gt;

&lt;p&gt;The Scrum Master is responsible for setting up the infrastructure for the sprint planning meeting (zoom meeting/room booking, etc.) and managing timekeeping during the meeting to ensure that everyone is aligned on the goals of the upcoming sprint.&lt;/p&gt;

&lt;p&gt;Side note: I am using this term as I understand an agreed-upon alternative is yet to be decided upon in the world of Scrum.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#product-owner"&gt;
  &lt;/a&gt;
  Product Owner
&lt;/h4&gt;

&lt;p&gt;The product owner arguably does the bulk of the pre-Sprint meeting work. They prepare the list of product backlogs to choose to work on/prioritise during the sprint and facilitate discussion on the priorities of the sprint.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#development-team"&gt;
  &lt;/a&gt;
  Development team
&lt;/h4&gt;

&lt;p&gt;These are the vital people that will be doing the work during the sprint - think devs, designers, test engineers etc.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#before-the-meeting"&gt;
  &lt;/a&gt;
  Before the meeting
&lt;/h2&gt;

&lt;p&gt;Sprint planning is about gathering the necessary people together to determine the product development goal and work you will do in your upcoming sprint. But before you get to a planning meeting, there‚Äôs a reasonable amount of prep you need to do to organise.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#bring-the-backlog-to-order"&gt;
  &lt;/a&gt;
  Bring the backlog to order
&lt;/h4&gt;

&lt;p&gt;The Product Owner is responsible for collating and organising all backlog items that could be worked on during the sprint and is typically referred to as backlog grooming. They may do this alone or at a pre-meeting before the planning and aim to break tasks down into actionable items. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#be-clear-on-team-velocity-and-capacity"&gt;
  &lt;/a&gt;
  Be clear on team velocity and capacity
&lt;/h4&gt;

&lt;p&gt;Consider the amount of work that participants can successfully complete during a sprint. Consider the achievements of previous sprints as a way to measure team velocity. What tools and skills are needed to achieve the work? Who is available to work on the sprint? &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#define-your-sprint-goal"&gt;
  &lt;/a&gt;
  Define your sprint goal
&lt;/h4&gt;

&lt;p&gt;Determine the aim of your sprint and what you want to have achieved at its end. Writing this down is helpful to offer clarity to not only team members but other stakeholders outside of the sprint also.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#make-an-agenda-for-your-sprint-planning-meeting"&gt;
  &lt;/a&gt;
  Make an agenda for your sprint planning meeting
&lt;/h3&gt;

&lt;p&gt;The common view is that planning a 2-week sprint should take about four hours. Map out the agenda of the meeting accordingly. There are plenty of sprint planning templates around if you don‚Äôt have one already, for example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.smartsheet.com/sites/default/files/IC-Sprint-Planning-Meeting-Agenda-9268_PDF.pdf"&gt;Smart sheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlassian.com/software/confluence/templates/sprint-planning-meeting"&gt;Atlassian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fellow.app/meeting-templates/sprint-planning-meeting/"&gt;Fellow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://plan.io/files/Planio-Sprint-Planning-Template.pdf"&gt;Planio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-about-technical-debt-and-sprint-planning"&gt;
  &lt;/a&gt;
  What about technical debt and sprint planning?
&lt;/h3&gt;

&lt;p&gt;Stefan Wolfers &lt;a href="https://medium.com/hackernoon/technical-debt-scrum-e26421953278"&gt;asserts&lt;/a&gt; that there is an inherent contradiction in ownership and decision-making in a Scrum mentality regarding &lt;a href="https://www.stepsize.com/blog/complete-guide-to-technical-debt"&gt;technical debt&lt;/a&gt;. He asks:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;‚ÄúIf technical debt is the plague of our industry, why isn‚Äôt the Scrum Guide addressing the question of who is responsibly dealing with it? To make things worse, if the Product Owner‚Äôs responsibility is to maximise the value customers derive from the Development Team‚Äôs work.&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;The Development Team‚Äôs responsibility is to deliver a product Increment (at least) at the end of the sprint adhering to the definition of ‚ÄúDone,‚Äù aren‚Äôt those two responsibilities possibly causing a conflict of interest?‚Äù&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It is vital to make paying down technical debt - including tasks such as code refactoring and bug fixing - a priority of every single sprint. Bug fixing feels like a never-ending loop if you have a high level of debt, and a sprint can unearth even more bugs. Focus on the bugs you have committed to deal with and add those you find (unless incredibly urgent) to the bug backlog for your next sprint. &lt;/p&gt;

&lt;p&gt;Your team also needs an agreed-upon definition of Done to avoid more technical debt sneaking in.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-include-technical-debt-into-your-sprint"&gt;
  &lt;/a&gt;
  How to include technical debt into your sprint?
&lt;/h3&gt;

&lt;p&gt;Instead of having a dedicated technical debt sprint every quarter try a more sustainable approach of spending 10-30% of every sprint dealing with the most important technical debt.&lt;/p&gt;

&lt;p&gt;It‚Äôll help you prioritise the tech debt that's in the way of upcoming features on the product roadmap. (If you want to learn how a modern team at Snyk has achieved it, check out &lt;a href="https://www.stepsize.com/blog/snyk-delivers-the-highest-quality-software-using-stepsize"&gt;this case study&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;Here are 3 steps that‚Äôll help you incorporate technical work into your usual sprints: &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-make-technical-debt-visible"&gt;
  &lt;/a&gt;
  1. Make technical debt visible
&lt;/h4&gt;

&lt;p&gt;Start with highlighting, bookmarking and creating technical debt issues. You can easily do that with the &lt;a href="https://www.stepsize.com/r/vscode"&gt;Stepsize VS Code&lt;/a&gt; or the &lt;a href="https://www.stepsize.com/r/jetbrains"&gt;JetBrains extension&lt;/a&gt;.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-determine-the-business-impact-of-each-debt-item"&gt;
  &lt;/a&gt;
  2. Determine the business impact of each debt item
&lt;/h4&gt;

&lt;p&gt;If you have a difficult time convincing your management to work on technical debt, try focusing on the business impact instead of technical problems. E.g. mention how fixing this debt will reduce the number of support tickets or help you reduce the time-to-market.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-bring-it-to-your-sprint-planning-meeting"&gt;
  &lt;/a&gt;
  3. Bring it to your sprint planning meeting
&lt;/h4&gt;

&lt;p&gt;Once you've created technical debt issues and described their business impact, bring it up during your next sprint planning to discuss with the team.&lt;/p&gt;

&lt;p&gt;Deciding what technical debt to focus on in your code sprint is comparable to &lt;a href="https://www.stepsize.com/blog/how-to-prioritise-your-product-backlog"&gt;prioritising tasks in your product backlog&lt;/a&gt; and you can also use Stepsize‚Äôs prioritisation features.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#remote-work-planning"&gt;
  &lt;/a&gt;
  Remote work planning
&lt;/h3&gt;

&lt;p&gt;How we work is constantly changing. Many traditional Sprint planners talk about whiteboards (digital or otherwise) and getting everyone together in the same room. We know that‚Äôs often not just practical with distributed teams. &lt;/p&gt;

&lt;p&gt;Where possible, avoid a hybrid model where a chunk of the team is together and the rest distributed unless you have good practice doing this successfully. Otherwise, what tends to happen is that those who are physically present make group decisions, and the input of remote people is more of an afterthought. &lt;/p&gt;

&lt;p&gt;Online tools (see upcoming article) are critical to ensure that everyone gets an equal seat at the meeting. Be especially aware that remote meetings are more draining than in-person meetings and plan accordingly with breaks and keeping things focused. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#reward-your-team"&gt;
  &lt;/a&gt;
  Reward your team
&lt;/h4&gt;

&lt;p&gt;Sprints are more pleasurable if there‚Äôs something to look forward to - if budget allows, consider getting some catering in or delivery orders to people‚Äôs homes for remote workers to celebrate the end of a sprint. Even if a sprint is commonplace in your company, everyone likes thanks. And don‚Äôt forget to celebrate the tech debt heroes who have done behind the scenes work!&lt;/p&gt;

&lt;p&gt;The article is originally posted by Cate Lawrence at te &lt;a href="https://www.stepsize.com/blog/how-to-run-an-effective-sprint-planning-meeting"&gt;Managing Technical Debt blog&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>agile</category>
      <category>productivity</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Beginners guide to npm</title>
      <author>Tyler V. (he/him)</author>
      <pubDate>Mon, 09 Aug 2021 12:28:39 +0000</pubDate>
      <link>https://dev.to/terabytetiger/beginners-guide-to-npm-1gg7</link>
      <guid>https://dev.to/terabytetiger/beginners-guide-to-npm-1gg7</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-node-package-manager"&gt;
  &lt;/a&gt;
  What is node package manager?
&lt;/h2&gt;

&lt;p&gt;A common phrase in development is "Don't reinvent the wheel", meaning don't spent a ton of time creating functionality that exists out of the box (Who hasn't spent hours to create their own time system instead of just using &lt;code&gt;Date()&lt;/code&gt;? Not just me... right?). Although it can be a great learning experience, when it comes to building production code, it can often be much less effort to stand on the shoulders of giants and leverage code written by others. &lt;/p&gt;

&lt;p&gt;Long story short, node package manager (npm) is a way to install "packages of code" written by someone else that you can then use in your project. You may be asking yourself, "Why don't I just copy their code into a file? Why do I need npm to do this?". There are a few advantages to using npm over copying the code, including that you don't have to figure out what code their project is dependent on to run, and if there's ever a security issue with an npm package, you can easily update the package! &lt;/p&gt;

&lt;p&gt;And the best part of npm? It comes with &lt;a href="https://nodejs.org/en/"&gt;Node&lt;/a&gt;! So if you already have Node installed you (most likely) already have npm! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#npm-installation"&gt;
  &lt;/a&gt;
  npm installation
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#how-do-i-know-if-i-already-have-npm-installed"&gt;
  &lt;/a&gt;
  How do I know if I already have npm installed?
&lt;/h3&gt;

&lt;p&gt;From the command line, you can check if npm is already installed by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nt"&gt;--version&lt;/span&gt;

&lt;span class="c"&gt;# Expected output to be something like&lt;/span&gt;
6.14.10
&lt;span class="c"&gt;# If this number doesn't match up, that's OK! &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Note: This can be run from any directory, it doesn't need to be a node project folder!&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-if-i-dont-have-npm-installed"&gt;
  &lt;/a&gt;
  What if I don't have npm installed?
&lt;/h3&gt;

&lt;p&gt;If running &lt;code&gt;npm --version&lt;/code&gt; returned an error along the lines of:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm: The term &lt;span class="s1"&gt;'npm'&lt;/span&gt; is not recognized as a name of a cmdlet, &lt;span class="k"&gt;function&lt;/span&gt;, script file, or executable program. Check the spelling of the name, or &lt;span class="k"&gt;if &lt;/span&gt;a path was included, verify that the path is correct and tray again.
&lt;span class="c"&gt;# This is the powershell error format. CMD or bash might have slightly different error messages.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Don't fret! You can install Node/npm from the &lt;a href="https://nodejs.org/en/"&gt;Node.js homepage&lt;/a&gt; by selecting either the "LTS" (Long term support) build or the "Current" build, which may be less stable but offers the latest feature set. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5DHGVVlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyczbvvk8n56ew93oclv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5DHGVVlT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tyczbvvk8n56ew93oclv.png" alt="The download buttons from the Node.js website."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you download and install the package, try running &lt;code&gt;npm --version&lt;/code&gt; as shown above and you should see a version returned. The version of npm will not match the version of node you downloaded - npm has separate version releases. You may need to restart your terminal if you still have it open from earlier. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#enter-packagejson"&gt;
  &lt;/a&gt;
  Enter package.json
&lt;/h2&gt;

&lt;p&gt;Now that we have npm installed, we can dig a bit more into how it works and how it will impact projects you're working on. &lt;/p&gt;

&lt;p&gt;When working with Node projects or frameworks such as &lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt; or &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; you'll run into package.json files (unless you're importing React/Vue via CDN). The package.json file is used for npm to be able to understand what packages you'd like to use in your project in the &lt;code&gt;dependencies&lt;/code&gt; and &lt;code&gt;devDependencies&lt;/code&gt; portions:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;These&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;are&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;dependencies&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;my&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;blog&lt;/span&gt;&lt;span class="w"&gt; 
&lt;/span&gt;&lt;span class="err"&gt;//&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;at&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;time&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;writing&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;//...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@fortawesome/free-regular-svg-icons"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^5.13.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@fortawesome/free-solid-svg-icons"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^5.13.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@gridsome/plugin-critical"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.1.6"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@gridsome/plugin-sitemap"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.4.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@gridsome/source-contentful"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.5.3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@gridsome/source-filesystem"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.6.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@gridsome/transformer-remark"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.3.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@tailwindcss/typography"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.4.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"autoprefixer"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^9"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"dayjs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.10.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"gridsome"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.7.17"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"gridsome-plugin-remark-prismjs-all"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.3.5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"postcss"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"remark-footnotes"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"tailwindcss"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"npm:@tailwindcss/postcss7-compat"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"webpack-bundle-analyzer"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.4.2"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@fortawesome/fontawesome-svg-core"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.2.29"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@fortawesome/free-brands-svg-icons"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^5.13.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@fortawesome/vue-fontawesome"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.1.10"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"@fullhuman/postcss-purgecss"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.3.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"gridsome-plugin-remark-codetitle"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.2.2"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#npm-install"&gt;
  &lt;/a&gt;
  npm install
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note: &lt;code&gt;npm install&lt;/code&gt; and &lt;code&gt;npm i&lt;/code&gt; are interchangeable - they both do the same thing!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Notably, when you first clone an npm dependent repository you won't be able to immediately start the project - at least not without errors! The first thing you'll need to do is run &lt;code&gt;npm install&lt;/code&gt;, which will read through the dependencies of your package.json file and install the packages (and their dependencies). This sometimes takes a bit to run, so don't worry if it feels like it is taking forever to run. &lt;/p&gt;

&lt;p&gt;After the install command finishes running, you may notice that a new file can be found in your directory - package-lock.json.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-this-found-1321-vulnerabilities-message"&gt;
  &lt;/a&gt;
  What is this "found 1321 vulnerabilities" message?
&lt;/h2&gt;

&lt;p&gt;Sometimes when you run &lt;code&gt;npm install&lt;/code&gt; at the end you'll see a message that looks a little like this at the end:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;found 1321 vulnerabilities &lt;span class="o"&gt;(&lt;/span&gt;116 low, 246 moderate, 958 high, 1 critical&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in &lt;/span&gt;2040 scanned packages
  run &lt;span class="sb"&gt;`&lt;/span&gt;npm audit fix&lt;span class="sb"&gt;`&lt;/span&gt; to fix 1093 of them.
&lt;span class="c"&gt;# Yes, this was for one of my actual repositories üòÖ&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When &lt;code&gt;npm install&lt;/code&gt; runs, npm also runs &lt;code&gt;npm audit&lt;/code&gt;, which checks the npm records for any packages that have been updated to fix a known security vulnerability. Sometimes this will involve manual intervention to fix, but sometimes npm can fix it for you if you run &lt;code&gt;npm audit fix&lt;/code&gt; depending on what your version settings are (more on this below). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-this-new-packagelockjson-file"&gt;
  &lt;/a&gt;
  What's this new package-lock.json file?
&lt;/h2&gt;

&lt;p&gt;package-lock.json is a file that is autogenerated by npm to outline exact versions of the npm packages that were installed. This is important to help avoid the following situation: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;You begin working on a project using npm-package version 1.0&lt;/li&gt;
&lt;li&gt;You upload your repository to GitHub&lt;/li&gt;
&lt;li&gt;Some time later, npm-package version 2.0 is published with breaking changes&lt;/li&gt;
&lt;li&gt;Someone tries to clone your repository&lt;/li&gt;
&lt;li&gt;When they run &lt;code&gt;npm install&lt;/code&gt; they install version 2.0 and the repository throws errors when they try to run it.&lt;/li&gt;
&lt;li&gt;Panik ensues&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thanks to package-lock.json, when the user runs &lt;code&gt;npm install&lt;/code&gt;, it will install the same versions of the packages that you were using when you developed the project! No panik! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#adding-packages-to-your-project"&gt;
  &lt;/a&gt;
  Adding packages to your project
&lt;/h2&gt;

&lt;p&gt;In the documentation for npm packages that you would use in your project, you'll (usually) see a line about how to install the package. The installation follows this pattern:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;packageName
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Where &lt;code&gt;packageName&lt;/code&gt; is replaced by the name of the npm package you wish to install. You can also chain packages together to install them all at once:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install &lt;/span&gt;package1 package2 package3
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above command will install "package1", "package2", and "package3"! &lt;/p&gt;

&lt;p&gt;Whenever you add a package, the normal &lt;code&gt;npm install&lt;/code&gt; will also run to ensure all packages are installed.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#specifying-versions"&gt;
  &lt;/a&gt;
  Specifying versions
&lt;/h3&gt;

&lt;p&gt;Notably, there are different ways to specify versions in package.json. Some of the most common examples I see:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;//...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"specific"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"tilde"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"~1.2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"caret"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.0.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;//...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;specific will install exactly version 1.0.3&lt;/li&gt;
&lt;li&gt;tilde will install any patches to the minor version. In other words, the third decimal can change, but 1.3.0 will not be installed. &lt;/li&gt;
&lt;li&gt;caret will install minor changes and patches. In other words, the second and third decimal can change, but 2.0.0 will not be installed. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are all useful for different situations - but that's a post for another day! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#if-i-installed-the-node-modules-why-does-the-next-person-to-use-my-project-need-to-run-raw-npm-install-endraw-"&gt;
  &lt;/a&gt;
  If I installed the node modules, why does the next person to use my project need to run &lt;code&gt;npm install&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;Remember the bit where I said running &lt;code&gt;npm install&lt;/code&gt; can take a while to run? That's because the packages are being downloaded and installed to your repository. When working with node modules, it is common practice to include the following in a .gitignore file in the root of your project:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node_modules
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will prevent your node_modules from uploading with your project, saving you time each time you push your repository (and keeping your git tree less cluttered). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dependencies-vs-devdependencies"&gt;
  &lt;/a&gt;
  dependencies vs devDependencies
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;This section is mostly for the curious and for those that are looking to publish npm packages. It's okay to skip this section. üëç&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When working on a project, it is common to include a testing framework such as &lt;a href="https://jestjs.io/"&gt;Jest&lt;/a&gt;, but since the testing happens on the developer side, you don't necessarily want to make everyone that uses your package in the future to install Jest. When a package is only needed for local development instead of the normal install command, you'll see &lt;code&gt;npm install --save-dev packageName&lt;/code&gt;, which saves the package to the &lt;code&gt;"devDependencies"&lt;/code&gt; object, and saves your users from waiting to install a package they don't really need. &lt;/p&gt;

&lt;p&gt;Note that someone working on the repository where you have devDependencies will still install the associated packages since they're working on your package, not using it in another repository. Because of this, building projects with something like Vue or React will functionally see no difference between dependencies and devDependencies (again - unless you're building something like a component to be used by other developers).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#npm-global-installations"&gt;
  &lt;/a&gt;
  npm global installations
&lt;/h2&gt;

&lt;p&gt;When working with npm packages, you may also run into the &lt;code&gt;--global&lt;/code&gt; flag, which will &lt;em&gt;not&lt;/em&gt; install the package to the repository you are currently in. Instead, this flag will install the package in a way where you can run the package from the command line later. &lt;/p&gt;

&lt;p&gt;For example, if you were trying to install the &lt;a href="https://cli.vuejs.org/"&gt;Vue CLI (Command line interface)&lt;/a&gt; you would run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--global&lt;/span&gt; @vue/cli
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which enables commands such as&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Create a new Vue Project:&lt;/span&gt;
vue create project

&lt;span class="c"&gt;# And&lt;/span&gt;

&lt;span class="c"&gt;# Adding plugins to vue projects (in this case ES Lint):&lt;/span&gt;
vue add eslint
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By extension, the global functionality also allows you to create your own command line interface prompts and tools to do things from the terminal! &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-npm-install-instructions-also-refer-to-yarn"&gt;
  &lt;/a&gt;
  Why do npm install instructions also refer to yarn?
&lt;/h2&gt;

&lt;p&gt;Just a quick note about &lt;code&gt;yarn add&lt;/code&gt; commands - &lt;a href="https://yarnpkg.com/"&gt;Yarn&lt;/a&gt; is built on top of npm and offers the same functionality via slightly modified commands. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Instead of npm install package&lt;/span&gt;
yarn add package

&lt;span class="c"&gt;# Instead of npm install&lt;/span&gt;
yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>beginners</category>
      <category>codenewbie</category>
      <category>npm</category>
      <category>javascript</category>
    </item>
    <item>
      <title>What I Look for When Hiring Senior Software Engineers</title>
      <author>Tyler Hawkins</author>
      <pubDate>Mon, 09 Aug 2021 12:15:31 +0000</pubDate>
      <link>https://dev.to/thawkin3/what-i-look-for-when-hiring-senior-software-engineers-4a6j</link>
      <guid>https://dev.to/thawkin3/what-i-look-for-when-hiring-senior-software-engineers-4a6j</guid>
      <description>&lt;p&gt;As a senior software engineer at a large growing tech company, I have the privilege of helping interview many other software engineers who apply to come work with me. Throughout the last year, I participated in about 50 interviews for positions ranging from mid-level software engineer to senior software engineer to engineering manager.&lt;/p&gt;

&lt;p&gt;This experience has given me time to reflect on the qualities and skill sets that I value in other senior software engineers, and as a result, I try to craft my interview questions in such a way that I can hopefully get a glimpse into these attributes during the brief time I have with each candidate.&lt;/p&gt;

&lt;p&gt;So, without further ado, here are the things I look for when hiring senior software engineers.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#1-ability-to-communicate-clearly-with-technical-and-nontechnical-people"&gt;
  &lt;/a&gt;
  1. Ability to communicate clearly with technical and non-technical people
&lt;/h2&gt;

&lt;p&gt;This is important for two reasons. First, as a senior software engineer, you'll serve as a mentor to junior and mid-level engineers. Other engineers will often come to you with questions, and you'll need to be able to explain technical concepts to them in simple terms. When you give code review feedback, you'll need to explain clearly why a piece of code is not ideal the way it currently is written and how it can be improved.&lt;/p&gt;

&lt;p&gt;Second, as a senior software engineer, you'll often lead through indirect influence. You aren't managing anyone directly, but you do need to be able to spread your ideas throughout the organization and rally people to join you in your cause for clean code, higher engineering standards, or whatever it may be. If you can't communicate your ideas effectively, you'll have a hard time convincing others that your ideas are worth their time.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#2-attention-to%C2%A0detail"&gt;
  &lt;/a&gt;
  2. Attention to¬†detail
&lt;/h2&gt;

&lt;p&gt;This quality comes in many forms. You'll often see it in an engineer's own code as well as in their code reviews when looking at other people's code.&lt;/p&gt;

&lt;p&gt;Engineers with strong attention to detail are sure to check and double check their work before submitting it to others for review. They write meaningful commit messages. They clearly name their variables and functions. They are lovers of clean code.&lt;/p&gt;

&lt;p&gt;It's important to note that senior software engineers are not infallible. They still make mistakes. The key though is that most of the time they catch these simple mistakes on their own so that others don't have to do it for them.&lt;/p&gt;

&lt;p&gt;These practices and habits extend to their interactions with other engineers during code reviews as the senior software engineer seeks to lift his coworkers in helping them write cleaner code as well.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#3-emotional-intelligence-and%C2%A0maturity"&gt;
  &lt;/a&gt;
  3. Emotional intelligence and¬†maturity
&lt;/h2&gt;

&lt;p&gt;A senior software engineer needs to understand that they are not their code. You must take your ego out of any argument or discussion. Understand that criticism of the code is not criticism of the person.&lt;/p&gt;

&lt;p&gt;Senior software engineers need to be able to have hard conversations with other people whether it be about code quality, job performance, or managing expectations regarding project timelines.&lt;/p&gt;

&lt;p&gt;At the same time, senior software engineers need to understand how their words and actions affect other people. Emotional intelligence includes not just a self-awareness but also an awareness of those around you. Senior software engineers should know how to constructively provide feedback in a way that uplifts and inspires, not degrades and demoralizes.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#4-humility"&gt;
  &lt;/a&gt;
  4. Humility
&lt;/h2&gt;

&lt;p&gt;Senior software engineers do not know everything. Nor should they! The field of engineering is far too massive for any one person to master it all.&lt;/p&gt;

&lt;p&gt;A good senior software engineer understands this fact and is comfortable with it. You don't need to know everything, but you should be able to recognize when you don't know something, when to ask for help, and how to find answers to questions on your own.&lt;/p&gt;

&lt;p&gt;This understanding leads to humility. There is no room for ego in the software engineering world. You should never feel like you are indispensable or that you are the only one who can adequately perform your job duties. The team and the company will go on without you if and when you move on.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#5-high-standards-for-engineering-excellence"&gt;
  &lt;/a&gt;
  5. High standards for engineering excellence
&lt;/h2&gt;

&lt;p&gt;Senior software engineers set a high bar, both for themselves and for those they work with. They use effective tools like code formatters and code linters to enforce standards and coding styles. They understand the importance of tests and don't allow untested code to be merged into the master branch. They configure CI/CD pipelines to automate the tedious part of code reviews and to ensure that the master branch is always kept in a working state.&lt;/p&gt;

&lt;p&gt;Senior software engineers view programming as a craft, not just a job. They are proud of their work.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6-expert-in-their%C2%A0domain"&gt;
  &lt;/a&gt;
  6. Expert in their¬†domain
&lt;/h2&gt;

&lt;p&gt;Senior software engineers have advanced to this level for a reason: they are good at their job. This means knowing their tech stack or language of choice at more than just a superficial level. Their expertise is T-shaped‚Ää-‚Äädeep knowledge in a few areas and a breadth of experience in many other areas.&lt;/p&gt;

&lt;p&gt;They gain this expertise through years of tackling hard problems, volunteering for tough projects, accepting stretch assignments, and learning from those around them.&lt;/p&gt;

&lt;p&gt;Senior software engineers take advantage of the wealth of experience available to them by reading classic programming books like &lt;em&gt;Clean Code&lt;/em&gt;, &lt;em&gt;Refactoring&lt;/em&gt;, &lt;em&gt;The Pragmatic Programmer&lt;/em&gt;, or &lt;em&gt;Design Patterns&lt;/em&gt;. In doing so, they vicariously learn lessons from domain experts who have spent decades perfecting their craft.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#7-passion-for%C2%A0learning"&gt;
  &lt;/a&gt;
  7. Passion for¬†learning
&lt;/h2&gt;

&lt;p&gt;Senior software engineers are excited about their job. They're interested in new things. They're always exploring new ideas through reading articles, watching videos, building proof of concept apps, or maybe even writing and producing content.&lt;/p&gt;

&lt;p&gt;In short, they're not stagnating in their career, and it shows.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Hard skills are important, and a senior software engineer needs to know their stuff. They are expected to be experts in their field, or at least in a subset of a few key areas.&lt;/p&gt;

&lt;p&gt;However, as important as hard skills are, I've often found that soft skills end up being just as important, if not more so.&lt;/p&gt;

&lt;p&gt;In summary, here is the list of qualities I look for and value in other senior software engineers:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Ability to communicate clearly with technical and non-technical people&lt;/li&gt;
&lt;li&gt;Attention to detail&lt;/li&gt;
&lt;li&gt;Emotional intelligence and maturity&lt;/li&gt;
&lt;li&gt;Humility&lt;/li&gt;
&lt;li&gt;High standards for engineering excellence&lt;/li&gt;
&lt;li&gt;Expert in their domain&lt;/li&gt;
&lt;li&gt;Passion for learning&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I hope this helps, and thanks for reading!&lt;/p&gt;

</description>
      <category>career</category>
      <category>programming</category>
      <category>leadership</category>
      <category>codequality</category>
    </item>
    <item>
      <title>What are method references?</title>
      <author>Wagner Negr√£o üë®‚Äçüîß</author>
      <pubDate>Mon, 09 Aug 2021 12:00:31 +0000</pubDate>
      <link>https://dev.to/wagnernegrao/what-are-method-references-3ng</link>
      <guid>https://dev.to/wagnernegrao/what-are-method-references-3ng</guid>
      <description>&lt;p&gt;Hi guys, today the post will be short, I‚Äôll write about method references. I know that are simples to understand, but some things were stranger when I first saw them, that is why I‚Äôll write about them.&lt;/p&gt;

&lt;p&gt;Methods references are introduced with the Java 8, allowing done references when methods are instanced in lambda expressions, this strategy sought ways to create a non-verbose method.&lt;/p&gt;

&lt;p&gt;Let‚Äôs go see an example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="nc"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nc"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Arrays&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;asList&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Riot"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;112&lt;/span&gt;&lt;span class="o"&gt;),&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Rext"&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// Without method reference&lt;/span&gt;
&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forEach&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// With lambda reference&lt;/span&gt;
&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;forEach&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Without method reference&lt;/span&gt;
&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getNumber&lt;/span&gt;&lt;span class="o"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;forEach&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// With lambda reference&lt;/span&gt;
&lt;span class="n"&gt;list&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;stream&lt;/span&gt;&lt;span class="o"&gt;().&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nl"&gt;Person:&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;getNumber&lt;/span&gt;&lt;span class="o"&gt;).&lt;/span&gt;&lt;span class="na"&gt;forEach&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When using functions lambda often faces moments that need to send the only method, for example, &lt;em&gt;filter()&lt;/em&gt;, &lt;em&gt;map()&lt;/em&gt; like the example above, but we must remember that when we use methods reference, the parameters are passed directly to the method, don't possible do anything with this parameter.&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;::&lt;/strong&gt; is a delimiter, that we say we using methods references to code, that way when to run occurs is translated to a functional interface, that is why the code will compile, and this will compile without cost to the application. We must use this form of work, but without forgetting of legibility of code.&lt;/p&gt;

</description>
      <category>java</category>
      <category>programming</category>
      <category>beginners</category>
      <category>functional</category>
    </item>
    <item>
      <title>DApp Review ‚Äì OpenSea: An Ethereum Based NFT Marketplace</title>
      <author>Manbir Singh Marwah</author>
      <pubDate>Mon, 09 Aug 2021 11:55:02 +0000</pubDate>
      <link>https://dev.to/manbir/dapp-review-opensea-an-ethereum-based-marketplace-43hl</link>
      <guid>https://dev.to/manbir/dapp-review-opensea-an-ethereum-based-marketplace-43hl</guid>
      <description>&lt;p&gt;Non-fungible Tokens, or NFTs have been creating a huge buzz in the blockchain space from the past few months, having played a major role in bringing Ethereum to the mainstream. As a result, people have been minting their own NFTs on blockchain and purchasing some appealing ones from various marketplaces. In this blog, we'll explore one of the world's leading NFT marketplaces, OpenSea. &lt;/p&gt;

&lt;p&gt;For those who've been living under a rock, an NFT is a token for a real world asset that represents ownership on the blockchain, and doesn't have a fixed value. For example, if &lt;em&gt;Leonardo da Vinci&lt;/em&gt; comes and clicks a picture of Mona Lisa's original painting and simply sells it at a marketplace, it could (probably would) sell for millions, since: &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The original creator is selling it.&lt;/li&gt;
&lt;li&gt;There's some story associated with the artpiece.&lt;/li&gt;
&lt;li&gt;There's no copy of that art available for sale by the creator, making it...&lt;/li&gt;
&lt;li&gt;An original digital artpiece that can not be shared, only transferred.&lt;/li&gt;
&lt;li&gt;Who doesn't love rare art? üëÄ&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now back to the guide! This will require you to have an Ethereum based wallet of your choice, such as &lt;a href="https://metamask.io"&gt;MetaMask&lt;/a&gt; set-up, before you can start buying and selling some NFTs. You can learn more on how to do it through &lt;a href="https://dev.to/manbir/a-guide-to-metamask-ecosystem-leading-ethereum-blockchain-wallet-59k7"&gt;this blog&lt;/a&gt;. Once you're done, just dive right in, 'cause...&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#its-showtime-at-the-metaverse"&gt;
  &lt;/a&gt;
  It's showtime at the metaverse! üåå
&lt;/h1&gt;




&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;Once you visit &lt;a href="https://opensea.io/"&gt;OpenSea.io&lt;/a&gt;, you'll see an option to explore/create an NFT, a few exclusive OpenSea drops, trending NFTs, resources to get started and an option to browse by categories. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rROgRDo2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz9pcl8wfvi8q828m8np.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rROgRDo2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qz9pcl8wfvi8q828m8np.png" alt="78ee160-Screen_Shot_2021-08-05_at_4.36_1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connecting-your-wallet"&gt;
  &lt;/a&gt;
  Connecting Your Wallet
&lt;/h2&gt;

&lt;p&gt;You'll need to connect your wallet and set-up your OpenSea account to get started with minting and purchasing the NFTs. We'll go ahead with MetaMask for this blog. Just click on the wallet icon at the top-right corner; a list of supported wallets will show up. Then simply select MetaMask from the list. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FGMF5DiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vc21safavvxo3vjlmcw7.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FGMF5DiX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vc21safavvxo3vjlmcw7.jpg" alt="Screenshot from 2021-08-07 00-06-32"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you've connected, set up your profile by adding a username, profile image, cover etc. You'll need to 'sign' each update through your MetaMask account to apply the changes to your OpenSea account.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#exploring-and-purchasing-an-nft"&gt;
  &lt;/a&gt;
  Exploring and Purchasing an NFT
&lt;/h2&gt;

&lt;p&gt;You can start exploring the NFTs that are minted by creators from across the world through browsing by category or clicking on &lt;code&gt;Marketplace &amp;gt; All NFTs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HfMYwoH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghoav9pzwrxn6t2k22zf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HfMYwoH9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ghoav9pzwrxn6t2k22zf.png" alt="Screenshot from 2021-08-07 01-02-52"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To purchase an NFT, simply select an asset from the list. &lt;br&gt;
You can also apply filters to sort by price, categories, chains and more.&lt;/p&gt;

&lt;p&gt;Click on &lt;code&gt;Buy Now&lt;/code&gt;, agree to the OpenSea terms, and click on &lt;code&gt;Checkout&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--stFQQW5b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w62i60moqhvxua692nvv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--stFQQW5b--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w62i60moqhvxua692nvv.png" alt="checkout"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll need to sign the transaction from your wallet... and that's pretty much it! The asset will show up in your wallet in a matter of seconds.  &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#minting-an-nft"&gt;
  &lt;/a&gt;
  Minting an NFT
&lt;/h2&gt;

&lt;p&gt;There's a simple 4-step process for minting your first NFT collection:  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MeGlNyts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veu2xjsx9dmszah0sbuv.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MeGlNyts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/veu2xjsx9dmszah0sbuv.jpg" alt="Screenshot from 2021-08-07 02-03-31 (1)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--C6bdsxFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5cbigrqmtg3002q6ocz.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C6bdsxFQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x5cbigrqmtg3002q6ocz.jpg" alt="Screenshot from 2021-08-07 02-03-31 (2)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we've already set up a wallet, simply head over to the &lt;code&gt;Create&lt;/code&gt; section to add your assets. You'll need to add social links, an appealing description, profile &amp;amp; banner images, and set a secondary sales fee. You can choose between auctions, fixed-price listings, and declining-price listings.&lt;/p&gt;

&lt;p&gt;Here's a quick rundown of how it's like to mint your own NFT:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-create-a-collection"&gt;
  &lt;/a&gt;
  1. Create a collection
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4pzlNEKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fvcdrj1i7apc5lf74jq.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4pzlNEKW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4fvcdrj1i7apc5lf74jq.png" alt="Screenshot from 2021-08-07 01-00-46"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You'll have to add some details such as images, name, URL, description, blockchain you're adding the NFT to, payment tokens etc.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nTXRANSK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p24uv139kw39wwpjr8m9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nTXRANSK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/p24uv139kw39wwpjr8m9.png" alt="Screenshot from 2021-08-07 19-55-39"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-add-a-new-item-to-your-collection"&gt;
  &lt;/a&gt;
  2. Add a new item to your collection
&lt;/h3&gt;

&lt;p&gt;Here you'll need to add description and other details related to the specific item such as supply limit.  &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AmFPqmcA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h9odq71mg0nxaj3943fo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AmFPqmcA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h9odq71mg0nxaj3943fo.png" alt="Screenshot from 2021-08-07 20-04-52"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-set-prices-and-post-your-listing"&gt;
  &lt;/a&gt;
  3. Set prices and post your listing
&lt;/h3&gt;

&lt;p&gt;You can set a fixed price, highest bid or bundle for the NFT listing. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--soJQTBjt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2vxjjm81zsogbfhfepm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--soJQTBjt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x2vxjjm81zsogbfhfepm.png" alt="Screenshot from 2021-08-07 19-42-31"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-confirm-from-your-wallet"&gt;
  &lt;/a&gt;
  4. Confirm from your wallet
&lt;/h3&gt;

&lt;p&gt;Finally, sign the transaction from your wallet, which will require some gas fees. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CoBw8a-V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjgjpmtmbgecqn7sj4eg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CoBw8a-V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hjgjpmtmbgecqn7sj4eg.png" alt="Screenshot from 2021-08-07 19-42-51"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Once you're done, your item will be listed for sale on the marketplace. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T904doZu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6ln4xfa39t0pifypbr1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T904doZu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s6ln4xfa39t0pifypbr1.jpg" alt="Screenshot from 2021-08-07 01-09-14"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations on minting your first NFT! üéâ&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#some-resources-to-learn-more-about-this-space"&gt;
  &lt;/a&gt;
  Some resources to learn more about this space:
&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;a href="https://www.theverge.com/22310188/nft-explainer-what-is-blockchain-crypto-art-faq"&gt;NFTs, explained&lt;/a&gt;, by &lt;em&gt;The Verge&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://consensys.net/blog/news/why-nfts-not-defi-brought-ethereum-to-the-mainstream/"&gt;Why NFTs brought Ethereum to the Mainstream&lt;/a&gt;, by &lt;em&gt;ConsenSys&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.opensea.io/"&gt;OpenSea Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And finally, if you liked this blog, feel free to check out rest of my content and connect with me on &lt;a href="https://twitter.com/manbirmarwah"&gt;Twitter&lt;/a&gt;. See you on the other side of the metaverse! ;) ü•Ç&lt;/p&gt;

</description>
      <category>nft</category>
      <category>dapps</category>
      <category>ethereum</category>
    </item>
  </channel>
</rss>
