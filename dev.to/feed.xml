<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to build a Tailwind CSS timeline component with Flowbite</title>
      <author>Zoltán Szőgyényi</author>
      <pubDate>Sun, 16 Jan 2022 09:49:46 +0000</pubDate>
      <link>https://dev.to/themesberg/how-to-build-a-tailwind-css-timeline-component-with-flowbite-5638</link>
      <guid>https://dev.to/themesberg/how-to-build-a-tailwind-css-timeline-component-with-flowbite-5638</guid>
      <description>&lt;p&gt;I've been using Tailwind CSS to build websites and the power of the utility classes coupled with the components from &lt;a href="https://flowbite.com"&gt;Flowbite&lt;/a&gt; makes it so much more easier and fun!&lt;/p&gt;

&lt;p&gt;I've started a tutorial series on how to create some of the most commonly used UI components using the classes from Tailwind CSS, and today I want to show you how to build a timeline component.&lt;/p&gt;

&lt;p&gt;Here's a preview of how it will look:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fscOYuI2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sx70hujpy6ouofl56yp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fscOYuI2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sx70hujpy6ouofl56yp.png" alt="Tailwind CSS timeline" width="880" height="473"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tailwind-css-timeline"&gt;
  &lt;/a&gt;
  Tailwind CSS timeline
&lt;/h2&gt;

&lt;p&gt;First of all we need to set up the basic HTML markup. We'll use a &lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt; element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol&amp;gt;                  
    &amp;lt;li&amp;gt;
        &amp;lt;time&amp;gt;February 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
        &amp;lt;time&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;
        &amp;lt;time&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Awesome! Let's now style the spacing, typography, and colors of the elements inside the timeline.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol class="relative border-l border-gray-200"&amp;gt;                  
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="mb-4 text-base font-normal text-gray-500"&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="ml-4"&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Already looking much better. Let's now add the dots and a CTA button link.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol class="relative border-l border-gray-200"&amp;gt;                  
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;February 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="mb-4 text-base font-normal text-gray-500"&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
        &amp;lt;a href="#" class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"&amp;gt;Learn more &amp;lt;svg class="w-3 h-3 ml-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400"&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500"&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Great job! The timeline component should now look like in the preview picture.&lt;/p&gt;

&lt;p&gt;Lastly, let's also apply some of the dark variant classes for the dark mode.&lt;/p&gt;

&lt;p&gt;Note: check out this tutorial on how to set &lt;a href="https://flowbite.com/docs/customize/dark-mode/"&gt;dark mode with Tailwind CSS and Flowbite&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;ol class="relative border-l border-gray-200 dark:border-gray-700"&amp;gt;                  
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"&amp;gt;February 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Application UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="mb-4 text-base font-normal text-gray-500 dark:text-gray-400"&amp;gt;Get access to over 20+ pages including a dashboard layout, charts, kanban board, calendar, and pre-order E-commerce &amp;amp; Marketing pages.&amp;lt;/p&amp;gt;
        &amp;lt;a href="#" class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-2 focus:ring-blue-700 focus:text-blue-700 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700"&amp;gt;Learn more &amp;lt;svg class="w-3 h-3 ml-2" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"&amp;gt;&amp;lt;path fill-rule="evenodd" d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/a&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="mb-10 ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"&amp;gt;March 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;Marketing UI design in Figma&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500 dark:text-gray-400"&amp;gt;All of the pages and components are first designed in Figma and we keep a parity between the two versions even as we update the project.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
    &amp;lt;li class="ml-4"&amp;gt;
        &amp;lt;div class="absolute w-3 h-3 bg-gray-200 rounded-full -left-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"&amp;gt;&amp;lt;/div&amp;gt;
        &amp;lt;time class="mb-1 text-sm font-normal leading-none text-gray-400 dark:text-gray-500"&amp;gt;April 2022&amp;lt;/time&amp;gt;
        &amp;lt;h3 class="text-lg font-semibold text-gray-900 dark:text-white"&amp;gt;E-Commerce UI code in Tailwind CSS&amp;lt;/h3&amp;gt;
        &amp;lt;p class="text-base font-normal text-gray-500 dark:text-gray-400"&amp;gt;Get started with dozens of web components and interactive elements built on top of Tailwind CSS.&amp;lt;/p&amp;gt;
    &amp;lt;/li&amp;gt;
&amp;lt;/ol&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The timeline should look like this in dark mode:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D_nce_bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czslesbdmtnhivninv1l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D_nce_bi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/czslesbdmtnhivninv1l.png" alt="Tailwind CSS dark mode timeline" width="880" height="473"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This &lt;a href="https://flowbite.com/docs/components/timeline/"&gt;Tailwind CSS timeline component&lt;/a&gt; is part of an open source library of Tailwind CSS components called Flowbite.&lt;/p&gt;

&lt;p&gt;You can find more timeline component styles and variants and also a full set of other elements such as buttons, dropdowns, modals, tooltips, and more.&lt;/p&gt;

&lt;p&gt;👉 &lt;a href="https://flowbite.com/docs/components/timeline/"&gt;Flowbite - Tailwind CSS timeline&lt;/a&gt;&lt;br&gt;
📚 &lt;a href="https://flowbite.com/docs/getting-started/introduction/"&gt;Flowbite - Tailwind CSS Components&lt;/a&gt;&lt;/p&gt;

</description>
      <category>tailwindcss</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>opensource</category>
    </item>
    <item>
      <title>CRUD is simple until it's not</title>
      <author>Chakrit Likitkhajorn</author>
      <pubDate>Sun, 16 Jan 2022 09:17:58 +0000</pubDate>
      <link>https://dev.to/chrisza4/crud-is-simple-until-its-not-4n84</link>
      <guid>https://dev.to/chrisza4/crud-is-simple-until-its-not-4n84</guid>
      <description>&lt;p&gt;Every app is just a glorified CRUD app with extra steps.&lt;/p&gt;

&lt;p&gt;There are a lot of debates happening in the dev community between using complex architecture (such as CQRS) and viewing everything as a CRUD.&lt;/p&gt;

&lt;p&gt;I want to clarify when CRUD is simple enough for the job, and when it is not.&lt;/p&gt;

&lt;p&gt;Let say you want to create an accounting system. You have an invoice. Invoice can be created, read, updated and deleted.&lt;/p&gt;

&lt;p&gt;Sounds like a CRUD app.&lt;/p&gt;

&lt;p&gt;So you start with a simple Rails-style framework with REST-style API surface, where everything is just a resource that can be CRUDed.&lt;/p&gt;

&lt;p&gt;The code can look like this (simplified version)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#fit-everything-to-crud"&gt;
  &lt;/a&gt;
  Fit everything to CRUD
&lt;/h1&gt;

&lt;p&gt;Let say that your invoice can be approved. You added &lt;code&gt;status&lt;/code&gt; field to the model. The status can be &lt;code&gt;Draft&lt;/code&gt;, &lt;code&gt;Confirmed&lt;/code&gt;, &lt;code&gt;Approved&lt;/code&gt;, &lt;code&gt;Commented&lt;/code&gt; and &lt;code&gt;Rejected&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And then you some business requirement&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When an invoice is approved, send a notification to someone so they can proceed to pay.&lt;/li&gt;
&lt;li&gt;When an invoice is commented or rejected, send a notification to the creator so they can be revised.&lt;/li&gt;
&lt;li&gt;When a confirmed invoice has a total of more than 100,000 USD, send a notification to the director level.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If we still model by CRUD, we need a code that looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;update_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
  &lt;span class="n"&gt;new_status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt;

  &lt;span class="c1"&gt;# Send notification to payment department if status changed to approved&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="ss"&gt;:Approved&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;new_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Approved&lt;/span&gt;
    &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:payment_department&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# Send notification to invoice owner if invoice was commented or rejected&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Confirmed&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:Commented&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:Rejected&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;included?&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="c1"&gt;# Send notification to management board if invoice exceed particular amount&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;old_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Draft&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;new_status&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="ss"&gt;:Confirmed&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;total&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;100000&lt;/span&gt;
    &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:C_level&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So now we can generalize everything as CRUD.&lt;/p&gt;

&lt;p&gt;Six months later, we want to add functionality to the invoice approval step.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We want to ensure that any invoice exceeding 100,000 USD must be approved by someone with a proper level of authorization&lt;/li&gt;
&lt;li&gt;We want to lock any invoice that has been rejected more than 3 times.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If we wrote code as CRUD, to implement these requirements you must:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Carefully read through update hoops and see which line is related to which.&lt;/li&gt;
&lt;li&gt;If 2 programmers work in parallel, they might need to resolve to merge conflict.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1&gt;
  &lt;a href="#use-business-intent"&gt;
  &lt;/a&gt;
  Use business intent
&lt;/h1&gt;

&lt;p&gt;Another type of implementation is to put a business intent into our model.&lt;/p&gt;

&lt;p&gt;Instead of update, we have these:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;approve&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:Approved&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
  &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:payment_department&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;reject&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="ss"&gt;:Reject&lt;/span&gt;
  &lt;span class="n"&gt;invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt;
  &lt;span class="no"&gt;Notification&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;send_to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:invoice&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;owner&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="c1"&gt;# And so-on&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Instead of translating business intention such as approve to be like: approval is just an update with extra steps. We instead embedded business intention directly into our method.&lt;/p&gt;

&lt;p&gt;When the business what to modify the approval process, we can search for &lt;code&gt;approve&lt;/code&gt; method.&lt;br&gt;
When the business what to modify the confirmation process, we can search for &lt;code&gt;confirm&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Even if this contains more code, it's become easier to modify and reason about.&lt;/p&gt;

&lt;p&gt;This is the power of moving away from CRUD based modelling.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#its-not-black-and-white"&gt;
  &lt;/a&gt;
  It's not black and white
&lt;/h1&gt;

&lt;p&gt;CRUD is a simple model. There are only four concepts and it can handle almost every requirement imaginable.&lt;/p&gt;

&lt;p&gt;Everything can be viewed as "CRUD with extra steps". Even network communication can be viewed as "CRUD of network packet with extra steps".&lt;/p&gt;

&lt;p&gt;It is a simple and powerful model. But it has its own limitation.&lt;/p&gt;

&lt;p&gt;CRUD based method works well until collaboration break.&lt;/p&gt;

&lt;p&gt;You can fit nearly every app into the CRUD model, but at what cost?&lt;/p&gt;

&lt;p&gt;The question is here is not can you, it's should you.&lt;/p&gt;

&lt;p&gt;If your software grows based on some particular business process, such as if your accounting module is famous for a world-class approval system, it's worth you putting a highlight to those business intent rather than generalize it to "just CRUD with extra steps".&lt;/p&gt;

&lt;p&gt;I don't have a clear line between when to model the app as CRUD and when to do the domain event-based app.&lt;/p&gt;

&lt;p&gt;But I know that if communication starts to break down. If a requirement needs 2 days of dev assessment just to translate the requirement into codebase modelling, check where to change, what is the impact.&lt;/p&gt;

&lt;p&gt;Your model might not be sufficient.&lt;/p&gt;

&lt;p&gt;And that's when you might need to move on from the simple CRUD model.&lt;/p&gt;

</description>
      <category>architecture</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Day 79 of 100 Days of Code &amp; Scrum: Eleventh Weekly Retrospective</title>
      <author>Rammina</author>
      <pubDate>Sun, 16 Jan 2022 08:51:28 +0000</pubDate>
      <link>https://dev.to/rammina/day-79-of-100-days-of-code-scrum-eleventh-weekly-retrospective-acj</link>
      <guid>https://dev.to/rammina/day-79-of-100-days-of-code-scrum-eleventh-weekly-retrospective-acj</guid>
      <description>&lt;p&gt;Happy Sunday, everyone!&lt;/p&gt;

&lt;p&gt;I had trouble keeping up with my goals this week, because they involved different things. These were learning more about Next.js and Scrum, adding pages to my company site, sending job proposals and cold e-mails, and finally, reviewing some of my skills to prepare for technical interviews. It was honestly overwhelming at times, but it was fairly productive.&lt;/p&gt;

&lt;p&gt;Let's move on to my weekly retrospective!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#weekly-sprint-goals"&gt;
  &lt;/a&gt;
  Weekly Sprint Goals
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#company-website"&gt;
  &lt;/a&gt;
  Company Website
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;add more sections to other pages and make them more detailed:

&lt;ul&gt;
&lt;li&gt;the &lt;a href="https://www.rammina.com/services"&gt;Services page&lt;/a&gt; could include specific sections for "Website Development," such as Frontend Web Development and Backend Web Development, what kind of technology stacks are used, and so on.&lt;/li&gt;
&lt;li&gt;Digital advertising, for example, could include different types of services and techniques such as email marketing, social media marketing, and the likes.&lt;/li&gt;
&lt;li&gt;Writing also could include different types of writing services, including articles, blogs, and etc.&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#nextjs"&gt;
  &lt;/a&gt;
  Next.js
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;continue learning by reading the Next.js documentation.&lt;/li&gt;
&lt;li&gt;continue going through &lt;a href="https://www.udemy.com/course/nextjs-react-the-complete-guide/"&gt;Next.js &amp;amp; React by Maximilian Schwarzmüller&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;learn about SWR and go through the documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#scrum"&gt;
  &lt;/a&gt;
  Scrum
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;continue to learn more about Scrum, through reading articles and watching videos.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#job-searching"&gt;
  &lt;/a&gt;
  Job Searching
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;make reusable templates for answering a job application questions.&lt;/li&gt;
&lt;li&gt;create a template for cold outreach for looking for contract/subcontract work.&lt;/li&gt;
&lt;li&gt;make reusable templates for cold e-mailing businesses to let me work for them (searching for clients).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#weekly-review"&gt;
  &lt;/a&gt;
  Weekly Review
&lt;/h2&gt;

&lt;p&gt;Here are the things I've managed to do:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add Web Development and Digital Marketing Services pages (not deployed, because I have one more page to add)&lt;/li&gt;
&lt;li&gt;continue to learn more Next.js by going through &lt;a href="https://www.udemy.com/course/nextjs-react-the-complete-guide/"&gt;Next.js &amp;amp; React by Maximilian Schwarzmüller&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;continued studying Scrum by reading articles on the &lt;a href="https://www.scrum.org/pathway/scrum-master"&gt;Scrum.org Scrum Master Learning Path&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;made reusable templates for cold emailing to companies and potential clients.&lt;/li&gt;
&lt;li&gt;expanded my network.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#weekly-retrospective"&gt;
  &lt;/a&gt;
  Weekly Retrospective
&lt;/h2&gt;

&lt;p&gt;Moving on, let's tackle what I've managed to do well, what my shortcomings are, and what I could do better next time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-went-great"&gt;
  &lt;/a&gt;
  What Went Great
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I made some progress with building services pages for my &lt;a href="https://www.rammina.com"&gt;company website&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I learned more about Next.js, even if just a little bit.&lt;/li&gt;
&lt;li&gt;read more articles about Scrum.&lt;/li&gt;
&lt;li&gt;now, I have templates for reaching out to companies and businesses.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#some-mistakes-ive-made"&gt;
  &lt;/a&gt;
  Some Mistakes I've Made
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I forgot to continue reading SWR documentation.&lt;/li&gt;
&lt;li&gt;I didn't finish all of the pages for the Services of my website.&lt;/li&gt;
&lt;li&gt;I wasn't managing my time efficiently.&lt;/li&gt;
&lt;li&gt;I don't have a set structure and schedule for doing things, so I tend to forget them eventually.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#things-i-could-improve-on"&gt;
  &lt;/a&gt;
  Things I Could Improve On
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;limit distractions especially when I'm in the middle of work.&lt;/li&gt;
&lt;li&gt;try to do things at the same time and setting if possible to avoid procrastination.&lt;/li&gt;
&lt;li&gt;write more recyclable code (components and styling), so I don't have to keep repeating the same work.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resourcesrecommended-readings"&gt;
  &lt;/a&gt;
  Resources/Recommended Readings
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scrumguides.org/scrum-guide.html"&gt;2020 Scrum Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scrum.org/pathway/scrum-master"&gt;Scrum.org Scrum Master Learning Path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextjs.org/docs/getting-started"&gt;Next.js official documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://swr.vercel.app/"&gt;SWR official documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for the support, everyone! Enjoy your weekend!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9gNNIpK9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x9ayfxxxaz2g2hfcqbsk.png" alt="Rammina Thank You Banner" width="880" height="293"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disclaimer"&gt;
  &lt;/a&gt;
  DISCLAIMER
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;This is not a guide&lt;/strong&gt;, it is just me sharing my experiences and learnings. This post only expresses my thoughts and opinions (based on my limited knowledge) and is in no way a substitute for actual references. If I ever make a mistake or if you disagree, I would appreciate corrections in the comments!&lt;/p&gt;



&lt;h3&gt;
  &lt;a href="#other-media"&gt;
  &lt;/a&gt;
  Other Media
&lt;/h3&gt;

&lt;p&gt;Feel free to reach out to me in other media!&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://www.rammina.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BK-zilS2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1638444046/rammina-button-128_x9ginu.png" alt="Rammina Logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://twitter.com/RamminaR"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--C341ckO3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636792959/twitter-logo_laoyfu_pdbagm.png" alt="Twitter logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span&gt;&lt;a href="https://github.com/Rammina"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u4ZlXeay--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/rammina/image/upload/v1636795051/GitHub-Emblem2_epcp8r.png" alt="Github logo" width="128" height="50"&gt;&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>beginners</category>
      <category>javascript</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Writing Chrome Extensions Using Svelte-Kit and Manifest v3</title>
      <author>Michel Canta</author>
      <pubDate>Sun, 16 Jan 2022 08:12:35 +0000</pubDate>
      <link>https://dev.to/michmich112/writing-chrome-extensions-using-svelte-kit-and-manifest-v3-mkd</link>
      <guid>https://dev.to/michmich112/writing-chrome-extensions-using-svelte-kit-and-manifest-v3-mkd</guid>
      <description>&lt;p&gt;Svelte-Kit has been an amazing tool to create great responsive and reactive websites. But with its roots as a compiler, I wondered how I could use it to create a Chrome Extension, and as it turns out… it's really simple.&lt;/p&gt;




&lt;p&gt;Today, we're going to see how we can build a simple extension with Svelte-kit and use Chrome's &lt;a href="https://developer.chrome.com/docs/extensions/mv3/"&gt;Manifest V3&lt;/a&gt; which will allow us to use promisified versions of many of the Chrome API's methods. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: this method can work with Manifest V2 as well&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#1-setting-up-our-repo"&gt;
  &lt;/a&gt;
  1. Setting Up Our Repo
&lt;/h2&gt;

&lt;p&gt;We'll start with an empty repo where we will create the template svelte kit project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm init svelte@next my-extension
&lt;span class="nb"&gt;cd &lt;/span&gt;my-app
npm &lt;span class="nb"&gt;install
&lt;/span&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are going to replace the default index page that is created with the following code that will allow us to get the url of the current tab:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GjzSUmlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1j81g00lpk6ghwl59pxn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GjzSUmlD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1j81g00lpk6ghwl59pxn.png" alt="src/routes/index.svelte" width="880" height="537"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: We are using the Chrome api as other methods are blocked by the extension executer for safety reasons.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Update the &lt;code&gt;body&lt;/code&gt; tag in the the &lt;code&gt;app.html&lt;/code&gt; file to configure the max size of the extension popup as such:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hVI4cvw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gykhtkrxj70w5u6jeywm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hVI4cvw1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gykhtkrxj70w5u6jeywm.png" alt="src/app.html" width="880" height="485"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once updated we will create our manifest file in the &lt;code&gt;/static&lt;/code&gt; folder. We will be using manifest V3 here as that is the latest from the Chrome team.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"My first Svelte Extension"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"A browser extension made with Svelte Kit"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"manifest_version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"permissions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"activeTab"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"action"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"default_title"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Svelte Extension"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"default_icon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"favicon.png"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"default_popup"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"index.html"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now when we build our extension, the manifest file will be included in our build folder making it much easier and cleaner.&lt;/p&gt;

&lt;p&gt;Finally we need to change our adapter to the &lt;a href="https://github.com/michmich112/sveltekit-adapter-chrome-extension"&gt;&lt;code&gt;sveltekit-adapter-chrome-extension&lt;/code&gt;&lt;/a&gt; as the usual &lt;code&gt;@sveltekit/adapter-static&lt;/code&gt; creates an inline script that is blocked in Manifest V3 due to Content Security Policies (The same is true for Manifest V2 but you are able to define a Content Security Policy rule with a the sha256 of the script or a nonce, that bypasses it in Manifest V2).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;-D&lt;/span&gt; sveltekit-adapter-chrome-extension
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We are then able to build our project running &lt;code&gt;npm run build&lt;/code&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2testing-our-extension"&gt;
  &lt;/a&gt;
  2.Testing our Extension
&lt;/h2&gt;

&lt;p&gt;Click on the extension icon in your chrome browser and then click on manage extensions&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UmlI0eZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybcwkl8mmrlj6jasyk55.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UmlI0eZT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ybcwkl8mmrlj6jasyk55.png" alt="Navigation to get to Extension management page" width="328" height="231"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure that developer mode is turned on (on the top right side of the page) then click on &lt;code&gt;Load Unpacked&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nT-p2YPW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5ku53ngxu7qkdfx4egz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nT-p2YPW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y5ku53ngxu7qkdfx4egz.png" alt="Extension management page top bar" width="784" height="122"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Select your &lt;code&gt;build&lt;/code&gt; folder from the file picker and open it. You should now see your extension on the page.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DSZ8pOOI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhcz9ddu8ob1dtwu27qu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DSZ8pOOI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lhcz9ddu8ob1dtwu27qu.png" alt="Extension appears on the extension management page" width="774" height="347"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Make sure it is enabled and navigate to any page you want. Toggle the extension and press the button!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tbD1GKts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/splo0d9wgf9cw4752o4t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tbD1GKts--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/splo0d9wgf9cw4752o4t.png" alt="Success!" width="880" height="637"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There you go! You've just made your first Chrome extension using Svelte Kit and Manifest v3!&lt;/p&gt;

</description>
      <category>svelte</category>
      <category>javascript</category>
      <category>chrome</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>A first look at Prisma Studio</title>
      <author>Chris Bongers</author>
      <pubDate>Sun, 16 Jan 2022 08:07:37 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/a-first-look-at-prisma-studio-1nmg</link>
      <guid>https://dev.to/dailydevtips1/a-first-look-at-prisma-studio-1nmg</guid>
      <description>&lt;p&gt;Ever since I started showing interest in Prisma, the Studio element kept showing up everywhere.&lt;/p&gt;

&lt;p&gt;Prisma studio is basically a GUI for the data in your database.&lt;br&gt;
I haven't used it myself at the time of writing, so we'll be learning what it can do together.&lt;/p&gt;

&lt;p&gt;For this, we'll use the project we just created, and you can follow along by using this &lt;a href="https://github.com/rebelchris/local-prisma/tree/part-2"&gt;GitHub branch&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#what-is-prisma-studio"&gt;
  &lt;/a&gt;
  What is Prisma Studio
&lt;/h2&gt;

&lt;p&gt;Prisma Studio is a visual interface to the data in your database.&lt;/p&gt;

&lt;p&gt;You can use this to quickly visualize data and work with the data in there.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VDqbm8rK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641449124818/38UArvTsP.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VDqbm8rK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641449124818/38UArvTsP.png" alt="Prisma studio" width="880" height="624"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The cool part is that it runs in your browser, and you don't need to set up any connection as it's already available in your project.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: You can download a desktop app as well if your prefer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can quickly open all the models your application has and interact with it the CRUD way from the tool.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;CRUD&lt;/code&gt; stands for: Create, Read, Update, Delete.&lt;/p&gt;

&lt;p&gt;You can also use filters and sorting options, making it super easy to navigate through your data.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#launching-prisma-studio"&gt;
  &lt;/a&gt;
  Launching Prisma Studio
&lt;/h2&gt;

&lt;p&gt;I've never seen a database GUI that was so easy to launch. Literally all you have to do is run the following command from a Prisma project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx prisma studio
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It will automatically open &lt;code&gt;localhost:5555&lt;/code&gt;, where you can see your data.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V0Vz8sYP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641449171487/uJP7qiMBGB.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0Vz8sYP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1641449171487/uJP7qiMBGB.png" alt="Local Prisma studio" width="612" height="671"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Alternatively, you can download a native app from the Prisma website.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.prisma.io/studio"&gt;Download the Prisma Studio app&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Definitely cool we can launch a GUI without any setup needed.&lt;br&gt;
I will 100% use this if I need a quick visualization of my data.&lt;/p&gt;

&lt;p&gt;Will you be trying out Prisma Studio?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>database</category>
    </item>
    <item>
      <title> var vs let &amp; const. </title>
      <author>RabeDatta</author>
      <pubDate>Sun, 16 Jan 2022 07:05:36 +0000</pubDate>
      <link>https://dev.to/rabedatta/difference-between-var-let-and-const-2l1e</link>
      <guid>https://dev.to/rabedatta/difference-between-var-let-and-const-2l1e</guid>
      <description>&lt;h2&gt;
  &lt;a href="#redeclaration-of-variable"&gt;
  &lt;/a&gt;
  Redeclaration of variable
&lt;/h2&gt;

&lt;p&gt;You can redeclare a variable with var but not with let and const:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;46&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 46&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But if we try to redeclare a variable with const and let, we will get a syntax error:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="kd"&gt;let&lt;/span&gt;  &lt;span class="nx"&gt;foo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;46&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
&lt;span class="c1"&gt;// SyntaxError: Identifier 'foo' has already been declared.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#global-scope-amp-function-scope-vs-block-scope"&gt;
  &lt;/a&gt;
  Global scope &amp;amp; function scope vs block scope
&lt;/h2&gt;

&lt;p&gt;Var only knows global scope and function scope meaning if you declare a var variable inside an if statement, you can still access it from outside of that if statement, but you can't do with let and const. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Max&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Max&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;hobbies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sports&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cooking&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hobbies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;// [ 'Sports', 'Cooking' ]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hobbies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="c1"&gt;// 'Max' [ 'Sports', 'Cooking' ]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice that you can still access hobbies from outside of that if block. But in the case of let and const, we can't do that since both let &amp;amp; const are block scoped.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Max&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Max&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;hobbies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Sports&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Cooking&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;hobbies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;// [ 'Sports', 'Cooking' ]&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;hobbies&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="c1"&gt;// ReferenceError: hobbies is not defined&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, we got a &lt;code&gt;ReferenceError&lt;/code&gt;. Let and cost only care about curly braces(except for curly braces of an object). You can't access variable defined inside a child block from outside. Also, you can't access variable that you defined inside a nested block.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Max&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;test&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="c1"&gt;// ReferenceError: test is not defined&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hoisting-var-vs-let-amp-cost"&gt;
  &lt;/a&gt;
  Hoisting: var vs let &amp;amp; cost
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;when it comes to var, JavaScript initializes the hoisted variable as undefined:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//'undefined'&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Rob&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;when it comes to let &amp;amp; const, the declarations remain uninitialized (Cannot be Hoisted) :
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;        &lt;span class="c1"&gt;// ReferenceError: &lt;/span&gt;

&lt;span class="nx"&gt;Cannot&lt;/span&gt; &lt;span class="nx"&gt;access&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;before&lt;/span&gt; &lt;span class="nx"&gt;initialization&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Rob&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Deep dive into React codebase [EP2: What package from the repo is the most popular on npm?]</title>
      <author>Nikita Grechino</author>
      <pubDate>Sun, 16 Jan 2022 06:56:54 +0000</pubDate>
      <link>https://dev.to/fromaline/deep-dive-into-react-codebase-ep2-what-package-from-the-repo-is-the-most-popular-on-npm-2328</link>
      <guid>https://dev.to/fromaline/deep-dive-into-react-codebase-ep2-what-package-from-the-repo-is-the-most-popular-on-npm-2328</guid>
      <description>&lt;h2&gt;
  &lt;a href="#preface"&gt;
  &lt;/a&gt;
  Preface
&lt;/h2&gt;

&lt;p&gt;In &lt;a href="https://dev.to/fromaline/deep-dive-into-react-codebase-ep1-prerequisites-33ak"&gt;the previous episode&lt;/a&gt; we laid the foundation of our React understanding and now we are ready to continue the journey! &lt;br&gt;
Today we'll find out about other packages, that live in the React monorepo, why they are there, and which package is the most popular on NPM!&lt;/p&gt;

&lt;p&gt;But before doing that, let's quickly recall &lt;em&gt;essential&lt;/em&gt; info, that we need today.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#recall"&gt;
  &lt;/a&gt;
  Recall
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lXCYxjem--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zlmaqq3bq10otflzxe7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lXCYxjem--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7zlmaqq3bq10otflzxe7.png" alt="recall of the last article" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;React is a monorepo, that contains different React-related projects. More specifically:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;React Core package for defining React components, called just &lt;code&gt;react&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;A bunch of renderers, that of course render React components in different environments.

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;react-dom&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-native-renderer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-art&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-test-renderer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;react-noop-renderer&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;A reconciler, that implements a diffing algorithm, called &lt;code&gt;react-reconciler&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#continue-with-the-repository-setup"&gt;
  &lt;/a&gt;
  Continue with the repository setup
&lt;/h2&gt;

&lt;p&gt;Now after the recall, we're good to go. So let's examine the rest of the packages.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sidenote: All packages are located, following a single pattern &lt;code&gt;./packages/{package-name}&lt;/code&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#utility-packages"&gt;
  &lt;/a&gt;
  Utility packages
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;react-is&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
It's a utility package, that allows testing whether some value is a valid React element or does some component is of a specific React element type.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;ReactIs&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-is&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ExampleComponent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createElement&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Is a valid React element?&lt;/span&gt;
&lt;span class="nx"&gt;ReactIs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isValidElementType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ExampleComponent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;Ract&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;isisValidElementType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;

&lt;span class="c1"&gt;// Does a component is of specific React element type?&lt;/span&gt;
&lt;span class="nx"&gt;ReactIs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;typeOf&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;ReactIs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Element&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="nx"&gt;ReactIs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;typeOf&lt;/span&gt;&lt;span class="p"&gt;(&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;ReactIs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Fragment&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The later use-case strongly reminds me about &lt;code&gt;typeof&lt;/code&gt; operator from vanilla JavaScript. It's probably because it allows you to test arbitrary values' types, as well.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// true&lt;/span&gt;
&lt;span class="k"&gt;typeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Hello world!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;number&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;&lt;code&gt;scheduler&lt;/code&gt;&lt;/strong&gt;&lt;br&gt;
This package is used for scheduling in the browser. Currently, it's only used by React itself.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#subscriptionrelated-packages"&gt;
  &lt;/a&gt;
  Subscription-related packages
&lt;/h3&gt;

&lt;p&gt;There are two packages for dealing with subscriptions on external resources in React.  &lt;strong&gt;&lt;code&gt;create-subscription&lt;/code&gt;&lt;/strong&gt; utility function allow subscribing to external data sources from a React component, while &lt;strong&gt;&lt;code&gt;use-subscription&lt;/code&gt;&lt;/strong&gt; hook manages such subscriptions in concurrent mode.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#devtoolsrelated-packages"&gt;
  &lt;/a&gt;
  Devtools-related packages
&lt;/h3&gt;

&lt;p&gt;We won't examine tooling for developers in the series, because it's an advanced topic on its own. But you need to know, that React monorepo hosts a lot of packages that help developers create their apps with React, like &lt;strong&gt;&lt;code&gt;react-devtools-core&lt;/code&gt;&lt;/strong&gt;,  &lt;strong&gt;&lt;code&gt;react-devtools&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;react-devtools-extensions&lt;/code&gt;&lt;/strong&gt; itself, that you might be lucky to use.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jj9lYQ6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsr57i8gil5t3wudn522.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jj9lYQ6m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gsr57i8gil5t3wudn522.png" alt="react devtools extension" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is only one package, that is related to this category, but a bit out of the ordinary here. It's &lt;strong&gt;&lt;code&gt;eslint-plugin-react-hooks&lt;/code&gt;&lt;/strong&gt;.&lt;br&gt;
Even though it doesn't have &lt;code&gt;devtool&lt;/code&gt; in its name. It's directly related to tooling for developers because it's an eslint plugin to enforce the so-called &lt;a href="https://reactjs.org/docs/hooks-rules.html"&gt;Rules of Hooks&lt;/a&gt;. It usually gives me warns, that I need to add something to the dependency array 😄&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sidenote: Such a huge amount of tools for developers leads me to believe, that it may be one of the reasons why React got traction in the first place. Tooling for it was and is officially supported by React team and you didn't need to surf the internet to find external sources. But it's only a guess.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#packages-for-testing"&gt;
  &lt;/a&gt;
  Packages for testing
&lt;/h3&gt;

&lt;p&gt;We won't examine packages for testing in the series, because it's out of scope, as well. Just want to let you know, that the React monorepo contains a couple of those, like &lt;strong&gt;&lt;code&gt;dom-event-testing-library&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;jest-mock-scheduler&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;jest-react&lt;/code&gt;&lt;/strong&gt;. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#experimental-packages"&gt;
  &lt;/a&gt;
  Experimental packages
&lt;/h3&gt;

&lt;p&gt;There are also a bunch of experimental packages. We won't investigate them at all in this series, because they are not stable and finished yet. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#subtotal"&gt;
  &lt;/a&gt;
  Subtotal
&lt;/h3&gt;

&lt;p&gt;So, now we know about all packages, the React monorepo has to offer. We'll pay most of our attention to &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;react-reconciler&lt;/code&gt;, and &lt;code&gt;react-dom&lt;/code&gt; because it's bread and butter for React developers. But we'll investigate other packages, in case it's crucial for our overall understanding.&lt;/p&gt;

&lt;p&gt;Uff, it was a long run, so now it's time for the fun stuff!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-most-popular-npm-package-that-lives-in-the-react-monorepo"&gt;
  &lt;/a&gt;
  What is the most popular npm package, that lives in the React monorepo?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#top-5-npm-packages-that-live-in-the-react-monorepo"&gt;
  &lt;/a&gt;
  Top 5 npm packages, that live in the React monorepo.
&lt;/h3&gt;

&lt;p&gt;First things first, let's deal with the basics. Here is the infographic of the Top 5 most popular npm packages from the monorepo with the number of downloads in the past 12 months.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K5n8N1Tt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1mjlgcpo100xelxuzjzs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K5n8N1Tt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1mjlgcpo100xelxuzjzs.png" alt="info-graphics with top 5 most popular npm packages, that live in the react monorepo" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The interesting part is the &lt;code&gt;react&lt;/code&gt; package itself isn't the most popular out there. Actually, &lt;em&gt;the most popular package&lt;/em&gt; is &lt;code&gt;react-is&lt;/code&gt; with 639 million downloads, then goes &lt;code&gt;scheduler&lt;/code&gt; with 421 million and only after &lt;code&gt;react&lt;/code&gt; with its' "miserable" 404 million.&lt;/p&gt;

&lt;p&gt;Another great way to visualize it is to check &lt;a href="https://www.npmtrends.com/eslint-plugin-react-hooks-vs-react-vs-react-dom-vs-react-is-vs-scheduler"&gt;npm trends graphs&lt;/a&gt; and be amazed again by how much &lt;code&gt;react-is&lt;/code&gt; is more popular than other packages 😄&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#full-stats"&gt;
  &lt;/a&gt;
  Full stats
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1d1El0Qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgkixpk1vkogbapcghmf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1d1El0Qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kgkixpk1vkogbapcghmf.png" alt="pie chart with last year's downloads of npm packages, that live in the react monorepo" width="880" height="582"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And here is a pie chart with all packages, that are published on npm and which source code is currently in the monorepo.&lt;br&gt;
The interesting bit here is, that the number of downloads of the bottom 10 packages (colored in green) is only around 1% of the overall downloads.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrap-up"&gt;
  &lt;/a&gt;
  Wrap up
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#today-we-learned"&gt;
  &lt;/a&gt;
  Today we learned
&lt;/h3&gt;

&lt;p&gt;Let's sum up different things, that we learned from this episode.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In addition to the React Core, renderers, and the reconciler, the React monorepo contains a whole lot of different packages, including:

&lt;ul&gt;
&lt;li&gt;Different utility packages&lt;/li&gt;
&lt;li&gt;Devtools-related packages&lt;/li&gt;
&lt;li&gt;Packages for testing&lt;/li&gt;
&lt;li&gt;Experimental packages&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;We'll pay most of our attention to &lt;code&gt;react&lt;/code&gt;, &lt;code&gt;react-reconciler and&lt;/code&gt;react-dom` because it's bread and butter for React developers.&lt;/li&gt;
&lt;li&gt;The most popular npm package from the React monorepo is not React itself, it's &lt;code&gt;react-is&lt;/code&gt;. React package is only the third one on the list.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#im-looking-forward-to-similar-articles-what-should-i-do"&gt;
  &lt;/a&gt;
  I'm looking forward to similar articles, what should I do?
&lt;/h3&gt;

&lt;p&gt;First of all, if you &lt;em&gt;do like&lt;/em&gt; this post leave a reaction or/and a comment to let me know, that I am going in the right direction. I really encourage you to leave any constructive feedback, either positive or negative.&lt;/p&gt;

&lt;p&gt;If you want more content like this &lt;strong&gt;right now&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check out &lt;a href="https://dev.to/fromaline/why-you-have-to-use-classname-in-react-but-not-in-preact-3fdm"&gt;my article&lt;/a&gt;, which tells a story of why you have to use &lt;code&gt;className&lt;/code&gt; instead of &lt;code&gt;class&lt;/code&gt; in React components.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you want more content like this &lt;strong&gt;next week&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Follow &lt;a href="https://dev.to/fromaline"&gt;me here on dev.to&lt;/a&gt;, I am going to post the next episode of the  &lt;em&gt;Deep-dive-into-React-codebase series&lt;/em&gt;  on January 23 (next Sunday!).&lt;/li&gt;
&lt;li&gt;Follow &lt;a href="https://twitter.com/fromaline"&gt;me on Twitter&lt;/a&gt;, if you want to know about every article I made and also read their sum-ups in threads.&lt;/li&gt;
&lt;li&gt;Additionally, you may follow &lt;a href="https://blog.fromaline.com/"&gt;me on hashnode&lt;/a&gt;, I'll try to do my best to post an article every week there or even make a special hashnode-exclusive series.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Headphone responsive landing page with HTML CSS</title>
      <author>Atul Prajapati</author>
      <pubDate>Sun, 16 Jan 2022 06:26:05 +0000</pubDate>
      <link>https://dev.to/atulcodex/headphone-responsive-landing-page-with-html-css-5fi0</link>
      <guid>https://dev.to/atulcodex/headphone-responsive-landing-page-with-html-css-5fi0</guid>
      <description>&lt;p&gt;This is my 1st website of the "10 responsive websites with HTML CSS" challenge. This challenge is inspired by the florin pops "10 websites with HTML CSS" challenge which is currently published on YouTube.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BoRB0kic5M0"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Headphone – Single Product Shop HTML CSS Theme is an elegantly designed and versatile Product theme that gives you smartly optimized page layouts and sections so you can easily create a stunning Product store for a single product. It incorporates a clean and modern design to give your website a professional look in little to no time.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#features"&gt;
  &lt;/a&gt;
  Features
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;HTML5 &amp;amp; CSS3&lt;/li&gt;
&lt;li&gt;No framework&lt;/li&gt;
&lt;li&gt;Responsive Template&lt;/li&gt;
&lt;li&gt;Free icons used&lt;/li&gt;
&lt;li&gt;Pixel Perfect&lt;/li&gt;
&lt;li&gt;Clean &amp;amp; Unique Design&lt;/li&gt;
&lt;li&gt;Easy to customize&lt;/li&gt;
&lt;li&gt;Retina Ready&lt;/li&gt;
&lt;li&gt;Unlimited Colors&lt;/li&gt;
&lt;li&gt;Boxed or Wide layout&lt;/li&gt;
&lt;li&gt;SEO friendly&lt;/li&gt;
&lt;li&gt;Super fast loading speed&lt;/li&gt;
&lt;/ul&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/atulcodex"&gt;
        atulcodex
      &lt;/a&gt; / &lt;a href="https://github.com/atulcodex/headphone"&gt;
        headphone
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Headphone – Single Product Shop HTML CSS Theme is an elegantly designed and versatile Product theme that gives you smartly optimized page layouts and sections so you can easily create a stunning Product store for a single product. It incorporates a clean and modern design to give your website a professional look in little to no time.
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;h3&gt;
Headphone single page website template&lt;/h3&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://github.com/atulcodex/headphone/blob/main/headphone-preview.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u5Rj2NTJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/atulcodex/headphone/raw/main/headphone-preview.gif" alt="Headphone single page website template"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Headphone – Single Product Shop HTML CSS Theme is an elegantly designed and versatile Product theme that gives you smartly optimized page layouts and sections so you can easily create a stunning Product store for a single product. It incorporates a clean and modern design to give your website a professional look in little to no time.&lt;/p&gt;
&lt;h3&gt;
Features&lt;/h3&gt;
&lt;ul class="contains-task-list"&gt;
&lt;li class="task-list-item"&gt;
 HTML5 &amp;amp; CSS3&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 No framework&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Responsive Template&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Free icons used&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Pixel Perfect&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Clean &amp;amp; Unique Design&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Easy to customize&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Retina Ready&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Unlimited Colors&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Boxed or Wide layout&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 SEO friendly&lt;/li&gt;
&lt;li class="task-list-item"&gt;
 Super fast loading speed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;.
.
.
.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://headphone-atulcodex.netlify.app/" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/08475b45ac77dd012c7135c92310ab15ff8833b3e4b0dc137e6fb6dabad73b8e/68747470733a2f2f692e6962622e636f2f76774e386367572f6c6976652d64656d6f2e706e67" alt="Headphone - Responsive landing page"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;.
.
.&lt;/p&gt;
&lt;h5&gt;
Support me and my work to see more such projects&lt;/h5&gt;
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/atulcodex" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/c968055274b1e1804d6f49be3455388190da28566db8a51b28f727e16d767498/68747470733a2f2f692e6962622e636f2f3772523953344c2f6275792d6d652d612d636f666665652e706e67" alt="Atul - Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;



&lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/atulcodex/headphone"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


&lt;p&gt;&lt;a href="https://headphone-atulcodex.netlify.app/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NzZUVGPk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/vwN8cgW/live-demo.png" alt="Headphone - Responsive landing page" width="640" height="56"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#support-me-and-my-work-to-see-more-such-projects"&gt;
  &lt;/a&gt;
  Support me and my work to see more such projects
&lt;/h5&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/atulcodex"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9jkkH6N0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.ibb.co/7rR9S4L/buy-me-a-coffee.png" alt="Atul - Buy Me A Coffee" width="640" height="80"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
      <category>todayilearned</category>
    </item>
    <item>
      <title>18 ways to ATTACK a Vault server | Production hardening | Tharun</title>
      <author>Tharun Shiv</author>
      <pubDate>Sun, 16 Jan 2022 06:25:25 +0000</pubDate>
      <link>https://dev.to/developertharun/18-ways-to-attack-a-vault-server-production-hardening-tharun-2a1f</link>
      <guid>https://dev.to/developertharun/18-ways-to-attack-a-vault-server-production-hardening-tharun-2a1f</guid>
      <description>&lt;h2&gt;
  &lt;a href="#youtube-video"&gt;
  &lt;/a&gt;
  YouTube video
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/3ikQlRQAso4"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#podcast"&gt;
  &lt;/a&gt;
  Podcast:
&lt;/h2&gt;

&lt;p&gt;&lt;iframe src="https://open.spotify.com/embed/episode/6FyVgWpLYYmehmA6KzVJM7" width="100%" height="232px"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#episode"&gt;
  &lt;/a&gt;
  Episode
&lt;/h2&gt;

&lt;p&gt;In this episode we will look at 18 ways in which your Hashicorp Vault server or any Linux server in general can be attacked. We will also discuss on how to prevent those and secure your server. This process is also known as production hardening. &lt;/p&gt;

&lt;p&gt;Written by,&lt;br&gt;
&lt;/p&gt;
&lt;div class="ltag__user ltag__user__id__378811"&gt;
  
    .ltag__user__id__378811 .follow-action-button {
      background-color: #1e90ff !important;
      color: #fdf9f3 !important;
      border-color: #1e90ff !important;
    }
  
    &lt;a href="/developertharun" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cdxCiXS_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--CuAC2zZW--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/378811/dfe9c221-cff5-4e4d-9fcb-61fb3ca2bdd0.png" alt="developertharun image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/developertharun"&gt;Tharun Shiv&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/developertharun"&gt;Site Reliability Engineer | Blogger | Podcasts | Youtube @ developertharun&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#thank-you-for-reading-this-is-tharun-shiv-aka-developer-tharun"&gt;
  &lt;/a&gt;
  Thank you for reading, This is Tharun Shiv a.k.a Developer Tharun
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4DVZ_PES--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtxq6bdms36fmn62450h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4DVZ_PES--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xtxq6bdms36fmn62450h.png" alt="Tharun Shiv" width="500" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>systems</category>
      <category>security</category>
      <category>tutorial</category>
      <category>linux</category>
    </item>
    <item>
      <title>Making a Chrome extension for Gmail notifications</title>
      <author>Midhun</author>
      <pubDate>Sun, 16 Jan 2022 06:23:23 +0000</pubDate>
      <link>https://dev.to/midhunz/making-gmail-notification-extensions-without-logging-in-a-step-by-step-guide-160b</link>
      <guid>https://dev.to/midhunz/making-gmail-notification-extensions-without-logging-in-a-step-by-step-guide-160b</guid>
      <description>&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/blue-bell-gmail-notificat/dokpofkkaggijbeeaeijobkhjfdijjec?hl=en-GB&amp;amp;authuser=0"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZO7a0la8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lkn5ziwgx0r8sidhcev9.gif" alt="Image description" width="600" height="338"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://chrome.google.com/webstore/detail/blue-bell-gmail-notificat/dokpofkkaggijbeeaeijobkhjfdijjec?hl=en-GB&amp;amp;authuser=0"&gt;&lt;strong&gt;Blue Bell Gmail™ notification tool&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was searching for a simple extension that would allow me to quickly view new e-mails received. I found some of the greatest extensions. But what impressed me the most is their ability to show my Gmail without asking for my password explicitly. Honestly, this was a real shock to me.&lt;/p&gt;

&lt;p&gt;These extensions can display my email without even asking for my password, which made me both fearful and curious. I eventually ended up at Gmail's feed API. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gmail Inbox Feed&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Gmail Inbox Feed will output your Inbox as an XML document. You can use an RSS aggregator to view this, or you can consume the feed with your own app.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;GET &lt;a href="https://mail.google.com/mail/feed/atom"&gt;https://mail.google.com/mail/feed/atom&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt; &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A feed atom API call returns unread emails and total unread emails in an inbox that is logged in.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In order to show an unread email when it is opened, the extension will call api and display it in the proper format&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unread email listeners must notify. It is necessary to have a background script when we want to run anything in the background for an extension. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In that case, the feed API is read every minute if there is an unread email update extension badge with a count.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Permission Required&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;"content_scripts": [&lt;br&gt;
    {&lt;br&gt;
      "matches": ["*://mail.google.com/*"],&lt;br&gt;
      "js": ["contentScript.bundle.js"]&lt;br&gt;
    }&lt;br&gt;
  ]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href="https://chrome.google.com/webstore/detail/blue-bell-gmail-notificat/dokpofkkaggijbeeaeijobkhjfdijjec?hl=en-GB&amp;amp;authuser=0"&gt;Demo 🚀&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Feel free to contribute on &lt;strong&gt;&lt;a href="https://github.com/midhunz/gmail-notifier"&gt;GitHub&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/midhunz/gmail-notifier"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GIXYunmT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4tlk0givomcszyr1hx6r.png" alt="Image description" width="880" height="252"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Please comment on your ideas and thoughts, Geeks &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---lraoHri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k93jg7rd6gj9gbsnjox2.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---lraoHri--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/k93jg7rd6gj9gbsnjox2.gif" alt="Image description" width="384" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>react</category>
    </item>
    <item>
      <title>Front-End Web and
Mobile Development
on AWS</title>
      <author>Nirmal Naveen</author>
      <pubDate>Sun, 16 Jan 2022 06:16:13 +0000</pubDate>
      <link>https://dev.to/nirmalnaveen/front-end-web-andmobile-developmenton-aws-5f7f</link>
      <guid>https://dev.to/nirmalnaveen/front-end-web-andmobile-developmenton-aws-5f7f</guid>
      <description>&lt;p&gt;AWS offers a wide range of tools and services to support development workflows for iOS, Android, React Native, and web front-end developers. There is a set of services that make it easy to build, test, and deploy an application, even with minimal knowledge of AWS. With the speed and reliability of the AWS infrastructure, mobile and web applications can scale from prototype to millions of users to provide a better user experience and better solutions for the whole integrated system. &lt;/p&gt;

&lt;p&gt;Amazon services are primarily aimed at developing web and mobile&lt;br&gt;
applications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ease of use and minimal energy to start. Amazon services allow you to develop an application using existing iOS/Android IDEs and web frameworks. This makes it easy to add UI components for a user-friendly interface and use the CLI tool chain to easily customize the back end.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Provide access to the features you need. You can use Auth, Analytics, API, Storage, Predictions, XR, and others to create rich server infrastructures. GraphQL can be used to access and integrate data in flexible ways. Amazon services offer the ability to test mobile applications on hundreds of real devices.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A scalable approach allows you to grow your business quickly with built-in AWS best practices for security, availability, and reliability; your application can easily scale from one request per second with microsecond latency around the world.&lt;/p&gt;

&lt;p&gt;Let's look at which of the Amazon services will help in the development and operation of web and mobile solutions, as well as speed up the whole process and make it more stable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Amplify&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS Amplify is a collection of tools and services that enable developers of mobile applications and web interfaces to build secure and scalable end-to-end systems on AWS. With Amplify, you can easily create custom workflows, develop voice interfaces, connect artificial intelligence to real-time data streams, run targeted advertising campaigns, and so on. AWS Amplify will help you develop and deliver quality applications.&lt;/p&gt;

&lt;p&gt;AWS Amplify includes an open-source platform with separate libraries for specific use cases and a wide range of tools for building cloud functionality and incorporating them into applications, as well as a web hosting service for deploying static web applications.&lt;/p&gt;

&lt;p&gt;Within minutes of configuring the appropriate service, a developer can automatically configure a best-in-class backend service for mobile and web applications, such as an authentication service, data warehouse, or API based on Amazon S3, Amazon Cognito, and other AWS services.&lt;/p&gt;

&lt;p&gt;Amplify CLI seamlessly integrates with iOS and Android IDEs, as well as many popular web development frameworks, providing a guided workflow to customize the optimal backend for your applications with a few simple commands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Amplify Console&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The AWS Amplify Console is a static web hosting service that accelerates the application release cycle with an uncomplicated CI/CD process for building and deploying static web applications. You only need to provide a link to the repository with your application code in the console, and all adjustments in the frontend and backend will be deployed in a single workflow every time you commit the code.&lt;/p&gt;

&lt;p&gt;A complex application includes a frontend hosted on a single-page application framework (such as React, Angular, Vue, Gatsby, or Flutter, which is now in developer preview) and an optional cloud-based backend (such as GraphQL, REST API, file and data stores). &lt;/p&gt;

&lt;p&gt;These main features allow you to integrate web and mobile applications with Amazon:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Authentication (User Registration and Authentication)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Data storage (offline sync and conflict resolution)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;API (GraphQL and REST - Accessing Data from Multiple Data Sources)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Storage (User Content Management)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Analytics (Collecting analytic data for your application)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Forecasting (Artificial Intelligence/Machine Learning, including text broadcasts)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Interactions (Conversational Chatbots)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Push notifications (Sending targeted messages)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;PubSub (Post and Subscription Management)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sWJgHHbH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bi7qf5shocb6dgbx9y3t.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sWJgHHbH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bi7qf5shocb6dgbx9y3t.jpg" alt='A pie chart showing 40% responded "Yes", 50% responded "No" and 10% responded "Not sure"' width="880" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--__MVviC5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6lfk8k2kr64fm27zymi.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--__MVviC5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6lfk8k2kr64fm27zymi.jpg" alt='A pie chart showing 40% responded "Yes", 50% responded "No" and 10% responded "Not sure"' width="880" height="276"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS AppSync&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS AppSync simplifies application development by letting you create a universal API to securely access, modify, and combine data from multiple sources. AppSync is a managed service that uses GraphQL so that applications can easily retrieve only the data they need.&lt;/p&gt;

&lt;p&gt;With AppSync, you can build scalable applications, including those requiring real-time updates, using a range of data sources such as NoSQL data stores, relational databases, HTTP APIs, and native data sources with AWS Lambda.&lt;/p&gt;

&lt;p&gt;For mobile and web applications, AppSync also provides access to local data when devices go offline and sync data when they reconnect to the Internet. In this case, the client can customize the order of conflict resolution. AWS AppSync is available in different regions.&lt;/p&gt;

&lt;p&gt;You can develop your application in a familiar IDE (for example, Xcode, Android Studio, VS Code), and use the intuitive AWS AppSync or AWS Amplify CLI management console to automatically generate APIs and client code.&lt;/p&gt;

&lt;p&gt;AWS AppSync integrates with Amazon DynamoDB, Amazon Aurora, Amazon Elasticsearch, AWS Lambda, and other AWS services, allowing you to build complex applications with nearly unlimited performance and storage that can change based on your business needs.&lt;/p&gt;

&lt;p&gt;AWS AppSync provides real-time subscriptions to millions of devices and offline access to application data. Once the device is reconnected, AWS AppSync syncs only the updates at the time the device was disconnected, not the entire database. AWS AppSync offers configurable server-side conflict detection and resolution.&lt;/p&gt;

&lt;p&gt;It is also possible to perform complex queries and generalizations across multiple data sources with a single network call using GraphQL. AWS AppSync makes it easy to protect your application data by using multiple authentication modes at the same time and also allows you to determine the severity of the threat and perform granular access control at the data definition level directly from your GraphQL schema.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ft1cTn9c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiwljdf6o658b9vwg740.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ft1cTn9c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fiwljdf6o658b9vwg740.jpg" alt='A pie chart showing 40% responded "Yes", 50% responded "No" and 10% responded "Not sure"' width="880" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon API Gateway&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon API Gateway is a fully managed developer service for building, publishing, maintaining, monitoring, and securing APIs at scale. Applications access the data, business logic, or functionality of your backend services through the API. API Gateway allows you to create RESTful and WebSocket APIs, which are the main component of real-time two-way communication applications. API Gateway supports containerized and serverless workloads and Internet applications.&lt;/p&gt;

&lt;p&gt;API Gateway takes care of all the tasks associated with accepting and processing hundreds of thousands of concurrent API calls, including traffic management, CORS support, authorization, and access control, request throttling, and API monitoring and versioning. Working with API Gateway does not require minimum fees or start-up investments. This only pays for the received API calls and the amount of data transferred, and you can use API Gateway's tiered pricing model to reduce application costs as you scale your API usage.&lt;/p&gt;

&lt;p&gt;REST API and WebSocket are very important features for web and mobile application development:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;REST API. Allows you to create RESTful APIs optimized for serverless workloads and HTTP servers using HTTP APIs. HTTP APIs are the best way to create APIs that only require an API proxy. If your API requires API proxy functionality and API management capabilities in a single solution, API Gateway also provides REST APIs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WebSocket API. Allows you to create real-time two-way communication applications such as chat apps and streaming panels using the WebSocket API. API Gateway maintains a persistent communication to handle messages passed between your backend service and your clients.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;API Gateway provides a tiered pricing model for API requests. At just $0.90 per one million API requests at the highest level, a developer can reduce their costs by increasing the number of API requests per region across all of your AWS accounts.&lt;/p&gt;

&lt;p&gt;By the way, it is possible to monitor performance metrics and information about API calls, data latency, and error rates in the API Gateway control panel. This will allow you to visually control calls to your services using Amazon.&lt;/p&gt;

&lt;p&gt;It is easy to set up API access using AWS Identity and Access Management (IAM) and Amazon Cognito. By using OAuth tokens, you leverage the built-in support for OIDC and OAuth2 API Gateway. To support custom authorization requirements, you can run the Lambda Authorization Tool from AWS Lambda.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AS5a20wH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnw4vs5fnx43e87ogjcl.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AS5a20wH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wnw4vs5fnx43e87ogjcl.jpg" alt='A pie chart showing 40% responded "Yes", 50% responded "No" and 10% responded "Not sure"' width="880" height="389"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Device Farm&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS Device Farm is an application testing service that improves the performance of mobile and web applications. It uses a variety of desktop browsers and real mobile devices, so the developer doesn't need to create his own test framework. The service allows you to run tests simultaneously in multiple browsers for desktop computers or use real mobile devices. This speeds up the testing process, which also generates videos and logs to quickly identify bugs in your application.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Automated testing. Test applications in parallel on multiple physical devices in the AWS Cloud. With the built-in Amazon infrastructures, the user is able to test their applications without any scripting.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Testing on devices that potential users work with. It is possible to run tests on a wide variety of physical devices. Unlike emulators, physical devices allow you to more accurately determine how users interact with your application while taking into account factors such as memory size, processor usage, location, and firmware or software changes made by the manufacturer or operator. The base of devices in Amazon is constantly growing.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Playback and quick troubleshooting. The service allows you to manually reproduce problems and run automatic testing in parallel. The service collects videos, logs, and performance data, which will provide detailed information about the problem and help you quickly solve it. In automated testing, problems are identified and grouped.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In doing so, you can set the location, language settings, network connection settings, application data, and install the required applications.&lt;/p&gt;

&lt;p&gt;It is possible to use open source testing frameworks such as Appium, Calabash, or Espresso. Testing can also be performed manually using remote access. For automated tests and to retrieve results from IDEs, it is possible to use continuous integration environments such as Android Studio or Jenkins.&lt;/p&gt;

&lt;p&gt;For web applications, testing is available in multiple desktop browsers and in different browser versions. This allows tests to run across multiple desktop browsers, including Chrome, Firefox, and Internet Explorer, to ensure that applications work properly across multiple browsers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon Pinpoint&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Pinpoint is a flexible and scalable service for inbound and outbound marketing communications. It allows you to interact with your customers through channels such as email, SMS, push notifications, or voice. Amazon Pinpoint is easy to set up, easy to use, and flexible to fit any marketing interaction scenario.&lt;/p&gt;

&lt;p&gt;This allows you to segment your campaign audience by customer type and customize your messages by filling them with relevant content. Amazon Pinpoint delivery and campaign metrics measure the success of your engagement. Amazon Pinpoint can grow with your business and scale to billions of messages per day across all communication channels.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yD47gDa2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3bc8wazn6uu1kz98600.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yD47gDa2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x3bc8wazn6uu1kz98600.jpg" alt='A pie chart showing 40% responded "Yes", 50% responded "No" and 10% responded "Not sure"' width="880" height="380"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We discovered in this article Front-End Web and&lt;br&gt;
Mobile Development on AWS Features.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed reading this blog post.&lt;/p&gt;

&lt;p&gt;If you have any questions or feedback, please feel free to leave a comment.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://aws.amazon.com/amplify/"&gt;https://aws.amazon.com/amplify/&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html"&gt;https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://aws.amazon.com/appsync/"&gt;https://aws.amazon.com/appsync/&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://aws.amazon.com/api-gateway/"&gt;https://aws.amazon.com/api-gateway/&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://aws.amazon.com/device-farm/"&gt;https://aws.amazon.com/device-farm/&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;[&lt;a href="https://aws.amazon.com/pinpoint/"&gt;https://aws.amazon.com/pinpoint/&lt;/a&gt;]&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>aws</category>
      <category>webdev</category>
      <category>cloud</category>
      <category>mobile</category>
    </item>
    <item>
      <title>25 Tips I Wish I Knew Before I Started to Code</title>
      <author>Tapajyoti Bose</author>
      <pubDate>Sun, 16 Jan 2022 05:51:50 +0000</pubDate>
      <link>https://dev.to/ruppysuppy/25-tips-i-wish-i-knew-before-i-started-to-code-1k2n</link>
      <guid>https://dev.to/ruppysuppy/25-tips-i-wish-i-knew-before-i-started-to-code-1k2n</guid>
      <description>&lt;p&gt;Starting on the journey of coding can be &lt;strong&gt;extremely daunting&lt;/strong&gt;. Some tips can &lt;strong&gt;ease your path&lt;/strong&gt; &lt;em&gt;at the beginning of the journey&lt;/em&gt;. Here are &lt;strong&gt;25 tips&lt;/strong&gt; &lt;em&gt;I wish someone told me when I was starting out&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-you-dont-need-a-super-computer-to-start-coding"&gt;
  &lt;/a&gt;
  1. You don't need a &lt;em&gt;super computer&lt;/em&gt; to start coding
&lt;/h3&gt;

&lt;p&gt;At the start of the journey, often beginners &lt;em&gt;put starting off learning&lt;/em&gt; till they have a &lt;em&gt;"good enough computer"&lt;/em&gt;. But in actuality, &lt;em&gt;it is an excuse to avoid dragging yourself to the computer/laptop and start coding&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-raw-googling-endraw-is-the-most-important-skill"&gt;
  &lt;/a&gt;
  2. &lt;code&gt;Googling&lt;/code&gt; is the most important skill
&lt;/h3&gt;

&lt;p&gt;We live in a world of &lt;strong&gt;information abundance&lt;/strong&gt;. Nowadays information is &lt;em&gt;cheap&lt;/em&gt; and &lt;em&gt;often free&lt;/em&gt;, so gone are the days where &lt;em&gt;information was the currency&lt;/em&gt;. Now people are more interested in hiring people who can use the &lt;strong&gt;information constructively&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vCZkwzl6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vt3y2yhy1iufpk6cu48x.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vCZkwzl6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vt3y2yhy1iufpk6cu48x.jpg" alt="Searching" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-a-math-nerd-is-not-required"&gt;
  &lt;/a&gt;
  3. A &lt;em&gt;Math Nerd&lt;/em&gt; is not required
&lt;/h3&gt;

&lt;p&gt;In movies, Computer Science is always depicted to be a subject for people with &lt;strong&gt;200+ IQ&lt;/strong&gt; with &lt;strong&gt;extensive Maths skills&lt;/strong&gt;. But in reality, all you need is the knowledge of &lt;strong&gt;the basics operations&lt;/strong&gt; for most niches of Computer Science.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-version-control-is-a-must"&gt;
  &lt;/a&gt;
  4. &lt;strong&gt;Version Control&lt;/strong&gt; is a must
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Version Control&lt;/strong&gt; is probably the &lt;em&gt;most important tool for a software developer&lt;/em&gt;. It &lt;strong&gt;saves&lt;/strong&gt;, &lt;strong&gt;backs up your codebase&lt;/strong&gt;, and also &lt;strong&gt;enables you to collaborate with other developers&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-done-is-better-than-perfect"&gt;
  &lt;/a&gt;
  5. &lt;strong&gt;Done&lt;/strong&gt; is Better than &lt;strong&gt;perfect&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;People judge you based on what &lt;strong&gt;you've done&lt;/strong&gt;, not what &lt;strong&gt;you plan to do&lt;/strong&gt;. &lt;strong&gt;Perfect&lt;/strong&gt; is just another term for never. Let me tell you the &lt;strong&gt;highly guarded secret of Mount Olympus&lt;/strong&gt;: &lt;em&gt;Every pro you meet, once started as a noob&lt;/em&gt;! The noob &lt;em&gt;who keeps working on his craft&lt;/em&gt; becomes a &lt;strong&gt;pro over time&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-work-hard-but-smartly"&gt;
  &lt;/a&gt;
  6. &lt;strong&gt;Work Hard&lt;/strong&gt;, but &lt;strong&gt;Smartly&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Hard Work&lt;/strong&gt; is what gets you &lt;em&gt;closer to your goal&lt;/em&gt;, &lt;strong&gt;Smart Work&lt;/strong&gt; is what makes you &lt;em&gt;complete tasks faster&lt;/em&gt;. Combining both, &lt;strong&gt;you become unstoppable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; &lt;em&gt;Shameless self-promotion&lt;/em&gt; ahead!&lt;/p&gt;

&lt;p&gt;A client gave me a task of converting &lt;em&gt;1.5k&lt;/em&gt; &lt;code&gt;.svg&lt;/code&gt;s to &lt;code&gt;.tsx&lt;/code&gt;s, instead of &lt;strong&gt;converting them manually&lt;/strong&gt; (ETA: &lt;em&gt;30 to 50 hours&lt;/em&gt;), I &lt;strong&gt;wrote a script&lt;/strong&gt; (&lt;em&gt;took less than 2 hours&lt;/em&gt;) that &lt;strong&gt;automatically converts&lt;/strong&gt; them.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3HDaU4fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sd2hnts40ixa61q5ous6.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3HDaU4fo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sd2hnts40ixa61q5ous6.jpg" alt="work hard smartly" width="800" height="418"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-tools-unlock-your-productivity"&gt;
  &lt;/a&gt;
  7. &lt;strong&gt;Tools&lt;/strong&gt; unlock your &lt;strong&gt;productivity&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Tools can be thought of &lt;em&gt;cheat codes of life&lt;/em&gt;, they help you &lt;strong&gt;get things done&lt;/strong&gt; &lt;em&gt;faster&lt;/em&gt; and &lt;em&gt;more efficiently&lt;/em&gt;. If you cannot find a tool that &lt;em&gt;fits your needs&lt;/em&gt;, you can always &lt;strong&gt;build out one&lt;/strong&gt; (&lt;em&gt;Heck Yeah! perks of being a developer!&lt;/em&gt;).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-one-completed-project-gtgt-100-incomplete-ones"&gt;
  &lt;/a&gt;
  8. One Completed Project &lt;strong&gt;&amp;gt;&amp;gt;&lt;/strong&gt; 100 Incomplete Ones
&lt;/h3&gt;

&lt;p&gt;As mentioned previously, people judge you based on what &lt;strong&gt;you've done&lt;/strong&gt;, not what &lt;strong&gt;you plan to do&lt;/strong&gt;. So put your &lt;em&gt;best foot forward&lt;/em&gt; and have a few deployed projects, &lt;em&gt;to ease up the process for the viewer&lt;/em&gt;, as nobody will download your &lt;em&gt;code&lt;/em&gt; and &lt;em&gt;run it&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-where-you-end-up-in-5-years-is-determined-by-what-you-do-now"&gt;
  &lt;/a&gt;
  9. Where you end up in &lt;strong&gt;5 years&lt;/strong&gt; is determined by what you do NOW
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Reality is negotiable&lt;/strong&gt;, &lt;em&gt;where you are currently in life, is a direct result of what you had been doing in the past 5 - 10 years&lt;/em&gt;. Don't like it? Strive to change it, and &lt;em&gt;in 5 - 10 years you will find yourself somewhere you are proud to be&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pe91YdsZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjzyhs90w6apbmmy3t7g.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pe91YdsZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qjzyhs90w6apbmmy3t7g.jpeg" alt="take action now" width="880" height="564"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-selftaught-programmers-have-the-best-debugging-skills"&gt;
  &lt;/a&gt;
  10. Self-taught Programmers have the &lt;strong&gt;best debugging skills&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Self-taught Programmers&lt;/strong&gt; lack the &lt;em&gt;opportunity of having someone help out whenever they face a problem&lt;/em&gt;, so &lt;em&gt;after 100s of trial and error&lt;/em&gt;, they develop &lt;strong&gt;a feel&lt;/strong&gt; for &lt;em&gt;efficient ways to squash a bug&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11-you-dont-need-the-right-answer-just-a-less-wrong-one"&gt;
  &lt;/a&gt;
  11. You don't need the &lt;strong&gt;right answer&lt;/strong&gt;, just a &lt;strong&gt;less wrong one&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;People are so &lt;strong&gt;afraid of failing&lt;/strong&gt; that &lt;em&gt;they don't even give things a shot&lt;/em&gt;, not realizing that &lt;em&gt;you might not be successful if you try, but you definitely won't be successful if you don't try&lt;/em&gt;. A failure is truly a failure, only if you &lt;strong&gt;don't learn from it&lt;/strong&gt; and &lt;strong&gt;keep repeating the same mistakes&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ImsQdCF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3msik7icynglxgsnn2o.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ImsQdCF---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/f3msik7icynglxgsnn2o.jpg" alt="failure" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12-its-a-marathon-not-a-sprint"&gt;
  &lt;/a&gt;
  12. It's a &lt;strong&gt;Marathon&lt;/strong&gt;, not a &lt;strong&gt;Sprint&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The development space is &lt;strong&gt;constantly evolving&lt;/strong&gt;, so prepare yourself for &lt;em&gt;lifelong learning&lt;/em&gt;. By putting &lt;strong&gt;100-hour week&lt;/strong&gt;, &lt;em&gt;you will just get tired quickly&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13-dont-reinvent-the-wheel"&gt;
  &lt;/a&gt;
  13. Don't reinvent the &lt;strong&gt;Wheel&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;If there is a library to &lt;strong&gt;solve a problem&lt;/strong&gt; you are working on, there is &lt;em&gt;no harm in utilizing it&lt;/em&gt; (unless you are actually trying to build a similar library).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14-tutorials-fail-to-teach-you-the-most-important-skill"&gt;
  &lt;/a&gt;
  14. &lt;strong&gt;Tutorials&lt;/strong&gt; fail to teach you &lt;em&gt;the most important skill&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;The most crucial skill &lt;strong&gt;problem-solving&lt;/strong&gt;, which comes only through &lt;strong&gt;trial and error&lt;/strong&gt;. Tutorials give you a &lt;em&gt;highly refactored final version of the code&lt;/em&gt;, so you miss out on seeing the skill in action.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15-no-technology-is-perfect"&gt;
  &lt;/a&gt;
  15. No Technology is &lt;strong&gt;perfect&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;In this world, everything has its &lt;strong&gt;pros and cons&lt;/strong&gt;. So don't waste time, fighting the battle &lt;em&gt;Tech X&lt;/em&gt; is better than &lt;em&gt;Tech Y&lt;/em&gt;, in some niches &lt;em&gt;Tech X&lt;/em&gt; will dominate &lt;em&gt;Tech Y&lt;/em&gt; and vice versa.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#16-a-project-is-never-complete"&gt;
  &lt;/a&gt;
  16. A project is &lt;strong&gt;never complete&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Learn the &lt;strong&gt;Pareto Principle&lt;/strong&gt; (&lt;em&gt;Law of disproportionate results&lt;/em&gt;). &lt;strong&gt;80%&lt;/strong&gt; of the results come from &lt;strong&gt;20%&lt;/strong&gt; of the inputs. &lt;em&gt;Find out the 20% in your case and focus on those&lt;/em&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_nsvCNpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zv3oha0s3b1otx8kafg5.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_nsvCNpP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zv3oha0s3b1otx8kafg5.jpg" alt="working on a project" width="880" height="660"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#17-the-hype-train-is-real-but-take-it-with-a-grain-of-salt"&gt;
  &lt;/a&gt;
  17. The &lt;strong&gt;hype train&lt;/strong&gt; is real, but &lt;em&gt;take it with a grain of salt&lt;/em&gt;
&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;New players are where the puck was, good players are where the puck is, great players are where the puck will be.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The &lt;strong&gt;hype&lt;/strong&gt; around a technology tells you where the &lt;code&gt;puck&lt;/code&gt; is heading, but always &lt;em&gt;take it with a grain of salt&lt;/em&gt;, because &lt;em&gt;new technologies have high chances of failure&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#18-learn-what-not-to-learn"&gt;
  &lt;/a&gt;
  18. Learn what &lt;em&gt;NOT to learn&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Learning every is &lt;em&gt;simply not humanely possible&lt;/em&gt;. First &lt;em&gt;test out the waters by trying out everything&lt;/em&gt;, then &lt;em&gt;choose the technology that &lt;strong&gt;resonates the best with you&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#19-humility-is-your-superpower"&gt;
  &lt;/a&gt;
  19. Humility is your &lt;strong&gt;superpower&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Cherish your &lt;strong&gt;achievements from inside&lt;/strong&gt;, but be &lt;strong&gt;humble about them from outside&lt;/strong&gt;. &lt;em&gt;Bragging won't get you far.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#20-consistency-secret-sauce-to-achieve-outstanding-outputs-with-average-inputs"&gt;
  &lt;/a&gt;
  20. Consistency: &lt;strong&gt;Secret sauce&lt;/strong&gt; to achieve &lt;em&gt;outstanding outputs&lt;/em&gt; with &lt;em&gt;average inputs&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;Nobody became a pro by putting in &lt;strong&gt;20 hours in a day&lt;/strong&gt;, but a lot of people did it by putting in &lt;strong&gt;1 hour for 20 days&lt;/strong&gt;. &lt;em&gt;Your brain needs time to digest the information, you feed it&lt;/em&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#21-open-source-can-help-you-level-up"&gt;
  &lt;/a&gt;
  21. Open Source can help you &lt;strong&gt;level up&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Open Source&lt;/strong&gt; is a great way to learn by building &lt;em&gt;amazing Softwares and tools&lt;/em&gt;. But be prepared to be &lt;em&gt;constantly learning as you would be required to be constantly adapting to new technologies&lt;/em&gt;. It is a great way to &lt;strong&gt;up your game&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wSznYPN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etvmjn6h4zbswf3z3jmt.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wSznYPN5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/etvmjn6h4zbswf3z3jmt.jpeg" alt="open source" width="880" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#22-the-more-you-learn-the-more-you-earn"&gt;
  &lt;/a&gt;
  22. &lt;strong&gt;The More you learn, the more you Earn&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;The &lt;em&gt;amount of money you earn is directly proportional to the amount of knowledge you possess&lt;/em&gt;. Not happy with what you are making? &lt;em&gt;Pick up a new skill that is in higher demand&lt;/em&gt;, &lt;strong&gt;Reality is Negotiable&lt;/strong&gt; remember?&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#23-soft-skills-pay-the-bills"&gt;
  &lt;/a&gt;
  23. Soft Skills &lt;em&gt;pay the bills&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Hard Skills&lt;/strong&gt; get you in the room, but &lt;strong&gt;Soft Skills&lt;/strong&gt; get selected. &lt;em&gt;People hire they enjoy interacting with.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#24-online-presence-is-crucial"&gt;
  &lt;/a&gt;
  24. Online Presence is &lt;strong&gt;crucial&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;You can offer the &lt;strong&gt;best product in the world&lt;/strong&gt;, but &lt;em&gt;if nobody knows about it, no one will buy from you&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzkH8DBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tu753b98z0sbq0wu84q3.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZzkH8DBl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tu753b98z0sbq0wu84q3.jpg" alt="Online Presence" width="800" height="533"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#25-jack-of-all-trades-master-of-none"&gt;
  &lt;/a&gt;
  25. &lt;em&gt;Jack of all Trades Master of None...&lt;/em&gt;
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;...is still better than the Master of One&lt;/em&gt; (Yep, that's the complete quote). But know what's &lt;strong&gt;the best&lt;/strong&gt;? &lt;em&gt;Jack of all Trades, Master of One.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h1&gt;

&lt;p&gt;That's all folk! Do you have any tips to add to the list? &lt;strong&gt;Share them in the comments below 👇&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading
&lt;/h1&gt;

&lt;p&gt;Need a &lt;strong&gt;Top Rated Front-End Development Freelancer&lt;/strong&gt; to chop away your development woes? Contact me on &lt;a href="https://www.upwork.com/o/profiles/users/~01c12e516ee1d35044/"&gt;Upwork&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to see what I am working on? Check out my &lt;a href="https://tapajyoti-bose.vercel.app"&gt;Personal Website&lt;/a&gt; and &lt;a href="https://github.com/ruppysuppy"&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Want to connect? Reach out to me on &lt;a href="https://www.linkedin.com/in/tapajyoti-bose/"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am a freelancer who will start off as a &lt;strong&gt;Digital Nomad&lt;/strong&gt; in mid-2022. Want to catch the journey? Follow me on &lt;a href="https://www.instagram.com/tapajyotib/"&gt;Instagram&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Follow my blogs for &lt;strong&gt;Weekly new Tidbits&lt;/strong&gt; on &lt;a href="https://dev.to/ruppysuppy"&gt;Dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These are a few commonly asked questions I get. So, I hope this &lt;strong&gt;FAQ&lt;/strong&gt; section solves your issues.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;I am a beginner, how should I learn Front-End Web Dev?&lt;/strong&gt;&lt;br&gt;
Look into the following articles:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/front-end-developer-roadmap-zero-to-hero-4pkf"&gt;Front End Development Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/ruppysuppy/5-projects-to-master-front-end-development-57p"&gt;Front End Project Ideas&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you mentor me?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
Sorry, I am already under a lot of workload and would not have the time to mentor anyone.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Would you like to collaborate on our site?&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
As mentioned in the &lt;em&gt;previous question&lt;/em&gt;, I am in a time crunch, so I would have to pass on such opportunities.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
