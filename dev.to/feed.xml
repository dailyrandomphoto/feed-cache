<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>AWS Basics: What's in a default AWS VPC and how to recreate one.</title>
      <author>Lee Wynne</author>
      <pubDate>Fri, 16 Jul 2021 11:54:05 +0000</pubDate>
      <link>https://dev.to/leewynne/aws-basics-what-s-in-a-default-aws-vpc-and-how-to-recreate-one-29ig</link>
      <guid>https://dev.to/leewynne/aws-basics-what-s-in-a-default-aws-vpc-and-how-to-recreate-one-29ig</guid>
      <description>&lt;h2&gt;
  &lt;a href="#%C2%A0you-have-vpcs-in-your-aws-account-by-default"&gt;
  &lt;/a&gt;
  ¬†You have VPC's in your AWS account by default.
&lt;/h2&gt;

&lt;p&gt;AWS make it pretty easy to consume their services in the quickest way possible. Once you have &lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/create-and-activate-aws-account/"&gt;created an account&lt;/a&gt; and attached a credit card for billing you are pretty much ready to to start building and deploying some really cool stuff.&lt;/p&gt;

&lt;p&gt;Some of those AWS services don't need a VPC, object storage though an s3 bucket is a good example or compute, storage, databases, networking and containers through AWS LightSail is also a good example üëáüèº&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/leewynne" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yJSHiz_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8bnWhDU3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/19958/acd11d40-2247-40c5-a3f6-1805b734c466.jpeg" alt="leewynne"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/leewynne/the-easiest-way-to-get-started-with-aws-regardless-of-your-background-1nl2" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;The easiest way to get started with AWS regardless of your background&lt;/h2&gt;
      &lt;h3&gt;Lee Wynne „Éª Jul 5 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;Some AWS services need to be hosted in a VPC, like production ec2 instances, vpn and direct connect connectivity and all sorts of other services that you want to wrap more control and high availability around.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-does-a-default-vpc-even-exist"&gt;
  &lt;/a&gt;
  Why does a default VPC even exist?
&lt;/h2&gt;

&lt;p&gt;Having a default VPC makes it pretty easy to programmatically launch AWS services into an existing pre built VPC without needing to know how to build your own AWS VPC with a public and private subnet. Otherwise you would need to know how to do this üëáüèº&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/leewynne" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yJSHiz_u--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--8bnWhDU3--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/19958/acd11d40-2247-40c5-a3f6-1805b734c466.jpeg" alt="leewynne"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/leewynne/aws-vpc-basics-building-your-first-vpc-with-a-public-and-private-subnet-22ll" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;AWS VPC Basics. Building your first VPC with a public and private subnet&lt;/h2&gt;
      &lt;h3&gt;Lee Wynne „Éª Jul 13 „Éª 5 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#aws&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#cloud&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;There are many AWS partner integrations out there that assume that you have a default VPC if you are deploying their products to AWS.&lt;/p&gt;

&lt;p&gt;Every AWS account has one default VPC for each AWS Region (Not sure if that applies to regions that you haven't actually activated yet, doubt it).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-in-a-default-vpc"&gt;
  &lt;/a&gt;
  What's in a default VPC
&lt;/h2&gt;

&lt;p&gt;When AWS create a default VPC for, they do the following to set it up:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create a VPC with a size /16 IPv4 CIDR block (172.31.0.0/16). This provides up to 65,536 private IPv4 addresses.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a size /20 default subnet in each Availability Zone. This provides up to 4,096 addresses per subnet, a few of which are reserved for our use.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create an internet gateway and connect it to your default VPC.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add a route to the main route table that points all traffic (0.0.0.0/0) to the Internet gateway.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a default security group and associate it with your default VPC.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a default network access control list (ACL) and associate it with your default VPC.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Associate the default DHCP options set for your AWS account with your default VPC.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That list is a great footprint for learning more about creating your own VPC and what should potentially be in it and here is an example schematic:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oDQZrryv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.theelastic.guru/remoteimages/uploads/articles/kqgd6gglqc4m2brz71te.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oDQZrryv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.theelastic.guru/remoteimages/uploads/articles/kqgd6gglqc4m2brz71te.png" alt="default-vpc-diagram"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Your default VPC is also extensible, meaning you add other stuff to it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Add additional nondefault subnets.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Modify the main route table.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add additional route tables.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Associate additional security groups.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update the rules of the default security group.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add AWS Site-to-Site VPN connections.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add more IPv4 CIDR blocks.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-do-you-recreate-a-default-vpc"&gt;
  &lt;/a&gt;
  How do you recreate a default VPC?
&lt;/h2&gt;

&lt;p&gt;If you have deleted your default VPC, you can't restore it üò≠ but you can easily recreate it üõ†&lt;/p&gt;

&lt;p&gt;If you want to re-create a default VPC using the Amazon VPC console, do this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Open the Amazon VPC console at &lt;a href="https://console.aws.amazon.com/vpc/"&gt;https://console.aws.amazon.com/vpc/&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In the navigation pane, choose Your VPCs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose Actions, Create Default VPC.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Choose Create. Close the confirmation screen.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That was easy!&lt;/p&gt;

&lt;p&gt;Or if you want to do it from the AWS CLI&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;aws ec2 create-default-vpc
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There we go, everything you need to know about default VPC's and how to recreate one.&lt;/p&gt;

</description>
      <category>aws</category>
      <category>awsnewbies</category>
      <category>networking</category>
    </item>
    <item>
      <title>No, they didn't make a mistake</title>
      <author>Chris Bongers</author>
      <pubDate>Fri, 16 Jul 2021 11:43:53 +0000</pubDate>
      <link>https://dev.to/dailydevtips1/no-they-didn-t-make-a-mistake-5gg8</link>
      <guid>https://dev.to/dailydevtips1/no-they-didn-t-make-a-mistake-5gg8</guid>
      <description>&lt;p&gt;Hey you, yes you! Stop feeling like they made a mistake.&lt;br&gt;
That company hired you because they saw you fit for the job.&lt;/p&gt;

&lt;p&gt;And yes, you might not feel like you're ready at this time, but let me tell you a little secret. We all feel this way.&lt;/p&gt;

&lt;p&gt;Some might call it imposter syndrome, and some might call it an introvert, where others might think they are a cheat.&lt;/p&gt;

&lt;p&gt;But stop feeling that way. You are valuable, you are a developer, and you are good enough.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-do-we-feel-this-way"&gt;
  &lt;/a&gt;
  Why do we feel this way?
&lt;/h2&gt;

&lt;p&gt;It might be a natural cause because of the day and age we live in. We get to see so many great people showing off what they do, their rank, and how good they are.&lt;br&gt;
And yes, that's quite demotivating at times.&lt;/p&gt;

&lt;p&gt;But the #1 thing you have to realize, those people felt the same way.&lt;br&gt;
They just worked hard and put in the time to get over that feeling.&lt;/p&gt;

&lt;p&gt;It's also natural to feel nervous at first, thought run wild, and your brain is tricking you into believing you don't belong in that spot.&lt;/p&gt;

&lt;p&gt;But let's try and fix that because sorry to say this, but your brain is wrong!&lt;/p&gt;

&lt;p&gt;Here are five tips to help show you they didn't make a mistake!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-value-yourself"&gt;
  &lt;/a&gt;
  1. Value yourself
&lt;/h2&gt;

&lt;p&gt;Just take a step back, and look where you're at. Would your 15-year-old version be able to do the things you do today?&lt;/p&gt;

&lt;p&gt;I'm pretty sure the answer is no, unless you're 15, but then have a look at your five years younger self.&lt;/p&gt;

&lt;p&gt;This is because you have grown, as a person, in your skills, and it shows.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-you-dont-need-to-know-everything"&gt;
  &lt;/a&gt;
  2. You don't need to know everything
&lt;/h2&gt;

&lt;p&gt;The most common belief is that we need to 100% know all the things when we get hired for a job.&lt;/p&gt;

&lt;p&gt;And this is the biggest BS you can tell yourself.&lt;/p&gt;

&lt;p&gt;We need to be able to grow in a job and learn things while doing our job. I've said this before, and I'll repeat it: Being a developer is a never-ending learning curve.&lt;/p&gt;

&lt;p&gt;For example, I was being interviewed as a senior developer for a Laravel/Ionic position for my last job. At the time, I'd never touched Laravel at all.&lt;br&gt;
For sure, I was a bit skeptical, but I was brutally honest; I had zero experience in Laravel but did use Symphony for a long time.&lt;/p&gt;

&lt;p&gt;The result:&lt;br&gt;
A two-week learning curve in Laravel and working on some projects. And now I'm confident enough to say I know Laravel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-dont-try-to-be-someone-else"&gt;
  &lt;/a&gt;
  3. Don't try to be someone else
&lt;/h2&gt;

&lt;p&gt;It's ok not to be perfect at everything, but be honest about it.&lt;br&gt;
There is nothing wrong with saying to a company, what your strengths are, and being that person that tells their weaknesses.&lt;/p&gt;

&lt;p&gt;It comes close to the above point, and you realize it shows when you are faking something.&lt;/p&gt;

&lt;p&gt;I always try to imagine being the receiving end of the communication.&lt;/p&gt;

&lt;p&gt;How would I feel after the interview? Did I say stuff that wasn't true?&lt;br&gt;
Did I upsell myself too much?&lt;/p&gt;

&lt;p&gt;And again, nothing wrong with upselling yourself, but be careful with this approach.&lt;/p&gt;

&lt;p&gt;Please don't say you're an expert [INSERT RANDOM FRAMEWORK] user while you never touched it.&lt;br&gt;
This will quickly reflect and make you look like a fraud.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-its-ok-to-be-nervous"&gt;
  &lt;/a&gt;
  4. It's ok to be nervous
&lt;/h2&gt;

&lt;p&gt;Don't think you have to be a super(wo)man now. You don't need to feel all confident and mighty.&lt;/p&gt;

&lt;p&gt;It's ok to feel nervous; nervous for a job interview, for the first week/month/year working there.&lt;/p&gt;

&lt;p&gt;And that's ok because it is stressful.&lt;br&gt;
We are all learning, and at times we might feel like there is something wrong with that.&lt;br&gt;
But let me assure you, there's not!&lt;/p&gt;

&lt;p&gt;Being a bit nervous might even help us.&lt;br&gt;
Nervousness is something people pick up on, and it might help you feel more at ease.&lt;br&gt;
It also makes us more on edge and really on top of our game as nervous people.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-the-value-you-offer"&gt;
  &lt;/a&gt;
  5. The value you offer
&lt;/h2&gt;

&lt;p&gt;Now, let's look at the last part of this.&lt;br&gt;
A company hired you. Just think about the value you are adding there!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Another sparring partner&lt;/li&gt;
&lt;li&gt;Someone to question if processes are the right way&lt;/li&gt;
&lt;li&gt;A enthusiastic soul that lifts people up&lt;/li&gt;
&lt;li&gt;You help them out. It's work they couldn't get done before&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And this is all because they hired you!&lt;br&gt;
Not because they made a mistake.&lt;/p&gt;

&lt;p&gt;I hope you will re-evaluate yourself and accept the simple but undeniable fact that you are valuable!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thank-you-for-reading-and-lets-connect"&gt;
  &lt;/a&gt;
  Thank you for reading, and let's connect!
&lt;/h3&gt;

&lt;p&gt;Thank you for reading my blog. Feel free to subscribe to my email newsletter and connect on &lt;a href="https://www.facebook.com/DailyDevTipsBlog"&gt;Facebook&lt;/a&gt; or &lt;a href="https://twitter.com/DailyDevTips1"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>devjournal</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>CSS Flex box : everything you need to know about flex box</title>
      <author>Modern Web</author>
      <pubDate>Fri, 16 Jul 2021 10:52:55 +0000</pubDate>
      <link>https://dev.to/kunaal438/display-flex-complete-guide-on-css-flex-box-2021-5bi2</link>
      <guid>https://dev.to/kunaal438/display-flex-complete-guide-on-css-flex-box-2021-5bi2</guid>
      <description>&lt;p&gt;Hey, welcome. If you are here, you must have heard about flex box in CSS or you already know what is flex box. But, What exactly Flex box is ?&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#what-is-flex-box-"&gt;
  &lt;/a&gt;
  What is Flex Box ?
&lt;/h1&gt;

&lt;p&gt;Flex box layout provide us a more efficient way to manage items of a particular container. Flex box layout align, shrink items or make space among items by occupying the given space, and make the website &lt;a href="https://dev.to/kunaal438/media-query-everything-you-need-for-responsive-design-b8g"&gt;responsive&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#how-to-use-flex-box-"&gt;
  &lt;/a&gt;
  How to use flex box ?
&lt;/h1&gt;

&lt;p&gt;Well to use flex box you just have to set container element's &lt;code&gt;display&lt;/code&gt; property to &lt;code&gt;flex&lt;/code&gt;. &lt;code&gt;display: flex;&lt;/code&gt; will enable all flex box feature to this container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#let-see-some-flex-box-properties-that-you-can-use"&gt;
  &lt;/a&gt;
  Let see some flex box properties that you can use.
&lt;/h1&gt;

&lt;p&gt;i) &lt;code&gt;Flex-direction&lt;/code&gt; : This property is for parent. It allows us to set or change item's direction. Like&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--f0YoIbQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyzjpgc2m3ha9m2464tu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--f0YoIbQ0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cyzjpgc2m3ha9m2464tu.png" alt="Frame 1 (2)"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;ii) &lt;code&gt;Flex-wrap&lt;/code&gt; : This is also for parent element. It allow you to wrap the items and prevent overflow.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MjDfgZE6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vhm0q8lcmuc26f0h1cy2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MjDfgZE6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vhm0q8lcmuc26f0h1cy2.png" alt="Frame 2 (7)"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;iii) &lt;code&gt;Flex-flow&lt;/code&gt; : This is the shorthand for &lt;code&gt;flex-direction&lt;/code&gt; and &lt;code&gt;flex-wrap&lt;/code&gt;. The default value is :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.container&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;flex-flow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="nb"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;You can see the first value for this property id &lt;code&gt;flex-direction&lt;/code&gt; and second is for &lt;code&gt;flex-wrap&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;iv) &lt;code&gt;justify-content&lt;/code&gt; : It is the most common and frequently used property. It is used to align items in the x axis or horizontal axis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_Bye-X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/neg8xsb0ogu5ocr9dh1z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z_Bye-X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/neg8xsb0ogu5ocr9dh1z.png" alt="Frame 3 (1)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;v) &lt;code&gt;align-items&lt;/code&gt; : It is also a common and frequently used property. It is used to align items in Y axis or vertical axis.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--umus2-YD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqysuqvpywytqd0kkuu0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--umus2-YD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lqysuqvpywytqd0kkuu0.png" alt="Frame 4 (4)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note : If you have &lt;code&gt;flex-direction: column | column-reverse&lt;/code&gt; then &lt;code&gt;justify-content&lt;/code&gt; and &lt;code&gt;align-items&lt;/code&gt; align items in Y and X axis respectively. &lt;/p&gt;

&lt;p&gt;All properties above are for parent element. Now, let's talk about item's property.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;vi) &lt;code&gt;flex-grow&lt;/code&gt; : As the name suggests &lt;code&gt;flex-grow&lt;/code&gt; is used to increase or grow item's width in proportion to occupy the space.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DAv1Nq97--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vs74vcb2fwuukj9fid6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DAv1Nq97--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7vs74vcb2fwuukj9fid6.png" alt="Frame 6 (1)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;vii) &lt;code&gt;flex-shrink&lt;/code&gt; : Yes, you guessed right. This property aim is opposite to &lt;code&gt;flex-grow&lt;/code&gt;. It shrinks or decrease the width of item in proportions to occupy the space.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TnNT8w9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h31qniw74ffrp4lkwitz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TnNT8w9M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h31qniw74ffrp4lkwitz.png" alt="Frame 7 (1)"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;viii) &lt;code&gt;flex-basis&lt;/code&gt; : This defines the default size of an element before distributing the space among items. You can give fixed lengths like(100px, 20rem) or you can use &lt;code&gt;auto&lt;/code&gt; value. &lt;code&gt;auto&lt;/code&gt; means take value from &lt;code&gt;width and height&lt;/code&gt; property.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--06aOI5db--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjktopsmd8jzr5o1b60l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--06aOI5db--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xjktopsmd8jzr5o1b60l.png" alt="Frame 8"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;xi) &lt;code&gt;flex&lt;/code&gt; : This is a shorthand for &lt;code&gt;flex grow, flex shrink and flex basis&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;flex&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;flex-grow&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;flex-shrink&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;flex-basis&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;x) &lt;code&gt;align-self&lt;/code&gt; : This property allow to align item individually. You can set different align position for each item.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--F9xzTLNM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhbmzijiqvzbzlwjhmt0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--F9xzTLNM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zhbmzijiqvzbzlwjhmt0.png" alt="Frame 9"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So, that's it about flex box. I hope you understood each and everything. If you have doubt or I missed some point let me know in the comments.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#articles-you-may-found-useful"&gt;
  &lt;/a&gt;
  Articles you may found Useful
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/css-position-everything-you-need-for-good-developer-pfh"&gt;CSS Positions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.to/kunaal438/media-query-everything-you-need-for-responsive-design-b8g"&gt;CSS Media Query&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And if you want to improve your webdev skills. You can watch tutorial on &lt;a href="https://www.youtube.com/watch?v=f9fqiNM30ik"&gt;Instagram UI&lt;/a&gt; clone by me. If you like, you can subscribe my youtube channel, and follow me on instagram. I create awesome web contents. [&lt;a href="https://www.youtube.com/c/modern_web?sub_confirmation=1"&gt;Subscribe&lt;/a&gt;], [&lt;a href="https://www.instagram.com/modern_web_channel/"&gt;Instagram&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Thanks For reading.&lt;/p&gt;

</description>
      <category>css</category>
      <category>html</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Can Google Index Content in CSS Pseudo Elements?</title>
      <author>Colin McDermott</author>
      <pubDate>Fri, 16 Jul 2021 10:38:03 +0000</pubDate>
      <link>https://dev.to/colinmcdermott/does-google-index-text-content-in-css-pseudo-elements-421p</link>
      <guid>https://dev.to/colinmcdermott/does-google-index-text-content-in-css-pseudo-elements-421p</guid>
      <description>&lt;p&gt;Traditionally when Google (or other search engines) look for text-based content to index - they expect to find this content directly in the HTML of the webpage that is served to them.&lt;/p&gt;

&lt;p&gt;This changed somewhat with the rise of sites using JavaScript to serve anywhere from small pieces of content to entire websites.&lt;/p&gt;

&lt;p&gt;Google was forced then to invest resources attempting to render and index JavaScript based content as effectively as possible.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-pseudo-elements"&gt;
  &lt;/a&gt;
  CSS Pseudo Elements
&lt;/h2&gt;

&lt;p&gt;But what about text content that is sourced purely from CSS? It is possible to add content to a page using¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements"&gt;CSS pseudo elements&lt;/a&gt;¬†such as¬†&lt;em&gt;::before&lt;/em&gt;¬†and¬†&lt;em&gt;::after&lt;/em&gt;¬†combined with the CSS¬†&lt;em&gt;content&lt;/em&gt;¬†property.&lt;/p&gt;

&lt;p&gt;See a simple example below:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;p&amp;gt;99 bottles of beer on the wall, 99 bottles of beer.&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Code language: HTML, XML&lt;/p&gt;

&lt;p&gt;&lt;code&gt;p::after {content:' Take one down and pass it around, 98 bottles of beer on the wall.'}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Code language: CSS&lt;/p&gt;

&lt;p&gt;Will display as:&lt;/p&gt;

&lt;p&gt;99 bottles of beer on the wall, 99 bottles of beer. Take one down and pass it around, 98 bottles of beer on the wall.&lt;/p&gt;

&lt;p&gt;Year after year as CSS gets more advanced and other features are introduced, such as the ability to do¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/calc()"&gt;mathematical calculations&lt;/a&gt;¬†or¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters"&gt;count elements&lt;/a&gt;¬†using only CSS, the likelihood of devs and designers adopting these features becomes higher.&lt;/p&gt;

&lt;p&gt;But will Google be able to render and index this content? Will the text found in the CSS appear and be searchable in Google?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#is-using-css-for-text-best-practice"&gt;
  &lt;/a&gt;
  Is using CSS for text best practice?
&lt;/h2&gt;

&lt;p&gt;Before we start it is important to note that in the large majority of situations using CSS pseudo elements and the 'content' property (instead of HTML) to display any significant amount of text based content on a website is absolutely¬†not best practice¬†for various reasons, including:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt; The text is not selectable by users, meaning it can't be highlighted or copied/pasted&lt;/li&gt;
&lt;li&gt; The text will be ignored by screen readers - making the content inaccessible and against accessibility guidelines.&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;F87: Failure of Success Criterion 1.3.1 due to inserting non-decorative content by using :before and :after pseudo-elements and the 'content' property in CSS&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://www.w3.org/TR/2016/NOTE-WCAG20-TECHS-20161007/F87"&gt;W3.org&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;CSS pseudo elements should generally speaking only be used for decorative elements that are non-essential to the consumption of the content on the page.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#seo-poll"&gt;
  &lt;/a&gt;
  SEO Poll
&lt;/h2&gt;

&lt;p&gt;Until the production of this article - I was not able to find any other SEO-focused articles on this topic, so I thought it could be interesting to dig in and so some research.&lt;/p&gt;

&lt;p&gt;I asked the SEO community what they thought in a Twitter poll, with the following results:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---5CIz6fm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/aSiTX5c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---5CIz6fm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i.imgur.com/aSiTX5c.png" alt="Poll results"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Can Google index text content from CSS displayed on a web page in a pseudo element, eg :before, :after?&lt;/p&gt;‚Äî Colin McDermott (&lt;a class="mentioned-user" href="https://dev.to/colinmcdermott"&gt;@colinmcdermott&lt;/a&gt;
) &lt;a href="https://twitter.com/ColinMcDermott/status/1410190943320522759?ref_src=twsrc%5Etfw"&gt;June 30, 2021&lt;/a&gt;
&lt;/blockquote&gt;

&lt;p&gt;Taking out users that just wanted to see the results, there is a fairly even split between the three choices with¬†&lt;em&gt;'No'&lt;/em&gt;¬†and¬†&lt;em&gt;'I don't know'&lt;/em&gt;¬†getting an equal number of votes (12), and¬†&lt;em&gt;'Yes'&lt;/em&gt;¬†trailing behind by just a few votes (9).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test"&gt;
  &lt;/a&gt;
  Test
&lt;/h2&gt;

&lt;p&gt;To test I¬†&lt;a href="https://www.searchcandy.uk/css_test/"&gt;created a page&lt;/a&gt;¬†that contained zero standard HTML based content and added text content using CSS pseudo elements attached to heading, paragraph, div and link tags - sourced from an external file CSS file.&lt;/p&gt;

&lt;p&gt;You can also view the code and resulting page¬†&lt;a href="https://codepen.io/colinmcdermott/pen/QWvwQMp"&gt;on CodePen here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To give the URL a little boost to help it get indexed more quickly (or indeed at all) I linked to it temporarily from the footer of the site.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rendering"&gt;
  &lt;/a&gt;
  Rendering
&lt;/h3&gt;

&lt;p&gt;To test I also ran the page through the Fetch tool in Search Console and the Mobile Friendly testing tool.&lt;/p&gt;

&lt;p&gt;Both showed that Google were able to fully render the CSS content as it appeared to normal users on the page.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#results"&gt;
  &lt;/a&gt;
  Results
&lt;/h3&gt;

&lt;p&gt;Eventually (slightly to my surprise) the page did get indexed in Google despite the complete lack of content.&lt;/p&gt;

&lt;p&gt;However checking the resulting listing in Google, and after searching for strings of text from the page - it became clear that no actual content had been indexed.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NPrqb0A5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.searchcandy.uk/wp-content/uploads/2021/07/image.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NPrqb0A5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.searchcandy.uk/wp-content/uploads/2021/07/image.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So we can confirm from this test that:¬†NO¬†- although Google can render it, CSS based content will not currently be indexed in Google.&lt;/p&gt;

&lt;p&gt;If you include text content on your site using CSS pseudo elements and the CSS 'content' property it is currently not possible for Google to index the text content.&lt;/p&gt;

&lt;p&gt;Update (14/7/2021)&lt;/p&gt;

&lt;p&gt;The fantastic Jess Peck alerted me to a previous test she conducted on the same subject¬†&lt;a href="https://jessbpeck.com/horribleseoexperiments/"&gt;you can view here&lt;/a&gt;, and another post/experiment from Mathias Bynens that¬†&lt;a href="https://mathiasbynens.be/notes/css-without-html"&gt;doesn't use any HTML at all&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>css</category>
      <category>frontend</category>
      <category>learning</category>
    </item>
    <item>
      <title>Build Complex CSS Transitions using Custom Properties and cubic-bezier()</title>
      <author>Temani Afif</author>
      <pubDate>Fri, 16 Jul 2021 10:37:13 +0000</pubDate>
      <link>https://dev.to/afif/build-complex-css-transitions-using-custom-properties-and-cubic-bezier-cn0</link>
      <guid>https://dev.to/afif/build-complex-css-transitions-using-custom-properties-and-cubic-bezier-cn0</guid>
      <description>&lt;p&gt;I recently illustrated how &lt;a href="https://dev.to/this-is-learning/advanced-css-animation-using-cubic-bezier-nho"&gt;we can achieve complex CSS animations using &lt;code&gt;cubic-bezier()&lt;/code&gt;&lt;/a&gt; and how to do the same when it comes to CSS transitions. I was able to create complex hover effect without resorting to keyframes. In this article, I will show you how to create even more complex CSS transitions.&lt;/p&gt;

&lt;p&gt;This time, let's use the &lt;code&gt;@property&lt;/code&gt; feature. It's only supported on Chrome-based browsers for now but we can still play with it and demonstrate how it, too, and can be used to build complex animations.&lt;/p&gt;

&lt;p&gt;Read the below for more detail about &lt;code&gt;@property&lt;/code&gt;&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/afif" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jSZolrIL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--5k2bquNj--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/577896/343fde9f-609b-419b-95d1-07d16b320a37.png" alt="afif"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/afif/we-can-finally-animate-css-gradient-kdk" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;We can finally animate CSS gradient&lt;/h2&gt;
      &lt;h3&gt;Temani Afif „Éª Feb 26 „Éª 2 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;I highly recommend reading &lt;a href="https://dev.to/this-is-learning/advanced-css-animation-using-cubic-bezier-nho"&gt;my previous article&lt;/a&gt; because I will be referring to a few concepts I explained in detail there. Also, please note that the demos in this article are best viewed in Chromium-based browsers while &lt;code&gt;@property&lt;/code&gt; support is still limited.&lt;/p&gt;

&lt;p&gt;Let‚Äôs start with a demo:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/OJpojQX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Click on the button (more than once) and see the "magic" curve we get. It may look trivial at first glance because we can achieve such effect using some complex keyframes. But the trick is that there is no keyframe in there! That animation is done using only a transition.&lt;/p&gt;

&lt;p&gt;Awesome right? And this is only the beginning, so let's dig in!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-main-idea"&gt;
  &lt;/a&gt;
  The main idea
&lt;/h2&gt;

&lt;p&gt;The trick in the previous example relies on this code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="n"&gt;--d1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;syntax&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'&amp;lt;number&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;inherits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;initial-value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="n"&gt;--d2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;syntax&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'&amp;lt;number&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;inherits&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;initial-value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--d1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="err"&gt;+&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--d2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="m"&gt;1%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;--d1&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-1200&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;--d2&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1200&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;-1200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--d1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--d1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-0.2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're defining two custom properties, &lt;code&gt;--d1&lt;/code&gt; and &lt;code&gt;--d2&lt;/code&gt;. Then, we declare the &lt;code&gt;top&lt;/code&gt; property on a &lt;code&gt;.box&lt;/code&gt; element using the sum of both those properties. Nothing overly complex yet‚Äîjust &lt;code&gt;calc()&lt;/code&gt; applied to two variables.&lt;/p&gt;

&lt;p&gt;The two properties are defined as &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; and I multiply those values by &lt;code&gt;1%&lt;/code&gt; to convert them into a percentage. We could define these as &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; right away to avoid the multiplication. But I've chosen numbers instead in favor of more flexibility for more complex operations later.&lt;/p&gt;

&lt;p&gt;Notice that we apply a different transition to each variable‚Äîmore precisely, a different timing-function with the same duration. It's actually a different &lt;em&gt;sinusoidal curve&lt;/em&gt; for both variables which is something I get deep into in &lt;a href="https://dev.to/this-is-learning/advanced-css-animation-using-cubic-bezier-nho"&gt;my previous article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;From there, the property values change when the &lt;code&gt;.box&lt;/code&gt; is hovered, triggering the animation. But why do we get the result we see in the demo?&lt;/p&gt;

&lt;p&gt;It's all about math. We are adding two functions to create a third one. For &lt;code&gt;--d1&lt;/code&gt;, we have a function (let's call it &lt;code&gt;F1&lt;/code&gt;); for &lt;code&gt;--d2&lt;/code&gt; , we have another one (let's call it &lt;code&gt;F2&lt;/code&gt;). That means the value of top is &lt;code&gt;F1 + F2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An example to better illustrate:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/rNyZGpX?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;The first two transitions illustrate each variable individually. The third one is the sum of them. Imagine that at in each step of the animation we take the value of both variables and we add them together to get each point along the final curve.&lt;/p&gt;

&lt;p&gt;Let's try another example:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/OJpoxaZ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This time, we combine two parabolic curve to get a‚Ä¶ well, I don't know its name it but it's another complex curve!&lt;/p&gt;

&lt;p&gt;This trick is not only limited to the parabolic and sinusoidal curve. It can work with any kind of timing function even if the result won‚Äôt always be a complex curve.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/QWpVOwP?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;This time:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;--d1&lt;/code&gt; goes from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;30&lt;/code&gt; with an &lt;code&gt;ease-in&lt;/code&gt; timing function&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;--d2&lt;/code&gt; goes from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;-20&lt;/code&gt; with an &lt;code&gt;ease-out&lt;/code&gt; timing function
The result? The top value goes from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;10&lt;/code&gt; (&lt;code&gt;30-20&lt;/code&gt;) with a custom timing function (the sum of &lt;code&gt;ease-in&lt;/code&gt; and &lt;code&gt;ease-out&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We are not getting a complex transition in this case ‚Äî it's more to illustrate the fact that it‚Äôs a generic idea not only limited to &lt;code&gt;cubic-bezier()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I think it's time for an interactive demo.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/QWpVOZb?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;All you have to do is to adjust a few variables to build your own complex transition. I know &lt;code&gt;cubic-bezier()&lt;/code&gt; may be tricky, so consider &lt;a href="https://cubic-bezier.com/"&gt;using this online curve generator&lt;/a&gt; and also refer to &lt;a href="https://dev.to/this-is-learning/advanced-css-animation-using-cubic-bezier-nho"&gt;my previous article&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are some examples I made:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r4cYbgq4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623707586021_image.png%3Fresize%3D1000%252C218%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r4cYbgq4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623707586021_image.png%3Fresize%3D1000%252C218%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2rxjamp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623707394924_image.png%3Fresize%3D1000%252C198%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y2rxjamp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i1.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623707394924_image.png%3Fresize%3D1000%252C198%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--X_N8i4Ei--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623707785542_image.png%3Fresize%3D1000%252C212%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X_N8i4Ei--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623707785542_image.png%3Fresize%3D1000%252C212%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OAAsIoMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623708118748_image.png%3Fresize%3D1000%252C219%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OAAsIoMU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623708118748_image.png%3Fresize%3D1000%252C219%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kp6NTrhu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623708352278_image.png%3Fresize%3D1000%252C218%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kp6NTrhu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623708352278_image.png%3Fresize%3D1000%252C218%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see, we can combine two different timing functions (created using &lt;code&gt;cubic-bezier()&lt;/code&gt; ) to create a third one, complex enough to achieve a fancy transition. The combinations (and possibilities) are unlimited!&lt;/p&gt;

&lt;p&gt;In that last example, I wanted to demonstrate how adding two opposite functions lead to the logical result of a constant function (no transition). Hence, the flat line.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#lets-add-more-variables"&gt;
  &lt;/a&gt;
  Let's add more variables!
&lt;/h2&gt;

&lt;p&gt;You thought we'd stop at only two variables? Certainly not! We can extend the logic to N variables. There is no restriction ‚Äî we define each one with a timing function and sum them up.&lt;/p&gt;

&lt;p&gt;An example with three variables:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/gOmdvye?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;In most cases, two variables are plenty to create a fancy curve, but it's neat to know that the trick can be extended to more variables.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#can-we-subract-multiply-and-divide-variables"&gt;
  &lt;/a&gt;
  Can we subract, multiply and divide variables?
&lt;/h2&gt;

&lt;p&gt;Of course! We can also extend the same idea to consider more operations. We can add, subtract, multiply, divide‚Äîand even perform a complex formula between variables.&lt;/p&gt;

&lt;p&gt;Here, we're multiplying values:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/GRWXxYz?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--hUcp-JXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623713012450_image.png%3Fresize%3D1000%252C225%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--hUcp-JXw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i2.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623713012450_image.png%3Fresize%3D1000%252C225%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CkOhGJ3k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623713221967_image.png%3Fresize%3D1000%252C219%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CkOhGJ3k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623713221967_image.png%3Fresize%3D1000%252C219%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can also use one variable and multiply it by itself to get a quadratic function!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/ExWeLXp?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Let's add more fun in there by introducing &lt;code&gt;min()&lt;/code&gt;/&lt;code&gt;max()&lt;/code&gt; to simulate an &lt;code&gt;abs()&lt;/code&gt; function:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/WNpgJaO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Notice that in the second box we will never get higher than the center point on the y-axis because &lt;code&gt;top&lt;/code&gt; is always a positive value. (I added a &lt;code&gt;margin-top&lt;/code&gt; to make the center of box the reference for &lt;code&gt;0&lt;/code&gt;.)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4s3PdDhw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623713645384_image-1.png%3Fw%3D998%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4s3PdDhw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623713645384_image-1.png%3Fw%3D998%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2fsiVkz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623713736514_image.png%3Fw%3D998%26ssl%3D1" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Z2fsiVkz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://i0.wp.com/css-tricks.com/wp-content/uploads/2021/07/s_E5FA9B60DB2DD68259AE36C4F3A595FF19BEE48F771DA7255CBE6656BCD3C823_1623713736514_image.png%3Fw%3D998%26ssl%3D1" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I won't get into all the math, but you can imagine the possibilities we have to create any kind of timing function. All we have to do is to find the right formula either using one variable or combining multiple variables.&lt;/p&gt;

&lt;p&gt;Our initial code can be generalized:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@property&lt;/span&gt; &lt;span class="n"&gt;--d1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="c"&gt;/* we do the same for d2 .. dn */&lt;/span&gt;
  &lt;span class="nt"&gt;syntax&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'&amp;lt;number&amp;gt;'&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="nt"&gt;inherits&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;false&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="nt"&gt;initial-value&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;i1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* the initial value can be different for each variable */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--duration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c"&gt;/* the same duration for all */&lt;/span&gt;
  &lt;span class="py"&gt;property&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--d1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--d2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--dn&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="err"&gt;*&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;UNIT&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;--d1&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--duration&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;--d2&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--duration&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="c"&gt;/* .. */&lt;/span&gt;
    &lt;span class="n"&gt;--dn&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--duration&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;cubic-bezier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nc"&gt;.box&lt;/span&gt;&lt;span class="nd"&gt;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="py"&gt;--d1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;--d2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c"&gt;/* .. */&lt;/span&gt;
  &lt;span class="py"&gt;--dn&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;f3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is pseudo-code to illustrate the logic:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We use &lt;code&gt;@property&lt;/code&gt; to define numeric custom properties, each with an initial value.&lt;/li&gt;
&lt;li&gt;Each variable has its own timing function but the same duration.&lt;/li&gt;
&lt;li&gt;We define an &lt;code&gt;f&lt;/code&gt; function that is the formula used between the variables. The function provides a number that we use to multiply the relevant unit. All this runs in &lt;code&gt;calc()&lt;/code&gt; applied to the property.&lt;/li&gt;
&lt;li&gt;We update the value of each variable on hover (or toggle, or whatever).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Given this, the property transitions from &lt;code&gt;f(i1,i2,‚Ä¶,in)&lt;/code&gt; to &lt;code&gt;f(f1,f2,..,fn)&lt;/code&gt; with a custom timing function.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#chaining-timing-functions"&gt;
  &lt;/a&gt;
  Chaining timing functions
&lt;/h2&gt;

&lt;p&gt;We've reached the point where we were able to create a complex timing function by combining basic ones. Let's try another idea that allow us to have more complex timing function: &lt;strong&gt;chaining timing functions together&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The trick is to run the transitions sequentially using the &lt;code&gt;transition-delay&lt;/code&gt; property. Let's look back at the interactive demo and apply a delay to one of the variables:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/ZEeMZrv?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;We are chaining timing functions instead of adding them together for yet another way to create more complex timing functions! Mathematically, it's still a sum, but since the transitions do not run at the same time, we will be summing a function with a constant, and that simulates the chaining.&lt;/p&gt;

&lt;p&gt;Now imagine the case with N variables that we are incrementally delayed. Not only can we create complex transitions this way, but we have enough flexibility to build complex timelines.&lt;/p&gt;

&lt;p&gt;If you followed my &lt;a href="https://dev.to/afif/still-100-underline-overlay-animations-the-advanced-css-collection-4mol#the-arcade-ii"&gt;underline/overlay collections&lt;/a&gt; you will remember the below one I built using such technique.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/MWpqRqQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;You will find no keyframes there. A small action scene is made entirely using one element and a CSS transition.&lt;/p&gt;

&lt;p&gt;Here is a realistic pendulum animation using the same idea:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/WNpaGBO?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Or, how about a ball that bounces naturally:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/WNpaoOM?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;Or maybe a ball rolling along a curve:&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/GRWwedQ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;See that? We just created complex animations without a single keyframe in the code!&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#thats-a-wrap"&gt;
  &lt;/a&gt;
  That's a wrap!
&lt;/h2&gt;

&lt;p&gt;I hope you took three key points away from this article and the previous one:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We can get parabolic and sinusoidal curves using &lt;code&gt;cubic-bezier()&lt;/code&gt; that allow us to create complex transitions without keyframes.&lt;/li&gt;
&lt;li&gt;We can create more curves by combining different timing functions using custom properties and &lt;code&gt;calc()&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;We can chain the curves using the &lt;code&gt;transition-delay&lt;/code&gt; to build a complex timeline.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thanks to these three features, we have no limits when it comes to creating complex animations without keyframes&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/t_afif/embed/NWpeazj?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>codepen</category>
    </item>
    <item>
      <title>Rightsizing - Why it is Important to Me.</title>
      <author>Harinder Seera üá≠üá≤</author>
      <pubDate>Fri, 16 Jul 2021 10:09:54 +0000</pubDate>
      <link>https://dev.to/aws-builders/rightsizing-why-it-is-important-to-me-imi</link>
      <guid>https://dev.to/aws-builders/rightsizing-why-it-is-important-to-me-imi</guid>
      <description>&lt;p&gt;A question was recently asked on &lt;a href="https://www.linkedin.com/posts/dr-manzoor-mohammed-06104a1_cto-cloud-engineering-activity-6818118583877476352-T6uk"&gt;LinkedIn&lt;/a&gt; about whether you think rightsizing is important or not. I left a comment on the post but did not elaborate. This post attempts to expand on the comment.&lt;/p&gt;

&lt;p&gt;When I talk to people about rightsizing, I frequently get the impression that they feel it is all about EC2 autoscaling, underutilised EBS volumes, or EC2 instance type. In my perspective, it's more complex than that. Data consumption and suitable configuration settings are also included in rightsizing.&lt;/p&gt;

&lt;p&gt;So here are a few of the reasons why rightsizing is important to me. They're as follows:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-avoiding-downtime-amp-account-limit-issues"&gt;
  &lt;/a&gt;
  1. Avoiding Downtime &amp;amp; Account limit issues
&lt;/h2&gt;

&lt;p&gt;You may encounter a variety of account limits and downtime issues if resources are not correctly sized. This could then impact your delivery. As an example:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If you over-provision DynamoDB table capacity, you may be unable to pre-provision capacity for other DynamoDB tables in the account. This is due to the possibility that you have hit the soft account level restriction. As a result, selecting the appropriate capacity is important. This can happen in a non-production account if distinct DynamoDB tables have been configured for use by different teams and test environments. &lt;/li&gt;
&lt;li&gt;Another case in point is &lt;a href="https://medium.com/compass-true-north/experiences-for-ip-addresses-shortage-on-eks-clusters-a740f56ac2f5"&gt;IP address fragmentation on ENIs&lt;/a&gt;. You believe you have an enough number of IP addresses, but you do not. You continue with the deployment in an environment, but it fails because of a lack of IP addresses. &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Both of these cases demonstrate an unanticipated effect of failing to rightsize resources. The cost in the preceding situations is the time spent by team members detecting and resolving the issue, which might have been avoided if rightsizing had been done appropriately.&lt;/p&gt;

&lt;p&gt;In addition, I have firsthand experience of both of these situations.   &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-monitoring"&gt;
  &lt;/a&gt;
  2. Monitoring
&lt;/h2&gt;

&lt;p&gt;Rightsizing can help you reduce the number of resources you need to monitor. You may be able to minimise the amount of data ingested for monitoring purposes as well. All of this leads to the fourth step, which is waste reduction.&lt;/p&gt;

&lt;p&gt;Rightsizing can also assist you in reducing the number of third-party agents needed to monitor the resources. Once again, this can help with the waste reduction. Datadog, for example, charges based on the number of instances, so the more nodes there are, the more money there is. Splunk charges a daily fee based on the amount of data that the Splunk instance indexes. There is a data transfer fee if data is transferred to a different region for Splunk to index than where the application is located.   &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-improved-application-performance"&gt;
  &lt;/a&gt;
  3. Improved Application Performance
&lt;/h2&gt;

&lt;p&gt;Rightsizing may have an effect on the performance of your application. For example, rightsizing the &lt;a href="https://theburningmonk.com/2017/06/aws-lambda-compare-coldstart-time-with-different-languages-memory-and-code-sizes/"&gt;proper memory for the lambda function&lt;/a&gt; might assist lessen the impact of the cold startup.&lt;/p&gt;

&lt;p&gt;Similarly, choosing the appropriate &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-short-and-long-polling.html"&gt;AWS SQS polling mode and timeout&lt;/a&gt; setting will optimize your application's performance and cost. I recall the first time we implemented short polling and how it affected performance, resource use, and cost. With a little redesign and the correct configuration, we were able to enhance performance, select the best resource to provide the required throughput, and minimize costs.   &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-managing-cost"&gt;
  &lt;/a&gt;
  4. Managing Cost
&lt;/h2&gt;

&lt;p&gt;When considering costs, you must include both direct and indirect costs associated to rightsizing. If a cost can be easily attributed and accounted for to a product or service, it is classified as direct; otherwise, it is classified as indirect. &lt;/p&gt;

&lt;p&gt;In the case of the ENI example above, the deployment failure required someone to troubleshoot the problem before re-triggering the deployment. That was an unintentional cost incurred. Someone had to stop what they were doing to investigate and resolve the issue. It also meant that no further deployments could take place until the issue was resolved. I'm sure there are other examples of indirect costs that people have incurred but are unaware of since they haven't rightsized.    &lt;/p&gt;

&lt;p&gt;The direct cost, on the other hand, is the same as switching EC2 instance types. The &lt;a href="https://aws.amazon.com/ec2/pricing/on-demand/"&gt;price change&lt;/a&gt; will be obvious.  &lt;/p&gt;

&lt;p&gt;Depending on the circumstances, a software licence may be deemed a direct or indirect cost. Regardless of whatever category it fits under, it is still a cost that can be influenced by resource rightsizing. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  &lt;em&gt;Final Thoughts.&lt;/em&gt;
&lt;/h2&gt;

&lt;p&gt;Rightsizing is a continuous process and not once of activity. Also, I believe that rightsizing entails far more than EC2 instance types, Autoscaling, and underutilized EBS volumes.&lt;/p&gt;

&lt;p&gt;Rightsizing is important to me for the reasons stated above. So, why is rightsizing important to you? &lt;/p&gt;




&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;If you enjoyed this article feel free to share it on social media üôÇ&lt;/p&gt;

&lt;p&gt;Say Hello on: &lt;a href="https://www.linkedin.com/in/hpseera/"&gt;Linkedin&lt;/a&gt; | &lt;a href="https://twitter.com/harinderseera"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github repo: &lt;a href="https://github.com/hseera"&gt;hseera&lt;/a&gt;&lt;/p&gt;

</description>
      <category>aws</category>
      <category>performance</category>
      <category>finops</category>
      <category>cloud</category>
    </item>
    <item>
      <title>Scrape Google Shopping Product Results with Python</title>
      <author>Dimitry Zub</author>
      <pubDate>Fri, 16 Jul 2021 09:44:58 +0000</pubDate>
      <link>https://dev.to/dimitryzub/scrape-google-shopping-product-results-with-python-1aka</link>
      <guid>https://dev.to/dimitryzub/scrape-google-shopping-product-results-with-python-1aka</guid>
      <description>&lt;p&gt;Contents: intro, imports, what will be scraped, process, code, links, outro.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#intro"&gt;
  &lt;/a&gt;
  Intro
&lt;/h3&gt;

&lt;p&gt;This blog post is a continuation of Google's web scraping series. Here you'll see how to scrape Product Results using Python using &lt;code&gt;beautifulsoup&lt;/code&gt;, &lt;code&gt;requests&lt;/code&gt;, &lt;code&gt;lxml&lt;/code&gt; libraries. An alternative API solution will be shown. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#imports"&gt;
  &lt;/a&gt;
  Imports
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lxml&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;serpapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GoogleSearch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#what-will-be-scraped"&gt;
  &lt;/a&gt;
  What will be scraped
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OJ_zuH8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnzbrkw5qln85qp100k2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OJ_zuH8c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hnzbrkw5qln85qp100k2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#process"&gt;
  &lt;/a&gt;
  Process
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Found a container will all data.&lt;/li&gt;
&lt;li&gt;Used nested &lt;code&gt;for&lt;/code&gt; loops whenever data is not extracted fully. &lt;em&gt;Note that nested &lt;code&gt;for&lt;/code&gt; loops could be pain in the neck if you want to get a structured &lt;code&gt;json&lt;/code&gt;, e.g. &lt;code&gt;.update()&lt;/code&gt; existing &lt;code&gt;dict()&lt;/code&gt;, but I could be wrong here. These words are based on my experience.&lt;/em&gt; &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#code"&gt;
  &lt;/a&gt;
  Code
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lxml&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;

&lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"User-Agent"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.19582"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"https://www.google.com/shopping/product/14506091995175728218?hl=en"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'lxml'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_product_results_data&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;page_result&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.sg-product__dpdp-c'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.sh-t__title'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
        &lt;span class="n"&gt;reviews&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.aE5Gic span'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'('&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;')'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;rating&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.UzThIf'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s"&gt;'aria-label'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'stars'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;' out of '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.sh-ds__trunc-txt'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
        &lt;span class="c1"&gt;# ¬†¬∑ = " ¬∑ " dot separator
&lt;/span&gt;        &lt;span class="n"&gt;extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.Qo4JI'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'¬†¬∑ '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;reviews&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;rating&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;prices&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;page_result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.o4ZIje'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;price&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prices&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'('&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;')'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;' + '&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;price&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;review_table&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;page_result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.aALHge'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;number_of_stars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;review_table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.rOdmxf'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
            &lt;span class="n"&gt;number_of_reviews&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;review_table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.rOdmxf'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;next_sibling&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'aria-label'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;number_of_stars&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;number_of_reviews&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;page_result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.XBANlb'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.P3O8Ne'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
            &lt;span class="n"&gt;rating&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.UzThIf'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s"&gt;'aria-label'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.ff3bE'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
            &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.g1lvWe div'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
            &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.sPPcBf'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'   '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;rating&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;desc&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'----------------------------------------------------'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# get link to use in another func() that will extract other reviews
&lt;/span&gt;        &lt;span class="n"&gt;all_reviews_link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"https://www.google.com&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'a.internal-link.JKlKAe.Ba4zEd '&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s"&gt;'href'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;all_reviews_link&lt;/span&gt;


&lt;span class="o"&gt;----------------------&lt;/span&gt;
&lt;span class="s"&gt;'''
Google Pixel 4 White 64 GB, Unlocked
632
4.5
Point and shoot for the perfect photo. Capture brilliant color and control the exposure balance of different parts of your photos. Get the shot without the flash. Night Sight is now faster and easier to use it can even take photos of the Milky Way. Get more done with your voice ...
['Google', 'Pixel Family', 'Pixel 4', 'Android', '5.7 inches screen', 'Facial Recognition', '8 MP Front Camera', 'Smartphone', 'Wireless Charging', 'Unlocked']

5 star
362
4 star
90
3 star
53
2 star
34
1 star
93

Google, PLEASE bring back the fingerprint scanner!
1
November 24, 2020
I will start by saying I am usually a huge fan of all things Google. My wife and I had the original Pixel for several years and raved about them to anyone who would listen. The batteries were finally starting to fail and it was time to get new phones. We both went for the Pixel 4 thinking we would get the same great phone we had loved for years. Even though I was disappointed right away, I waited a few months to leave a review to see if I just needed to get used to it. Now, months later, I can safely say I'm disappointed. I still cannot get over the loss of the backside fingerprint scanner. The facial recognition that took its place is useless 80% of the time (it won't work if you're wearing a face mask or in low lighting), 10% of the time it unlocks my phone unintentionally ...¬†More
Justin Thielman ¬∑ Review provided by Google
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#get-more-reviews"&gt;
  &lt;/a&gt;
  Get more reviews
&lt;/h3&gt;

&lt;p&gt;Essentially, the URL is coming from the  &lt;code&gt;get_product_results_data()&lt;/code&gt; function that &lt;code&gt;return&lt;/code&gt; &lt;code&gt;all_reviews_link&lt;/code&gt; variable.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lxml&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;google_get_product_results&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_product_results_data&lt;/span&gt;


&lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;"User-Agent"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.19582"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_all_reviews&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_product_results_data&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'lxml'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.z6XoBf'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.P3O8Ne'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
        &lt;span class="n"&gt;rating&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.UzThIf'&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s"&gt;'aria-label'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.ff3bE'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
        &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.g1lvWe div'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
        &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;user_review&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;select_one&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.sPPcBf'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'   '&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;' '&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;rating&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;desc&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#combining-two-functions-together"&gt;
  &lt;/a&gt;
  Combining two functions together:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;google_get_product_results&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_product_results_data&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;google_get_all_product_results_reviews&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;get_all_reviews&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'Product data:'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;get_product_results_data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'All reviews:'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;get_all_reviews&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="o"&gt;------------------&lt;/span&gt;
&lt;span class="s"&gt;'''
Product data:
Google Pixel 4 White 64 GB, Unlocked
629
4.5
Point and shoot for the perfect photo. Capture brilliant color and control the exposure balance of different parts of your photos. Get the shot without the flash. Night Sight is now faster and easier to use it can even take photos of the Milky Way. Get more done with your voice ...
['Google', 'Pixel Family', 'Pixel 4', 'Android', '5.7 inches screen', 'Facial Recognition', '8 MP Front Camera', 'Smartphone', 'Wireless Charging', 'Unlocked']

$598.95
$598.95
5 star
361
4 star
90
3 star
53
2 star
33
1 star
92

Google, PLEASE bring back the fingerprint scanner!
1
November 24, 2020
I will start by saying I am usually a huge fan of all things Google. My wife and I had the original Pixel for several years and raved about them to anyone who would listen. The batteries were finally starting to fail and it was time to get new phones. We both went for the Pixel 4 thinking we would get the same great phone we had loved for years. Even though I was disappointed right away, I waited a few months to leave a review to see if I just needed to get used to it. Now, months later, I can safely say I'm disappointed. I still cannot get over the loss of the backside fingerprint scanner. The facial recognition that took its place is useless 80% of the time (it won't work if you're wearing a face mask or in low lighting), 10% of the time it unlocks my phone unintentionally ...¬†More
Justin Thielman ¬∑ Review provided by Google
---------------------------------------------------------
All reviews:
Google, PLEASE bring back the fingerprint scanner!
1
November 24, 2020
I will start by saying I am usually a huge fan of all things Google. My wife and I had the original Pixel for several years and raved about them to anyone who would listen. The batteries were finally starting to fail and it was time to get new phones. We both went for the Pixel 4 thinking we would get the same great phone we had loved for years. Even though I was disappointed right away, I waited a few months to leave a review to see if I just needed to get used to it. Now, months later, I can safely say I'm disappointed. I still cannot get over the loss of the backside fingerprint scanner. The facial recognition that took its place is useless 80% of the time (it won't work if you're wearing a face mask or in low lighting), 10% of the time it unlocks my phone unintentionally ...¬†More
Justin Thielman ¬∑ Review provided by Google
Waste of money, google removed key features just to put them in cheaper next gen phones.
1
February 3, 2021
One of the worst phones i have ever owned. Getting rid of the fingerprint scanner was a big mistake with this phone. The face unlock is such a stupid feature, and unnecessary when people already expect and like the fingerprint scan. The battery life is abysmal. My phone doesnt last even for 1 whole day with light usage. I have an iphone 8 plus for work and that phone has a great battery life even though it is much, much much older. That iphone lasts for 3 days with regular use, and a full day if i am streaming videos all day. The photos on the pixel are okay, i dont like that it applies a ton of blurring to faces. It will blue the heck out of your face to smooth everything and i dont like that. My selfies dont even look like me. And the night photos were the main draw, but ...¬†More
sarahlikesglitter ¬∑ Review provided by Google
Please Bring Back Fingerprint Scanner
3
December 28, 2020
Like another user said, face recognition is just not as good as a fingerprint scanner. With my fingerprint, I can unlock the phone whenever I'm holding it, no matter what position. With face recognition is has to be right up to my face. It's such a pain, and now that we're wearing masks all the time, it's really a problem. If there's low lighting, it also can't see me. As someone who was a fan of the Huawei Mate before the company was banned from the US, I'm glad the Pixel finally has an Ultra/Extreme Battery Saving mode. That was one of my favorite features as someone who always has low battery because I'm always on my phone. The latest update made the phone worse in my opinion. At first, the Messenger bumbles were messing up, but they fixed that. Now, every time I try ...¬†More
Shan Howard ¬∑ Review provided by Google
I wanted an upgrade but I was taken back to 2000.

...
Other reviews..
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can go even further by applying &lt;code&gt;Selenium&lt;/code&gt; that will click on &lt;em&gt;More reviews&lt;/em&gt; button until there's nothing to click on in order to extract all review results.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#using-google-product-result-api"&gt;
  &lt;/a&gt;
  Using &lt;a href="https://serpapi.com/product-result"&gt;Google Product Result API&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;SerpApi is a paid API with a free plan.&lt;/p&gt;

&lt;p&gt;The difference I like the most is that it comes with structured &lt;code&gt;JSON&lt;/code&gt; output and all you have to do is just to iterate over it. &lt;/p&gt;

&lt;p&gt;Besides that, if you want to done things quickly, API is a way to go since you don't have to build everything from scratch by searching the right &lt;code&gt;CSS&lt;/code&gt; selector or something else.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;serpapi&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GoogleSearch&lt;/span&gt;

&lt;span class="n"&gt;params&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;"api_key"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"YOUR_API_KEY"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"engine"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"google_product"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"product_id"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"14506091995175728218"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"gl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"us"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="s"&gt;"hl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"en"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;search&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GoogleSearch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;search&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_dict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'product_results'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;prices&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'product_results'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'prices'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;reviews&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'product_results'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'reviews'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;rating&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'product_results'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'rating'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;extensions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'product_results'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'extensions'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'product_results'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'description'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;user_reviews&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'product_results'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'reviews'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;reviews_results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'reviews_results'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s"&gt;'ratings'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;prices&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;reviews&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;rating&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;extensions&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;user_reviews&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;reviews_results&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;---------------------&lt;/span&gt;
&lt;span class="s"&gt;'''
Google Pixel 4 White 64 GB, Unlocked
['$199.99', '$198.00', '$460.00']
629
3.9
['Google', 'Pixel Family', 'Pixel 4', 'Android', '5.7‚Ä≥', 'Facial Recognition', '8 MP front camera', 'Smartphone', 'With Wireless Charging', 'Unlocked']
Point and shoot for the perfect photo. Capture brilliant color and control the exposure balance of different parts of your photos. Get the shot without the flash. Night Sight is now faster and easier to use it can even take photos of the Milky Way. Get more done with your voice. The new Google Assistant is the easiest way to send texts, share photos, and more. A new way to control your phone. Quick Gestures let you skip songs and silence calls ‚Äì just by waving your hand above the screen. End the robocalls. With Call Screen, the Google Assistant helps you proactively filter our spam before your phone ever rings.
629
[{'stars': 1, 'amount': 92}, {'stars': 2, 'amount': 33}, {'stars': 3, 'amount': 53}, {'stars': 4, 'amount': 90}, {'stars': 5, 'amount': 361}]
'''&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can also extract more reviews results using SerpApi by simply adding &lt;code&gt;reviews&lt;/code&gt; parameter to &lt;code&gt;params&lt;/code&gt; &lt;code&gt;dictionary&lt;/code&gt;, e.g. &lt;code&gt;"reviews": "1"&lt;/code&gt;, which by default is &lt;code&gt;0&lt;/code&gt; (&lt;strong&gt;OFF&lt;/strong&gt;) and &lt;code&gt;1&lt;/code&gt; (&lt;strong&gt;ON&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HHkV3aoO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhnc1bvdoa4w57hoxv59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HHkV3aoO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bhnc1bvdoa4w57hoxv59.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#links"&gt;
  &lt;/a&gt;
  Links
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://replit.com/@DimitryZub1/Scrape-Google-Shopping-Product-Result-python#main.py"&gt;Code in the online IDE&lt;/a&gt; ‚Ä¢ &lt;a href="https://serpapi.com/product-result"&gt;Google Product Result API&lt;/a&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#outro"&gt;
  &lt;/a&gt;
  Outro
&lt;/h3&gt;

&lt;p&gt;If you want to see how to scrape something using Python/Ruby that I didn't write about yet or you want to see some project made with SerpApi, please write me a message.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Yours, D&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/S2lenTmOxOAWA/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/S2lenTmOxOAWA/giphy.gif"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>webscraping</category>
      <category>tutorial</category>
      <category>datascience</category>
    </item>
    <item>
      <title>Stateful architecture Vs stateless architecture</title>
      <author>Saran Chakravarthi</author>
      <pubDate>Fri, 16 Jul 2021 09:44:18 +0000</pubDate>
      <link>https://dev.to/saran_chakravarthi/stateful-architecture-vs-stateless-architecture-2dh8</link>
      <guid>https://dev.to/saran_chakravarthi/stateful-architecture-vs-stateless-architecture-2dh8</guid>
      <description>&lt;p&gt;Let's say we have developed an application. For the sake of simplicity, let's assume that we have only two pages, login page and user profile page.&lt;/p&gt;

&lt;p&gt;We should display the profile of the user only when they are logged in. Let's see how stateful application and stateless application handles this. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stateful"&gt;
  &lt;/a&gt;
  Stateful:
&lt;/h2&gt;

&lt;p&gt;If we choose to use stateful architecture, we will have to store the state of the user(s) somehow. Usually the state is stored in the server itself. &lt;/p&gt;

&lt;p&gt;But what if the server goes down? Since we store the state in the memory of the server, we could possibly lose all the stored states. It's hard to restore the state.&lt;/p&gt;

&lt;p&gt;On the upside, we don't have to query the database everytime we receive a request, to check if the user is logged in or not.&lt;/p&gt;

&lt;p&gt;What if we decide to have more than one server?, Let's say the user logs in by sending a request to server-1 and the state is stored in server-1. Now the user is trying to access their profile page, due to high traffic the request is directed to server-2. Remember, the state is stored in the memory of server-1 only, so according to server-2, the user is not logged in. This might lead to inconsistency. Hence, stateful application might not go well with &lt;a href="https://dev.to/saran_chakravarthi/horizontal-vs-vertical-scaling-2h1h"&gt;horizontal scaling&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages:
&lt;/h3&gt;

&lt;p&gt;No need to query the database.&lt;/p&gt;

&lt;p&gt;It is quick, as we don't have to query the database everytime.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  Disadvantages:
&lt;/h3&gt;

&lt;p&gt;If the server goes down, it will be hard to recover.&lt;/p&gt;

&lt;p&gt;We can't scale up horizontally.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#stateless"&gt;
  &lt;/a&gt;
  Stateless:
&lt;/h2&gt;

&lt;p&gt;In case of a stateless architecture, a token is sent back to the client, when the user logs in. This token is stored in client's storage. Then this token is sent along with every request the user makes.&lt;/p&gt;

&lt;p&gt;Inorder to make sure that the request is coming from an authenticated user, we check the token sent along with the request, against the data we stored in the database.&lt;/p&gt;

&lt;p&gt;Since the token is stored in client's storage, we can easily recover if the server goes down. And horizontal scaling is much easier in stateless architecture.&lt;/p&gt;

&lt;p&gt;But the catch here is, we have to query the database everytime we get a request.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages"&gt;
  &lt;/a&gt;
  Advantages:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Horizontal scaling is easy.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We can easily recover if our sever goes down.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages"&gt;
  &lt;/a&gt;
  Disadvantages:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;We have to query our database, for every request.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Slower than stateful architecture.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>webdev</category>
      <category>design</category>
      <category>architecture</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Tips for testing the database in Symfony application</title>
      <author>Xun Zhou</author>
      <pubDate>Fri, 16 Jul 2021 08:46:23 +0000</pubDate>
      <link>https://dev.to/vikbert/tips-for-testing-the-database-in-symfony-application-1pd5</link>
      <guid>https://dev.to/vikbert/tips-for-testing-the-database-in-symfony-application-1pd5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#use-sqlite-memory-db"&gt;
  &lt;/a&gt;
  Use SQLite Memory DB
&lt;/h2&gt;

&lt;p&gt;SQLite In-memory database is a great alternative to test the interaction with database. As they exist only in the memory of the application, they are truly disposable. And it is also very easy to set up with Symfony applications that use Doctrine.&lt;/p&gt;

&lt;p&gt;üëâ Install php extension to support &lt;code&gt;SQLite&lt;/code&gt;: more about &lt;a href="https://www.getastra.com/kb/knowledgebase/how-to-install-sqlite-for-php-on-my-apache-nginx-server/"&gt;install sqlite for php&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;
&lt;span class="c"&gt;## I installed the extension in alpine docker&lt;/span&gt;
RUN apk add &lt;span class="nt"&gt;--update&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    ...
    php7-mysqli &lt;span class="se"&gt;\&lt;/span&gt;
    ...
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üëâ Check if &lt;code&gt;sqlite&lt;/code&gt; installed and enabled&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt; php &lt;span class="nt"&gt;-i&lt;/span&gt; | &lt;span class="nb"&gt;grep &lt;/span&gt;sqlite
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üëâ Config Memory DB in Symfony&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;## app/config/packages/test/doctrine.yaml&lt;/span&gt;
&lt;span class="na"&gt;doctrine&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;dbal&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;connections&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
            &lt;span class="na"&gt;default&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
                &lt;span class="na"&gt;driver&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;pdo_sqlite'&lt;/span&gt;
                &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;%env(resolve:DATABASE_URL)%'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üëâ Config app &lt;code&gt;env&lt;/code&gt; file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## app/.env.test.local&lt;/span&gt;

&lt;span class="c"&gt;## :memory: will create the database in memory&lt;/span&gt;
&lt;span class="nv"&gt;DATABASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"sqlite:///:memory:"&lt;/span&gt;

&lt;span class="c"&gt;## %kernel.project_dir%/db/sqlite3.db3 will breate the database on filesystem&lt;/span&gt;
&lt;span class="c"&gt;# DATABASE_URL="sqlite:///%kernel.project_dir%/db/sqlite3.db3"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üëâ Create a &lt;code&gt;DatabaseTestCase&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class="k"&gt;declare&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strict_types&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;App\Tests\Utils&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Doctrine\ORM\EntityManagerInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Doctrine\ORM\Tools\SchemaTool&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;LogicException&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Symfony\Bundle\FrameworkBundle\Test\KernelTestCase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Symfony\Component\HttpKernel\KernelInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DatabaseTestCase&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;KernelTestCase&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;EntityManagerInterface&lt;/span&gt; &lt;span class="nv"&gt;$entityManager&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$kernel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;self&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;bootKernel&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'test'&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="nv"&gt;$kernel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getEnvironment&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;LogicException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Execution only in Test environment possible!'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;initDatabase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$kernel&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;entityManager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$kernel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContainer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'doctrine'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getManager&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;initDatabase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;KernelInterface&lt;/span&gt; &lt;span class="nv"&gt;$kernel&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$entityManager&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$kernel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContainer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'doctrine.orm.entity_manager'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$metaData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$entityManager&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getMetadataFactory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getAllMetadata&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$schemaTool&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;SchemaTool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$entityManager&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$schemaTool&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;updateSchema&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$metaData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üëâ Example to test the &lt;code&gt;Repository&lt;/code&gt; class in symfony&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;final&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ScheduleRepositoryTest&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;DatabaseTestCase&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;?ScheduleRepository&lt;/span&gt; &lt;span class="nv"&gt;$repository&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;parent&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;ScheduleRepositoryTest&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nv"&gt;$container&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;ScheduleRepository&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;testFindDefault&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;assertEmpty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;findDefault&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;insertDefaultSchedule&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;assertInstanceOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Schedule&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;repository&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;findDefault&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;insertDefaultSchedule&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$default&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;Schedule&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;defaultSchedule&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;entityManager&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;persist&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$default&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;entityManager&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The execution of the tests is pretty fast, see the screenshot&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tV93oEgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8ov8kz8nuv50mzfo85t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tV93oEgn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/b8ov8kz8nuv50mzfo85t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#use-symfony-testbundle-to-benefit-from-transaction-and-caching"&gt;
  &lt;/a&gt;
  Use symfony Test-bundle to benefit from transaction and caching
&lt;/h2&gt;

&lt;p&gt;By using this test bundle, it will begin a &lt;code&gt;transaction&lt;/code&gt; before every testcase and roll it back again after the test finished for all configured DBAL connections. This results in a performance boost as there is no need to rebuild the schema, import a backup SQL dump or re-insert fixtures before every testcase. It also includes a &lt;code&gt;StaticArrayCache&lt;/code&gt; that will be automatically configured as meta data &amp;amp; query cache for all EntityManagers. This improved the speed and memory usage for all testsuites dramatically.&lt;/p&gt;

&lt;p&gt;üëâ install the package&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;composer require &lt;span class="nt"&gt;--dev&lt;/span&gt; dama/doctrine-test-bundle
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üëâ Config the bundle in &lt;code&gt;dama_doctrine_test_bundle.yaml&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;## app/config/packages/test/dama_doctrine_test_bundle.yaml&lt;/span&gt;
&lt;span class="na"&gt;dama_doctrine_test&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;enable_static_connection&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;enable_static_meta_data_cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
    &lt;span class="na"&gt;enable_static_query_cache&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üëâ Enable the bundle in &lt;code&gt;bundles.php&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$env&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="s1"&gt;'test'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$bundles&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DAMA\DoctrineTestBundle\DAMADoctrineTestBundle&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;üëâ Enable the PHPunit listner in &lt;code&gt;phpunit.xml.dist&lt;/code&gt;: example for &lt;code&gt;php7.4&lt;/code&gt;, more &lt;a href="https://github.com/dmaicher/doctrine-test-bundle"&gt;config info&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight xml"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;phpunit&amp;gt;&lt;/span&gt;
    ...
    &lt;span class="nt"&gt;&amp;lt;listeners&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;listener&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"\DAMA\DoctrineTestBundle\PHPUnit\PHPUnitListener"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/listeners&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/phpunit&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>sqlite</category>
      <category>symfony</category>
      <category>doctrine</category>
      <category>testing</category>
    </item>
    <item>
      <title>Common Characteristics Of Good Programmers
</title>
      <author>Mr. Unity Buddy</author>
      <pubDate>Fri, 16 Jul 2021 08:13:02 +0000</pubDate>
      <link>https://dev.to/unitybuddy/common-characteristics-of-good-programmers-5c7m</link>
      <guid>https://dev.to/unitybuddy/common-characteristics-of-good-programmers-5c7m</guid>
      <description>&lt;p&gt;Hello, buddies! Today it's a simple topic, &lt;strong&gt;Common Characteristics Of Good Developers&lt;/strong&gt;. All the things are included in the topic. So buddies, let's take a look at common characteristics that make a Good Developer or you can think 'Characteristics of a Good Developer.' Your choice..&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-puzzlesolver"&gt;
  &lt;/a&gt;
  1. Puzzle-solver
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TFgdVUY5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626422899442/DiDIrBgEb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TFgdVUY5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626422899442/DiDIrBgEb.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
If you‚Äôre going to write a code, things are going to go wrong. A lot. It‚Äôs a natural thing that happens, a huge a part of the coding process is trial and error. There are people that find this extremely frustrating. And any programmer will be able to tell you a story or two where they felt like smashing the keyboard against the screen. If you enjoy this challenge, however, you will thrive thanks to it. People who like solving puzzles are right at home in this profession. Don't you think even coding is solving puzzles?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-lifelong-learner"&gt;
  &lt;/a&gt;
  2. Lifelong learner
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TRsygdGN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626422927772/mYoiUALT-.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TRsygdGN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626422927772/mYoiUALT-.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Programming, like almost all jobs involving computer technology, is prone to extremely rapid changes. Not only does technology evolve at a breathtaking pace, trends also come and go, sometimes in a matter of months. If you‚Äôre working in this field, you will have to be willing to learn new stuff. That means refreshing and updating your skillset to fit the market and technology as a whole at regular intervals. This is a vital skill to becoming a successful programmer in the long term.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-love-learning"&gt;
  &lt;/a&gt;
  3. Love learning
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lgbm0cN1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626422970682/Jrxki5zQ0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lgbm0cN1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626422970682/Jrxki5zQ0.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Technology is constantly changing. The tools and languages you work with today are not the tools you‚Äôll be working with next year, let alone next decade. Programmers need to always be developing new skills to be able to contribute to upcoming projects. Your employer may provide ongoing training, but the best programmers take time to learn on their own.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-curious"&gt;
  &lt;/a&gt;
  4. Curious
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---U02S50w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626423026605/E3fFBM4LM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---U02S50w--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626423026605/E3fFBM4LM.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This trait has something in common with signing up for lifelong learning ‚Äì it‚Äôs about being driven and passionate about your job. But while learning requires systematic commitment, being curious is all about that initial spark. Even if things work after the first try, a good programmer still asks themselves why that is. A good programmer always strives to understand how his work functions, because that is how you make it better.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-supreme-communication-skills"&gt;
  &lt;/a&gt;
  5. Supreme Communication skills.
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1pzimihU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626423046177/sxAZzoZGf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1pzimihU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626423046177/sxAZzoZGf.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
This trait might seem to clash with the previous one at first, but the mix of both is what really makes you efficient. Programmers work with people outside of their own field for a majority of their projects. Communication is key ‚Äì whether you need to talk to clients, other departments or even fellow colleagues who have a different degree of experience in a certain topic. Being able to efficiently and accurately explained what you‚Äôre doing, why that is the way you have chosen to do it and what alternatives there might be will take you a long way.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-passion-for-the-work"&gt;
  &lt;/a&gt;
  6. Passion for the work
&lt;/h2&gt;

&lt;p&gt;While some programming staff can simply serve as nine-to-fivers or clock watchers, many hiring managers are interested in finding someone who will gladly put in long hours when needed. True programmers are self-proclaimed ‚Äúcomputer geeks,‚Äù spending their time gaming, building servers, or creating apps for themselves or friends. While this passion isn‚Äôt a necessity, it‚Äôs often a way to differentiate top-shelf programmers from the rest.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-logical-mindset"&gt;
  &lt;/a&gt;
  7.  Logical mindset
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NCUScPxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626423082040/-2AhhbAOd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NCUScPxJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626423082040/-2AhhbAOd.png" alt="image.png"&gt;&lt;/a&gt;&lt;br&gt;
Programming can often seem and feel chaotic, but it‚Äôs all about understanding and implementing the internal logic of whatever language you‚Äôre working with. People who don‚Äôt get easily frustrated get extra points here. Being able to &lt;strong&gt;handle a problem in a logical, analytical way&lt;/strong&gt; makes a programmer worth their own weight in gold.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-love-for-technology"&gt;
  &lt;/a&gt;
  8. Love for technology
&lt;/h2&gt;

&lt;p&gt;Last but not least, great programmers very passionate about technology. Again, that‚Äôs not a skill that just came to them. Maybe they liked tinkering when they were children. Or they were the kids that used to love finding ways around the school computer security system. Whatever the roots of the trait, loving technology often leads to acquiring a deep understanding of it. ‚ÄúDoing what you love‚Äù is more than just a saying for successful programmers.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#best-moment-of-a-programmer-the-eureka-moment"&gt;
  &lt;/a&gt;
  Best Moment Of A Programmer - The Eureka Moment
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_6lJFjP5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620058721651/O0cfzvaox.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_6lJFjP5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1620058721651/O0cfzvaox.gif" alt="eureka.gif"&gt;&lt;/a&gt;&lt;br&gt;
Programmers spends hours and days on a bug that is far from enjoyable you drag it on and on and on until that magic happens. Do you have any experience about a Eureka Moment when debugging or thinking about something? I'm happy to know! Happy coding!&lt;/p&gt;

</description>
      <category>programming</category>
    </item>
    <item>
      <title>Implementing Smooth Scroll Using Javascript ‚ö°</title>
      <author>Rohan Kulkarni</author>
      <pubDate>Fri, 16 Jul 2021 07:37:54 +0000</pubDate>
      <link>https://dev.to/rohank_2502/implementing-smooth-scroll-using-javascript-28n3</link>
      <guid>https://dev.to/rohank_2502/implementing-smooth-scroll-using-javascript-28n3</guid>
      <description>&lt;h2&gt;
  &lt;a href="#hello-everyone-today-we-will-be-looking-at-how-to-implement-smooth-scrolling-behavior-using-the-scrollintoview-property"&gt;
  &lt;/a&gt;
  Hello Everyone üëãüèª, today we will be looking at how to implement smooth scrolling behavior using the &lt;strong&gt;scrollIntoView&lt;/strong&gt; property.
&lt;/h2&gt;

&lt;p&gt;Normally for the creation of Navbar, we use this code.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;nav class="navbar" id="nav--bar"&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#1" class="link--a"&amp;gt;DIV 1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#2" class="link--a"&amp;gt;DIV 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#3" class="link--a"&amp;gt;DIV 3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But when we click on the element it takes us to the element with the id provided in href. This is how a normal scrolling effect looks like üëáüèª&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aJJu4CZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626416530759/VJ4CLJEwR.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aJJu4CZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626416530759/VJ4CLJEwR.gif" alt="ezgif.com-gif-maker.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#so-what-can-we-do-for-a-smooth-scrolling-effect-"&gt;
  &lt;/a&gt;
  &lt;strong&gt;So what can we do for a smooth scrolling effect ?&lt;/strong&gt;
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#html-code"&gt;
  &lt;/a&gt;
  HTML CODE
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    &amp;lt;nav class="navbar" id="nav--bar"&amp;gt;
        &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#1" class="link--a"&amp;gt;DIV 1&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#2" class="link--a"&amp;gt;DIV 2&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href="#3" class="link--a"&amp;gt;DIV 3&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
    &amp;lt;/nav&amp;gt;
    &amp;lt;section id="1"&amp;gt;
        &amp;lt;div class="div div--1"&amp;gt;This is DIV 1&amp;lt;/div&amp;gt;
    &amp;lt;/section&amp;gt;
    &amp;lt;section id="2"&amp;gt;
        &amp;lt;div class="div div--2"&amp;gt;This is DIV 2&amp;lt;/div&amp;gt;
    &amp;lt;/section&amp;gt;
    &amp;lt;section id="3"&amp;gt;
        &amp;lt;div class="div div--3"&amp;gt;This is DIV 3&amp;lt;/div&amp;gt;
    &amp;lt;/section&amp;gt;

    &amp;lt;script src="script.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#css-code"&gt;
  &lt;/a&gt;
  CSS CODE
&lt;/h2&gt;

&lt;h4&gt;
  &lt;a href="#this-code-depends-on-personal-choices-as-this-will-affect-the-design-part"&gt;
  &lt;/a&gt;
  This code depends on personal choices as this will affect the design part!
&lt;/h4&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;body {
  margin: 0;
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;
}
.div--1 {
  background-color: rgb(0, 132, 255);
}
.div--2 {
  background-color: rgb(255, 136, 0);
}
.div--3 {
  background-color: rgb(255, 0, 242);
}
.navbar ul {
  display: flex;
  justify-content: space-around;
  background-color: rgb(179, 230, 245);
  list-style: none;
  padding: 1.5em;
  border-radius: 12px;
  border: 1px solid black;
}
.navbar ul li a {
  background-color: yellow;
  padding: 1em;
  border-radius: 12px;
  border: 1px solid black;
  text-decoration: none;
}
.navbar ul li:hover {
  background-color: orangered;
  cursor: pointer;
}
.navbar {
  width: 90%;
}
section {
  width: 75%;
}
.div {
  margin: 1em;
  border-radius: 12px;
  border: 1px solid black;
  font-size: 5em;
  height: 80vh;
  display: flex;
  align-items: center;
  justify-content: space-around;
}

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#js-code"&gt;
  &lt;/a&gt;
  JS CODE
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-most-important-part-"&gt;
  &lt;/a&gt;
  The Most Important Part !!
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.getElementById('nav--bar').addEventListener('click', function (e) {
    e.preventDefault();
    const target = e.target;
    if (target.classList.contains('link--a')) {
        const id = target.getAttribute('href').slice(1);
        document.getElementById(id).scrollIntoView({ behavior: 'smooth' });
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#now-lets-focus-on-js-code-and-understand-how-each-line-works"&gt;
  &lt;/a&gt;
  Now let's Focus on JS code and understand how each line works!
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;We are having this block of code at the top. This says that the document targets the element who is having the id "nav-bar" and adds an event listener on it which will listen to the event (click) on it. And if a click happens on that event then call the function which is having parameter e which will represent the event.
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.getElementById('nav--bar').addEventListener('click', function (e) {
});
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;2.The prevent Default function will prevent the auto-scrolling due to the anchor tag. And such help us to implement smooth scrolling. In the target variable, we will store the location at which point the click event happened so we can know that exactly on which link the user clicked.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;e.preventDefault();
const target = e.target;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;3.This if loop will help us to target only those clicks which are on elements having class "link--a".&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;if (target.classList.contains('link--a')) {
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;4.In variable id we will be saving the value given in href attribute of the element where the event (click) occurred. As we have given "#1" in href we need to cut the '#' and store the remaining value.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const id = target.getAttribute('href').slice(1);
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;5.This will now target the element which is having the id the same as the value stored in the id variable and apply the "scrollIntoView" method on it with smooth behavior as we mentioned in it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;document.getElementById(id).scrollIntoView({ behavior: 'smooth' });
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#this-will-give-us-output-like-this"&gt;
  &lt;/a&gt;
  This will give us output like this üëáüèª
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QPI4lK_n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626418548670/m4iTjw2Sj.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QPI4lK_n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626418548670/m4iTjw2Sj.gif" alt="ezgif.com-gif-maker(1).gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#great-we-have-successfully-implemented-the-smooth-scroll"&gt;
  &lt;/a&gt;
  Great üéâ We have successfully implemented the smooth scroll!
&lt;/h3&gt;

&lt;p&gt;You can check the difference between both these effects will give professional look to your website! &lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Normal&lt;/th&gt;
&lt;th&gt;Smooth Scroll&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aJJu4CZX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626416530759/VJ4CLJEwR.gif" alt="ezgif.com-gif-maker.gif"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QPI4lK_n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1626418548670/m4iTjw2Sj.gif" alt="ezgif.com-gif-maker(1).gif"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;STAY TUNED FOR MORE üòÑ &lt;br&gt;
GET CONNECTED WITH ME &lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/rohan_2502"&gt;Twitter&lt;/a&gt; &lt;br&gt;
 &lt;a href="https://www.linkedin.com/in/rohan-k-2502/"&gt;LinkedIn&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Best Makefile for Docker project (M1 Compatible)</title>
      <author>Ayrton</author>
      <pubDate>Fri, 16 Jul 2021 07:13:07 +0000</pubDate>
      <link>https://dev.to/simerca/best-makefile-for-docker-project-m1-compatible-516p</link>
      <guid>https://dev.to/simerca/best-makefile-for-docker-project-m1-compatible-516p</guid>
      <description>&lt;p&gt;Hi !&lt;/p&gt;

&lt;p&gt;Here is the best Makefile ever,&lt;/p&gt;

&lt;p&gt;It's now easy to use Registry Gitlab to push your docker images and use repo name as image name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight make"&gt;&lt;code&gt;&lt;span class="nv"&gt;REGISTRY_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;shell&lt;/span&gt; &lt;span class="nb"&gt;grep &lt;/span&gt;gitlab.com .git/config|sed &lt;span class="s1"&gt;'s/url = https:\/\//registry./g'&lt;/span&gt;|sed &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s2"&gt;"s/&lt;/span&gt;&lt;span class="se"&gt;\.&lt;/span&gt;&lt;span class="s2"&gt;git&lt;/span&gt;&lt;span class="nv"&gt;$$&lt;/span&gt;&lt;span class="s2"&gt;//g"&lt;/span&gt;|xargs&lt;span class="nf"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;TAG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nf"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;shell&lt;/span&gt; git symbolic-ref &lt;span class="nt"&gt;--short&lt;/span&gt; &lt;span class="nt"&gt;-q&lt;/span&gt; HEAD|sed &lt;span class="nt"&gt;-e&lt;/span&gt; &lt;span class="s1"&gt;'s/master$$/latest/g'&lt;/span&gt;|sed &lt;span class="s1"&gt;'s/\([a-zA-Z]*\)\//\1-/g'&lt;/span&gt;&lt;span class="nf"&gt;)&lt;/span&gt;

&lt;span class="nl"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    docker build &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="nv"&gt;$(REGISTRY_ID)&lt;/span&gt;:&lt;span class="nv"&gt;$(TAG)&lt;/span&gt; .

&lt;span class="nl"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;build&lt;/span&gt;
    docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nv"&gt;$(REGISTRY_ID)&lt;/span&gt;:&lt;span class="nv"&gt;$(TAG)&lt;/span&gt; 

&lt;span class="nl"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    docker run &lt;span class="nt"&gt;--rm&lt;/span&gt; &lt;span class="nv"&gt;$(REGISTRY_ID)&lt;/span&gt;:&lt;span class="nv"&gt;$(TAG)&lt;/span&gt; 

&lt;span class="nl"&gt;pushm1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    docker buildx build &lt;span class="nt"&gt;--platform&lt;/span&gt; linux/amd64 &lt;span class="nt"&gt;--push&lt;/span&gt; &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="nv"&gt;$(REGISTRY_ID)&lt;/span&gt;:&lt;span class="nv"&gt;$(TAG)&lt;/span&gt; .

&lt;span class="nl"&gt;buildm1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    docker buildx build &lt;span class="nt"&gt;--platform&lt;/span&gt; linux/amd64 &lt;span class="nt"&gt;-t&lt;/span&gt; &lt;span class="nv"&gt;$(REGISTRY_ID)&lt;/span&gt;:&lt;span class="nv"&gt;$(TAG)&lt;/span&gt; .
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>docker</category>
      <category>devops</category>
    </item>
  </channel>
</rss>
