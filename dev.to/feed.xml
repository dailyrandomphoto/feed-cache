<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Create animated navigation indicator with HTML, CSS and JS</title>
      <author>Adrian Bece</author>
      <pubDate>Mon, 11 Jan 2021 07:03:13 +0000</pubDate>
      <link>https://dev.to/adrianbdesigns/create-animated-navigation-indicator-with-html-css-and-js-300b</link>
      <guid>https://dev.to/adrianbdesigns/create-animated-navigation-indicator-with-html-css-and-js-300b</guid>
      <description>&lt;p&gt;About a week ago, I've submitted a nice little &lt;a href="https://dev.to/adrianbdesigns/my-resolve-2021-do-hackathon-submission-91f"&gt;project for DEV x DigitalOcean hackathon&lt;/a&gt; where I've created a navigation that features a moving indicator.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3qPLF-vk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qjr5tndtdfkx4rwbbwwv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3qPLF-vk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/qjr5tndtdfkx4rwbbwwv.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I've never had the chance to create it on my regular projects, so I decided to make one for the hackathon. I was really happy with the final result, so I decided to share it with the community. Even though I created this one using React, I wanted to make one with vanilla JavaScript so you can use it on any project.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#html-setup" class="anchor"&gt;
  &lt;/a&gt;
  HTML setup
&lt;/h1&gt;

&lt;p&gt;Let's start off by creating a simple navigation markup with a simple list with a few links. We'll add &lt;code&gt;id&lt;/code&gt; attributes to the root &lt;code&gt;nav&lt;/code&gt; element and a &lt;code&gt;div&lt;/code&gt; element that we'll use as a pointer. We'll need a few classes for the nav, list, and pointer elements so we can style them.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;nav&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"js-nav"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;div&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"js-pointer"&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav__pointer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"nav__list"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Overview&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Goals&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Inspiration&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"#"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Profile&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#css-markup" class="anchor"&gt;
  &lt;/a&gt;
  CSS markup
&lt;/h1&gt;

&lt;p&gt;Let's add some styles. The following code snippet shows only required styles.&lt;/p&gt;

&lt;p&gt;We need to position &lt;code&gt;nav&lt;/code&gt; element relatively and add some padding. We'll need that value for JavaScript. We'll position &lt;code&gt;nav__pointer&lt;/code&gt; absolutely with a &lt;code&gt;z-index&lt;/code&gt; value that is lower than &lt;code&gt;nav__list&lt;/code&gt; so the indicator is positioned under the links.&lt;/p&gt;

&lt;p&gt;We need to position the links in a &lt;code&gt;4 * 1fr&lt;/code&gt; column grid so all link containers are equal width.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nc"&gt;.nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.nav__pointer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;absolute&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.6em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#bada55&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1.8em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transform&lt;/span&gt; &lt;span class="m"&gt;0.25s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.3em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;will-change&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;backface-visibility&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nc"&gt;.nav__list&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;relative&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;z-index&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="py"&gt;grid-template-columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;repeat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="n"&gt;fr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#javascript" class="anchor"&gt;
  &lt;/a&gt;
  JavaScript
&lt;/h2&gt;

&lt;p&gt;We need to select our navigation, indicator, and link elements with JavaScript. Remember that &lt;code&gt;1em&lt;/code&gt; value padding from CSS? We'll use half of that value so we can position the pointer appropriately.&lt;/p&gt;

&lt;p&gt;To avoid using magic numbers, we'll dynamically calculate the indicator's width depending on the number of columns in the grid (how many links there are).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;CONTAINER_PADDING_HALF&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.5em&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;calc(100% /&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; - &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;CONTAINER_PADDING_HALF&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;For each selected link within the &lt;code&gt;nav&lt;/code&gt; element, we'll add a &lt;code&gt;data&lt;/code&gt; attribute that stores a percentage value based on the order. If the link is first in the list, it will have a &lt;code&gt;0%&lt;/code&gt; value, if it's a second, it will have a &lt;code&gt;100%&lt;/code&gt; value, etc. We'll use those values for transforms.&lt;/p&gt;

&lt;p&gt;We're also attaching a click event listener for each link.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;links&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;links&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;  
  &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;addEventListener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;click&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;movePointer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Our link click event handler is very simple - it only applies a CSS transform attribute to the navigation indicator. The value that is being applied depends on &lt;code&gt;data-order&lt;/code&gt; attribute that we've set.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;movePointer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;order&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;e&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;currentTarget&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;pointer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;translate3d(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;order&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;,0,0)&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Since the width of the indicator matches the width of the each navigation link in the grid, and we've positioned the indicator absolutely and to the start of the first link, we only have to apply transforms in &lt;code&gt;100%&lt;/code&gt; increments. First link will have the &lt;code&gt;0%&lt;/code&gt; value, second link will have the &lt;code&gt;100%&lt;/code&gt; value, third link will have the &lt;code&gt;200%&lt;/code&gt; value, etc.&lt;/p&gt;

&lt;p&gt;By using 3D CSS transforms, this animation will be GPU-powered and it will be smooth and performant.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-result" class="anchor"&gt;
  &lt;/a&gt;
  Final Result
&lt;/h2&gt;

&lt;p&gt;Here is the CodePen link to the final result.&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/AdrianBece/embed/vYXjeed?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;




&lt;p&gt;These articles are fueled by coffee. So if you enjoy my work and found it useful, consider buying me a coffee! I would really appreciate it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/ubnZ8GgDJ"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kA3wM6t6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-red.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thank you for taking the time to read this post. If you've found this useful, please give it a ❤️ or 🦄, share and comment.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>html</category>
      <category>css</category>
    </item>
    <item>
      <title>Introducing LocalPen 🎉✨</title>
      <author>Hatem Hosny</author>
      <pubDate>Mon, 11 Jan 2021 00:10:41 +0000</pubDate>
      <link>https://dev.to/hatemhosny/introducing-localpen-2keb</link>
      <guid>https://dev.to/hatemhosny/introducing-localpen-2keb</guid>
      <description>&lt;p&gt;This is a part of the series: LocalPen - code pens that run locally!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/hatemhosny/localpen"&gt;LocalPen&lt;/a&gt; is a powerful frontend coding playground that runs totally on the client and can be hosted on any static file server. Try it now on &lt;a href="https://localpen.io/"&gt;localpen.io&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#background" class="anchor"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;During developing a typescript visualization library based on D3, I needed a playground that I can host on the documentation site of the library, where developers can test it, try different options and immediately see the result. &lt;/p&gt;

&lt;p&gt;There were many good options, but none ticked all the boxes. I needed a code editor that can be embedded in my website, can be prefilled with my code samples, allows end-users to edit and immediately see the result, has auto-complete for my library-specific typescript types, and does not cost me a large some of money. In addition, my documentation website is produced by a static site generator, which I will be hosting on a static file server, so I need the playground to run totally on the client.&lt;/p&gt;

&lt;p&gt;Am I asking for too much?&lt;/p&gt;

&lt;p&gt;Here I am introducing &lt;a href="https://github.com/hatemhosny/localpen"&gt;LocalPen&lt;/a&gt;. A project that I started as a small module to be added to the website, but actually has grown much larger and deserved to be a separate project.&lt;/p&gt;

&lt;p&gt;This coincided with the start of DigitalOcean App Platform Hackathon, which motivated me to work hard on it to have a product ready before the deadline. So, here is my submission, just a few hours before the deadline :)&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vJ70wriM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://practicaldev-herokuapp-com.freetls.fastly.net/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/hatemhosny"&gt;
        hatemhosny
      &lt;/a&gt; / &lt;a href="https://github.com/hatemhosny/localpen"&gt;
        localpen
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Code pens that run locally!
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;h2&gt;
  &lt;a href="#feature-summary" class="anchor"&gt;
  &lt;/a&gt;
  Feature Summary:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://microsoft.github.io/monaco-editor/"&gt;Monaco editor&lt;/a&gt; (the beautiful code editor that powers &lt;a href="https://github.com/Microsoft/vscode"&gt;VS Code&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://prettier.io/"&gt;Prettier&lt;/a&gt; code formatting&lt;/li&gt;
&lt;li&gt;Supports many languages (HTML, Markdown, Pug, AsciiDoc, CSS, SCSS, SASS, Less, Stylus, JavaScript, TypeScript, JSX, CoffeeScript and more to come)&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://emmet.io/"&gt;Emmet&lt;/a&gt; tab completion&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/postcss/autoprefixer"&gt;Autoprefixer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;All code compiling/transpiling occurs on the fly on the client, so works on any static server.&lt;/li&gt;
&lt;li&gt;Immediate results with no server rounds&lt;/li&gt;
&lt;li&gt;Conditional loading of modules (only the features used are downloaded)&lt;/li&gt;
&lt;li&gt;Allows adding external stylesheets and/or scripts&lt;/li&gt;
&lt;li&gt;Allows to import npm modules for usage directly without a build step (using the great &lt;a href="https://www.skypack.dev/"&gt;skypack.dev&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Imports strongly-typed local typescript modules with full code completion and intellisense.&lt;/li&gt;
&lt;li&gt;Can be embedded in regular web pages&lt;/li&gt;
&lt;li&gt;Code embeds allow editing with the immediate preview&lt;/li&gt;
&lt;li&gt;Resizable split panes (using &lt;a href="https://github.com/nathancahill/split/"&gt;split.js&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Multiple modes: full mode (with split panes), editor only mode and read-only code block mode&lt;/li&gt;
&lt;li&gt;Imports code from github and gitlab (gists and repos) or from your web pages&lt;/li&gt;
&lt;li&gt;Immediatley recognizes and imports codepens exported to github gists&lt;/li&gt;
&lt;li&gt;Export/import projects as JSON&lt;/li&gt;
&lt;li&gt;Export source code as &lt;a href="https://stuk.github.io/jszip/"&gt;zip file&lt;/a&gt; or ready-to-run compiled HTML page&lt;/li&gt;
&lt;li&gt;Export to CodePen and JsFiddle (more to come)&lt;/li&gt;
&lt;li&gt;Save/open from local storage with optional autosave&lt;/li&gt;
&lt;li&gt;Keyboard shortcuts&lt;/li&gt;
&lt;li&gt;LocalPen is under active development with more features to come.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the next post, I present the design decisions and what makes LocalPen different.&lt;/p&gt;

</description>
      <category>localpen</category>
      <category>javascript</category>
      <category>typescript</category>
      <category>vscode</category>
    </item>
    <item>
      <title>4 JavaScript things you need to know</title>
      <author>Daniel Castro</author>
      <pubDate>Sun, 10 Jan 2021 23:22:39 +0000</pubDate>
      <link>https://dev.to/dcastro/4-javascript-things-you-need-to-know-37el</link>
      <guid>https://dev.to/dcastro/4-javascript-things-you-need-to-know-37el</guid>
      <description>&lt;p&gt;As JavaScript Developer I have found a lot of interesting stuff, I'd like share with you 4 things that I think you should know if you want to be a better JavaScript developer.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#call-bind-apply" class="anchor"&gt;
  &lt;/a&gt;
  .call(), .bind(), .apply()
&lt;/h1&gt;

&lt;p&gt;If you have worked in React any time, I'm sure you have seen &lt;code&gt;bind()&lt;/code&gt; method, maybe you have used it without know what it really means. Maybe you have seen some these methods in a some JavaScript library and you don't understand how &lt;code&gt;call(), bind(), apply()&lt;/code&gt; it works.&lt;/p&gt;

&lt;p&gt;The first thing you need to understand is what &lt;code&gt;this&lt;/code&gt; means. &lt;code&gt;this&lt;/code&gt;refers in memory to the object reference of the current context and the reference to where it refers can change according to where the execution phase of a context is executing.&lt;/p&gt;

&lt;p&gt;This methods allow us to change the reference to where &lt;code&gt;this&lt;/code&gt; refers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#bind" class="anchor"&gt;
  &lt;/a&gt;
  .bind()
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Parker&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;print&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;greet&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;When we execute this code, we will get a error: &lt;code&gt;this.fullname() is not a function&lt;/code&gt; because in &lt;code&gt;print&lt;/code&gt; function &lt;code&gt;this&lt;/code&gt; refers to global object, If we want to access the user context inside the print function, we can use the &lt;code&gt;bind&lt;/code&gt; method, like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myBindedPrint&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;myBindedPrint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;So, what did we do? Well, we created a copy of print function and save it in our &lt;code&gt;myBindedPrint&lt;/code&gt; variable. So, &lt;code&gt;bind()&lt;/code&gt; method allows us to create a copy with a special feature, we can pass as parameter the context where we want &lt;code&gt;this&lt;/code&gt; to refers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#call" class="anchor"&gt;
  &lt;/a&gt;
  .call()
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;.call()&lt;/code&gt; executes a function, like if we are using &lt;code&gt;()&lt;/code&gt; and it allows us to pass as first parameter the reference to where should refer &lt;code&gt;this.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Parker&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;fullName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;When we execute that, we get same result like when we use &lt;code&gt;.bind()&lt;/code&gt;, the difference is that when we use &lt;code&gt;.call()&lt;/code&gt; we don't create a copy, we just execute it.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#apply" class="anchor"&gt;
  &lt;/a&gt;
  apply()
&lt;/h3&gt;

&lt;p&gt;Well, there's a single difference between &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;apply()&lt;/code&gt; and it is the way how we call it. &lt;code&gt;.apply()&lt;/code&gt; method receives parameters as a array, like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;print&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hello&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h4&gt;
  &lt;a href="#in-which-case-can-we-use-it" class="anchor"&gt;
  &lt;/a&gt;
  In which case can we use it?
&lt;/h4&gt;

&lt;h5&gt;
  &lt;a href="#function-borrowing" class="anchor"&gt;
  &lt;/a&gt;
  Function borrowing
&lt;/h5&gt;

&lt;p&gt;When we want to share functions between different objects. Some thing like "borrow" a function to another object. Let's see a example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Parker&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;getFullName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dog&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Thoby&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Parker&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getFullName&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;dog&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;bind ()&lt;/code&gt;, &lt;code&gt;call ()&lt;/code&gt; and &lt;code&gt;apply ()&lt;/code&gt; have to do with the reference to where &lt;code&gt;this&lt;/code&gt; refers, in each context, that is why it is useful, since with these tools we can decide what this means, it is powerful when solving problems related to the contexts of execution.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#multiples-promise-execution" class="anchor"&gt;
  &lt;/a&gt;
  Multiples Promise execution
&lt;/h1&gt;

&lt;p&gt;I have seen in beginners programmers a common mistake.&lt;/p&gt;

&lt;p&gt;Let's imagine we have a method which call our API in order to save a product in a database, it is a asynchronous operation. Now, let's imagine we have a array products and we want to save them and wait until that to be executed to continue to do anything, whatever. we would need to execute several promises. I have seen something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saveProduct&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;reject&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="na"&gt;success&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt; &lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saveProducts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;saveProduct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;products&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Pollo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Cerveza&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Agua&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;}];&lt;/span&gt;
&lt;span class="nx"&gt;saveProducts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;response&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Maybe it seems to make sense, but this line =&amp;gt; &lt;code&gt;console.log("success")&lt;/code&gt; will be executed immediately, check it!.&lt;/p&gt;

&lt;p&gt;What you need to do, is something like this.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;saveProducts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="nx"&gt;products&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;saveProduct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;product&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;succes&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you execute it you will see it works as we expected. Our line =&amp;gt; &lt;code&gt;console.log("success")&lt;/code&gt; is not executed until all promise are resolved. Also, our &lt;code&gt;saveProducts&lt;/code&gt; method returns all responses of our Promises.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#proxy" class="anchor"&gt;
  &lt;/a&gt;
  Proxy
&lt;/h1&gt;

&lt;p&gt;ES2015 proxies provide an API to catch or intercept any operation performed on an object and to modify how that object behaves. JavaScript proxies are useful for many things, such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Interception&lt;/li&gt;
&lt;li&gt;Object virtualization.&lt;/li&gt;
&lt;li&gt;Resource management.&lt;/li&gt;
&lt;li&gt;Profiling and generating logs while debugging an application.&lt;/li&gt;
&lt;li&gt;Security and access control.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To implement a proxy you need to know some terms.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;target: the original object which you want to proxy.&lt;/li&gt;
&lt;li&gt;handler: an object that defines which operations will be intercepted and how to redefine intercepted operations.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's see a example.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Peter&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;
      &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;`Property &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; doesn't exist in this object`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;proxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Peter&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;lastName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Property lastName doesn't exist in this object&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;There is a lot of things you can do using proxy. I'm going to show you a useful case.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#cache" class="anchor"&gt;
  &lt;/a&gt;
  Cache
&lt;/h5&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;getArticles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;api-url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// do something with articles&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This would mean that whenever the articles of a person is required, a new call has to be made. Instead, you could cache the articles when it is first requested, and subsequent requests could be taken from the cache.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;Peter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Article 1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Article 2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;get&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// fetch here&lt;/span&gt;
      &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;api-url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
      &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;proxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Proxy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This way, fetch will be executed only if the person isn't in cache object.&lt;/p&gt;

&lt;p&gt;You can do many things with proxy like validation, providing a read-only view of an object, private properties, etc.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#composition" class="anchor"&gt;
  &lt;/a&gt;
  Composition
&lt;/h1&gt;

&lt;p&gt;Composition is a simple but powerful concept. It's just a  simple way to use multiple functions. Each function receives an input and hands its output to the next function.&lt;/p&gt;

&lt;p&gt;Perhaps you have used the composition without knowing what that conceptually means. I will show you a simple example.&lt;/p&gt;

&lt;p&gt;Let's imagine that we want to clean up the input that a user entered, and we have a function that removes white spaces, and another function that removes special characters.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;withoutSpaces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/ /g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;removeSpecialChars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;a-zA-Z &lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We can compose these functions, into one, by doing this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;compose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;f2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;f1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;emptyInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;compose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;withoutSpaces&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;removeSpecialChars&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emptyInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;  d'ani   el&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// daniel&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Our compose function returns a new function, which receives a parameter and returns the clean string. If you pay attention to this &lt;code&gt;f2 (f1 (value))&lt;/code&gt;, you will notice that what we do is pass the result of the first function to the second function, it is that simple.&lt;/p&gt;

&lt;p&gt;If we want to compose more than one function, we can take advantage of the reduceRight method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;withoutSpaces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/ /g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;removeSpecialChars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[^&lt;/span&gt;&lt;span class="sr"&gt;a-zA-Z &lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;toLowerCase&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;compose&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(...&lt;/span&gt;&lt;span class="nx"&gt;fns&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialVal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="nx"&gt;fns&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reduceRight&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nx"&gt;initialVal&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;emptyInput&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;compose&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;withoutSpaces&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;removeSpecialChars&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;emptyInput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;  d'AVID   &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// david&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;I hope these concepts have allowed you to learn / understand something new, if you have something to add, put it in  comments section.&lt;/p&gt;

&lt;p&gt;I will be writing in the next few days about other interesting concepts in JavaScript.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>programming</category>
      <category>productivity</category>
      <category>algorithms</category>
    </item>
    <item>
      <title>5 tips to break up your workdays while working from home as a developer</title>
      <author>Joachim Zeelmaekers</author>
      <pubDate>Sun, 10 Jan 2021 22:17:22 +0000</pubDate>
      <link>https://dev.to/joachimzeelmaekers/5-tips-to-break-up-your-workdays-while-working-from-home-as-a-developer-38oi</link>
      <guid>https://dev.to/joachimzeelmaekers/5-tips-to-break-up-your-workdays-while-working-from-home-as-a-developer-38oi</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--EVleEV33--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.joachimzeelmaekers.be/content/images/2021/01/daria-nepriakhina-gm3bxHin8VA-unsplash.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--EVleEV33--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.joachimzeelmaekers.be/content/images/2021/01/daria-nepriakhina-gm3bxHin8VA-unsplash.jpg" alt="5 tips to break up your workdays while working from home as a developer"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you might know, I'm a young developer. In my early days, I always thought that working as long as possible was the way to achieve my goals. And in a way, it helped me a lot, but there is a downside to this approach. You tend to burn out on programming from time to time. And this is normal, but often ignored by working "even harder".&lt;/p&gt;

&lt;p&gt;My solution to this problem was always working out, but this is not for everyone. That's why I wanted to find a way for every developer to break up the workdays and get the rest you deserve. Best case scenario, you will even get more work done by working less. Crazy right?&lt;/p&gt;

&lt;p&gt;As a developer, we work very goal-oriented. Every feature has acceptance criteria and has to be finished within a certain period of time. This can put a lot of pressure on the developer and certainly more junior ones. In the beginning, it's difficult to complete the issues within this timeframe and you get the feeling you have to work on it in your free time. And as we all know, that's not the thing you should do during your free time.&lt;/p&gt;

&lt;p&gt;While working from home, I find it's even more difficult to close up the workday. Let's discuss some things you can do to break up your workdays while working from home.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#nocode-day" class="anchor"&gt;
  &lt;/a&gt;
  No-code day
&lt;/h3&gt;

&lt;p&gt;The first thing that really works for me, is a no-code day. This day is either Saturday or Sunday for me. On this day, I write blog posts, listen to audiobooks, and sometimes even read about new technologies, but I don't write a line of code. This helps me to remove the focus on the pile of work that is waiting for me and allows me to do other things that I enjoy.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pdFujrCk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1493711662062-fa541adb3fc8%3Fcrop%3Dentropy%26cs%3Dtinysrgb%26fit%3Dmax%26fm%3Djpg%26ixid%3DMXwxMTc3M3wwfDF8c2VhcmNofDN8fGhvYmJ5fGVufDB8fHw%26ixlib%3Drb-1.2.1%26q%3D80%26w%3D2000" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pdFujrCk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1493711662062-fa541adb3fc8%3Fcrop%3Dentropy%26cs%3Dtinysrgb%26fit%3Dmax%26fm%3Djpg%26ixid%3DMXwxMTc3M3wwfDF8c2VhcmNofDN8fGhvYmJ5fGVufDB8fHw%26ixlib%3Drb-1.2.1%26q%3D80%26w%3D2000" alt="5 tips to break up your workdays while working from home as a developer"&gt;&lt;/a&gt;Photo by &lt;a href="https://unsplash.com/@jeshoots?utm_source=ghost&amp;amp;utm_medium=referral&amp;amp;utm_campaign=api-credit"&gt;JESHOOTS.COM&lt;/a&gt; / &lt;a href="https://unsplash.com/?utm_source=ghost&amp;amp;utm_medium=referral&amp;amp;utm_campaign=api-credit"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I never knew that it would even improve my productivity by giving programming a rest. And what I also saw, is that it gives me a motivation boost. Certainly during these difficult times of Covid where we work from home and don't have a real break from the working environment.&lt;/p&gt;

&lt;p&gt;What also works for me is to create a plan of attack for the next week during the no-code day. A good schedule will be beneficial in the long run, because you can simply focus on executing the plan, instead of wasting your precious coding time figuring out what to do.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#take-breaks-like-you-would-at-the-office" class="anchor"&gt;
  &lt;/a&gt;
  Take breaks like you would at the office
&lt;/h3&gt;

&lt;p&gt;If you're used to working at the office, you probably take some breaks during the day and a pretty long lunch break. But when you have a pile of work waiting for you, you tend to take fewer breaks when you're sitting at home. I tend to do this as well.&lt;/p&gt;

&lt;p&gt;Things like eating during a video call to avoid "wasting time" or even skip breakfast, because you have a call at 9 AM and still have to finish your demo. I solved this problem by scheduling three breaks at certain hours. When you plan out your days in the week, you can easily see where breaks can fit in. These breaks will reduce your stress levels by a lot.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#create-a-separate-workspace" class="anchor"&gt;
  &lt;/a&gt;
  Create a separate workspace
&lt;/h3&gt;

&lt;p&gt;I know this is not always possible for everyone, but for those of you who can, make sure to separate your working environment from your private environments. I turned a bedroom into an office to be able to work from home and I only sit there while working. I never work from any of the other rooms.&lt;/p&gt;

&lt;p&gt;This helps me to set the mindset to relax once I get out of my office. Leaving the office finishes off the day and allows me to start doing something else. I choose to go for a run or a walk and start my evening.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#sleep" class="anchor"&gt;
  &lt;/a&gt;
  Sleep
&lt;/h3&gt;

&lt;p&gt;This is not a specific tip for working from home, but it's so important that I have to put it in here. You might be coding at night and it could carry you away. When I get in the zone, it could result in staying awake till 2 AM, and that's not good when you're waking up at 6 AM.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HnET6tMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1487300001871-12053913095d%3Fcrop%3Dentropy%26cs%3Dtinysrgb%26fit%3Dmax%26fm%3Djpg%26ixid%3DMXwxMTc3M3wwfDF8c2VhcmNofDV8fHNsZWVwfGVufDB8fHw%26ixlib%3Drb-1.2.1%26q%3D80%26w%3D2000" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HnET6tMB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://images.unsplash.com/photo-1487300001871-12053913095d%3Fcrop%3Dentropy%26cs%3Dtinysrgb%26fit%3Dmax%26fm%3Djpg%26ixid%3DMXwxMTc3M3wwfDF8c2VhcmNofDV8fHNsZWVwfGVufDB8fHw%26ixlib%3Drb-1.2.1%26q%3D80%26w%3D2000" alt="5 tips to break up your workdays while working from home as a developer"&gt;&lt;/a&gt;Photo by &lt;a href="https://unsplash.com/@allexx54?utm_source=ghost&amp;amp;utm_medium=referral&amp;amp;utm_campaign=api-credit"&gt;Alexander Possingham&lt;/a&gt; / &lt;a href="https://unsplash.com/?utm_source=ghost&amp;amp;utm_medium=referral&amp;amp;utm_campaign=api-credit"&gt;Unsplash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To make sure you sleep well, try and put away all devices 1 hour before going to bed. Maybe you could pick up a book and read some pages to finish off your workday.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#turn-off-your-notifications" class="anchor"&gt;
  &lt;/a&gt;
  Turn off your notifications
&lt;/h3&gt;

&lt;p&gt;I know the FOMO (Fear Of Missing Out) is very high. Certainly when you have an active and interesting Slack in your company. But try turning off your notifications for 1 day and check it 3 times a day. You will thank me later.&lt;/p&gt;

&lt;p&gt;This improved my productivity by at least 20% on the first day. I also figured out that checking my emails only 3 times a day has the same impact because mails are not that urgent. When the matter is urgent enough, they will just call you. That's why I check my emails at 7 AM, 11 AM and 4 PM.&lt;/p&gt;




&lt;p&gt;I tested out these tips over the last couple of months, and I must say it helped me a lot and I hope they can help you as well. If you want to read more on this topic, you should certainly check out my blog &lt;a href="https://www.joachimzeelmaekers.be/the-6-things-i-do-to-motivate-myself-every-single-day/"&gt;The 6 Things I Do to Motivate Myself Every Single Day&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>wfh</category>
      <category>productivity</category>
      <category>career</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Let’s Develop an E-Commerce Application From Scratch Using Java</title>
      <author>nilmadhab mondal</author>
      <pubDate>Sun, 10 Jan 2021 21:03:38 +0000</pubDate>
      <link>https://dev.to/nilmadhab/let-s-develop-an-e-commerce-application-from-scratch-using-java-g1d</link>
      <guid>https://dev.to/nilmadhab/let-s-develop-an-e-commerce-application-from-scratch-using-java-g1d</guid>
      <description>&lt;p&gt;&lt;strong&gt;We are going to build an e-commerce application using Java, Spring backend, build web UI in Vue.js, and mobile UI using android. Stay tuned!&lt;/strong&gt;&lt;br&gt;
&lt;a href="/api/collection/5948990638522368/5499519291097088/page/6412630948839424/image/4964528199041024" class="article-body-image-wrapper"&gt;&lt;img src="/api/collection/5948990638522368/5499519291097088/page/6412630948839424/image/4964528199041024" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Every E-Commerce platform needs users, so in the first tutorial, we are going to create and display user-profiles. We are going to first build the backend APIs using Java and Springboot, then we are going to create UI in Vue.js and android mobile app. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#live-demo" class="anchor"&gt;
  &lt;/a&gt;
  Live Demo
&lt;/h2&gt;

&lt;p&gt;You can test the API at the following swagger link. You can create and list all the users.&lt;/p&gt;

&lt;p&gt;&lt;a href="http://remotedevs.org:8080/api/swagger-ui.html"&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#about-spring-framework" class="anchor"&gt;
  &lt;/a&gt;
  About Spring Framework
&lt;/h2&gt;

&lt;p&gt;The Spring Framework is a major open-source Java/J2EE application development framework for more productive application development. It is the most popular Java framework with a 30% share of usage. The Spring Framework features enable efficient development from simple Web to complex enterprise applications.&lt;/p&gt;

&lt;p&gt;The main concepts that the Spring Framework depends on are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Dependency Injection (DI)&lt;/li&gt;
&lt;li&gt;Aspect-Oriented Programming (AOP)&lt;/li&gt;
&lt;li&gt;Java Persistence API (JPA)
## Prerequisites&lt;/li&gt;
&lt;li&gt;Knowledge in Core Java&lt;/li&gt;
&lt;li&gt;Coding skills&lt;/li&gt;
&lt;li&gt;Knowledge in Servlet and JSP&lt;/li&gt;
&lt;li&gt;Java Development Kit (JDK)&lt;/li&gt;
&lt;li&gt;IntelliJ IDEA Ultimate — open-source (recommended)&lt;/li&gt;
&lt;li&gt;MySQL database — You can get it here!&lt;/li&gt;
&lt;li&gt;A good browser (Chrome — recommended)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Make sure you have all the listed prerequisites software installed and have basic knowledge of the request-response cycle as well as web containers. What more? Let’s jump into the tutorial!&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#project-setup" class="anchor"&gt;
  &lt;/a&gt;
  Project Setup
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Open Spring Tool Suite application&lt;/li&gt;
&lt;li&gt;Click File -&amp;gt; New -&amp;gt; Project -&amp;gt;Spring Starter Project&lt;/li&gt;
&lt;li&gt;Give the essential data in the opened dialog box
## Dependencies
The dependencies I am adding to this project are given below. You can either add them during the creation of the project itself or later search for them in the Maven repository and add the tags of the required version in the pom.xml file.&lt;/li&gt;
&lt;li&gt;Spring boot starter web&lt;/li&gt;
&lt;li&gt;Tomcat embed jasper&lt;/li&gt;
&lt;li&gt;Spring boot starter Data JPA&lt;/li&gt;
&lt;li&gt;Mysql connector java&lt;/li&gt;
&lt;li&gt;Spring boot starter test&lt;/li&gt;
&lt;li&gt;Swagger 2&lt;/li&gt;
&lt;li&gt;Swagger UI
## Project Hierarchy
The hierarchy is the important thing to notice in the Spring boot Application design structure. My project hierarchy is as below.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="/api/collection/5948990638522368/5499519291097088/page/6412630948839424/image/5498746733854720" class="article-body-image-wrapper"&gt;&lt;img src="/api/collection/5948990638522368/5499519291097088/page/6412630948839424/image/5498746733854720" alt=""&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#overview-of-our-backend-application" class="anchor"&gt;
  &lt;/a&gt;
  Overview of our Backend Application
&lt;/h2&gt;

&lt;p&gt;In this Spring Application following are important packages that you have to know before starting.&lt;/p&gt;

&lt;p&gt;This is the spring architecture. The outside world calls the REST Apis, which interacts with the Service. Service calls the repository. The repository interacts with the database. We follow this pattern to make the codebase maintainable, instead of having spaghetti code which can be a nightmare in long term.&lt;a href="/api/collection/5948990638522368/5499519291097088/page/6412630948839424/image/4565464181637120" class="article-body-image-wrapper"&gt;&lt;img src="/api/collection/5948990638522368/5499519291097088/page/6412630948839424/image/4565464181637120" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's look at first Rest controllers&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#controller" class="anchor"&gt;
  &lt;/a&gt;
  Controller
&lt;/h2&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.webtutsplus.ecommerce.controller;

import java.util.List;

import javax.validation.Valid;

import com.webtutsplus.ecommerce.model.UserProfile;
import com.webtutsplus.ecommerce.service.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.webtutsplus.ecommerce.common.ApiResponse;

@RestController
@RequestMapping("/user")
public class    UserController {

    @Autowired private UserService userService;

    @GetMapping("/")
    public ResponseEntity&amp;lt;List&amp;lt;UserProfile&amp;gt;&amp;gt; getUsers() {
        List&amp;lt;UserProfile&amp;gt; dtos = userService.listProfiles();
        return new ResponseEntity&amp;lt;List&amp;lt;UserProfile&amp;gt;&amp;gt;(dtos, HttpStatus.OK);
    }

    @PostMapping("/add")
    public ResponseEntity&amp;lt;ApiResponse&amp;gt; addSurvey(@RequestBody @Valid UserProfile profile) {
        userService.addProfile(profile);
        return new ResponseEntity&amp;lt;&amp;gt;(new ApiResponse(true, "Profile has been created."), HttpStatus.CREATED);
    }   
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;The User Controller class provides two HTTP methods GET and Post. The Get mapping function return a complete list of Users and the Post Mapping Function saves the new user profile in the Database.&lt;/p&gt;

&lt;p&gt;As we can see UserControllers has a reference to UserService.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#service" class="anchor"&gt;
  &lt;/a&gt;
  Service
&lt;/h2&gt;

&lt;p&gt;As we know the spring boot framework follows the POJO model and every controller has its own service interface, which provides the methods / Operation that is performed in the application.&lt;/p&gt;

&lt;p&gt;In service class, there are only two methods list Profiles and add Profiles, which provide information. We can extend or add more functionality in the future according to requirements.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.webtutsplus.ecommerce.service;

import java.util.List;

import com.webtutsplus.ecommerce.model.UserProfile;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.webtutsplus.ecommerce.repository.UserProfileRepository;

@Service
public class UserService {

    @Autowired private UserProfileRepository userRepo;


    public void addProfile(UserProfile userProfile) {
        userRepo.save(userProfile);
    }

    public List&amp;lt;UserProfile&amp;gt; listProfiles(){
        return userRepo.findAll();      
    }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Service calls UserProfileRepository which interacts with the database in form of models. Let's have a look at UserModel.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#model" class="anchor"&gt;
  &lt;/a&gt;
  Model
&lt;/h2&gt;

&lt;p&gt;The model class is a mirror of the user_profile table in the database in form of a java object. All attributes can be accessed through this class. You can also update the attribute values using the model class, which also makes changes in a database table.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.webtutsplus.ecommerce.model;


import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;


@Entity
@Table(name="user_profile")
public class UserProfile {

    private long id;
    private String username;
    private String email;
    private String firstName;
    private String lastName;

    public UserProfile() {}

    public UserProfile(long id, String username, String email, String firstName, String lastName) {
        super();
        this.id = id;
        this.username = username;
        this.email = email;
        this.firstName = firstName;
        this.lastName = lastName;
    }

    @Id 
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    public long getId() {
        return id;
    }
    public void setId(long id) {
        this.id = id;
    }
    public String getUsername() {
        return username;
    }
    public void setUsername(String username) {
        this.username = username;
    }
    public String getEmail() {
        return email;
    }
    public void setEmail(String email) {
        this.email = email;
    }
    public String getFirstName() {
        return firstName;
    }
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }
    public String getLastName() {
        return lastName;
    }
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#result" class="anchor"&gt;
  &lt;/a&gt;
  Result
&lt;/h2&gt;

&lt;p&gt;After this save the file and run the application. Now you tomcat is listening on 8182 port.&lt;/p&gt;

&lt;p&gt;[Link] 138.68.64.95:8080/api/swagger-ui.html#/user-controller&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-swagger" class="anchor"&gt;
  &lt;/a&gt;
  What is Swagger
&lt;/h2&gt;

&lt;p&gt;Swagger is an Interface Description Language for describing RESTful APIs expressed using JSON. Swagger is used together with a set of open-source software tools to design, build, document, and use RESTful web services. Swagger includes automated documentation, code generation, and test-case generation.&lt;/p&gt;

&lt;p&gt;You can access the application documentation by entering the following URL in your browser.&lt;br&gt;
&lt;a href="/api/collection/5948990638522368/5499519291097088/page/6412630948839424/image/5382097586356224" class="article-body-image-wrapper"&gt;&lt;img src="/api/collection/5948990638522368/5499519291097088/page/6412630948839424/image/5382097586356224" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can edit your API information in documentation.swaggerConfig.java class and getApiInfo() method.&lt;/p&gt;

&lt;p&gt;Swagger is very useful on the developer side because it provides very user-friendly API information as well as provide a way to test the API.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    private ApiInfo getApiInfo() {
        Contact contact = new Contact("webtutsplus", "http://webtutsplus.com", "contact.webtutsplus@gmail.com");
        return new ApiInfoBuilder()
                .title("User Profile API")
                .description("Documentation User profile api")
                .version("1.0.0")
                .license("Apache 2.0")
                .licenseUrl("http://www.apache.org/licenses/LICENSE-2.0")
                .contact(contact)
                .build();
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now we are going to look at some extra classes, which play an important role too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#common" class="anchor"&gt;
  &lt;/a&gt;
  common
&lt;/h2&gt;

&lt;p&gt;In this package, there are two classes&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;· ApiResponse.java&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.webtutsplus.ecommerce.common;

import java.time.LocalDateTime;

public class ApiResponse {
    private final boolean success;
    private final String message;

    public ApiResponse(boolean success, String message) {
        this.success = success;
        this.message = message;
    }

    public boolean isSuccess() {
        return success;
    }

    public String getMessage() {
        return message;
    }

    public String getTimestamp() {
        return LocalDateTime.now().toString();
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This class provides the status of API response. It has three methods is Success (), get Message (), get Timestamp (). The get Timestamp () method returns the Current Date and Time in String format.&lt;br&gt;
&lt;strong&gt;PagedList.java&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.webtutsplus.ecommerce.common;

import java.util.List;

public class PagedList&amp;lt;T&amp;gt; {
    private int totalPages;
    private long totalElements;
    private boolean hasNext;
    private boolean hasPrevious;

    private List&amp;lt;T&amp;gt; data;

    public int getTotalPages() {
        return totalPages;
    }
    public void setTotalPages(int totalPages) {
        this.totalPages = totalPages;
    }
    public long getTotalElements() {
        return totalElements;
    }
    public void setTotalElements(long totalElements) {
        this.totalElements = totalElements;
    }
    public boolean isHasNext() {
        return hasNext;
    }
    public void setHasNext(boolean hasNext) {
        this.hasNext = hasNext;
    }
    public boolean isHasPrevious() {
        return hasPrevious;
    }
    public void setHasPrevious(boolean hasPrevious) {
        this.hasPrevious = hasPrevious;
    }

    public List&amp;lt;T&amp;gt; getData() {
        return data;
    }
    public void setData(List&amp;lt;T&amp;gt; data) {
        this.data = data;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This class contains all the information about the pages in the List data structure and provides total Pages, total Elements, has Next, has Previous attributes getter and setter.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#config" class="anchor"&gt;
  &lt;/a&gt;
  Config
&lt;/h2&gt;

&lt;p&gt;In these packages, there are two sub-packages named documentation and security.&lt;/p&gt;

&lt;p&gt;· Documentation&lt;/p&gt;

&lt;p&gt;In this Package, it provides information about the product and API.&lt;/p&gt;

&lt;p&gt;Product API method provides information about the product and gets the Api Info method return information about Api like contact, Title, version, license.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.webtutsplus.ecommerce.config.documentation;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import springfox.documentation.builders.ApiInfoBuilder;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.service.Contact;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

@Configuration
@EnableSwagger2
public class SwaggerConfig {
    @Bean
    public Docket productApi() {
        return new Docket(DocumentationType.SWAGGER_2)
                .apiInfo(getApiInfo())
                .select()
                .apis(RequestHandlerSelectors.basePackage("com.webtutsplus.ecommerce"))
                .paths(PathSelectors.any())
                .build();
    }

    private ApiInfo getApiInfo() {
        Contact contact = new Contact("Umar Draz", "-", "umar.umar82@gmail.com");
        return new ApiInfoBuilder()
                .title("User Profile API")
                .description("Documentation User profile api")
                .version("1.0.0")
                .license("Apache 2.0")
                .licenseUrl("http://www.apache.org/licenses/LICENSE-2.0")
                .contact(contact)
                .build();
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#security" class="anchor"&gt;
  &lt;/a&gt;
  Security
&lt;/h2&gt;

&lt;p&gt;This class is very important for applications because it provides the basic security for the whole application over HTTP or HTTPS protocol. It also implements configuration for users that which users have access to which pages or repositories.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.webtutsplus.ecommerce.config.security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;

@Configuration
public class SecurityConfig extends WebSecurityConfigurerAdapter
{
    @Override
    protected void configure(HttpSecurity http) throws Exception 
    {
        http
         .csrf().disable()
         .authorizeRequests().anyRequest().authenticated()
         .and()
         .httpBasic();
    }

    @Autowired
    public void configureGlobal(AuthenticationManagerBuilder auth) 
            throws Exception 
    {
        auth.inMemoryAuthentication()
            .withUser("admin")
            .password("admin")
            .roles("USER");
    }

    @Override
    public void configure(WebSecurity registry) throws Exception {
        registry.ignoring()
        .antMatchers("/docs/**").antMatchers("/actuator/**").antMatchers("/v2/api-docs", "/configuration/ui",
                "/swagger-resources/**", "/configuration/security", "/swagger-ui.html", "/webjars/**");
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#exception" class="anchor"&gt;
  &lt;/a&gt;
  Exception
&lt;/h2&gt;

&lt;p&gt;This class is used in case of exception in any stage of the application. It has two classes Exception handler and validation exception, which throws when there is a validation error in the application at run time.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ExceptionHandlerAdvice.java&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.webtutsplus.ecommerce.exception;

import com.webtutsplus.ecommerce.common.ApiResponse;
import org.springframework.core.NestedExceptionUtils;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.method.annotation.MethodArgumentTypeMismatchException;


@ControllerAdvice
public class ExceptionHandlerAdvice {

    @ExceptionHandler(DataIntegrityViolationException.class)
    public ResponseEntity&amp;lt;ApiResponse&amp;gt; conflict(DataIntegrityViolationException ex){
        String message = getMostSpecificMessage(ex);

        return new ResponseEntity&amp;lt;ApiResponse&amp;gt;(new ApiResponse(false, message), HttpStatus.CONFLICT);
    }

//  @ExceptionHandler(AccessDeniedException.class)
//  public ResponseEntity&amp;lt;ApiResponse&amp;gt; accessDenied(AccessDeniedException ex){
//      String message = ex.getMessage();
//      
//      return new ResponseEntity&amp;lt;ApiResponse&amp;gt;(new ApiResponse(false, message), HttpStatus.FORBIDDEN);
//  }

    @ExceptionHandler(ValidationException.class)
    public ResponseEntity&amp;lt;ApiResponse&amp;gt; validationException(ValidationException ex){
        String message = ex.getMessage();

        return new ResponseEntity&amp;lt;ApiResponse&amp;gt;(new ApiResponse(false, message), HttpStatus.UNPROCESSABLE_ENTITY);
    }

    @ExceptionHandler(MethodArgumentTypeMismatchException.class)
    public ResponseEntity&amp;lt;ApiResponse&amp;gt; methodArgumentTypeMismatchException(MethodArgumentTypeMismatchException ex){
        ex.printStackTrace();

        String message = ex.getMessage();
        return new ResponseEntity&amp;lt;ApiResponse&amp;gt;(new ApiResponse(false, message), HttpStatus.INTERNAL_SERVER_ERROR);
    }

    @ExceptionHandler(Exception.class)
    public ResponseEntity&amp;lt;ApiResponse&amp;gt; unhandledExceptions(Exception ex){
        String message = NestedExceptionUtils.getMostSpecificCause(ex).getMessage();

        ex.printStackTrace();

        return new ResponseEntity&amp;lt;ApiResponse&amp;gt;(new ApiResponse(false, message), HttpStatus.INTERNAL_SERVER_ERROR);
    }

    private String getMostSpecificMessage(DataIntegrityViolationException ex) {
        String message = NestedExceptionUtils.getMostSpecificCause(ex).getMessage();

        if(message.contains("Detail:")) {
            message = message.substring(message.indexOf("Detail:")+"Detail:".length());
        }

        return message;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;ValidationException.java&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;package com.webtutsplus.ecommerce.exception;

public class ValidationException extends RuntimeException{
    private static final long serialVersionUID = 6064663768170825752L;

    public ValidationException(String message) {
        super(message);
    }

    public ValidationException(String message, Throwable cause) {
        super(message, cause);
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Hope you had a great session with us! Follow us for such great and awesome tutorials!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Follow the next tutorial where we will build UI in both Vue.js and Android.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>java</category>
    </item>
    <item>
      <title>On Death and Dying: Ruby on Rails </title>
      <author>Arthur Remy</author>
      <pubDate>Sun, 10 Jan 2021 20:48:41 +0000</pubDate>
      <link>https://dev.to/remy29/on-death-and-dying-ruby-on-rails-5d7f</link>
      <guid>https://dev.to/remy29/on-death-and-dying-ruby-on-rails-5d7f</guid>
      <description>&lt;p&gt;Is Ruby on Rails a “dead” framework? &lt;/p&gt;

&lt;p&gt;Perhaps a good place to start would be with a statement from the creator of Rails, David Heinemeier Hansson when asked about a blog post discussing the topic: “Cools! I don’t really care much to respond to trolling nonsense like "Rails is dead". It’s not worth the dignity of a response, given its obvious fallacy. But thanks for trying anyway 😄”. &lt;/p&gt;

&lt;p&gt;There is a clear emotion shining through Hansson’s words: the irritation of someone who has had to answer the same damn question too many damn times. What is inferable from how he phrases his response is that he thinks it’s a topic not really even worth broaching, that the topic of “Rails being dead” is on the level of a bad internet meme, and that the people who promulgate it are mere trolls. &lt;/p&gt;

&lt;p&gt;Somehow, though, this question just won’t stop popping up. Hiding somewhere in each conversation about the well-worn framework is the inevitable interjection of some variation of: “&lt;em&gt;yeah, but isn’t Rails dying though?&lt;/em&gt;”. Let’s take a dive into some opinions on both sides of the matter, take into account some facts, and see if we can glean some insight on the oft-asked question. Let’s find out if this truly is just a bad internet meme pushed by think-pieces trying to be ahead of the curve, or if there is in fact some validity to the concern.&lt;/p&gt;

&lt;p&gt;If you’re anything like me, you’re fairly new to your career in development. Some relatively important choices have to be made early on. One has to decide what tech to specialize in. Picking languages, frameworks, libraries, etc, to dedicate yourself to isn’t a choice you should make lightly, therefore when news spreads that “Ruby on Rails is Dead!” it can make you seriously second-guess placing your bet on that horse. For this reason, I want to explore the topic from the perspective of a newcomer just deciding what technologies will best suit them and their career. Without any pre-existing biases, preferences, or notions of best practice; without any pre-existing investment in the Ruby on Rails ecosystem as a new developer, is it a good choice? &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-diagrams" class="anchor"&gt;
  &lt;/a&gt;
  Some Diagrams
&lt;/h2&gt;

&lt;p&gt;Let's start by having a look at some factual data. The first question is what exactly constitutes a dead framework? Rail’s naysayers will often point out a slow down in the creation of new Rubygems as proof, however, this argument has some problems, mainly that Ruby is a mature ecosystem. It's only natural that the creation of new tools would mostly slow down when most contemporary problems web developers needed to be addressed with that framework are taken care of. When you finish moving into a house do you keep buying new furniture? Of course not, you sit on the couch you have and replace it when it's relevant. &lt;/p&gt;

&lt;p&gt;Perhaps a better metric is user engagement. User engagement tells us a lot, it tells us new developers are spending time asking questions and learning the framework, it tells us experienced developers are discussing advanced topics and techniques, it tells us that in general people are being educated on RoR. Perhaps most importantly it tells us that developers find it worthwhile investing their time in the framework. Let's have a look at the following two charts: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s7kcIOAD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/n6e08tzxirue7tnwnx2y.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s7kcIOAD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/n6e08tzxirue7tnwnx2y.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--SPiuX3lJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/twyv6kmfmnbv0mfoj417.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SPiuX3lJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/twyv6kmfmnbv0mfoj417.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first addresses the issue head-on, it surveys working developers to find out their opinion on the matter. This still falls within the realm of opinion, but that opinion seems to be resoundingly clear: yes RoR is still relevant in 2020. The second chart I find a little more interesting, it cross-references the number of projects and questions on Github and Stackoverflow arguably the 2 largest platforms for all things code. While it’s true that Ruby by no means the top dog, it certainly hangs out with them. While this chart might indicate the overall popularity of Ruby as a language more than Rails as a framework, it's a fairly safe assumption that most of those Ruby-related queries are also related to Rails. So the answer to the question “are users engaged” is a big fat resounding yes.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-dark-side" class="anchor"&gt;
  &lt;/a&gt;
  The Dark Side
&lt;/h2&gt;

&lt;p&gt;All this aside, Rails or even Ruby being dead isn’t exactly an obscure opinion, what gives? I think the answer is fairly simple. Back in 2008 Twitter (and some other major players at the time) made public that they were moving off of Rails and moving to Scala because of Rail’s supposedly poor scaling. This sparked the debate on the future of the framework which has continued to rage for the last 12 years! This begs the question “&lt;em&gt;if RoR was dead/dying, wouldn’t it be dead by now?&lt;/em&gt;”.  Well, &lt;em&gt;yes&lt;/em&gt;, I think it would be. Moreover, the argument that it's dying because one major platform doesn’t use it anymore is missing the forest for the trees. &lt;strong&gt;Basecamp, Github, Shopify, Airbnb, Hulu, Zendesk&lt;/strong&gt;, not even to mention &lt;strong&gt;Netflix&lt;/strong&gt;, there are some of the names of major players still relying on Rails. If all these companies began to jump ship I would certainly be looking for the exit, but that is simply not the case. &lt;/p&gt;

&lt;p&gt;The idea that Ruby on Rails simply doesn’t scale is hotly contested, and while the detractors may take this as a fact, once again it is the stuff of debate and opinion. While there are some strong arguments to be made that on a giant scale this might actually be true, there's plenty of people on the other side of the aisle countering that idea. Take this tweet from Shopify’s Lawrence Mandel as evidence: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--24EFfaB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lqm1obgzeltuepbfoq1c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--24EFfaB6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lqm1obgzeltuepbfoq1c.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perhaps one of the most foreboding signs for RoR however is that it's not as popular with startups as it used to be. Its reputation for being “on the way out” coupled with the prospects of future scaling issues keep newcomers away. This is likely the single biggest challenge for the future of the framework, which is a shame. People are always eager to move on to the next hot thing without taking into account the benefits of the more mature ecosystem offered by RoR. Tech is all about the “bleeding edge”, but this could be a mistake in this scenario. Unfortunately, though, only time will tell if RoR’s reputation as the oldhead’s framework of choice will have a meaningful impact on its longevity. I think it's somewhat fair to say that the biggest issue RoR is suffering from is its own reputation. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-bottom-line" class="anchor"&gt;
  &lt;/a&gt;
  The Bottom Line
&lt;/h2&gt;

&lt;p&gt;So, where does that leave new devs like me? My bottom line is this: it's an absolutely great time to be getting into Ruby on Rails. It is a mature ecosystem, with more resources than you could hope for, experienced devs to help you along the way, gems letting you implement almost any feature you would want, and a robust reputation for having a deep culture of code quality. It's an opinionated framework eliminating a lot of the guesswork for newcomers and is overall a joy to use. Perhaps most importantly, there is an abundance of high-paying jobs looking for Rails devs on the market. &lt;br&gt;
The people of the internet in my view have made the mistake of confusing maturity for declining, and while it's certainly not the new kid on the block, it's a worthwhile investment of time for any new dev. “Ruby on Rails is Dead!”  is the stuff of bad internet rumors, and opportunistic think pieces trying to seem ahead of the curve. While it’s certainly possible, and even likely that you won’t spend your entire career over the next 20-30 years working with Ruby on Rails, the question was never is it here forever but is it dying today? The answer: absolutely not. &lt;/p&gt;

&lt;p&gt;Sources: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.tivix.com/blog/is-ruby-on-rails-dead"&gt;https://www.tivix.com/blog/is-ruby-on-rails-dead&lt;/a&gt;&lt;br&gt;
&lt;a href="https://naturaily.com/blog/who-gives-f-about-rails"&gt;https://naturaily.com/blog/who-gives-f-about-rails&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.ideamotive.co/blog/state-of-ruby-on-rails-web-development#:%7E:text=Despite%20almost%2016%20years%20since,widely%20used%20among%20professional%20developers"&gt;https://www.ideamotive.co/blog/state-of-ruby-on-rails-web-development#:~:text=Despite%20almost%2016%20years%20since,widely%20used%20among%20professional%20developers&lt;/a&gt;.&lt;br&gt;
&lt;a href="https://blog.topolyan.com/is-ruby-on-rails-dead-some-real-numbers/"&gt;https://blog.topolyan.com/is-ruby-on-rails-dead-some-real-numbers/&lt;/a&gt;&lt;br&gt;
&lt;a href="https://devbrett.com/2019/03/why-i-believe-rails-is-still-relevant-in-2019.html"&gt;https://devbrett.com/2019/03/why-i-believe-rails-is-still-relevant-in-2019.html&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.monterail.com/blog/why-ruby-on-rails-development-2020"&gt;https://www.monterail.com/blog/why-ruby-on-rails-development-2020&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>bootcamp</category>
      <category>webdev</category>
    </item>
    <item>
      <title>How I launched a 5-figure business while working as a full-time software dev. And how you can do the same</title>
      <author>Aleksandr Bezhan</author>
      <pubDate>Sun, 10 Jan 2021 20:44:40 +0000</pubDate>
      <link>https://dev.to/oleksandrbezhan/how-i-launched-a-5-figure-business-while-working-as-a-full-time-software-dev-and-how-you-can-do-the-same-290b</link>
      <guid>https://dev.to/oleksandrbezhan/how-i-launched-a-5-figure-business-while-working-as-a-full-time-software-dev-and-how-you-can-do-the-same-290b</guid>
      <description>&lt;p&gt;As a software developer, I’ve been dreaming about having my own “passive income” for years. I was fascinated by this idea of money coming to my bank account while I sleep. This post will tell you my story of how I started my first business while working full-time. And why you can do it too.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#decided-to-find-a-cofounder" class="anchor"&gt;
  &lt;/a&gt;
  Decided to find a co-founder
&lt;/h2&gt;

&lt;p&gt;I tried to build a side hustle many times and failed miserably. Then I decided — okay, if I can’t make it on my own, I need to find another crazy guy and partner up with him, and maybe then we can achieve something.&lt;/p&gt;

&lt;p&gt;I figured that I needed to visit places where other founders go and meet them. And since I’m quite an introvert, I decided that going to webinars is good enough.&lt;/p&gt;

&lt;p&gt;I went on a webinar where a speaker talked about this super-duper cool system for launching startups that he had developed. I didn’t listen to this sh*t. Instead, I just wrote in a chat that I was looking for a co-founder.&lt;/p&gt;

&lt;p&gt;This way, I found one guy who responded in the chat room. We had a short call, and the next day we met in a cafe, talked for a bit, and decided to try and build something together.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dedicate-2-hours-every-day-no-matter-what" class="anchor"&gt;
  &lt;/a&gt;
  Dedicate 2 hours every day. No matter what.
&lt;/h2&gt;

&lt;p&gt;We both worked full-time as software developers and decided to dedicate 2 hours every day to work on our project remotely over Zoom. We didn’t have an idea for a project yet. But we committed 2 hours, no matter what, to try and do something, anything that would bring us closer to our financial independence.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Now I realize that I was fortunate to find a great business partner from the very beginning, in hindsight.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I heard a lot of bad stories about finding co-founders. But yeah, take it for what it is. You can try and find someone or just do it yourself. At the end of the day, it’s your decision and your life. I’m just telling my story.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#hiring-a-guy-to-help-us-get-started" class="anchor"&gt;
  &lt;/a&gt;
  Hiring a guy to help us get started.
&lt;/h2&gt;

&lt;p&gt;From the beginning, we were struggling a lot. Then we decided — f*ck it, let’s hire a mentor. We decided to go back to the webinar guy and hire him. He sold us some video lessons where he explained how to pick an idea. And here is how…&lt;/p&gt;

&lt;p&gt;We listed a bunch of things that we were experts at. Then we chose one that had the best chance of success and customers with money. It was Amazon FBA. My partner is an expert on that. He sells some stuff on Amazon, not overly successful, but enough to know all the business’s ins and outs.&lt;/p&gt;

&lt;p&gt;The “mentor” sold us this Google spreadsheet called &lt;strong&gt;“Launch System”&lt;/strong&gt; that we used to launch our first business. It’s real simple, but it worked for us. Here is how it looks:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s----cLs39P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4888/0%2AXPuaJE3udxohYi8b.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s----cLs39P--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/4888/0%2AXPuaJE3udxohYi8b.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next, we listed 3–4 problems that we saw that the Amazon sellers experienced regularly. We then went on Facebook groups with Amazon sellers and started private messaging people. We sent Message 1(M1), then M2, M3, and so on.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Message 1(M1) — figuring out problems that a potential client has&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;M2 — what issues are the most urgent and painful?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;M3 — would you use our service that fixes this problem precisely?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;M4 — asking for an email&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;M5 — offering the service and asking for money&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We were sending 30 messages a day. After messaging over 100 people, we got bored and hired a student VA to do it for us.&lt;/p&gt;

&lt;p&gt;After 3 weeks, we have messaged about 650 people, and we picked a problem with the most demand among Amazon sellers. And I’m going to tell you exactly what the problem was.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-solved-this-problem-precisely" class="anchor"&gt;
  &lt;/a&gt;
  We solved this problem precisely…
&lt;/h2&gt;

&lt;p&gt;The problem was getting reviews on Amazon FBA products. Reviews are a crucial factor in ranking your products on Amazon. So every seller needs them.&lt;/p&gt;

&lt;p&gt;We decided to build a solution that could bring reviews to sellers in a more or less ethical and ‘white’ method. I cannot tell you exactly what solution we built. It was a combination of manual and automated work involving Facebook ads and driving traffic to Amazon pages, selling the product, and converting it to review after some time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-we-launched-and-the-hardest-part-of-business" class="anchor"&gt;
  &lt;/a&gt;
  How we launched and the hardest part of business
&lt;/h2&gt;

&lt;p&gt;After having built this ‘system’ and testing it on my partner’s Amazon product, we decided that we were ready to launch. We sent out a message offering a life-time -30% deal to our launch list, and some people agreed to test our service and became our first customers.&lt;/p&gt;

&lt;p&gt;The hardest part was coming next. We were continually measuring and adjusting our system until it started producing more or less stable results. It was really hard. Here I learned that business is a slow and tedious cycle of doing, measuring how it went, and improving so that it will be better the next time it will be better.&lt;/p&gt;

&lt;p&gt;If you skipped the previous paragraph, I will repeat it. I want you to internalize it:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Business is a slow and boring cycle of doing, then measuring how it went, and improving so that it will be better the next time.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#hiring-a-coochief-operating-officer" class="anchor"&gt;
  &lt;/a&gt;
  Hiring a COO(Chief Operating Officer)
&lt;/h2&gt;

&lt;p&gt;After getting to a more or less stable process, we learned that we were not good at building a stable, repeatable business. It was working okay, but we knew it could work better.&lt;/p&gt;

&lt;p&gt;So we hired a guy who eventually became our COO. He was working as a sales rep at the time, and we knew him for 2 years before that, so we could trust him. He agreed to quit his job, and started running our business full-time. We paid him in equity.&lt;/p&gt;

&lt;p&gt;And stopped spending our time and switched to strategic planning instead.&lt;/p&gt;

&lt;p&gt;Fast forward 2.5 years and the business grew 300% and is bringing a stable 5 figure annual revenue. Yes, not millions, but hey, I personally don’t do anything on it. I just show up once a week for a 1–2 hour strategic planning meeting, and that’s all. And this is the model I am using when building new businesses.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Takeaways:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Everybody can build a business while working full-time.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Find a co-founder.&lt;/strong&gt; Go where startup people hang out(webinars, slack, etc.) and tell everybody that you are looking for a co-founder. Check if you share similar views on the world.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pick a niche where you or your co-founder are an expert.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Ask people in your niche what problems they have.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**Block at least 2 hours every day no matter what and work on your business. **Be patient, don’t rush. It’s a long-term game. Quick money is only on info-products sales pages.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Build a list of potential customers and solve a problem that has the most demand.&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;**Find all the hiccups and glitches in your business and fix them one by one. **If you are not good at it — hire someone to do it. You can pay in equity.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Want to hear more from me? You can &lt;strong&gt;&lt;a href="https://twitter.com/AlexBezhan"&gt;follow me on Twitter&lt;/a&gt;&lt;/strong&gt; as I will continue my journey to financial independence and self-improvement.&lt;/p&gt;

&lt;p&gt;PS: If you liked this post, give it some hearts for good luck :)&lt;/p&gt;

</description>
      <category>sideprojects</category>
      <category>startup</category>
      <category>financialfreedom</category>
      <category>programmer</category>
    </item>
    <item>
      <title>Web apps are too complex. This is how we can simplify them.</title>
      <author>Michał Pietraszko</author>
      <pubDate>Sun, 10 Jan 2021 19:54:32 +0000</pubDate>
      <link>https://dev.to/pietmichal/web-apps-are-too-complex-this-is-how-we-can-simplify-them-3ala</link>
      <guid>https://dev.to/pietmichal/web-apps-are-too-complex-this-is-how-we-can-simplify-them-3ala</guid>
      <description>&lt;p&gt;I believe that we can do a better job of managing the complexity of our apps.&lt;/p&gt;

&lt;p&gt;Not many of us realize how many second-order effects our decisions have caused.&lt;/p&gt;

&lt;p&gt;Let's see how complexity had grown over time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-static-era" class="anchor"&gt;
  &lt;/a&gt;
  The Static era
&lt;/h2&gt;

&lt;p&gt;Simple times. We had a MySQL database, business logic and HTML + CSS views.&lt;/p&gt;

&lt;p&gt;All content was static, the browser's job was to display content, navigate and submit forms.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mnG-kqAJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6i0fx778jj4u69x2kkmc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mnG-kqAJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6i0fx778jj4u69x2kkmc.png" alt="Simple web app architecture diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I like to think about test effort as a benchmark for simplicity. There were 3 layers.&lt;/p&gt;

&lt;p&gt;Business logic and persistence layer can be easily integrated and view layer can be browser tested.&lt;/p&gt;

&lt;p&gt;You may need a tester, developer, and a designer to maintain something like this. It is realistic to have one person responsible for all of this.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-ajax-era" class="anchor"&gt;
  &lt;/a&gt;
  The AJAX era
&lt;/h2&gt;

&lt;p&gt;JavaScript opened a door for more considerations in user experience. Adding a dynamic menu, forms, or calendar to a WordPress website was the coolest thing you could do.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yZQXpW1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pbp4dpy1b2jicgd2rqoy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yZQXpW1j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/pbp4dpy1b2jicgd2rqoy.png" alt="web app with javascript architecture diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have a complexity spike on the client-side.&lt;/p&gt;

&lt;p&gt;Many browsers differed in JS implementation, which required jQuery to come into existence.&lt;/p&gt;

&lt;p&gt;This gave a lot of power to designers and has moved more engineering effort into the front end. JavaScript made the browser extensible.&lt;/p&gt;

&lt;p&gt;Did the testing complexity increase? Yes. Each new JavaScript bit could only be tested in a browser.&lt;/p&gt;

&lt;p&gt;This requires testing, backend programming, JavaScript, and design expertise in your team. Jumping between server-side and client-side languages became frustrating. There was a trend to have different people responsible for each side.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-singlepage-era" class="anchor"&gt;
  &lt;/a&gt;
  The Single-page era
&lt;/h2&gt;

&lt;p&gt;Remember the first example of the Angular.js app? The input field that automatically updated the content of the div? Good times.&lt;/p&gt;

&lt;p&gt;Welcome to the single-page era where front-end development became even more complex than back-end development - mostly due to relevant logic moving to the client. As a result, the divide has increased and &lt;a href="https://medium.com/@ericclemmons/javascript-fatigue-48d4011b6fc4"&gt;JavaScript fatigue&lt;/a&gt; became a thing.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ErPi5OPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3k6calmaslod3oub31cv.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ErPi5OPG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/3k6calmaslod3oub31cv.png" alt="single-page application architecture diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We have ended up with two apps that are tightly coupled.&lt;/p&gt;

&lt;p&gt;To maintain this, you need at least someone experienced in testing, backend, frontend development (extensive framework, tooling, and browser knowledge), and design.&lt;/p&gt;

&lt;p&gt;Now, two apps have to be maintained, and there is much more code than ever. You have to maintain unit, integration, and end to end tests on both sides. Now business logic is not directly accessible due to security concerns.&lt;br&gt;
Frontend and backend now have to maintain layers that are responsible for communication.&lt;/p&gt;

&lt;p&gt;Client code needs lots of API mocks to be tested on lower levels - DOM tests are resource-heavy.&lt;/p&gt;

&lt;p&gt;Orchestration becomes difficult because you have to make sure that deployments are synchronized. It is even more difficult if you have separate teams for the backend and frontend.&lt;/p&gt;

&lt;p&gt;Don't forget about browser testing that also can have a lot of overlap with client-side integration tests. Even more, things to consider in terms of complexity and trade-offs.&lt;/p&gt;

&lt;p&gt;That resulted in more code, which contributed to - again - increased complexity.&lt;/p&gt;

&lt;p&gt;SEO became problematic, but thankfully this problem has been addressed by the ecosystem through &lt;a href="https://reactjs.org/docs/react-dom-server.html"&gt;server-side rendering&lt;/a&gt; and &lt;a href="https://reactjs.org/docs/react-dom.html#hydrate"&gt;hydration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Good patterns have emerged too. UX became better and more creative. We are finally capable of defining client-side logic in a manageable and scalable way.&lt;/p&gt;

&lt;p&gt;We all know now that we want to have components and avoid excessive side effects, together with uncontrollable state mutation.&lt;/p&gt;

&lt;p&gt;React de facto became a standard.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#simplicity-renaissance" class="anchor"&gt;
  &lt;/a&gt;
  Simplicity renaissance
&lt;/h2&gt;

&lt;p&gt;The remedy to complexity is embracing the coupling and making the developer experience unified.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Cf5hhcY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lx5amiq9j45ai42q23gn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Cf5hhcY1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/lx5amiq9j45ai42q23gn.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#simplicity-through-innovation-in-older-frameworks" class="anchor"&gt;
  &lt;/a&gt;
  Simplicity through innovation in older frameworks.
&lt;/h3&gt;

&lt;p&gt;Ruby on Rails and Laravel are relevant.&lt;/p&gt;

&lt;p&gt;Consider them. Their maturity will allow you to move very fast.&lt;/p&gt;

&lt;p&gt;They have recently innovated in many interesting ways.&lt;/p&gt;

&lt;p&gt;Take a look at &lt;a href="https://laravel.com/docs/8.x/blade#components"&gt;Laravel's components&lt;/a&gt; or RoR's &lt;a href="https://hotwire.dev/"&gt;Hotwire&lt;/a&gt;!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#next-generation-of-javascript-frameworks" class="anchor"&gt;
  &lt;/a&gt;
  Next generation of JavaScript frameworks
&lt;/h3&gt;

&lt;p&gt;People who want to stay in JavaScript land should consider the following.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; started a good trend by putting React and server logic next to each other.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://blitzjs.com/"&gt;Blitz.js&lt;/a&gt;, which is based on Next, is a good ruby on rails equivalent. It brings the right amount of abstraction that makes you treat your app as a unified whole. Using it sometimes feels like cheating - in a good way. It inspired me to talk about the complexity issue in our ecosystem.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://remix.run/"&gt;Remix&lt;/a&gt; with a fresh take on the problem domain and bringing a lot of good and forgotten patterns.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reacts-server-components-to-make-everything-even-better" class="anchor"&gt;
  &lt;/a&gt;
  React's Server Components to make everything even better.
&lt;/h3&gt;

&lt;p&gt;Recently, the React team has presented a new idea that can make our component-driven world better.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/blog/2020/12/21/data-fetching-with-react-server-components.html"&gt;Consider reading the article and watching their presentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When they are released, then we will end up in the best-case scenario where web apps are only dynamic in&lt;br&gt;
places that require it without having to jump between server-side and client-side paradigms.&lt;/p&gt;

&lt;p&gt;All of the frameworks above will benefit from them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#in-conclusion" class="anchor"&gt;
  &lt;/a&gt;
  In conclusion
&lt;/h2&gt;

&lt;p&gt;We should start asking ourselves if our standard approach is something we still want to maintain.&lt;/p&gt;

&lt;p&gt;Suggested frameworks reduce complexity and allow us to experience the simplicity of older approaches while having the benefits of the modern approach.&lt;/p&gt;

&lt;p&gt;They embrace the fact that both backend and frontend are tightly coupled and make the developer experience unified.&lt;/p&gt;

&lt;p&gt;This is an opportunity to write less code, spend less time testing, simplify orchestration, spend less money on more people having to maintain the complexity, and put more effort into products we are trying to create.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Is it time we quit WhatsApp?</title>
      <author>Rishabh Singh</author>
      <pubDate>Sun, 10 Jan 2021 17:43:20 +0000</pubDate>
      <link>https://dev.to/mindninjax/is-it-time-we-quit-whatsapp-4f91</link>
      <guid>https://dev.to/mindninjax/is-it-time-we-quit-whatsapp-4f91</guid>
      <description>&lt;p&gt;No matter what you do, there is a very high probability that you must be using WhatsApp very often in your daily life. But due to recent policy changes in WhatsApp, it has raised some serious privacy concerns. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OBxwy2GV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/689glph9uzkmibe4yl2q.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OBxwy2GV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/689glph9uzkmibe4yl2q.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;According to the new policy, WhatsApp will be sharing the following user data with Facebook:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;user ID&lt;/li&gt;
&lt;li&gt;device ID&lt;/li&gt;
&lt;li&gt;purchase history&lt;/li&gt;
&lt;li&gt;advertising data&lt;/li&gt;
&lt;li&gt;phone number&lt;/li&gt;
&lt;li&gt;coarse location&lt;/li&gt;
&lt;li&gt;contacts&lt;/li&gt;
&lt;li&gt;email address&lt;/li&gt;
&lt;li&gt;crash data&lt;/li&gt;
&lt;li&gt;product integration&lt;/li&gt;
&lt;li&gt;payment information&lt;/li&gt;
&lt;li&gt;diagnostic data&lt;/li&gt;
&lt;li&gt;performance data&lt;/li&gt;
&lt;li&gt;product interaction&lt;/li&gt;
&lt;li&gt;customer support&lt;/li&gt;
&lt;li&gt;&amp;amp; other user data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This huge list might have scared you the same way it has scared other 2 billion active users around the world.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#discuss" class="anchor"&gt;
  &lt;/a&gt;
  Discuss
&lt;/h1&gt;




&lt;p&gt;So as a developer, what are your opinions on data trade which is going on among companies such as WhatsApp &amp;amp; Facebook?&lt;/p&gt;

&lt;p&gt;And are you planning to ditch WhatsApp as well &amp;amp; move on to a better privacy-friendly service like Signal &amp;amp; Telegram?&lt;/p&gt;

&lt;p&gt;Please share your thoughts in Discussions/Comments&lt;/p&gt;

</description>
      <category>privacy</category>
      <category>discuss</category>
      <category>watercooler</category>
      <category>whatsapp</category>
    </item>
    <item>
      <title>Keeping Git Commit Messages Consistent with a Custom Template</title>
      <author>Timothy Merritt</author>
      <pubDate>Sun, 10 Jan 2021 17:38:33 +0000</pubDate>
      <link>https://dev.to/timmybytes/keeping-git-commit-messages-consistent-with-a-custom-template-1jkm</link>
      <guid>https://dev.to/timmybytes/keeping-git-commit-messages-consistent-with-a-custom-template-1jkm</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--PF-MonEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgs.xkcd.com/comics/git_commit.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--PF-MonEv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://imgs.xkcd.com/comics/git_commit.png" alt="XKCD comic 1296 displaying increasingly less informative git commit messages over the course of a project"&gt;&lt;/a&gt;&lt;/p&gt;
xkcd on git commit messages



&lt;p&gt;The ability to write consistent git commit messages is a skill that will serve both you and any team you’re working with well in the long run. If you often find yourself struggling to come up with a decent message format, or you’re unable to decipher what it was you were doing when looking back through old commits, this little fix might help. And the best part is it’s extremely easy to implement.&lt;/p&gt;

&lt;p&gt;You can set a file to act as a commit message template through git’s global configuration. I tend to follow the &lt;a href="https://www.conventionalcommits.org/en/v1.0.0-beta.2/"&gt;conventional commits format&lt;/a&gt;, which makes it easy to decide how to format your commit messages, and keeps things organized across all your commits. &lt;a href="https://chris.beams.io/posts/git-commit/"&gt;Chris Beams also has a great article on this topic.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;First, create a .txt file in a directory of your choice that will act as the template. I’ll assume you’re using the terminal for the process.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;touch &lt;/span&gt;commit-conventions.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Open the .txt file with the editor of your choice. Git will ignore lines that begin with a &lt;code&gt;#&lt;/code&gt;, so we’ll use those to make a template of ignored lines that only you will see when you’re making commits. You can put whatever you want in your template, but here’s mine as an example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# ----------------------------------------------------------
# Header - (type): Brief description
# ----------------------------------------------------------
#   * feat         A new feature
#   * fix          A bug fix
#   * docs         Changes to documentation only
#   * style        Style/format changes (whitespace, etc.)
#   * refactor     Changes not related to a bug or feature
#   * perf         Changes that affects performance
#   * test         Changes that add/modify/correct tests
#   * build        Changes to build system (configs, etc.)
#   * ci           Changes to CI pipeline/workflow
# ----------------------------------------------------------


# ----------------------------------------------------------
# Body - More detailed description, if necessary
# ----------------------------------------------------------
#   * Motivation behind changes, more detail into how 
# functionality might be affected, etc.
# ----------------------------------------------------------


# ----------------------------------------------------------
# Footer - Associated issues, PRs, etc.
# ----------------------------------------------------------
#   * Ex: Resolves Issue #207, see PR #15, etc.
# ----------------------------------------------------------

&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;To add the template to your global git config is enter the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; commit.template path/to/your/file.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Now whenever you’re making a commit, instead of the typical &lt;code&gt;git commit -m "A brief commit message"&lt;/code&gt;, just enter &lt;code&gt;git commit&lt;/code&gt; to open your default editor with the template in place. You’ll automatically have a guide to choose conventions from to create a structured message. For example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;# ----------------------------------------------------------
# Header - (type): Brief description
# ----------------------------------------------------------
#   * feat         A new feature
#   * fix          A bug fix
#   * docs         Changes to documentation only
#   * style        Style/format changes (whitespace, etc.)
#   * refactor     Changes not related to a bug or feature
#   * perf         Changes that affects performance
#   * test         Changes that add/modify/correct tests
#   * build        Changes to build system (configs, etc.)
#   * ci           Changes to CI pipeline/workflow
# ----------------------------------------------------------
(docs): Update README with contributing instructions

# ----------------------------------------------------------
# Body - More detailed description, if necessary
# ----------------------------------------------------------
#   * Motivation behind changes, more detail into how 
# functionality might be affected, etc.
# ----------------------------------------------------------
Adds a CONTRIBUTING.md with PR best practices, code style 
guide, and code of conduct for contributors.

# ----------------------------------------------------------
# Footer - Associated issues, PRs, etc.
# ----------------------------------------------------------
#   * Ex: Resolves Issue #207, see PR #15, etc.
# ----------------------------------------------------------
Closes #9
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The “header” of the commit message notes the category of the commit as &lt;code&gt;(docs)&lt;/code&gt; and a brief description that does not exceed 60 characters to ensure readability (the commented lines are 60 characters long and act as guides for when to use a line break). The “body” elaborates on the changes made, and the “footer” notes any issue/PR the commit is related to. The final message will simply look like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;(docs): Update README with contributing instructions

Adds a CONTRIBUTING.md with PR best practices, code style 
guide, and code of conduct for contributors.

Closes #9
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you use Vim or Neovim, and you want to speed up the process even more, you can add this to your git config (note that for Vim just substitute &lt;code&gt;vim&lt;/code&gt; for &lt;code&gt;nvim&lt;/code&gt;):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; core.editor&lt;span class="o"&gt;=&lt;/span&gt;nvim +14 &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'startinsert'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This sets the default editor to Neovim, and places the cursor on line 14 in Insert Mode as soon the editor opens. Now whenever you’re committing, when you type &lt;code&gt;git commit&lt;/code&gt;, Neovim opens the template, places your cursor, and accepts typing input immediately. Also note that you can still use &lt;code&gt;git commit -m "Your message"&lt;/code&gt; exactly as you did before, but the configuration will default to the template setup when you just type &lt;code&gt;git commit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Setting up this template has saved me countless time and frustration, and makes it so much easier to track my commits since all my repos use the same global commit format. You can get much more creative with git defaults and complex githooks, but this is a great way to solve a common problem for most developers. &lt;/p&gt;




&lt;p&gt;If you enjoyed this, you can see more of my configurations in my &lt;a href="https://github.com/timmybytes/dotfiles"&gt;dotfiles&lt;/a&gt;, check out larger projects I’ve done in my &lt;a href="https://timmybytes.com"&gt;portfolio&lt;/a&gt;, or catch up with me on &lt;a href="https://twitter.com/timmybytes"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/timmybytes"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>productivity</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Let's Learn more about Linux/Unix Commands</title>
      <author>Payalsasmal</author>
      <pubDate>Sun, 10 Jan 2021 17:21:53 +0000</pubDate>
      <link>https://dev.to/payalsasmal/let-s-learn-more-about-linux-unix-commands-5aai</link>
      <guid>https://dev.to/payalsasmal/let-s-learn-more-about-linux-unix-commands-5aai</guid>
      <description>&lt;p&gt;Hi there!, Lets learn few more about Linux/Unix commands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.chmod:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;chmod&lt;/strong&gt; stands for change mode. It's used to change access of a file. Linux has total 27 kinds of file permissions. listing few of them.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please don't apply this command outside of your home directory. If you will change access on &lt;em&gt;System Directory&lt;/em&gt; with &lt;em&gt;sudo&lt;/em&gt; command, you may have to reinstall your OS again.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chmod [references][operator][modes] file...
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;we can also say that, this syntax as &lt;strong&gt;who&lt;/strong&gt;(user) as &lt;strong&gt;reference&lt;/strong&gt;,&lt;strong&gt;what&lt;/strong&gt;(what permission) as &lt;strong&gt;operator&lt;/strong&gt;, &lt;strong&gt;mode&lt;/strong&gt; as &lt;strong&gt;which&lt;/strong&gt;(which permission).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[reference]:&lt;/strong&gt; It represents that whom to give permission.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Reference&lt;/th&gt;
&lt;th&gt;Class&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;u&lt;/td&gt;
&lt;td&gt;user&lt;/td&gt;
&lt;td&gt;File’s owner&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;td&gt;group&lt;/td&gt;
&lt;td&gt;Users who are Members of the file’s group&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;o&lt;/td&gt;
&lt;td&gt;others&lt;/td&gt;
&lt;td&gt;User who are neither the file’s owner nor members of the file’s group&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt;all&lt;/td&gt;
&lt;td&gt;All three of the above, same as ugo&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;[operator]:&lt;/strong&gt; It represents what permission we are making. Are we adding or removing or setting new permission?&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;+&lt;/td&gt;
&lt;td&gt;add the permission.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;remove the permission.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;set the permission and wipe out previous permissions.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;[modes]:&lt;/strong&gt; It represents which permission to be granted.&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Modes&lt;/th&gt;
&lt;th&gt;Names&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;read&lt;/td&gt;
&lt;td&gt;read permission to a file or a directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;write&lt;/td&gt;
&lt;td&gt;write permission to a file or a directory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;execute&lt;/td&gt;
&lt;td&gt;execute permission to a file&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DA9uC3_i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/114ogi7wrpjmi1v5tmut.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DA9uC3_i--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/114ogi7wrpjmi1v5tmut.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Please see left sided values in above example ( like drwxrwxr-x or -rw-r--r-- etc), we called these symbolic value. These sections divided into 4 parts- File types, owner, group and other.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Let's make this example simple to see what permission given to which file. I am taking few examples from the above screenshot.&lt;/strong&gt;&lt;/p&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;File types&lt;/th&gt;
&lt;th&gt;owner permission&lt;/th&gt;
&lt;th&gt;group permission&lt;/th&gt;
&lt;th&gt;other permission&lt;/th&gt;
&lt;th&gt;&lt;a href="https://en.wikipedia.org/wiki/Hard_link"&gt;hard link&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;file/directory name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;rwx&lt;/td&gt;
&lt;td&gt;r-x&lt;/td&gt;
&lt;td&gt;r-x&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Desktop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;rw-&lt;/td&gt;
&lt;td&gt;r--&lt;/td&gt;
&lt;td&gt;r--&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;get-docker.sh&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;d&lt;/td&gt;
&lt;td&gt;rwx&lt;/td&gt;
&lt;td&gt;rwx&lt;/td&gt;
&lt;td&gt;r-x&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;payal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;r-x&lt;/td&gt;
&lt;td&gt;r--&lt;/td&gt;
&lt;td&gt;r--&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;test.sh&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;File type:&lt;/strong&gt; It has two types&lt;br&gt;
&lt;strong&gt;d:&lt;/strong&gt; for directory and&lt;br&gt;
&lt;strong&gt;- :&lt;/strong&gt; for regular file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;owner permission:&lt;/strong&gt; we can see different owner permissions. &lt;br&gt;
&lt;strong&gt;rwx:&lt;/strong&gt; For Desktop &amp;amp; payal directories, the directory's owner can create files within it, can list its contents and descend into it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rw-:&lt;/strong&gt; For get-docker.sh file, the file owner can read from the file and write to the file but can't execute the file as "-" ( which means no permission) provided in execute position.&lt;br&gt;
&lt;strong&gt;r-x:&lt;/strong&gt; For test.sh file, the file owner can read from the file and execute the file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;group permission:&lt;/strong&gt; we can see different group permission.&lt;br&gt;
&lt;strong&gt;r-x:&lt;/strong&gt; For Desktop directory, the member of directory's group can read and descend into it. &lt;br&gt;
&lt;strong&gt;r--:&lt;/strong&gt; For get-docker.sh &amp;amp; test.sh files, the members of the file's group can read from the file but can't write and execute as "-" provided for both places.&lt;br&gt;
&lt;strong&gt;rwx:&lt;/strong&gt; For payal directory, the members of the directory's group can read, write and descend into it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;other permission:&lt;/strong&gt; &lt;br&gt;
&lt;strong&gt;r-x:&lt;/strong&gt; For Desktop and payal directories, the other users can read and descend into it.&lt;br&gt;
&lt;strong&gt;r--:&lt;/strong&gt; For get-docker.sh &amp;amp; test.sh files, other users can only read from the file .&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;File Permission can also be given through octa values:&lt;/strong&gt;&lt;br&gt;
 Let's take an example from above example for &lt;strong&gt;Desktop&lt;/strong&gt; directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; rwx  r-x  r-x
  u    g    o
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Permission&lt;/th&gt;
&lt;th&gt;Binary&lt;/th&gt;
&lt;th&gt;Octal&lt;/th&gt;
&lt;th&gt;User&lt;/th&gt;
&lt;th&gt;Group&lt;/th&gt;
&lt;th&gt;Other&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt;100&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt;010&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;001&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;total number&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Now we can change the permission using below ways:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;1.&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chmod u+rwx g+rx o+rx &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;2.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;chmod 766 &amp;lt;file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;So both of the commands will give same permission to the file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. cal:&lt;/strong&gt; &lt;br&gt;
&lt;strong&gt;cal&lt;/strong&gt; stands for calendar i.e. use to see calendar in terminal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cal [-jy] [[month] year]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;-j:&lt;/strong&gt; Show julian dates (days one-based, numbered from January 1)&lt;br&gt;
&lt;strong&gt;-y:&lt;/strong&gt; Show calendar from the current year&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dhrCdhcQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/e5w89uz8bfe4xmuvr7yg.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dhrCdhcQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/e5w89uz8bfe4xmuvr7yg.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oamlVJ78--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ac6ha2rk3ado8ebxjg22.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oamlVJ78--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/ac6ha2rk3ado8ebxjg22.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. grep:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;grep&lt;/strong&gt; stands for &lt;strong&gt;Global Regular Expression Print&lt;/strong&gt;. It is used to search for a particular pattern of a character and print all the contain that pattern. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; grep [OPTIONs]... PATTERN [FILE]..
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We can use &lt;strong&gt;grep&lt;/strong&gt; command in so many ways. Given few examples.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;grep [options] Pattern [file]:&lt;/strong&gt; Search the file with &lt;strong&gt;Options&lt;/strong&gt;. There are so many options, I provided few as examples. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;grep -c "string-to-search" [FILE] :&lt;/strong&gt; It find the number of lines that matches the pattern.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---HRmagKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0od8yzewzsdzmk0gxoqs.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---HRmagKN--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/0od8yzewzsdzmk0gxoqs.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;grep -i "string-to-search" [FILE] :&lt;/strong&gt; It search string case insensitively. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Lls8wjFy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6hmwxygixo3bq1nmlycr.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Lls8wjFy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6hmwxygixo3bq1nmlycr.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt;&lt;br&gt;
Do &lt;strong&gt;grep --help&lt;/strong&gt; to know more about &lt;strong&gt;Options&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;grep "string-to-search" [file] :&lt;/strong&gt; Search the word in a single file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HjuC9pAq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/e50tnbtmajeye9m4qetb.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HjuC9pAq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/e50tnbtmajeye9m4qetb.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;grep "string-to-search" [file1] [file2] [file3] [file4]:&lt;/strong&gt; Search the word in a multiple files. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BQEeJXi9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oszvf2zcgcu6iy1m8rxp.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BQEeJXi9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/oszvf2zcgcu6iy1m8rxp.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[some-commands] | grep "string-to-search" :&lt;/strong&gt; Put some command and search.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--u7WWsTIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/m2b0dzrktoxjuwyyc26r.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--u7WWsTIm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/m2b0dzrktoxjuwyyc26r.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cat [file] | grep "string-to-search" :&lt;/strong&gt; While concatenate the file and search particular.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--x9ZBGwZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/b3b05s1u62afd1wm3atk.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x9ZBGwZp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/b3b05s1u62afd1wm3atk.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. zip:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;zip&lt;/strong&gt; command used for compressed files with .zip extension. We can zip files and directories in linux/unix. zip files use in Linux for many reasons. Even we can share the zip file with Window users instead of &lt;em&gt;.tar&lt;/em&gt; extension as it won't be compatible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;zip [OPTIONS] filename.zip [list of files]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;zip filename.zip [file1] [file2] :&lt;/strong&gt; Creating &lt;strong&gt;zip&lt;/strong&gt; with files:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D8DeJ83g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/aymrndrqyknk0jv8nvd1.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D8DeJ83g--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/aymrndrqyknk0jv8nvd1.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;zip filename.zip [list of files] [list of directories] :&lt;/strong&gt; Creating &lt;strong&gt;zip&lt;/strong&gt; with files and directories.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RAbR667p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gycr2fsjbrnxqma83ozw.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RAbR667p--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gycr2fsjbrnxqma83ozw.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;zip -e filename.zip [list of files] :&lt;/strong&gt; Creating password protecting zip.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jteyScwO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dh9nq969izplbgs4hdv0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jteyScwO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/dh9nq969izplbgs4hdv0.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. unzip:&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;unzip&lt;/strong&gt; command used for unzipping the zip files.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Syntax:&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;unzip [OPTIONS] [filename.zip]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;unzip [filename.zip] :&lt;/strong&gt; Unzipping the above created zip file combined with files and directories.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YtiewDhA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g6ehd0ipqvzqsex3r3f2.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YtiewDhA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/g6ehd0ipqvzqsex3r3f2.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;unzip -P [password] [filename.zip] :&lt;/strong&gt; Unzipping password protected zip file.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5go9NVcu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mc6xi5ktow65haia0res.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5go9NVcu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/mc6xi5ktow65haia0res.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Providing password in command line is not secure and it should be avoided. We can overcome this situation just providing the below command without providing the &lt;em&gt;password&lt;/em&gt;. So, if the zip file is &lt;em&gt;encrypted&lt;/em&gt; then unzip command will prompt with window to enter the password.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;unzip [filename.zip] 
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jThWobm5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2jfb0sstn4wtv4h3hfa0.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jThWobm5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/2jfb0sstn4wtv4h3hfa0.PNG" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>bash</category>
      <category>unix</category>
    </item>
    <item>
      <title>FlexBox Cheat Sheets in 2021 || CSS 2021</title>
      <author>Joy Shaheb</author>
      <pubDate>Sun, 10 Jan 2021 16:09:20 +0000</pubDate>
      <link>https://dev.to/joyshaheb/flexbox-cheat-sheets-in-2021-css-2021-3edl</link>
      <guid>https://dev.to/joyshaheb/flexbox-cheat-sheets-in-2021-css-2021-3edl</guid>
      <description>&lt;h1&gt;
  &lt;a href="#table-of-contents-" class="anchor"&gt;
  &lt;/a&gt;
  Table of Contents --
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#level-1"&gt;FlexBox Architecture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-2"&gt;flex-direction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-3"&gt;justify-content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-4"&gt;align-content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-5"&gt;align-items&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-6"&gt;align-self&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-7"&gt;flex - grow | shrink | wrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-8"&gt;Short Hands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#level-9"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's 2021! Let's refresh Our &lt;strong&gt;CSS Flexbox&lt;/strong&gt; Memory. Here's a Cheat Sheet of everything you can do with CSS flexbox to get started in 2021.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#flexbox-architecture" class="anchor"&gt;
  &lt;/a&gt;
  FlexBox Architecture &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mLA0c0ye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hy2oqjvsbk60ef92nktg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mLA0c0ye--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/hy2oqjvsbk60ef92nktg.png" alt="Flex Box model Architecture"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#flexbox-chart-" class="anchor"&gt;
  &lt;/a&gt;
  FlexBox Chart --
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NBPSPt0K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gv3jyh4xt4fbwtq1qejn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NBPSPt0K--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/gv3jyh4xt4fbwtq1qejn.png" alt="Flex Box property Value Chart"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#flexdirection" class="anchor"&gt;
  &lt;/a&gt;
  flex-direction &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;The Direction/Orientation in which flex-items are distributed inside flex-container.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dSPKucCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/n2ggh6yy4sbgltrx2i40.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dSPKucCl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/n2ggh6yy4sbgltrx2i40.png" alt="Flex Direction"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HDcNQB2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6m9fg4n5a114q1va3b9p.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HDcNQB2s--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/6m9fg4n5a114q1va3b9p.png" alt="Flex Direction"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#justifycontent" class="anchor"&gt;
  &lt;/a&gt;
  justify-content &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This property arranges flex-items along the &lt;strong&gt;MAIN AXIS&lt;/strong&gt; inside the flex-container&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ODoBQ_kH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a5lhkhbhi7hxwjgyvl5x.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ODoBQ_kH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/a5lhkhbhi7hxwjgyvl5x.png" alt="justify content"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--h8AhHloo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1vyg5nf1w7plistni582.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--h8AhHloo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/1vyg5nf1w7plistni582.png" alt="justify content"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#aligncontent" class="anchor"&gt;
  &lt;/a&gt;
  align-content &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;This property arranges flex-items along the &lt;strong&gt;CROSS AXIS&lt;/strong&gt; inside the flex-container. This is similar to &lt;strong&gt;justify-content&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rb2GSkzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/nqvvc2rhf0vx3czy0rnr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rb2GSkzz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/nqvvc2rhf0vx3czy0rnr.png" alt="align content"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kat1xDe2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zeet3705rsmz77v66x3c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kat1xDe2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/zeet3705rsmz77v66x3c.png" alt="align content"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#alignitems" class="anchor"&gt;
  &lt;/a&gt;
  align-items &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Distributes Flex-items along the &lt;strong&gt;Cross Axis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sjVrjCiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kt25wxicd7vm8ddtmq0l.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sjVrjCiy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/kt25wxicd7vm8ddtmq0l.png" alt="align items"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#alignself" class="anchor"&gt;
  &lt;/a&gt;
  align-self &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--iaLpi97E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/383cxj4ippb21vjq31q2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaLpi97E--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/383cxj4ippb21vjq31q2.png" alt="align self"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#flex-grow-shrink-wrap" class="anchor"&gt;
  &lt;/a&gt;
  flex - grow | shrink | wrap &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;flex-grow&lt;/strong&gt;   : grows the size of a flex-item based on width of the flex-container.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;flex-shrink&lt;/strong&gt; : The ability for a flex item to shrink based on width of the flex-container. Opposite of flex-grow.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;flex-wrap&lt;/strong&gt;   : Amount of Flex-item you want in a line/row.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nlgR-7xg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/z094e3wehsoe8z6lsxnz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nlgR-7xg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/z094e3wehsoe8z6lsxnz.png" alt="flex grow flex shrink flex wrap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ynBOvGcf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fux9qc05e6rtat192vlm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ynBOvGcf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/fux9qc05e6rtat192vlm.png" alt="flex wrap flex grow flex shrink"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#short-hands" class="anchor"&gt;
  &lt;/a&gt;
  Short Hands &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WvUBtAJl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eayovne50iwxx8ll5e01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WvUBtAJl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/eayovne50iwxx8ll5e01.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;flex&lt;/strong&gt;       : It is a shorthand to &lt;strong&gt;flex-grow&lt;/strong&gt;, &lt;strong&gt;flex-shrink&lt;/strong&gt; and &lt;strong&gt;flex-basis&lt;/strong&gt; combined. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;flex-basis&lt;/strong&gt; : This is similar to adding width to a flex-item, but only more flexible. flex-basis: 10em; it will set the initial size of a flex-item to 10em. Its final size will be based on available space, flex-grow, and flex-shrink.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1FTp58u9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/onoxj7gs9xj4wuf87kjl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1FTp58u9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/onoxj7gs9xj4wuf87kjl.png" alt="flex flex basis"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#credits" class="anchor"&gt;
  &lt;/a&gt;
  Credits
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LZ6bWVED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uzo5e477tn0sc4oz3mec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LZ6bWVED--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/uzo5e477tn0sc4oz3mec.png" alt="Credits"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#read-next-" class="anchor"&gt;
  &lt;/a&gt;
  Read Next :
&lt;/h2&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/joyshaheb" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HKxh5nl8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--PIw1WUz4--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/497983/30549434-9f45-4916-81c5-f4049bcfe7c0.jpeg" alt="joyshaheb image"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/joyshaheb/acing-css-grid-model-in-2021-with-5-exercises-css-2021-51ci" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;Acing CSS Grid Model in 2021 with 5 Exercises || CSS 2021 
🔥&lt;/h2&gt;
      &lt;h3&gt;Joy Shaheb ・ Dec 22 '20 ・ 6 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#tutorial&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#beginners&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#css&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;h1&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion &lt;a&gt;&lt;/a&gt;
&lt;/h1&gt;

&lt;p&gt;Here's Your Medal For reading till the end ❤️&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#suggestions-amp-criticisms-are-highly-appreciated" class="anchor"&gt;
  &lt;/a&gt;
  Suggestions &amp;amp; Criticisms Are Highly Appreciated ❤️
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MUxHhaVg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/usxsz1lstuwry3jlly4d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MUxHhaVg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/usxsz1lstuwry3jlly4d.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gvV8eBcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rts3fyi4q53i4qn0um58.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gvV8eBcm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/rts3fyi4q53i4qn0um58.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Youtube&lt;a href="//youtube.com/channel/UCHG7IJuST_BXJkne-0u0Xtw"&gt; / Joy Shaheb&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Twitter&lt;a href="https://twitter.com/JoyShaheb"&gt; / JoyShaheb&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Instagram&lt;a href="https://www.instagram.com/joyshaheb/"&gt; / JoyShaheb&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
      <category>tutorial</category>
    </item>
  </channel>
</rss>
