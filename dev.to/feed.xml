<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Announcing the official P5js and WEBGL community on Discord</title>
      <author>ùêãùêÑùëΩùêàùë®ùêìùêáùêÄùêç Programming</author>
      <pubDate>Sat, 17 Apr 2021 11:24:33 +0000</pubDate>
      <link>https://dev.to/leviathanprogramming/announcing-the-official-p5js-and-webgl-community-on-discord-ad8</link>
      <guid>https://dev.to/leviathanprogramming/announcing-the-official-p5js-and-webgl-community-on-discord-ad8</guid>
      <description>&lt;p&gt;I was searching for a discord server for p5.js/WEBGL and there was none.  I decided that I'd make one myself so I did and it is currently expanding.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-p5js-and-webgl"&gt;
  &lt;/a&gt;
  What are P5.js and WEBGL?
&lt;/h2&gt;

&lt;p&gt;P5 is a Javascript library for Canvas.  It is suitable for making video games, natural simulations, particle systems, data graphs, and more and it is super easy to use.&lt;br&gt;
Learn more at &lt;a href="https://p5js.org"&gt;https://p5js.org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;WEBGL is a super fast engine built into javascript for making amazing 3D projects.  Frameworks for webgl include BabylonJS and ThreeJS.&lt;/p&gt;

&lt;p&gt;If you are interested in these topics, be sure to join the &lt;a href="https://discord.gg/YDRz4x8b"&gt;discord&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>webgl</category>
      <category>p5js</category>
    </item>
    <item>
      <title>Top 10 Skills For Front End Web Developers</title>
      <author>Pawan Bhayde</author>
      <pubDate>Sat, 17 Apr 2021 11:13:13 +0000</pubDate>
      <link>https://dev.to/pawanbhayde/top-10-skills-for-front-end-web-developers-2o2h</link>
      <guid>https://dev.to/pawanbhayde/top-10-skills-for-front-end-web-developers-2o2h</guid>
      <description>&lt;p&gt;If you‚Äôre looking to vary careers or learn new skills to upgrade and enhance your current career, tech skills are as close because it gets to a ‚Äúno brainer.‚Äù&lt;/p&gt;

&lt;p&gt;Starting with the large Three of upper pay, creative work, and a versatile schedule, there‚Äôs a reasonably massive list of reasons why tech is a beautiful field to figure in.&lt;/p&gt;

&lt;p&gt;But what does it mean to ‚Äúwork in tech?‚Äù When you‚Äôre new the thought it seems like there‚Äôs tons of jargon to chop through.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is a frontend Developer?&lt;/strong&gt;&lt;br&gt;
This recent article did an excellent job clarifying the various sorts of web development, except for now, i would like to specialise in front developers. To sum it up, front developers code websites using the building blocks of HTML, CSS, and JavaScript (more on this shortly). They‚Äôre those who take a design and develop it into an internet site that works.&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-10-skills-for-front-end-web.html"&gt;Read More&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. HTML/CSS&lt;/strong&gt;&lt;br&gt;
I know, these two terms keep arising . There‚Äôs an honest reason, though. You won‚Äôt find one front developer job listing that doesn‚Äôt involve (or assume) proficiency in these two languages.&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-10-skills-for-front-end-web.html"&gt;Read More&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. JAVASCRIPT/JQUERY&lt;/strong&gt;&lt;br&gt;
Another MAJOR tool in your front developer toolbox goes to be JavaScript (JS). Where HTML may be a terminology and CSS may be a sheet language, JS is that the mother tongue I‚Äôve mentioned that‚Äôs a bonafide programing language . What‚Äôs the difference? Where HTML and CSS determine the presentation of a page, JS determines the function.&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-10-skills-for-front-end-web.html"&gt;Read More&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. CSS AND JAVASCRIPT FRAMEWORKS&lt;/strong&gt;&lt;br&gt;
Wait, we already covered CSS and Javascript, right?&lt;/p&gt;

&lt;p&gt;We did, but they‚Äôre both such an enormous a part of front development that tons of other skills you‚Äôll need are getting to build off of them.&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-10-skills-for-front-end-web.html"&gt;Read More&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. CSS PREPROCESSING&lt;/strong&gt;&lt;br&gt;
Yes, another skill associated with CSS!&lt;/p&gt;

&lt;p&gt;CSS on its own, while essential, can sometimes be limiting. one among these limitations is that incontrovertible fact that you can‚Äôt define variables, functions, or perform arithmetic operations. this is often a drag when a project grows in scale and code base, as you‚Äôll soon end up wasting tons of your time writing repetitive code to form changes. Like CSS (and JS) frameworks, CSS preprocessing is another means of creating your life as a developer easier and more flexible.&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-10-skills-for-front-end-web.html"&gt;Read More&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. VERSION CONTROL/GIT&lt;/strong&gt;&lt;br&gt;
Almost halfway through the list, and we‚Äôre finally to a skill without HTML, CSS, or JS within the name.&lt;/p&gt;

&lt;p&gt;Still totally related, though!&lt;/p&gt;

&lt;p&gt;After all your diligence marking up with HTML, styling with CSS, and programming with JS, you‚Äôll have skilled variety of revisions in your development.&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-10-skills-for-front-end-web.html"&gt;Read More&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6. RESPONSIVE DESIGN&lt;/strong&gt;&lt;br&gt;
Remember the opposite day once you only used one device to seem at a website? Yeah, me neither. the times of desktop (or even laptop) PCs being the sole way of viewing websites are thus far gone that I won‚Äôt date myself by talking about them.&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-10-skills-for-front-end-web.html"&gt;Read More&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. TESTING/DEBUGGING&lt;/strong&gt;&lt;br&gt;
From an internet site for your mom‚Äôs dog walking business to a world site for online banking, bugs are a reality of the event process. so as to stay things moving you‚Äôll got to test your code for bugs along the way, therefore the ability to check and debug makes the list of essential skills for front developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8. BROWSER DEVELOPER TOOLS&lt;/strong&gt;&lt;br&gt;
Users will ultimately be interfacing together with your websites through an internet browser. The way your site is rendered by these browsers goes to be an enormous a part of whether your work is successful or not.&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-10-skills-for-front-end-web.html"&gt;Read More&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;9. BUILDING AND AUTOMATION TOOLS/WEB PERFORMANCE&lt;/strong&gt;&lt;br&gt;
You might be seeing a pattern that HTML, CSS, and JavaScript are the three primary tools for front development. Meanwhile, most of the opposite skills either help make those tools more efficient or help test your site and fix mistakes. The trend continues here with building and automation tools and web performance.&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-10-skills-for-front-end-web.html"&gt;Read More&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;10. instruction&lt;/strong&gt;&lt;br&gt;
In a lot of the way , the proliferation of Graphic User Interfaces (GUIs) into computing was one among the simplest things to ever happen. Who wants to type lines of esoteric commands onto a dead screen so as to urge around a machine? It‚Äôs tons easier to point and click on on an active , interactive menu.&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-10-skills-for-front-end-web.html"&gt;Read More&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOFT SKILLS!&lt;/strong&gt;&lt;br&gt;
As easy because it is to urge fixated on the new, fancy sounding skills you‚Äôll need during a tech career, there are some more familiar skills that you simply shouldn‚Äôt overlook.&lt;a href="https://webdevpawan.blogspot.com/2021/04/top-10-skills-for-front-end-web.html"&gt;Read More&lt;/a&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>career</category>
      <category>html</category>
    </item>
    <item>
      <title>Introducing: The Appwrite Gang of Four (and new ways to get swags)</title>
      <author>Eldad A. Fux</author>
      <pubDate>Sat, 17 Apr 2021 11:05:56 +0000</pubDate>
      <link>https://dev.to/eldadfux/introducing-the-appwrite-gang-of-four-and-new-ways-to-get-swags-1jo9</link>
      <guid>https://dev.to/eldadfux/introducing-the-appwrite-gang-of-four-and-new-ways-to-get-swags-1jo9</guid>
      <description>&lt;p&gt;We're happy to introduce you to the new Appwrite gang of four (yeh, like the book, but not really), a set of four TODO example applications built using all popular JS frameworks, including React, Vue, Angular and Svelte. The new examples are designed to demonstrate how you can utilize Appwrite in your favorite set of technologies.&lt;/p&gt;

&lt;p&gt;At Appwrite, we believe backend as a service should be as simple and most intuitive to use. Following that believe we designed the new examples to be as simple and straightforward but still give you an excellent idea of how to start using Appwrite and scale and grow with it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#new-to-appwrite"&gt;
  &lt;/a&gt;
  New to Appwrite?
&lt;/h2&gt;

&lt;p&gt;Appwrite is an open-source, end-to-end development platform designed to abstract the most complex and repetitive processes involved in building a modern app. Appwrite is a self-hosted solution you can host on any infrastructure and provides you all the core APIs and tools required to create any persistent modern application. You can learn more on our &lt;a href="https://appwrite.io"&gt;website&lt;/a&gt; or &lt;a href="https://github.com/appwrite/appwrite"&gt;Github repository&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#go-and-test-our-new-demos"&gt;
  &lt;/a&gt;
  Go and Test Our New Demos!
&lt;/h2&gt;

&lt;p&gt;All the new demos are already available on Github and offer a one-click-deployment setup to your favorite hosting service, including &lt;a href="https://vercel.com/"&gt;Vercel&lt;/a&gt;, &lt;a href="https://www.netlify.com/"&gt;Netlify&lt;/a&gt;, and &lt;a href="https://digitalocean.com/"&gt;DigitalOcean&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;üíô React TODO: &lt;a href="https://github.com/appwrite/todo-with-react"&gt;https://github.com/appwrite/todo-with-react&lt;/a&gt;&lt;br&gt;
üíö Vue TODO: &lt;a href="https://github.com/appwrite/todo-with-vue"&gt;https://github.com/appwrite/todo-with-vue&lt;/a&gt;&lt;br&gt;
‚ù§Ô∏è Angular TODO: &lt;a href="https://github.com/appwrite/todo-with-angular"&gt;https://github.com/appwrite/todo-with-angular&lt;/a&gt;&lt;br&gt;
üß° Svelte TODO: &lt;a href="https://github.com/appwrite/todo-with-svelte"&gt;https://github.com/appwrite/todo-with-svelte&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#we-have-some-hidden-swags-waiting-for-you"&gt;
  &lt;/a&gt;
  We Have Some Hidden Swags Waiting For You!
&lt;/h2&gt;

&lt;p&gt;Our access credentials were recently "compromised", and someone tried to ruin our new and shiny demos üòâ. They decided to leave behind 15 easter eggs ü•ö for you to discover. If you find them, submit a PR cleaning up that section of the code to claim some cool Appwrite Swag ü§© (One PR per person across all the repos). You can track the number of claimed Easter Eggs using the badge at the top.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What‚Äôs Next?
&lt;/h2&gt;

&lt;p&gt;You can learn more about the different Appwrite features or check out some of our latest Feature Spotlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://appwrite.io/docs/functions"&gt;Cloud Functions&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://appwrite.io/docs/command-line"&gt;Appwrite CLI&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://eldadfux.medium.com/appwrite-0-7-introducing-the-doctor-cli-to-help-you-debug-your-server-health-889e9806fe85"&gt;Appwrite Doctor&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you‚Äôre new to Appwrite, you can try and &lt;a href="https://appwrite.io/docs/installation"&gt;install it&lt;/a&gt;. It will take you only 2.5 minutes. After you got yourself a copy of the Appwrite server, you can check some of our getting started guides for &lt;a href="https://appwrite.io/docs/getting-started-for-web"&gt;Web&lt;/a&gt;, &lt;a href="https://appwrite.io/docs/getting-started-for-flutter"&gt;Flutter&lt;/a&gt;, or &lt;a href="https://appwrite.io/docs/getting-started-for-server"&gt;Server&lt;/a&gt;, and visit our &lt;a href="https://appwrite.io/discord"&gt;Discord community&lt;/a&gt; where we chat about Appwrite non-stop.&lt;/p&gt;

&lt;p&gt;We really love our Github Stargazers ü§©. If you like what we're doing, head over to our &lt;a href="https://github.com/appwrite/appwrite"&gt;Github repo&lt;/a&gt; and drop us a ‚≠êÔ∏è&lt;/p&gt;

</description>
      <category>angular</category>
      <category>vue</category>
      <category>svelte</category>
      <category>react</category>
    </item>
    <item>
      <title>Manage all your home üè°chores with this Notion Templateüî•</title>
      <author>Manpreet virk</author>
      <pubDate>Sat, 17 Apr 2021 11:02:16 +0000</pubDate>
      <link>https://dev.to/xenoxdev/manage-all-your-home-chores-with-this-notion-template-15hf</link>
      <guid>https://dev.to/xenoxdev/manage-all-your-home-chores-with-this-notion-template-15hf</guid>
      <description>&lt;p&gt;Hey folks üëãüèº.&lt;br&gt;
Just launched another Product on the Product hunt. It's a template that helps you optimize your housework üè† + your life ‚ô•Ô∏è &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#home-chore-manager"&gt;
  &lt;/a&gt;
  Home Chore Manager
&lt;/h3&gt;

&lt;p&gt;It's hard to make a new list for a task that repeats every day - introducing a feature that lets you set recurring tasks so that it updates on its own and relieves you of that work entirely. So now, check that task off, and be more productive! Make a proper chore list that is recurring and you'll be able to efficiently track it in the template.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NuGwssKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.youtube.com/embed/LevS9LS4ZWw" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NuGwssKj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.youtube.com/embed/LevS9LS4ZWw" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/LevS9LS4ZWw"&gt;
&lt;/iframe&gt;
&lt;br&gt;
In this template, you'll get the following features -&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#add-chores"&gt;
  &lt;/a&gt;
  Add Chores
&lt;/h3&gt;

&lt;p&gt;Add household chores you want to track and fill out these Properties&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Frequency&lt;/strong&gt;: How often the chore should be repeated (Daily, Weekly, Bi-Weekly, Monthly, Seasonally, Semi-Annually, Annually)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Last Done&lt;/strong&gt;: An initial date for when you last did this chore&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Assigned To&lt;/strong&gt;: For easily tracking chores for a household. Easy to  filter the tasks on a personal page to show only things assigned to yourself&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Rooms&lt;/strong&gt;: Good to reference what room to do the chore in, especially useful if you want to have the same chore separated into different rooms
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ji4_MDYl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0bkset6v3hlodoz69jd8.png" alt="Alt Text"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#update-status"&gt;
  &lt;/a&gt;
  Update Status
&lt;/h3&gt;

&lt;p&gt;When you complete a chore, simply update the date in the Last Done&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Do Next column will update automatically based on the frequency&lt;/li&gt;
&lt;li&gt;The Status will change to display Done&lt;/li&gt;
&lt;li&gt;The status will automatically update to let you know when the task is Due in # days, Due today, or Overdue.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#calendar-view"&gt;
  &lt;/a&gt;
  Calendar View
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--MthG8CZP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oty667cmihd8hzaoi3r6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--MthG8CZP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/oty667cmihd8hzaoi3r6.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
Chores will be shown in the calendar view according to their Do next date. Users can use this section to keep a track of the present and upcoming day chores.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#board-view"&gt;
  &lt;/a&gt;
  Board view
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LeclU56N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2b0ubso7th7m6ym4892e.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LeclU56N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2b0ubso7th7m6ym4892e.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
A board view of added chores makes it easy to move a task from one frequency to other just like those Kanban boards.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#timeline-view"&gt;
  &lt;/a&gt;
  Timeline View
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mNsEZLgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6yby6z4cwtiyq1zjiu5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mNsEZLgm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j6yby6z4cwtiyq1zjiu5.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;br&gt;
The timeline view lists down all the added chores. The view can be arranged for a week/month/quarter to keep track of chores.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#want-one"&gt;
  &lt;/a&gt;
  Want One?
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/2tRkw3A5ifszb1Wb3q/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/2tRkw3A5ifszb1Wb3q/giphy.gif" alt=""&gt;&lt;/a&gt;&lt;br&gt;
&lt;strong&gt;&lt;em&gt;Here is your link&lt;/em&gt;&lt;/strong&gt; üëâ &lt;a href="https://prototion.com/notion-for/home-chores-manager"&gt;&lt;strong&gt;&lt;em&gt;Home Chore Manager&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are on Producthunt today. Go show some love here.&lt;br&gt;
&lt;a href="https://www.producthunt.com/posts/notion-home-chores"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---84xg0JF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/73ulk3v29tdsb4lb0ie7.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>watercooler</category>
    </item>
    <item>
      <title>I analyzed my six years of food deliveries</title>
      <author>Shubham Jain</author>
      <pubDate>Sat, 17 Apr 2021 10:25:36 +0000</pubDate>
      <link>https://dev.to/shubhamjain/i-analyzed-my-six-years-of-food-deliveries-5fp4</link>
      <guid>https://dev.to/shubhamjain/i-analyzed-my-six-years-of-food-deliveries-5fp4</guid>
      <description>&lt;p&gt;Before food delivery apps came along, ordering food online was a pain. I started using &lt;a href="https://swiggy.com/"&gt;Swiggy&lt;/a&gt;, the Indian food delivery app, in 2016 and because it made it way too easy to get food delivered, my orders just went through the roof. I thought it will be fun to analyze how much and what have I ordered. &lt;/p&gt;

&lt;p&gt;There are two sections of this post: a) How I did it? b) The numbers and my analysis. Depending on your interest, you can skip either.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-i-did-it"&gt;
  &lt;/a&gt;
  How I did it?
&lt;/h2&gt;

&lt;p&gt;Swiggy doesn't have an API to get your personal data. However, it has a page where it lists your past orders. Trouble is, it will only show five orders at once, and you have to click "Show more orders" to go further back. Naturally, you have to automate it somehow. &lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#figuring-out-the-source-of-data"&gt;
  &lt;/a&gt;
  Figuring out the source of data
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i_Mdr4cU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/309760/115105274-85d42a00-9f7b-11eb-9858-48fe58a2251d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i_Mdr4cU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/309760/115105274-85d42a00-9f7b-11eb-9858-48fe58a2251d.png" alt="Order Page XHR"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Order Page XHR&lt;/p&gt;

&lt;p&gt;I first logged in to the web version of the app since it will be comparatively easier to analyze the requests there. It seems the orders page makes an XHR request to the URL &lt;code&gt;/dapi/order/all?order_id=$$ORDER_ID$$&lt;/code&gt; to fetch the orders where &lt;code&gt;$$ORDER_ID$$&lt;/code&gt; is used for pagination.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0m4vMTsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/309760/115106229-2c6ef980-9f81-11eb-98c7-a4555fcdfbb2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0m4vMTsd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://user-images.githubusercontent.com/309760/115106229-2c6ef980-9f81-11eb-98c7-a4555fcdfbb2.png" alt="Order Page Response"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Order Page Response&lt;/p&gt;

&lt;p&gt;The response is an array of JSON objects with a lot of fields.&lt;/p&gt;

&lt;p&gt;We don't need to figure out which parts of response we need to use, because we can store it all and see to that later.  &lt;/p&gt;

&lt;p&gt;I will use Postgres to store this data because a) it just works and b) has great support for querying JSON. Installing Postgres locally is really simple on Macs via the &lt;a href="https://postgresapp.com/"&gt;Postgres app&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here's the schema I will use:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="n"&gt;swiggy&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;order_id&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt; &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="n"&gt;jsonb&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why do we just need two columns? Because &lt;code&gt;order_id&lt;/code&gt; is enough to uniquely identify every order and in the &lt;code&gt;data&lt;/code&gt; column we can dump the whole object. As I said earlier, Postgres makes it really easy to query JSON.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#getting-the-data"&gt;
  &lt;/a&gt;
  Getting the data
&lt;/h3&gt;

&lt;p&gt;Let's get the data! I will be using bash for this. "BASH???? ARGHHH. WHY???", you may ask. I used to have a similar aversion towards bash, but in the past year, I have realized it makes it really easy to do certain things once you get the hang of it. &lt;/p&gt;

&lt;p&gt;It's perfectly fine if you want to use a different approach as the basic ideas would be very much portable. Like, using &lt;code&gt;axios&lt;/code&gt; instead of &lt;code&gt;cURL&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;First, the basic request. We need to figure out if a simple request for getting orders would work at all. The easiest way to do that is to "Copy as cURL" the request from the developer's console and run it in your terminal.&lt;/p&gt;

&lt;p&gt;If it works, that's great! You can start removing the unneeded parameters, like headers, user agent, and tracking cookies. After I did the trimming, the basic request to get orders boiled down to this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;curl &lt;span class="nt"&gt;-sL&lt;/span&gt; &lt;span class="s2"&gt;"https://www.swiggy.com/dapi/order/all?order_id=&lt;/span&gt;&lt;span class="nv"&gt;$next_order_id&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
     &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"cookie: _session_tid=&lt;/span&gt;&lt;span class="nv"&gt;$SESSION_ID&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;where &lt;code&gt;$SESSION_ID&lt;/code&gt; is the long parameter visible in the first screenshot. &lt;/p&gt;

&lt;p&gt;Once the request works, we can parse the JSON and iterate over the objects using &lt;a href="https://stedolan.github.io/jq/"&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;for &lt;/span&gt;order &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$all_orders&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | jq &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'.data.orders[]'&lt;/span&gt; &lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$order&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Why do we use &lt;code&gt;IFS=$'\n'&lt;/code&gt;? Because by default bash will split tabs and spaces too, and various names in the response (like restaurant, delivery person) can have spaces.&lt;/p&gt;

&lt;p&gt;Now, we just need to store it in the DB. And write code to fetch the next orders. In all, the whole script will be like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c"&gt;# Your Swiggy Session ID, check screenshot #1 &lt;/span&gt;
&lt;span class="nv"&gt;SESSION_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"__SESSION_ID__"&lt;/span&gt;

&lt;span class="k"&gt;while &lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do
    &lt;/span&gt;&lt;span class="nv"&gt;all_orders&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;curl &lt;span class="nt"&gt;-sL&lt;/span&gt; &lt;span class="s2"&gt;"https://www.swiggy.com/dapi/order/all?order_id=&lt;/span&gt;&lt;span class="nv"&gt;$next_order_id&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="se"&gt;\&lt;/span&gt;
    &lt;span class="nt"&gt;-H&lt;/span&gt; &lt;span class="s2"&gt;"cookie: _session_tid=&lt;/span&gt;&lt;span class="nv"&gt;$SESSION_ID&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;

    &lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;
    &lt;span class="k"&gt;for &lt;/span&gt;order &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$all_orders&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | jq &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s1"&gt;'.data.orders[]'&lt;/span&gt; &lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
        &lt;span class="c"&gt;# We use $$ to wrap $order because it takes cares spaces in the data&lt;/span&gt;
        psql &lt;span class="s2"&gt;"postgres://shubhamjain@localhost/stats"&lt;/span&gt; &lt;span class="nt"&gt;-c&lt;/span&gt; &lt;span class="s2"&gt;"
            INSERT INTO swiggy (order_id, data) VALUES (
               '&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$order&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | jq &lt;span class="nt"&gt;-r&lt;/span&gt; &lt;span class="s1"&gt;'.order_id'&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;',
                &lt;/span&gt;&lt;span class="se"&gt;\$\$&lt;/span&gt;&lt;span class="nv"&gt;$order&lt;/span&gt;&lt;span class="se"&gt;\$\$&lt;/span&gt;&lt;span class="s2"&gt;
            );
        "&lt;/span&gt;
    &lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c"&gt;# Next order id would be order id of the last object in array&lt;/span&gt;
    &lt;span class="nv"&gt;next_order_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="si"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$all_orders&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; | jq &lt;span class="s1"&gt;'.[-1].order_id'&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After running this, you should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i0yT9QtG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqxe8krjenmw6wkj5g59.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i0yT9QtG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qqxe8krjenmw6wkj5g59.png" alt="Shell Script Execution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;At some point, it will start failing, which means it has reached the end and you can quit the script then. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: None of this is the ideal way to do things. I wasn't interested in programming properly, only hacking together something cool. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#six-years-in-numbers"&gt;
  &lt;/a&gt;
  Six years in numbers
&lt;/h2&gt;

&lt;p&gt;Cool! Now we have the data. Let's jump to answering questions.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#q1-how-much-i-have-ordered"&gt;
  &lt;/a&gt;
  Q.1: How much I have ordered?
&lt;/h4&gt;

&lt;p&gt;A LOT! I knew I was ordering a ton of times, but I never put a number on it. Actually doing that, with this project, I was taken aback realizing the number of orders I have made and the money I have spent.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="k"&gt;EXTRACT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'year'&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class="s1"&gt;'order_time'&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;timestamp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nb"&gt;year&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;swiggy&lt;/span&gt; &lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Total orders&lt;/strong&gt;: 915&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bv3fHrTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gshrkscp80qersip6f6h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bv3fHrTL--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gshrkscp80qersip6f6h.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Year vs. # of orders&lt;/p&gt;

&lt;p&gt;How much I have spent?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;
   &lt;span class="k"&gt;SUM&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;CAST&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'order_total_with_tip'&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="nb"&gt;DOUBLE&lt;/span&gt; &lt;span class="nb"&gt;PRECISION&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
   &lt;span class="k"&gt;EXTRACT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'year'&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="nb"&gt;DATE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'order_time'&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="n"&gt;swiggy&lt;/span&gt; 
&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Total spent&lt;/strong&gt;: ‚Çπ1,84,329&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zMdFOXZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jdr3dwapzlubtc5zcp9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zMdFOXZ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jdr3dwapzlubtc5zcp9.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Restaurant vs. # of orders&lt;/p&gt;

&lt;p&gt;That seems to a lot of money. Enough to buy a decent second-hand car, at least.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#q2-where-do-i-order-from"&gt;
  &lt;/a&gt;
  Q.2: Where do I order from?
&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Pareto_principle"&gt;Pareto Principle&lt;/a&gt; seems to apply very well here. Most of my orders are for a cafe called &lt;em&gt;Chai Shai&lt;/em&gt;. I love ordering from there‚Äîit has good snacks and everything is well-packaged.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;
   &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'restaurant_name'&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="n"&gt;swiggy&lt;/span&gt; 
&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;2&lt;/span&gt; 
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KnSbWFit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nntbi6flenj7eszaaeg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KnSbWFit--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2nntbi6flenj7eszaaeg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Restaurant vs. money spent on orders&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#q3-when-do-i-order"&gt;
  &lt;/a&gt;
  Q.3: When do I order?
&lt;/h4&gt;

&lt;p&gt;It seems I order more during the morning and afternoon than in the evening. That can be explained by the fact that I often don't feel that hungry in the evening and I prefer something light for dinner.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;
   &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
   &lt;span class="k"&gt;EXTRACT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hour'&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="n"&gt;TO_TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'order_time'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'YYYY-MM-DD hh24:mi:ss'&lt;/span&gt;&lt;span class="p"&gt;)::&lt;/span&gt;&lt;span class="nb"&gt;TIMESTAMP&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="n"&gt;swiggy&lt;/span&gt; 
&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RlAKta9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0h5tz1b8epij7u17e3oh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RlAKta9d--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0h5tz1b8epij7u17e3oh.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hour of the day vs. # of orders&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#q4-what-do-i-order"&gt;
  &lt;/a&gt;
  Q.4 What do I order?
&lt;/h4&gt;

&lt;p&gt;It seems I am fond of ordering for a quick bite and desserts than a full meal. Desserts are something I should definitely cut down on.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight sql"&gt;&lt;code&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;
   &lt;span class="n"&gt;cuisine&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="k"&gt;COUNT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;span class="k"&gt;FROM&lt;/span&gt;
   &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="k"&gt;SELECT&lt;/span&gt;
         &lt;span class="n"&gt;JSONB_ARRAY_ELEMENTS_TEXT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;data&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'restaurant_cuisine'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;AS&lt;/span&gt; &lt;span class="n"&gt;cuisine&lt;/span&gt; 
      &lt;span class="k"&gt;FROM&lt;/span&gt;
         &lt;span class="n"&gt;swiggy&lt;/span&gt;
   &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; 
&lt;span class="k"&gt;GROUP&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;1&lt;/span&gt; 
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt;
   &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mS8xdj6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c246ro5rw9gn6h0utgss.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mS8xdj6k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c246ro5rw9gn6h0utgss.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cuisine vs. # of orders&lt;/p&gt;
 

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;It was an interesting exercise to understand my habits over the years. There are tons of ways I can dig more into the data but for now, I will stop here. Insight fatigue isn't great either.&lt;/p&gt;

&lt;p&gt;I don't think ordering is necessarily bad but it's lazy. Knowing the scale of my habit, I know it would help me to make a little conscious effort to order less. &lt;/p&gt;

</description>
      <category>coding</category>
      <category>bash</category>
      <category>data</category>
      <category>sql</category>
    </item>
    <item>
      <title>Introducing fcd: "faster cding"</title>
      <author>Siddharth</author>
      <pubDate>Sat, 17 Apr 2021 10:13:05 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/introducing-fcd-faster-cding-4k63</link>
      <guid>https://dev.to/siddharthshyniben/introducing-fcd-faster-cding-4k63</guid>
      <description>&lt;p&gt;Ever had to type out a long &lt;code&gt;cd ~/Sites/Projects/project&lt;/code&gt;, find out the path is wrong, rewrite it to &lt;code&gt;cd ~/Sites/Sandbox/project&lt;/code&gt;? You just wasted a minute or two. This inspired me to create a tool: &lt;code&gt;fcd&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;fcd&lt;/code&gt; is a utility which helps you &lt;code&gt;cd&lt;/code&gt; faster on macOS.&lt;/p&gt;

&lt;p&gt;You can directly use it in place of &lt;code&gt;cd&lt;/code&gt; like so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;fcd /some/path/here
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;And what happens is the path to any folder with the same name as the &lt;code&gt;basename&lt;/code&gt; of the input in the &lt;code&gt;dirname&lt;/code&gt; of the input (basically, &lt;code&gt;/some/path/here&lt;/code&gt; =&amp;gt; &lt;code&gt;/some/path/**/here&lt;/code&gt;) gets copied to your clipboard.&lt;/p&gt;

&lt;p&gt;If this is confusing, then just read the README of the repo. And please leave a star if you find this useful!&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/SiddharthShyniben"&gt;
        SiddharthShyniben
      &lt;/a&gt; / &lt;a href="https://github.com/SiddharthShyniben/fcd"&gt;
        fcd
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Faster cd-ing.
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>terminal</category>
      <category>showdev</category>
      <category>package</category>
      <category>npm</category>
    </item>
    <item>
      <title>Day 2 - 100daysofcode Webserver basics</title>
      <author>Prasham Ashesh</author>
      <pubDate>Sat, 17 Apr 2021 09:49:28 +0000</pubDate>
      <link>https://dev.to/pracoon/day-2-100daysofcode-4jdg</link>
      <guid>https://dev.to/pracoon/day-2-100daysofcode-4jdg</guid>
      <description>&lt;p&gt;I have covid and Day 2 was the day when my body begged me to get some rest and I had to give into it. Reminded me of a quote.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZhorBQyJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1yqdjp4k629xnxwwhzs.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZhorBQyJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c1yqdjp4k629xnxwwhzs.jpg" alt="A healthy man wants a thousand things, a sick man only wants one."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Since it's been ~12 days since my first symptom and I am on a road to recovery, I think besides the coronavirus it might have to do something with the new syrup I had yesterday üòÖ&lt;/p&gt;

&lt;p&gt;But, any way I am glad that I did at least a part of what I promised, I read a few articles from &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Front-end_web_developer"&gt;MDN frontend guide&lt;/a&gt; and did 4-5 questions from &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures"&gt;FCC JS DS Algo course&lt;/a&gt;&lt;br&gt;
I couldn't however post an article, unlike reading tech and coding for years now, writing is something that I am relatively new with. I still occasionally have to run a compiler inside my brain converting Hindi (my first language) to English. üòÑ And who knows what all I'd have ended up publishing in my sleepy state.&lt;br&gt;
I'd say it was a good decision because now as I am writing this article I have the opportunity to recall all that I had read in my sleepy state plus some extra time to reflect on what happened and how it could be avoided in future.&lt;/p&gt;

&lt;p&gt;Also, I thought maybe I could start my articles in a 3-2-1 format that James Clear's newsletters come in. His are 3 ideas, 2 quotes, and 1 question. I was thinking of 3 discoveries that day, 2 realizations/quotes, and 1 question. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#articles-covered"&gt;
  &lt;/a&gt;
  Articles Covered
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_web_server"&gt;What is a web server?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Pages_sites_servers_and_search_engines"&gt;What is the difference between webpage, website, web server, and search engine?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics"&gt;CSS Basics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#what-is-a-web-server"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_web_server"&gt;What is a web server?&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;I really like how they explicitly mentioned and differentiated between the &lt;em&gt;hardware web server&lt;/em&gt; and the &lt;em&gt;software web server&lt;/em&gt;. And the roles each play while serving a request.&lt;br&gt;
&lt;em&gt;A good point&lt;/em&gt; - The web server must answer every HTTP request, at least with an error message. (This very line sets up the foundation for HTTP response codes and why)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--30X4NNQ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihol5eh3isi8wd5jo2lq.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--30X4NNQ9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ihol5eh3isi8wd5jo2lq.PNG" alt="Web Server"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-the-difference-between-webpage-website-web-server-and-search-engine"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Pages_sites_servers_and_search_engines"&gt;What is the difference between webpage, website, web server, and search engine?&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This article certainly clears out the confusion I once had in my early days of the internet, I thought the browser and search engines were one and the same, and that when we type something into the browser it would be the browser that would scout the net and provide me with the results, I was so wrong üòÖ With these articles, I certainly am getting nostalgic. üòÑ&lt;br&gt;
This also addresses some of the terminologies that is often use by clients or non-technical people. e.g. I have often heard some of my clients addressing the pdf they received via mail as web docs, Web Documents or Web pages. But the above article clarifies it well. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Browsers can also display other documents such as PDF files or images, but the term web page specifically refers to HTML documents. Otherwise, we only use the term document.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Another such confusion that's addressed is between a website and web server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Don't confuse websites and web servers. For example, if you hear someone say, "My website is not responding", it actually means that the web server is not responding and therefore the website is not available. More importantly, since a web server can host multiple websites, the term web server is never used to designate a website, as it could cause great confusion. In our previous example, if we said, "My web server is not responding", it means that multiple websites on that web server are not available.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Stumbled upon a gold mine of internet terms. See them here &lt;br&gt;
&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary"&gt;MDN Web Docs Glossary: Definitions of Web-related terms&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-basics"&gt;
  &lt;/a&gt;
  &lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics"&gt;CSS Basics&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This article covered the very basics of CSS and I was glad they were able to showcase CSS with such simplicity.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CSS is a stylesheet language&lt;/li&gt;
&lt;li&gt;Anatomy of CSS Ruleset
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--o2eSnH6n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o0bdgozx0d9b84ieifad.png" alt="Anatomy of CSS Ruleset"&gt;
&lt;/li&gt;
&lt;li&gt;Box model
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1EjcdxT3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/u03wa8boql2g8we2g1t9.png" alt="Box model"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All in all, it was not much but fits very well in the Two-Minute Rule which states &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;‚ÄúWhen you start a new habit, it should take less than two minutes to do.‚Äù&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From the &lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures"&gt;FCC JS DS Algo course&lt;/a&gt; I attempted just 5 questions there wasn't much new to learn except one.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most modern programming languages, like JavaScript, don't start counting at 1 like humans do. They start at 0. This is referred to as &lt;em&gt;Zero-based indexing&lt;/em&gt;.
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9P_7qMMs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lgf95z72hvzxl64ivo0r.PNG" alt="Day-2 FCC progress 32%"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#comments-and-conclusion"&gt;
  &lt;/a&gt;
  Comments and Conclusion
&lt;/h2&gt;

&lt;p&gt;Well, day-2 was pretty close to being a failure, but the least we can do right now is to make sure it is not repeated again. And that the 2-minute rule is just a worst case scenario and should not become an everyday reality.&lt;/p&gt;

&lt;p&gt;On &lt;a href="https://dev.to/pracoon/day-1-100daysofcode-32hn"&gt;Day-1&lt;/a&gt; I wrote "I will continue with the 100daysofcode challenge, at 2:00pm in the morning right after my lunch every day without fail"&lt;br&gt;
I think I didn't give enough thought to the 2pm I thought I'd be simply able to stack it to after my lunch, while totally forgetting about the &lt;a href="https://www.huffingtonpost.com.au/2016/08/31/sleepy-after-lunch-we-found-out-exactly-why-it-happens_a_21463330/"&gt;After Lunch Fatigue&lt;/a&gt; which was only enhanced by my medicines.&lt;/p&gt;

&lt;p&gt;Hence I think a better time would be 7pm, I am done with all my fatigues and would be able to close the deal before dinner.&lt;/p&gt;

&lt;p&gt;Hence the new statement is &lt;br&gt;
"I will continue ith the 100daysofcode challenge, at 7 pm every day in the evening after gym, every day"&lt;/p&gt;

&lt;p&gt;I'll leave you with a song I find motivational and energizing at times, and pretty sure would be an all-time favourite for many &lt;a href="https://www.youtube.com/watch?v=ktvTqknDobU"&gt;Imagine Dragons - Radioactive&lt;/a&gt; ü•ÇüòÑ&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--l48bMFq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9x056sk7koxgqtfv92v.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--l48bMFq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y9x056sk7koxgqtfv92v.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Typescript is the better Javascript</title>
      <author>Dany Tulumidis</author>
      <pubDate>Sat, 17 Apr 2021 09:41:35 +0000</pubDate>
      <link>https://dev.to/danytulumidis/typescript-is-the-better-javascript-2nn</link>
      <guid>https://dev.to/danytulumidis/typescript-is-the-better-javascript-2nn</guid>
      <description>&lt;h1&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h1&gt;

&lt;p&gt;Hello there!&lt;br&gt;
Javascript is THE language of the web and one or maybe the most used language in the world of programming. You can do everything with it, from building a simple portfolio website till build a complete SaaS product.&lt;/p&gt;

&lt;p&gt;When i started learning Javascript i was hooked! I loved the language because its so versatile but over the time i realized that versatility has its price. And only Typescript can pay it!&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#static-vs-dynamically-typed-languages"&gt;
  &lt;/a&gt;
  Static vs. dynamically typed languages
&lt;/h1&gt;

&lt;p&gt;Javascript is a dynamically typed language that means that you dont specify a type for variables or functions. Javascript takes care of that. The type can change &lt;strong&gt;AFTER&lt;/strong&gt; compile time (at the runtime).&lt;/p&gt;

&lt;p&gt;This means you never know for sure if you assign a number to a variable if this variable really holds a number during the lifetime of the program. This can lead to really awkward errors.&lt;/p&gt;

&lt;p&gt;For example this is valid Javascript Code:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2 + "2" = "22"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Seems weird if you ask me.&lt;/p&gt;

&lt;p&gt;Typescript on the other hand is a static typed language where you define the type at compile time while you are coding. This means you get immediate feedback from your IDE when you try to assign a string to an integer variable for example. This reduces error and unwanted behavior to almost zero!&lt;/p&gt;

&lt;p&gt;The second argument for static typed languages are that the programmer can read the code better and understand it more quickly. You can see which method returns which type, which parameter is which type.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#typescript"&gt;
  &lt;/a&gt;
  Typescript
&lt;/h1&gt;

&lt;p&gt;But what is Typescript?&lt;br&gt;
 &lt;a href="https://www.typescriptlang.org/"&gt;Typescript&lt;/a&gt; is a superset of Javascript and was developed by Microsoft. Valid Javascript code is always valid Typescript code. And with Typescript you got many new features added to Javascript. Here are some examples:&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#types"&gt;
  &lt;/a&gt;
  Types
&lt;/h3&gt;

&lt;p&gt;The beauty of Typescript. You can give your variables, methods etc. types!&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;let myName: string = "Dany";
let myAge: number = "27";

public getPersonAge(): string {
    return this.myName;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You also can see that we can give our variables, methods etc. an access modifier like public or private to decide which is available only inside a class or also outside.&lt;/p&gt;

&lt;p&gt;And even in Typescript you can give a variable a dynamic type if you really need to. In Typescript there is the "any" type.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#object-oriented-programming"&gt;
  &lt;/a&gt;
  Object Oriented Programming
&lt;/h3&gt;

&lt;p&gt;Sure in Javascript you also can code object oriented but in Typescript ist much, much easier! You can access modifiers like mentioned above, you get classes and interfaces and much more.&lt;/p&gt;

&lt;p&gt;I really enjoy coding object oriented and its easy and fun in Typescript because you get things like mentioned above, Inheritance and such things out of the box!&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In my opinion Typescript is the better Javascript. You get a lot of cool, helpful features on top and no disadvantages at all.&lt;/p&gt;

&lt;p&gt;As most things in life it depends on the person. Some of you may like and enjoy the freedom of Javascript and dont want to bound to typed and such things. And thats okay. But for me and may others out there Typescript really helps to organize the code better and enjoy to code more object oriented which is much easier with Typescript.&lt;/p&gt;

&lt;p&gt;Stay connected to me and my content on &lt;a href="https://twitter.com/danytulumidis"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I love to improve myself every single day even if its just a tiny bit!&lt;/p&gt;

&lt;p&gt;Stay save and healthy guys!&lt;/p&gt;

&lt;p&gt;And as always: develop yourself!&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>How to Build Your Own Voice Call API in Android?</title>
      <author>Deepika Manoharan</author>
      <pubDate>Sat, 17 Apr 2021 08:42:09 +0000</pubDate>
      <link>https://dev.to/deepikamanoharan/how-to-build-your-own-voice-call-api-in-android-33ac</link>
      <guid>https://dev.to/deepikamanoharan/how-to-build-your-own-voice-call-api-in-android-33ac</guid>
      <description>&lt;p&gt;&lt;strong&gt;Let‚Äôs Explore!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Do you desire to build a voice call application in android?&lt;/p&gt;

&lt;p&gt;Peeking around but still confused! Come on, Don‚Äôt lose hope!&lt;/p&gt;

&lt;p&gt;This is your place to explore for the exceptional. Let‚Äôs dive deep and know how to build a simple android Voice calling app?&lt;/p&gt;

&lt;p&gt;Before getting into this exciting journey, it‚Äôs salient to have some understanding about what the Voice Calling API is all about?&lt;/p&gt;

&lt;h2&gt;&lt;strong&gt;What is Voice Call API and How Does it Works?&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xBvyTQSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pnpln9bgl44g8wkq3km.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xBvyTQSo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2pnpln9bgl44g8wkq3km.png" alt="voice call api diagram"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well to start with, voice calling api is a tool that is used by the software developers to make and receive phone calls easily. In other words can say that it's the voice API that bridges the Public Switched Telephone Network (PSTN) and the applications get connected to the internet.&lt;/p&gt;

&lt;p&gt;This API permits the software to be built into any existing application that includes iOS, Android, and web applications, easily.&lt;/p&gt;

&lt;p&gt;Moving ahead as to how the task is being performed by this voice calling API. It is much essential to know about VoIP (Voice over internet protocol), to have a better understanding.¬†&lt;/p&gt;

&lt;p&gt;VoIP is a feature whose functionality is when added to an application, you can make and receive calls over the internet alone without interfacing with the PSTN.¬†&lt;/p&gt;

&lt;p&gt;Voice API has been built for a variety of uses from basic phone to phone calling, app to phone calling, conference calling, and much more. It is mainly to provide the developers a programmatic control over the calls.&lt;/p&gt;

&lt;h2&gt;
&lt;strong&gt;Broad Vision on Building a Voice Call API&lt;/strong&gt; &amp;amp; SDK&lt;/h2&gt;

&lt;p&gt;As we have already discussed about &lt;a href="https://www.mirrorfly.com/voice-call-solution.php"&gt;&lt;span&gt;voice call API&lt;/span&gt;&lt;/a&gt;, Android places the calls via built-in applications that are easy to make and receive calls anywhere around. Even it allows us to place calls through the app.¬†&lt;/p&gt;

&lt;p&gt;While working in the way at the back of the screen everything is about programming. This is called the action intended to proceed further, which is nonetheless &lt;span&gt;&lt;strong&gt;ACTION_CALL&lt;/strong&gt;.&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The intent object &lt;span&gt;&lt;strong&gt;ACTION_CALL&lt;/strong&gt;&lt;/span&gt; is when used and passed over proper data. It helps to launch the build-in phone call application to make the phone call. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's know how?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1: Action intent to Make a call &lt;/strong&gt; - To execute this process of calling the action used here is &lt;strong&gt;&lt;span&gt;ACTION_CALL&lt;/span&gt;&lt;/strong&gt;. And the syntax used over here to add action call:&lt;/p&gt;

&lt;pre&gt;Intent myIntent = &lt;strong&gt;new&lt;/strong&gt; Intent(Intent.ACTION_CALL); // this is for Action_call&lt;/pre&gt;

&lt;p&gt;Other than this for the same process you can also make use of &lt;strong&gt;&lt;span&gt;ACTION_DIAL&lt;/span&gt;&lt;/strong&gt;,&lt;/p&gt;

&lt;pre&gt;Intent myDialIntent = &lt;strong&gt;new&lt;/strong&gt; Intent(Intent.ACTION_DIAL); // this is for Action_Dial&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;STEP 2:&lt;/strong&gt; &lt;strong&gt;Data Intent to Make a call &lt;/strong&gt;- For instance, if there is a need to make a call let us say -91-1234234679. We need to set the number using&lt;span&gt; &lt;/span&gt;&lt;strong&gt;&lt;span&gt;setData&lt;/span&gt;&lt;/strong&gt; in tel, this is the URL as been given below:&lt;/p&gt;

&lt;pre&gt;myIntent.setData(Uri.parse("tel:91-123-456-7890"));&lt;/pre&gt;

&lt;p&gt;And in case if we want to use take the number from the user, then the &lt;strong&gt;&lt;span&gt;getData&lt;/span&gt;&lt;/strong&gt; would be something like the below from the user:&lt;/p&gt;

&lt;pre&gt;myIntent.setData(Uri.parse("tel:"+text_Phone.getText().toString()));startActivity(myIntent);&lt;/pre&gt;

&lt;h2&gt;&lt;strong&gt;Explore Voice Calling APIs Most Common Calling Scenarios&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Let's have a look at some of the common scenarios, How does &lt;a href="https://blog.contus.com/clubhouse-drop-in-audio-chat-app"&gt;&lt;span&gt;voice call apps&lt;/span&gt;&lt;/a&gt; use the API and have control over them? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;These three scenarios can get the most&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Answer the call&lt;/li&gt;
&lt;li&gt;Accommodating a call&lt;/li&gt;
&lt;li&gt;Ending a Call&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;1.&lt;strong&gt;Answer the Call&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Before making a call from your android mobile you must ensure that there is no call being executed at that particular moment.¬†&lt;/p&gt;

&lt;p&gt;This is so as because the telecom subsystem provides certain constraints when it comes to active calls in other apps. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Let's consider the two cases:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I. No other app are actively on call:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Once your App receives a call&lt;/li&gt;
&lt;li&gt;Call notification will be sent via &lt;strong&gt;&lt;span&gt;addNewIncomingCall(PhoneAccountHandle, Bundle)&lt;/span&gt;&lt;/strong&gt; to the telecom subsystem.&lt;/li&gt;
&lt;li&gt;This subsystem will then bind to your app's &lt;strong&gt;&lt;span&gt;ConnectionService&lt;/span&gt;&lt;/strong&gt; implementation. With that a new instance of Connection class takes place using &lt;span&gt;&lt;strong&gt;onCreateIncomingConnection&lt;/strong&gt;&lt;/span&gt;&lt;strong&gt;&lt;span&gt;(PhoneAccountHandle, ConnectionRequest)&lt;/span&gt;&lt;/strong&gt;&lt;span&gt;.&lt;/span&gt;
&lt;/li&gt;
&lt;li&gt;Later on this telecom subsystem informs the app and shows the incoming calls to users &lt;strong&gt;&lt;span&gt;onShowIncomingCallUi()&lt;/span&gt;.&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Once the user accepts the incoming call, it gets set to &lt;strong&gt;&lt;span&gt;setActive()&lt;/span&gt;&lt;/strong&gt;. If not, then get &lt;strong&gt;&lt;span&gt;REJECTED&lt;/span&gt;&lt;/strong&gt; with &lt;strong&gt;&lt;span&gt;setDisconnected(DisconnectCause)&lt;/span&gt;&lt;/strong&gt; execution, followed by the &lt;span&gt;&lt;strong&gt;Destroy()&lt;/strong&gt; &lt;/span&gt;method.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;II. Active Calls that other App has can't be kept on Hold:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sometimes, it does happen that some important call needs to be attended and can't be put on hold. In such cases the things are as follows:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As soon as an incoming call receives a new call over the voice call app.&lt;/li&gt;
&lt;li&gt;The notification will be sent to the telecom subsystem as Call &lt;strong&gt;a&lt;span&gt;ddNewIncomingCall&lt;/span&gt;&lt;span&gt;(PhoneAccountHandle, Bundle)&lt;/span&gt;&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;This subsystem binds to your app's &lt;strong&gt;&lt;span&gt;ConnectionService&lt;/span&gt;&lt;/strong&gt; implementation. It later on requests a new instance over the connecting objects that have been used, &lt;strong&gt;&lt;span&gt;onCreateIncomingConnection&lt;/span&gt;&lt;span&gt;(PhoneAccountHandle, ConnectionRequest)&lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Now, it's the telecom subsystem that displays the incoming call on UI.&lt;/li&gt;
&lt;li&gt;If the user tends to accept the call, this subsystem calls upon &lt;span&gt;&lt;strong&gt;onAnswer()&lt;/strong&gt; &lt;/span&gt;method. Thus, indicates the telecom subsystem as the setted¬† call is as &lt;strong&gt;&lt;span&gt;setActive()&lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If in turn the user rejects the call, this subsystem calls upon the &lt;span&gt;&lt;strong&gt;onReject()&lt;/strong&gt; &lt;/span&gt;method. Then passes on the message as &lt;strong&gt;&lt;span&gt;REJECTED&lt;/span&gt;&lt;/strong&gt; by setting the call as &lt;strong&gt;&lt;span&gt;setDisconnected&lt;/span&gt;&lt;span&gt;(DisconnectCause)&lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;And the later will be called as &lt;strong&gt;&lt;span&gt;Destroy()&lt;/span&gt;&lt;/strong&gt; method&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, accommodating a call or placing a call is all about something that we are supposed to handle when the call cannot be connected due to some constraints that are imposed by the &lt;a href="https://en.wikipedia.org/wiki/Business_Process_Framework_(eTOM)"&gt;telecom framework&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In general, if we want to place a call we must follow the below things&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;First must initiate the call via application.&lt;/li&gt;
&lt;li&gt;Use the method &lt;strong&gt;&lt;span&gt;placeCall&lt;/span&gt;&lt;span&gt;(call, bundle)&lt;/span&gt;&lt;/strong&gt; and then intimate the telecom subsystem about the new call. Now the rest of parameter would be as follows:&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;Here, the &lt;strong&gt;Uri&lt;/strong&gt; parameter represents the address of the callee. For numbers must use &lt;strong&gt;tel:&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;Well, the parameters give information about the application. All this is done by adding the &lt;strong&gt;&lt;span&gt;phoneAccountHandle&lt;/span&gt; &lt;/strong&gt;object of the app to &lt;strong&gt;&lt;span&gt;EXTRA_PHONE_ACCOUNT_HANDLE&lt;/span&gt;&lt;/strong&gt; extra.&lt;/li&gt;
&lt;li&gt;These parameters can also specify if the bundle includes video by executing &lt;strong&gt;&lt;span&gt;EXTRA_START_CALL_WITH_VIDEO_STATE &lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;On the whole, this telecom subsystem binds to the voice call app's &lt;strong&gt;ConnectService&lt;/strong&gt; implementation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;i) If in case the app is unable to call, the subsystem invokes: &lt;span&gt;onCreateOutgoingConnectionFailed&lt;/span&gt;&lt;span&gt;(PhoneAccountHandle, ConnectionRequest)&lt;/span&gt;&lt;/strong&gt;. It generates a message to the application as the call can't be set.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ii) But if the app is able to make a call, then it will invoke: &lt;span&gt;onCreateOutgoingConnectionFailed&lt;/span&gt;&lt;span&gt;(PhoneAccountHandle, ConnectionRequest)&lt;/span&gt;&lt;/strong&gt; specifying the application as the call can't be set at the first place instantly make the update by activating the call, invoke &lt;strong&gt;setActive()&lt;/strong&gt; to inform telecom subsystem about the same.&lt;/p&gt;

&lt;p&gt;Once the call get connected, we would need to end the call at some stage, in that place to end the session, we need to do the following,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Call the method &lt;strong&gt;&lt;span&gt;setDisconnected&lt;/span&gt;&lt;span&gt;(DisconnectCause)&lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;If in case the call gets terminated by the user &lt;strong&gt;&lt;span&gt;LOCAL&lt;/span&gt; &lt;/strong&gt;parameter will be executed. Similarly, the parameter &lt;strong&gt;&lt;span&gt;REMOTE&lt;/span&gt; &lt;/strong&gt;will be executed on if the call is disconnected by a third party.&lt;/li&gt;
&lt;li&gt;Once done the entire process is followed by the parameter &lt;strong&gt;&lt;span&gt;destroy()&lt;/span&gt;&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;&lt;strong&gt;Steps to Build Your Voice Call API in Android&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1 : &lt;/strong&gt;We have to begin with creating a new project by filling in the details. Then that needs to be opened by &lt;strong&gt;&lt;span&gt;activity_main,xml file&lt;/span&gt;&lt;/strong&gt;, and thus defines the layout as given below:&lt;/p&gt;

&lt;pre&gt;
xmlns:android="http://schemas.android.com/apk/res/android"
  xmlns:tools="http://schemas.android.com/tools"
  android:orientation="vertical"    android:layout_width="match_parent"
  android:layout_height="match_parent"&amp;gt;
      android:id="@+id/textView2"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_centerHorizontal="true"
      android:layout_marginLeft="100dp"
      android:layout_marginTop="100dp"
      android:fontFamily="@font/aclonica"
      android:text="DataFlair "
      android:textColor="@color/colorPrimaryDark"
      android:textSize="50dp" /&amp;gt;
      android:id="@+id/fstTxt"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_marginLeft="100dp"
      android:layout_marginTop="100dp"
      android:fontFamily="@font/acme"
      android:text="Please Enter the Mobile No"
      android:textColor="#0F8B80"
      android:textSize="20dp" /&amp;gt;
      android:id="@+id/mblTxt"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_marginLeft="100dp"
      android:ems="10"
      android:hint="Enter the number here"
      android:textColor="#84E2DB"
      tools:layout_marginTop="20dp"&amp;gt;
      android:id="@+id/btnCall"
      android:layout_width="wrap_content"
      android:layout_height="wrap_content"
      android:layout_marginLeft="150dp"
      android:layout_marginTop="20dp"
      android:text="Dial" /&amp;gt;
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step 2: &lt;/strong&gt;Now this is followed by coding as in &lt;strong&gt;&lt;span&gt;mainActivity.java file&lt;/span&gt;&lt;/strong&gt;. Thus follows:&lt;/p&gt;

&lt;pre&gt;
package com.DataFlair.callexample;
import android.Manifest;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
public &lt;strong&gt;class&lt;/strong&gt; MainActivity &lt;strong&gt;extends&lt;/strong&gt; AppCompatActivity {
¬†¬†private EditText text_Phone;
¬†¬†private Button b_utton;
¬†¬†@Override
¬†¬†protected &lt;strong&gt;void&lt;/strong&gt; onCreate(Bundle savedInstanceState) {
¬†¬†¬†¬†¬†¬†super.onCreate(savedInstanceState);
¬†¬†¬†¬†¬†¬†setContentView(R.layout.activity_main);
¬†¬†¬†¬†¬†¬†text_Phone = (EditText) findViewById(R.id.mblTxt);
¬†¬†¬†¬†¬†mybutton = (Button) findViewById(R.id.btnCall);
¬†¬†¬†¬†¬†mybutton.setOnClickListener(&lt;strong&gt;new&lt;/strong&gt; View.OnClickListener() {
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†@Override
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†public &lt;strong&gt;void&lt;/strong&gt; onClick(View v) {
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†callPhoneNumber();
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†}
¬†¬†¬†¬†¬†¬†});
¬†¬†}
¬†¬†@Override
¬†¬†public &lt;strong&gt;void&lt;/strong&gt; onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
¬†¬†¬†¬†¬†¬†&lt;strong&gt;if&lt;/strong&gt; (requestCode == 101) {
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†&lt;strong&gt;if&lt;/strong&gt; (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†callPhoneNumber();
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†}
¬†¬†¬†¬†¬†¬†}
¬†¬†}
¬†¬†public &lt;strong&gt;void&lt;/strong&gt; callPhoneNumber() {
¬†¬†¬†¬†¬†¬†&lt;strong&gt;try&lt;/strong&gt; {
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†&lt;strong&gt;if&lt;/strong&gt; (Build.VERSION.SDK_INT &amp;gt; 22) {
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†&lt;strong&gt;if&lt;/strong&gt; (ActivityCompat.checkSelfPermission(&lt;strong&gt;this&lt;/strong&gt;, Manifest.permission.CALL_PHONE) !=PackageManager.PERMISSION_GRANTED) {
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†ActivityCompat.requestPermissions(MainActivity.this, &lt;strong&gt;new&lt;/strong&gt; String[]{
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†Manifest.permission.CALL_PHONE}, 101);
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†&lt;strong&gt;return&lt;/strong&gt;;
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†}
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†Intent callIntent = &lt;strong&gt;new&lt;/strong&gt; Intent(Intent.ACTION_CALL);
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†callIntent.setData(Uri.parse("tel:" + text_Phone.getText().toString()));
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†startActivity(callIntent);
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†} &lt;strong&gt;else&lt;/strong&gt; {
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†Intent callIntent = &lt;strong&gt;new&lt;/strong&gt; Intent(Intent.ACTION_CALL);
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†callIntent.setData(Uri.parse("tel:" + text_Phone.getText().toString()));
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†startActivity(callIntent);
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†}
¬†¬†¬†¬†¬†¬†} &lt;strong&gt;catch&lt;/strong&gt; (Exception ex) {
¬†¬†¬†¬†¬†¬†¬†¬†¬†¬†ex.printStackTrace();
¬†¬†¬†¬†¬†¬†}
¬†¬†}
}
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step 3:&lt;/strong&gt; This is followed by &lt;span&gt;&lt;strong&gt;Manifest.xml&lt;/strong&gt;&lt;/span&gt; file:&lt;/p&gt;

&lt;pre&gt; 

  uses-permission android:name="android.permission.CALL_PHONE" /&amp;gt;
  application
      android:allowBackup="true"
      android:icon="@mipmap/ic_launcher"
      android:label="@string/app_name"
      android:roundIcon="@mipmap/ic_launcher_round"
      android:supportsRtl="true"
      android:theme="@style/AppTheme"&amp;gt;
      activity android:name=".MainActivity"&amp;gt;
          intent-filter
              action android:name="android.intent.action.MAIN" 
              category android:name="android.intent.category.LAUNCHER" 
         intent-filter
      activity
      meta-data
          android:name="preloaded_fonts"
          android:resource="@array/preloaded_fonts" 
  application
manifest
&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Step 4: &lt;/strong&gt;As the final step, the application needs to be commanded as &lt;strong&gt;‚Äú&lt;span&gt;run.‚Äù&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;a) The outcome of the application will be somewhat like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7Xc97wTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3qak0rh0ggwg909cfyn.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7Xc97wTU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g3qak0rh0ggwg909cfyn.jpg" alt="build a voice call api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;b) Once done, need to enter the phone number&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WIgJ5IjV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4e9z1guofz0yirrfyqwy.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WIgJ5IjV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4e9z1guofz0yirrfyqwy.jpg" alt="voice calling api &amp;amp;amp; sdk"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;c) As soon as the phone number has been entered, it will ask for the permission to move forward&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--42303f7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gndrxsya2jnugps6uuph.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--42303f7k--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gndrxsya2jnugps6uuph.jpg" alt="voice call api"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;d) Once, the above steps are completed automatically the call would be placed&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--a9RypLXE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qcekg5fme35bii3gnynq.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--a9RypLXE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qcekg5fme35bii3gnynq.jpg" alt="voice api for android"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Epilogue&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now you must have gotten a better insight about the entire process with a detailed explanation as how to build a voice call API for any Android studio. With this now it's your turn to implement the same and get to explore the outcome with flying colors.&lt;/p&gt;

&lt;p&gt;But still, if you think you need some clarification over the same. Let us know in the comment section to guide you further with pleasure!¬†&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span&gt;Code &amp;amp; Image References Taken From:&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1. &lt;a href="https://data-flair.training/blogs/calling-app-in-android/"&gt;Data Flair.Training&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;2. &lt;a href="https://www.c-sharpcorner.com/article/how-to-create-a-calling-application-in-android-using-android-studio/"&gt;C Sharpcorner.com&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;3. &lt;a href="https://developer.android.com/guide/topics/connectivity/telecom/selfManaged"&gt;Developer Android.com&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;4. &lt;a href="https://www.dbswebsite.com/blog/trends-in-voice-search/#:~:text=Current%20statistics%20show%20that%2041,voice%20technology%20on%20their%20device&amp;amp;text=."&gt;DBS Website.com &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5. &lt;a href="https://professional-blogger.medium.com/integrate-a-voice-call-api-in-various-industries-in-app-communication-system-e3f2a1ffcc7"&gt;Integrate Voice Call API &amp;amp; SDK&lt;/a&gt;&lt;/p&gt;

</description>
      <category>voicecallapi</category>
      <category>buildvoicecallapi</category>
      <category>apivoicecall</category>
      <category>voicecallapiandsdk</category>
    </item>
    <item>
      <title>Understanding the React useState() Hook</title>
      <author>Raunaq </author>
      <pubDate>Sat, 17 Apr 2021 07:22:43 +0000</pubDate>
      <link>https://dev.to/raunaqchawhan/understanding-the-react-usestate-hook-4d2d</link>
      <guid>https://dev.to/raunaqchawhan/understanding-the-react-usestate-hook-4d2d</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/docs/hooks-intro.html"&gt;Hooks&lt;/a&gt; were introduced in React &lt;strong&gt;v16.8.0&lt;/strong&gt;. Prior to that, if we had written a functional component and wanted to add &lt;code&gt;state&lt;/code&gt; or make use of &lt;code&gt;lifecycle&lt;/code&gt; methods to perform operations such as data fetching and manual DOM manipulation, the functional component had to be converted into class based component.&lt;/p&gt;

&lt;p&gt;However, introduction of Hooks made adding state and performing those operations in functional component possible. It also helped in keeping the mutually related code together rather than splitting the code based on lifecycle methods. Hooks don't work inside classes rather they let us work with React without the need for class.&lt;/p&gt;

&lt;p&gt;In this post, we will learn about the built-in &lt;strong&gt;useState()&lt;/strong&gt; Hook and how to use it in a functional component. We will also understand the difference in initializing, updating and accessing the state in class component as compared to functional component.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#rules-of-hooks"&gt;
  &lt;/a&gt;
  Rules of Hooks
&lt;/h2&gt;

&lt;p&gt;Following are the two rules of Hooks that needs to be followed:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Hooks should always be called at the top level of the React function which means it shouldn't be called inside loops, conditionals or nested functions. This is done to ensure that Hooks are called in the same order each time a component renders.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Never call Hooks from regular JavaScript functions. Instead, call it from React function components or &lt;a href="https://reactjs.org/docs/hooks-custom.html"&gt;custom Hooks&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#usestate-hook"&gt;
  &lt;/a&gt;
  useState() Hook
&lt;/h2&gt;

&lt;p&gt;As the name suggests, &lt;code&gt;useState&lt;/code&gt; Hook is used to add state to function components.&lt;/p&gt;

&lt;p&gt;The syntax for useState is as below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;initialState&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// assigns initialState to state&lt;/span&gt;
&lt;span class="c1"&gt;// setState function is used to update the state&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;useState() returns an &lt;code&gt;array&lt;/code&gt; with exact two values. Array destructuring can be used to store these values in different variables.&lt;/p&gt;

&lt;p&gt;The first value returned represents the state and the second value returned is a function that can be used to update the state. You can give any name to these two variables. For our understanding, we'll name the state variable as &lt;code&gt;state&lt;/code&gt; and the function that updates it as &lt;code&gt;setState&lt;/code&gt;. You can follow this convention of assigning any name to state variable and then prefixing it with 'set' to form the function name.&lt;/p&gt;

&lt;p&gt;The 'initialState' argument passed to useState sets the initial state. On subsequent re-renders, state is updated through the &lt;code&gt;setState&lt;/code&gt; function returned from the &lt;code&gt;useState&lt;/code&gt; Hook.&lt;/p&gt;

&lt;p&gt;Now, let's take a look at the following code block which represents a &lt;strong&gt;class component&lt;/strong&gt; with state&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Component&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hot&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; 
            &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cloudy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;})}&lt;/span&gt; 
            &lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;state&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="nx"&gt;Change&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When the above class component gets rendered to the screen, you get a paragraph &lt;code&gt;The weather is hot&lt;/code&gt; with a 'Change weather' button below it.&lt;/p&gt;

&lt;p&gt;On clicking the button, the component re-renders and output changes to &lt;code&gt;The weather is cloudy&lt;/code&gt; with the button getting disabled.&lt;/p&gt;

&lt;p&gt;In a class component, you can initialize state in the constructor by using &lt;code&gt;this.state&lt;/code&gt;. In the above example, it is initialized to &lt;code&gt;{weather: 'hot', disabled: false}&lt;/code&gt;. Any update to state is done through &lt;code&gt;this.setState&lt;/code&gt; and respective values can be accessed using &lt;code&gt;this.state.weather&lt;/code&gt; and &lt;code&gt;this.state.disabled&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The state is defined as an object and all the state updates done through &lt;code&gt;this.setState&lt;/code&gt; is merged into that object as class component can have a single state object only. Therefore, &lt;code&gt;{weather: 'cloudy', disabled: !this.state.disabled}&lt;/code&gt; gets merged with the previous value and state is updated. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;In order to initialize, update or access any value from state in a class component, you always need to use &lt;code&gt;this&lt;/code&gt; keyword.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, let's take a look at the following &lt;strong&gt;functional component&lt;/strong&gt; using the &lt;strong&gt;State Hook&lt;/strong&gt; that works the same way as the earlier class component&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// import useState Hook from "react" package&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setWeather&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;hot&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;// "weather" value initialized to "hot"&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setDisabled&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// "disabled" value initialized to "false" &lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;The&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setWeather&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;cloudy&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;// setWeather('cloudy') updates the "weather" to "cloudy"&lt;/span&gt;
        &lt;span class="nx"&gt;setDisabled&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;// setDisabled(!disabled) updates the "disabled" to "true"&lt;/span&gt;
      &lt;span class="p"&gt;}}&lt;/span&gt; &lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Change&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In order to use state in functional component, you first need to import &lt;code&gt;useState&lt;/code&gt; Hook from React.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Unlike class component where you can have a single state object only, functional component allows you to have multiple state variables. Here, &lt;code&gt;weather&lt;/code&gt; and &lt;code&gt;disabled&lt;/code&gt; state variables are initialized to the argument passed to &lt;code&gt;useState&lt;/code&gt; Hook.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;This argument can be of any type such as number, string, array or object unlike class component where state is initialized to object only.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On clicking the button, &lt;code&gt;setWeather&lt;/code&gt; and &lt;code&gt;setDisabled&lt;/code&gt; functions are called with new state values passed to it. React will then re-render the component by passing the new &lt;code&gt;weather&lt;/code&gt; and &lt;code&gt;disabled&lt;/code&gt; values to it.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In a functional component, updating a state value always replaces the previous value unlike class component where state updates are merged.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In the above example, new state values are not dependent on previous state values. Therefore, we directly pass new value to state update function. In scenarios where new state value depends on previous state value, you can use the following functional update format to update the state.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;setState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;previousStateValue&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// newStateValue determined using previousStateValue&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;newStateValue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This functional update format is used to update the state depending on the previous state value.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;In this post, you learnt about the &lt;strong&gt;useState()&lt;/strong&gt; Hook that makes it possible to use state in a functional component without transforming it into a class component. You learnt how to initialize, update and access the state variables in a functional component using Hooks.&lt;/p&gt;




&lt;p&gt;Thank you for taking the time to read this post üòä&lt;br&gt;
Hope this post helped you!! &lt;strong&gt;Please share&lt;/strong&gt; if you liked it.&lt;/p&gt;

&lt;p&gt;I would love to connect with you on &lt;a href="https://twitter.com/_raunaq_"&gt;Twitter&lt;/a&gt;.&lt;br&gt;
Do share your valuable feedback and suggestions you have for me üëã&lt;/p&gt;

</description>
      <category>react</category>
      <category>programming</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>TDD debugging</title>
      <author>Eder D√≠az</author>
      <pubDate>Sat, 17 Apr 2021 06:30:22 +0000</pubDate>
      <link>https://dev.to/ederchrono/tdd-debugging-37hb</link>
      <guid>https://dev.to/ederchrono/tdd-debugging-37hb</guid>
      <description>&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@bartchristiaanse?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Bart Christiaanse&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/bug-red?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We all have been through the following scenario: you are getting the first sip of your coffee when someone reports a bug. Your first reaction is probably to run the project and type some logs to see some data and try to understand what's happening.&lt;/p&gt;

&lt;p&gt;If you are like the 80% of developers (I made up this number), you don't have any kind of tests and you are basically making tweaks "hoping" that nothing else breaks while you fix the problem, and if that happens you end up spending way more time than you expected fixing these chained bugs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W9jYmOVU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9lp8r55vfrgfdjjpl2b.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W9jYmOVU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/j9lp8r55vfrgfdjjpl2b.jpeg" alt="let's go into a 20 minute adventure"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let's be clear, I'm not here to tell you that you must have tests and great code coverage, every project is different and you could have more than one reason to not have tests. Probably you didn't work on that functionality, you thought that the behavior was so simple that tests were overkill or you had to rush to make it before the end of the sprint.&lt;/p&gt;

&lt;p&gt;Whatever is the reason, this problem is giving you a second chance to add tests that will save you and future developers a lot of time. I like to think of tests as &lt;strong&gt;smoke detectors&lt;/strong&gt; in a house and the bug is a fire that appeared, you might be able to put out the fire but if you don't have enough smoke detectors, you won't know if other fires are cooking somewhere else until is too late.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bxcHg6DG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/980h8l1l9mxwmhd6xxu9.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bxcHg6DG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/980h8l1l9mxwmhd6xxu9.jpg" alt="fire"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@fourcolourblack?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Adam Wilson&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/fire?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;
  &lt;a href="#a-realworld-example"&gt;
  &lt;/a&gt;
  A real-world example
&lt;/h1&gt;

&lt;p&gt;A teammate reported that URL inputs in our forms where accepting strings that weren't a valid URL. Basically you could type something like &lt;code&gt;foobarhttps://google.com,fizbuzz&lt;/code&gt; and validation passed. We managed to identify the culprit:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;^$&lt;/span&gt;&lt;span class="se"&gt;)&lt;/span&gt;&lt;span class="sr"&gt;|&lt;/span&gt;&lt;span class="se"&gt;((&lt;/span&gt;&lt;span class="sr"&gt;http&lt;/span&gt;&lt;span class="se"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;s&lt;/span&gt;&lt;span class="se"&gt;)?&lt;/span&gt;&lt;span class="sr"&gt;:&lt;/span&gt;&lt;span class="se"&gt;\/\/&lt;/span&gt;&lt;span class="sr"&gt;.&lt;/span&gt;&lt;span class="se"&gt;)?(&lt;/span&gt;&lt;span class="sr"&gt;www&lt;/span&gt;&lt;span class="se"&gt;\.)?[&lt;/span&gt;&lt;span class="sr"&gt;-a-zA-Z0-9@:%._+~#=&lt;/span&gt;&lt;span class="se"&gt;]{2,256}\.[&lt;/span&gt;&lt;span class="sr"&gt;a-z&lt;/span&gt;&lt;span class="se"&gt;]{2,6}\b([&lt;/span&gt;&lt;span class="sr"&gt;-a-zA-Z0-9@:%_+.~#?&amp;amp;&lt;/span&gt;&lt;span class="se"&gt;/&lt;/span&gt;&lt;span class="sr"&gt;=&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;*&lt;/span&gt;&lt;span class="se"&gt;))&lt;/span&gt;&lt;span class="sr"&gt;/g&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;found&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Someone basically copy/pasted a regex from somewhere, tested it against some URLs and non URLs, and thought it worked. After punching that regex into &lt;a href="https://www.regextester.com/"&gt;regextester.com&lt;/a&gt;, it's clear that the pattern is not strict and it's kind of an &lt;em&gt;includes&lt;/em&gt; pattern.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G3k6r6Zh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssjqlfes75jh0qefqmwu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G3k6r6Zh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ssjqlfes75jh0qefqmwu.png" alt="regex are hard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After some regex tweaking we figured out a way to make it more strict and ended up like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/(^((http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_+.~#?&amp;amp;/=]*))$)/g&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We tested it on the regex tool and seems to work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gJp4TdaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v26fx3ww5pa2oko5ngrg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gJp4TdaU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v26fx3ww5pa2oko5ngrg.png" alt="solution"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we just replace that line of code and ship it right? &lt;strong&gt;WRONG!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before making any code change we write some tests for the scenarios that we know should be working:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;validUrl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should not return errors with an empty string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should not return errors with a well formed URL&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://google.com&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should return an error with something that is not a url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;not-a-url&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should return an error if empty spaces ares used&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;  &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you don't want to read/understand that code basically we are checking that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When it receives an empty string it's valid (we have a requiredValidUrl function for when it should not)&lt;/li&gt;
&lt;li&gt;A well-formed URLs is valid&lt;/li&gt;
&lt;li&gt;Something that is not a URL should return false&lt;/li&gt;
&lt;li&gt;Using spaces isn't allowed either&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now we add the new failing test case, a URL with extra text should fail:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;should return an error when a url has extra text&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;actual&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;validUrl&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;somethinghttp://google.com,other-thing&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;actual&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Here's a &lt;a href="https://codepen.io/ederdiaz/pen/XWpBpNr?editors=0010"&gt;codepen&lt;/a&gt; so that you can follow along&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then we run the tests, they all pass except the last one because we haven't changed the regex and that's great because we confirmed our assumptions and we are now in RED on the TDD cycle.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--DmqQ3N_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5uk6otzis6g384cf8doy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--DmqQ3N_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5uk6otzis6g384cf8doy.png" alt="Red"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;failing test as expected&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2bUj5oX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26tdj40bmlnmw09fb27h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2bUj5oX1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/26tdj40bmlnmw09fb27h.png" alt="TDD cycle"&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;TDD cycle&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We replace the regex with the new one &lt;code&gt;/(^((http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_+.~#?&amp;amp;/=]*))$)/g&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Remember this was the only thing we thought we needed to fix the bug, and then we run the tests again expecting that all pass, except they don't.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rvGbo-Yr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek2rlx2arf2yv936c8u5.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rvGbo-Yr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ek2rlx2arf2yv936c8u5.png" alt="Red again"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Surprisingly our regex is now so strict that it doesn't allow for empty strings, but our &lt;strong&gt;smoke detector&lt;/strong&gt; prevented us from sending this fire we hadn't noticed. This would have been a waste of time for us, testers, project manager and in a worst case scenario could have prevented a launch or caused a catastrophic problem if it deployed.&lt;br&gt;
Since we need to take care of an edge case we decide to short circuit it from the start instead of keep tweaking the regex:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="c1"&gt;// empty string should be valid&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OteWx0ec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4pec2ntqu2vc1a4kunh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OteWx0ec--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/r4pec2ntqu2vc1a4kunh.png" alt="Green"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now we are green! We can continue with the refactoring and send our change more confidently.&lt;/p&gt;

&lt;p&gt;Of course, this isn't a silver bullet, there might be more edge cases or changes of requirements. The advantage is that when that happens, you or any other dev that needs to maintain the project can keep adding &lt;strong&gt;smoke detectors&lt;/strong&gt; and be confident that their changes are putting out fires and not reigniting old ones.&lt;/p&gt;

</description>
      <category>productivity</category>
      <category>javascript</category>
      <category>testing</category>
    </item>
    <item>
      <title>Use Reseter.css Instead Of Normalize and Reset.css. To Improve Cross Browser Experience.</title>
      <author>Krish Dev DB</author>
      <pubDate>Sat, 17 Apr 2021 06:26:17 +0000</pubDate>
      <link>https://dev.to/krishdevdb/use-reseter-css-instead-of-normalize-and-reset-css-to-improve-cross-browser-experience-4113</link>
      <guid>https://dev.to/krishdevdb/use-reseter-css-instead-of-normalize-and-reset-css-to-improve-cross-browser-experience-4113</guid>
      <description>&lt;p&gt;With the current web production, I think that the existing Reset.css and Normalize.css have fewer features and lack many things. I am introducing you to a new CSS Normalizer created as a futuristic alternative to normalize.css and reset.css.&lt;/p&gt;

&lt;p&gt;Reseter.css has customizable browser support, which is by default all not dead browsers. It has also taken accessibility into concern. It's also packed with modern CSS techniques.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#features-of-resetercss"&gt;
  &lt;/a&gt;
  Features of Reseter.css
&lt;/h2&gt;

&lt;p&gt;It unifies all of your browser default styles by redefining premade styles. That's a big difference where normalize tries to preserve and reseter.css redefines for even more browser support. Normalize works with the browsers kept in mind while building it. Reseter.css supports every single browser. Reseter.css improves cross-browser support. &lt;/p&gt;

&lt;p&gt;Fixed bugs and browser inconsistencies&lt;br&gt;
Reboots various element styles&lt;br&gt;
Available in Sass, Scss, Less, Stylus, Styled Components (js, mjs, ts)&lt;br&gt;
The file size is 2.59Kb&lt;br&gt;
Includes normalization of all elements&lt;br&gt;
box-sizing: border-box; set&lt;br&gt;
Validated on all browsers using BrowserStack&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eG4oCAIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639406018/tPvFRnOBQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eG4oCAIE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639406018/tPvFRnOBQ.png" alt="Reseter.css"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BPEuf5Md--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639508069/PKzGVnzNE.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BPEuf5Md--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639508069/PKzGVnzNE.png" alt="Reseter.css Compared To Other CSS Reset"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Down is the result of the same HTML file of 3 browsers. All of the chrome's headings are bolded nicely. Firefox ones are also bolded, but IE ones are bolded too much. The font on paragraphs is also bolded in IE. The border of the button is blue in IE. There's A little thinner border on buttons in Firefox. Below are only &lt;strong&gt;three browsers&lt;/strong&gt; and &lt;strong&gt;5 HTML tags&lt;/strong&gt;. There are more than 100 browsers available to the public. There are plenty of tags there too. No one knows how many of them are not public. 1000's versions of these 100's of browsers are available. How to keep us with these browsers? The answer is &lt;strong&gt;Reseter.css&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6sVmL9X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639682600/4T-OtBk37.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6sVmL9X8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1618639682600/4T-OtBk37.png" alt="Difference In Browsers"&gt;&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://cdn.jsdelivr.net/gh/krishdevdb/reseter.css/css/reseter.min.css&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Unpkg, CDNJS, Github, and many more CDNs are also available. Check the &lt;a href="https://github.com/krishdevdb/reseter.css"&gt;GitHub Repository&lt;/a&gt;. Of course, the files can also be downloaded and used, and package managers such as NPM, Yarn, PNPM, and Bower are also available.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# NPM&lt;/span&gt;
npm &lt;span class="nb"&gt;install &lt;/span&gt;reseter.css
&lt;span class="c"&gt;# YARN&lt;/span&gt;
yarn add reseter.css
&lt;span class="c"&gt;# PNPM&lt;/span&gt;
pnpm &lt;span class="nb"&gt;install &lt;/span&gt;reseter.css
&lt;span class="c"&gt;# Bower&lt;/span&gt;
bower &lt;span class="nb"&gt;install &lt;/span&gt;krishdevdb/reseter.css
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Go Check The GitHub&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/krishdevdb"&gt;
        krishdevdb
      &lt;/a&gt; / &lt;a href="https://github.com/krishdevdb/reseter.css"&gt;
        reseter.css
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      Reseter.css - A Futuristic Alternative To Normalize.css And CSS Resets
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;div&gt;
&lt;p&gt;&lt;a href="https://www.codefactor.io/repository/github/krishdevdb/reseter.css" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/a2fede2b44501f497a2691de3b8b7b11ebf8f7a9c9ea66f61947dd77dec7701f/68747470733a2f2f696d672e736869656c64732e696f2f636f6465666163746f722f67726164652f6769746875622f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d636f6465666163746f72"&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=reseter.css" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/29b708c0ed8384ab58d50b884ff2ccef2b5ecf575ed0175efbe548d6c6caef16/68747470733a2f2f696d672e736869656c64732e696f2f62756e646c6570686f6269612f6d696e7a69702f726573657465722e6373733f7374796c653d666c61742d737175617265"&gt;&lt;/a&gt; &lt;a href="https://github.com/krishdevdb/reseter.css/commits/master"&gt;&lt;img src="https://camo.githubusercontent.com/05c44c52429302f7c2f40cf932851f8fe0830c287db702e040dabe4d61e57c6c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d676974"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#contributors"&gt;&lt;img src="https://camo.githubusercontent.com/5a8ea4a11056968ed6325b3b97e4321f6d02243c0f3aacfb6285d3bcac5451d6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616c6c2d636f6e7472696275746f72732f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d676974687562"&gt;&lt;/a&gt; &lt;a href="https://travis-ci.com/github/krishdevdb/reseter.css" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/d17ce4977c6410fd6461d2c3ae1b5d32c82992515d6c1ad70fe284d5af69f10d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f6b7269736864657664622f726573657465722e6373733f7374796c653d666c61742d737175617265266c6f676f3d7472617669732d6369"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/xqh38kb6sv" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/14a89e119890ee2da249d6c8b202ea235f8da094ffb3c0dd3e257cadb7f0de00/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3831343730313738363932303931303930393f7374796c653d666c61742d737175617265266c6f676f3d646973636f7264"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;a rel="noopener noreferrer" href="https://github.com/krishdevdb/reseter.css/raw/master/logo.png"&gt;&lt;img height="100px" width="100px" src="https://res.cloudinary.com/practicaldev/image/fetch/s--LERtZEbv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/krishdevdb/reseter.css/raw/master/logo.png"&gt;&lt;/a&gt;&lt;br&gt;&lt;h1&gt;
Reseter.css&lt;/h1&gt;
&lt;h5&gt;
A CSS Reset/Normalizer&lt;/h5&gt;
   &lt;p&gt;&lt;b&gt;Reseter.css&lt;/b&gt; is an awesome CSS reset for a website. It is a great tool for any web designer. Reseter.css resets all the premade styles by the browser. It normalizes the browser's stylesheet for a better cross-browser experience.&lt;/p&gt;
   &lt;a href="https://twitter.com/intent/tweet?url=https://github.com/krishdevdb/reseter.css&amp;amp;text=Reseter.css%20helped%20me%20out%20in%20my%20website%20by%20normalizing%20everything.%20And%20Reseting%20The%20Browser%20Default%20Styles.%20Now%20My%20Website%20Looks%20The%20Same%20Across%20All%20Browsers" rel="nofollow"&gt;&lt;img alt="Twitter URL" src="https://camo.githubusercontent.com/7324ebbea2468b0720e11275d57bbce60155f408873d8ba7b0b29adc71b1c35a/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f75726c3f636f6c6f723d2532336666666666663030266c6f676f3d74776974746572267374796c653d666f722d7468652d62616467652675726c3d68747470732533412532462532466769746875622e636f6d2532466b726973686465766462253246726573657465722e637373"&gt;&lt;/a&gt;
&lt;a href="https://github.com/krishdevdb/reseter.css/stargazers"&gt;&lt;img alt="GitHub Repo stars" src="https://camo.githubusercontent.com/71f4e7fb710e6ac587c58ac7bb7c8a906b5cbe0370c982e314eaadd08d5c1a1c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6b7269736864657664622f726573657465722e6373733f6c6f676f3d476974687562267374796c653d666f722d7468652d6261646765"&gt;&lt;/a&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#quick-start"&gt;&lt;br&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
&lt;br&gt;
Join 25k People Already Using Reseter.css&lt;/h3&gt;


Table Of Contents
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#features"&gt;Features&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#resetercss-vs-normalizecss-vs-sanitizecss-vs-resetcss"&gt;&lt;em&gt;Reseter.css&lt;/em&gt; vs &lt;em&gt;Normalize.css&lt;/em&gt; vs &lt;em&gt;Sanitize.css&lt;/em&gt; vs &lt;em&gt;Reset.css&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#why-use-resetercss-must-read"&gt;Why Use Reseter.css (Must Read)&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#manual"&gt;Manual&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#codepen"&gt;CodePen&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#codesandbox"&gt;CodeSandBox&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#installation"&gt;Installation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#package-managers"&gt;Package Managers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#cdn"&gt;CDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#downloads"&gt;Downloads&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#clone-repository"&gt;Clone Repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#usage"&gt;Usage&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#import-in-css"&gt;Import In CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#link-tag"&gt;Link Tag&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#react"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#styled-components"&gt;Styled-Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#vue"&gt;Vue&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#nextjs"&gt;Next.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#get-support"&gt;Get Support&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#support-us"&gt;Support Us&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#review"&gt;Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#spread"&gt;Spread&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#sponsor"&gt;Sponsor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#authors"&gt;Authors&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#contributors"&gt;Contributors&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#supporters"&gt;Supporters&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#stargazers"&gt;Stargazers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#forks"&gt;Forks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#special-mentions"&gt;Special Mentions&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#stars"&gt;Stars&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#license"&gt;License&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#status"&gt;Status&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;
Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Adds New Better Styles For Elements&lt;/li&gt;
&lt;li&gt;Source In 4 Different Formats&lt;/li&gt;
&lt;li&gt;Reboots styles for a wide range of elements.&lt;/li&gt;
&lt;li&gt;Corrects bugs and browser inconsistencies.&lt;/li&gt;
&lt;li&gt;Sized 2.6kb&lt;/li&gt;
&lt;li&gt;Includes all normalizations&lt;/li&gt;
&lt;li&gt;Sets `box-sizing: border-box&lt;/li&gt;
&lt;li&gt;Fully tested&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krishdevdb/reseter.css/master/readme.md/#resetercss"&gt;Back To Top&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
&lt;em&gt;Reseter.css&lt;/em&gt; vs &lt;em&gt;Normalize.css&lt;/em&gt; vs &lt;em&gt;Sanitize.css&lt;/em&gt; vs &lt;em&gt;Reset.css&lt;/em&gt;
&lt;/h2&gt;


&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;br&gt;
&lt;thead&gt;
&lt;br&gt;
&lt;tr&gt;
&lt;br&gt;
&lt;th&gt;Feature&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Reseter.css&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Normalize.css&lt;/th&gt;
&lt;br&gt;
&lt;th&gt;Sanitize.css&lt;/th&gt;
&lt;br&gt;
&lt;/tr&gt;
&lt;br&gt;
&lt;/thead&gt;
&lt;br&gt;
&lt;/table&gt;&lt;/div&gt;‚Ä¶&lt;/div&gt;
&lt;br&gt;
  &lt;/div&gt;
&lt;br&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/krishdevdb/reseter.css"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;br&gt;
&lt;/div&gt;
&lt;br&gt;


</description>
      <category>webdev</category>
      <category>css</category>
      <category>showdev</category>
      <category>githunt</category>
    </item>
  </channel>
</rss>
