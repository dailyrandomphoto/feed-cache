<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>WAO: How do you measure Developers?</title>
      <author>Nathan Kallman</author>
      <pubDate>Wed, 05 May 2021 14:48:18 +0000</pubDate>
      <link>https://dev.to/kallmanation/wao-how-do-you-measure-developers-1n8d</link>
      <guid>https://dev.to/kallmanation/wao-how-do-you-measure-developers-1n8d</guid>
      <description>&lt;p&gt;&lt;em&gt;Cover photo by &lt;a href="https://unsplash.com/@michalmatlon?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Michal Matlon&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/wrong-answer?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;h1&gt;
  &lt;a href="#wrong-answers-only"&gt;
  &lt;/a&gt;
  Wrong Answers Only
&lt;/h1&gt;

&lt;p&gt;How do you measure a developer? How do you know that they're 10x or a ninja or a unicorn?&lt;/p&gt;




&lt;p&gt;Comment your wrong answer!&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
      <category>wronganswersonly</category>
    </item>
    <item>
      <title>The Land Before Internet: How everyday computer terms got their names</title>
      <author>Matt Coady</author>
      <pubDate>Wed, 05 May 2021 14:28:34 +0000</pubDate>
      <link>https://dev.to/mattcoady/the-land-before-internet-how-everyday-computer-terms-got-their-names-3bm</link>
      <guid>https://dev.to/mattcoady/the-land-before-internet-how-everyday-computer-terms-got-their-names-3bm</guid>
      <description>&lt;p&gt;3 Years ago last month I made a simple tweet then went to bed.&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
    &lt;div class="ltag__twitter-tweet__media ltag__twitter-tweet__media__two-pics"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zVJmvoEM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Dbj9s6TUQAE_VdD.jpg" alt="unknown tweet media content"&gt;
    &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--XNcoPMT_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1092579771651842049/yPll15ZW_normal.jpg" alt="Matt Coady profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Matt Coady
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @themattcoady
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      I've been working with HTML for about 20 years and just today I realized that Radio Buttons refer to actual radio buttons, where only one can be pressed at a time. 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      16:38 PM - 24 Apr 2018
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=988819505534009344" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=988819505534009344" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=988819505534009344" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;It was one of those aha "I feel like an idiot for not making that obvious connection" moments... . &lt;/p&gt;

&lt;p&gt;Well as it turns out a lot of people felt the same way because I woke up to dozens of notifications. Years later, at 1.2 million impressions it's still my most active tweet (by a long shot). In the replies, twitter user "HTeuMeuLeu" followed up with this equally interesting bit of technology naming history:&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oPMjLnDV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/Dbo0pbiWkAErHPD.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--5PP47bov--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/876098522155712514/U5EX5vLT_normal.jpg" alt="HTeuMeuLeu profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        HTeuMeuLeu
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        @hteumeuleu
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      &lt;a href="https://twitter.com/themattcoady"&gt;@themattcoady&lt;/a&gt; Do you know about uppercase and lowercase? 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      15:16 PM - 25 Apr 2018
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=989161155716374528" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=989161155716374528" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=989161155716374528" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;p&gt;Referring to the 'case' of letters used by printing press operators and the upper part of the case and lower part of the case to store the letters. &lt;/p&gt;

&lt;p&gt;This got me thinking about what other terms have a long history hiding in plain sight. Wikipedia has a list dedicated to the subject: &lt;a href="https://en.wikipedia.org/wiki/List_of_computer_term_etymologies"&gt;https://en.wikipedia.org/wiki/List_of_computer_term_etymologies&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I'm just going to pick out a few favourites:&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cursor"&gt;
  &lt;/a&gt;
  Cursor
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rmznPqQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1flkdru1lmafh2wlqtag.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rmznPqQ3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1flkdru1lmafh2wlqtag.jpg" alt="Cursor"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Cursor is Latin for 'runner.' A cursor is the name given to the transparent slide engraved with a hairline that is used for marking a point on a slide rule. The term was then transferred to computers through analogy.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#dashboard"&gt;
  &lt;/a&gt;
  Dashboard
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--YHSW8uKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrejp8q62fzuufrbs668.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YHSW8uKU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrejp8q62fzuufrbs668.png" alt="Dashboard"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Originally, the word dashboard applied to a barrier of wood or leather fixed at the front of a horse-drawn carriage or sleigh to protect the driver from mud or other debris "dashed up" (thrown up) by the horses' hooves.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#patch"&gt;
  &lt;/a&gt;
  Patch
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tCiLB_u1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u1703l7w7of89mmens3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tCiLB_u1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7u1703l7w7of89mmens3.png" alt="Patch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Historically, software suppliers distributed patches on paper tape or on punched cards, expecting the recipient to cut out the indicated part of the original tape (or deck), and patch in (hence the name) the replacement segment.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ping"&gt;
  &lt;/a&gt;
  Ping
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kx3aKrod--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qvl8bunm1ijlbfqrq0oi.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kx3aKrod--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qvl8bunm1ijlbfqrq0oi.jpeg" alt="Ping"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The author of ping, Mike Muuss, named it after the pulses of sound made by a sonar called a "ping".&lt;/p&gt;

</description>
      <category>history</category>
      <category>etymology</category>
      <category>technology</category>
      <category>ui</category>
    </item>
    <item>
      <title>Announcing NubesGen, an Open Source tool to automate Azure deployments</title>
      <author>Julien Dubois</author>
      <pubDate>Wed, 05 May 2021 14:22:07 +0000</pubDate>
      <link>https://dev.to/azure/announcing-nubesgen-an-open-source-tool-to-automate-azure-deployments-1l4a</link>
      <guid>https://dev.to/azure/announcing-nubesgen-an-open-source-tool-to-automate-azure-deployments-1l4a</guid>
      <description>&lt;p&gt;&lt;strong&gt;Going to production on Azure is only one &lt;code&gt;git push&lt;/code&gt; away&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-nubesgen"&gt;
  &lt;/a&gt;
  What is NubesGen?
&lt;/h2&gt;

&lt;p&gt;NubesGen &lt;a href="https://nubesgen.com/"&gt;https://nubesgen.com/&lt;/a&gt; is a Microsoft Open Source project, which provides a Web application that generates an Azure infrastructure graphically: you select easy-to-understand options ("an application server", "a PostgreSQL database"), and it'll generate a state-of-the-art Terraform configuration that you can import and tweak in your project.&lt;/p&gt;

&lt;p&gt;Using &lt;a href="https://github.com/microsoft/NubesGen/blob/main/docs/gitops-overview.md"&gt;GitOps practices&lt;/a&gt;, NubesGen can also fully automate applying that configuration: it provides one cloud infrastructure per branch in your project, and will build and deploy your code to this infrastructure.&lt;/p&gt;

&lt;p&gt;As a result, you can just &lt;code&gt;git push&lt;/code&gt; your code to Azure and both the infrastructure and the application deployment are handled for you. No need to go to the Azure portal, or learn how to configure everything!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#video-tour-of-nubesgen-in-less-than-15-minutes"&gt;
  &lt;/a&gt;
  Video tour of NubesGen, in less than 15 minutes
&lt;/h2&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/BHAX8BIkP-s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-state-of-the-project"&gt;
  &lt;/a&gt;
  What is the state of the project?
&lt;/h2&gt;

&lt;p&gt;NubesGen is Open Source, and uses the &lt;a href="https://github.com/microsoft/NubesGen/blob/main/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It's currently under development, but we already have a good number of people who tested it, which makes us confident to do a first technical preview release.&lt;/p&gt;

&lt;p&gt;You can already use it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is a running instance of the project at &lt;a href="https://nubesgen.com/"&gt;https://nubesgen.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;The source code is available at &lt;a href="https://github.com/microsoft/nubesgen/"&gt;https://github.com/microsoft/nubesgen/&lt;/a&gt;, as well as pre-built packages and Docker images on our &lt;a href="https://github.com/microsoft/NubesGen/releases"&gt;release page&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#contributing-to-the-project"&gt;
  &lt;/a&gt;
  Contributing to the project
&lt;/h2&gt;

&lt;p&gt;Currently NubesGen supports Azure App Service and Azure Functions, as well as some of their most popular options (MySQL, PostgreSQL, Blob Storage, Redis, Cosmos DB, etc.). We're looking for feedback and contributions to improve this existing support first.&lt;/p&gt;

&lt;p&gt;Once we have a stable code base for those popular options, we'll then expand the number of supported services, with offers like Azure Kubernetes Services, Azure Spring Cloud, Azure Service Bus. So if you know any of those technologies and are willing to contribute, don't hesitate to ping us and join!&lt;/p&gt;

&lt;p&gt;And as any new project, we'll be delighted to count you as one of our stargazers at &lt;a href="https://github.com/microsoft/NubesGen/stargazers"&gt;https://github.com/microsoft/NubesGen/stargazers&lt;/a&gt;!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-next"&gt;
  &lt;/a&gt;
  What's next?
&lt;/h2&gt;

&lt;p&gt;The best way to learn about NubesGen is to go to &lt;a href="https://nubesgen.com/"&gt;https://nubesgen.com/&lt;/a&gt; and use it!&lt;/p&gt;

</description>
      <category>azure</category>
      <category>terraform</category>
      <category>github</category>
      <category>docker</category>
    </item>
    <item>
      <title>Anotações Capítulo 1: Clean Code</title>
      <author>Jonilson Sousa</author>
      <pubDate>Wed, 05 May 2021 14:05:25 +0000</pubDate>
      <link>https://dev.to/jonilsonds9/anotacoes-capitulo-1-clean-code-4k79</link>
      <guid>https://dev.to/jonilsonds9/anotacoes-capitulo-1-clean-code-4k79</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Sempre haverá um código!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Um código ruim sempre é ruim, pode nos atrasar, ou até mesmo acabar com uma empresa!&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Lei de LeBlanc: Nunca é tarde.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;O tempo gasto para limpar o código não é um desperdício e sim uma necessidade;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Atitude&lt;/strong&gt;: Programadores não devem ceder a vontade dos gerentes para fazer um código ruim.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;O principal dilema&lt;/strong&gt;: Bagunças antigas reduzem o tempo e mesmo assim são feitas para cumprir o tempo.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;A arte do código limpo&lt;/strong&gt;: &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Podemos saber o que é um código ruim, mas é difícil saber como transformar esse código ruim em um código bom.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A “sensibilidade ao código” (“code-sense”) ajuda a escolher a melhor alternativa para proteger o código de alterações futuras;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#o-que-%C3%A9-um-c%C3%B3digo-limpo"&gt;
  &lt;/a&gt;
  O que é um código Limpo?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#bjarne-stroustrup"&gt;
  &lt;/a&gt;
  Bjarne Stroustrup:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Código natural, que possamos ler com naturalidade;&lt;/li&gt;
&lt;li&gt;Que não incita o crescimento do caos;&lt;/li&gt;
&lt;li&gt;Um código limpo requer bastante atenção aos detalhes;&lt;/li&gt;
&lt;li&gt;“Um código limpo faz bem apenas uma coisa”.
## Grady Booch:&lt;/li&gt;
&lt;li&gt;“Ler um código limpo deve ser como ler uma conversa bem escrita”;&lt;/li&gt;
&lt;li&gt;Um código limpo deve ser “claro”, ou seja direto, decisivo sem desvios ou detalhes desnecessários, portanto deve conter apenas o necessário.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#dave-thomas"&gt;
  &lt;/a&gt;
  Dave Thomas:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;“Um código limpa facilita para que outras pessoas o melhorem”;&lt;/li&gt;
&lt;li&gt;Um código sem testes não está limpo, não importa o quão elegante e legível ele seja.&lt;/li&gt;
&lt;li&gt;Um código limpo é pequeno, assim quanto menor, melhor!&lt;/li&gt;
&lt;li&gt;Deve ser fácil para os seres humanos entender!&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#michael-feathers"&gt;
  &lt;/a&gt;
  Michael Feathers:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Um código limpo foi bem cuidado por alguém.&lt;/li&gt;
&lt;li&gt;Alguém manteve o código simples e organizado.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ron-jeffries"&gt;
  &lt;/a&gt;
  Ron Jeffries:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Código limpo: Sem duplicação, uma tarefa, expressividade (nomes), pequenas abstrações.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ward-cunnigham"&gt;
  &lt;/a&gt;
  Ward Cunnigham:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;O código limpo é óbvio, simples e convincente;&lt;/li&gt;
&lt;li&gt;Tudo está onde esperamos que esteja;&lt;/li&gt;
&lt;li&gt;É nossa responsabilidade fazer a linguagem parecer simples;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#escolas-de-pensamento"&gt;
  &lt;/a&gt;
  Escolas de pensamento:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Para Bob, o código limpo é várias coisas, pegando partes do que os outros acima já falaram, como nomes limpos de variáveis, funções limpas, classes limpas e etc.&lt;/li&gt;
&lt;li&gt;Nenhuma escola ou conceito está 100% certo, mas para aqueles que a seguem é uma certeza, por isso diversificar é o ideal, não ficar apenas com uma única escola ou abordagem mas várias.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#somos-autores"&gt;
  &lt;/a&gt;
  Somos Autores:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Escrevemos para outras pessoas através do código, e outros vão ler, e precisam entender, por isso o código deve ser de fácil leitura. Devemos sempre tornar o código de fácil leitura, isso vai fazer com que possamos fazer o código mais rápido e outros que vão usar o código futuramente também.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#a-regra-do-escoteiro"&gt;
  &lt;/a&gt;
  A regra do escoteiro:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;“Não basta escrever um código bom. Ele precisa ser mantido sempre limpo”.&lt;/li&gt;
&lt;li&gt;“Devemos deixar o código mais simples do que quando encontramos”.&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>books</category>
      <category>codequality</category>
    </item>
    <item>
      <title>Picture perfect image optimization for any web framework</title>
      <author>Ben Holmes</author>
      <pubDate>Wed, 05 May 2021 14:03:35 +0000</pubDate>
      <link>https://dev.to/bholmesdev/picture-perfect-image-optimization-for-any-web-framework-2o77</link>
      <guid>https://dev.to/bholmesdev/picture-perfect-image-optimization-for-any-web-framework-2o77</guid>
      <description>&lt;p&gt;💁 &lt;strong&gt;Intended audience:&lt;/strong&gt; &lt;em&gt;This is meant for developers building "template-driven"  static sites (11ty, Jekyll, Hugo, plain HTML) or "component-driven" web apps (NextJS, Gatsby, etc). If you're working with site builders like Wordpress or Shopify, this probably isn't the article for you!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you've been building websites for a while, "optimize your images" probably sounds like "eat your veggies." It's good for your website's health, it'll make your SEO big and strong... but that &lt;code&gt;.webp&lt;/code&gt; broccoli doesn't sound appetizing to me 🤢&lt;/p&gt;

&lt;p&gt;What we need are some "easy wins." Some cheese to melt over that beautifully compressed brussel sprouts. So let's explore:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;🥦 (Briefly) Why you should care about those pesky 4K images&lt;/li&gt;
&lt;li&gt;🌅 How the &lt;code&gt;picture&lt;/code&gt; element can change your optimization game&lt;/li&gt;
&lt;li&gt;🔨 A helpful 11ty script you can add to your static site generator of choice&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Onwards!&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#so-whats-wrong-with-my-images-right-now"&gt;
  &lt;/a&gt;
  🥦 So what's wrong with my images right now?
&lt;/h2&gt;

&lt;p&gt;Before getting into the tips, let me remind you have just how badly images can hurt the performance of your website. Here's a lighthouse rating from one of my recent blog posts (images compressed with &lt;a href="https://tinyjpg.com/"&gt;tinyJPG&lt;/a&gt; mind you!)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TRn7Uyuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bholmes.dev/assets/blog/image-opt-bad-lighthouse-score.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TRn7Uyuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bholmes.dev/assets/blog/image-opt-bad-lighthouse-score.png" alt="List of poor image loadtimes from Chromium Lighthouse performance report"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Yikes!&lt;/em&gt; 10 seconds to grab all those images? Chromium definitely does some throttling to test on "slower" internet connections, but it's clear those KB rating are quite high (especially for mobile users).&lt;/p&gt;

&lt;p&gt;This just to show that &lt;strong&gt;there's much more to image optimization than compression!&lt;/strong&gt; There's also:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Serving the right format,&lt;/strong&gt; with JPGs preferrable and &lt;code&gt;.webp&lt;/code&gt; or &lt;code&gt;.avi&lt;/code&gt; &lt;em&gt;especially&lt;/em&gt; so&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Serving the right size,&lt;/strong&gt; ideally with &lt;em&gt;multiple copies&lt;/em&gt; of the same image at different widths and heights&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Loading at the right time,&lt;/strong&gt; reaching for "lazy" loading when we can&lt;/li&gt;
&lt;li&gt;Heck, even &lt;strong&gt;including &lt;code&gt;alt&lt;/code&gt; text&lt;/strong&gt; can affect your site from both accessibility and SEO standpoints! &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I learned a bit about addressing those format and size problems using &lt;code&gt;picture&lt;/code&gt; elements, and my lighthouse definitely thanked me for it 😄&lt;/p&gt;


&lt;blockquote class="ltag__twitter-tweet"&gt;
      &lt;div class="ltag__twitter-tweet__media"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uul7oXYq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/media/EyK4-JjWQAIWHWf.jpg" alt="unknown tweet media content"&gt;
      &lt;/div&gt;

  &lt;div class="ltag__twitter-tweet__main"&gt;
    &lt;div class="ltag__twitter-tweet__header"&gt;
      &lt;img class="ltag__twitter-tweet__profile-image" src="https://res.cloudinary.com/practicaldev/image/fetch/s--kKQCujW1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://pbs.twimg.com/profile_images/1131721513026170883/kvrKqlHc_normal.png" alt="Ben Holmes profile image"&gt;
      &lt;div class="ltag__twitter-tweet__full-name"&gt;
        Ben Holmes
      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__username"&gt;
        &lt;a class="mentioned-user" href="https://dev.to/bholmesdev"&gt;@bholmesdev&lt;/a&gt;

      &lt;/div&gt;
      &lt;div class="ltag__twitter-tweet__twitter-logo"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ir1kO05j--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-f95605061196010f91e64806688390eb1a4dbc9e913682e043eb8b1e06ca484f.svg" alt="twitter logo"&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__body"&gt;
      Dang, at first my performance on &lt;a href="https://t.co/iTZUPe5aBp"&gt;bholmes.dev&lt;/a&gt; was getting destroyed by a *ton* of fat JPGs I never condensed down (especially on blog posts). Installed &lt;a href="https://twitter.com/eleven_ty"&gt;@eleven_ty&lt;/a&gt; 's image plugin, put in an hour of work... and just look at it 🤩 
    &lt;/div&gt;
    &lt;div class="ltag__twitter-tweet__date"&gt;
      00:37 AM - 05 Apr 2021
    &lt;/div&gt;


    &lt;div class="ltag__twitter-tweet__actions"&gt;
      &lt;a href="https://twitter.com/intent/tweet?in_reply_to=1378869249930842116" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fFnoeFxk--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-reply-action-238fe0a37991706a6880ed13941c3efd6b371e4aefe288fe8e0db85250708bc4.svg" alt="Twitter reply action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/retweet?tweet_id=1378869249930842116" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k6dcrOn8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-retweet-action-632c83532a4e7de573c5c08dbb090ee18b348b13e2793175fea914827bc42046.svg" alt="Twitter retweet action"&gt;
      &lt;/a&gt;
      &lt;a href="https://twitter.com/intent/like?tweet_id=1378869249930842116" class="ltag__twitter-tweet__actions__button"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--SRQc9lOp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/twitter-like-action-1ea89f4b87c7d37465b0eb78d51fcb7fe6c03a089805d7ea014ba71365be5171.svg" alt="Twitter like action"&gt;
      &lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;


&lt;h2&gt;
  &lt;a href="#fixing-format-size-problems-with-the-raw-picture-endraw-element"&gt;
  &lt;/a&gt;
  🌅 Fixing format + size problems with the &lt;code&gt;picture&lt;/code&gt; element
&lt;/h2&gt;

&lt;p&gt;So how can we deliver different image files for the right people? Well, let's start with a humble image element like this one:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/mega-chonker.jpg"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1000"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"600"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A perfectly sized cat"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;em&gt;Refer to &lt;a href="https://i.kym-cdn.com/photos/images/original/001/417/621/d9f.jpg"&gt;this handy chart&lt;/a&gt; for understanding "chonk" levels&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, say we've opened our image editor and saved a smaller version for mobile users sitting at, say, 600 pixels wide. You could probably set up some CSS to hot-swap your images depending on your screen width:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"desktop"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/chonker-1000w.jpg"&lt;/span&gt;
    &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1000"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"600"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A perfectly sized cat"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"mobile"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/chonker-600w.jpg"&lt;/span&gt;
    &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"600"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"300"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A perfectly sized cat"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="k"&gt;@media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;600px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.desktop&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;@media&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;601px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nc"&gt;.mobile&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;...But this isn't very scalable. What if we're, say, working in a markdown file where we can't append class names? Or we have different formats we want to switch between depending on browser support (JPEG vs WEBP for example)?&lt;/p&gt;

&lt;p&gt;This is where the &lt;code&gt;picture&lt;/code&gt; element comes in. Take this example here:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- List out all the WEBP images + WEBP sizes we can choose from --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/assets/chonker-600w.webp 600w, /assets/chonker-1000w.webp 1000w"&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- In case a browser doesn't support WEBP, fall back to this set of JPG sources --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/jpeg"&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/assets/chonker-600w.jpg 600w, /assets/chonker-1000w.jpg 1000w"&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- The actual, style-able img element that "receives" these sources --&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!-- Also includes a default src in case no &amp;lt;source&amp;gt; can be applied --&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/assets/chonker-600.png"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A perfectly sized cat"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Some big takeaways:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We can wrap our image tags in a &lt;code&gt;picture&lt;/code&gt; to unlock a "switch" case of sorts, with your browser picking the first &lt;code&gt;source&lt;/code&gt; element that it's able to render. But admittedly, &lt;em&gt;most&lt;/em&gt; modern browsers will reach for those shiny &lt;code&gt;.webp&lt;/code&gt; files listed under &lt;code&gt;type="image/webp"&lt;/code&gt; without needing the JPG fallbacks (&lt;a href="https://caniuse.com/?search=webp"&gt;current browser support here&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;Each source has a &lt;strong&gt;&lt;code&gt;srcset&lt;/code&gt; property&lt;/strong&gt;, which takes in a list of source URLs for a given image format. These sources are comma-separated, plus a pixel-value width using that &lt;code&gt;w&lt;/code&gt; on the end. The browser will then decide which source to use based on the &lt;code&gt;sizes&lt;/code&gt; property (more on that in the next section)&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Picture elements are not images themselves!&lt;/strong&gt; This is an interesting gotcha when you start trying to style those images. So, you'll want to keep putting all your image-specific CSS (ex. &lt;code&gt;object-fit&lt;/code&gt;) on that &lt;code&gt;img&lt;/code&gt; element instead of the &lt;code&gt;picture&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#the-raw-sizes-endraw-attribute"&gt;
  &lt;/a&gt;
  The &lt;code&gt;sizes&lt;/code&gt; attribute
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Sizes&lt;/code&gt; is an interesting beast. It &lt;em&gt;almost&lt;/em&gt; looks like CSS actually, with some small syntax differences.&lt;/p&gt;

&lt;p&gt;Remember those &lt;code&gt;mobile&lt;/code&gt; and &lt;code&gt;desktop&lt;/code&gt; helper classes from earlier? Well, &lt;code&gt;sizes&lt;/code&gt; let us do something rather similar. &lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/uGiG2VWkeSs"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key takeaways from the video:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In general, the &lt;code&gt;sizes&lt;/code&gt; attribute is a way to tell the browser &lt;strong&gt;which image to use for a given screen size.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's say we have a banner image that takes up the full width of the screen for mobile users, but we have a table of contents that takes up half the width at &lt;code&gt;500px&lt;/code&gt; wide and above.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Pgi6oY_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bholmes.dev/assets/blog/image-sizes-table-of-contents-demo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Pgi6oY_B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://bholmes.dev/assets/blog/image-sizes-table-of-contents-demo.png" alt="Table of contents taking up half the width of the screen"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Putting on our CSS hat, this means our image is &lt;code&gt;100vw&lt;/code&gt; (100% screen width) below &lt;code&gt;500px&lt;/code&gt;, and &lt;code&gt;50vw&lt;/code&gt; when we hit &lt;code&gt;@media (min-width: 500px)&lt;/code&gt;. This perfectly translates to &lt;code&gt;sizes&lt;/code&gt; 👉 &lt;code&gt;sizes="(min-width: 500px) 50vw, 100vw"&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And in the context of a &lt;code&gt;picture&lt;/code&gt; element:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="c"&gt;&amp;lt;!--stack up your media queries as sizes, delineated by commas ","--&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/6dfd7ac6-600.webp 600w, /img/6dfd7ac6-900.webp 900w..."&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"(min-width: 500px) 50vw, 100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"Blue and purple cluster of stars"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/img/6dfd7ac6-600.jpeg"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As a rule-of-thumb, you should probably use &lt;code&gt;100vw&lt;/code&gt; as a "base case" for smaller devices, and rack up media queries on top depending on how your layout changes. This does mean &lt;code&gt;sizes&lt;/code&gt; will be different depending on the &lt;em&gt;context&lt;/em&gt; your images are living in, so look out for that if you're using a component-based framework!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note:&lt;/strong&gt; You may be wondering why browsers can't do all this work for us. Well, this comes down to the unpredictable nature of "width" when you're throwing around CSS everywhere. If you're like me, you tend to use a lot of percentages like &lt;code&gt;width: 100%&lt;/code&gt; for image blocks, which may adjust depending on the container, padding, margins, etc that get applied. If the browser tried to decipher all this styling before loading an image, you'd be waiting a lot longer than you might want!&lt;/em&gt; &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#respecting-hd-displays"&gt;
  &lt;/a&gt;
  Respecting HD displays
&lt;/h3&gt;

&lt;p&gt;Note that our screen's pixel density can also affect which image gets picked from a given &lt;code&gt;srcset&lt;/code&gt;. For high-density mobile displays, it'll actually choose an image that's &lt;strong&gt;roughly double&lt;/strong&gt; the width you specify! Say we have a simple &lt;code&gt;picture&lt;/code&gt; declaration like this for instance:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
    &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/galaxy-600.webp 600w, /img/galaxy-1200.webp 1200w"&lt;/span&gt;
    &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We're using &lt;code&gt;100vw&lt;/code&gt; here, so the browser should match the image source's width to the width of the display. Intuitively, we'd think that a &lt;code&gt;600px&lt;/code&gt; wide display would receive &lt;code&gt;/img/galaxy-600.webp&lt;/code&gt;... but for HD displays like Macbooks or modern smartphones, it'll actually reach for an image at 600 x 2 pixels wide (&lt;code&gt;/img/galaxy-1200.webp 1200w&lt;/code&gt; in this case). So when you're generating multiple image sizes, always reach for those higher values 💡&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#applying-this-to-your-site-with-11ty-image"&gt;
  &lt;/a&gt;
  🔨 Applying this to your site with 11ty image
&lt;/h2&gt;

&lt;p&gt;Alright, so we see how useful the &lt;code&gt;picture&lt;/code&gt; element can be... but it's only as powerful as the pictures we can supply to it. Do we really want to create all those beautifully resized, optimized, multi-format images &lt;em&gt;by hand?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Luckily, there's a lot of tools to handle this process for us, and I'm going to hone in on the simplest I've found: &lt;a href="https://www.11ty.dev/docs/plugins/image/#output-directory"&gt;11ty's image plugin.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🚨 Now before you start scrolling to the next section, &lt;strong&gt;no, you don't need to build your site with 11ty to use this.&lt;/strong&gt; Playing around with this tool, I realized it's perfect for generating optimized images on-the-fly for &lt;em&gt;any&lt;/em&gt; use case, no command line prowess required 🔥 &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#generating-optimized-images"&gt;
  &lt;/a&gt;
  Generating optimized images
&lt;/h3&gt;

&lt;p&gt;Let's play along at home! Seriously, drop everything and go open your code editor 🧑‍💻 Then, make a fresh directory / folder and create a basic &lt;code&gt;package.json&lt;/code&gt;. We'll be installing the &lt;code&gt;@11ty/eleventy-img&lt;/code&gt; dependency:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nb"&gt;mkdir &lt;/span&gt;woah-11ty-image-is-cool &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd &lt;/span&gt;woah-11ty-image-is-cool
npm init &lt;span class="nt"&gt;-y&lt;/span&gt; &lt;span class="c"&gt;# Make a package.json with defaults for everything&lt;/span&gt;
npm i @11ty/eleventy-img
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now make a random JavaScript file for us to play with (I'll call mine &lt;code&gt;image-generator.js&lt;/code&gt;). Inside, just paste the example code at the top of &lt;a href="https://www.11ty.dev/docs/plugins/image/#output-directory"&gt;11ty's documentation&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@11ty/eleventy-img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://images.unsplash.com/photo-1608178398319-48f814d0750c&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;widths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hm, this looks pretty straightforward. Let's run it from our terminal and see what happens:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;node ./image-generator.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With any luck, you should see a couple new faces appear:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;A &lt;code&gt;/img&lt;/code&gt; directory&lt;/strong&gt; with 2 images inside: 1 JPG picture of a galaxy that's 300 pixels wide, and a matching &lt;code&gt;webp&lt;/code&gt; image of the same size. Notice how this matches up with our &lt;code&gt;widths&lt;/code&gt; array from the code snippet 👀&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;A &lt;code&gt;/cache&lt;/code&gt; directory&lt;/strong&gt; with some strings of characters. Think of this like a note-to-self for the plugin about the image we downloaded. It's expensive to download images off the internet, so to avoid loading it &lt;em&gt;every time we run the script,&lt;/em&gt; 11ty checks the cache to see if we've already loaded the image in the past 👍&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You'll also see a &lt;a href="https://www.11ty.dev/docs/plugins/image/#usage"&gt;blob of "stats"&lt;/a&gt; logged to your console. Most of these properties are self-explanatory, and some should look familiar from our &lt;code&gt;picture&lt;/code&gt; walkthrough earlier on (namely the &lt;code&gt;sourceType&lt;/code&gt; and &lt;code&gt;srcset&lt;/code&gt; attributes). We even get the output &lt;code&gt;size&lt;/code&gt; of the image in bytes, in case you want to inspect the differences between formats and sizes.&lt;/p&gt;

&lt;p&gt;But wait, there's more! Let's try experimenting with different widths and formats:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;widths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1400&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;formats&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;jpg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;webp&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;gif&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We should get a plethora of resolutions inside that &lt;code&gt;img&lt;/code&gt; directory. As you can imagine, this is perfect for our picture element from earlier. You can whip up all the &lt;code&gt;source&lt;/code&gt;s and &lt;code&gt;size&lt;/code&gt; attributes by hand as a learning exercise...&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#automating-our-picture-elements"&gt;
  &lt;/a&gt;
  Automating our picture elements
&lt;/h3&gt;

&lt;p&gt;...Or let the plugin do this for us! Along with that handy array of &lt;code&gt;stats&lt;/code&gt;, 11ty image will splice everything into a valid &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element. All we need is a call to the &lt;code&gt;generateHTML&lt;/code&gt; helper:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@11ty/eleventy-img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://images.unsplash.com/photo-1608178398319-48f814d0750c&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;widths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1400&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;html&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;generateHTML&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;alt&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;A blue and purple galaxy of stars&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;// alt text is required!&lt;/span&gt;
    &lt;span class="na"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100vw&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="c1"&gt;// remember our training with "sizes" from earlier...&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;

  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With any luck, we should see a beautiful &lt;code&gt;picture&lt;/code&gt; we can use anywhere on our site:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;picture&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
          &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/6dfd7ac6-300.webp 300w, /img/6dfd7ac6-1000.webp 1000w,
                  /img/6dfd7ac6-1400.webp 1400w"&lt;/span&gt;
          &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;source&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"image/jpeg"&lt;/span&gt;
          &lt;span class="na"&gt;srcset=&lt;/span&gt;&lt;span class="s"&gt;"/img/6dfd7ac6-300.jpeg 300w, /img/6dfd7ac6-1000.jpeg 1000w,
                  /img/6dfd7ac6-1400.jpeg 1400w"&lt;/span&gt;
          &lt;span class="na"&gt;sizes=&lt;/span&gt;&lt;span class="s"&gt;"100vw"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"A blue and purple galaxy of stars"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"/img/6dfd7ac6-300.jpeg"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"1400"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"1402"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/picture&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#going-further"&gt;
  &lt;/a&gt;
  Going further
&lt;/h3&gt;

&lt;p&gt;This plugin has a whole host of extra options to explore too, like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.11ty.dev/docs/plugins/image/#caching-remote-images-locally-new-in-image-0.3.0"&gt;messing with cache options&lt;/a&gt; for faster build times&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.11ty.dev/docs/plugins/image/#synchronous-usage"&gt;generating image stats + picture elements synchronously&lt;/a&gt;, so you don't have wait for the images to &lt;em&gt;actually&lt;/em&gt; get generated&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.11ty.dev/docs/plugins/image/#advanced-control-of-sharp-image-processor"&gt;fine-tuning the Sharp image processor&lt;/a&gt; to tweak the output to your needs&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#using-11ty-image-with-any-framework"&gt;
  &lt;/a&gt;
  📣 Using 11ty image with any framework
&lt;/h2&gt;

&lt;p&gt;If all this &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; madness excites you, go throw this 11ty image plugin at your own &lt;code&gt;/assets&lt;/code&gt; directory! I wrote this handy little script to crawl all the images in a directory (&lt;a href="https://coderrocketfuel.com/article/recursively-list-all-the-files-in-a-directory-using-node-js"&gt;not recursively mind you&lt;/a&gt;) and spit out some optimized files:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@11ty/eleventy-img&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;readdir&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fs/promises&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// node helper for reading folders&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;parse&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// node helper for grabbing file names&lt;/span&gt;

&lt;span class="p"&gt;;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;imageDir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./images&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="c1"&gt;// match this to your assets directory&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;readdir&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageDir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;stats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;imageDir&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;widths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1400&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="c1"&gt;// edit to your heart's content&lt;/span&gt;
      &lt;span class="na"&gt;filenameFormat&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// make the filename something we can recognize.&lt;/span&gt;
        &lt;span class="c1"&gt;// In this case, it's just:&lt;/span&gt;
        &lt;span class="c1"&gt;// [original file name] - [image width] . [file format]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;format&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
      &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;stats&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// remove this if you don't want the logs&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;})()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you &lt;em&gt;happen&lt;/em&gt; to use 11ty on your personal site (or at least want to try), you can automate the &lt;code&gt;picture&lt;/code&gt; element insertion as well. &lt;a href="https://www.11ty.dev/docs/plugins/image/#use-this-in-your-templates"&gt;Their guide&lt;/a&gt; covers building your own "shortcode" function to insert the right &lt;code&gt;picture&lt;/code&gt; for every unoptimized image on your site.&lt;/p&gt;

&lt;p&gt;Even without this luxury though, this script is a great addition to any JS-based build step. Here's a basic &lt;code&gt;Image&lt;/code&gt; component I could slap into any React app based on that script above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight jsx"&gt;&lt;code&gt;&lt;span class="c1"&gt;// consider using TypeScript for checking all these props!&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Image&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;imageProps&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;picture&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;source&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"image/webp"&lt;/span&gt;
        &lt;span class="na"&gt;srcSet&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`/img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-600.webp 600w, /img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-1000.webp 1000w, /img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-1400.webp 1400w`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;source&lt;/span&gt;
        &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"image/jpeg"&lt;/span&gt;
        &lt;span class="na"&gt;srcSet&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`/img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-600.jpeg 600w, /img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-1000.jpeg 1000w, /img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-1400.jpeg 1400w`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
        &lt;span class="na"&gt;sizes&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;sizes&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;img&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`/img/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;fileName&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-600.jpeg`&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;imageProps&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; &lt;span class="p"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;picture&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Assuming all my images get generated with this file naming convention (and I always have images at 600, 1000, and 1400 widths), this should pull all our optimized images no problem 👍&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Here's a brief rundown&lt;/strong&gt; on applying these learnings to &lt;code&gt;create-react-app&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/RAzXB-qu22s"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#go-try-it-yourself"&gt;
  &lt;/a&gt;
  Go try it yourself
&lt;/h3&gt;

&lt;p&gt;You can check out a running example of &lt;code&gt;create-react-app&lt;/code&gt; + 11ty image in &lt;a href="https://codesandbox.io/s/little-tree-dmr1w?file=/App.js"&gt;&lt;strong&gt;this CodeSandbox&lt;/strong&gt;&lt;/a&gt; 🪄&lt;/p&gt;

&lt;p&gt;This version will listen for new images during development as well. Feel free to &lt;a href="https://github.com/Holben888/create-react-app-with-11ty-image"&gt;fork the source code&lt;/a&gt; to try in your own project (and find the edge cases I inevitably missed 😉).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#other-options-for-next-nuxt-gatsby-and-more"&gt;
  &lt;/a&gt;
  Other options for Next, Nuxt, Gatsby and more
&lt;/h3&gt;

&lt;p&gt;As cool as 11ty image can be, I should definitely highlight some "native" options for popular meta-frameworks: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;For Next, &lt;a href="https://nextjs.org/docs/api-reference/next/image"&gt;their built-in Image component&lt;/a&gt; is perfect.&lt;/strong&gt; They'll also cover our sizes, formats, and image compression automatically, plus some neat props for eagerly loading images that are "above the fold" using &lt;code&gt;priority&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;For Nuxt, &lt;a href="https://image.nuxtjs.org/components/nuxt-img/"&gt;their &lt;code&gt;&amp;lt;nuxt-img&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;nuxt-picture&amp;gt;&lt;/code&gt; components&lt;/a&gt; should have you covered.&lt;/strong&gt; These offer most of the same benefits as our 11ty image plugin, letting you specify different formats, a &lt;code&gt;sizes&lt;/code&gt; attribute, and background image compression. Just be sure to use &lt;code&gt;nuxt-picture&lt;/code&gt; if you want to allow multiple image formats instead of just one!&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;For Gatsby, &lt;a href="https://www.gatsbyjs.com/plugins/gatsby-plugin-image"&gt;you've got the gold standard of image optimization&lt;/a&gt; 🏆&lt;/strong&gt; Their image plugin was actually my main reason for using the framework a few years back, and it's only gotten better. The nicest feature (beyond matching everything we've talked about) is their loading animations for images. You can fade in over vector traces of an image, use a blur effect, and a lot more. The only downside is the hefty JS bundle it loads into the browser to pull this off, which I've &lt;a href="https://bholmes.dev/blog/before-building-your-next-static-site-with-react-consider-this/"&gt;given my opinions on over here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Beyond the framework, you can &lt;a href="https://davidwalsh.name/image-optimization-cloudinary"&gt;optimize remotely using something like Cloudinary&lt;/a&gt;.&lt;/strong&gt; This is a great option if you don't own the build process for your website, or don't want to store your images inside your code repository. For example, you can point all your Wordpress images to a cloudinary bucket and pull different image widths and formats for there. The only downside is the cost, since Cloudinary is doing all this image processing and storage for you.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#learn-a-little-something"&gt;
  &lt;/a&gt;
  Learn a little something?
&lt;/h2&gt;

&lt;p&gt;Groovy. In case you missed it, I launched an &lt;a href="https://tinyletter.com/bholmesdev"&gt;my "web wizardry" newsletter&lt;/a&gt; to explore more knowledge nuggets like this!&lt;/p&gt;

&lt;p&gt;This thing tackles the &lt;a href="https://www.swyx.io/first-principles-approach/"&gt;"first principles"&lt;/a&gt; of web development. In other words, what are all the janky browser APIs, bent CSS rules, and semi-accessible HTML that make all our web projects tick? If you're looking to go &lt;em&gt;beyond the framework&lt;/em&gt;, this one's for you dear web sorcerer 🔮&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tinyletter.com/bholmesdev"&gt;Subscribe away right here&lt;/a&gt;. I promise to always teach and never spam ❤️&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>eleventy</category>
    </item>
    <item>
      <title>StorybookJS: Tips &amp; Tricks</title>
      <author>David Dal Busco</author>
      <pubDate>Wed, 05 May 2021 13:56:42 +0000</pubDate>
      <link>https://dev.to/daviddalbusco/storybookjs-tips-tricks-2h0j</link>
      <guid>https://dev.to/daviddalbusco/storybookjs-tips-tricks-2h0j</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yYem5lVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A0yBFNNJGxc4vkhEPgV21aA.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yYem5lVC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn-images-1.medium.com/max/1600/1%2A0yBFNNJGxc4vkhEPgV21aA.jpeg" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Photo by &lt;a href="https://unsplash.com/@florenciaviadana?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Florencia Viadana&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/books?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;




&lt;p&gt;I just migrated the &lt;a href="https://docs.deckdeckgo.com"&gt;documentation&lt;/a&gt; of DeckDeckGo to &lt;a href="https://storybook.js.org/"&gt;StorybookJS&lt;/a&gt;. More than its ability to simplify building and testing, I like to use it for documentation purpose because it allows me to integrate the README.md files that &lt;a href="https://stenciljs.com/"&gt;StencilJS&lt;/a&gt; generates automatically. Sparring steps between code and documentation is the best don’t you think?&lt;/p&gt;

&lt;p&gt;Here are a couple of tips &amp;amp; tricks I reused, or discovered, along the process.&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#import-markdown-files-into-storybookjs"&gt;
  &lt;/a&gt;
  Import Markdown Files Into StorybookJS
&lt;/h3&gt;

&lt;p&gt;One particularly cool feature of StencilJS is that, out of the box, it auto-generates &lt;code&gt;readme.md&lt;/code&gt; files in markdown from the code’s comments. Isn’t that neat?&lt;/p&gt;

&lt;p&gt;I think it is. Therefore, to even push to concept further, I set up StorybookJS to import these Markdown files as Docs only pages. In that way, the documentation remains and, is edited as close as possible of the code and delivered to the end user without any interruption.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#meta"&gt;
  &lt;/a&gt;
  Meta
&lt;/h4&gt;

&lt;p&gt;At the time of writing the StorybookJS issue &lt;a href="https://github.com/storybookjs/storybook/issues/11981"&gt;#11981&lt;/a&gt; list miscellaneous solutions, including using the &lt;code&gt;transcludeMarkdown&lt;/code&gt; settings or raw loader. If following solution does not suit you, try one of these.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#limitation"&gt;
  &lt;/a&gt;
  Limitation
&lt;/h4&gt;

&lt;p&gt;Even though it works very well, I did not manage to highlight the block of codes displayed in the pages and imported from Markdown files. I &lt;a href="https://github.com/storybookjs/storybook/issues/11981#issuecomment-830158237"&gt;commented&lt;/a&gt; the issue accordingly.&lt;/p&gt;

&lt;p&gt;If you manage to solve this, let me now or, even better, send me a &lt;a href="https://github.com/deckgo/deckdeckgo/"&gt;Pull Request&lt;/a&gt; on GitHub 😉.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution
&lt;/h4&gt;

&lt;p&gt;I am using the HTML version of Storybook, I handle my stories in &lt;code&gt;.js&lt;/code&gt; files as for example in a &lt;code&gt;Text.stories.js&lt;/code&gt; in which I document a paragraph that accepts a background color as argument.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Components/Text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;argTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;control&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;p style="background: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;"&amp;gt;
    Hello World
  &amp;lt;/p&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#FF6900&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;According &lt;a href="https://storybook.js.org/docs/react/writing-docs/docs-page"&gt;StorybookJS&lt;/a&gt;, we can replace the DocsPage template on a Component-Level to showcase our own documentation with MDX docs or a custom component. That’s why, next to our story we create a new file &lt;code&gt;Text.mdx&lt;/code&gt; , which we import and provide as &lt;code&gt;page&lt;/code&gt; to our story.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Doc&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Text.mdx&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Components/Text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;page&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Doc&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;argTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;control&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;p style="background: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;"&amp;gt;
    Hello World
  &amp;lt;/p&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;bg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;#FF6900&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Finally, in our &lt;code&gt;.mdx&lt;/code&gt; file, we import our &lt;code&gt;README.md&lt;/code&gt; file (or any other Markdown files) and, we remix the DocsPage with a custom documentation, using the basic Storybook &lt;code&gt;Description&lt;/code&gt; block.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Description&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@storybook/addon-docs/blocks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;readme&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./readme.md&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Description&lt;/span&gt; &lt;span class="nx"&gt;markdown&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;readme&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That’s it, the Markdown file is integrated as Docs pages in StorybookJS 🥳.&lt;/p&gt;




&lt;h4&gt;
  &lt;a href="#use-a-cdn-to-load-dependencies"&gt;
  &lt;/a&gt;
  Use A CDN To Load Dependencies
&lt;/h4&gt;

&lt;p&gt;Not sure anyone would ever had that requirements but, if like me, you would need to load dependencies from a CDN, here’s the trick: add your &lt;code&gt;script&lt;/code&gt; to &lt;code&gt;./storybook/preview-head.html&lt;/code&gt; . It will be evaluated with your stories.&lt;/p&gt;

&lt;p&gt;Likewise, if you would like to define some &lt;code&gt;style&lt;/code&gt; or load a specific Google Font for your components, you can modify the same file as well.&lt;/p&gt;

&lt;p&gt;Some examples taken from my &lt;a href="https://github.com/deckgo/deckdeckgo/blob/main/docs/.storybook/preview-head.html"&gt;preview-head.html&lt;/a&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"preconnect"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.gstatic.com"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"https://fonts.googleapis.com/css2?family=JetBrains+Mono&amp;amp;display=swap"&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"stylesheet"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;"module"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"https://unpkg.com/@deckdeckgo/color@latest/dist/deckdeckgo-color/deckdeckgo-color.esm.js"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="nd"&gt;:not&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;.prismjs&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nl"&gt;box-shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;25px&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h4&gt;
  &lt;a href="#sort-stories"&gt;
  &lt;/a&gt;
  Sort Stories
&lt;/h4&gt;

&lt;p&gt;A specific order for the stories can be defined in &lt;code&gt;./storybook/preview.js&lt;/code&gt; using the property &lt;code&gt;storySort&lt;/code&gt;. Each chapter have to be provided as &lt;code&gt;string&lt;/code&gt; and their list of stories as an &lt;code&gt;array&lt;/code&gt; .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;theme&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./theme&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;parameters&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;argTypesRegex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;^on[A-Z].*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;options&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;storySort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="na"&gt;order&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Introduction&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Introduction&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Getting Started&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
        &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Edit&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;HTML&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Lazy Loading&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="na"&gt;docs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;theme&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The names should match these provided as &lt;code&gt;title&lt;/code&gt; in the stories.&lt;/p&gt;

&lt;p&gt;With &lt;code&gt;MDX&lt;/code&gt; using &lt;code&gt;meta&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@storybook/addon-docs/blocks&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Meta&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Introduction/Getting Started&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With &lt;code&gt;JS&lt;/code&gt; through the default &lt;code&gt;title&lt;/code&gt; :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Components/Lazy Image&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;argTypes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;imgSrc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="na"&gt;control&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;






&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://stenciljs.com/"&gt;StencilJS&lt;/a&gt; + &lt;a href="https://storybook.js.org/"&gt;StorybookJS&lt;/a&gt; = Awesome 💪&lt;/p&gt;

&lt;p&gt;To infinity and beyond!&lt;/p&gt;

&lt;p&gt;David&lt;/p&gt;




&lt;p&gt;You can reach me on &lt;a href="https://twitter.com/daviddalbusco"&gt;Twitter&lt;/a&gt; or my &lt;a href="https://daviddalbusco.com"&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Give a try to &lt;a href="https://deckdeckgo.com/"&gt;DeckDeckGo&lt;/a&gt; for your next slides!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://deckdeckgo.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q4yatxfq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://deckdeckgo.com/assets/meta/deckdeckgo-meta.png" alt="DeckDeckGo"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>storybook</category>
      <category>webdev</category>
      <category>webcomponents</category>
    </item>
    <item>
      <title>Awesome Button Hover Using CSS</title>
      <author>Nikhil Bobade </author>
      <pubDate>Wed, 05 May 2021 13:25:48 +0000</pubDate>
      <link>https://dev.to/nikhil27b/awesome-button-hover-using-css-4dn7</link>
      <guid>https://dev.to/nikhil27b/awesome-button-hover-using-css-4dn7</guid>
      <description>&lt;p&gt;Today I created a Simple Button Hover Effect Like Accenture Using HTML &amp;amp; CSS. this hover effect is simple but it looks amazing when you hover on the button then box-shadow comes in the background also transform the button position. I hope you like this also comments about your thoughts.&lt;/p&gt;

&lt;p&gt;For more content follow me on Instagram  &lt;a href="https://www.instagram.com/developer_nikhil27/"&gt;@developer_nikhil27&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

&lt;p&gt;&lt;iframe height="600" src="https://codepen.io/NikhilBobade/embed/WNpeqmJ?height=600&amp;amp;default-tab=result&amp;amp;embed-version=2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>GPT-3 and CSS Frameworks</title>
      <author>Vladimir Carrer</author>
      <pubDate>Wed, 05 May 2021 13:17:54 +0000</pubDate>
      <link>https://dev.to/vladocar/gpt-3-and-css-frameworks-2fpm</link>
      <guid>https://dev.to/vladocar/gpt-3-and-css-frameworks-2fpm</guid>
      <description>&lt;p&gt;Recently I gained access to the OpenAI GPT-3 API. I tried different things like content creation, code translation and other experiments. One of the amazing things of GPT-3 is the capacity to learn from simple textual examples.&lt;/p&gt;

&lt;p&gt;Programming is one of the most complex and problem solving tasks. But I wasn’t interested in training GPT-3 to program. For me it was more interesting how GPT-3 can speed up some boring repetitive code creation.&lt;/p&gt;

&lt;p&gt;GPT-3 works great with well structured code that has clear naming logic. I tried to train it to generate layout HTML with clear class syntax. &lt;/p&gt;

&lt;p&gt;I used my Smart CSS Grid Framework because it has simple naming logic. CSS Classes are named from one to twelve because it is a 12 grid system. &lt;/p&gt;

&lt;p&gt;The logic is the total of each row should be always 12 or something like this 3 + 3 + 4 + 2 = 12&lt;/p&gt;

&lt;p&gt;The idea was, when I write something like this: &lt;/p&gt;

&lt;p&gt;3 | 3 | 6 &lt;/p&gt;

&lt;p&gt;To receive something like this:&lt;/p&gt;

&lt;p&gt;After a couple examples GPT-3 started to work almost perfectly even with more complex layouts.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BTEqZMmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3a4on98gs3mj4hrxbju.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BTEqZMmo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i3a4on98gs3mj4hrxbju.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is the text I used to train GPT-3:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;text: 4 | 4 | 4
code: &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt;

text: 3 | 3 | 3 | 3
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt;

text: 2 | 2 | 2 | 6
code: &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="six"&amp;gt; 

text: 3 | 2 | 4 | 3
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt;

text: 3 | 2 | 4 | 3 | 4 | 8
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="eight"&amp;gt; &amp;lt;/div&amp;gt;

text: 3 | 2 | 4 | 2 | 2 | 8
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="eight"&amp;gt; &amp;lt;/div&amp;gt;

text: 3 | 2 | 9 | 
4 | 4 | 12 | 
5 | 2 | 4
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="nine"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="twelve"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="five"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt;

text: 3 | 2 | 9 | 
4 | 4 | 11 | 
5 | 2 | 4
code: &amp;lt;div class="three"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="nine"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="eleven"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="five"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="two"&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class="four"&amp;gt; &amp;lt;/div&amp;gt;

text:
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Important to keep the “temperature” to 0, we don’t want GPT-3 to be creative. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5jA-gZIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8hnox1bdq7xfweoyr6f.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5jA-gZIx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y8hnox1bdq7xfweoyr6f.gif" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a super simple example of how GPT-3 can be used to generate repetitive HTML code. Basically all CSS Frameworks follow certain rules that can be easily used for GPT-3 training.&lt;/p&gt;

</description>
      <category>gpt3</category>
      <category>css</category>
      <category>webdev</category>
      <category>machinelearning</category>
    </item>
    <item>
      <title>Top 5 Python Frameworks for Game development</title>
      <author>Ashish Yadav</author>
      <pubDate>Wed, 05 May 2021 13:06:48 +0000</pubDate>
      <link>https://dev.to/expoashish/top-5-python-frameworks-for-game-development-44jk</link>
      <guid>https://dev.to/expoashish/top-5-python-frameworks-for-game-development-44jk</guid>
      <description>&lt;p&gt;Python language is one of the most popular programming language for game development because Python provides huge and useful libraries for game development. In this article, we have listed down the top 5 frameworks of Python used for game development one must know. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#read-such-a-amazing-blogs-heregt"&gt;
  &lt;/a&gt;
  &lt;a href="https://expoashish.blogspot.com/2021/05/top-5-python-frameworks-for-game.html"&gt;Read Such a Amazing Blogs here---&amp;gt;&lt;/a&gt;
&lt;/h2&gt;

&lt;h2&gt;
  &lt;a href="#1-pygame"&gt;
  &lt;/a&gt;
  1. Pygame
&lt;/h2&gt;

&lt;p&gt;Pygame is an open-source Python library which is used to create video games. This library is a combination of C, Python and Native. Pygame was written by Pete Shinners to replace PySDL. Pygame adds functionality on top of the excellent SDL library. Pygame allows you to create fully featured games and multimedia programs in the Python language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-pygame"&gt;
  &lt;/a&gt;
  Features of Pygame:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Multicore CPUs can be used easily.&lt;/li&gt;
&lt;li&gt;Uses optimised C and Assembly code for core functions.&lt;/li&gt;
&lt;li&gt;Simple and Portable.&lt;/li&gt;
&lt;li&gt;A small amount of code is needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#2-pyglet"&gt;
  &lt;/a&gt;
  2. Pyglet
&lt;/h2&gt;

&lt;p&gt;pyglet is a cross-platform windowing and multimedia library for Python. Pyglet is one of the most powerful Python library that can be used for developing games. Pyglet supports windowing, user interface event handling, Joysticks, OpenGL graphics, loading images and videos, and playing sounds and music. pyglet works on Windows, OS X and Linux.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-pyglet"&gt;
  &lt;/a&gt;
  Features of Pyglet:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;No external dependencies or installation requirements.&lt;/li&gt;
&lt;li&gt;pyglet is provided under the BSD open-source license.&lt;/li&gt;
&lt;li&gt;pyglet is written entirely in pure Python.&lt;/li&gt;
&lt;li&gt;Load images, sound, music and video in almost any format.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#3-panda3d"&gt;
  &lt;/a&gt;
  3. Panda3D
&lt;/h2&gt;

&lt;p&gt;Panda3D is a powerful 3D engine written in C++, with a complete set of Python bindings. Panda3D is a modern engine supporting advanced features such as shaders, stencil, and render-to-texture. Panda3D is free software that runs under Windows, Linux, or macOS. Game development with Panda3D usually consists of writing a Python or C++ program that controls the Panda3D library.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-panda3d"&gt;
  &lt;/a&gt;
  Features of Panda3D:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Platform Portability.&lt;/li&gt;
&lt;li&gt;Flexible Asset Handling.&lt;/li&gt;
&lt;li&gt;Library Bindings.&lt;/li&gt;
&lt;li&gt;Extensibility.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#4-pykyra"&gt;
  &lt;/a&gt;
  4. PyKyra
&lt;/h2&gt;

&lt;p&gt;Pyglet library is a cross-platform windowing and multimedia library for creating games using Python. PyKyra is one of the fastest game development frameworks for Python that is based on both SDL and the Kyra engine. it also supports MPEG video, sound such as MP3, Ogg Vorbis, Wav, etc., direct images reading, and much more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-pyopengl"&gt;
  &lt;/a&gt;
  Features of pyOpenGL:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Simple and Portable.&lt;/li&gt;
&lt;li&gt;It has no dependencies outside of the built-in Python modules.&lt;/li&gt;
&lt;li&gt;The framework supports top-down, side, and symmetric translation.&lt;/li&gt;
&lt;li&gt;It has a sophisticated toolchain, which includes a sprite editor and encoder.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-ursina-engine"&gt;
  &lt;/a&gt;
  5. Ursina Engine
&lt;/h2&gt;

&lt;p&gt;Ursina makes it easier to develop games, visualizations and other kinds of software.The concise API combined with the power of the Python programming language, makes life easier for the developer so they can focus on what they are making.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#features-of-ursina-engine"&gt;
  &lt;/a&gt;
  Features of Ursina Engine:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Reload code/textures/models while in-game.&lt;/li&gt;
&lt;li&gt;Automatic import of .psd and .blend files.&lt;/li&gt;
&lt;li&gt;Play in fullscreen while developing.&lt;/li&gt;
&lt;li&gt;Lots of included procedural 3D primitives.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#and-subscribe-to-our-youtube-channel-bestcodecreator"&gt;
  &lt;/a&gt;
  🎥💡🔥AND Subscribe to Our YouTube Channel &lt;a href="https://www.youtube.com/bestcodecreator"&gt;bestcodecreator&lt;/a&gt;
&lt;/h4&gt;

&lt;h4&gt;
  &lt;a href="#and-support-our-blogging-site-myblogs"&gt;
  &lt;/a&gt;
  🎥💡🔥AND Support Our Blogging site &lt;a href="https://expoashish.blogspot.com/2021/04/machine-learning-complete-roadmap.html"&gt;myblogs&lt;/a&gt;
&lt;/h4&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion:
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Thank you for reading this blog. I wish you the best in your journey in learning and mastering in Python Game Development🔥🔥.&lt;/em&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>machinelearning</category>
      <category>programming</category>
      <category>computerscience</category>
    </item>
    <item>
      <title>Ilia Kiselevich, Founder &amp; CEO at SolveIt | Interview For TopDevelopers</title>
      <author>SolveIt</author>
      <pubDate>Wed, 05 May 2021 13:03:16 +0000</pubDate>
      <link>https://dev.to/solveit/ilia-kiselevich-founder-ceo-at-solveit-interview-for-topdevelopers-mm3</link>
      <guid>https://dev.to/solveit/ilia-kiselevich-founder-ceo-at-solveit-interview-for-topdevelopers-mm3</guid>
      <description>&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FgAy4asq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2ckul6yw8imc7e6uibf.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FgAy4asq--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g2ckul6yw8imc7e6uibf.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#give-us-a-quick-overview-on-solveit-when-and-how-did-you-begin-this-journey-and-what-were-your-motives-to-be-successful-in-app-development"&gt;
  &lt;/a&gt;
  Give us a quick overview on SolveIt. When and how did you begin this journey and what were your motives to be successful in app development?
&lt;/h4&gt;

&lt;p&gt;Our journey started small in scale, I was a developer and already knew everything inside out. More projects came up, clients liked our approach to business and the quality of our services. I gathered a team of the most experienced developers and founded SolveIt. Initially, we were only doing mobile apps, now we have a team of 51 professionals and 18 services to effectively solve customer problems.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-is-your-role-in-the-management-and-development-of-solveit"&gt;
  &lt;/a&gt;
  What is your role in the management and development of SolveIt?
&lt;/h4&gt;

&lt;p&gt;As a CEO and Founder at SolveIt, I am responsible for crucial decisions, long-term development strategies, and the company’s overall performance.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#tell-us-about-your-biggest-achievement-in-the-industry"&gt;
  &lt;/a&gt;
  Tell us about your biggest achievement in the industry
&lt;/h4&gt;

&lt;p&gt;I believe the biggest achievement for our company and for me personally is that along the way our clients stop being clients and become our friends, and that’s something you can’t put a price on. We still communicate with all of our clients and the retention rate is more than 85%. They don’t just come back for software development and support, but for product launch and promotion.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-do-you-schedule-the-development-phases-of-the-apps-to-promise-the-timeline-to-your-clients"&gt;
  &lt;/a&gt;
  How do you schedule the development phases of the apps to promise the timeline to your clients?
&lt;/h4&gt;

&lt;p&gt;If you look at a high-level project, we usually distinguish between stages: specification/design; development; testing and QA and launch. We actively use Agile and Scrum methodologies for projects. By dividing the project into small iterations (2-week sprints) we ensure a controlled project development process. We pride ourselves in knowing that our clients always know what the team is working on and when the next version of the application will be released. It ensures high customer involvement. With every milestone we report to the client, gain their valuable feedback, and act upon it before taking up the next task. Our focus on quality and a transparent iterative work model has built confidence in us as a strategic and long-term technology partner.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-do-you-help-your-clients-in-choosing-the-right-yet-profitable-platform-for-app-development"&gt;
  &lt;/a&gt;
  How do you help your clients in choosing the right yet profitable platform for app development?
&lt;/h4&gt;

&lt;p&gt;On each project, we try to fully understand the business processes, the specifics of the subject matter and plans for the project’s development. After that, we give recommendations to the client based on our experience and expertise about how to proceed with their launch.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#which-would-you-suggest-for-a-successful-and-profitable-business-progression-native-or-hybrid-apps-how-do-you-define-the-factors-that-influenced-you-to-make-this-choice"&gt;
  &lt;/a&gt;
  Which would you suggest for a successful and profitable business progression, Native or hybrid apps? How do you define the factors that influenced you to make this choice?
&lt;/h4&gt;

&lt;p&gt;Each of these approaches has its own pros and cons. Hybrid development works best for projects where it is important to be cost-effective and quickly implement new features. However, Hybrid development has a number of drawbacks, in particular, it is less supported and when new versions of Android and IOS are released, the application can be unstable. Native development, in turn, is much more stable, the application runs smoother and there are many more possibilities for making complex animations and UI elements. The disadvantages of native development can be attributed to the high price due to the fact that each platform needs to be developed separately, and in this regard, the speed and cost of introducing new functionality is higher.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-do-you-scheme-your-pricing-model-how-do-you-fix-your-budget"&gt;
  &lt;/a&gt;
  How do you scheme your pricing model? How do you fix your budget?
&lt;/h4&gt;

&lt;p&gt;We work on three different engagement models: Time&amp;amp;Material, which means that at the start of the project, we work on pre-estimation and carry out work in sprints with preliminary approval of the scope of work and tasks performed. Payment is made based on the hours worked in the reporting period (2–4 weeks). This model lets you maintain the flexibility of the project and its functionality. Each stage of planning the next sprint, its content, and user-stories will be approved by our customer. Then there’s the Fixed Price model. We estimate the project and its parts and fix the cost. Until the first stage is completed, the next stage does not start. Payment, timeframes, and the scope of work are fixed and are specified in the contract. A contract with a fixed price is most often used for small projects with strictly limited functionality, which will definitely not be changed or supplemented. Finally, we offer the ability to use us as an Offshore Development Centre or Offshore Dedicated Team if you will. This kind of operation is a perfect solution for businesses wishing to augment their software development productivity without bearing too much additional expenses such as hiring extra staff or investing in other resources.&lt;/p&gt;

&lt;p&gt;First, we conduct several interviews with the client and form a commercial proposal, where we show him all the options and our team offers the best way for the customer to develop and evaluate the project based on the requirements.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#how-helpful-are-the-mobile-apps-developed-by-your-team-for-enhancing-your-clients-business"&gt;
  &lt;/a&gt;
  How helpful are the mobile apps developed by your team, for enhancing your clients’ business?
&lt;/h4&gt;

&lt;p&gt;Each mobile application is unique and useful. We make the product as usable as possible through design, high-quality development and strict testing. Our products have 1M+ end-users worldwide and help clients increase profits and customer loyalty, and open additional paths of monetization for their business.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-according-to-you-are-the-best-practices-to-attain-client-satisfaction"&gt;
  &lt;/a&gt;
  What according to you are the best practices to attain client satisfaction?
&lt;/h4&gt;

&lt;p&gt;The best practices to attain client satisfaction are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Responsible work approach&lt;/li&gt;
&lt;li&gt;Transparent reports&lt;/li&gt;
&lt;li&gt;Support client’s product during and after development&lt;/li&gt;
&lt;li&gt;High quality for a good price&lt;/li&gt;
&lt;li&gt;Finding an individual approach to each client&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;
  &lt;a href="#how-do-you-update-your-business-system-to-be-in-pace-with-the-technological-advancements"&gt;
  &lt;/a&gt;
  How do you update your business system to be in pace with the technological advancements?
&lt;/h4&gt;

&lt;p&gt;I think IT companies have to keep up with technological progress. We actively work with existing customers and offer them the ability to implement innovative solutions, improving their products. We also develop new products, constantly monitoring for technological advancements.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-are-your-thoughts-about-ar-vr-and-internet-of-things-iot"&gt;
  &lt;/a&gt;
  What are your thoughts about AR, VR and Internet of Things (IoT)?
&lt;/h4&gt;

&lt;p&gt;AR, VR, IoT are actively developing areas now and according to analytics and investments in this area still have huge potential for explosive growth. The current market has many industries that are yet to disintegrate into smaller sub-sectors. In the foreseeable future, these technologies will be in the home of every human being on the planet and become an integral part of our lives as the Internet has become nowadays. We as a company are staying on top of it and are developing these areas by introducing advanced developments, frameworks, libraries and methodologies.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#what-do-you-think-will-be-the-future-of-mobile-technology"&gt;
  &lt;/a&gt;
  What do you think will be the future of Mobile technology?
&lt;/h4&gt;

&lt;p&gt;Every year Google and Apple present new versions of their operating systems which are closer and closer to the features provided by desktop platforms, and sometimes even superior. Qualcomm, Mediatek, Exynos (Samsung) continually update the line of processors constantly raising the bar of performance and energy efficiency, which together with the OS makes for a great user experience. More and more often I, as well as I think you, can see that phones handle a large part of our interactions with the Internet. In line with this vision, we as a company see a great demand from society to innovate and create products on mobile platforms and this demand will increase more and more as it becomes an integral part of our lives.&lt;/p&gt;

&lt;p&gt;Originally published at &lt;a href="https://solveit.dev"&gt;https://solveit.dev&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>interview</category>
      <category>ceo</category>
      <category>development</category>
      <category>developer</category>
    </item>
    <item>
      <title>Asana vs Monday: Comparison of 2 Similar Project Management Software</title>
      <author>Ranjali Roy</author>
      <pubDate>Wed, 05 May 2021 13:01:39 +0000</pubDate>
      <link>https://dev.to/ranjalir/asana-vs-monday-comparison-of-2-similar-project-management-software-2689</link>
      <guid>https://dev.to/ranjalir/asana-vs-monday-comparison-of-2-similar-project-management-software-2689</guid>
      <description>&lt;p&gt;What happens if you put two feature-packed project management tools against one another? How do you pick the best app? &lt;/p&gt;

&lt;p&gt;Both Asana and Monday are loaded with similar functionalities which makes it hard to differentiate. But just like any project management software, they have their strengths and weaknesses that can be clear to see when you dig deeper.&lt;/p&gt;

&lt;p&gt;Let’s uncover these differences by comparing Asana vs Monday in detail and find out which tool is the most ideal for your org in 2021. But first, let us quickly overview the two tools.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#quick-overview-of-asana"&gt;
  &lt;/a&gt;
  Quick Overview of Asana
&lt;/h2&gt;

&lt;p&gt;Asana was founded in 2008 by former Facebook co-founder Dustin Moskovitz and ex-facebook engineer Justin Rosenstein as an internal tool. And it was released to the public for commercial use only in 2012, after being kept in private beta for 4 years.&lt;/p&gt;

&lt;p&gt;Today, Asana has grown into a big name in the PM sector, catering to a wide user base hailing from both development and non-development backgrounds. However, this tool is more popular among non-technical departments such as Marketing, Sales, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tIvcsR6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apl7zaidm93yp5r1lqz3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tIvcsR6A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/apl7zaidm93yp5r1lqz3.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Asana has adopted a task-oriented approach to PM where everything is centered around projects and tasks. This means for each project you create, you can add tasks and subtasks, assign to teammates, include description, tags, comments, and custom fields. &lt;/p&gt;

&lt;p&gt;Asana’s competitive advantage is its team collaboration and communication capabilities. But what other advantages do you get by choosing this app? And what are the disadvantages? &lt;/p&gt;

&lt;p&gt;Let’s have a look. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-choosing-asana"&gt;
  &lt;/a&gt;
  Advantages of choosing Asana
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Intuitive UI:&lt;/strong&gt; The user-interface in Asana is intuitive and makes the whole work experience fun. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Flexibility and customizability:&lt;/strong&gt; With Asana, you have the flexibility to customize this tool to suit your needs - right from custom templates and custom tags to custom fields. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multiple views:&lt;/strong&gt;Asana supports multiple views, namely, list, board, calendar, timeline, progress, and forms to help visualize your projects and monitor progress. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Workload snapshot:&lt;/strong&gt; The Workload aspect in Asana gives you an overview of what your entire squad is working on. It enables you to view what work is assigned to whom and also the workload of each individual. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Team collaboration:&lt;/strong&gt; Asana's key highlight is its squad collaboration capability that enables you to keep all your work items and related conversations in one place. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Plethora of integrations:&lt;/strong&gt; Choosing Asana gives you access to a great deal of crowd favourite third-party apps to help streamline your workflows.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-choosing-asana"&gt;
  &lt;/a&gt;
  Disadvantages of choosing Asana
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Can get overwhelming:&lt;/strong&gt; Asana is functionality-packed but the downside of this is that it can get overwhelming and distracting, especially for a newbie. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Steep learning curve:&lt;/strong&gt; Due to Asana's sea of functionalities and complex design, the learning curve is pretty steep, making onboarding a nightmare.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;No scope for agile:&lt;/strong&gt; Having only a simple &lt;a href="https://zepel.io/agile/kanban/what-are-kanban-boards/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;kanban board&lt;/a&gt;, Asana lacks the agile capabilities to implement other popular frameworks such as scrum like Zepel does. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lacks nestled view:&lt;/strong&gt; Asana doesn’t support viewing tasks and subtasks in a single, nestled view.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Can’t add Multiple assignees:&lt;/strong&gt; Asana doesn’t allow you to add multiple assignees to a single task.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Too many dollars for very little benefits:&lt;/strong&gt; The pricing scheme isn’t affordable, to say the least. You can only collaborate on projects with a maximum of 15 members, with functionality restrictions, in the free plan. You won’t find such functionality restrictions in &lt;a href="https://zepel.io/blog/asana-alternatives/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Asana alternatives&lt;/a&gt; like &lt;a href="https://zepel.io/compare/asana-alternative/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Zepel&lt;/a&gt;, even in its free plan.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#quick-overview-of-mondaycom"&gt;
  &lt;/a&gt;
  Quick Overview of monday.com
&lt;/h2&gt;

&lt;p&gt;In 2010, this tool was created to be used internally in an Israeli company called Wix.com, and in 2012, the product became a separate company called daPulse. Later, in 2017, daPulse was rebranded as monday.com. &lt;/p&gt;

&lt;p&gt;And now, monday.com has established itself as a visually appealing task management application in the PM tools market. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--stB0WiJf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dp54814nuukaa9t8xroo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--stB0WiJf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dp54814nuukaa9t8xroo.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Monday.com is loaded with functionalities and caters to both technical and non-technical teams. However, it is favoured by non-technical departments pertaining to Marketing, Sales, Customer Success, etc. &lt;/p&gt;

&lt;p&gt;What makes monday.com popular, apart from its colourful, attractive, and intuitive UI is its ability to collaborate with multiple departments. But its complex design and far too many functionalities result in a lot of clutter that you don’t find in adversaries like Zepel.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#advantages-of-choosing-mondaycom"&gt;
  &lt;/a&gt;
  Advantages of choosing monday.com
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Colorful and attractive UI:&lt;/strong&gt; Much like Asana, monday.com's user interface is also intuitive, colourful, and attractive on the whole. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multi-department collaboration:&lt;/strong&gt; Monday.com provides a wide range of functionalities from managing work items and tracking overall development of projects to CRM that makes multi-department collaboration hassle-free.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multiple assignees:&lt;/strong&gt; Similar to Zepel, and unlike Asana, monday.com enables you to assign multiple members to the same work item. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Wide range of 3rd-party integrations:&lt;/strong&gt; Monday.com enables you to integrate with several third-party applications to perform a range of activities from CRM to bug-tracking, and more.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#disadvantages-of-choosing-mondaycom"&gt;
  &lt;/a&gt;
  Disadvantages of choosing monday.com
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Overwhelming user experience and onboarding:&lt;/strong&gt; Monday.com's GUI is convoluted, making the learning curve extremely steep and the user experience overwhelming, especially while onboarding. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lacks full-fledged agile capabilities:&lt;/strong&gt; Other than boards for kanban, Monday.com doesn’t support full-fledged agile capabilities such as &lt;a href="https://zepel.io/agile/scrum/sprint/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Sprints&lt;/a&gt; for scrum that you can find in Zepel. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Confusing task-related functionalities:&lt;/strong&gt; In monday.com, all the functionalities and aspects related to managing tasks are not present in one place, thus leading to confusion. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Complicated task dependencies aspect:&lt;/strong&gt; Monday.com enables you to add task dependencies only via a separate column to additionally be kept track of and not in the item card itself. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Missing free plan:&lt;/strong&gt; The pricing scheme is not pocket-friendly and it doesn’t include a free scheme like its competitors. So, if pricing is your priority, check out these &lt;a href="https://zepel.io/blog/free-project-management-software/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;free project management software&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;




&lt;h2&gt;
  &lt;a href="#fullscale-comparison-of-asana-vs-monday"&gt;
  &lt;/a&gt;
  Full-scale comparison of Asana vs Monday
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;colgroup&gt;
&lt;col&gt;
&lt;col&gt;
&lt;col&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
  &lt;tr&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;&lt;span&gt;Asana&lt;/span&gt;&lt;/th&gt;
    &lt;th&gt;&lt;span&gt;Monday&lt;/span&gt;&lt;/th&gt;
  &lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;span&gt;Views &amp;amp; Features&lt;/span&gt;&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Multiple views namely board, gantt,&lt;/span&gt;&lt;br&gt;&lt;span&gt;calendar, and so on.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;Packed with utilities from traditional&lt;/span&gt;&lt;br&gt;&lt;span&gt;task handling to squad collaboration.&lt;/span&gt;&lt;br&gt;&lt;span&gt;But it lacks agile capabilities to&lt;/span&gt;&lt;br&gt;&lt;span&gt;implement agile frameworks other than&lt;/span&gt;&lt;br&gt;&lt;span&gt;simple kanban.&lt;/span&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Plenty of built-in views available such&lt;/span&gt;&lt;br&gt;&lt;span&gt;as Kanban Board, Timeline, Calendar,&lt;/span&gt;&lt;br&gt;&lt;span&gt;Workload, and List.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;Has far too many functionalities than&lt;/span&gt;&lt;br&gt;&lt;span&gt;needed but lacks agile capabilities.&lt;/span&gt;&lt;br&gt;&lt;span&gt;The functionalities vary based on&lt;/span&gt;&lt;br&gt;&lt;span&gt;cost. &lt;/span&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;span&gt;Ease of use &amp;amp; UX&lt;/span&gt;&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Intuitive UI that makes work fun but&lt;/span&gt;&lt;br&gt;&lt;span&gt;owing to the ton of functionalities, the&lt;/span&gt;&lt;br&gt;&lt;span&gt;learning curve is steep.&lt;/span&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Colourful, attractive and intuitive UI&lt;/span&gt;&lt;br&gt;&lt;span&gt;but has an extremely steep learning&lt;/span&gt;&lt;br&gt;&lt;span&gt;curve.&lt;/span&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;span&gt;Developer-friendliness&lt;/span&gt;&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Lacks powerful agile capabilities and&lt;/span&gt;&lt;br&gt;&lt;span&gt;deep integrations with GitHub, GitLab,&lt;/span&gt;&lt;br&gt;&lt;span&gt;and Bitbucket. Also, it doesn’t support&lt;/span&gt;&lt;br&gt;&lt;span&gt;`/` commands and markdown for quick&lt;/span&gt;&lt;br&gt;&lt;span&gt;sharing of code snippets among devs.&lt;/span&gt;&lt;br&gt;&lt;span&gt;So, it isn't developer-friendly.                                                                               &lt;/span&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Similar to Asana, it also lacks&lt;/span&gt;&lt;br&gt;&lt;span&gt;powerful agile capabilities and deep&lt;/span&gt;&lt;br&gt;&lt;span&gt;integrations with dev-favourites such&lt;/span&gt;&lt;br&gt;&lt;span&gt;as GitHub, GitLab, and Bitbucket. No&lt;/span&gt;&lt;br&gt;&lt;span&gt;markdown support and `/` commands&lt;/span&gt;&lt;br&gt;&lt;span&gt;for getting work done quickly.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;P.S. If you want all of the above&lt;/span&gt;&lt;br&gt;&lt;span&gt;functionalities, try Zepel - one of the&lt;/span&gt;&lt;br&gt;&lt;span&gt;most dev-friendly apps out there. &lt;/span&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;
&lt;span&gt;Collaboration &amp;amp; team&lt;/span&gt;&lt;br&gt;&lt;span&gt;management&lt;/span&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Can collaborate with up to 15 users for&lt;/span&gt;&lt;br&gt;&lt;span&gt;free. Onboarding members is hellish&lt;/span&gt;&lt;br&gt;&lt;span&gt;owing to its steep learning curve.&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;Communication and collaboration&lt;/span&gt;&lt;br&gt;&lt;span&gt;among your squad are made efficient&lt;/span&gt;&lt;br&gt;&lt;span&gt;with the conversations utility that holds&lt;/span&gt;&lt;br&gt;&lt;span&gt;all squad-related conversations in one&lt;/span&gt;&lt;br&gt;&lt;span&gt;place.&lt;/span&gt;&lt;br&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Cannot collaborate with users for&lt;/span&gt;&lt;br&gt;&lt;span&gt;free. And similar to Asana,&lt;/span&gt;&lt;br&gt;&lt;span&gt;onboarding is a nightmare due to its&lt;/span&gt;&lt;br&gt;&lt;span&gt;steep learning curve. &lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span&gt;Offers basic collaboration-focussed&lt;/span&gt;&lt;br&gt;&lt;span&gt;aspects but they’re not in one place.&lt;/span&gt;&lt;br&gt;&lt;span&gt;Dependencies related to tasks can be&lt;/span&gt;&lt;br&gt;&lt;span&gt;added but only as a separate column.&lt;/span&gt;&lt;br&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;span&gt;Integrations &amp;amp; add-ons&lt;/span&gt;&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;160+ integrations available with &lt;/span&gt;&lt;br&gt;&lt;span&gt;popular&lt;/span&gt;&lt;span&gt; third-party apps&lt;/span&gt;
&lt;/td&gt;
    &lt;td&gt;&lt;span&gt;50+ integrations are available&lt;/span&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;span&gt;Pricing&lt;/span&gt;&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Allows you to collaborate with up to 15&lt;/span&gt;&lt;br&gt;&lt;span&gt;users for free but with functionality&lt;/span&gt;&lt;br&gt;&lt;span&gt;restrictions. The paid scheme starts at&lt;/span&gt;&lt;br&gt;&lt;span&gt;$10.99/person/month&lt;/span&gt;&lt;span&gt;. &lt;/span&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Complex payment scheme with 4&lt;/span&gt;&lt;br&gt;&lt;span&gt;paid plans - basic, standard, pro, and&lt;/span&gt;&lt;br&gt;&lt;span&gt;enterprise, starting at &lt;/span&gt;&lt;span&gt;$8/seat/month&lt;/span&gt;&lt;br&gt;&lt;span&gt;billed annually.&lt;/span&gt;
&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;&lt;span&gt;User Rating&lt;/span&gt;&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Capterra - &lt;/span&gt;&lt;span&gt;4.4/5&lt;/span&gt;&lt;span&gt; (9434)&lt;/span&gt;&lt;br&gt;&lt;span&gt;G2 - &lt;/span&gt;&lt;span&gt;4.3/5&lt;/span&gt;&lt;span&gt; (7,021)&lt;/span&gt;
&lt;/td&gt;
    &lt;td&gt;
&lt;span&gt;Capterra - &lt;/span&gt;&lt;span&gt;4.6/5&lt;/span&gt;&lt;span&gt; (2229)&lt;/span&gt;&lt;br&gt;&lt;span&gt;G2 - &lt;/span&gt;&lt;span&gt;4.6/5&lt;/span&gt;&lt;span&gt; (1443)&lt;/span&gt;
&lt;/td&gt;
  &lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;




&lt;h2&gt;
  &lt;a href="#asana-vs-monday-the-decider-which-project-management-software-to-pick"&gt;
  &lt;/a&gt;
  Asana vs Monday: The decider, which project management software to pick?
&lt;/h2&gt;

&lt;p&gt;Both Asana and monday.com are best suited for non-technical departments, namely, marketing, sales, and so on. &lt;/p&gt;

&lt;p&gt;If you’re looking for a collaboration and communication tool for your business with good task-handling capabilities, Asana is a great tool. But if you’re after a project management software that is visually appealing, intuitive, and fun to use with decent task-handling functionalities, monday.com is apt for you.&lt;/p&gt;

&lt;p&gt;However, be prepared to invest a lot of time and money if you’re choosing either one of these PM tools. And also if you’re a software development org, forget about implementing agile.&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#what-users-think-about-the-two-tools-reasons-to-switch-to-better-alternatives"&gt;
  &lt;/a&gt;
  What users think about the two tools: Reasons to switch to better alternatives
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.capterra.com/p/120550/Asana/reviews/158007/"&gt;Asana review on Capterra&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;“Some teams use Asana for project management and perhaps it's good for that. For me I feel it isn't very useful for technology teams. We can't paste code, we have no auto integration with build processes like Jenkins and it's incredibly slow to wait 5 seconds to load each asana task. It's not easy to pass around a task #... as Asana creates these long tokens for every task. Several of us have asked for these features on Twitter with the Asana team and we just are told it's not something that they're interested in adding.&lt;/p&gt;

&lt;p&gt;Pros: I guess it's an easy interface to make a task&lt;/p&gt;

&lt;p&gt;Cons: It really doesn't offer what Jira or other software packages offer... there's no enforced flow for bug / defect tracking, there's no easy way to pull tickets up (i.e. it's not a simple task identifier such as CR4478, instead it's a 20 character random string. When you pull up an individual task it takes nearly 5 seconds to load it, and you get the Asana splash screen while you wait. You can't easily put code into the Asana tasks. Asana doesn't have 3rd party API connecting (like Jira) to automatically link to Jenkins or other products. As a defect tracking system it's entirely lacking. This may not be what you intended it to be used for, but that's how we use it (for everything) and it's incredibly lacking. We have to be creative with Asana to make it sorta work and it's still not very appealing from the QA or Dev side of things.”&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.capterra.com/p/147657/monday-com/reviews/1292884/"&gt;Monday review on Capterra&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;“Overall experience is good. If you're utilizing this software, you need to make sure that your team's adoption is fast and consistent. Otherwise, you'll find yourself being the only person using it and doing more micro-management.&lt;/p&gt;

&lt;p&gt;Pros: Visually, Monday.com is appealing. Its color scheme makes it easy to quickly scan and view a project or task's status. It is also very easy to organize projects and tasks in various boards. Each task has the ability to add comments, files, docs, etc to keep everything in one place.&lt;/p&gt;

&lt;p&gt;Cons: There are some key features I always look for in a PM software that this one doesn't have: task dependency, able to quickly build timeline, easily describe who is accountable for which task. Right now, timeline building is very click heavy. It's OK if you are needing to manage few projects with few tasks, but by not having task dependencies or a user flow that makes it easier to get several dozen tasks added, it is very time extensive.”&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#a-list-of-featurepacked-alternatives-to-asana-and-monday"&gt;
  &lt;/a&gt;
  A list of feature-packed alternatives to Asana and Monday
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1-zepel"&gt;
  &lt;/a&gt;
  1. Zepel
&lt;/h3&gt;

&lt;p&gt;Zepel is the perfect alternative as it is intuitive like Asana and monday.com but also powerful without any clutter. Owing to its uncomplex design without overwhelming functionalities, the learning curve isn’t steep and so you can painlessly onboard your squads. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ryEAti0B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2wc4soe47drer4075qu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ryEAti0B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/o2wc4soe47drer4075qu.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Project managers and engineering squads love Zepel as it comes with powerful agile capabilities that enable you to implement not just kanban but also scrum, and even a combination of both. Apart from this, Zepel’s USP is its developer-friendliness. It is one of the most developer-friendly apps in the market today with deep integrations with &lt;a href="https://zepel.io/integrations/github/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;GitHub&lt;/a&gt;, &lt;a href="https://zepel.io/integrations/github/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;GitLab&lt;/a&gt;, &lt;a href="https://zepel.io/integrations/bitbucket/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Bitbucket&lt;/a&gt;, and other similar sources.&lt;/p&gt;

&lt;p&gt;That’s not all. Zepel also enables you to set up your git workflows to perform automatic status updates on your dev squad’s behalf and receive real-time Slack notifications. Some other developer-favourite perks of Zepel are the markdown support and &lt;code&gt;/&lt;/code&gt; commands that help get work done in a jiffy. &lt;/p&gt;

&lt;p&gt;Some other perks of picking Zepel are the ability to add task dependencies, item ID to track tasks, and so on that you won’t get when you opt for Asana and monday.com. &lt;/p&gt;

&lt;p&gt;Zepel is complete with a functionality called Streams that brings in  &lt;a href="https://zepel.io/blog/analyze-customer-feedback-guide/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;customer feedback&lt;/a&gt; from various external sources such as Canny, Intercom, Zendesk, etc., in the form of requests.  This will help you prioritize, build, and ship customer-focussed functionalities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Powerful, intuitive UI that makes onboarding hassle-free&lt;/li&gt;
&lt;li&gt;Agile capabilities for both scrum and kanban such as &lt;a href="https://zepel.io/features/sprints/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Sprints&lt;/a&gt;, &lt;a href="https://zepel.io/agile/reports/burndown/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;burndown charts&lt;/a&gt;, etc&lt;/li&gt;
&lt;li&gt;Developer-friendly due to deep integration with GitHub, GitLab, Bitbucket, and a variety of similar sources&lt;/li&gt;
&lt;li&gt;Markdown support and &lt;code&gt;/&lt;/code&gt; commands for quick work&lt;/li&gt;
&lt;li&gt;Workflow automation to perform status updates and receive instant Slack notifications&lt;/li&gt;
&lt;li&gt;Brings in and helps prioritize customer feedback from multiple sources like Canny, Intercom, etc.&lt;/li&gt;
&lt;li&gt;Value for money pricing!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://zepel.io/features/?ref=header/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Check out all the functionalities that Zepel offers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://zepel.io/pricing/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Zepel’s pricing plan&lt;/a&gt; consists of a free plan that enables you to add 5 users for free forever without functionality restrictions. From the 6th member onwards, you can opt for either one of the business schemes: the standard annual that starts at &lt;strong&gt;$5/user/month&lt;/strong&gt; or the standard monthly that starts at &lt;strong&gt;$7/user/month&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best For:&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;Squads of any size that desire to build customer-focussed products the agile way. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-basecamp"&gt;
  &lt;/a&gt;
  2. Basecamp
&lt;/h3&gt;

&lt;p&gt;Basecamp is a solid PM solution that is ideal for managing tasks and a notable alternative to Asana and Monday. Because, akin to these two tools, Basecamp also offers plenty of functionalities and integrations. What makes Basecamp standout is its ability to effectively bring all members of different departments together. &lt;/p&gt;

&lt;p&gt;However, Basecamp lacks agile capabilities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--KOh0igfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3l1gu3v8q0s96slf9ihs.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--KOh0igfI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3l1gu3v8q0s96slf9ihs.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Messaging platform with a forum-like view for squad communication&lt;/li&gt;
&lt;li&gt;Automatic check-ins for frequent status updates&lt;/li&gt;
&lt;li&gt;Controlled client access &lt;/li&gt;
&lt;li&gt;Hill charts to track progress&lt;/li&gt;
&lt;li&gt;File sharing with a storage of 500GB&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://basecamp.com/features"&gt;Here’s everything that Basecamp offers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Basecamp offers a basic plan with a 30-day free trial. At the end of the trial, you will be charged a flat fee of &lt;strong&gt;$99/month&lt;/strong&gt; for unlimited users.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best For:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Remote, service-based companies that don’t require agile methodologies.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-clickup"&gt;
  &lt;/a&gt;
  3. ClickUp
&lt;/h3&gt;

&lt;p&gt;ClickUp is another functionality-loaded PM app that tries hard to be an all-in-one productivity tool. You can find any functionality that caters to any business from any industry as an add-on or an integration. The user interface is intuitive and attractive. However, ClickUp lacks the finesse of a full-fledged &lt;a href="https://zepel.io/agile-tools/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;agile tool&lt;/a&gt; when it comes to implementing agile. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s7Q9B7YO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0pgs453wbx1j2qi6cv73.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s7Q9B7YO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0pgs453wbx1j2qi6cv73.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provides a wide range of functionalities for any company pertaining to any industry&lt;/li&gt;
&lt;li&gt;Supports a number of views, namely, board, list, timeline, workload, box, table, calendar, activity, and mind maps.&lt;/li&gt;
&lt;li&gt;Customizable, from custom tags to custom statuses&lt;/li&gt;
&lt;li&gt;A massive number of third-party integrations&lt;/li&gt;
&lt;li&gt;A huge fan base among solo users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://clickup.com/features"&gt;Have a look at all the functionalities ClickUp offers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can compare &lt;a href="https://zepel.io/blog/asana-vs-clickup/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Asana vs ClickUp&lt;/a&gt; here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ClickUp includes a free plan that enables you to add unlimited users but there are some restrictions of functionalities. And to access those functionalities, that vary with cost, you must pick a suitable &lt;a href="https://clickup.com/pricing"&gt;paid scheme&lt;/a&gt;, starting at &lt;strong&gt;$5/member&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best For:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Non-IT businesses of any size belonging to any sector.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-jira"&gt;
  &lt;/a&gt;
  4. Jira
&lt;/h3&gt;

&lt;p&gt;Jira is the industry standard that many tools use as a guideline. Most software teams who want to adopt agile to build products have gradually switched to Jira from other tools due to the lack of power.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yBl523du--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4yzxiwmt6o16d43640w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yBl523du--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a4yzxiwmt6o16d43640w.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, in recent times, superior &lt;a href="https://zepel.io/blog/jira-alternative/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;alternatives to Jira&lt;/a&gt; that are more solid there have emerged — less clunky, faster, offer more powerful agile capabilities of full-fledged kanban and &lt;a href="https://zepel.io/blog/scrum-tools/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;scrum tools&lt;/a&gt;, and are a value for money.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Flexibility that enables you to customize your workflows&lt;/li&gt;
&lt;li&gt;Issue tracking that lets you capture issues effortlessly&lt;/li&gt;
&lt;li&gt;Agile capabilities to implement not just kanban but also scrum&lt;/li&gt;
&lt;li&gt;Roadmap functionality to visualize projects&lt;/li&gt;
&lt;li&gt;Massive library of integrations with third-party apps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://www.atlassian.com/software/jira/features"&gt;Take a look at the complete list of Jira’s functionalities&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;br&gt;
Jira's free plan lets you add your first 10 members in for free but with feature restrictions. But if you want to access all its functionalities, you must upgrade to the premium plan that starts at $5/member/month.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best For:&lt;/strong&gt;&lt;br&gt;
Service-based organizations and IT companies looking to build software products using agile methodologies.&lt;br&gt;
To help you decide whether Jira is right for you or not, here is a helpful comparison of &lt;a href="https://zepel.io/blog/asana-vs-jira/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Asana vs Jira&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-trello"&gt;
  &lt;/a&gt;
  5. Trello
&lt;/h3&gt;

&lt;p&gt;Trello is the easiest PM tool to get started with. This &lt;a href="https://zepel.io/features/kanban-board/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;kanban board application&lt;/a&gt; is incredibly user-friendly and takes only 10 mins to onboard your entire org. But don’t expect Trello to be powerful with agile capabilities to implement other frameworks such as scrum. Because you will be disappointed and you will need to look for &lt;a href="https://zepel.io/compare/trello-alternative/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Trello alternatives&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tNeobpzC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qoa26rbkx89pgosymhdi.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tNeobpzC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qoa26rbkx89pgosymhdi.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Key Highlights:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Boards that represent projects and sticky note-like cards representing tasks to implement basic kanban&lt;/li&gt;
&lt;li&gt;Flexible and customizable with plenty of templates&lt;/li&gt;
&lt;li&gt;Simple user interface that’s fast and responsive&lt;/li&gt;
&lt;li&gt;Ability to add on any number of functionalities as power-ups&lt;/li&gt;
&lt;li&gt;A catalog of integrations with 3rd party apps like Zapier, Hubspot, Dropbox, etc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://trello.com/b/zo2N0vE6/trello-features"&gt;View all the functionalities that Trello provides&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pricing:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://trello.com/en/pricing"&gt;Trello's pricing&lt;/a&gt; is extremely simple. There’s a free plan that enables you to collaborate with unlimited users but with functionality restrictions. For complete access to all the utilities, power-ups, and integrations, you must sign up for a basic plan that starts at &lt;strong&gt;$12.50/member/month&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Best For:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Small non-IT companies that require simple workflow visualization and task handling. &lt;/p&gt;

&lt;p&gt;Compare &lt;a href="https://zepel.io/blog/asana-vs-trello/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Asana vs Trello&lt;/a&gt; and &lt;a href="https://zepel.io/blog/asana-vs-trello-vs-monday/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;Asana vs Trello vs Monday&lt;/a&gt; and find out which tool suits your org. &lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#why-zepel-is-the-ideal-project-management-tool-for-modern-teams"&gt;
  &lt;/a&gt;
  Why Zepel is the ideal project management tool for modern teams
&lt;/h2&gt;

&lt;p&gt;Zepel is the PM tool meant for your squad and your organization for the following reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Zepel enables you to collaborate with squads of any size painlessly.&lt;/li&gt;
&lt;li&gt;You can implement Scrum, Kanban, or both with Zepel, making it a favourite &lt;a href="https://zepel.io/solutions/engineering/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;engineering project management software&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Zepel is one of the most developer-friendly PM tools as it provides deep integrations with developer-favourite apps like GitHub, GitLab, and Bitbucket, markdown support, git workflow automation, and &lt;code&gt;/&lt;/code&gt; commands.&lt;/li&gt;
&lt;li&gt;Win your customers over and maintain a low churn rate with Zepel Streams that helps you prioritize and build customer-focussed functionalities.&lt;/li&gt;
&lt;li&gt;Zepel’s affordable and straightforward pricing enables you to add up to 5 users for free forever without any functionality restrictions. From the 6th member onwards, you will be charged only &lt;strong&gt;$5/member&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;Make your customers and your developers happy, choose Zepel. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://zepel.io/customer-reviews/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;4000+ development teams love Zepel&lt;/a&gt; and you will too. :) &lt;/p&gt;

&lt;p&gt;Sign up and &lt;a href="https://zepel.io/?utm_source=devto&amp;amp;utm_medium=text&amp;amp;utm_campaign=asana-vs-monday"&gt;try Zepel for free&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>projectmanagement</category>
      <category>productivity</category>
      <category>alternativetools</category>
      <category>productmanagement</category>
    </item>
    <item>
      <title>Quickly explore your data with `uniq` and `tally`</title>
      <author>matt swanson</author>
      <pubDate>Wed, 05 May 2021 13:00:00 +0000</pubDate>
      <link>https://dev.to/swanson/quickly-explore-your-data-with-uniq-and-tally-4iaj</link>
      <guid>https://dev.to/swanson/quickly-explore-your-data-with-uniq-and-tally-4iaj</guid>
      <description>&lt;p&gt;A common question you may want to answer on user-input data is: what values have been entered and how many times is each one used?&lt;/p&gt;

&lt;p&gt;Maybe you have a list of dropdown options and you want to investigate removing a rare-used option.&lt;/p&gt;

&lt;p&gt;Ruby has two handy methods that I reach for often: &lt;code&gt;uniq&lt;/code&gt; and &lt;code&gt;tally&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;uniq&lt;/code&gt; method operates on an enumerable and compresses your data down to unique values.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Outreach&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="ss"&gt;:status&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;uniq&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"Confirmed w/o Outreach"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s2"&gt;"Awaiting Outreach"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s2"&gt;"Responded"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s2"&gt;"No Response Expected"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s2"&gt;"Follow-up"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s2"&gt;"Awaiting Reply"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;While most developers are familiar with &lt;code&gt;uniq&lt;/code&gt;, the &lt;code&gt;tally&lt;/code&gt; method is one of the best kept secrets in Ruby. The &lt;code&gt;tally&lt;/code&gt; method takes an enumerable of values and returns a hash where the keys are unique values and the values are the number of times the value appeared in the list.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Outreach&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="ss"&gt;:status&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;tally&lt;/span&gt;
&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"Confirmed w/o Outreach"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;106&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s2"&gt;"Awaiting Outreach"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s2"&gt;"Responded"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s2"&gt;"No Response Expected"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s2"&gt;"Follow-up"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s2"&gt;"Awaiting Reply"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;These two methods are great to have in your toolbox to quickly explore your data in a Rails console.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#additional-resources"&gt;
  &lt;/a&gt;
  Additional Resources
&lt;/h2&gt;

&lt;p&gt;Ruby API: &lt;a href="https://ruby-doc.org/core-3.0.0/Enumerable.html#method-i-uniq"&gt;Enumerable#uniq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ruby API: &lt;a href="https://ruby-doc.org/core-3.0.0/Enumerable.html#method-i-tally"&gt;Enumerable#tally&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;a href="https://twitter.com/_swanson"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0llgMsYy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://boringrails.com/images/twitter-banner.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>ruby</category>
      <category>rails</category>
      <category>webdev</category>
    </item>
  </channel>
</rss>
