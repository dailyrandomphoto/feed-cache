<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>The 'New Normal' - what does your work setting look like post pandemic? </title>
      <author>Josefine Schfr</author>
      <pubDate>Thu, 24 Jun 2021 07:51:51 +0000</pubDate>
      <link>https://dev.to/s2engineers/the-new-normal-what-does-your-work-setting-look-like-post-pandemic-171o</link>
      <guid>https://dev.to/s2engineers/the-new-normal-what-does-your-work-setting-look-like-post-pandemic-171o</guid>
      <description>&lt;p&gt;It feels like many people are slowly re-emerging from seemingly endless pandemic hibernation, digging their way out of their remote locations, reluctantly changing their sweats for something less comfortable and returning to their offices. The timeline and speed of this process of course highly varies depending on where you are located, but sooner or later, most of us will need to consider yet another ‘new normal’. &lt;/p&gt;

&lt;p&gt;And just like all the new routines we had to adapt to over the past 18 months, whether it's working from home, working more or less or different hours or annoying (yet important!) hygiene concepts at the office - we now have to re-think the way we want to work together all over again. &lt;/p&gt;

&lt;p&gt;&lt;em&gt;But what does that mean?&lt;/em&gt; &lt;/p&gt;

&lt;p&gt;At our organisation, we were allowed to work from home over the past months and as it looks like will keep this privilege even as the world opens up again. This of course has many individual benefits but also makes working together in large teams a bigger challenge. This ‘remote focus’ (as our new way of working was coined) means most meetings will be held remotely and our office spaces will change to fit our new needs: focus areas, spaces to collaborate, little phone booths for privacy etc. &lt;/p&gt;

&lt;p&gt;But what does this &lt;em&gt;really&lt;/em&gt; mean? &lt;/p&gt;

&lt;p&gt;Hearing we might not have fixed desks and or team spaces, but book desks or areas according to our needs honestly scares me a little. Sure, it’s great to guarantee the flexibility to take every meeting from any location, to possibly save office space we wouldn’t use and try to treat both remote and on location as equally as possible - but what if we lose our sense of community? I’m afraid I’ll end up sitting in an anonymous ‘focus area’ at a steril desk and only see my teammates in remote video calls. That can’t be the future, right?&lt;/p&gt;

&lt;p&gt;How can we manage remote and real-life cooperation? What do the new office spaces even need? Should we maybe re-think the way we work all together? &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How are you addressing these issues in your organisation? Did you already return to the offices? Did you learn something in 1+ year working from home that you wish you knew before? (How) did you manage to keep the community spirit alive?&lt;/strong&gt; I’m super curious to learn how you are doing this and if you already got some post-pandemic office hacks :) &lt;/p&gt;

</description>
      <category>discuss</category>
      <category>remotework</category>
      <category>watercooler</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Template Literal Types in TypeScript</title>
      <author>Maina Wycliffe</author>
      <pubDate>Thu, 24 Jun 2021 06:39:45 +0000</pubDate>
      <link>https://dev.to/this-is-learning/template-literal-types-in-typescript-4fe8</link>
      <guid>https://dev.to/this-is-learning/template-literal-types-in-typescript-4fe8</guid>
      <description>&lt;p&gt;In this article, we will take a closer look at template literal types and how you can take advantage of them in your day-to-day activities as a developer. &lt;/p&gt;

&lt;p&gt;So, what are template literal types?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#literal-types"&gt;
  &lt;/a&gt;
  Literal Types
&lt;/h2&gt;

&lt;p&gt;In order to understand what template literal types are, we first need to have a brief look at literal types. Literal types allow us to define types that are more specific, instead of something that is generalized like string or number. &lt;/p&gt;

&lt;p&gt;Let's say you have a switch; it can have the value of either on or off. One way of defining the types of this, is to use literal types, giving it the type of either &lt;code&gt;On&lt;/code&gt; or &lt;code&gt;Off&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;On&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the case above, the value of any variable of type Switch can only be &lt;code&gt;On&lt;/code&gt; or &lt;code&gt;Off&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;On&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you tried to assign any other values other than &lt;code&gt;On&lt;/code&gt; or &lt;code&gt;Off&lt;/code&gt;, typescript will throw an error:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--W179fkX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/06/Template-Literal-Types-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--W179fkX9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/06/Template-Literal-Types-1.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#template-literal-types"&gt;
  &lt;/a&gt;
  Template Literal Types
&lt;/h2&gt;

&lt;p&gt;Template Literal Types build on this, allowing you to build new types using a template and can expand to many different string using &lt;a href="https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#union-types"&gt;Unions&lt;/a&gt;. This works just like &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"&gt;template literal/strings&lt;/a&gt;, but instead of concatenating to form strings, it concatenates to form types.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;variable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;tVariable&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;string&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// this results to a variable&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`This is a concatenated &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;variable&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;

&lt;span class="c1"&gt;// while this results to type&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;X&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`This is a concatenated &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;tVariable&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;As you can see, they are similar in syntax apart from what they are defined as, the first being a variable and the second being a type. The type of the first definition will be string, while the second one will be of type &lt;code&gt;This is a concatenated string&lt;/code&gt; and a variable of that type can only be assigned to that string.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sN1lr1cn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/06/image-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sN1lr1cn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/06/image-2.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; If you tried to use variable instead of a type when defining Template Literal Type, it will throw the following error: &lt;code&gt;'variable' refers to a value, but is being used as a type here. Did you mean 'typeof variable'?&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If we take our example above of type Switch, we may want to have a function that returns the status of the switch, i.e. &lt;code&gt;Switch is On&lt;/code&gt; or &lt;code&gt;Switch is Off&lt;/code&gt;, and have it strongly typed, in that it can only return only those strings. With Template Literal Types, we can define this as follows:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;On&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;On&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Switch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Off&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;SwitchStatus&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`Switch is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;Switch&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this in return gives us the types: &lt;code&gt;Switch is On&lt;/code&gt; and &lt;code&gt;Switch is Off&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fhpav-uD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/06/Template-Literal-Types-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fhpav-uD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/06/Template-Literal-Types-3.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#using-to-build-types-for-grid-items-coordinates"&gt;
  &lt;/a&gt;
  Using To Build Types for Grid Items Coordinates
&lt;/h2&gt;

&lt;p&gt;Let's say we are working with a grid system, and wanted to perform a task on various boxes in our grid, like placing something on a specific box given its coordinates. It would be nice if we could strongly type it and ensure we don't specify values outside the grid.&lt;/p&gt;

&lt;p&gt;For instance, if we had a grid whose length was 3 smaller boxes on either side of the box. This makes it that we have 9 smaller box fitting on our big box. We can use literal types to create a type for each of our boxes, with the type being its position in the grid. So, the first gets &lt;code&gt;L1-H1&lt;/code&gt; and the last gets &lt;code&gt;L3-H3&lt;/code&gt; types, as shown below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;SquareBoxes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;L1-H1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;L1-H2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;L1-H3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;L2-H1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;L2-H2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;L2-H3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;L3-H1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;L3-H2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;L3-H3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Those are a lot of types to create by hand even for a small grid of 9 boxes. But, with template literals types, we could define just the type of the length of one side and use template string literals to expand the rest of the types:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;SmallerBoxes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`L&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-H&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And this would yield the same result as before:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qMPMRCvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/06/Template-Literal-Types-2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qMPMRCvr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cms.mainawycliffe.dev/content/images/2021/06/Template-Literal-Types-2.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This makes our work easier and it is more versatile, because if the smaller boxes ever increased or decreased, you only need to adjust the size of the length.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// 16 boxes&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// 25 boxes&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;3&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;4&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// 4 boxes&lt;/span&gt;
&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;length&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#combining-with-generics"&gt;
  &lt;/a&gt;
  Combining With Generics
&lt;/h2&gt;

&lt;p&gt;We can combine template literal types with generics to some amazing effect. Let's take with a Type of &lt;code&gt;Person&lt;/code&gt;, which has two properties - &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;Person&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We want to add two methods to be called to update the values of &lt;code&gt;name&lt;/code&gt; or &lt;code&gt;age&lt;/code&gt; i.e. &lt;code&gt;nameChanged&lt;/code&gt; or &lt;code&gt;ageChanged&lt;/code&gt;. We can create a new type, that will take type &lt;code&gt;Person&lt;/code&gt; as a generic, and for each property of type &lt;code&gt;Person&lt;/code&gt;, we will add new properties with &lt;code&gt;Changed&lt;/code&gt; appended the original properties of type Person i.e. &lt;code&gt;nameChanged&lt;/code&gt; and &lt;code&gt;ageChanged&lt;/code&gt;. We will used template literal types to create a new property by appending &lt;code&gt;Changed&lt;/code&gt; to the property name.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;WithPersonChangedEvents&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Property&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kr"&gt;keyof&lt;/span&gt; &lt;span class="nx"&gt;Type&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;Changed`&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;Property&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;void&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;Type&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; The above example uses some advanced typescript technique for manipulating types on top of Template Literal Types which you can learn more &lt;a href="https://www.typescriptlang.org/docs/handbook/2/types-from-types.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, we can use both of our Types (&lt;strong&gt;Person&lt;/strong&gt; and &lt;strong&gt;WithPersonChangedEvent&lt;/strong&gt;) above:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;WithPersonChangedEvents&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;nameChanged&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newName&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="na"&gt;ageChanged&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;newAge&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ageChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Logs: 21&lt;/span&gt;
&lt;span class="nx"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nameChanged&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;new Name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// Logs: "new Name"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And as you can see, our object - &lt;code&gt;person&lt;/code&gt; has 4 properties, with 2 being the added methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;We have learned about Template Literal Types in Typescript and how they build on top Literal types to provide you even more flexibility when defining types. We have also looked at different use cases like in a grid system type definition for different boxes coordinates and combining them with generics to define extra properties for an object.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Creating Types from Types - &lt;a href="https://www.typescriptlang.org/docs/handbook/2/types-from-types.html"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Template Literal Types Documentation - &lt;a href="https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Template literals (Template strings) - &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Types and Mocking - Typescript - &lt;a href="https://mainawycliffe.dev/blog/types-and-mocking-typescript"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Transforming Types in TypeScript with Utility Types - &lt;a href="https://mainawycliffe.dev/blog/transforming-types-typescript-utility-types"&gt;Link&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://github.com/mainawycliffe/discussion/discussions/13"&gt; Discuss this Article&lt;/a&gt;&lt;/p&gt;

</description>
      <category>typescript</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>programming</category>
    </item>
    <item>
      <title>How to build an AI game bot for Bomberman</title>
      <author>Joy</author>
      <pubDate>Thu, 24 Jun 2021 06:26:44 +0000</pubDate>
      <link>https://dev.to/joooyz/how-to-build-an-ai-game-bot-for-bomberman-58a3</link>
      <guid>https://dev.to/joooyz/how-to-build-an-ai-game-bot-for-bomberman-58a3</guid>
      <description>&lt;p&gt;This is an introductory tutorial for anyone interested in building their own AI to play in a game. All you need to start is some familiarity with programming in Python. This is part 1 of a series originally published on the &lt;a href="https://www.gocoder.one/blog/how-to-build-an-ai-game-bot-bomberman"&gt;Coder One blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We'll be using a custom game environment called Dungeons and Data Structures. It's inspired by the classic NES game &lt;a href="https://en.wikipedia.org/wiki/Bomberman"&gt;Bomberman&lt;/a&gt;, but with some variations. This game was used for an &lt;a href="https://www.gocoder.one/blog/ai-game-competitions-list"&gt;AI game competition&lt;/a&gt; called the &lt;a href="https://www.gocoder.one/aisports"&gt;AI Sports Challenge&lt;/a&gt; organized by &lt;a href="https://www.gocoder.one"&gt;Coder One&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JoDaspc_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7sjzmhb28banzvi6gnv.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JoDaspc_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/n7sjzmhb28banzvi6gnv.gif" alt="Dungeons and Data Structures"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In this first part of the tutorial series, we'll cover:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Installing and setting up the Dungeons and Data Structures AI game environment&lt;/li&gt;
&lt;li&gt;The starter kit for building our bot&lt;/li&gt;
&lt;li&gt;Getting familiar with the AI game environment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No fancy algorithms or ML just yet. We'll start off simple, and build on our bot with more advanced strategies as part of this series.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#game-overview"&gt;
  &lt;/a&gt;
  Game overview
&lt;/h2&gt;

&lt;p&gt;In Dungeons and Data Structures, your goal is to either be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The last bot standing, or&lt;/li&gt;
&lt;li&gt;The bot with the most points by the end of the game.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can take away an opponent's HP and earn points by using bombs to destroy wooden and ore (green) blocks. For a full description of the game rules, you can check the &lt;a href="https://www.notion.so/Game-Documentation-9b130e1195fc404cbf1d6ad38dbb4832"&gt;Dungeons and Data Structures Game Documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started"&gt;
  &lt;/a&gt;
  Getting Started
&lt;/h2&gt;

&lt;p&gt;First, let's install the game environment.&lt;/p&gt;

&lt;p&gt;You can do that by heading over to the &lt;a href="https://github.com/CoderOneHQ/dungeons-and-data-structures"&gt;Dungeons and Data Structures Repo&lt;/a&gt;, and downloading the package &lt;code&gt;coderone-challenge-dungeon-0.1.6.tar.gz&lt;/code&gt; from the &lt;a href="https://github.com/CoderOneHQ/dungeons-and-data-structures/releases/tag/0.1.6"&gt;Releases page&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Install it by navigating to the working directory containing the package you just downloaded, and run in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;pip &lt;span class="nb"&gt;install &lt;/span&gt;coderone-challenge-dungeon-0.1.6.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To check that your installation is working, run:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python &lt;span class="nt"&gt;-m&lt;/span&gt; coderone.dungeon.main &lt;span class="nt"&gt;--interactive&lt;/span&gt; coderone.dungeon.agent
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You should see a window similar to this pop up:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gBwgEQq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwng9krh2h9j8h2uw4tn.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gBwgEQq_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nwng9krh2h9j8h2uw4tn.PNG" alt="Game Preview"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Press &lt;code&gt;ENTER&lt;/code&gt; to un-pause the game. You'll be able to play as the knight, using the arrow keys &lt;code&gt;↑&lt;/code&gt; / &lt;code&gt;↓&lt;/code&gt; / &lt;code&gt;←&lt;/code&gt; / &lt;code&gt;→&lt;/code&gt; and &lt;code&gt;SPACE&lt;/code&gt; to place a bomb. You're playing against the default agent provided in the game (which does nothing but stand still). Close the window when you're done.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-our-starter-agent"&gt;
  &lt;/a&gt;
  Setting up our starter agent
&lt;/h2&gt;

&lt;p&gt;To create your own bot that interacts with this game, create a file in your working directory called &lt;code&gt;my_agent.py&lt;/code&gt;. In this file, paste the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Agent&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;'''
        Place any initialization code for your agent here (if any)
        '''&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;next_move&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;game_state&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;player_state&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="s"&gt;'''
        This method is called each time your Agent is required to choose an action
        '''&lt;/span&gt;

        &lt;span class="c1"&gt;###### CODE HERE ######
&lt;/span&gt;
        &lt;span class="c1"&gt;# a list of all the actions your Agent can choose from
&lt;/span&gt;        &lt;span class="n"&gt;actions&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'u'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'d'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'l'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'r'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'p'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="c1"&gt;# randomly choosing an action
&lt;/span&gt;        &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;###### END CODE ######
&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;action&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The full template is also available &lt;a href="https://github.com/CoderOneHQ/agent-template/blob/main/my_agent.py"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At a high level, the job of your &lt;code&gt;my_agent.py&lt;/code&gt; script is to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Define a class called &lt;code&gt;Agent&lt;/code&gt; containing a method &lt;code&gt;next_move&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Define &lt;code&gt;next_move&lt;/code&gt; such that it can accept game information on each tick, stored in the variables &lt;code&gt;game_state&lt;/code&gt; and &lt;code&gt;player_state&lt;/code&gt;
&lt;/li&gt;
&lt;li&gt;Have &lt;code&gt;next_move&lt;/code&gt; return an output &lt;code&gt;action&lt;/code&gt; which can take the form of a string representing one of the valid game moves:

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;''&lt;/code&gt;: do nothing&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;u&lt;/code&gt;, &lt;code&gt;d&lt;/code&gt;, &lt;code&gt;l&lt;/code&gt;, &lt;code&gt;r&lt;/code&gt; : up, down, left, right (respectively)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;p&lt;/code&gt;: place bomb&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This basic starter agent will randomly choose an action from the list of those available.&lt;/p&gt;

&lt;p&gt;Now save your file, and run in your terminal:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;coderone-dungeon &lt;span class="nt"&gt;--watch&lt;/span&gt; &lt;span class="nt"&gt;--interactive&lt;/span&gt; my_agent
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This will load up the game, and allow you to play against the bot whose behavior we defined in &lt;code&gt;my_agent.py&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here are some additional details on the earlier command we ran in the terminal:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--watch&lt;/code&gt; loads the game in a format where you can make live changes to your code.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;--interactive&lt;/code&gt; allows you to play the game as well. &lt;/p&gt;

&lt;p&gt;&lt;code&gt;my_agent&lt;/code&gt; is the name of your bot's Python script that you want to play against.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; you will need at least two agents for the game to start. In the code above, &lt;code&gt;my_agent&lt;/code&gt; is Player 1 (Wizard) and you are Player 2 (Knight). You can also try:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# play your agent against itself&lt;/span&gt;
coderone-dungeon &lt;span class="nt"&gt;--watch&lt;/span&gt; my_agent my_agent 
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Feel free to play around with the starter code (e.g. try making a bot that only moves up).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-familiar-with-the-game-environment"&gt;
  &lt;/a&gt;
  Getting familiar with the game Environment
&lt;/h2&gt;

&lt;p&gt;In the previous section, we mentioned that your bot receives two inputs: &lt;code&gt;game_state&lt;/code&gt; and &lt;code&gt;player_state&lt;/code&gt;. These variables contain information about the game environment and your player respectively. They both contain some useful information (a full list is available in the &lt;a href="https://www.notion.so/Game-Documentation-9b130e1195fc404cbf1d6ad38dbb4832"&gt;Game Documentation&lt;/a&gt;), but the most important ones for now are:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;game_state&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;size&lt;/code&gt;: the size of the Game Map in the form (cols, rows) - i.e. (12,10) for a 12x10 map&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;bombs&lt;/code&gt;: a list of all the current positions of bombs placed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;player_state&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;location&lt;/code&gt;: the current location co-ordinates of your player in the form (x,y)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ammo&lt;/code&gt;: the amount of ammo you have&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are some examples of use cases for these properties, given &lt;code&gt;game_state&lt;/code&gt; and &lt;code&gt;player_state&lt;/code&gt;. Have a go at filling in the code yourself, and checking them against the provided answers.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# get your Agent's current location
&lt;/span&gt;&lt;span class="n"&gt;my_agents_location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;     &lt;span class="c1"&gt;### CHANGE THIS
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://gist.github.com/joooyzee/1aa0a331314799f9e91a935db24faf19"&gt;Link to solution&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# get the number of columns and rows of the Game Map
&lt;/span&gt;&lt;span class="n"&gt;cols&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;     &lt;span class="c1"&gt;### CHANGE THIS
&lt;/span&gt;&lt;span class="n"&gt;rows&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;     &lt;span class="c1"&gt;### CHANGE THIS
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://gist.github.com/joooyzee/2fa597c59fc4a5e9bcf4fcdc008aafab"&gt;Link to solution&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# print the location of all the bombs placed on the Game Map
&lt;/span&gt;&lt;span class="n"&gt;list_of_bombs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;   &lt;span class="c1"&gt;### CHANGE THIS
&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;bomb&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;list_of_bombs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s"&gt;"Bomb at x: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; y: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;         &lt;span class="c1"&gt;### Change 'None'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://gist.github.com/joooyzee/d15013fee456b7cc8572bcb5e8582e86"&gt;Link to solution&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition to properties, &lt;code&gt;game_state&lt;/code&gt; also contains some useful methods. The ones we'll use in this tutorial are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;entity_at(location)&lt;/code&gt;: returns the entity/object at the specified location&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;is_in_bounds(location)&lt;/code&gt;: returns True or False depending on whether the specified location is actually within the Game Map (within the 12x10 grid)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;is_occupied(location)&lt;/code&gt;: returns True or False depending on whether that block is occupied by another object or not&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some more example use cases are provided below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# return the entity at co-ordinate (1,1)
&lt;/span&gt;&lt;span class="n"&gt;entity_at_1_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;   &lt;span class="c1"&gt;### CHANGE THIS
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://gist.github.com/joooyzee/c21221cdca316e2efd9b046ea75f59c1"&gt;Link to solution&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# is the co-ordinate (12,11) within the boundaries of the game?
&lt;/span&gt;&lt;span class="n"&gt;is_in_bounds&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;   &lt;span class="c1"&gt;### CHANGE THIS
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://gist.github.com/joooyzee/9e8bf88ab16c916eb66431d994f32543"&gt;Link to solution&lt;/a&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# is the co-ordinate (4,2) occupied?
&lt;/span&gt;&lt;span class="n"&gt;is_occupied&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;   &lt;span class="c1"&gt;### CHANGE THIS
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://gist.github.com/joooyzee/64efd70d1eb43b20088d96ae73ce0dd2"&gt;Link to solution&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#next-steps"&gt;
  &lt;/a&gt;
  Next Steps
&lt;/h2&gt;

&lt;p&gt;In the next part of this series, we'll walk through how to implement a very basic bot that can navigate the map and place bombs. You can follow me here on DEV or on &lt;a href="https://joooyz.medium.com/"&gt;Medium&lt;/a&gt; to get notified when Part 2 is out. Feel free to play around with the environment yourself as well in the meantime!&lt;/p&gt;

&lt;p&gt;If you've got any questions or feedback, feel free to let me know in the comments below.&lt;/p&gt;

&lt;p&gt;Thanks for reading 🙌&lt;/p&gt;

&lt;p&gt;P.S. If you're interested in supporting this project, please follow us on &lt;a href="https://www.producthunt.com/upcoming/dungeons-and-data-structures"&gt;Product Hunt&lt;/a&gt;!&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>ai</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Is Data Engineering For You?</title>
      <author>SeattleDataGuy</author>
      <pubDate>Thu, 24 Jun 2021 06:03:29 +0000</pubDate>
      <link>https://dev.to/seattledataguy/is-data-engineering-for-you-102l</link>
      <guid>https://dev.to/seattledataguy/is-data-engineering-for-you-102l</guid>
      <description>&lt;p&gt;Why does it feel like so many more articles are discussing the data engineering profession?&lt;/p&gt;

&lt;p&gt;Perhaps it's because Dice's 2020 tech jobs report cites data engineering as the fastest-growing field in 2020, increasing by a staggering 50%, &lt;a href="https://seattledataguy.substack.com/p/are-companies-hiring-fewer-data-scientists"&gt;while data science roles only increased by 10%&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Or maybe it's just because the Medium algorithm knows that you want to read data engineering articles.&lt;/p&gt;

&lt;p&gt;That brings up an important question.&lt;/p&gt;

&lt;p&gt;Is data engineering for you?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-data-engineering-the-short-version"&gt;
  &lt;/a&gt;
  What Is Data Engineering - The Short Version?
&lt;/h2&gt;

&lt;p&gt;Data engineers move, remodel, and manage data sets from 10s if not 100s of internal company applications so analysts and data scientists don't need to spend their time constantly pulling data sets.&lt;/p&gt;

&lt;p&gt;They may also create a core layer of data that lets different data sources connect to it to get more information or context.&lt;/p&gt;

&lt;p&gt;These specialists are usually the first people to handle data. They process the data so it's useful for everyone, not just the systems that store it.&lt;/p&gt;

&lt;p&gt;There are obvious reasons to become a data engineer --- like a high salary and numerous opportunities due to limited competition within the job market --- but we're not focusing on those today. Instead, consider the following thoughts, which are a bit more relevant to the job description.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-enjoy-the-big-picture-and-thinking-about-systems"&gt;
  &lt;/a&gt;
  You Enjoy the Big Picture and Thinking about Systems
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=jpzDA90EuQ8"&gt;Watch The Video Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Are you the type of person who enjoys "big picture" ideas and the way systems work? Data engineering may be the perfect job for you.&lt;/p&gt;

&lt;p&gt;As a &lt;a href="https://www.theseattledataguy.com/why-should-i-hire-a-data-engineering-consultant/"&gt;data engineer&lt;/a&gt;, you see the whole data lifecycle from end to end. You see how data works on the software side, how it's processed, and how it ends up in an analytical layer.&lt;/p&gt;

&lt;p&gt;Along with understanding data, you understand the logic behind the software or application and how it functions, and you know how to translate the data so it's easy for analysts to use. That means knowing the analyst's use case.&lt;/p&gt;

&lt;p&gt;Doing your job effectively means knowing how often the person who uses the data needs updates. Is it every day? Every hour? Do they have a model with live data updates?&lt;/p&gt;

&lt;p&gt;These are common questions a data engineer asks themselves every day:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  How did the software developers set up the user-flows and business logic?&lt;/li&gt;
&lt;li&gt;  What granularity do the scientists need for the data to be most effective?&lt;/li&gt;
&lt;li&gt;  Is the table a snapshot that updates the information while losing the historical data, or does it store historical data and need a way to manage duplicates?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In other words, you need to understand the workflow, not just the pipelines.&lt;/p&gt;

&lt;p&gt;It's worth noting that many data engineers transfer to a software architect or similar role because they understand the entire system.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#youre-a-recovering-data-scientist"&gt;
  &lt;/a&gt;
  You're a Recovering Data Scientist
&lt;/h2&gt;

&lt;p&gt;"Recovering data scientist" is a common moniker on LinkedIn. It often refers to data scientists who switched to a data engineering role.&lt;/p&gt;

&lt;p&gt;If you really enjoy the data aspect but also appreciate the automation components, programming, and system design, you might prefer data engineering. Data engineers build systems.&lt;/p&gt;

&lt;p&gt;While data scientists may also build sometimes, their role isn't geared for it. Data engineers regularly build systems, and the best ones enjoy it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-like-creating-automated-systems"&gt;
  &lt;/a&gt;
  You Like Creating Automated Systems
&lt;/h2&gt;

&lt;p&gt;If you like creating automated systems, consider data engineering.&lt;/p&gt;

&lt;p&gt;Data engineers develop systems that take data from Point A to Point B. They automate workflows and processes. They automate monitoring, data management, data movement, and data quality checks, and sometimes they have opportunities to &lt;a href="https://seattledataguy.substack.com/p/what-is-mlops-and-why-you-should"&gt;implement ML models or statistical models into data pipelines&lt;/a&gt; that the data scientists created.&lt;/p&gt;

&lt;p&gt;When you enjoy automation, you can do it every day. You'll find new systems to automate, new problems to solve, and daily opportunities to solve puzzles that involve taking data from one point to another.&lt;/p&gt;

&lt;p&gt;You may need to optimize workflows because the data is taking too long to move from Point A to Point B. How can you circumvent the current system's limitations? Do you need to think about distributed systems? What technologies are available to help you solve the problem?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-like-working-with-cuttingedge-tech"&gt;
  &lt;/a&gt;
  You Like Working With Cutting-Edge Tech
&lt;/h2&gt;

&lt;p&gt;Data engineers are forced to be on the cutting edge of tools and systems. A massive data problem grows daily, and these engineers are the best ones to solve it. They figure out ways to compile the data sources into one centralized system, how to process a data set that's too large for one workload to handle, and how to distribute the processing over multiple nodes.&lt;/p&gt;

&lt;p&gt;On a daily basis, you'll need to consider your tech options, whether that's older or open source tooling or newer, modern solutions. If you enjoy knowing how other people are solving the Big Data problem and utilizing those systems, you will find data engineering to be a good choice.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#you-like-data"&gt;
  &lt;/a&gt;
  You Like Data
&lt;/h2&gt;

&lt;p&gt;Of course, you have to enjoy data. Data engineers like data and know how it moves, how it flows, and how events inside a system represent day-to-day events and complex interactions. The data could be for anything --- people, cars, machinery, etc. You enjoy thinking about data and how it comes together and melds so people can create a logical analysis. If that's you, data engineering is probably a perfect fit.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;Some people find data boring, but others enjoy thinking about the analytical side of things or developing systems. The field is expanding, and opportunities are everywhere. You'll find hundreds of articles online about data engineering, and hundreds of millions of dollars are flowing into the field.&lt;/p&gt;

&lt;p&gt;There's no better time to jump into the world of data engineering.&lt;/p&gt;

&lt;p&gt;If you want to read more about data engineering, then consider joining me on some of my other social sites.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/channel/UCmLGJ3VYBcfRaWbP6JLJcpA"&gt;Subscribe To Seattle Data Guy Youtube&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://seattledataguy.substack.com/"&gt;Sign Up For My Weekly Newsletter&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://twitter.com/SeattleDataGuy"&gt;Follow Me On Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>career</category>
      <category>database</category>
      <category>datascience</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Very Useful Features Provided By Create React App You Might Not Know</title>
      <author>Yogesh Chavan</author>
      <pubDate>Thu, 24 Jun 2021 05:55:51 +0000</pubDate>
      <link>https://dev.to/myogeshchavan97/very-useful-features-provided-by-create-react-app-you-might-not-know-4179</link>
      <guid>https://dev.to/myogeshchavan97/very-useful-features-provided-by-create-react-app-you-might-not-know-4179</guid>
      <description>&lt;p&gt;In this article, we will explore the lesser-known but very useful features provided by &lt;a href="https://github.com/facebook/create-react-app"&gt;create-react-app&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;So let's get started!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#serve-application-on-https-instead-of-http"&gt;
  &lt;/a&gt;
  Serve application on HTTPS instead of HTTP
&lt;/h2&gt;

&lt;p&gt;Sometimes we need to test our app on HTTPS to check if all the APIs are working properly before deploying to production.&lt;/p&gt;

&lt;p&gt;Create-react-app provides an easy way of doing that.&lt;/p&gt;

&lt;p&gt;Create a &lt;code&gt;.env&lt;/code&gt; (dot env) file in your project folder and add &lt;code&gt;HTTPS=true&lt;/code&gt; inside it like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;HTTPS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and restart your app by running &lt;code&gt;yarn start&lt;/code&gt; or &lt;code&gt;npm start&lt;/code&gt; command and now your entire application will be served on HTTPS.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-absolute-paths-for-imports"&gt;
  &lt;/a&gt;
  Use absolute paths for imports
&lt;/h2&gt;

&lt;p&gt;In every application, we have import statements where we have to come out of the current folder to reach another file like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../actions/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;profileReducer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;../reducers/profile&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So we have to check which folder we are in and then add those numbers of double dots to import another file. Create-react-app makes it easy to handle that.&lt;/p&gt;

&lt;p&gt;Create a new file &lt;code&gt;jsconfig.json&lt;/code&gt; in your project folder and add the following code inside it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;compilerOptions&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
   &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;baseUrl&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./src&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we specified the base folder where all your files are present. (mostly it’s the src folder in the React application).&lt;/p&gt;

&lt;p&gt;So now we can simplify the above imports as shown below:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;login&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;actions/login&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;profileReducer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;reducers/profile&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;With this configuration, it will take &lt;code&gt;src&lt;/code&gt; as a base URL now, so we only need to specify the folder path starting inside the &lt;code&gt;src&lt;/code&gt; folder as we've done in the above code.&lt;/p&gt;

&lt;p&gt;This will avoid adding extra dots for deeply nested paths.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#easily-access-environment-variables-in-react"&gt;
  &lt;/a&gt;
  Easily access environment variables in React
&lt;/h2&gt;

&lt;p&gt;Environment variables are important because they allow us to keep private information secure. It can be a username or password or API key.&lt;/p&gt;

&lt;p&gt;They also allow us to supply our app with different data values based on the environment (dev, staging, prod, etc).&lt;/p&gt;

&lt;p&gt;Create-react-app allows us to read environment variables without using any external library.&lt;/p&gt;

&lt;p&gt;To create environment variables in React, create a new &lt;code&gt;.env&lt;/code&gt; (dot env) file and declare the environment variable inside it like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;REACT_APP_API_BASE_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;environment_variable_value&lt;/span&gt;
&lt;span class="nx"&gt;REACT_APP_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;your_password&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;It’s important to start your environment variable name with &lt;code&gt;REACT_APP_&lt;/code&gt; so create-react-app will be able to read it.&lt;/p&gt;

&lt;p&gt;Once you create a &lt;code&gt;.env&lt;/code&gt; file with your variables, it will be available in your React app inside the &lt;code&gt;process.env&lt;/code&gt; object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;REACT_APP_API_BASE_URL&lt;/span&gt;
&lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;REACT_APP_PASSWORD&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Check out the below Code Sandbox Demo to see it in action.&lt;/p&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/env-variables-o4zf6"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You should not push the &lt;code&gt;.env&lt;/code&gt; file to your git repository for privacy reasons so make sure to add the &lt;code&gt;.env&lt;/code&gt; entry in your &lt;code&gt;.gitignore&lt;/code&gt; file.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#thanks-for-reading"&gt;
  &lt;/a&gt;
  Thanks for reading!
&lt;/h3&gt;

&lt;p&gt;Check out my recently published &lt;a href="https://master-redux.yogeshchavan.dev/"&gt;Mastering Redux&lt;/a&gt; course.&lt;/p&gt;

&lt;p&gt;In this course, you will learn:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic and advanced Redux&lt;/li&gt;
&lt;li&gt;How to manage the complex state of array and objects&lt;/li&gt;
&lt;li&gt;How to use multiple reducers to manage complex redux state&lt;/li&gt;
&lt;li&gt;How to debug Redux application&lt;/li&gt;
&lt;li&gt;How to use Redux in React using react-redux library to make your app reactive.&lt;/li&gt;
&lt;li&gt;How to use redux-thunk library to handle async API calls and much more&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and then finally we'll build a complete &lt;a href="https://www.youtube.com/watch?v=2zaPDfCKAvM"&gt;food ordering app&lt;/a&gt; from scratch with stripe integration for accepting payments and deploy it to the production.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bit.ly/3w0DGum"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Taa9-Eif--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://gist.github.com/myogeshchavan97/98ae4f4ead57fde8d47fcf7641220b72/raw/c3e4265df4396d639a7938a83bffd570130483b1/banner.jpg"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Want to stay up to date with regular content regarding JavaScript, React, Node.js? &lt;a href="https://www.linkedin.com/in/yogesh-chavan97/"&gt;Follow me on LinkedIn&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/myogeshchavan97"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xG4nnUnu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/default-yellow.png"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>react</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Learn Turtle Module Via Snake Game in Python!</title>
      <author>Bek Brace</author>
      <pubDate>Thu, 24 Jun 2021 05:36:44 +0000</pubDate>
      <link>https://dev.to/bekbrace/learn-turtle-module-via-snake-game-in-python-1ih1</link>
      <guid>https://dev.to/bekbrace/learn-turtle-module-via-snake-game-in-python-1ih1</guid>
      <description>&lt;p&gt;Learn turtle via snake!&lt;/p&gt;

&lt;p&gt;Today's module is the Turtle module and we're going to have a look at what it offers through&lt;br&gt;
designing and building  the famous SNAKE game, and I remember the first time I have played it was on Nokia 3310 back in 2001. &lt;/p&gt;

&lt;p&gt;The idea of Snake is very simple, where you - the player - move the snake in a squared field and eat the apples, and every time you eat one apple the length of the snake grows, and if the snake touches itself or touches the border, then the game will be over.&lt;/p&gt;

&lt;p&gt;the prerequisites for this game project are: &lt;/p&gt;

&lt;p&gt;1- Turtle module : which is a builtin Python module which means you don't have to install it, and it's used to create pictures and various shapes on a virtual canvas using turtle pen and we will see that in a minute, but the concept is very easy and actually the turtle module encourages a lot of children to start programming, because of its ease of use and the productivity they witness on the screen - and I can relate to that as in 1992 I was 9 years old and I started to program on BASIC on my ATARI 800XL, and it was the same exact thing drawing flowers and geometrical simple shapes with different colors, but got me interested in programming since then - if you want to know more about the turtle module I suggest you check out my good friend Christian Thompson's channel TokyoEdTech, he is the king of the turtle module on YouTube in my opinion and you will find a lot of very interesting videos there if you're into video games in Python.  &lt;/p&gt;

&lt;p&gt;2- Also we'll need the Random module to generate random numbers [ and I have a full tutorial on the random module if you want to check it out ]&lt;/p&gt;

&lt;p&gt;3- And the time module, and this simply provides time functionalities to the game.&lt;/p&gt;

&lt;p&gt;Here's the code with the explanation&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;turtle&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;random&lt;/span&gt;

&lt;span class="c1"&gt;# To slow down the snake movement (after keyboard bindings)
# We declared a variable called delay to 0.1. And then call the function time.sleep(delay) to reduce turtle speed.
&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;
&lt;span class="n"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;high_score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;

&lt;span class="c1"&gt;# Creating a  screen
&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Screen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Snake Game"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bgcolor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"black"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# the width and height 
&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;# Turns animation on/off and set delay for update drawings. 0 for off, 1 for on
&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tracer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# head of the snake
&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"circle"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"white"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;penup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Stop"&lt;/span&gt;

&lt;span class="s"&gt;'''Once the head is created, we'll need a main game loop which is always set to true. 
I am going to update the window using the function screen.update(). 
This function basically updates the screen continuously with the loop.
Main Gameplay
while True:   
    screen.update()
'''&lt;/span&gt;

&lt;span class="c1"&gt;# food in the game
&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# choice method : chooses a random element from a non-empty sequence.
&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'yellow'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;penup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Typing score and high score in the top of the window
&lt;/span&gt;&lt;span class="n"&gt;pen&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"green"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;penup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hideturtle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Score : 0 High Score : 0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;align&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"center"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"courier"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bold"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="c1"&gt;# Assigning key directions
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;up&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;"down"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"up"&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;down&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;"up"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"down"&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;right&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;"left"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"right"&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;left&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s"&gt;"right"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"left"&lt;/span&gt;

&lt;span class="c1"&gt;# Note: The snake cannot go right from left, left from right, top from down and down from the top.
&lt;/span&gt;
&lt;span class="c1"&gt;# Moving 
&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;move&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"up"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ycor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sety&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"down"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ycor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sety&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"left"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xcor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"right"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xcor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setx&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Keyboard bindings ----
# We still need the computer to listen to the key press.
# So, we'll us a function called win.listen()that listens to the key presses.
# and each key press needs to be bound to a function that carries out an action.
&lt;/span&gt;&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onkeypress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;up&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Up"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onkeypress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;down&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Down"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onkeypress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;right&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Right"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onkeypress&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"Left"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;scales&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="c1"&gt;# Main Gameplay
&lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;   
    &lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="c1"&gt;# wall collision
&lt;/span&gt;    &lt;span class="c1"&gt;# We need to make sure that the snake dies when it collides with the border. 
&lt;/span&gt;    &lt;span class="c1"&gt;# We already have the coordinates of the border, we just need to reset the snakehead position when it touches those coordinates. 
&lt;/span&gt;    &lt;span class="c1"&gt;# Also, the snake needs to stop moving and hence change the direction to stop.
&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xcor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;290&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xcor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;290&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ycor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;290&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ycor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;290&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"Stop"&lt;/span&gt;
        &lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="n"&gt;shapes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'square'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="c1"&gt;# to make the scales of the snake dissapear, we move it to 1000 on both x and y axis
&lt;/span&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# then we clear them
&lt;/span&gt;        &lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;
        &lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Score : {} High Score : {} "&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;high_score&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;align&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"center"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"courier"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bold"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# food collision
&lt;/span&gt;    &lt;span class="c1"&gt;# We will need to calculate the distance between the 2 objects ( snake head and apple)
&lt;/span&gt;    &lt;span class="c1"&gt;# This is called Collision detection, and it's one of the most important concepts in video games
&lt;/span&gt;    &lt;span class="c1"&gt;# If the distance is less than 15 ( between head and apple) the food is reposisioned on the screen
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;food&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# Adding scales
&lt;/span&gt;        &lt;span class="n"&gt;new_scale&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;turtle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Turtle&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;new_scale&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;speed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;new_scale&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"circle"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;new_scale&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"orange"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# tail colour
&lt;/span&gt;        &lt;span class="n"&gt;new_scale&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;penup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_scale&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# lessa
&lt;/span&gt;        &lt;span class="n"&gt;delay&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mf"&gt;0.001&lt;/span&gt;
        &lt;span class="n"&gt;score&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;score&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;high_score&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;high_score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;score&lt;/span&gt;
        &lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Score : {} High Score : {} "&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;high_score&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;align&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"center"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"courier"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bold"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c1"&gt;# Adding the scales to snake's head is ok, but we also need them to move in whatever direction the head is moving, 
&lt;/span&gt;    &lt;span class="c1"&gt;# so the logic here is to move the new scale added which is on either x or y axis 
&lt;/span&gt;    &lt;span class="c1"&gt;# So if it's on the x position we'll move it to x-1 to x-2; and the same applies for y , this way we will guarantee that each scale in the scales will follow the head
&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;xcor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;ycor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xcor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ycor&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;move&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="c1"&gt;# Checking for head collisions with body scales
&lt;/span&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;distance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"stop"&lt;/span&gt;
            &lt;span class="n"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'red'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'blue'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'green'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="n"&gt;shapes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;choice&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s"&gt;'square'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'circle'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
            &lt;span class="c1"&gt;# we need to move these old scales in a very far invisible posision on the canvas, if not these scales will remain on the screen; and then we will clear them.  
&lt;/span&gt;            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;goto&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;scales&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

            &lt;span class="n"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
            &lt;span class="n"&gt;delay&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.1&lt;/span&gt;
            &lt;span class="c1"&gt;# Delete the turtle's drawings from the screen. Do not move turtle.
&lt;/span&gt;            &lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;pen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Score : {} High Score : {} "&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;score&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;high_score&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;align&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"center"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Courier"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"bold"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;screen&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>python</category>
      <category>tutorial</category>
      <category>gamedev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Ethical Anti-Design: The Road to No-Nonsense Productivity</title>
      <author>Taskade</author>
      <pubDate>Thu, 24 Jun 2021 05:32:55 +0000</pubDate>
      <link>https://dev.to/taskade/ethical-anti-design-the-road-to-no-nonsense-productivity-373b</link>
      <guid>https://dev.to/taskade/ethical-anti-design-the-road-to-no-nonsense-productivity-373b</guid>
      <description>&lt;p&gt;Nobody wants to be an asshole, right? That's why in this article we're digging into the principles of, wait for it, anti-asshole design (AAD). We also try to define "ethical design" and see how it can help teams and individuals get work done faster and smarter, with no fluff.&lt;/p&gt;

&lt;p&gt;So, without further ado...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--WVv-0jYa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.taskade.com/blog/wp-content/uploads/2021/05/18-01-1024x768.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--WVv-0jYa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.taskade.com/blog/wp-content/uploads/2021/05/18-01-1024x768.png" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-design-ethics-amp-ethical-design"&gt;
  &lt;/a&gt;
  What Is Design Ethics &amp;amp; Ethical Design? 🤔
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"Design is in everything we make, but it's also between those things. It's a mix of craft, science, storytelling, propaganda, and philosophy."&lt;/p&gt;

&lt;p&gt;&lt;em&gt;---Erik Adigard, Communication and Experience Designer&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ethics---a set of moral principles that defines the "right" and "wrong" end of your actions---is the compass that helps take the right turns in work and personal life.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cLdqP8oW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/aASjFxL4U_b99a3ON4EEfR6og_d4u7_2HzUXtiZ0sQl9sazfZhrTrszhyP-_xhR7ATMS_d7B4OC8engAbnyCEK9dOhAmyC8hofZLWVyfc-E8HS4wTfGPIYG4Sm9GAt4GrW0c3nZB" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cLdqP8oW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/aASjFxL4U_b99a3ON4EEfR6og_d4u7_2HzUXtiZ0sQl9sazfZhrTrszhyP-_xhR7ATMS_d7B4OC8engAbnyCEK9dOhAmyC8hofZLWVyfc-E8HS4wTfGPIYG4Sm9GAt4GrW0c3nZB" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But did you know that the final design of every product, be it a lollipop wrapper or a piece of software, is also a reflection of its designer's moral code?&lt;/p&gt;

&lt;p&gt;Enter design ethics.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Design ethics concerns moral behavior and responsible choices in the practice of design. It guides how designers work with clients, colleagues, and the end users of products, how they conduct the design process, how they determine the features of products, and how they assess the ethical significance or moral worth of the products that result from the activity of designing."&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In a nutshell, design ethics are all the visible and invisible design choices that influence how we perceive and interact with products. They're the strings behind the curtain.&lt;/p&gt;

&lt;p&gt;Take for example the bio-degradable bamboo toothbrushes, an eco-friendly twist on the design that dates back to the 1400s. Replacing polypropylene handles with a sustainable material is a fine example of good design ethics.&lt;/p&gt;

&lt;p&gt;So, what about intangible products like software? Is it subject to the same, or at least similar, principles of design ethics? If so, what qualities should it have?&lt;/p&gt;

&lt;p&gt;Well, according to the Ethical Design Manifesto---modeled after Maslow's hierarchy of needs---by Small Technology Foundation, ethical design works on three distinct levels.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  🚀 It aims to make products intuitive and fun to use. &lt;/li&gt;
&lt;li&gt;  🍰 It acknowledges human flaws but doesn't take advantage of them.&lt;/li&gt;
&lt;li&gt;  🔐 It respects basic human rights, like the right to privacy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GwCG_oIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.taskade.com/blog/wp-content/uploads/2021/05/maslow-ethical-design-1024x639.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GwCG_oIg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.taskade.com/blog/wp-content/uploads/2021/05/maslow-ethical-design-1024x639.jpg" alt="The principles of ethical design by Small Technology Foundation. "&gt;&lt;/a&gt;\&lt;br&gt;
Ethical Design Manifesto by Laura Kalbag and Aral Balkan(2)&lt;/p&gt;

&lt;p&gt;The only problem?&lt;/p&gt;

&lt;p&gt;Designing software, or any kind of product for that matter, is a complex, multi-leveled process. And that means many things can go terribly wrong.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-rise-of-antiasshole-design-aad"&gt;
  &lt;/a&gt;
  The Rise of Anti-Asshole Design (AAD) 🌱
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"It seems that perfection is reached not when there is nothing left to add, but when there is nothing left to take away"&lt;/p&gt;

&lt;p&gt;&lt;em&gt;---Antoine de Saint-Exupery&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When designers miss or choose to ignore the principles of ethical design, it's the users who suffer the consequences. And there's a fair share of those.&lt;/p&gt;

&lt;p&gt;Think of all the unskippable ads, elusive unsubscribe links, and invasive privacy settings. These are asshole moves, and they rank pretty close to ditching the headphone jack or... the final season of Game of Thrones.&lt;/p&gt;

&lt;p&gt;While not every "user-hostile" design decision is ill will, some of them are. The mechanisms and practices that are intentionally misleading or confusing users are called dark patterns.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"When you use websites and apps, you don't read every word on every page -- you skim read and make assumptions. If a company wants to trick you into doing something, they can take advantage of this by making a page look like it is saying one thing when it is in fact saying another." &lt;/p&gt;

&lt;p&gt;&lt;em&gt;---Dark Patterns(3)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For instance, the "hidden costs" technique is meant to lure online shoppers with attractive offers only to top their bill with out-of-the-blue charges at checkout.&lt;/p&gt;

&lt;p&gt;In response to that unfavorable trend, the Reddit community came up with r/antiassholedesign, a subreddit dedicated to products that simply make sense.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"An offshoot of /r/AssholeDesign: Antiasshole design is design that benefits the user at the expense of the company. Any feature, however easy to implement, that helps the user and makes the company no money (and cannot be advertised) is AAD as well."(4)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Think of the anti-asshole design movement as a more blunt take on ethical design. It gives credit to mindful designs that go the extra mile to make users feel good.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QV-M9YME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/Eh3VMbP5qzD6oFSx61xjmq2ufViS6zSHfPJ1T2IB9Hc92gbINatrYgkmWhPQe_7XRrvCMALlEWD7SP78Wdw7YMF5q4UIgAUqLNe41ftFBbbs9aVjjZG8n_eXl8gsfbAcSLtYVIAz" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QV-M9YME--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/Eh3VMbP5qzD6oFSx61xjmq2ufViS6zSHfPJ1T2IB9Hc92gbINatrYgkmWhPQe_7XRrvCMALlEWD7SP78Wdw7YMF5q4UIgAUqLNe41ftFBbbs9aVjjZG8n_eXl8gsfbAcSLtYVIAz" alt=""&gt;&lt;/a&gt;\&lt;br&gt;
Asshole design flowchart by u/altogether_elsewhere(5)&lt;/p&gt;

&lt;p&gt;When it comes to software, AAD products should:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  🧘‍♂‍ Reduce distractions and help users stay focused on tasks.&lt;/li&gt;
&lt;li&gt;  🚀 Provide essential features and cut out bloated functionality.&lt;/li&gt;
&lt;li&gt;  🍰 Be inclusive and accessible to people with varying technical skills. &lt;/li&gt;
&lt;li&gt;  🤔 Offer progressive disclosure so users can learn at their own pace.&lt;/li&gt;
&lt;li&gt;  👋 Make it ridiculously easy to unsubscribe/delete an account.&lt;/li&gt;
&lt;li&gt;  🌱 Offer transparent and customer-friendly refund policies.&lt;/li&gt;
&lt;li&gt;  🌤 Leave plenty of room to grow for more advanced users.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But there's more.&lt;/p&gt;

&lt;p&gt;In software development, anti-asshole design combines the principles of minimalism---very simple UI, minimal learning curve, instant usability---and holistic, no-nonsense usability. It helps you accomplish your goals with the least amount of friction.&lt;/p&gt;

&lt;p&gt;And that poses an important question...&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#why-does-antiasshole-design-matter-in-2021"&gt;
  &lt;/a&gt;
  Why Does Anti-Asshole Design Matter in 2021? 💭
&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;"Engineers and designers simultaneously know too much and too little. They know too much about the technology and too little about how other people live their lives and do their activities".&lt;/p&gt;

&lt;p&gt;&lt;em&gt;---Donald Norman, Co-founder of the Nielsen-Norman Group&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How does your typical work-at-home day look like?&lt;/p&gt;

&lt;p&gt;You wake up happy and energized, brew some coffee, roll up your sleeves, and sit down to work. But before you do that, you open up Facebook or glance at Google News, you know, just so you don't miss anything important.&lt;/p&gt;

&lt;p&gt;The next thing you notice, you're in deep, sucked by the infinite scroll, pumping dopamine and looking for the next shot of excitement.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4_h8J1MW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/Xld4Tjuv0cyQ0P8mkXxOUb_0-Q0LBWDhKV37Yq-elbHztPMmU4o_bSUky5sMRMLT-O-ONV0rphU0WxnYkjTP44jElqa9kfTxxnKc65ucUAINoQ7Qoi2L8Hr0sjoXlpLAcHW8XHTW" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4_h8J1MW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/Xld4Tjuv0cyQ0P8mkXxOUb_0-Q0LBWDhKV37Yq-elbHztPMmU4o_bSUky5sMRMLT-O-ONV0rphU0WxnYkjTP44jElqa9kfTxxnKc65ucUAINoQ7Qoi2L8Hr0sjoXlpLAcHW8XHTW" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you finally decide to do something productive, you open up your inbox. You're instantly bombarded with work emails, spam, and newsletters you don't really care about. But you still go through all of them, because "it might be important."&lt;/p&gt;

&lt;p&gt;It's already 10 am and you haven't even started.&lt;/p&gt;

&lt;p&gt;In a now-famous presentation "A Call to Minimize Distraction &amp;amp; Respect Users' Attention," former Google employee Tristan Harris argued that technology has the propensity to take advantage of human weaknesses.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  ⏰ Poor time management/awareness.&lt;/li&gt;
&lt;li&gt;  🤯 Craving for the next big thing. &lt;/li&gt;
&lt;li&gt;  💭 The fear of missing out.&lt;/li&gt;
&lt;li&gt;  🤷‍♂️ Reluctance to face friction.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The result?&lt;/p&gt;

&lt;p&gt;Let's say there are ten people in your team, all working remotely and all equally susceptible to those vulnerabilities. Now consider the cognitive, emotional, and financial cost behind every distraction and disruptive technology you use.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"Our past technologies, such as hammers, didn't manipulate or influence our weaknesses... they didn't have a business model dependent on building a voodoo doll of the hammer owner that allowed them to predict the hammer owner's behaviour, showing them videos of home construction such that mean they use the hammer every day. A hammer is just sitting there patiently waiting to be used."&lt;/p&gt;

&lt;p&gt;&lt;em&gt;---Tristan Harris &amp;amp; Vikas S. Shah at Thought Economics(6)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As our workflows are becoming more decentralized, we're opening ourselves to distractions even more. Every new tool means more trouble.&lt;/p&gt;

&lt;p&gt;When you finally open up your collaboration/note-taking/communication/scheduling toolbox, you descend into the limbo &lt;a href="https://www.taskade.com/blog/ztd-zen-to-done-vs-getting-things-done-gtd/"&gt;productivity porn&lt;/a&gt;. Organizing, planning, and customizing feels way more satisfying than doing the actual work.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zdbfnMnT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/L26t1IoUsmCjxlUyZAgnswQAq5zWCH1V4cqPYDNUfyAhLsphlEYxHJ3SNLoMtCTXHh9h1JGO9M9zoJ3LaDdrJtKls2nkXxUZ_NTfcLpILOuz7Wsfd10jhQ0ZlOImhJ1h1_Q7BFfn" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zdbfnMnT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/L26t1IoUsmCjxlUyZAgnswQAq5zWCH1V4cqPYDNUfyAhLsphlEYxHJ3SNLoMtCTXHh9h1JGO9M9zoJ3LaDdrJtKls2nkXxUZ_NTfcLpILOuz7Wsfd10jhQ0ZlOImhJ1h1_Q7BFfn" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-can-we-do-about-it"&gt;
  &lt;/a&gt;
  What Can We Do About It? 🤔
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;"No design works unless it embodies ideas that are held common by the people for whom the object is intended." &lt;/p&gt;

&lt;p&gt;&lt;em&gt;---Adrian Forty&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Working with unethical, badly designed software is often a matter of choice. That's why the first step to overcoming friction and distractions is to become more mindful.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"What we want to do is block those moments that hijack your mind in ways you regret, and replace them with a different timeline---what you would have wanted to have happened instead. The resource we're conserving is time."&lt;/p&gt;

&lt;p&gt;&lt;em&gt;---Nicholas Thompson &amp;amp; Tristan Harris at Wired(7)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;  💡 Make sure every new app or service your team uses is essential.&lt;/li&gt;
&lt;li&gt;  🧩 Don't add complexity to the workflow and subtract whenever possible.&lt;/li&gt;
&lt;li&gt;  ⚙️ Opt for ease of use and a gentle learning curve to maximize tool adoption.&lt;/li&gt;
&lt;li&gt;  🧘‍♂‍ Discourage &lt;a href="https://www.taskade.com/blog/multitasking-remote-cross-functional-teams/"&gt;multitasking&lt;/a&gt; and give your team some &lt;a href="https://www.taskade.com/blog/focus-at-home-with-deep-work-remote-teams/"&gt;deep-work&lt;/a&gt; time.&lt;/li&gt;
&lt;li&gt;  ⚔️ Challenge the status quo and overhaul broken workflows.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But that's just part of the process.&lt;/p&gt;

&lt;p&gt;The whole purpose of ethical and anti-asshole design is to nip distractions in the bud. After all, why make the user journey difficult before they even put on their hiking boots.&lt;/p&gt;

&lt;p&gt;Collaboration software, or any kind of software for that matter, should help users overcome their weaknesses. That's why anti-asshole design must be brought up early in the development processed and iterated across all releases.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-taskade-embraces-antiasshole-design"&gt;
  &lt;/a&gt;
  How Taskade Embraces Anti-Asshole Design 🐑
&lt;/h2&gt;

&lt;p&gt;As a fully distributed company, we understand that working with others, especially over time zones, can be tough. And we don't want to make it an inch more difficult.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#1-guest-account-and-7day-trial"&gt;
  &lt;/a&gt;
  1. Guest Account and 7-Day Trial 🥳
&lt;/h4&gt;

&lt;p&gt;Tired of creating a new account for every single service or app you want to try out? We are too, that's why you don't have to take a leap of faith with Taskade.&lt;/p&gt;

&lt;p&gt;Taskade comes with a &lt;a href="https://www.taskade.com/new"&gt;demo preview&lt;/a&gt; that lets you get your bearings and see if the app is up your team's alley. If you do stay for longer, we have a 7-day free trial to boot.&lt;/p&gt;

&lt;p&gt;And the best part? Taskade comes with a free plan that lets you create projects, craft templates, and collaborate with your team, with no strings attached.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GS84TNgh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/OyiDp7Sy4ywTuk_hM4tcVZM3P7Ll_TP_rEWllkhXt7bi3GgKG7QLApSRmbgb1eCG2cYDP75A9v3aiVhefAktTDs3797NZ8gxT7_cF03SPeH0dPGuHgikj_1egACaQbWSHhbukXR8" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GS84TNgh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/OyiDp7Sy4ywTuk_hM4tcVZM3P7Ll_TP_rEWllkhXt7bi3GgKG7QLApSRmbgb1eCG2cYDP75A9v3aiVhefAktTDs3797NZ8gxT7_cF03SPeH0dPGuHgikj_1egACaQbWSHhbukXR8" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#2-nononsense-formatting"&gt;
  &lt;/a&gt;
  2. No-Nonsense Formatting 🎨
&lt;/h4&gt;

&lt;p&gt;Spending too much time picking the right color or font is pure productivity porn. When the entire team falls for the same trap, it's hard to make any progress.&lt;/p&gt;

&lt;p&gt;If you feel overwhelmed with the formatting options in collaboration/office suites, Taskade minimalist &lt;a href="https://www.taskade.com/blog/distraction-free-writing-remote-productivity-tool/"&gt;project customization&lt;/a&gt; will give you some peace of mind.&lt;/p&gt;

&lt;p&gt;We don't want you to waste precious time tinkering with pop-ups, sliders, or drop-down menus. You get just the options you and your team need to get work done.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--tIQGLLsF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/sSddXbp0sss7nxRW5OtnM6KrIltKv1MJS9P4S5b3urnW17XPv-8tQXZ06MHhGuJTZ65Hm2dBHwFkGtj7ZHyL2QUdHFTfCC3xMYpSaRweWjNzuRcFtNWSfwjSev25fR7cTDPGh0ud" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--tIQGLLsF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/sSddXbp0sss7nxRW5OtnM6KrIltKv1MJS9P4S5b3urnW17XPv-8tQXZ06MHhGuJTZ65Hm2dBHwFkGtj7ZHyL2QUdHFTfCC3xMYpSaRweWjNzuRcFtNWSfwjSev25fR7cTDPGh0ud" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#3-no-context-switching"&gt;
  &lt;/a&gt;
  3. No Context Switching 🤯
&lt;/h4&gt;

&lt;p&gt;We believe forcing users to hack together different tools is an asshole move. That's why we created a remote-native tool, built by and designed for remote teams.&lt;/p&gt;

&lt;p&gt;Taskade gives your team a complete remote stack. That means you don't have to shuffle apps, juggle multiple windows, and break focus doing all that.&lt;/p&gt;

&lt;p&gt;In Taskade, work and communication happen on one plane. Every &lt;a href="https://help.taskade.com/hc/en-us/articles/360043113954--Taskade-Basics"&gt;project&lt;/a&gt; is a self-contained real-time workspace so you don't need any extras.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LVSf1OUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/VdzoG_D-la2ajeDTocLII0XfxxB6vzwraRJBJHDTndoCV0MqkIXB8x-Ur6x5E00DQJZRJkxBkJr6hOhaDcgo_AX0prYXt3ZG0FfAyIv996M6s__7ypZaCpr97jAsRDoQDRoFaCT-" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LVSf1OUQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/VdzoG_D-la2ajeDTocLII0XfxxB6vzwraRJBJHDTndoCV0MqkIXB8x-Ur6x5E00DQJZRJkxBkJr6hOhaDcgo_AX0prYXt3ZG0FfAyIv996M6s__7ypZaCpr97jAsRDoQDRoFaCT-" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#4-no-distractions"&gt;
  &lt;/a&gt;
  4. No Distractions 🔕
&lt;/h4&gt;

&lt;p&gt;Sometimes you just want to get things done alone. You know, fully concentrate on a task without glancing at all those funny cat pictures and chat messages. Now you can.&lt;/p&gt;

&lt;p&gt;While team communication is a core component in Taskade's ecosystem, you can easily hide the &lt;a href="https://help.taskade.com/hc/en-us/articles/360016025033--Chat-and-Messaging"&gt;chat&lt;/a&gt; window and edit projects without interruptions. But there's more.&lt;/p&gt;

&lt;p&gt;Pings, beeps, and buzzes keeping you up at night? Customize the &lt;a href="https://help.taskade.com/hc/en-us/articles/360016117293--Push-Notification-Settings"&gt;notification settings&lt;/a&gt; and keep all updates at bay, at least until you've had your afternoon power nap.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7UH8Mx4O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/3A8LwJ9CXdYddePjh0BBUyPsXIi4LlaQRgIoWvfaE2p8XUr4-gy2wiujPtLlOaoB37ssZcArVKjJ4PCQ9ttdi8ZBcxKGto2rHfQU78U_UMPFyjaQYctmQff0huOksUFrRwtUzj_i" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7UH8Mx4O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh5.googleusercontent.com/3A8LwJ9CXdYddePjh0BBUyPsXIi4LlaQRgIoWvfaE2p8XUr4-gy2wiujPtLlOaoB37ssZcArVKjJ4PCQ9ttdi8ZBcxKGto2rHfQU78U_UMPFyjaQYctmQff0huOksUFrRwtUzj_i" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#5-transforming-projects-%E2%80%8D%E2%99%82%E2%80%8D"&gt;
  &lt;/a&gt;
  5. Transforming Projects 🧙‍♂‍
&lt;/h4&gt;

&lt;p&gt;Most collaboration apps give you one pre-defined workflow. You have to live with it or... look for alternatives. With Taskade, you can work the way you want.&lt;/p&gt;

&lt;p&gt;Taskade lets your team instantly transform projects using four unique project views---&lt;a href="https://help.taskade.com/hc/en-us/articles/360016023373--Project-Views"&gt;Org chart, Mindmap, Board, List, and Action&lt;/a&gt;---so you feel right at home.&lt;/p&gt;

&lt;p&gt;We want our users to create unique workflows that are functional but not overwhelming. You can also create new templates or customize the ones in our &lt;a href="https://www.taskade.com/templates"&gt;gallery&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wOdToEgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/xexx2sCDcpjY2lfxo4lY1nHga9ryXHHmlXswEC2buWHLKKfKqfA7wTQ5zxiGPh9LKialkBdxN1M2S4QZoN7_UxSbTpoaZpy7TSM6iPRvf1SQmiEY5x1pvhOe7WWBrsYqCBmMan6P" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wOdToEgK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh4.googleusercontent.com/xexx2sCDcpjY2lfxo4lY1nHga9ryXHHmlXswEC2buWHLKKfKqfA7wTQ5zxiGPh9LKialkBdxN1M2S4QZoN7_UxSbTpoaZpy7TSM6iPRvf1SQmiEY5x1pvhOe7WWBrsYqCBmMan6P" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#6-local-timemultiplayer-indicators"&gt;
  &lt;/a&gt;
  6. Local Time/Multiplayer Indicators ⏰
&lt;/h4&gt;

&lt;p&gt;Coordinating work over multiple time zones takes some getting used to. You need to be more mindful of other team member's daily routines and business hours.&lt;/p&gt;

&lt;p&gt;Now, with our local time indicator, you can simply hover over their profile icons to see their local time. Because nobody likes to be bothered after hours.&lt;/p&gt;

&lt;p&gt;The multiplayer indicator, on the other hand, shows you who's currently editing the project and the edits they're making. Just so you don't butt in in a bad moment.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fEctPmX5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/qUuEBfWiGM0Ap6iOx3DiDIye_BFXBd_ZWziFWVtNNBN86j9nBHzipspv4jQ6KNO2pdJKAjEzceu5qKv2YWLvpbH-VpVmz5dkn53kXDVz6slDuRiOBV0MVf8E-Tns23uxr-wrXZQy" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fEctPmX5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh6.googleusercontent.com/qUuEBfWiGM0Ap6iOx3DiDIye_BFXBd_ZWziFWVtNNBN86j9nBHzipspv4jQ6KNO2pdJKAjEzceu5qKv2YWLvpbH-VpVmz5dkn53kXDVz6slDuRiOBV0MVf8E-Tns23uxr-wrXZQy" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#7-gentle-learning-curve"&gt;
  &lt;/a&gt;
  7. Gentle Learning Curve 🍰
&lt;/h4&gt;

&lt;p&gt;"Where do I click?", "what does this button do?","I don't want to break anything." Leaving users confused and without proper guidance is asshole design.&lt;/p&gt;

&lt;p&gt;Why waste time figuring things out? Taskade's UI will save yours. The interface is clean and simple so you always know what the next step is.&lt;/p&gt;

&lt;p&gt;In case you're wondering, our onboarding setup is just one page. 🙂&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--L8FjESHh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/l8a_Sk1O-0PDjGdu50mOI0f2aUw0zwk1WObLGGM74oGBAOxb1cqNh4OOdJl2uSi7A565wV1qzdOjb_8kSHrs_a5MLttDr_E3onihLH_BI4ygCcCXTIovl5qEkSSbyxhMqrEW1TfW" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--L8FjESHh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/l8a_Sk1O-0PDjGdu50mOI0f2aUw0zwk1WObLGGM74oGBAOxb1cqNh4OOdJl2uSi7A565wV1qzdOjb_8kSHrs_a5MLttDr_E3onihLH_BI4ygCcCXTIovl5qEkSSbyxhMqrEW1TfW" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#8-think-out-of-the-box%C2%A0"&gt;
  &lt;/a&gt;
  8. Think Out of the Box 🧠
&lt;/h4&gt;

&lt;p&gt;Finally, the curse of the walled garden. What good is collaboration software if you can't actually get your stuff out when you need to?&lt;/p&gt;

&lt;p&gt;Taskade lets you export projects as an image, plaintext, and markdown. Attach them to emails, presentations, or for print. Export as image supports all project views.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zhSwOt9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/h6CJCDSJxY1ozXeeEdGQzzJnY8ybCIwZsxtC0In2XnsVmLjB4X3hCJ8r1hRm_inJe0odMHTYElsUdKtzJ9Pzks01AJ5DRVDavhkl5vpEAiA1Ckd9OyYcDf1IYOeLXPMiqIRZEdwJ" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zhSwOt9J--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/h6CJCDSJxY1ozXeeEdGQzzJnY8ybCIwZsxtC0In2XnsVmLjB4X3hCJ8r1hRm_inJe0odMHTYElsUdKtzJ9Pzks01AJ5DRVDavhkl5vpEAiA1Ckd9OyYcDf1IYOeLXPMiqIRZEdwJ" alt=""&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#parting-thoughts"&gt;
  &lt;/a&gt;
  Parting Thoughts 💭
&lt;/h4&gt;

&lt;p&gt;The world is becoming more connected, and that's a good thing. But as we're shifting toward the distributed work culture, we also need tools that can shorten that distance.&lt;/p&gt;

&lt;p&gt;The downside? Not every new tool, app, subscription, or newsletter does what it's supposed to. Some are simply accidents at work, with little utility or tangible benefits. Others use insidious design practices to cheat users of time and money.&lt;/p&gt;

&lt;p&gt;While the new generation of internet users is more aware of the existence of dark patterns (and asshole design), the repertoire of dirty design tricks is also growing.&lt;/p&gt;

&lt;p&gt;That's why we need initiatives like the ethical &amp;amp; anti-asshole design movement that come with a promise of digital transparency. And that's a trend we hope more companies will follow in the future. &lt;/p&gt;

&lt;p&gt;Till next time! &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Resources 🔗&lt;/p&gt;

&lt;p&gt;&lt;em&gt;(1) &lt;a href="https://www.encyclopedia.com/science/encyclopedias-almanacs-transcripts-and-maps/design-ethics%5C"&gt;https://www.encyclopedia.com/science/encyclopedias-almanacs-transcripts-and-maps/design-ethics\&lt;/a&gt;&lt;br&gt;
(2) &lt;a href="https://2017.ind.ie/ethical-design/%5C"&gt;https://2017.ind.ie/ethical-design/\&lt;/a&gt;&lt;br&gt;
(3) &lt;a href="https://www.darkpatterns.org/types-of-dark-pattern%5C"&gt;https://www.darkpatterns.org/types-of-dark-pattern\&lt;/a&gt;&lt;br&gt;
(4) &lt;a href="https://www.reddit.com/r/antiassholedesign/%5C"&gt;https://www.reddit.com/r/antiassholedesign/\&lt;/a&gt;&lt;br&gt;
(5) &lt;a href="https://www.reddit.com/r/assholedesign/comments/a02ezp/meta_is_it_asshole_design_a_handy_flowchart/%5C"&gt;https://www.reddit.com/r/assholedesign/comments/a02ezp/meta_is_it_asshole_design_a_handy_flowchart/\&lt;/a&gt;&lt;br&gt;
(6) &lt;a href="https://thoughteconomics.com/tristan-harris/%5C"&gt;https://thoughteconomics.com/tristan-harris/\&lt;/a&gt;&lt;br&gt;
(7) &lt;a href="https://www.wired.com/story/tristan-harris-tech-is-downgrading-humans-time-to-fight-back/"&gt;https://www.wired.com/story/tristan-harris-tech-is-downgrading-humans-time-to-fight-back/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>startup</category>
      <category>design</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Hire AngularJS Developers to Build Faster &amp; Scalable Web Applications</title>
      <author>Semaphore Software</author>
      <pubDate>Thu, 24 Jun 2021 05:31:05 +0000</pubDate>
      <link>https://dev.to/sttlinc/hire-angularjs-developers-to-build-faster-scalable-web-applications-2jmb</link>
      <guid>https://dev.to/sttlinc/hire-angularjs-developers-to-build-faster-scalable-web-applications-2jmb</guid>
      <description>&lt;p&gt;Hire AngularJs Developers to Build Faster &amp;amp; Scalable Web Applications. With over 60% of the U.S. population using web-based applications, there is no reason why your company shouldn't be one of them. Hire AngularJs developers to build faster and more efficient web applications, with minimal effort.&lt;/p&gt;

&lt;p&gt;AngularJs is a JavaScript framework that offers a unique object model and powerful features for creating dynamic web applications. Utilizing advanced technologies and best practices, Angular lets you deliver engaging experiences for your clients while saving you time and money. With easy to use controls, you can create reusable elements that are simple and easy to update. You can also hire a team of AngularJs developers to quickly scale your projects from an initial investment.&lt;/p&gt;

&lt;p&gt;Hire a team of AngularJs developers to help grow your business. As your company grows and becomes more complicated, it becomes necessary to hire capable professionals to tackle the constant demand for new and innovative software and services. Flexibility and extensive support make AngularJs one of the best choices for development projects. A team of experts can quickly implement changes and provide the necessary training.&lt;/p&gt;

&lt;p&gt;When your business starts to grow out of your garage, it becomes necessary to hire professionals to take care of the ins and outs of the system. With Angular, you get highly-efficient developers who are familiar with all of the modern techniques. The team has experienced developers who can help you build new pages, enhance your website, and give it a fresh, modern look. With an efficient team, you can start seeing real results before too long.&lt;/p&gt;

&lt;p&gt;In the past, many teams have failed at realizing your goals because they lacked the expertise needed to meet the objectives. When you work with an AngularJs team, you will benefit from the advantages of technology, team unity, and continuous improvement. The Angular development process is modular, allowing the system to easily adapt to the needs of your company. This makes it easy to make small changes and add new features as they become available.&lt;/p&gt;

&lt;p&gt;Working with a team that comes from the same organization as you can be a great advantage. The AngularJs team is in charge of maintaining the framework and ensuring it continues to be successful. With a team from the same office, there will be a greater chance for productivity and efficiency. If you do not have an office located near an AngularJs developer, you may still hire them through an agency. Hiring an agency gives you the benefit of having a consistently updated line of developers.&lt;/p&gt;

&lt;p&gt;Agencies can also offer a number of other services besides just coding and maintaining an AngularJs system. With a large number of options, agencies can help grow your business while providing you with expert services. Consider the amount of work your team will be able to handle based on their previous experience and clientele. A good team will be able to adjust with the constantly changing business environment.&lt;/p&gt;

&lt;p&gt;Hire an AngularJs team to take care of all of your business information gathering needs. With their constant attention to detail, you will be able to provide your clients with the information they need to succeed. With an experienced team in place, you will notice a drastic increase in both your production and sales.&lt;/p&gt;

&lt;p&gt;You need to keep track of the project that is being handled. It is extremely important for you to have an accurate time frame for completion. The AngularJs team can ensure that this timeline is met each and every time. With their attention to detail, you will notice that time goes by much more quickly than it would without their help. They have the technology to complete the job in a timely manner. You are guaranteed that your schedule will not be violated.&lt;/p&gt;

&lt;p&gt;With an AngularJs team on hand, you can enjoy having a flexible and adaptable workforce. These developers are experts at working in an unpredictable environment. Your team members will be ready to handle any unexpected circumstance that could occur, providing an unparalleled level of service to you.&lt;/p&gt;

&lt;p&gt;You can choose to outsource the work to a small group of individuals or a large company. Either way, you should be comfortable with whoever you choose. Do your research, take into account their previous experience, and consider their skill set when making your decision. The most important thing is that you hire individuals who will get the job done right. They will be your best asset in optimizing the output from your site. Your business will become more successful and increase your profits as a result.&lt;/p&gt;

&lt;p&gt;Want to hire a web developer in India? We have a team of highly skilled developers with vast experience in different technology. &lt;a href="https://www.semaphore-software.com/developers/hire-angularjs-developers/"&gt;Hire Dedicated AngularJS developers&lt;/a&gt; India today.&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>angular</category>
    </item>
    <item>
      <title>Configuring EC2 storage (EBS) Hands On</title>
      <author>Ajit Singh</author>
      <pubDate>Thu, 24 Jun 2021 05:19:24 +0000</pubDate>
      <link>https://dev.to/this-is-learning/configuring-ec2-storage-ebs-hands-on-87k</link>
      <guid>https://dev.to/this-is-learning/configuring-ec2-storage-ebs-hands-on-87k</guid>
      <description>&lt;p&gt;We will do a hands on EBS volumes so that we can understand how to attach an EBs volume to an EC2 instance.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Start creating an &lt;a href="https://dev.to/this-is-learning/start-an-instance-on-aws-ec2-hands-on-2hb3"&gt;EC2 instance&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In step 4 Add Storage we can see there are many options regarding storage.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Size of storage - Here we define how much storage we want attaches to our EC2 instance like our EC2 instance may contain node modules, python packages etc according to our needs &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Type - Here we define what type of a storage we want do we want a more durable or the one which is focused on IOPS etc. You can learn more about it from the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-volume-types.html"&gt;documentation&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;IOPS - How many input output operations we want per second&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Delete on termination - Check this checkbox if we want to delete EBS volume on termination &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Encryption - If we generate a key we can encrypt our data using that AWS key. &lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sePHGCjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uulof3e7imc49y00e6n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sePHGCjo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2uulof3e7imc49y00e6n.png" alt="EBS storage"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Now we can create our instance with the selected storage&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;You can check the details of the of our EBS storage in the storage tab once we select an EC2 instance&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ofgvnYF6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cv5dw5msb62ap1jea26d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ofgvnYF6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/cv5dw5msb62ap1jea26d.png" alt="EBS storage tab"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-a-new-ebs-storage"&gt;
  &lt;/a&gt;
  Create a new EBS storage
&lt;/h2&gt;

&lt;p&gt;We can also create an independent storage which we can later join to our EC2 instance &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To create a new EBS storage go to our EC2 dashboard and select volumes under elastic block store. You will see that there is our already created EBS volume. To create a new volume click on create volume&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--J-ii1K0M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gipeiy27n3zl7gf6gcaz.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--J-ii1K0M--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/gipeiy27n3zl7gf6gcaz.png" alt="Ebs storage 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You will see the same options that we saw earlier while creating our EC2 instance.Remember to create the volume in the same availability zone as in the EC2 instance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jVwazFxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z3de57r30i7xwdjtjqan.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jVwazFxu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z3de57r30i7xwdjtjqan.png" alt="Ebs storage 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We get a status successful page and voila we created a new volume for our EC2 instance
&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xREEJAs6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w6sdc7z62kn91bclpevn.png" alt="Ebs storage 3"&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#attach-an-ebs-volume-to-an-ec2-instance"&gt;
  &lt;/a&gt;
  Attach an EBS volume to an EC2 instance
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To attach an EBS volume to an EC2 instance right click on your EBS volume and click attach volume&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--T_JM1t9Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck9z1dshc4tn3iw0h6qn.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--T_JM1t9Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ck9z1dshc4tn3iw0h6qn.png" alt="Attach volume 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You will see a dialog from where you can attach your EBS volume to an instance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ibt7j9zU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbmcmq3vmq2hwb8z1o8t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ibt7j9zU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pbmcmq3vmq2hwb8z1o8t.png" alt="Attach volume 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Right now we have attached an EBS volume to our EC2 instance but we will need to format it with a file system to use it with our EC2 instance like any other storage. Which is a bit complex and out of scope for this tutorial but you can check that out in the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html"&gt;documentation&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z0cl3c8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sftehmw77ysof0jj1p6d.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z0cl3c8f--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/sftehmw77ysof0jj1p6d.png" alt="Attach volume 3"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If you terminate your instance then the one on which we selected delete on termination will be deleted&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--y39C4ES---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrlby3ztjk6k8lfhc12c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--y39C4ES---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lrlby3ztjk6k8lfhc12c.png" alt="terminate 1"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eYBp2JKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dedpbwcx0hsxhlpnsoa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eYBp2JKY--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0dedpbwcx0hsxhlpnsoa.png" alt="Terminate 2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Jh8z4qB7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlo911uu5lm7jmrd4189.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Jh8z4qB7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zlo911uu5lm7jmrd4189.png" alt="terminate 3"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#use-snapshots-to-move-ebs-volumes"&gt;
  &lt;/a&gt;
  Use snapshots to move EBS volumes
&lt;/h2&gt;

&lt;p&gt;We can only work with our EBS volumes in one availability zone bout how to move them across availability zones. To do that we can use snapshots&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To create a snapshot go to the volumes in EC2 dashboard 
under Elastic Block Store&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fyZPKaAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8we56xfy5epg6fwq5b0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fyZPKaAQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8we56xfy5epg6fwq5b0i.png" alt="Snapshot"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Select the volume and on the top click on actions. You will see an option for create snapshot&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r-tEQwXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlg3l4yjeradwu8eaeal.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r-tEQwXz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dlg3l4yjeradwu8eaeal.png" alt="Snaphot 1"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Click create snapshot after that you will see the screen below and put a description for our snapshot. Click on create snapshot. Your snapshot is created.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rk1z2AQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtl0mbe2c1eobp5y9o9z.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rk1z2AQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qtl0mbe2c1eobp5y9o9z.png" alt="snapshot2"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GwVlilOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ni1a4nj2somfc42iiko4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GwVlilOC--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ni1a4nj2somfc42iiko4.png" alt="snapshot 3"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It will take some time to create a snapshot but after sometime you can see the snapshot under snapshots under Elastic Block Store&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--sX4mLqOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4k4m8h70ofrfps3fcmw1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sX4mLqOt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4k4m8h70ofrfps3fcmw1.png" alt="creaed snapshot"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Once you are in these select the snapshot and from actions you can select copy.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wm-of_El--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nygn9zh8e5qrl3gzc9c.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wm-of_El--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7nygn9zh8e5qrl3gzc9c.png" alt="copy"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now you can see options to copy it across regions. If you want to copy it in any other region you can do it here.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--D_Ayh9Ox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq2oo0pj181jw5o1fgyd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--D_Ayh9Ox--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yq2oo0pj181jw5o1fgyd.png" alt="copy region"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now we can go across regions but still cannot copy across availability zones. To create a volume across Availability zone select snapshot -&amp;gt; click actions -&amp;gt; select create volume -&amp;gt; now you can create a volume with the data from the selected snapshot.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--qs_Mdwgw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u3iltf3lnnbz30mfdzf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--qs_Mdwgw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5u3iltf3lnnbz30mfdzf.png" alt="copy az"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Here we get the option to change Availability zone or change disk size. Same way you can create a new volume using  snapshots across regions.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--NGSrN-Z7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnf1shf58h03o9059jiy.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--NGSrN-Z7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/tnf1shf58h03o9059jiy.png" alt="copy az 2"&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Dbqp8fB3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2bwpqudbqkhs1v0039up.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Dbqp8fB3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/2bwpqudbqkhs1v0039up.png" alt="copy az result"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cleanup"&gt;
  &lt;/a&gt;
  Cleanup
&lt;/h2&gt;

&lt;p&gt;Delete all the volumes and EC2 instances they may cost you money&lt;/p&gt;

&lt;p&gt;Wow we learnt a lot of things today this may seem trivial once you are done with it but think of it in terms of physical servers how how will it take to move your servers disk space from one region into another. How long will it take to change capacity. Isn't it just wonderful how easy cloud made software operations. Next series amazon devices joined to physical drives EFS for a better throughput that network devices. &lt;/p&gt;

</description>
      <category>aws</category>
      <category>cloud</category>
      <category>cloudskills</category>
    </item>
    <item>
      <title>Content Security Policy on Netlify (guide)</title>
      <author>Mannuel</author>
      <pubDate>Thu, 24 Jun 2021 05:05:05 +0000</pubDate>
      <link>https://dev.to/mannuelf/content-security-policy-on-netlify-guide-4p0c</link>
      <guid>https://dev.to/mannuelf/content-security-policy-on-netlify-guide-4p0c</guid>
      <description>&lt;p&gt;After deploy your website to Netlify (or any server) naturally you will run performance tests using &lt;a href="https://www.webpagetest.org/"&gt;WebPageSpeedTest&lt;/a&gt;. You might notice an alarming red &lt;code&gt;F&lt;/code&gt; or &lt;code&gt;E&lt;/code&gt; in the top right of screen.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2wYGSmNE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dep7mcka76xcg4krmaph.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2wYGSmNE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dep7mcka76xcg4krmaph.png" alt="WebPageSpeedTest"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tldr"&gt;
  &lt;/a&gt;
  TL;DR
&lt;/h2&gt;

&lt;p&gt;This is a security score linked to a &lt;code&gt;CSP&lt;/code&gt; (Content-Security-Policy), it shows whether any security policies are configured. The CSP provides a way to control the loading and execution of scripts and media in your webpage.&lt;/p&gt;

&lt;p&gt;Setting the correct directives will prevent clickjacking, code-injection, cross-site scripting, illegal embedding of your webpage in an offsite frame/iframe and allow only valid MIME types.&lt;/p&gt;

&lt;p&gt;In my case, deploying to Netlify...&lt;/p&gt;

&lt;p&gt;Created a &lt;code&gt;netlify.toml&lt;/code&gt; file and placed the CSP policy like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[[&lt;/span&gt;headers]]
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/*"&lt;/span&gt;
  &lt;span class="o"&gt;[&lt;/span&gt;headers.values]
    X-Frame-Options &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"SAMEORIGIN"&lt;/span&gt;
    X-XSS-Protection &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"0"&lt;/span&gt;
    X-Content-Type-Options &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"nosniff"&lt;/span&gt;
    Content-Security-Policy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"default-src 'self'; style-src 'self'; form-action 'self'; script-src 'self'; connect-src 'self'; img-src 'self'; base-uri 'self';"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That is a basic starter policy it allows css, form actions, ajax requests, scripts and images from the same origin, does not allow object, frame, media.&lt;/p&gt;

&lt;p&gt;This is bare bones setup and no Google Analytics scripts or font scripts will be allowed to execute, keep reading for more on how to make things work or checkout my final &lt;a href="https://github.com/mannuelf/mannuelferreira.com_nextjs/blob/main/netlify.toml#L15"&gt;netlify.toml&lt;/a&gt; file&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#the-long-story"&gt;
  &lt;/a&gt;
  The long story
&lt;/h2&gt;

&lt;p&gt;Clicking on the red &lt;code&gt;E&lt;/code&gt; icon  will load the Snyk test results, which looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--G5v82a_l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2yj2hog0lg83lixcgop.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--G5v82a_l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s2yj2hog0lg83lixcgop.png" alt="WebPageSpeedTest"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Snyk test results page:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FZ1VF4h1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ckplvvxyoj0awqqe13n.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FZ1VF4h1--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7ckplvvxyoj0awqqe13n.png" alt="issue1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#javascript-libraries-with-vulnerabilities"&gt;
  &lt;/a&gt;
  JavaScript Libraries with vulnerabilities
&lt;/h3&gt;

&lt;p&gt;On the left you can see all the newest reported vulnerabilities in popular npm packages.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8nc8jXrB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvf2qr4bsftzie2exnhm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8nc8jXrB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yvf2qr4bsftzie2exnhm.png" alt="issue1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#security-headers"&gt;
  &lt;/a&gt;
  Security headers
&lt;/h3&gt;

&lt;p&gt;On the right you can see our very own reported Security Headers related vulnerabilities.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xik7dILD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dm5crk8cyfy1n5rlakig.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xik7dILD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dm5crk8cyfy1n5rlakig.png" alt="issue1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://snyk.io/test/website-scanner/?test=210622_AiDcMX_c311f91860c1b197dd104d0454678220&amp;amp;utm_medium=referral&amp;amp;utm_source=webpagetest&amp;amp;utm_campaign=website-scanner"&gt;Snyk Results&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#netlifytoml"&gt;
  &lt;/a&gt;
  netlify.toml
&lt;/h3&gt;

&lt;p&gt;Okay back to the Headers, given these headers:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[[&lt;/span&gt;headers]]
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"/*"&lt;/span&gt;
  &lt;span class="o"&gt;[&lt;/span&gt;headers.values]
    X-Frame-Options &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"SAMEORIGIN"&lt;/span&gt;
    X-XSS-Protection &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"1; mode=block"&lt;/span&gt;
    X-Content-Type-Options &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"nosniff"&lt;/span&gt;
    Content-Security-Policy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"default-src 'self'; style-src 'self'; form-action 'self'; script-src 'self'; connect-src 'self'; img-src 'self'; base-uri 'self';"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the Policy has been set above with the above configuration. &lt;/p&gt;

&lt;p&gt;Uploaded and test it by opening the browser dev tools. Look at the &lt;code&gt;console&lt;/code&gt;, you will notice some new errors that you may have never seen before because you had no CSP configured. &lt;/p&gt;

&lt;p&gt;In my case in a Netlify deploy preview-mode I saw:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;60d2b0fc45694e0008dd4d32--mannuelferreira.netlify.app/:1 Refused to load the script '&lt;a href="https://d33wubrfki0l68.cloudfront.net/bundles/1bd814911a09d5e56b421403a658cbae5d2685ce.js"&gt;https://d33wubrfki0l68.cloudfront.net/bundles/1bd814911a09d5e56b421403a658cbae5d2685ce.js&lt;/a&gt;' because it violates the following Content Security Policy directive: "script-src 'self'". Note that 'script-src-elem' was not explicitly set, so 'script-src' is used as a fallback.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gPGQ-SJM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bumjqlq6477wxht3qli2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gPGQ-SJM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bumjqlq6477wxht3qli2.png" alt="blocked CSP"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My CSP is preventing &lt;code&gt;cloudfront.net&lt;/code&gt; above from executing in my webpage.&lt;/p&gt;

&lt;p&gt;GREAT 🚀 looks like stuff is working.&lt;/p&gt;

&lt;p&gt;Now I can decide to allow &lt;code&gt;cloudfront.net&lt;/code&gt; because I trust Netlify and it's domains, so I should whitelist it by adding the domain and sub-domains to the &lt;code&gt;default-src&lt;/code&gt; directive e.g.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Content-Security-Policy &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"default-src 'self' cloudfront.net *.cloudfront.net; frame-ancestors 'self'; form-action 'self'"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Bare in mind this list has the potential to get lengthy the more scripts you plan to allow execution, you can see my &lt;a href="https://github.com/mannuelf/mannuelferreira.com_nextjs/blob/main/netlify.toml#L15"&gt;netlify.toml&lt;/a&gt; here.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#rerun-the-test"&gt;
  &lt;/a&gt;
  Rerun the test
&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;WebpageSpeedTest&lt;/code&gt; results:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rsc2erhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnoexw1mxgr5xi8yxkdj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rsc2erhZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bnoexw1mxgr5xi8yxkdj.png" alt="WebPageSpeedTest"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Security Headers&lt;/code&gt; results:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U6fbuWIs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/smavlue8eri73d2gktej.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U6fbuWIs--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/smavlue8eri73d2gktej.png" alt="SecurityHeaders"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://securityheaders.com/?q=www.mannuelferreira.com&amp;amp;followRedirects=on"&gt;Click here&lt;/a&gt; to view my Security Headers report.&lt;/p&gt;

&lt;p&gt;Not using Netlify? try one of these:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#nginx"&gt;
  &lt;/a&gt;
  Nginx
&lt;/h3&gt;

&lt;p&gt;server {} block.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;server &lt;span class="o"&gt;{&lt;/span&gt;
  ...
  add_header &lt;span class="s2"&gt;"X-Frame-Options"&lt;/span&gt; &lt;span class="s2"&gt;"SAMEORIGIN"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  add_header &lt;span class="s2"&gt;"X-XSS-Protection"&lt;/span&gt; &lt;span class="s2"&gt;"0"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  add_header &lt;span class="s2"&gt;"X-Content-Type-Options"&lt;/span&gt; &lt;span class="s2"&gt;"nosniff"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  add_header &lt;span class="s2"&gt;"Content-Security-Policy"&lt;/span&gt; &lt;span class="s2"&gt;"default-src 'self'; frame-ancestors 'self'; form-action 'self'"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  ...
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#apache"&gt;
  &lt;/a&gt;
  Apache
&lt;/h3&gt;

&lt;p&gt;.htaccess&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&amp;lt;IfModule mod_headers.c&amp;gt;
  Header &lt;span class="nb"&gt;set &lt;/span&gt;X-Frame-Options &lt;span class="s2"&gt;"SAMEORIGIN"&lt;/span&gt;
  Header &lt;span class="nb"&gt;set &lt;/span&gt;X-XSS-Protection &lt;span class="s2"&gt;"0"&lt;/span&gt;
  Header &lt;span class="nb"&gt;set &lt;/span&gt;X-Content-Type-Options &lt;span class="s2"&gt;"nosniff"&lt;/span&gt;
  Header &lt;span class="nb"&gt;set &lt;/span&gt;Content-Security-Policy &lt;span class="s2"&gt;"default-src 'self'; frame-ancestors 'self'; form-action 'self'"&lt;/span&gt;
&amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#iis"&gt;
  &lt;/a&gt;
  IIS
&lt;/h3&gt;

&lt;p&gt;web.config&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&amp;lt;system.webServer&amp;gt;
  &amp;lt;httpProtocol&amp;gt;
    &amp;lt;customHeaders&amp;gt;
      &amp;lt;add &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"X-Frame-Options"&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"SAMEORIGIN"&lt;/span&gt; /&amp;gt;
      &amp;lt;add &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"X-XSS-Protection"&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"0"&lt;/span&gt; /&amp;gt;
      &amp;lt;add &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"X-Content-Type-Options"&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"nosniff"&lt;/span&gt; /&amp;gt;
      &amp;lt;add &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Content-Security-Policy"&lt;/span&gt; &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"default-src 'self'; frame-ancestors 'self'; form-action 'self'"&lt;/span&gt; /&amp;gt;
    &amp;lt;/customHeaders&amp;gt;
  &amp;lt;/httpProtocol&amp;gt;
&amp;lt;/system.webServer&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;DO NOT&lt;/strong&gt; use X-Content-Security-Policy or X-WebKit-CSP. Their implementations are obsolete (since Firefox 23, Chrome 25), limited, inconsistent, and incredibly buggy. &lt;a href="https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html#http-headers"&gt;Read more here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#lets-break-it-down"&gt;
  &lt;/a&gt;
  Let's break it down
&lt;/h3&gt;

&lt;p&gt;By adding those configurations to your server you are essentially creating a security policy.&lt;/p&gt;

&lt;p&gt;A policy that tells the browser what to do with a request, allow it or block it based on what you've configured. Note the absence of this configuration will render your server in-secure.&lt;/p&gt;

&lt;p&gt;(in order or appearance):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;X-Frame-Options&lt;/code&gt; prevents &lt;strong&gt;click jacking&lt;/strong&gt; by not allowing your webpage to be loaded in a frame or iframe. The SAMEORIGIN property allows a page to be loaded in a frame on the same origin as the page itself only. &lt;code&gt;DEPRECATED&lt;/code&gt; &lt;a href="https://cheatsheetseries.owasp.org/cheatsheets/Clickjacking_Defense_Cheat_Sheet.html#x-frame-options-header-types"&gt;Read more&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use Content-Security-Policy: &lt;strong&gt;frame-ancestors 'self'&lt;/strong&gt;; instead&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;

&lt;p&gt;&lt;code&gt;X-XSS-Protection&lt;/code&gt; blocks any request that is deemed to be Cross Site Scripting Attack. &lt;code&gt;DEPRECATED&lt;/code&gt; &lt;a href="https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html#x-xss-protection-header"&gt;Read more&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;use Content-Security-Policy: &lt;strong&gt;frame-ancestors 'self'&lt;/strong&gt;; instead&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;X-Content-Type-Options&lt;/code&gt; protects against MIME type confusion attacks, ensures to load a resource only if the correct MIME type of is a matched against what is expected.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Content-Security-Policy&lt;/code&gt; allows you to set a custom policy on what scripts, urls, images, fonts and resources are allowed to execute in your webpage. Any resource that is not whitelisted will not be allowed to execute.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;originally posted: &lt;a href="https://www.mannuelferreira.com/posts/content-security-policy-on-netlify-guide"&gt;https://www.mannuelferreira.com/posts/content-security-policy-on-netlify-guide&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;
  &lt;a href="#tools"&gt;
  &lt;/a&gt;
  Tools
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://securityheaders.com/"&gt;Security Headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.immuniweb.com/websec/"&gt;ImmuniWeb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/OWASP/CheatSheetSeries"&gt;OWASP cheat sheets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#references"&gt;
  &lt;/a&gt;
  References
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://scotthelme.co.uk/content-security-policy-an-introduction/"&gt;Scott Helme&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/default-src"&gt;MDN CSP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dev.toblog/test-website-security-with-webpagetest-integration/"&gt;Snyk + WebpageSpeedTest integration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.netlify.com/routing/headers/"&gt;Netlify Headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nginx.com/resources/wiki/start/topics/examples/server_blocks/"&gt;Nginx Headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://httpd.apache.org/docs/current/mod/mod_headers.html"&gt;Apache Headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/iis/configuration/system.webserver/httpprotocol/customheaders/"&gt;IIS Headers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>security</category>
      <category>netlify</category>
      <category>webdev</category>
      <category>nextjs</category>
    </item>
    <item>
      <title>Challenge: Build a Product</title>
      <author>Sahil Rajput</author>
      <pubDate>Thu, 24 Jun 2021 05:02:53 +0000</pubDate>
      <link>https://dev.to/sahilrajput/challenge-build-a-product-nlf</link>
      <guid>https://dev.to/sahilrajput/challenge-build-a-product-nlf</guid>
      <description>&lt;p&gt;Put a comment with some product idea and the idea with the most number of upvotes will be selected and I will build an open-source product based on that idea.&lt;/p&gt;

&lt;p&gt;Deadline to put your product idea is 30th June 2021. After that I will pick the topmost comment and start working on it. &lt;/p&gt;

&lt;p&gt;I will make it open-source and post weekly updates.&lt;/p&gt;

</description>
      <category>idea</category>
      <category>opensource</category>
      <category>challenge</category>
      <category>startup</category>
    </item>
    <item>
      <title>Basico do Basico de HTML5!</title>
      <author>Bieldeid</author>
      <pubDate>Thu, 24 Jun 2021 03:13:37 +0000</pubDate>
      <link>https://dev.to/deid/basico-do-basico-de-html5-4491</link>
      <guid>https://dev.to/deid/basico-do-basico-de-html5-4491</guid>
      <description>

&lt;p&gt;Notas do editor:&lt;br&gt;
"A principio gostaria de dizer que ainda sou um mero estudante e continuarei sendo nessa vida que escolhi ter, pois nunca paramos de aprender nessa área.&lt;br&gt;
Sendo assim, se tiver alguma sugestão, algo a complementar ou corrigir algo em meus resumos, fique a vontade.&lt;br&gt;
Estou fazendo isso para melhorar meu aprendizado e passar o conhecimento que adquiri! Sendo assim, tenha um belo dia! &amp;lt;3"&lt;/p&gt;



&lt;p&gt;Bom, você ai que quer entrar no ramo da programação mas não sabe por onde começar ou quer ter a primeira experiência, aqui vai uma dica que eu dou, e que provavelmente nem irá precisar instalar uma IDE para tal. (Caso não saiba o que é uma IDE ou o básico das outras coisas e quer saber mais, da uma olhada no perfil do &lt;a href="https://dev.to/darrow"&gt;https://dev.to/darrow&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;A principio vamos saber o que significa HTML5:&lt;br&gt;
HTML (Hyper Text Markup Language) é nada mais nada menos do que:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Um arquivo que contem marcadores (tag).&lt;/li&gt;
&lt;li&gt;Essas tags indicam para o navegador (browser) como a página deve ser apresentada.&lt;/li&gt;
&lt;li&gt;Marcadores usualmente vem em pares

&lt;code&gt;&amp;lt;tag&amp;gt;...&amp;lt;/tag&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;ul&gt;
&lt;li&gt;Também podem aparecer de forma abreviada como:

&lt;code&gt;&amp;lt;tag atributo="valor".../&amp;gt;&lt;/code&gt;
&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;Agora, vamos compreender um pouco das tags que utilizamos no html5, lembrando, apenas o básico!&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;html&amp;gt; - Define um documento HTML, tudo que estiver nele será apresentado no navegador.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;head&amp;gt; - Define e configura o topo do seu site/código, como o título e outros&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;title&amp;gt; - Define o título do seu site, que fica nas abas do navegador&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;body&amp;gt; - Define o corpo do HTML, tudo que estiver nele será visível no site.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;h1&amp;gt; até a &amp;lt;h6&amp;gt; - Define cabeçalhos de 1 a 6&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;p&amp;gt; - Define um parágrafo.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;



&lt;p&gt;&lt;code&gt;&amp;lt;br&amp;gt; - Define uma quebra de linha.&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;




&lt;p&gt;Sendo assim, vamos fazer o seu primeiro site?&lt;/p&gt;

&lt;p&gt;Abra seu bloco de notas e escreva isso aqui:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--57YfAe-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2nehnym4lhrser0vre9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--57YfAe-y--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/c2nehnym4lhrser0vre9.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Após finalizar, salve-o como "index.html" e execute-o, se você fez tudo certinho, o site irá aparecer dessa forma:&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0U6z752c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kttyc8eunuczexeiy04i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0U6z752c--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kttyc8eunuczexeiy04i.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Espero que você tenha consigo realizar o seu possível primeiro site de muitos outros.&lt;br&gt;
Não se esqueça de fuçar nesse código e entender mais um pouco sobre o que cada tag faz e etc.&lt;br&gt;
Agradeço se leu até aqui, um abraço e até a próxima!&lt;/p&gt;

</description>
      <category>html</category>
      <category>brasil</category>
    </item>
  </channel>
</rss>
