<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Relicans Summer Camp Week 4: Public Speaking Week</title>
      <author>Aisha Blake</author>
      <pubDate>Mon, 26 Jul 2021 17:34:27 +0000</pubDate>
      <link>https://dev.to/newrelic/relicans-summer-camp-week-4-public-speaking-week-4mjf</link>
      <guid>https://dev.to/newrelic/relicans-summer-camp-week-4-public-speaking-week-4mjf</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;üèï &lt;strong&gt;Challenge:&lt;/strong&gt; Apply to speak at a conference.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You've made it to Week 4! We're talking about public speaking but a lot of our thoughts on generating ideas and developing habits apply to all the other topics we've covered in this series, particularly the &lt;a href="https://www.therelicans.com/captainellie/the-relicans-summer-camp-week-3-writing-365g"&gt;Week 3 writing challenge&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CFP: Call for Proposals (or Papers). A request for potential speakers to express interest in participating in a specific conference by outlining the talk(s) they'd like to give at that event&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#finding-a-conference"&gt;
  &lt;/a&gt;
  Finding a conference
&lt;/h2&gt;

&lt;p&gt;The sheer number of tech conferences can get overwhelming. It takes time to develop your own criteria for choosing which ones to apply to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#determine-your-conference-values"&gt;
  &lt;/a&gt;
  Determine your conference values
&lt;/h3&gt;

&lt;p&gt;As you're looking for events to speak at, decide how you'll choose which ones to devote your time and energy towards. What's most important to you in a conference? Are there any policies or characteristics that would raise a red flag? Here are some points to consider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does the event have a code of conduct? Does it include contact information? Does it explain how to report an incident? Are there anonymous reporting options?&lt;/li&gt;
&lt;li&gt;Who has spoken in the past? If any speakers have already been announced, are there any known abusers in the current lineup?&lt;/li&gt;
&lt;li&gt;Are any of the organizers part of marginalized communities?&lt;/li&gt;
&lt;li&gt;If the event is in-person, how accessible is the venue? Have the organizers provided that information?&lt;/li&gt;
&lt;li&gt;How are speakers being compensated?&lt;/li&gt;
&lt;li&gt;Is the event run by a community? A company?&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Exercise: Write down your personal speaker rider. For now, it can be a short, private list of preferences. Check out &lt;a href="https://gist.github.com/tatianamac/493ca668ee7f7c07a5b282f6d9132552"&gt;Tatiana Mac's speaker rider&lt;/a&gt; as a particularly thorough example.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The lines you draw here may be different depending on the conference. Maybe you're willing to speak for free for small, community events. Perhaps your expectations around the ethnic diversity of organizers depend on the country in which the conference is based. That's completely up to you!&lt;/p&gt;

&lt;p&gt;Compensation might also go beyond getting paid with money. If you're unwilling or unable to take money for speaking at an event, think about what other "rewards" might be useful to you. A conference team might buy you the equipment you need to record your talk for them or list your company as a sponsor, to name a few.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#finding-new-events"&gt;
  &lt;/a&gt;
  Finding new events
&lt;/h3&gt;

&lt;p&gt;Tools like &lt;a href="https://www.cfpland.com/"&gt;CFP Land&lt;/a&gt; will give you a starting point if you're not sure where to look. It's convenient but remember that not every conference will post a CFP to every (or any) aggregator. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--zxa8IHuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.therelicans.com/remoteimages/uploads/articles/ey63px4eciy8q8dx2lvr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zxa8IHuy--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.therelicans.com/remoteimages/uploads/articles/ey63px4eciy8q8dx2lvr.png" alt="CFP Land home page shows upcoming conference CFPs in chronological order"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;An aggregator will also allow you to filter your results so that it's easier to find events better suited to your needs and interests.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V0Tf7pyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.therelicans.com/remoteimages/uploads/articles/280cux4fh0v027t0pdwj.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V0Tf7pyw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.therelicans.com/remoteimages/uploads/articles/280cux4fh0v027t0pdwj.png" alt="CFP Land has filters for category, region, and conference start date"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you're using something like &lt;a href="https://www.papercall.io/events"&gt;PaperCall&lt;/a&gt;, you can also save your abstracts and resubmit the same talks to multiple conferences on the platform. That'll be useful when we discuss tracking your talks later on!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#seek-recommendations"&gt;
  &lt;/a&gt;
  Seek recommendations
&lt;/h3&gt;

&lt;p&gt;If you know folks who are already speaking at conferences, ask them for recommendations! A speaker is likely to give you a more detailed (and potentially less biased) view of what's it's like to be a speaker at a given event than that event's CFP.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#put-yourself-out-there"&gt;
  &lt;/a&gt;
  Put yourself out there
&lt;/h3&gt;

&lt;p&gt;You can also take the straightforward route and present yourself as a potential speaker in public. This is often done on Twitter or LinkedIn. You'll find it easier to focus your efforts if you have some idea of what you'd like to talk about. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--57IIvxSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.therelicans.com/remoteimages/uploads/articles/cgcc26dqnzz8ug08b7ie.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--57IIvxSd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.therelicans.com/remoteimages/uploads/articles/cgcc26dqnzz8ug08b7ie.png" alt="DrRosieW tweets: I'm looking to speak at more UX/design/product/tech events/conferences. My specialty is behaviour change in health, but I can also speak about Research Ops (esp. consent &amp;amp; data management) and research on sensitive topics. If that's of interest to your audience, please get in touch!"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You also don't need to start with a conference. Reach out to meetups or do lightning talks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brainstorming-talk-ideas"&gt;
  &lt;/a&gt;
  Brainstorming talk ideas
&lt;/h2&gt;

&lt;p&gt;This may be influenced by the conferences you're interested in and vice versa! Whichever comes first, coming up with the idea for your talk or settling on a conference to apply to, a brainstorming session can help you loosen up enough to produce an interesting topic.&lt;/p&gt;

&lt;p&gt;Remember, you don't need to be an expert in the thing you're going to talk about. Most people aren't! You're sharing &lt;em&gt;your&lt;/em&gt; take on your chosen topic. That's something absolutely no one else can do as well as you can.&lt;/p&gt;

&lt;p&gt;The writing tips from last week hold true! We'll repost the list of questions to ask yourself here for anyone who hasn't worked through the previous challenges:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What do you already know?&lt;/li&gt;
&lt;li&gt;What have you learned recently?&lt;/li&gt;
&lt;li&gt;What's something you wish you knew when you got started (with a specific project, tool, tech in general, etc.)?&lt;/li&gt;
&lt;li&gt;What do you want to learn more about? Why?&lt;/li&gt;
&lt;li&gt;What problems have you solved? How did you do it?&lt;/li&gt;
&lt;li&gt;What questions do you have?&lt;/li&gt;
&lt;li&gt;Do you have any content you can reuse, like a video or stream?

&lt;ul&gt;
&lt;li&gt;Hint, if you joined the video, open source, or writing challenges, you can reuse that!&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#writing-the-abstract"&gt;
  &lt;/a&gt;
  Writing the abstract
&lt;/h2&gt;

&lt;p&gt;An abstract is like your conference talk pitch. It's a brief synopsis of what you'll talk about meant to convince participants to come and watch the talk itself. Writing a tight, persuasive abstract about a relevant topic will give you the best chance of having your talk accepted.&lt;/p&gt;

&lt;p&gt;This means you don't need to write the whole talk before submitting a proposal! That's potentially a ton of wasted effort if the talk doesn't get picked up by a conference. Unless you're willing to convert your talk into a video or otherwise release the content in some form besides a conference talk, focus on the abstract first.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#outline-your-plan"&gt;
  &lt;/a&gt;
  Outline your plan
&lt;/h3&gt;

&lt;p&gt;You may find it helpful to start with a bulleted list of points. If you do, hang onto this list because some organizers will ask for just such an outline in their CFP! Draw some takeaways from your outline to give attendees an idea of what they'll learn from you.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-it-brief"&gt;
  &lt;/a&gt;
  Keep it brief
&lt;/h3&gt;

&lt;p&gt;When we say an abstract is meant to be brief, we mean it! When your talk proposal is one of hundreds or thousands, you need to hook your reader quickly. Resist the temptation to add fluff. See if you can get your idea across within five sentences.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#test-it-out"&gt;
  &lt;/a&gt;
  Test it out
&lt;/h3&gt;

&lt;p&gt;Share your abstract with at least one person who is familiar with your topic and one person who isn't. It might be scary to share this unfinished work but try to choose people you can trust to give honest feedback. The abstract should, as much as possible, get them excited about your presentation. Apply any feedback you get and then repeat the process.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#get-a-headshot"&gt;
  &lt;/a&gt;
  Get a Headshot
&lt;/h2&gt;

&lt;p&gt;Your headshot doesn't need to be fancy. It doesn't even need to be a photo of you (though some organizers prefer photos over illustrations). Any clear image of your face should do, but some organizers will request that the image be square.&lt;/p&gt;

&lt;p&gt;It's a good idea to keep this image handy, along with your bio, so you don't have to go looking for it whenever you want to apply to speak somewhere.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#craft-your-bio"&gt;
  &lt;/a&gt;
  Craft Your Bio
&lt;/h2&gt;

&lt;p&gt;For some folks, this is the hardest part of all: writing about yourself! If you don't already have a biography, you'll need one for practically every event you'll ever speak at. You can start small, with just the bare facts, and add flair when you're feeling more confident. Think of the following like a mini-worksheet and fill in the brackets.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[your name] is a [your title] at [your company]. [your pronoun] [has/have] a particular interest in [your professional interest(s)]. Ask them about [your go-to fun fact]!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;That's enough to get you going! If you want to dig a little deeper and come up with a more original bio, you can construct one using this technique &lt;a href="https://angiejones.tech/"&gt;Angie Jones&lt;/a&gt; shared at &lt;a href="https://www.writespeakcode.com/2019/"&gt;Write/Speak/Code 2019&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Exercise: Write down ten accomplishments, five technical things you could teach, and five "shiny trinkets" (special or unique things about you). Combine these to form a more personal bio.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Scott Berkun also has some great tips on &lt;a href="https://scottberkun.com/2013/how-to-write-a-good-bio/"&gt;how to write a good bio&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#apply-to-speak"&gt;
  &lt;/a&gt;
  Apply to Speak
&lt;/h2&gt;

&lt;p&gt;Read the CFP, and then read it again. You do not want to have your wonderful proposal rejected because you didn't follow the CFP directions. A common mistake that can cause your proposal to be rejected is including personally identifiable information when submitting it to an anonymized CFP.&lt;/p&gt;

&lt;p&gt;Look at the timeline and note when the CFP opens, when it closes, when you can expect a response, when you would need to turn in any deliverables, and when you would need to travel/speak.&lt;/p&gt;

&lt;p&gt;Some organizers will wait until after the closing deadline has passed before they begin reviewing and selecting talks, but not all. Some conferences will review proposals as soon as they're submitted, and immediately accept or decline. Get your proposal in early, you don't want to be rejected because they have already accepted a talk on your topic.&lt;/p&gt;

&lt;p&gt;General timeline:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;CFP opens 12-6 months in advance&lt;/li&gt;
&lt;li&gt;CFP is rolling or 1-2 months&lt;/li&gt;
&lt;li&gt;Accepted speakers notified 2-4 weeks after CFP close&lt;/li&gt;
&lt;li&gt;Accepted speakers may decline, so rejections are usually sent later

&lt;ul&gt;
&lt;li&gt;You should know whether or not you're speaking at least two months prior to the event but maybe as little as a few weeks!&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#be-concise"&gt;
  &lt;/a&gt;
  Be concise!
&lt;/h3&gt;

&lt;p&gt;The selection committee are normally volunteers often working in their free time. They may have hundreds of proposals to read, make sure your proposal‚Äîespecially your abstract‚Äîis succinct and snappy.&lt;/p&gt;

&lt;p&gt;You can add more detailed information in your proposal description but really focus on getting your abstract and title right. These are your hooks, they are what attendees will see in the schedule, but they're also the first thing a member of the selection committee will see too, and with hundreds of proposals to grade if you do not capture their attention with your title and abstract they may not even review the rest of your proposal.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#ask-for-feedback"&gt;
  &lt;/a&gt;
  Ask for feedback
&lt;/h3&gt;

&lt;p&gt;If there is something about the CFP process you are unsure of, do not be afraid to contact the conference and ask. Also, some conferences may run workshops or provide reviews and feedback on your proposal before you submit it. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#apply-multiple-times-with-limits"&gt;
  &lt;/a&gt;
  Apply multiple times (with limits)
&lt;/h3&gt;

&lt;p&gt;Applying to conferences can be a bit of a numbers game. Even with an amazing proposal, you may not be selected. This is not a reflection on you or on your proposal, it could be any number of reasons; they have already accepted a talk on your topic, they have a particular theme for the conference which your talk does not fit into, they simply do not have enough slots in the schedule to accept every talk they want to.&lt;/p&gt;

&lt;p&gt;To maximize your chances of success, you can submit multiple proposals to the same conference. But do so respectfully! Ensure that each of your proposals are relevant to the conference. Ask yourself if you were only going to submit one proposal, would you still be happy to submit that proposal? Remember the selection committee are likely volunteers and very busy, so respect their time. You want them on your side!&lt;/p&gt;

&lt;p&gt;Some conferences might have restrictions on the number of talks you can propose to a single CFP. As always, read the CFP rules carefully first.&lt;/p&gt;

&lt;p&gt;You can also submit to multiple conferences, even if the conferences are going to be at the same or similar time. Just remember, if you are selected to speak at a conference, to withdraw your proposals from any other conferences happening at the same time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#tracking-your-talks"&gt;
  &lt;/a&gt;
  Tracking your talks
&lt;/h2&gt;

&lt;p&gt;Keep track of your talk ideas, abstracts, slides, and notes! You might not get each and every one accepted, but being able to reference everything you've come up with at a glance can help you build stronger talks in the future.&lt;/p&gt;

&lt;p&gt;Try collecting everything you've created in a single "Speaking" folder somewhere it'll be easy for you to locate later. You can keep adding to that folder for as long as it works for you. Some people will also use a tool like Notion or Trello to keep track of &lt;em&gt;current&lt;/em&gt; proposals.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#share-completed-talks"&gt;
  &lt;/a&gt;
  Share completed talks
&lt;/h3&gt;

&lt;p&gt;You can display things like slides and recordings on your website, on GitHub, or on platforms built for the purpose like &lt;a href="https://noti.st/"&gt;Notist&lt;/a&gt;. These serve as a kind of portfolio. In the future, organizers will be able to see a list of the fabulous talks you've already given whenever they're looking for a new speaker to invite to their event! &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aVyBXcdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.therelicans.com/remoteimages/uploads/articles/8dmdwteoaoesihhpppem.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aVyBXcdB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.therelicans.com/remoteimages/uploads/articles/8dmdwteoaoesihhpppem.png" alt="Aaron Bassett's presentations on Notist"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You have something to say that's worth sharing with an audience! Take your time, ask for help when you need it, and start applying. It'll get easier and faster over time. &lt;/p&gt;

&lt;p&gt;Consider getting started by applying to &lt;a href="https://community.codenewbie.org/codenewbie/a-new-codeland-opportunity-for-creative-codenewbies-5e82"&gt;CodeLand Recess&lt;/a&gt;! This is a great way to focus all the lessons you've learned over the course of the Relicans Summer Camp into a bite-sized video that will be shared with the CodeNewbie community.&lt;/p&gt;

&lt;p&gt;Also, share your work on &lt;a href="https://www.therelicans.com"&gt;therelicans.com&lt;/a&gt; by the end of July. We want to see what you create! Be sure to include the #RelicansSummerCamp tag on your post so we can find it easily and award you your camp badge!&lt;/p&gt;

</description>
      <category>relicanssummercamp</category>
      <category>beginners</category>
      <category>community</category>
      <category>learning</category>
    </item>
    <item>
      <title>N√£o tenha medo de mudar de rota</title>
      <author>Robson Junior</author>
      <pubDate>Mon, 26 Jul 2021 17:31:49 +0000</pubDate>
      <link>https://dev.to/opendevufcg/nao-tenha-medo-de-mudar-de-rota-270e</link>
      <guid>https://dev.to/opendevufcg/nao-tenha-medo-de-mudar-de-rota-270e</guid>
      <description>&lt;p&gt;Escolhas... N√£o importa o quanto n√≥s treinemos durante toda a vida a ter que faz√™-las, tomar decis√µes n√£o parece se tornar uma tarefa mais simples com o tempo. Vamos usar a sua potencial √°rea de atua√ß√£o como exemplo. Mesmo j√° sabendo que voc√™ gostaria de tentar Ci√™ncia da Computa√ß√£o (e mesmo se n√£o for o caso, n√£o desista desta postagem!), esse termo abarca uma infinidade de possibilidades. Como ter certeza de que o que voc√™ escolher vai possibilitar sua satisfa√ß√£o por tempo suficiente at√© voc√™ descobrir a pr√≥xima grande coisa?&lt;/p&gt;

&lt;p&gt;Resposta r√°pida, ou melhor, a √∫nica resposta: √© imposs√≠vel garantir isso.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/PGTAGyDoswIfgRoCFF/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/PGTAGyDoswIfgRoCFF/giphy.gif" alt="Ocupando muito espa√ßo do c√©rebro..."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;N√£o se preocupe: n√£o vou te atacar com mais perguntas dif√≠ceis, nem usar termos de coach para mudar o seu &lt;em&gt;#mindset&lt;/em&gt;. Tamb√©m n√£o tenho nenhuma solu√ß√£o para oferecer, infelizmente. No lugar disso tudo, quero compartilhar uma hist√≥ria sobre o lado bom de criar coragem para tomar decis√µes dif√≠ceis, mesmo quando as suas escolhas anteriores n√£o anteviam esse futuro.&lt;/p&gt;

&lt;p&gt;Cursos de gradua√ß√£o geralmente culminam em um Trabalho de Conclus√£o de Curso, certo? Aquela √∫ltima disciplina que quase ningu√©m quer, mas vai ter que cursar, sendo geralmente o √∫ltimo obst√°culo entre voc√™ e o t√£o sonhado diploma. Nesse caso em espec√≠fico, o TCC se deu em duas etapas: um Projeto de TCC, consistindo basicamente no esbo√ßo e planejamento do trabalho, e o TCC propriamente dito, cada um em um semestre.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/3ohs4jnnmnxfkYiGic/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/3ohs4jnnmnxfkYiGic/giphy.gif" alt="Muito trabalho..."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;O primeiro passo foi, naturalmente, escolher qual professor(a) eu abordaria quanto √† orienta√ß√£o, o que felizmente n√£o foi uma decis√£o muito dif√≠cil. Embora eu tenha estudado com v√°rios professores e professoras sensacionais, levei em considera√ß√£o principalmente com quem eu ainda n√£o tinha (at√© o momento) tido a chance de trabalhar, quem poderia me ajudar a encontrar mais possibilidades para o TCC e, principalmente, com quem eu realmente me sentia confort√°vel.&lt;/p&gt;

&lt;p&gt;Em seguida, surgiu uma d√∫vida bem mais complicada: qual tema escolher? Eu sabia que queria fazer sobre um tema que realmente me despertasse interesse, mas, mesmo com as op√ß√µes sendo teoricamente infinitas, nem todas se sustentam como uma tem√°tica de TCC. Depois de contatar a minha orientadora para definirmos isso, eu pensava que n√£o fazia ideia do que queria trabalhar. Depois dela dar umas dez (s√©rio mesmo) sugest√µes de temas super interessantes, eu... Propus o meu pr√≥prio. Pensei rapidamente que o que me traria satisfa√ß√£o seria construir algo com algum impacto social, e ent√£o dei uma ideia de um sistema que atuaria nesse sentido.&lt;/p&gt;

&lt;p&gt;Vieram mais d√∫vidas: como se daria esse trabalho? Focar√≠amos o TCC no desenvolvimento desse sistema, ou utilizar√≠amos os aprendizados obtidos ao longo do curso para viabilizar uma pesquisa? Como encaixar isso no contexto de Computa√ß√£o? Como encontrar os contatos das pessoas que poderiam nos ajudar a ceder as informa√ß√µes necess√°rias?&lt;/p&gt;

&lt;p&gt;Depois de uma s√©rie de amea√ßas √† validade do tema e inseguran√ßas quanto ao que poder√≠amos fazer, conseguimos chegar em uma proposta s√≥lida ao fim de Projeto de TCC. Caramba, j√° t√≠nhamos bastante coisa: uma introdu√ß√£o que poderia muito bem ser aproveitada, um cronograma otimista, refer√™ncias a artigos multidisciplinares que poderiam nos guiar‚Ä¶&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/LMtqBDUJAzyYjUTaRP/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/LMtqBDUJAzyYjUTaRP/giphy.gif" alt="Planejamento do TCC."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mesmo assim, quando come√ßamos TCC, comecei a enxergar mais furos naquilo tudo. Como √≠amos conseguir contatar todas aquelas pessoas? Como √≠amos abra√ßar o mundo com aquele projeto, estando no meio de uma pandemia que cada vez mais minava a minha vontade de interagir com outros virtualmente? Ainda assim, planejamos uma redu√ß√£o de escopo, fizemos mais pesquisas e estava tudo bem, talvez.&lt;/p&gt;

&lt;p&gt;Mas n√£o estava. Eu j√° sabia que, apesar de j√° ter sido apaixonado por aquele tema, nenhum caminho que eu via naquele momento me levaria a um resultado satisfat√≥rio. E isso, a cada reuni√£o, estava me deixando cada vez mais ansioso e incerto. Aquela sensa√ß√£o de saber o que precisa ser feito agora, mas perder todo o √¢nimo de continuar s√≥ por imaginar que no fim das contas n√£o vai haver tempo o suficiente para fazer o melhor poss√≠vel.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/cOE5zjbtd6a9cDwQol/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/cOE5zjbtd6a9cDwQol/giphy.gif" alt="Trabalhando no TCC."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Junto a isso, havia uma impot√™ncia ainda maior na insatisfa√ß√£o com aquele tema. Afinal, que direito eu tinha de n√£o querer trabalh√°-lo? Eu me agarrei com unhas e dentes a uma ideia que eu mesmo havia sugerido, fiz com que a lapid√°ssemos de diversas formas e tinha uma proposta que, de diversos √¢ngulos, parecia fact√≠vel. Desistir de algo que voc√™ insistiu n√£o √© nada f√°cil. Mas eu n√£o estava nada feliz.&lt;/p&gt;

&lt;p&gt;Foi nesse momento que uma ideia antiga, que eu n√£o havia sugerido anteriormente por n√£o ter dom√≠nio do tema, voltou √† minha mente. Ao coment√°-lo com alguns amigos que estavam acompanhando o andamento do meu trabalho, eles perceberam que essa nova proposta realmente me deixava empolgado e me incentivaram a sugeri-la. Com um novo √¢nimo, criei coragem e conversei com a minha orientadora: "n√£o quero decepcion√°-la, mas podemos mudar de tema?"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.giphy.com/media/ybEXZcycd789q/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/ybEXZcycd789q/giphy.gif" alt="Implorando..."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;E mais uma vez, provavelmente por eu ter muito privil√©gio de estar rodeado de gente incrivelmente acolhedora, eu n√£o fui contrariado. Est√°vamos l√°, com menos de tr√™s meses para desenvolver todo o TCC, com uma nova proposta em uma √°rea totalmente diferente, com um prop√≥sito totalmente diferente. A diferen√ßa era: agora eu sentia que era o tema certo.&lt;/p&gt;

&lt;p&gt;Escrevi uma nova proposta, comecei a fazer os experimentos, digitei incansavelmente aquele trabalho e, o melhor de tudo, eu me vi apaixonado mais uma vez por um projeto. Depois de muitas linhas de c√≥digo, muitas horas ouvindo "Te Amo L√° Fora" da DUDA BEAT, muitas revis√µes e muito apoio, consegui terminar o trabalho de que mais me orgulho at√© hoje. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/B6vfi_i2RnA"&gt;
&lt;/iframe&gt;
&lt;br&gt;
&lt;em&gt;Eu‚Äå ‚Äåesqueci‚Äå ‚Äådessa‚Äå ‚Äåli√ß√£o‚Äå ‚Äåde‚Äå ‚Äåme‚Äå ‚Äåtratar‚Äå ‚Äåcom‚Äå ‚Äåmais‚Äå ‚Äåamor‚Äå ‚Äå&lt;br&gt;
Restou‚Äå ‚Äåum‚Äå ‚Äåpouco‚Äå ‚Äåde‚Äå ‚Äåesperan√ßa,‚Äå ‚Äåd–µcidi‚Äå ‚Äåque‚Äå ‚Äå√©‚Äå ‚Äåpra‚Äå ‚Äål√°‚Äå ‚Äåque‚Äå ‚Äåeu‚Äå ‚Äåvou&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Espero que essa hist√≥ria ~de supera√ß√£o~ seja um incentivo para voc√™ acreditar que n√£o deve ter medo de mudar de rota. √â claro: seja racional, considere bem todas as suas op√ß√µes. Se, no fim das contas, voc√™ sente que h√° algo que poderia te levar por um caminho em que voc√™ se sinta uma pessoa mais realizada, n√£o tema.&lt;/p&gt;

&lt;p&gt;Como diria Lady Gaga em sua fala ic√¥nica, pode haver 100 pessoas em uma sala e 99 n√£o acreditam em voc√™, mas basta que uma acredite. E essa primeira pessoa, por mais clich√™ que seja dizer isso, &lt;strong&gt;precisa&lt;/strong&gt; ser voc√™. Espero que, como eu tive e tenho, voc√™ tenha a chance de estar rodeado por uma comunidade de pessoas que te levam para frente, mas acreditar em si √© o primeiro e mais importante passo!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Sm4OTqy4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.ladygagamedia.net/wp-content/uploads/2018/12/5c085783ab823-anigifsubbuzz1933015405722361.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sm4OTqy4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://www.ladygagamedia.net/wp-content/uploads/2018/12/5c085783ab823-anigifsubbuzz1933015405722361.gif" alt="Pode haver 100 pessoas em uma sala e 99 n√£o acreditam, mas voc√™ s√≥ precisa de 1 para acreditar."&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Obrigado pela leitura! Meu nome √© Robson e normalmente voc√™ pode me encontrar no &lt;a href="https://twitter.com/JRosboJr"&gt;Twitter&lt;/a&gt;, no &lt;a href="https://instagram.com/jrobsonjr"&gt;Instagram&lt;/a&gt; ou no &lt;a href="https://www.linkedin.com/in/jrobsonjr/"&gt;LinkedIn&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>ptbr</category>
      <category>motivation</category>
    </item>
    <item>
      <title>The Engineering Executive Operating System - Part 1</title>
      <author>Conor Bronsdon</author>
      <pubDate>Mon, 26 Jul 2021 17:29:58 +0000</pubDate>
      <link>https://dev.to/conorbronsdon/the-engineering-executive-operating-system-part-1-1573</link>
      <guid>https://dev.to/conorbronsdon/the-engineering-executive-operating-system-part-1-1573</guid>
      <description>&lt;p&gt;When starting at a new organization your first 100 days are crucial and can feel overwhelming.&lt;/p&gt;

&lt;p&gt;In startups this onboarding is even more difficult because you often have to carve your own path forward without a lot guidance.&lt;/p&gt;

&lt;p&gt;Tech Executive Consultant Aviv Ben-Yosef joins &lt;a href="https://open.spotify.com/episode/1tWaCaHyaQignIa1FF1Al5"&gt;Dev Interrupted&lt;/a&gt; to explain his strategies for your first 100 days at an organization and how to make use of the "tech executive operating system" and its techniques to improve your leadership and your organization. &lt;a href="https://avivbenyosef.com/tech-executive-operating-system/"&gt;Get a sample chapter of Aviv's book here&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/1tWaCaHyaQignIa1FF1Al5"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Key objectives to accomplish in the first 100 days&lt;/li&gt;
&lt;li&gt;Keeping teams stable during a period of turnover&lt;/li&gt;
&lt;li&gt;Tips for onboarding, hiring and firing&lt;/li&gt;
&lt;li&gt;Working with poor performing team members&lt;/li&gt;
&lt;li&gt;How to navigate a workplace where teams are "family"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/H_oyLCAX2qw"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1400 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.gg/tpkmwM6c3g"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--XDOYxmNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibzeasyhj4ai3oeia26t.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--XDOYxmNX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ibzeasyhj4ai3oeia26t.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>hiring</category>
      <category>leadership</category>
      <category>management</category>
      <category>operations</category>
    </item>
    <item>
      <title>Improve Your Engineering Pipeline with Value Streams w/ Helen Beal</title>
      <author>Conor Bronsdon</author>
      <pubDate>Mon, 26 Jul 2021 17:23:16 +0000</pubDate>
      <link>https://dev.to/linearb/improve-your-engineering-pipeline-with-value-streams-w-helen-beal-f40</link>
      <guid>https://dev.to/linearb/improve-your-engineering-pipeline-with-value-streams-w-helen-beal-f40</guid>
      <description>&lt;p&gt;Software development and¬†delivery are critical. But how do you determine what value you get from all of that investment?&lt;/p&gt;

&lt;p&gt;Value Stream Management helps companies improve, monitor, and manage value so they can better visualize how work flows from idea to realization.¬†&lt;/p&gt;

&lt;p&gt;On this week's episode of &lt;a href="https://open.spotify.com/episode/3UsLqEe5xYeS4GaBLjtQR2"&gt;Dev Interrupted&lt;/a&gt;, we interview Helen Beal, Chair of the VSM Consortium, DevOps coach, author and "flowologist", to understand her research on Value Stream Management. Helen's research can also be found &lt;a href="https://www.vsmconsortium.org/research"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#listen-to-the-full-episode"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Listen to the full episode&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;&lt;iframe width="100%" height="232px" src="https://open.spotify.com/embed/episode/3UsLqEe5xYeS4GaBLjtQR2"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#episode-highlights-include"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Episode Highlights include:&lt;/strong&gt;
&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;What is Value Stream Management?&lt;/li&gt;
&lt;li&gt;How companies can best utilize VSM in their engineering pipeline&lt;/li&gt;
&lt;li&gt;What is the VSM Consortium and what are its goals?&lt;/li&gt;
&lt;li&gt;Technical writing as a force multiplier in your career&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#join-the-dev-interrupted-discord-server"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Join the Dev Interrupted Discord Server&lt;/strong&gt;
&lt;/h1&gt;

&lt;p&gt;With over 1400 members, the Dev Interrupted Discord Community is the best place for Engineering Leaders to engage in daily conversation. No sales people allowed. &lt;a href="https://discord.com/invite/devinterrupted"&gt;Join the community &amp;gt;&amp;gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--s1WHPiQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrzc51hhz30s20dxabmw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--s1WHPiQn--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrzc51hhz30s20dxabmw.png" alt="Join the Dev Interrupted Discord Community!"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>valuestreammanagement</category>
      <category>engineeringpipeline</category>
      <category>technicalwriting</category>
      <category>devops</category>
    </item>
    <item>
      <title>Awesome JavaScript Posts (Week 28)</title>
      <author>Palash Mondal</author>
      <pubDate>Mon, 26 Jul 2021 17:16:44 +0000</pubDate>
      <link>https://dev.to/palashmon/awesome-javascript-posts-week-28-2i48</link>
      <guid>https://dev.to/palashmon/awesome-javascript-posts-week-28-2i48</guid>
      <description>&lt;p&gt;Here is a curated list of the latest posts, blogs and repositories related to &lt;strong&gt;JavaScript&lt;/strong&gt; from last week (week 28). I hope you will find it useful and it will help you to gain more knowledge about what's latest happening in the world of JavaScript.&lt;/p&gt;

&lt;p&gt;Let's start!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-building-a-dynamic-header-with-intersection-observer"&gt;
  &lt;/a&gt;
  1. Building A Dynamic Header With Intersection Observer
&lt;/h3&gt;

&lt;p&gt;Have you ever needed to build a UI where some component on the page needs to respond to elements as they‚Äôre scrolled to a certain threshold within the viewport ‚Äî or perhaps in and out of the viewport itself? In JavaScript, attaching an event listener to constantly fire a callback on the scroll can be &lt;strong&gt;performance-intensive&lt;/strong&gt;, and if used unwisely, can make for a sluggish user experience. But there is a better way with &lt;strong&gt;Intersection Observer&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://www.smashingmagazine.com/2021/07/dynamic-header-intersection-observer/"&gt;dynamic-header-intersection-observer&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2-the-ultimate-guide-to-browserside-storage"&gt;
  &lt;/a&gt;
  2. The Ultimate Guide to Browser-Side Storage
&lt;/h3&gt;

&lt;p&gt;Browsers have evolved over the past three decades so it‚Äôs not surprising they offer a multitude of storage APIs which essentially do the same thing. It‚Äôs not always easy to find the *best *option and you may have to combine several depending on the functionality you‚Äôre implementing. Here is the ultimate guide to browser-side storage. &lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://blog.openreplay.com/the-ultimate-guide-to-browser-side-storage"&gt;the-ultimate-guide-to-browser-side-storage&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-freelance-react-developer-checklist"&gt;
  &lt;/a&gt;
  3. Freelance React Developer Checklist
&lt;/h3&gt;

&lt;p&gt;Essentially this checklist makes your &lt;strong&gt;onboarding as a React freelance developer&lt;/strong&gt; more seaming-less when entering a new project and team because before a company can &lt;strong&gt;hire you as a React freelancer&lt;/strong&gt;, both sides need to talk through this checklist to get their requirements aligned.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://www.robinwieruch.de/freelance-react-developer"&gt;freelance-react-developer&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4-vue-3-migration-build-safely-upgrade-your-app-to-vue-3-pt-1"&gt;
  &lt;/a&gt;
  4. Vue 3 Migration Build: safely upgrade your app to Vue 3 (Pt. 1)
&lt;/h3&gt;

&lt;p&gt;The Vue team has recently released the highly anticipated migration build for Vue 3. If you‚Äôve been thinking about upgrading your &lt;strong&gt;Vue 2 app to Vue 3&lt;/strong&gt;, this is what you need. The process of upgrading an app to the latest version of the framework can be a daunting task. This article series is created to make that process &lt;strong&gt;&lt;em&gt;easier&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://www.vuemastery.com/blog/vue-3-migration-build/"&gt;vue-3-migration-build&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5-how-to-migrate-from-jquery-to-nextjs"&gt;
  &lt;/a&gt;
  5. How To Migrate From jQuery To Next.js
&lt;/h3&gt;

&lt;p&gt;In this article, we‚Äôre taking a closer look at different approaches and strategies on how we can migrate a web application that uses the &lt;strong&gt;jQuery&lt;/strong&gt; framework, and start using one of the coolest &lt;strong&gt;React&lt;/strong&gt; frameworks in the market: Next.js.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://www.smashingmagazine.com/2021/07/migrate-jquery-nextjs/"&gt;migrate-jquery-nextjs&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-new-tailwind-app-cli"&gt;
  &lt;/a&gt;
  6. New Tailwind App CLI
&lt;/h3&gt;

&lt;p&gt;A zero-configuration cross-platform Node.js based CLI that generates boilerplate code for different tailwind web applications. Set up a tailwind app with&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# install the CLI globally&lt;/span&gt;
&lt;span class="s"&gt;npm install -g new-tailwind-app&lt;/span&gt;

&lt;span class="c1"&gt;# use it with npx (recommended)&lt;/span&gt;
&lt;span class="s"&gt;npx new-tailwind-app [app_name] --flag&lt;/span&gt;

&lt;span class="c1"&gt;# create a react.js tailwind app&lt;/span&gt;
&lt;span class="s"&gt;npx new-tailwind-app [app_name] --react&lt;/span&gt;

&lt;span class="c1"&gt;# create a react.js tailwind app with prettier&lt;/span&gt;
&lt;span class="s"&gt;npx new-tailwind-app [app_name] --react --prettier&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Link: &lt;a href="https://github.com/msaaddev/new-tailwind-app"&gt;new-tailwind-app&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7-using-redis-with-nodejs"&gt;
  &lt;/a&gt;
  7. Using Redis with Node.js
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt; is a super fast and efficient in-memory, key-value cache and store. It‚Äôs also known as a data structure server, as the keys can contain strings, lists, sets, hashes and other data structures. This tutorial explains basic Redis data structures and interactions, as well as several common use cases using the &lt;strong&gt;node-redis&lt;/strong&gt; library.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://www.sitepoint.com/using-redis-node-js/"&gt;using-redis-node-js&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8-how-to-convert-arrays-to-humanreadable-lists-in-javascript"&gt;
  &lt;/a&gt;
  8. How to convert arrays to human-readable lists in JavaScript
&lt;/h3&gt;

&lt;p&gt;Oftentimes, you might end up in situations where you have an array and you just want to deflate the entire array content in a &lt;strong&gt;human-readable form&lt;/strong&gt;. Or more specifically in a &lt;strong&gt;list-like format&lt;/strong&gt;. This tutorial explains how would you achieve this.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://www.amitmerchant.com/how-to-convert-arrays-to-human-readable-lists-in-javascript/"&gt;convert-arrays-to-human-readable-lists-in-javascript&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9-how-to-structure-a-large-scale-vuejs-application"&gt;
  &lt;/a&gt;
  9. How to Structure a Large Scale Vue.js Application
&lt;/h3&gt;

&lt;p&gt;What is the best way to structure a &lt;strong&gt;Vue.js application&lt;/strong&gt; so that it scales and remains maintainable and extendable the more it grows? This is a question that I've heard on numerous occasions and I think one answer to that question lies in the &lt;strong&gt;principle of predictability&lt;/strong&gt;. When it comes to creating a scalable project you want everything about it to be as predictable as possible.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://vueschool.io/articles/vuejs-tutorials/how-to-structure-a-large-scale-vue-js-application/"&gt;structure-a-large-scale-vue-js-application&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10-the-road-to-ember-40"&gt;
  &lt;/a&gt;
  10. The Road to Ember 4.0
&lt;/h3&gt;

&lt;p&gt;In his EmberConf 2021 keynote, Yehuda shared a name for Ember's next edition: &lt;strong&gt;Polaris&lt;/strong&gt;. In order to unblock Polaris providing the best, most productive experience the Ember project can build, we're going to remove already-deprecated APIs in a 4.0 release. &lt;strong&gt;Ember 4.0 will be released around September 20th&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Link: &lt;a href="https://blog.emberjs.com/the-road-to-ember-4-0/"&gt;the-road-to-ember-4-0&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;If you have read or found a quality post or blog recently related to JavaScript that you will like to be included in the GitHub repository, then please submit a PR here: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/palashmon/awesome-js-posts"&gt;https://github.com/palashmon/awesome-js-posts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, if you liked this article, be sure to ‚ù§ it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#happy-coding"&gt;
  &lt;/a&gt;
  Happy Coding!
&lt;/h2&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>Loopple v0.1.0 Beta - Multiple Pages Drag and Drop Dashboard Builder</title>
      <author>rarestoma</author>
      <pubDate>Mon, 26 Jul 2021 16:59:07 +0000</pubDate>
      <link>https://dev.to/rarestoma/loopple-v0-1-0-beta-multiple-pages-drag-and-drop-dashboard-builder-f68</link>
      <guid>https://dev.to/rarestoma/loopple-v0-1-0-beta-multiple-pages-drag-and-drop-dashboard-builder-f68</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;It's been 3 months since I am working on Loopple, a Drag and Drop Dashboard Builder. Today I made a new update and the biggest feature is the option to add multiple pages to your dashboard. üöÄ&lt;/p&gt;

&lt;p&gt;Now I am looking for feedback to see what do you think about the structure of the pages and if you find it easy to use. You can try this here: &lt;a href="https://www.loopple.com/"&gt;loopple&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This update also comes with the following changes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add option to remove elements using Delete/Backspace button&lt;/li&gt;
&lt;li&gt;Change sidebar grid sections design&lt;/li&gt;
&lt;li&gt;Add actions for tables: "add new row" &amp;amp; "add new column"&lt;/li&gt;
&lt;li&gt;Add Loopple logo&lt;/li&gt;
&lt;li&gt;General style changes&lt;/li&gt;
&lt;li&gt;General design &amp;amp; bugs issues fixes&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Any feedback is very helpful and highly appreciated.&lt;/p&gt;

&lt;p&gt;Thank you!&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>webdev</category>
      <category>javascript</category>
    </item>
    <item>
      <title>ReactJS, nodejs, Javascript,c++ Project For Beginners</title>
      <author>coders</author>
      <pubDate>Mon, 26 Jul 2021 16:54:27 +0000</pubDate>
      <link>https://dev.to/coderzway/projects-for-beginners-reactjs-nodejs-javascript-c-project-are-included-448e</link>
      <guid>https://dev.to/coderzway/projects-for-beginners-reactjs-nodejs-javascript-c-project-are-included-448e</guid>
      <description>&lt;h3&gt;1.¬† Nodejs Project&lt;br&gt;&lt;br&gt;
&lt;/h3&gt;
&lt;br&gt;&lt;p&gt;If you have decided to build your career in¬†&lt;span&gt;NodeJS¬†&lt;/span&gt;development, we have gathered a list of¬†&lt;span&gt;nodeJS projects for beginners&lt;/span&gt;¬†for all node enthusiasts to build highly scalable¬†web applications.&lt;/p&gt;
&lt;p&gt;These best¬†&lt;span&gt;nodeJS projects for beginners&lt;/span&gt;¬†will help you gain knowledge about core node concepts, train your skill level, build a superb work portfolio, and get hired for your dream job.&lt;/p&gt;
&lt;p&gt;When you start building your first projects, it‚Äôs highly recommended for beginners in coding to create a repository for each of your projects so you will be able to learn¬†&lt;em&gt;git&lt;/em&gt;¬†and show your coding expertise to future employers.&lt;/p&gt;
&lt;p&gt;Further Reading: &lt;b&gt;&lt;a href="https://bit.ly/36YTCSA"&gt;Nodejs Project For Beginners&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;h3&gt;&lt;b&gt;2. ReactJS project&lt;/b&gt;&lt;/h3&gt;
&lt;p&gt;Aiming to master front-end frameworks? Start learning¬†&lt;span&gt;ReactJS¬†&lt;/span&gt;diligently and look forward to a great career in programming. The best way to move forward is to start building ReactJS projects for beginners and get hands-on with ReactJS.&lt;/p&gt;
&lt;p&gt;By working on smaller real-life projects, you can master theoretical concepts and get ready for the professional development challenges. Once you have successfully deployed your¬†&lt;em&gt;ReactJS&lt;/em&gt;¬†apps you can present those achievements to your future employers and get your dream job.&lt;/p&gt;
&lt;p&gt;Building¬†&lt;span&gt;ReactJS projects for beginners&lt;/span&gt;¬†will not only allow you to strengthen up React skills but also will help you explore your creative sides as a developer. Also, it will make you familiar with¬†&lt;span&gt;React developer tools&lt;/span&gt;¬†and react ecosystem for each project as per the need for that project.&lt;/p&gt;
&lt;p&gt;React project development is a self-directed process. You‚Äôll have to learn on a trial and error basis.¬†Unlike the basics of React via online learning materials, there‚Äôll not be much to guide you on building React projects.&lt;/p&gt;
&lt;p&gt;Further Reading: &lt;b&gt;&lt;a href="https://bit.ly/2TCFknJ"&gt;ReactJS project for beginners&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;h3&gt;3.AngularJS Project&lt;/h3&gt;
&lt;p&gt;Presenting the best angular projects for beginners list that will prepare you well with the basics and practical needs in angular development. Mentioning your experience in Angular projects can make your resume stand apart from other candidates.&lt;/p&gt;
&lt;p&gt;Further Reading: &lt;b&gt;&lt;a href="https://bit.ly/3i3AVDr"&gt;AngularJS Project For Beginners&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;h3&gt;4. C++ Project For Beginners&lt;/h3&gt;
&lt;p&gt;C++ was built as an extension to C and gave programmers a high control over memory and system resources. If you know any other programming language, C++ will be easy to learn. Even otherwise, C++ is a friendly language, and you can learn it through some hands-on projects and practice.&lt;/p&gt;
&lt;p&gt;This article lists 10 C++ projects of different levels, which will help you appreciate the language more. You can also try many other similar projects. For example, one of our projects is Bookshop inventory management. You can try a library management system as well on the same lines. Again, similar to the railway ticket reservation system, you can try out the Bus ticket reservation system.&lt;/p&gt;
&lt;p&gt;Further Reading: &lt;b&gt;&lt;a href="https://www.codelivly.com/top-c-project-for-beginners/"&gt;C++ Project For Beginners&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;5. JavaScript&lt;/p&gt;
&lt;p&gt;Today, the key to learning JavaScript or any other programming language for that matter requires you to invest a lot of time and effort into developing a lot of projects.&lt;/p&gt;
&lt;p&gt;Let us assume that you have a limited amount of time and you want to create JavaScript projects that you haven‚Äôt worked on before. And working on new ideas and projects is necessary because if you keep doing stuff that you already understand, you won‚Äôt be making much progress against your long-term programming ambitions.&lt;/p&gt;
&lt;p&gt;At the very same time, you want to select tasks that are not too complicated. The key is to find a proposed project that‚Äôs just a little above your current ability level.&lt;/p&gt;
&lt;p&gt;Your goal, then, should be to start small and set reasonable milestones for your learning journey. The last thing you want is to launch an ambitious project and end up feeling discouraged when you‚Äôre stuck with it. And believe us when we say this, it happens a lot.&lt;/p&gt;
&lt;p&gt;It is a web developer‚Äôs job to stay in touch with all the latest trends, as well as all the essential frameworks and libraries. It is also possible that you just got done with your JavaScript course and want to put your learning into practice. Either, we understand your needs and thus have created a compelling list of some of the best¬†&lt;span&gt;JavaScript projects for beginners&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Further Reading: &lt;b&gt;&lt;a href="https://bit.ly/3eZUpHf"&gt;Javascript Project For Beginners&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;



</description>
      <category>javascript</category>
      <category>python</category>
    </item>
    <item>
      <title>JavaScript 'this' - Four rules to know</title>
      <author>Kingsley Ubah</author>
      <pubDate>Mon, 26 Jul 2021 16:51:01 +0000</pubDate>
      <link>https://dev.to/ubahthebuilder/javascript-this-four-rules-to-know-fhd</link>
      <guid>https://dev.to/ubahthebuilder/javascript-this-four-rules-to-know-fhd</guid>
      <description>&lt;p&gt;When you use &lt;code&gt;this&lt;/code&gt; in your code, it automatically resolves to an object or scope depending on the context at which is was defined.&lt;/p&gt;

&lt;p&gt;But what are those possible contexts a &lt;code&gt;this&lt;/code&gt; call can refer to? Additionally, how can we use that information to find out which object a &lt;code&gt;this&lt;/code&gt; call will resolve to? Let's find out!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#this-context"&gt;
  &lt;/a&gt;
  this Context
&lt;/h3&gt;

&lt;p&gt;When used in a function, the &lt;code&gt;this&lt;/code&gt; keyword simply points to an object which it is bound to. In simple terms, it answers the question of where it should get some value or data from:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; is calling&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In the function above, the &lt;code&gt;this&lt;/code&gt; keyword is simply referring to an object to which it is bound to access the "name" property from it.&lt;/p&gt;

&lt;p&gt;But how do you know what object or scope the function is bound to? How do you make out what &lt;code&gt;this&lt;/code&gt; is referring to?&lt;/p&gt;

&lt;p&gt;To unravel that, we need to understand the various binding rules that guide the &lt;code&gt;this&lt;/code&gt; behavior.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#types-of-binding-in-javascript"&gt;
  &lt;/a&gt;
  Types of Binding in JavaScript
&lt;/h3&gt;

&lt;p&gt;Generally, there are four kinds of bindings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Default Binding&lt;/li&gt;
&lt;li&gt;Implicit Binding&lt;/li&gt;
&lt;li&gt;Explicit Binding&lt;/li&gt;
&lt;li&gt;Constructor Call Binding&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#default-binding-in-javascript"&gt;
  &lt;/a&gt;
  Default Binding in JavaScript
&lt;/h3&gt;

&lt;p&gt;One of the first rules to remember is that if the function housing a &lt;code&gt;this&lt;/code&gt; reference is a standalone function, then that function is bound to the global object.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; is calling&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;


&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// Kingsley is calling&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;code&gt;name()&lt;/code&gt; is a standalone, unattached function. As per the rule, it is bound to the global scope. Hence, the this.name reference resolves to the global variable const name = 'Kingsley'.&lt;/p&gt;

&lt;p&gt;This rule, however, doesn't hold if &lt;code&gt;name()&lt;/code&gt; were to be defined in strict mode as so:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;use strict&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; is calling&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Kingsley&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// TypeError: `this` is `undefined`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#implicit-binding-in-javascript"&gt;
  &lt;/a&gt;
  Implicit Binding in JavaScript
&lt;/h3&gt;

&lt;p&gt;Another scenario to look out for is whether the function is attached to an object (its context) at the call site.&lt;/p&gt;

&lt;p&gt;According to the binding rule in JavaScript, a function can use an object as its context only if that object is bound to it at the call site. This form of binding is known as implicit binding.&lt;/p&gt;

&lt;p&gt;Here is what I mean by that:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; years old&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;myObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;// 22 years old&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Put simply, when you call a function using dot notation, this is implicitly bound to the object the function is being called from.&lt;/p&gt;

&lt;p&gt;In this example, since alert is being called from myObj, the this keyword is bound to myObj. So when alert is called with myObj.alert(), this.age is 22, which is the age property of myObj.&lt;/p&gt;

&lt;p&gt;Let's look at another example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; years old&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;nestedObj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;myObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nestedObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 26 years old&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here, because &lt;code&gt;alert&lt;/code&gt; is ultimately being called from nestedObj, &lt;code&gt;this&lt;/code&gt; is implicitly bound to &lt;code&gt;nestedObj&lt;/code&gt; instead of &lt;code&gt;myObj&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An easy way to figure out which object this is implicitly bound to is to look at which object is to the left of the dot (.):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; years old&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;nestedObj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;26&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;myObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// `this` is bound to `myObj` -- 22 years old&lt;/span&gt;
&lt;span class="nx"&gt;myObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nestedObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// `this` is bound to `nestedObj` -- 26 years old&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#explicit-binding-in-javascript"&gt;
  &lt;/a&gt;
  Explicit binding in JavaScript
&lt;/h3&gt;

&lt;p&gt;We saw that implicit binding had to do with having a reference in that object.&lt;/p&gt;

&lt;p&gt;But what if we want to force a function to use an object as its context without putting a property function reference on the object?&lt;/p&gt;

&lt;p&gt;We have two utility methods to achieve this: &lt;code&gt;call()&lt;/code&gt; and &lt;code&gt;apply()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Along with a couple other set of utility functions, these two utilities are available to all functions in JavaScript via the &lt;code&gt;[[Prototype]]&lt;/code&gt; mechanism.&lt;/p&gt;

&lt;p&gt;To explicitly bind a function call to a context, you simply have to invoke the &lt;code&gt;call()&lt;/code&gt; on that function and pass in the context object as parameter:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt; years old&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 22 years old&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now here's the fun part. Even if you were to pass around that function multiple times to new variables (currying), every invocation will use the same context because it has been locked (explicitly bound) to that object. This is called hard binding.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;myObj&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="na"&gt;age&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt; 
&lt;span class="p"&gt;};&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;myObj&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="p"&gt;};&lt;/span&gt; 

&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="c1"&gt;// 22&lt;/span&gt;
&lt;span class="nx"&gt;setTimeout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 22 &lt;/span&gt;
&lt;span class="c1"&gt;// a hard-bound `bar` can no longer have its `this` context overridden &lt;/span&gt;
&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// still 22&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hard binding is a perfect way to lock a context into a function call and truly make that function into a method.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#constructor-call-binding-in-javascript"&gt;
  &lt;/a&gt;
  Constructor Call Binding in JavaScript
&lt;/h3&gt;

&lt;p&gt;The final and perhaps most interesting kind of binding is the &lt;code&gt;new&lt;/code&gt; binding which also accentuates the unusual behaviour of JavaScript in comparison to other class-based languages.&lt;/p&gt;

&lt;p&gt;When a function is invoked with the &lt;code&gt;new&lt;/code&gt; keyword in front of it, otherwise known as a constructor call, the following things occur:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A brand new object is created (or constructed)&lt;/li&gt;
&lt;li&gt;The newly constructed object is [[Prototype]]-linked to the function that constructed it&lt;/li&gt;
&lt;li&gt;The newly constructed object is set as the this binding for that function call.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let's see this in code to get a better understanding:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;giveAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="p"&gt;}&lt;/span&gt; 

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;bar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;giveAge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 22&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By calling giveAge(...) with new in front of it, we‚Äôve constructed a new object and set that new object as the this for the call of foo(...). So new is the final way that you can bind a function call‚Äôs this .&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  SUMMARY
&lt;/h3&gt;

&lt;p&gt;To summarize, the this keyword, when used in a function, binds that function to a context object.&lt;/p&gt;

&lt;p&gt;There are four kinds of bindings: default binding, implicit binding, explicit binding and constructor call binding (new).&lt;/p&gt;

&lt;p&gt;Knowing these four rules will help you easily discern the context for a &lt;code&gt;this&lt;/code&gt; reference.&lt;/p&gt;

&lt;p&gt;I hope you got something valuable from this article. If you are learning JavaScript, here are some other articles that might interest you:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ubahthebuilder.tech/complete-web-development-roadmap-for-newbies"&gt;Web Development roadmap for beginners&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ubahthebuilder.tech/50-web-development-terms-all-programmers-should-know"&gt;50 Web Development terms to know&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ubahthebuilder.tech/introduction-to-asynchronous-programming-with-javascript"&gt;Introduction to Asynchronous Programming in JavaScript&lt;/a&gt; &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thank you for reading and see you soon.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;P/S: If you are learning JavaScript, I created an eBook which teaches 50 topics in JavaScript with hand-drawn digital notes. Check it out &lt;a href="//gum.co/js-50"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Code-fi to Chill your Mood</title>
      <author>Rahul Khinchi</author>
      <pubDate>Mon, 26 Jul 2021 16:47:15 +0000</pubDate>
      <link>https://dev.to/rk7/coding-lofi-to-chill-your-frustration-1o2j</link>
      <guid>https://dev.to/rk7/coding-lofi-to-chill-your-frustration-1o2j</guid>
      <description>&lt;h1&gt;
  &lt;a href="#what-is-lofi-music"&gt;
  &lt;/a&gt;
  What is Lo-fi Music?
&lt;/h1&gt;

&lt;p&gt;Lo-fi (aka low-fi; short for low fidelity) is a music or production quality in which elements usually regarded as imperfections of a performance are audible, sometimes as a deliberate aesthetic choice.&lt;br&gt;
 The standards of sound quality (fidelity) and music production have evolved throughout the decades, meaning that some older examples of lo-fi may not have been originally recognized as such. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#lofi-and-coding"&gt;
  &lt;/a&gt;
  Lo-fi and Coding
&lt;/h2&gt;

&lt;p&gt;Lo-Fi mixes are often used as relaxing ambient music that can be left open on the side while you work on a project, or played in the background at the end of a long day to recharge. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--nuMk7hzp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ps9mfc7ch7woufk58yuv.jpeg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nuMk7hzp--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ps9mfc7ch7woufk58yuv.jpeg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#reason-for-listening-lofi"&gt;
  &lt;/a&gt;
  Reason for listening Lo-fi?
&lt;/h1&gt;

&lt;p&gt;Coding can become your best friend but sometimes while solving questions, you get frustrated when you don't get the optimized algorithm to solve the question and at that place, Lo-fi helps to get calm and enjoy the process.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#lofi-isnt-only-for-coding-but-for-every-mood"&gt;
  &lt;/a&gt;
  Lo-fi isn't only for Coding but for every mood.
&lt;/h3&gt;

&lt;p&gt;Some are:&lt;br&gt;
Hustle Lo-fi&lt;br&gt;
Coding Lo-fi&lt;br&gt;
Study or Focus Lo-fi&lt;br&gt;
Sad Mood Lo-fi&lt;br&gt;
3 am Lo-fi&lt;br&gt;
Happy Lo-fi&lt;br&gt;
Chill beat Lo-fi&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#some-best-lofi-music-for-coding"&gt;
  &lt;/a&gt;
  Some best Lo-fi Music for Coding:
&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Spotify Playlist: Click &lt;a href="https://open.spotify.com/playlist/6Q3Qo3XxSj5Cu9pQJlBfzG"&gt;HERE&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;YouTube:&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=f02mOEt11OQ"&gt;Code-fi&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=bmVKaAV_7-A"&gt;3am&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.youtube.com/watch?v=_ITiwPMUzho"&gt;Chill-Beats&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Personal Favourite: &lt;a href="https://www.youtube.com/watch?v=DvPtvfJ1_EU"&gt;Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For more Genre: Try searching on YouTube for eg:&lt;br&gt;
Sad mood lo-fi, coding lo-fi, sleep lo-fi, frustrated lo-fi.&lt;/p&gt;

</description>
      <category>news</category>
      <category>codenewbie</category>
      <category>computerscience</category>
      <category>programming</category>
    </item>
    <item>
      <title>#6) What is NaN property in JavaScript‚ùì</title>
      <author>Mayank Yadav</author>
      <pubDate>Mon, 26 Jul 2021 16:39:20 +0000</pubDate>
      <link>https://dev.to/myk/6-what-is-nan-property-in-javascript-53of</link>
      <guid>https://dev.to/myk/6-what-is-nan-property-in-javascript-53of</guid>
      <description>&lt;h1&gt;
  &lt;a href="#-raw-nan-not-a-number-endraw-"&gt;
  &lt;/a&gt;
  üöÄ&lt;code&gt;NaN : Not a Number&lt;/code&gt;
&lt;/h1&gt;

&lt;p&gt;‚úîSo basically it means that the value should not be a legal number.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z1d--mTM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kex9njte1rprxkrftrio.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z1d--mTM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kex9njte1rprxkrftrio.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
üí†Some Examples for better understandingüëá&lt;/p&gt;

&lt;p&gt;‚úîFor checking if a value is NaN, we use isNaN() function. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z5Eng6Si--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dolzbjt36324x53pythl.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z5Eng6Si--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dolzbjt36324x53pythl.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;‚ö†##Note:&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#%E2%9C%94-raw-nan-first-converts-it-into-a-number-type-and-then-compares-or-equates-to-nan-endraw-"&gt;
  &lt;/a&gt;
  ‚úî&lt;code&gt;NaN first converts it into a number type and then compares or equates to NaN&lt;/code&gt;.
&lt;/h3&gt;




</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Partition and Clustering Key on Scylla DB</title>
      <author>Jo√£o Victor Martins</author>
      <pubDate>Mon, 26 Jul 2021 16:33:57 +0000</pubDate>
      <link>https://dev.to/j_a_o_v_c_t_r/partition-and-clustering-key-on-scylla-db-1l1e</link>
      <guid>https://dev.to/j_a_o_v_c_t_r/partition-and-clustering-key-on-scylla-db-1l1e</guid>
      <description>&lt;p&gt;In the last 2 previous posts, we talked about &lt;em&gt;Scylla DB&lt;/em&gt;. Today I will keep talking about the database, more specifically how works &lt;em&gt;Primary Key&lt;/em&gt; on &lt;em&gt;Scylla&lt;/em&gt;. We will see that the &lt;em&gt;PK&lt;/em&gt; can be divided into two: &lt;em&gt;Partition Key&lt;/em&gt; and &lt;em&gt;Clustering Key&lt;/em&gt;. Let's get the difference between both and some differences in relation to a relational database.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#partition-key"&gt;
  &lt;/a&gt;
  Partition Key
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Partition Key&lt;/em&gt; is responsible for data distribution across the nodes. It determines which node will store a given row. It can be one or more columns.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uc5Jp6jX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v48jx4qqwsxk6908dlge.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uc5Jp6jX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v48jx4qqwsxk6908dlge.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#clustering-key"&gt;
  &lt;/a&gt;
  Clustering Key
&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Clustering Key&lt;/em&gt; is responsible for sorting the rows within the partition. It can be zero or more columns.&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#the-problem-of-car-table"&gt;
  &lt;/a&gt;
  The problem of Car Table
&lt;/h1&gt;

&lt;p&gt;Now that we know the difference about the &lt;em&gt;Composites Keys&lt;/em&gt;, let's remember how we modeling our &lt;em&gt;PK&lt;/em&gt; in Car table. In the &lt;em&gt;cqlsh&lt;/em&gt; after selecting the &lt;em&gt;Keyspace&lt;/em&gt;, use the command below.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DESCRIBE car
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The result will be.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;CREATE TABLE automobilies.car (
    id uuid PRIMARY KEY,
    brand text,
    color text,
    model text
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'ALL'}
    AND comment = ''
    AND compaction = {'class': 'SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How we can see, the unique &lt;em&gt;PK&lt;/em&gt; that we have is &lt;em&gt;id&lt;/em&gt; and could be calling of &lt;em&gt;Simple Primary Key&lt;/em&gt;. If we do a &lt;em&gt;select&lt;/em&gt; in the database, will retrieve only one car&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cqlsh:automobilies&amp;gt; select * from car;

 id                                   | brand | color | model
--------------------------------------+-------+-------+-------
 f714e8e5-b160-4341-807d-f4cd92b973a4 |    VW |   Red |  Golf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To improve our test, let's include more cars in the table. The same &lt;em&gt;model&lt;/em&gt; of car will have the same &lt;em&gt;id&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cqlsh:automobilies&amp;gt; insert into car (id, brand, color, model) values (e0625c94-e9c2-11eb-9a03-0242ac130003, 'Ford', 'Red', 'Focus');
cqlsh:automobilies&amp;gt; insert into car (id, brand, color, model) values (fbd04f2c-511a-43c5-b588-9e29ebcb5d7a, 'VW', 'Nardo Grey', 'Passat');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now the &lt;em&gt;select&lt;/em&gt; clause result in&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; id                                   | brand | color      | model
--------------------------------------+-------+------------+--------
 fbd04f2c-511a-43c5-b588-9e29ebcb5d7a |    VW | Nardo Grey | Passat
 e0625c94-e9c2-11eb-9a03-0242ac130003 |  Ford |        Red |  Focus
 f714e8e5-b160-4341-807d-f4cd92b973a4 |    VW |        Red |   Golf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If we want to find just a Golf car, we can query by &lt;em&gt;id&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cqlsh:automobilies&amp;gt; select * from car where id = f714e8e5-b160-4341-807d-f4cd92b973a4;

 id                                   | brand | color | model
-------------------------------------------+-------+-------+-------
 f714e8e5-b160-4341-807d-f4cd92b973a4 |    VW |   Red |  Golf

(1 rows)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But what happening if we want to query by &lt;em&gt;id&lt;/em&gt; and &lt;em&gt;color&lt;/em&gt;? Well, maybe just need to add the &lt;em&gt;and&lt;/em&gt; in the query and choose &lt;em&gt;color&lt;/em&gt;, right?&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cqlsh:automobilies&amp;gt; select * from car where id = f714e8e5-b160-4341-807d-f4cd92b973a4 and color = 'Red';

InvalidRequest: Error from server: code=2200 [Invalid query] message="Cannot execute this query as it might involve data filtering and thus may have unpredictable performance. If you want to execute this query despite the performance unpredictability, use ALLOW FILTERING"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Like we can see, when add &lt;em&gt;color&lt;/em&gt;, we get an error, but why? &lt;br&gt;
To answer this question, we need to understand how &lt;em&gt;Scylla&lt;/em&gt; saves data &lt;em&gt;(I will use an example with another domain)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g423RzAf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/as7d3eshh5i5qtg4q8ho.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g423RzAf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/as7d3eshh5i5qtg4q8ho.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the image above, we see that &lt;em&gt;Scylla&lt;/em&gt; uses a &lt;em&gt;PK&lt;/em&gt; to divide the partitions. When we use just &lt;em&gt;id&lt;/em&gt; for query, &lt;em&gt;Scylla&lt;/em&gt; knows exactly which node contains the data by hashing the ID (which is the partition key) and that is why we got results in the first query. In the second query, when we tried to filter for &lt;em&gt;color&lt;/em&gt;, wasn't possible, because we not defined &lt;em&gt;color&lt;/em&gt; as &lt;em&gt;Clustering Key&lt;/em&gt; or as &lt;em&gt;Partition Key&lt;/em&gt;. We would still know on which partition the data exists because we have the partition key, but we would have to do a linear scan of the entire data on that partition to find the specific row we are looking for &lt;em&gt;(using ALLOW FILTERING)&lt;/em&gt;, but performing this query would be inefficient and possibly very slow. To use &lt;em&gt;ALLOW FILTERING&lt;/em&gt; is like this&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cqlsh:automobilies&amp;gt; select * from car where id = f714e8e5-b160-4341-807d-f4cd92b973a4 and color = 'Red' ALLOW FILTERING;

 id                                   | brand | color | model
-------------------------------------------+-------+-------+-------
 f714e8e5-b160-4341-807d-f4cd92b973a4 |    VW |   Red |  Golf

(1 rows)


cqlsh:automobilies&amp;gt; select * from car where id = f714e8e5-b160-4341-807d-f4cd92b973a4 and color = 'Green' ALLOW FILTERING;

--------MORE---
(0 rows)

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;How we saw, this it's not good, so let's improve our data modeling. &lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#remodeling-car-table"&gt;
  &lt;/a&gt;
  Remodeling Car Table
&lt;/h1&gt;

&lt;p&gt;We should know for which attributes we will want to query to define our keys. How we want a query for &lt;em&gt;color&lt;/em&gt; and &lt;em&gt;id&lt;/em&gt;, both will be our &lt;em&gt;Pk&lt;/em&gt;, being &lt;em&gt;id&lt;/em&gt; a &lt;em&gt;Partition Key&lt;/em&gt; and &lt;em&gt;color&lt;/em&gt; a &lt;em&gt;Clustering Key&lt;/em&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cqlsh:automobilies&amp;gt; CREATE TABLE car (id uuid, brand text, color text, model text, PRIMARY KEY (id, color));

cqlsh:automobilies&amp;gt; DESCRIBE car;

CREATE TABLE automobilies.car (
    id uuid,
    color text,
    brand text,
    model text,
    PRIMARY KEY (id, color)
) WITH CLUSTERING ORDER BY (color ASC)
    AND bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'ALL'}
    AND comment = ''
    AND compaction = {'class': 'SizeTieredCompactionStrategy'}
    AND compression = {'sstable_compression': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99.0PERCENTILE';

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that we have a &lt;em&gt;Clustering Key&lt;/em&gt; we can &lt;em&gt;insert&lt;/em&gt; some cars with the same &lt;em&gt;id&lt;/em&gt;, but different colors and &lt;em&gt;Scylla&lt;/em&gt; will sort for us.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cqlsh:automobilies&amp;gt; insert into car (id, brand, color, model) values (f714e8e5-b160-4341-807d-f4cd92b973a4, 'VW', 'Red', 'Golf');
cqlsh:automobilies&amp;gt; insert into car (id, brand, color, model) values (e0625c94-e9c2-11eb-9a03-0242ac130003, 'Ford', 'Red', 'Focus');
cqlsh:automobilies&amp;gt; insert into car (id, brand, color, model) values (fbd04f2c-511a-43c5-b588-9e29ebcb5d7a, 'VW', 'Red', 'Passat');
cqlsh:automobilies&amp;gt; insert into car (id, brand, color, model) values (fbd04f2c-511a-43c5-b588-9e29ebcb5d7a, 'VW', 'Green', 'Passat');
cqlsh:automobilies&amp;gt; insert into car (id, brand, color, model) values (f714e8e5-b160-4341-807d-f4cd92b973a4, 'VW', 'Green', 'Golf');
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Our partition will stay like this&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8jafHfsR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03hs5yfh3jox5mjic2fg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8jafHfsR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/03hs5yfh3jox5mjic2fg.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thus we have the partitions divided for &lt;em&gt;id&lt;/em&gt; and rows of cars sorted by color&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cqlsh:automobilies&amp;gt; select * from car;

 id                                   | color | brand | model
-------------------------------------------+-------+-------+--------
 fbd04f2c-511a-43c5-b588-9e29ebcb5d7a | Green |    VW | Passat
 fbd04f2c-511a-43c5-b588-9e29ebcb5d7a |   Red |    VW | Passat
 e0625c94-e9c2-11eb-9a03-0242ac130003 |   Red |  Ford |  Focus
 f714e8e5-b160-4341-807d-f4cd92b973a4 | Green |    VW |   Golf
 f714e8e5-b160-4341-807d-f4cd92b973a4 |   Red |    VW |   Golf
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;And now we can query by &lt;em&gt;id&lt;/em&gt; and &lt;em&gt;color&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cqlsh:automobilies&amp;gt; select * from car where id = fbd04f2c-511a-43c5-b588-9e29ebcb5d7a and color = 'Red';

 id                                   | color | brand | model
-------------------------------------------+-------+-------+--------
 fbd04f2c-511a-43c5-b588-9e29ebcb5d7a |   Red |    VW | Passat

(1 rows)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h1&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h1&gt;

&lt;p&gt;In general, we saw how we define our &lt;em&gt;PK&lt;/em&gt; in &lt;em&gt;Scylla&lt;/em&gt;, can being &lt;em&gt;Partition Key&lt;/em&gt; and &lt;em&gt;Clustering Key&lt;/em&gt;. We need first think about our queries and after to model our tables. There are many others rules for work with these &lt;em&gt;PK's&lt;/em&gt;, but in a unique post is not possible to cover all subject matter. I recommend that you do the courses of &lt;a href="https://university.scylladb.com/"&gt;https://university.scylladb.com/&lt;/a&gt;. Well, this is what I wanted to introduce in this post, I really hope that you like it. Doubts, critics, and suggestions, I will be a disposition.  &lt;/p&gt;

</description>
      <category>database</category>
      <category>scylladb</category>
    </item>
    <item>
      <title>Migrating from promise chains to async-await and escaping the try catch hell</title>
      <author>AvishkarDalvi</author>
      <pubDate>Mon, 26 Jul 2021 16:22:55 +0000</pubDate>
      <link>https://dev.to/avishkardalvi/migrating-from-promise-chains-to-async-await-and-escaping-the-try-catch-hell-191l</link>
      <guid>https://dev.to/avishkardalvi/migrating-from-promise-chains-to-async-await-and-escaping-the-try-catch-hell-191l</guid>
      <description>&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;async-await is a life saver when it comes to avoiding callback hell or the pyramid of doom.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;hell&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;span class="nx"&gt;step1&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;step2&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;step3&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
       &lt;span class="c1"&gt;// some code ...&lt;/span&gt;
         &lt;span class="p"&gt;})&lt;/span&gt;
       &lt;span class="p"&gt;})&lt;/span&gt;
     &lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The above code can be written in a clean line-by-line format using async-await.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;heaven&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;step1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;step2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;step3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This is great but when it comes to error handling this simplicity again goes for a toss because you end up with a try-catch tower of terror.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;towerOfTerror&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;step1&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="nx"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;step2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="nx"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;step3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
 &lt;span class="nx"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All your one-liners have now expanded to at least 5 lines of code.&lt;br&gt;
One easy way out would be to append the catch method to the end of each promise.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;step1&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fun&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But that can still get repetitive.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getBetter&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;step1&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;step2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;step3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
   &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another option is to create a function that implements one try-catch to replace all the others. It will first resolve the promise and then return an array that has the first element as the data and the second element as an error. But if there is an error then the data is null and the error is defined.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;awesome&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
 &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;promise&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can call this function in your code you can de-structure it to get a clean one-liner error handling.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;awesome&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
 &lt;span class="kd"&gt;const&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;error2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;awesome&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="c1"&gt;//or use the if statement if you want to handle the error differently&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
   &lt;span class="c1"&gt;//do something&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>programming</category>
      <category>codenewbie</category>
    </item>
  </channel>
</rss>
