<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Should I learn React or angular js</title>
      <author>Deepak Gupta</author>
      <pubDate>Tue, 14 Dec 2021 08:44:19 +0000</pubDate>
      <link>https://dev.to/deepakguptacoder/should-i-learn-react-or-angular-js-3be0</link>
      <guid>https://dev.to/deepakguptacoder/should-i-learn-react-or-angular-js-3be0</guid>
      <description>&lt;h1&gt;
  &lt;a href="#hello-everyone"&gt;
  &lt;/a&gt;
  Hello Everyone..
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;In this Article we are seeing the best things I can't tell about what to learn, but there are advantages of both of them, and I hope my comparison will help you to choose or at least learn something new.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#reactjs"&gt;
  &lt;/a&gt;
  ReactJS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i621UGWx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/po9oomcjq3sm8o1xd5pc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i621UGWx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/po9oomcjq3sm8o1xd5pc.png" alt="Image description" width="267" height="189"&gt;&lt;/a&gt;&lt;br&gt;
ReactJS is a JavaScript library developed and powered by Facebook.It has easy learning API and interface and is great for debugging. The technology has a component-based architecture making a code highly reusable. It has proven to be efficient for large scale high traffic applications such as Facebook, Instagram, BBC, and Netflix.&lt;br&gt;
Other benefits of ReactJS are React Native library and server-side rendering, which allows solving SEO and performance issues.ReactJS assures faster updates creating and synchronizing minimal lists of update portions.&lt;/p&gt;

&lt;p&gt;these benefits, ReactJS is essentially a library, not a full framework.In addition, the absence of templates and the use of Components for the UI generation may be confusing for programmers who do not specialize in React.Model-View-Controller paradigm while routing, data fetching and state management need to be tackled with the help of third parties.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#angularjs"&gt;
  &lt;/a&gt;
  AngularJS
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0eVOD2wA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s7r0dw897y4155bm6al6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0eVOD2wA--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/s7r0dw897y4155bm6al6.png" alt="Image description" width="554" height="554"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AngularJS is a Google product released in 2009, which makes it the oldest JavaScript framework.Directives of AngularJS allow adding special behavior to parts of the DOM, thus, facilitating the extension of HTML.It is a complete solution with a Model-View-Controller&lt;br&gt;
architecture, declarative programming style and strong feature set. AngularJS provides simple routing, intuitive alteration, and straightforward UI design.&lt;/p&gt;

&lt;p&gt;On the one hand, it significantly reduces the amount of code needed for the creation of dynamic views; on the other hand, it hurts performance and complicates debugging.A two-way data binding seems to be simultaneously the most appreciated and the most detested feature of AngularJS.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;br&gt;
.&lt;/p&gt;

&lt;h5&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h5&gt;

&lt;h6&gt;
  &lt;a href="#i-hope-you-found-this-article-useful-if-you-need-any-help-please-let-me-know-in-the-comment-section"&gt;
  &lt;/a&gt;
  I hope you found this article useful, if you need any help please let me know in the comment section.💯
&lt;/h6&gt;

</description>
      <category>react</category>
      <category>angular</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>How to connect Flask to ReactJs</title>
      <author>Faruq Abdulsalam</author>
      <pubDate>Tue, 14 Dec 2021 08:41:26 +0000</pubDate>
      <link>https://dev.to/nagatodev/how-to-connect-flask-to-reactjs-1k8i</link>
      <guid>https://dev.to/nagatodev/how-to-connect-flask-to-reactjs-1k8i</guid>
      <description>&lt;p&gt;Building web applications with the &lt;code&gt;Flask&lt;/code&gt; framework and the inbuilt &lt;a href="https://palletsprojects.com/p/jinja/"&gt;jinja&lt;/a&gt; template is cool but hooking your backend to a react frontend(which I believe we all love 😉) is much more interesting. In this tutorial, you are going to be taken through the easy steps you need to take to connect your &lt;code&gt;Flask&lt;/code&gt; backend to a &lt;code&gt;React&lt;/code&gt; frontend. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prerequisite"&gt;
  &lt;/a&gt;
  Prerequisite
&lt;/h2&gt;

&lt;p&gt;1) Beginner level understanding of the flask framework. If you are new to &lt;code&gt;Flask&lt;/code&gt; you can check out my article on how to set up your flask project and use it with the &lt;a href="https://palletsprojects.com/p/jinja/"&gt;jinja&lt;/a&gt; template engine &lt;a href="https://dev.to/nagatodev/getting-started-with-flask-1kn1"&gt;here&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;2) Familiarity with the basics of &lt;code&gt;ReactJs&lt;/code&gt;. You will be making use of the &lt;code&gt;useState&lt;/code&gt; hook and also fetching data from API using &lt;code&gt;axios&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let's get started.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#project-directory"&gt;
  &lt;/a&gt;
  Project directory
&lt;/h2&gt;

&lt;p&gt;Create the project directory where your application will be stored and then navigate into it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mkdir&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;project&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#react-frontend-setup"&gt;
  &lt;/a&gt;
  React frontend setup
&lt;/h2&gt;

&lt;p&gt;Create the frontend react application by running:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npx&lt;/span&gt; &lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;react&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="nx"&gt;flask_react&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Move into the &lt;code&gt;flask_react&lt;/code&gt; directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;flask_react&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;and then start the frontend application by running&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;start&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The default react application page should pop up in your browser; if it does not, copy and open the link below in your browser.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//localhost:3000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xVMOIwxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmpra1xpsht2bx1o7ls2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xVMOIwxd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mmpra1xpsht2bx1o7ls2.png" alt="react default" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flask-backend-setup"&gt;
  &lt;/a&gt;
  Flask backend setup
&lt;/h2&gt;

&lt;p&gt;Create a new directory in your base directory&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;mkdir&lt;/span&gt; &lt;span class="nx"&gt;backend&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;then navigate into it&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="nx"&gt;backend&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;If you have been following my &lt;code&gt;Building a web application with Flask&lt;/code&gt; series you should know the next thing that needs to be created. Yes, a virtual environment. Did you happen to get that right? 😀&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#virtual-environment"&gt;
  &lt;/a&gt;
  Virtual environment
&lt;/h3&gt;

&lt;p&gt;It is recommended to always create a virtual environment before you start your project. This helps you to separate the packages you use in this application from other applications; any change you make here won't affect the same package in another application on your system. To create a  virtual environment on your system; run this command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;mac&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;unix&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;python3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="nx"&gt;venv&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;
&lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;windows&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;py&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt; &lt;span class="nx"&gt;venv&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After creating the environment, activate it by running :&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;mac&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;unix&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;source&lt;/span&gt; &lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;activate&lt;/span&gt;
&lt;span class="nx"&gt;For&lt;/span&gt; &lt;span class="nx"&gt;windows&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;Scripts&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nx"&gt;activate&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#installing-flask"&gt;
  &lt;/a&gt;
  Installing Flask
&lt;/h3&gt;

&lt;p&gt;Now that you have your environment up and running, you can go ahead and install Flask&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;pip&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;flask&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The next thing is to register the script in an environment file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;pip&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;python&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;dotenv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After successful installation, create the &lt;code&gt;.flaskenv&lt;/code&gt; file in the &lt;code&gt;backend&lt;/code&gt; directory created above.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;touch&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;flaskenv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Please note that the preceding &lt;code&gt;.&lt;/code&gt; is very important. If you name your file just &lt;code&gt;flaskenv&lt;/code&gt;, any environment variable you'll put in it won't be read.&lt;/p&gt;

&lt;p&gt;Now put your environment variables in the &lt;code&gt;.flaskenv&lt;/code&gt; file:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;
&lt;span class="nx"&gt;FLASK_ENV&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;development&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The application environment is set to development mode so you can easily debug your application and the base.py file which will contain your flask application will be created in the next section.&lt;/p&gt;

&lt;p&gt;If the above approach is not used, you would need to keep on exporting your environment variables using &lt;code&gt;export FLASK_APP=base.py&lt;/code&gt; and &lt;code&gt;export FLASK_ENV=development&lt;/code&gt; whenever you restart your terminal window.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To ensure that the focus of this article doesn't deviate, I'll be making the flask backend structure simple. If you want to build bigger projects you definitely have to create a better folder structure for your application. You can check out my articles on &lt;a href="https://dev.to/nagatodev/getting-started-with-flask-1kn1"&gt;Getting started with Flask&lt;/a&gt; and &lt;a href="https://dev.to/nagatodev/building-a-todo-list-application-with-flask-fcj"&gt;Building a Todo List Application with Flask&lt;/a&gt; if you need to learn how to create a folder structure for larger projects.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#basepy"&gt;
  &lt;/a&gt;
  base.py
&lt;/h3&gt;

&lt;p&gt;Create a new file &lt;code&gt;base.py&lt;/code&gt; in the &lt;code&gt;backend&lt;/code&gt; directory where the &lt;code&gt;.flaskenv&lt;/code&gt; directory is also located.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;touch&lt;/span&gt; &lt;span class="nx"&gt;base&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Your folder structure should currently look like 👇&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--avApmJBz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxushvw3xnha5k71ns1h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--avApmJBz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nxushvw3xnha5k71ns1h.png" alt="Folder structure" width="485" height="593"&gt;&lt;/a&gt;&lt;br&gt;
Inside the &lt;code&gt;base.py&lt;/code&gt; script create a simple API that returns your name and info about you:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;flask&lt;/span&gt; &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Flask&lt;/span&gt;

&lt;span class="nx"&gt;api&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;api&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;/profile&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nx"&gt;def&lt;/span&gt; &lt;span class="nx"&gt;my_profile&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="nx"&gt;response_body&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Nagato&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;about&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello! I'm a full stack developer that loves python and javascript&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;response_body&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The code above contains a simple API which would be called by the react front end to get the &lt;code&gt;response_body&lt;/code&gt; dictionary.&lt;/p&gt;

&lt;p&gt;You might have noticed two things:&lt;br&gt;
i) the &lt;code&gt;GET&lt;/code&gt; http method is not specified here. This is because, by default, &lt;code&gt;view&lt;/code&gt; functions in flask accept GET requests only.&lt;br&gt;
ii) the &lt;code&gt;response_body&lt;/code&gt; dictionary being returned at the end of the function is not being passed as an argument to the popular &lt;code&gt;jsonify&lt;/code&gt; function like this &lt;code&gt;jsonify(response_body)&lt;/code&gt;. This is because view functions in Flask can return a dictionary, which Flask then turns to JSON format.&lt;/p&gt;

&lt;p&gt;The backend has been successfully set up, you can test this by running your application.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;flask&lt;/span&gt; &lt;span class="nx"&gt;run&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then navigate to the url &lt;code&gt;http://127.0.0.1:5000/profile&lt;/code&gt;.You should see the dictionary &lt;code&gt;response_body&lt;/code&gt; rendered in JSON format.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--6Pw3uU82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e9xh5xpucwv4imfjfq6h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--6Pw3uU82--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/e9xh5xpucwv4imfjfq6h.png" alt="flask-run-view" width="880" height="384"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You could also use &lt;code&gt;postman&lt;/code&gt; to confirm this and you'll still get the same result.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--U8swoJPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jpcob7r7jot1qowyiio.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--U8swoJPr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5jpcob7r7jot1qowyiio.png" alt="postman-api-call" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to push your code to source control. Don't forget to add your &lt;code&gt;env&lt;/code&gt; and &lt;code&gt;__pycache__&lt;/code&gt; folders to the &lt;code&gt;gitignore&lt;/code&gt; file in the base directory.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;env&lt;/span&gt;
&lt;span class="nx"&gt;backend&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;__pycache__&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#connecting-the-api-endpointprofile-to-the-react-frontend"&gt;
  &lt;/a&gt;
  Connecting the API endpoint(/profile) to the react frontend
&lt;/h2&gt;

&lt;p&gt;Now you can return to the base directory where the react frontend is located.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;cd&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Install the &lt;code&gt;axios&lt;/code&gt; library:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;npm&lt;/span&gt; &lt;span class="nx"&gt;install&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#packagejson"&gt;
  &lt;/a&gt;
  package.json
&lt;/h3&gt;

&lt;p&gt;Open the package.json file and add the proxy below the "private": true, line so it ends up like 👇.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;flask_react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;0.1.0&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;private&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;proxy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http://localhost:5000&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;//newline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;By doing this, you will be able to use relative paths when you are making the API requests. Instead of making use of &lt;code&gt;http://localhost:5000/profile&lt;/code&gt; you can simply make use of &lt;code&gt;/profile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The default url which is normally used to access flask applications in the browser is &lt;code&gt;http://127.0.0.1:5000&lt;/code&gt; but &lt;code&gt;http://localhost:5000&lt;/code&gt; was used above as the value to the proxy key. Don't be confused, they are both the same. You can read more on that &lt;a href="https://whatismyipaddress.com/localhost"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Don't close the &lt;code&gt;package.json&lt;/code&gt; file yet. There is something cool you can add as well. You know that whenever your react server is started and you make any change in a file and you save it, the server restarts so that the new change can reflect right?. You can also add that feature to your flask backend application. This is another advantage of connecting react to flask 😎.&lt;/p&gt;

&lt;p&gt;Under the &lt;code&gt;scripts&lt;/code&gt; section add another key and value. &lt;br&gt;
&lt;code&gt;"start-backend": "cd backend &amp;amp;&amp;amp; env/bin/flask run --no-debugger",&lt;/code&gt; so it ends up looking like 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;scripts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts start&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;start-backend&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;cd backend &amp;amp;&amp;amp; env/bin/flask run --no-debugger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;//new line&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts build&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts test&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;eject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react-scripts eject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can start your backend server with &lt;code&gt;npm run start-backend&lt;/code&gt;. This executes the command passed as its value in the package.json file. It navigates into the &lt;code&gt;env&lt;/code&gt; directory in your &lt;code&gt;backend&lt;/code&gt; directory and executes the &lt;code&gt;flask run&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;--no-debugger&lt;/code&gt; option is also passed here to disable the browser-based debugger as the Flask backend only serves as a server that holds the API endpoint.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#appjs"&gt;
  &lt;/a&gt;
  app.js
&lt;/h3&gt;

&lt;p&gt;Here, you'll be making the call to the API endpoint in the flask backend server. After the changes, the app.js file will look exactly like 👇&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./logo.svg&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.css&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

   &lt;span class="c1"&gt;// new line start&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;profileData&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setProfileData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

  &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;getData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
      &lt;span class="na"&gt;method&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;GET&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/profile&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;
      &lt;span class="nx"&gt;setProfileData&lt;/span&gt;&lt;span class="p"&gt;(({&lt;/span&gt;
        &lt;span class="na"&gt;profile_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="na"&gt;about_me&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;about&lt;/span&gt;&lt;span class="p"&gt;}))&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="k"&gt;catch&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;})}&lt;/span&gt;
    &lt;span class="c1"&gt;//end of new line &lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App-header&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App-logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Edit&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;code&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;js&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/code&amp;gt; and save to reload&lt;/span&gt;&lt;span class="err"&gt;.
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;
          &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App-link&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://reactjs.org&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;_blank&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="nx"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;noopener noreferrer&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
        &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
          &lt;span class="nx"&gt;Learn&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* new line start*/&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;To&lt;/span&gt; &lt;span class="kd"&gt;get&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;profile&lt;/span&gt; &lt;span class="nx"&gt;details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&amp;gt;&amp;lt;button onClick={getData}&amp;gt;Click me&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;profileData&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Profile&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;profileData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;profile_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="na"&gt;me&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;profileData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;about_me&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;}&lt;/span&gt;
         &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="cm"&gt;/* end of new line */&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/header&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let's go through the new lines of code added to the app.js file.&lt;/p&gt;

&lt;p&gt;At the top of the file, the &lt;code&gt;useState&lt;/code&gt; hook and axios module are both imported.&lt;/p&gt;

&lt;p&gt;Then inside the function named &lt;code&gt;App&lt;/code&gt; the useState hook is used to control the state of the &lt;code&gt;profileData&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;getData&lt;/code&gt; function handles the API calls. It contains the &lt;code&gt;axios&lt;/code&gt; module which is used to send a &lt;code&gt;GET&lt;/code&gt; request to the API endpoint(\profile) on the backend which responds with the &lt;code&gt;jsonified&lt;/code&gt; format of the dictionary declared in the view function. &lt;/p&gt;

&lt;p&gt;Next, the &lt;code&gt;setProfileData&lt;/code&gt; function updates the state of &lt;code&gt;profileData&lt;/code&gt; by assigning the data in the json response to &lt;code&gt;profile_name&lt;/code&gt; and &lt;code&gt;about_me&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;getData&lt;/code&gt; function is only called when the &lt;code&gt;click me&lt;/code&gt; button is pressed.&lt;/p&gt;

&lt;p&gt;Finally &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is used as a conditional operator, to avoid getting an error. &lt;code&gt;profileData&lt;/code&gt; is going to be assigned an initial &lt;code&gt;null&lt;/code&gt; state when the application first loads so if you try to access &lt;code&gt;profileData.profile_name&lt;/code&gt; or &lt;code&gt;profileData.about_me&lt;/code&gt; you get an error message.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Cannot&lt;/span&gt; &lt;span class="nx"&gt;read&lt;/span&gt; &lt;span class="nx"&gt;properties&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;reading&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;profile_name&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hence the need for the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; conditional operator, so that the application only knows of the existence of the &lt;code&gt;profileData.profile_name&lt;/code&gt; and &lt;code&gt;profileData.about_me&lt;/code&gt; codes when the value of &lt;code&gt;profileData&lt;/code&gt; has changed from &lt;code&gt;null&lt;/code&gt; to containing the &lt;code&gt;response data&lt;/code&gt; from the API call.&lt;/p&gt;

&lt;p&gt;You don't need to make changes to any other file in the base directory. The work on the frontend part of the application is now complete. Now you can go ahead and test it:&lt;/p&gt;

&lt;p&gt;Step1: start your backend server using &lt;code&gt;npm run start-backend&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;note&lt;/strong&gt; this command can be run while you are in any directory; be it the base directory(flask_react) or the flask directory (backend)&lt;/p&gt;

&lt;p&gt;Step2: start your react server using &lt;code&gt;npm start&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Yplu121H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7doeymujo1m8zxgaftwa.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Yplu121H--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7doeymujo1m8zxgaftwa.png" alt="flask-react-project" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now click on the &lt;code&gt;click me&lt;/code&gt; button to make the API call and get the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;about_me&lt;/code&gt; data from the backend. &lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IJ-wICfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h08hsk3ael2synu0viwc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IJ-wICfj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h08hsk3ael2synu0viwc.png" alt="api call made to get name and about me data" width="880" height="550"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Voila!! you have successfully connected your flask backend to your react frontend. Now I am sure you can build small API endpoints in your flask backend and call the endpoints from your react frontend.&lt;/p&gt;

&lt;p&gt;If you have any questions, feel free to drop them as a comment or send me a message on &lt;a href="https://www.linkedin.com/in/faruq-abdulsalam-b2847b160"&gt;Linkedin&lt;/a&gt; or &lt;a href="https://twitter.com/Ace_II"&gt;Twitter&lt;/a&gt; and I'll ensure I respond as quickly as I can.&lt;/p&gt;

&lt;p&gt;Incase you are a &lt;code&gt;Django&lt;/code&gt; lover, you would definitely love to connect it to &lt;code&gt;React&lt;/code&gt; as well. You can check out my article on &lt;a href="https://dev.to/nagatodev/how-to-connect-django-to-reactjs-1a71"&gt;How to connect Django to ReactJs&lt;/a&gt; to learn how to go about that. Ciao 👋&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--uLTQOY1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ais6tpi9rcyc91w64d86.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--uLTQOY1S--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ais6tpi9rcyc91w64d86.gif" alt="Cartman" width="455" height="490"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>react</category>
      <category>webdev</category>
      <category>python</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Pizza flavoured Strategy pattern</title>
      <author>Abhinav Pandey</author>
      <pubDate>Tue, 14 Dec 2021 07:55:45 +0000</pubDate>
      <link>https://dev.to/abh1navv/pizza-flavoured-strategy-pattern-2pk4</link>
      <guid>https://dev.to/abh1navv/pizza-flavoured-strategy-pattern-2pk4</guid>
      <description>&lt;p&gt;Strategy pattern is a design pattern that allows you to define a family of algorithms, put each of them into a separate class, and make their objects interchangeable.&lt;/p&gt;

&lt;p&gt;This is useful when you have a large number of similar algorithms and you want to use them in different ways. It is one of the most common design patterns and is simple to understand and implement.&lt;/p&gt;

&lt;p&gt;Strategy pattern is closely related to the Factory pattern -  the main difference is that Factory pattern is more useful for deciding the implementation at runtime whereas Strategy pattern is more useful for deciding the implementation while designing the application.&lt;/p&gt;

&lt;p&gt;Let's start with some terminology.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Strategy&lt;/strong&gt; - A strategy is an interface which defines a family of algorithms.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Context&lt;/strong&gt; - A context is an object that uses a strategy to perform an operation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Concrete Strategy&lt;/strong&gt; - A concrete strategy is a class that implements an algorithm.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Client&lt;/strong&gt; - A client is a class that tells the Context which strategy to use.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#a-real-world-example"&gt;
  &lt;/a&gt;
  A real world example
&lt;/h3&gt;

&lt;p&gt;Let's think about an example of this in the real world. It is as simple as ordering a pizza.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We have an oven which can cook a pizza. Consider it a context.&lt;/li&gt;
&lt;li&gt;The pizza is an abstraction. There can be many type of pizzas. So it is a strategy.&lt;/li&gt;
&lt;li&gt;The actual pizza that a customer selects is a concrete strategy.&lt;/li&gt;
&lt;li&gt;When the customer(the client) orders a specific pizza, the contents of the actual pizza are put into the oven, the oven starts to cook and the pizza is ready.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lets-code-this-up"&gt;
  &lt;/a&gt;
  Let's code this up
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#the-strategy"&gt;
  &lt;/a&gt;
  The Strategy
&lt;/h3&gt;

&lt;p&gt;Let's create a pizza interface.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;Pizza&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-concrete-strategy"&gt;
  &lt;/a&gt;
  The Concrete Strategy
&lt;/h3&gt;

&lt;p&gt;Let's create multiple concrete strategies.&lt;/p&gt;

&lt;p&gt;Our first strategy is a NY Style pizza.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;NYStyleCheesePizza&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;Pizza&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Preparing NY Style Sauce and Cheese Pizza"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The other is a Pineapple pizza.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PineapplePizza&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;Pizza&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="nd"&gt;@Override&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;prepare&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;System&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;out&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;println&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Preparing Pineapple Pizza even though it is not a real pizza"&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-context"&gt;
  &lt;/a&gt;
  The Context
&lt;/h3&gt;

&lt;p&gt;Let's create a context class for our Oven.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Oven&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="nc"&gt;Pizza&lt;/span&gt; &lt;span class="n"&gt;pizza&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="nf"&gt;Oven&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Pizza&lt;/span&gt; &lt;span class="n"&gt;pizza&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;pizza&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pizza&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;bake&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;pizza&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;prepare&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#the-client"&gt;
  &lt;/a&gt;
  The Client
&lt;/h3&gt;

&lt;p&gt;Now, let's create a client class.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight java"&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Client&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;String&lt;/span&gt;&lt;span class="o"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
        &lt;span class="nc"&gt;Oven&lt;/span&gt; &lt;span class="n"&gt;oven&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Oven&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;NYStyleCheesePizza&lt;/span&gt;&lt;span class="o"&gt;());&lt;/span&gt;
        &lt;span class="n"&gt;oven&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;bake&lt;/span&gt;&lt;span class="o"&gt;();&lt;/span&gt;
    &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Considering the customer orders a NY Style pizza, the oven will start to cook the NY Style pizza.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-using-strategy-pattern"&gt;
  &lt;/a&gt;
  Advantages of using Strategy Pattern
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Flexible context - You can change the strategy at runtime or even at design time but the context code doesnt have to change.&lt;/li&gt;
&lt;li&gt;Easy to extend - You can add more strategies without having to change the context code.&lt;/li&gt;
&lt;li&gt;Easier to test - You can test the code easily. All you have to do is pass in a mock strategy object to the context.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Strategy pattern is something you might be using already without even knowing it. It is intuitive and easy to understand.&lt;/p&gt;

&lt;p&gt;If we talk about modern Java, the most popular occurrence of Strategy pattern is through &lt;a href="https://www.baeldung.com/spring-qualifier-annotation"&gt;Spring Qualifiers&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;Thanks for reading! This should help you understand the concept of strategy pattern. Stay tuned for more design patterns.&lt;br&gt;
If you want to connect with me, you can find me on Twitter &lt;a href="https://twitter.com/abh1navv"&gt;@abh1navv&lt;/a&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>java</category>
      <category>codequality</category>
      <category>oop</category>
    </item>
    <item>
      <title>How to Debug Python Scripts Like a Pro?</title>
      <author>Thuwarakesh Murallie</author>
      <pubDate>Tue, 14 Dec 2021 07:41:55 +0000</pubDate>
      <link>https://dev.to/thuwarakesh/how-to-debug-python-scripts-like-a-pro-3ef7</link>
      <guid>https://dev.to/thuwarakesh/how-to-debug-python-scripts-like-a-pro-3ef7</guid>
      <description>&lt;p&gt;Printing logs won't help.&lt;/p&gt;

&lt;p&gt;As a self-taught programmer, debugging was my biggest struggle, and often it's the bottleneck holding me back.&lt;/p&gt;

&lt;p&gt;Over time, I've learned several techniques. Some aren't very good, but they work. Some are useful but not perfect. And some are pretty smart ways of doing it.&lt;/p&gt;

&lt;p&gt;In this post, I've discussed several techniques I used for finding issues in a Python project. I believe it'd be helpful for beginners and intermediary level Python developers and data scientists.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://thuwarakesh.medium.com/78df2f3a9b05?sk=73e13ee9c1005b33c1f90aef8e7d2ae0"&gt;Debug Python Scripts Like a Pro&lt;/a&gt;&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>A11y tips: the right element</title>
      <author>Carlos Espada</author>
      <pubDate>Tue, 14 Dec 2021 07:41:51 +0000</pubDate>
      <link>https://dev.to/carlosespada/a11y-tips-the-right-element-10ap</link>
      <guid>https://dev.to/carlosespada/a11y-tips-the-right-element-10ap</guid>
      <description>&lt;p&gt;The first step to achieve an accessible website is to &lt;strong&gt;use the right HTML element&lt;/strong&gt; at all times. Try to write a code that reflects the structure of your information, do not stay in a simple set of &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; which you will later style with CSS.&lt;/p&gt;

&lt;p&gt;For example, if you want to make a button, &lt;strong&gt;don't simulate its behavior&lt;/strong&gt; with a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; that you fill in with CSS and JS to achieve what the browser already gives you natively. The browser can already do a lot of your work if you use &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To find out how accessible each element of HTML5 is, you can use &lt;a href="https://www.html5accessibility.com/"&gt;HTML5 Accessibility&lt;/a&gt;, which is up-to-date and offers very reliable information.&lt;/p&gt;

&lt;p&gt;If the HTML that you deliver to the browser has a meaning, that will &lt;strong&gt;help any type of device to understand it and offer the user the best experience&lt;/strong&gt;, and that includes a computer, a mobile phone, a tablet, a screen reader, a voice recognition software, a watch ...&lt;/p&gt;

&lt;p&gt;Remember, &lt;strong&gt;accessibility starts with semantics&lt;/strong&gt;.&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>tips</category>
      <category>html</category>
    </item>
    <item>
      <title>Pure Function in JS</title>
      <author>Ustariz Enzo</author>
      <pubDate>Tue, 14 Dec 2021 07:23:42 +0000</pubDate>
      <link>https://dev.to/ziratsu/pure-function-in-js-3heb</link>
      <guid>https://dev.to/ziratsu/pure-function-in-js-3heb</guid>
      <description>&lt;p&gt;Hey &lt;strong&gt;fellow creators&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let's learn what a &lt;em&gt;pure function&lt;/em&gt; does in less than a minute!&lt;/p&gt;

&lt;p&gt;If you prefer to watch the video &lt;strong&gt;version&lt;/strong&gt;, it's right here :&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/h9aw0LqcHrY"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-whats-a-pure-function"&gt;
  &lt;/a&gt;
  1. What's a pure function?
&lt;/h2&gt;

&lt;p&gt;A pure function is a function that returns the same result every time we use the same arguments. They also have no side effects, meaning that it doesn't change anything outside of the function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-lets-take-a-look-at-a-function-is-it-a-pure-function-or-not"&gt;
  &lt;/a&gt;
  2. Let's take a look at a function... is it a pure function or not?
&lt;/h2&gt;

&lt;p&gt;The following function will change something outside of the function (the variable a) and it will not return the same result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;num1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 15 &lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 20&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 25&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#3-lets-take-a-look-at-a-pure-function-then"&gt;
  &lt;/a&gt;
  3. Let's take a look at a pure function then.
&lt;/h2&gt;

&lt;p&gt;Let's create the following function that will not change anything outside of the function and will return the same result:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;add&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// 10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you know what a &lt;em&gt;pure function&lt;/em&gt; is? Well done!&lt;/p&gt;

&lt;p&gt;Come and take a look at my &lt;strong&gt;Youtube channel&lt;/strong&gt;: &lt;a href="https://www.youtube.com/c/Learntocreate/videos"&gt;https://www.youtube.com/c/Learntocreate/videos&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See you soon!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enzo. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>It's Prisma Time - Introduction</title>
      <author>Luca Del Puppo</author>
      <pubDate>Tue, 14 Dec 2021 07:08:16 +0000</pubDate>
      <link>https://dev.to/this-is-learning/its-prisma-time-introduction-3a3h</link>
      <guid>https://dev.to/this-is-learning/its-prisma-time-introduction-3a3h</guid>
      <description>&lt;p&gt;Hi Folks 👋 and welcome back,&lt;br&gt;
Today I want to start a new series about &lt;a href="https://www.prisma.io/"&gt;Prisma&lt;/a&gt;.&lt;br&gt;
But before starting I want to explain the reason why of this series.&lt;br&gt;
In the last months I spent more time using &lt;a href="https://it.wikipedia.org/wiki/Object-relational_mapping"&gt;ORM&lt;/a&gt; in the node eco-system. Most of the time I used &lt;a href="https://typeorm.io/"&gt;typeorm&lt;/a&gt;. In my opinion Typeorm is a great ORM but creates entities and managing them sometimes it's not so easy, especially if you love to use &lt;a href="https://www.typescriptlang.org/"&gt;typescript&lt;/a&gt; without classes. But one day in my twitter's wall appeared this &lt;a href="https://twitter.com/matteocollina/status/1384900740754386946?s=20"&gt;tweet&lt;/a&gt; of &lt;a href="https://twitter.com/matteocollina"&gt;@Matteo Collina&lt;/a&gt; that spoke about &lt;a href="https://www.prisma.io/"&gt;prisma&lt;/a&gt;, so I decided to spend some of my free time to understand better this tool.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--g7Sy08M_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvjt0ksn1c5vcgs159ap.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--g7Sy08M_--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/pvjt0ksn1c5vcgs159ap.png" alt="The Collina's Tweet" width="602" height="345"&gt;&lt;/a&gt;&lt;br&gt;
As you can imagine, it left me good impressions so I decide to share them with you using this series.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-in-this-series"&gt;
  &lt;/a&gt;
  What's in this series?
&lt;/h2&gt;

&lt;p&gt;In this series, I'm going to show you how to set up a project with Prisma and how it can work in your codebase. I'm going to try to create shot articles with only one goal for each article, to permit you to understand better the goal and don't switch context during the reading.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#whats-not-in-this-series"&gt;
  &lt;/a&gt;
  What's not in this series?
&lt;/h2&gt;

&lt;p&gt;In this series I am not going to show you how to create a repository to split the data access layer with the business logic layer or how to structure your project to have a clean code, that's not the goal of the series, and I know that already exist many books and articles that speak about it.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A little preamble: I don't love so much using ORM in my code, but sometimes they help the team to increase its velocity. Despite everything, it's important to check the queries generated by the ORM because sometimes they aren't optimized. In these cases, it's a good solution writing your query in order to improve the velocity of its execution.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let's start with an introduction of &lt;strong&gt;Prisma&lt;/strong&gt;.&lt;br&gt;
In this article I picked some infos about Prisma from its site. This helps you to have an idea of what it is and which are they goals.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Prisma is an open source next-generation ORM. It consists of the following parts:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client"&gt;Prisma Client&lt;/a&gt;: Auto-generated and type-safe query builder for Node.js &amp;amp; TypeScript&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.prisma.io/docs/concepts/components/prisma-migrate"&gt;Prisma Migrate&lt;/a&gt;: Migration system&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://www.prisma.io/docs/concepts/components/prisma-studio"&gt;Prisma Studio&lt;/a&gt;: GUI to view and edit data in your database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;It's important to remember that if you prefer using javascript without typescript, you can choose this way without any problem because Prisma guarantees both solutions.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#prisma-goals"&gt;
  &lt;/a&gt;
  Prisma Goals
&lt;/h2&gt;

&lt;p&gt;Prisma's main goal is to make application developers more productive when working with databases:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Thinking in objects&lt;/strong&gt; instead of mapping relational data&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Queries not classes&lt;/strong&gt; to avoid complex model objects&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Single source of truth&lt;/strong&gt; for database and application models&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Healthy constraints&lt;/strong&gt; that prevent common pitfalls and antipatterns&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;An abstraction that makes the right thing easy&lt;/strong&gt; ("pit of success")&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Type-safe database queries&lt;/strong&gt; that can be validated at compile time&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Less boilerplate&lt;/strong&gt; so developers can focus on the important parts of their app&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Auto-completion in code editors&lt;/strong&gt; instead of needing to look up documentation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#prisma-connectors"&gt;
  &lt;/a&gt;
  Prisma Connectors
&lt;/h2&gt;

&lt;p&gt;Prima allow us to connect to the major SQL and NOSQL services.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PostgreSQL&lt;/li&gt;
&lt;li&gt;MySql&lt;/li&gt;
&lt;li&gt;SQLite&lt;/li&gt;
&lt;li&gt;MongoDB&lt;/li&gt;
&lt;li&gt;Microsoft SQL Server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think that as an introduction of the tool and to give you an idea about it, it may be all. If you are curious and you want to go deep inside about Prisma, in its &lt;a href="https://www.prisma.io/docs/concepts/overview"&gt;documentation&lt;/a&gt; you can find more info.&lt;/p&gt;

&lt;p&gt;I think for today it's all, but before ending this article, I wish to thank Prisma for the cover of this series, the original image is hosted in the &lt;a href="https://www.facebook.com/prisma.io/"&gt;Prisma facebook account&lt;/a&gt; at this &lt;a href="https://www.facebook.com/prisma.io/photos/a.1593544297636616/2378801429110895/?type=1&amp;amp;theater"&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So see you in the next article where we'll start to setup our project.&lt;br&gt;
Bye bye 👋&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>typescript</category>
      <category>database</category>
      <category>orm</category>
    </item>
    <item>
      <title>Why Instagram Is Essential For Your Business</title>
      <author>Instant Viral</author>
      <pubDate>Tue, 14 Dec 2021 07:01:10 +0000</pubDate>
      <link>https://dev.to/instantviral/why-instagram-is-essential-for-your-business-44om</link>
      <guid>https://dev.to/instantviral/why-instagram-is-essential-for-your-business-44om</guid>
      <description>&lt;p&gt;Everybody uses social media and knows the importance of it. We all know how Instagram is proving to be one of the effective ways to earn money. Instagram has become a very great tool to engage customers and earn money through it. However, when it comes to Instagram,...Furthermore, last but not the least, you can &lt;a href="https://instantviral.uk/5-tips-to-grow-your-brand-using-instagram-influencer-marketing/"&gt;boost your sales by using Instagram ads&lt;/a&gt;. &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>beginners</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>SWOT Analizi Nasıl Yapılır?</title>
      <author>Turan Kılıç</author>
      <pubDate>Tue, 14 Dec 2021 06:49:52 +0000</pubDate>
      <link>https://dev.to/toour/swot-analizi-nasil-yapilir-4ck2</link>
      <guid>https://dev.to/toour/swot-analizi-nasil-yapilir-4ck2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#swot-analizi-nedir"&gt;
  &lt;/a&gt;
  SWOT Analizi Nedir?
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#swot-strength-weakness-oppurtunity-threat"&gt;
  &lt;/a&gt;
  &lt;strong&gt;SWOT (Strength Weakness Oppurtunity Threat)&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;SWOT analizi, bir projenin, bireyin veya işletmenin genel olarak 4 ana başlıkta analiz edilmesidir. Bu analiz esnasında güçlü yönler, zayıf yönler, fırsatlar ve tehditler ortaya çıkarılır. Bu analiz bir tablo şeklinde düşünülebilir.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkiK8sp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqrm7sx88valytljfswd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZkiK8sp9--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/yqrm7sx88valytljfswd.png" alt="SWOT Analizi Nedir" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#swot-analizi-ne-i%CC%87%C5%9Fe-yarar"&gt;
  &lt;/a&gt;
  SWOT Analizi Ne İşe Yarar?
&lt;/h2&gt;

&lt;p&gt;SWOT analizi temel olarak, karar alma aşamasında güçlü-zayıf yönleri, avantajlı-dezavantajlı noktaları hesaba katmaktır.&lt;/p&gt;

&lt;p&gt;Belirlenen özelliklere göre verilmesi gereken kararın en doğru karar olmasını sağlar. &lt;/p&gt;

&lt;p&gt;Böylelikle güçlü yönler ortaya çıkarılırken, zayıf yönler giderilebilir. Ayrıca pazardaki fırsatları değerlendirirken ortada bulunan tehditlerin önüne geçilebilmesi fırsatını da sunar.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fu4oc7tx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok0r2tvgy0ufd3ocetu3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fu4oc7tx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ok0r2tvgy0ufd3ocetu3.png" alt="SWOT Analizi Örneği" width="768" height="552"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#swot-analizi-nas%C4%B1l-uygulan%C4%B1r"&gt;
  &lt;/a&gt;
  SWOT Analizi Nasıl Uygulanır?
&lt;/h2&gt;

&lt;p&gt;Öncelikle her bir başlık kendi içerisinde sorgulanmalıdır. Yani güçlü yönler, zayıf yönler kendi alanında sorgulanmalıdır. Tek tek güçlü ve zayıf yönler belirlenmeli, buna göre fırsatlar ve tehditler belirlenmelidir.&lt;/p&gt;

&lt;p&gt;Gerekli belirleme işlemlerini gerçekleştirirken dürüst ve objektif olunmalıdır. Aksi taktirde yapılan analiz sağlam olmayacaktır.&lt;/p&gt;

&lt;p&gt;Analiz için her farklı alanın sorgusu aşağıdaki farklı örnek sorular ile yapılabilir. Bu sorular örnek niteliği taşımaktadır. Yani sorular çoğaltılabilir, değiştirilebilir veya duruma uygun hale getirilebilir.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--lORNbTt5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ml89nbper807d0gdkkmr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--lORNbTt5--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ml89nbper807d0gdkkmr.png" alt="Güçlü - Zayıf" width="300" height="225"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Güçlü (Strength) Yönlerin Belirlenmesi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Güçlü yönler belirlenirken aşağıdaki sorular kullanılabilir:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Bu ürün başka ürünlerin sahip olmadığı ne tür avantajlara sahip?&lt;/li&gt;
&lt;li&gt;Bu ürünün kullandığı fakat diğer ürünlerin kullanmadığı şeyler neler?&lt;/li&gt;
&lt;li&gt;Bu ürünü diğerlerinden farklı kılan şey nedir?&lt;/li&gt;
&lt;li&gt;Ürünün kullanmış olduğu kaynak maliyeti diğer ürünlerin kaynak maliyetinden düşük mü?&lt;/li&gt;
&lt;li&gt;Belirli bir iş için neden bu ürünü kullanmalıyım?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Zayıf (Weak) Yönlerin Belirlenmesi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Zayıf yönler belirlenirken aşağıdaki sorular kullanılabilir:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Bu ürün diğer ürünlere göre ne tür dezavantajlara sahip?&lt;/li&gt;
&lt;li&gt;Diğer ürünlerin kullandığı fakat bu ürünün kullanmadığı şeyler neler?&lt;/li&gt;
&lt;li&gt;Bu ürünü diğerlerine göre eksiklikleri neler?&lt;/li&gt;
&lt;li&gt;Ürünün kullandığı kaynak diğer ürünlerin kaynak tüketiminde fazla mı? Fazla ise sebebi nedir?&lt;/li&gt;
&lt;li&gt;Neden bu ürün diğer ürünlere göre daha az seçiliyor/tercih ediliyor.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AOwha77x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mj96u6ralajxcktey77h.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AOwha77x--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mj96u6ralajxcktey77h.png" alt="Fırsat - Tehdit" width="690" height="300"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fırsatların (Oppurtunity) Belirlenmesi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fırsatlar belirlenirken aşağıdaki sorular kullanılabilir:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Kullanılacak ürün sektöre uygun ve gelişime açık mı?&lt;/li&gt;
&lt;li&gt;Ürün, kendi dalında işleri kolaylaştırıyor mu?&lt;/li&gt;
&lt;li&gt;Diğer ürünlerin yapamadıkları bu üründe nasıl avantaja çevrilebilir?&lt;/li&gt;
&lt;li&gt;Diğer ürünlerin yapamadıkları şeyler / sahip olmadıkları özellikler neler?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Tehditlerin (Threats) Belirlenmesi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tehditler belirlenirken aşağıdaki sorular kullanılabilir:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Bu ürünün çalışmasını engelleyecek en büyük etken nedir?&lt;/li&gt;
&lt;li&gt;Bu ürün için gerekli kaynak ve insan gücü bulunduruluyor mu?&lt;/li&gt;
&lt;li&gt;Mevcut ve potansiyel ürünler, aynı soruna farklı çözüm arayışı içerisinde mi? Daha optimize yolları bulunuyor mu?&lt;/li&gt;
&lt;li&gt;Ürünün kullanım ömrü kısa mı? Ürünün kullanılacağı ortam değişken mi? &lt;/li&gt;
&lt;li&gt;Ürün ortaya koyulduğunda ne gibi problemler beklenmektedir?&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#swot-analizinin-sonucu-nas%C4%B1l-de%C4%9Ferlendirilir"&gt;
  &lt;/a&gt;
  SWOT Analizinin Sonucu Nasıl Değerlendirilir?
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Te56-ta4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyl591wf3bzt1j9haamh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Te56-ta4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wyl591wf3bzt1j9haamh.png" alt="Değerlendirme" width="445" height="331"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gerekli sorular sayesinde oluşturulmuş alanların genel hali ortaya çıkartılmış olur (tablo-resim). Bu neticede değerlendirme aşamasında kullanılacak genel tablo içerisindeki alanlar üzerine aşağıdaki sorular sorularak değerlendirme yapılabilir.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Güçlü yönler nasıl kullanılabilir?&lt;/li&gt;
&lt;li&gt;Zayıf yönler nasıl giderilebilir?&lt;/li&gt;
&lt;li&gt;Fırsatlar en iyi şekilde nasıl değerlendirilebilir?&lt;/li&gt;
&lt;li&gt;Tehditler nasıl ortadan kaldırılabilir/önlenebilir?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Böylelikle SWOT analizi gerçekleştirilmiş olur. Artık çıkarılacak ürünün, yapılacak projenin veya bulunan bireyin-firmanın güçlü-zayıf yönleri ve karşılaşabileceği fırsat-tehditler ortaya çıkarılmış olur.&lt;/p&gt;

&lt;p&gt;Güçlü yönlere odaklanılmalı, zayıf yönler giderilmeli-geliştirilmeli, tehditler ortadan kaldırılmalı veya azaltılmalı, uygun fırsatlar değerlendirilmeli ve avantaja dönüştürülmelidir.&lt;/p&gt;

</description>
      <category>swot</category>
      <category>analiz</category>
    </item>
    <item>
      <title>Top 5 Most Trusted Laravel Development Companies in 2021</title>
      <author>Kuldeep Singh</author>
      <pubDate>Tue, 14 Dec 2021 06:49:01 +0000</pubDate>
      <link>https://dev.to/kuldeepthakur/top-5-most-trusted-laravel-development-companies-in-2021-1bib</link>
      <guid>https://dev.to/kuldeepthakur/top-5-most-trusted-laravel-development-companies-in-2021-1bib</guid>
      <description>&lt;p&gt;Let’s have a look at the top 5 Most Trusted Laravel Development Companies in 2021 that provide exceptional Laravel development services. &lt;/p&gt;

&lt;p&gt;In this technical environment, many technologies come forward to help in providing great solutions, and PHP and its framework are one out of them all.&lt;/p&gt;

&lt;p&gt;PHP has various frameworks such as Symfony, CodeIgniter, Laravel, Drupal, etc and &lt;a href="https://bagisto.com/en/why-laravel-framework-is-the-best-choice-for-web-development/"&gt;Laravel is popular&lt;/a&gt; among all. &lt;/p&gt;

&lt;p&gt;If you need to develop a complete Laravel based application, it is better to &lt;a href="https://bagisto.com/en/"&gt;hire a Laravel Development Company&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As a reader and user, it is up to you to hire a company that would fulfill your requirements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Cuttlesoft&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;CutteleSoft is situated in Denver, CO. It is known as a technology-agnostic company.&lt;/p&gt;

&lt;p&gt;They’re able to serve a &lt;a href="https://bagisto.com/en/customer-group-pricing-in-bagisto/"&gt;broader range of clients&lt;/a&gt; and be prepared for evolving needs. The team at CuttleSoft loves to listen as polyglots.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Their core values include –&lt;/strong&gt;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Empathy

Tenacity

Mastery

Community

Diversity
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;Undoubtedly the team has the right experience and expertise in Laravel and they’re always up for &lt;a href="https://webkul.com/blog/benefits-of-laravel-development-services-for-small-business/"&gt;bringing new ideas&lt;/a&gt; for their clients.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Perpetual&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The company is located in New York and is established in 2013, since then they’re providing great solutions for the business and some of their clients are- Elle, GLG, Unpakt, loom, etc.&lt;/p&gt;

&lt;p&gt;They help to build the right product not just build the product right.&lt;/p&gt;

&lt;p&gt;Perpetual is a &lt;a href="https://bagisto.com/en/5-crucial-tactics-to-increase-ecommerce-audience-engagement/"&gt;customer-centric company&lt;/a&gt; that helps them develop solutions for their clients, keeping the end-user in mind.&lt;/p&gt;

&lt;p&gt;They provide the development of a full lifecycle from early-stage to last deployment and testing.&lt;/p&gt;

&lt;p&gt;They work in an innovation lab in Chelsea, Manhattan.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Webkul&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://webkul.com"&gt;Webkul&lt;/a&gt; is a leading service provider helping others in digital commerce, ERP, and CRM solutions. On the other hand, they’re serving 80,000 clients worldwide in complex operations and have grown their businesses.&lt;/p&gt;

&lt;p&gt;They have their own open-source project Bagisto. It offers you a wide range of functionality and lets you have total control of your e-commerce store.&lt;/p&gt;

&lt;p&gt;It is built on technology Laravel and vue.js. They have popular extensions for it such as MultiTenant, Marketplace, PWA, etc.&lt;br&gt;
bagisto-1&lt;/p&gt;

&lt;p&gt;Webkul constantly provided the capabilities and the commitment towards the quality of the work.&lt;/p&gt;

&lt;p&gt;As a result that, Industry leaders are constantly appreciating them which in turn proves their capabilities and commitment to quality and innovation.&lt;/p&gt;

&lt;p&gt;Webkul provides services wonderful services such as Web Development, Mobile Development, PWA and AMP Development, Point of Sale Development, Augmented Reality.&lt;/p&gt;

&lt;p&gt;Also being a top Laravel development company, Webkul offers Laravel development services that include custom development, customization, CRM, eCommerce, marketplace, and API integrations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Enkonix&lt;/strong&gt;&lt;br&gt;
Similarly, Enkonix is a development company having 4+ years of experience and its main proficiency is Laravel.&lt;/p&gt;

&lt;p&gt;In spite of its business size, the company always stands out and is helping in custom business solutions to brands and enterprises.&lt;/p&gt;

&lt;p&gt;They not only offer high-end custom app development but also deliver highly scalable, interoperable systems that fit your business.&lt;/p&gt;

&lt;p&gt;Therefore “App constructor” is a cost and time-effective solution for creating new applications by reusing best practices fit for your requirements.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Zealous System&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;These people are the team of believers, thinkers, and creators. Therefore, they could be the best choice for anyone who wants to develop some solution on Laravel.&lt;/p&gt;

&lt;p&gt;Their vision is to gain the expertise on &lt;a href="https://webkul.com/blog/hyperlocal-delivery-app/"&gt;topmost technologies&lt;/a&gt; and provide services then make them available to the public.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Their core values include-&lt;/strong&gt;&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Logical and Structured

Innovation is evolution

Invest in thought
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;p&gt;They provide services for various sectors not only Enterprise Mobility, Product Engineering, QA but also for ERP Solutions, etc.&lt;/p&gt;

&lt;p&gt;They believe in the customer-centric approach and deliver custom-tailored technology solutions that align with our client’s expectations, timeline, and budget.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;&lt;br&gt;
It’s all about the top 5 Most Trusted Laravel Development Company in 2021. Also, for any further queries or doubts reach out to us at &lt;a href="mailto:support@webkul.com"&gt;support@webkul.com&lt;/a&gt;. Moreover, you can raise a ticket at our HelpDesk System.&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>webdev</category>
      <category>devops</category>
      <category>laravel</category>
    </item>
    <item>
      <title>Day 29 of #100daysofcode: Advent of Code!</title>
      <author>Ryan Whelchel</author>
      <pubDate>Tue, 14 Dec 2021 06:42:35 +0000</pubDate>
      <link>https://dev.to/rydwhelchel/day-29-of-100daysofcode-advent-of-code-3g2b</link>
      <guid>https://dev.to/rydwhelchel/day-29-of-100daysofcode-advent-of-code-3g2b</guid>
      <description>&lt;p&gt;Hey again everybody!&lt;/p&gt;

&lt;p&gt;I didn't have any great time to set aside for digging deep on Redux, but I did make a &lt;em&gt;ton&lt;/em&gt; of progress on the FreeCodeCamp certification for JS. I'm really aiming to finish that certification before January.&lt;/p&gt;

&lt;p&gt;I also found something called &lt;a href="https://adventofcode.com/"&gt;Advent of Code!&lt;/a&gt; For those who don't know, Advent of Code is a fun, holiday themed coding challenge. Every day, tasks are released, similar to the 25 days of Christmas! Since I am participating in the #100daysofcode, it seemed fitting to also participate in the 25 days of coding-style challenge!&lt;br&gt;
(it's also more fun and interesting than Leetcode grinding)&lt;/p&gt;

&lt;p&gt;That said, Leetcode grinding is still in full effect, I'm pretty bitter about how weak I am in tree and graph problems, so I am going to continue grinding on those full force.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#today"&gt;
  &lt;/a&gt;
  Today
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;LeetCode Tree problems!&lt;/li&gt;
&lt;li&gt;Finished Debugging and Basic Data Structures sections in FreeCodeCamp, started Basic Algorithm Structures&lt;/li&gt;
&lt;li&gt;Advent Code days 1 and 2! If I do 2 days worth of challenges per day, I should catch up by Christmas.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#tomorrow"&gt;
  &lt;/a&gt;
  Tomorrow
&lt;/h2&gt;

&lt;p&gt;I have two different plans for tomorrow. Either I dive a bit deeper on Redux or I start working on my project. I'm leaning towards diving deep on Redux, but I need to get my project off the ground to get a little motivation going.&lt;/p&gt;

&lt;p&gt;If I learn more about Redux tomorrow, I will work on the following things tomorrow.&lt;br&gt;
1) Learn more about Redux at a high level&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Either by digging deeper on documentation or by finding an open source project which uses Redux fairly extensively
2) Try to recreate some of the more complicated state situations I ran into in a previous project. Depending on how this goes, I may share some code snippets.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#upcoming"&gt;
  &lt;/a&gt;
  Upcoming
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Continued Leetcode practice and FreeCodeCamp progress&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;CONTINUED&lt;/em&gt; Sandboxing with Redux&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Begin the Study Aid app! (soonTM)&lt;/li&gt;
&lt;li&gt;Might return to a little Functional Programming discussion&lt;/li&gt;
&lt;li&gt;Later in the challenge: AWS Deployment, AWS Certification, and Using Docker!?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#resources"&gt;
  &lt;/a&gt;
  Resources
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/"&gt;JS Course - FreeCodeCamp&lt;/a&gt;&lt;br&gt;
&lt;a href="https://redux.js.org/tutorials/essentials/part-1-overview-concepts"&gt;Redux Essentials&lt;/a&gt;&lt;br&gt;
&lt;a href="https://redux.js.org/tutorials/fundamentals/part-1-overview"&gt;Redux Fundamentals&lt;/a&gt;&lt;br&gt;
&lt;a href="https://redux.js.org/faq"&gt;Redux FAQ&lt;/a&gt;&lt;br&gt;
&lt;a href="https://adventofcode.com/"&gt;Advent of Code&lt;/a&gt;&lt;/p&gt;

</description>
      <category>100daysofcode</category>
      <category>react</category>
      <category>python</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Docker Containerization - Part 1</title>
      <author>jitendra Thakur</author>
      <pubDate>Tue, 14 Dec 2021 06:42:21 +0000</pubDate>
      <link>https://dev.to/jitendra/docker-containerization-part-1-4gn2</link>
      <guid>https://dev.to/jitendra/docker-containerization-part-1-4gn2</guid>
      <description>&lt;h2&gt;
  &lt;a href="#overview"&gt;
  &lt;/a&gt;
  Overview
&lt;/h2&gt;

&lt;p&gt;Here in this post you will get understanding of Docker and how to deploy applications developed in different languages (Java and Python), before going a head please make sure you have hands-on experience on Java and Python, in this post just we are going to deploy the applications those are running in your local.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;Design Patterns:&lt;/u&gt;&lt;br&gt;
&lt;strong&gt;The monolithic architecture&lt;/strong&gt; is considered to be a traditional way of building the applications. A monolithic application is self-contained, and independent from other computing applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Microservice architecture&lt;/strong&gt; It’s an architectural style, microservice breakdown an application in collection of smaller independent unites that are :-&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Highly maintainable and easy to test&lt;/li&gt;
&lt;li&gt;Loosely coupled&lt;/li&gt;
&lt;li&gt;A small team can manage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This architecture provide rapid, frequent and reliable delivery solution of complex and large applications.&lt;/p&gt;

&lt;p&gt;&lt;u&gt;What are containers?&lt;/u&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Standard:&lt;/strong&gt; Containers are portable anywhere and it fits to industry standards by docker. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Lightweight:&lt;/strong&gt; It share the machines Operating System kernel (because of this it doesn't require an OS per application), it reduce other costs like licensing and servers cost.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Secure:&lt;/strong&gt; Docker has the strongest default isolation capabilities and this is the reason applications are safer in containers.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#docker-feature"&gt;
  &lt;/a&gt;
  Docker Feature
&lt;/h2&gt;

&lt;p&gt;Docker is a platform for developers and sysadmins to build, run, and share applications with containers. The use of containers to deploy applications is called containerization. Containers are not new, but their use for easily deploying applications is.&lt;/p&gt;

&lt;p&gt;Why containerization is getting popular because container is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Flexible:&lt;/strong&gt; Even the most complex applications can be containerized.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Lightweight:&lt;/strong&gt; Containers leverage and share the host kernel, making them much more efficient in terms of system resources than virtual machines.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Portable:&lt;/strong&gt; You can build locally, deploy to the cloud, and run anywhere.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Loosely coupled:&lt;/strong&gt; Containers are highly self sufficient and encapsulated, allowing you to replace or upgrade one without disrupting others.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Scalable:&lt;/strong&gt; You can increase and automatically distribute container replicas across a datacenter.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Secure:&lt;/strong&gt; Containers apply aggressive constraints and isolations to processes without any configuration required on the part of the user. &lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#docker-engine"&gt;
  &lt;/a&gt;
  Docker Engine
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--e8yGO3p---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mqlo9sbhqn1tp9hq52hv.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--e8yGO3p---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mqlo9sbhqn1tp9hq52hv.JPG" alt="One" width="471" height="397"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Docker Daemon –&lt;/strong&gt; Persistent background process that manage image, network, storage volumes other processes. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;REST API –&lt;/strong&gt; This is the API used by application to interact with docker daemon.
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Docker CLI (Client) –&lt;/strong&gt; Command line interface to interact with docker daemon.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#docker-architecture-for-the-applications"&gt;
  &lt;/a&gt;
  Docker Architecture For the Applications
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UZTJQwnW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4oijh4oz6n7h9vx932u4.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UZTJQwnW--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4oijh4oz6n7h9vx932u4.JPG" alt="Two" width="880" height="372"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#docker-components"&gt;
  &lt;/a&gt;
  Docker Components
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3LvFnxh2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/44zzsxsbloe1guc1jjep.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3LvFnxh2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/44zzsxsbloe1guc1jjep.png" alt="Three" width="802" height="452"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#container-order-amp-dependencies-in-docker"&gt;
  &lt;/a&gt;
  Container Order &amp;amp; Dependencies in Docker
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Se1q2LfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i1pv4la46u70uqg53uak.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Se1q2LfS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/i1pv4la46u70uqg53uak.png" alt="Four" width="527" height="368"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Docker Compose&lt;/strong&gt; &lt;br&gt;
Using above sequence we can control the order of service startup and shutdown the &lt;strong&gt;'depends on'&lt;/strong&gt; option. Compose always start and stop containers in the order of dependent, where dependencies are determined by&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ depends_on
$ links
$ volumes_from
$ network_mode

services....
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;I will cover &lt;strong&gt;docker-compose&lt;/strong&gt; in next post along with few more containers (Active-MQ and PostgreSQL).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#docker-file-dockerfile"&gt;
  &lt;/a&gt;
  Docker File (Dockerfile)
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TCt-vvzM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3gwvy890cd4b6exu15w.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TCt-vvzM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y3gwvy890cd4b6exu15w.png" alt="Five" width="880" height="401"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dockerfile is a text document a user write all the commands that can run from command line to assemble an image.&lt;/li&gt;
&lt;li&gt;A user can compose multiple images to include system libraries, tools and other files to make it executable code.&lt;/li&gt;
&lt;li&gt;The advantage of dockerfile is - it can build images automatically by reading the instructions written inside and it reduce the extra effort of firing multiple commands on command line.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#deployment"&gt;
  &lt;/a&gt;
  Deployment
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Step 1: Pre-Deployment&lt;/strong&gt;&lt;br&gt;
Follow the below steps to complete pre-deployment process:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pull the code (developed in java spring MVC/boot) from git repository on server instance using
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ git clone &amp;lt;git-url-here&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;if in case your code is not on git repository, then copy and paste it on your server machine at your desired location.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go inside base project directory
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ cd &amp;lt;your-project-directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Run below command to package your java application
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; $ mvn clean install –DskipTests
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once installation and packaging process done successfully, lets understand the docker containerization in the next steps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 2: Java Application Containerization&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Create a Dockerfile and write code as given in below image, once completion save Dockerfile to your root folder of your application/project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j_7-WATd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxeeyn7y2x5paq8ij3wz.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j_7-WATd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/bxeeyn7y2x5paq8ij3wz.JPG" alt="Java Dockerfile" width="720" height="569"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Dockerfile detailed information&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Update docker file name as per application name: &lt;br&gt;
Dockerfile-{your-app-name-here}&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Docker images start with a base image, although a user can build one entirely from scratch, if desired. &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Docker runs the instructions in a Dockerfile in order. The first instruction must be FROM in order to specify the Base Image from which we are building.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;** Note :** &lt;em&gt;Do not run below command if you have any dependency enabled in properties file on any other application (container). In next Post we will cover container dependency using ‘Docker Compose’.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;To build an image
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker build -t &amp;lt;IMAGE_NAME&amp;gt;:&amp;lt;TAG&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To see the list of images:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker images ls -a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To create and run container:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run –p 80:8080 –name &amp;lt;DESIRED_CONTAINER NAME&amp;gt; &amp;lt;IMAGE_NAME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To see the current status of container:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ 'Run below command to list running containers'
$ docker ps
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ 'Run below command to list all containers'      
$ docker ps -a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 3: Python Application Containerization&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a file with the name of 'Dockerfile-python' and write code as given below in the file and save this file under the root folder of your project/application.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;This code will work with flask based application.&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1sSklQAj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5l6mn8n9fo7uycp0tn5d.JPG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1sSklQAj--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5l6mn8n9fo7uycp0tn5d.JPG" alt="Python Dockerfile" width="725" height="633"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Docker file detailed information&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Update docker file name as per application name: &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Dockerfile-{your-app-name-here}&lt;br&gt;
Docker images start with a base image, although a user can build one entirely from scratch, if desired. &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Docker runs the instructions in a &lt;strong&gt;Dockerfile&lt;/strong&gt; in order. The first instruction must be &lt;strong&gt;FROM&lt;/strong&gt; in order to specify the Base Image from which we are building.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;Do not run below command if you have any dependency enabled in properties file on any other application (container). In Part-II we will cover container dependency using ‘Docker Compose’.&lt;/em&gt; &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;base image&lt;/strong&gt; here we are using python 3.7.1 as base image for our python application.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;label&lt;/strong&gt; For each and every deployment user can provide new labels to differentiate the application information.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;env&lt;/strong&gt; set environment variables for application&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;requirments.txt&lt;/strong&gt; list all the required libraries into file, this file will be used during docker containerization process.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;expose&lt;/strong&gt; expose work as described in previous slides&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;cmd&lt;/strong&gt; cmd used to execute any command in docker container (Linux based)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Lets &lt;em&gt;Build&lt;/em&gt; and &lt;em&gt;Run&lt;/em&gt; Docker container for your python application:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;To build an image
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker build -t &amp;lt;IMAGE_NAME&amp;gt;:&amp;lt;TAG&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To see the list of images:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker images ls -a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To create and run container:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run –p 5000:5000 –name &amp;lt;DESIRED_CONTAINER NAME&amp;gt; &amp;lt;IMAGE_NAME&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To see the current status of container:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ 'Run below command to list running containers'
$ docker ps
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ 'Run below command to list all containers'      
$ docker ps -a
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>containerization</category>
      <category>docker</category>
      <category>dockerfile</category>
    </item>
  </channel>
</rss>
