<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>10 Awesome Github Repos Every Web Developer Should Must Use</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 08:04:44 +0000</pubDate>
      <link>https://dev.to/coderzzz/10-awesome-github-repos-every-web-developer-should-must-use-ho0</link>
      <guid>https://dev.to/coderzzz/10-awesome-github-repos-every-web-developer-should-must-use-ho0</guid>
      <description>&lt;p&gt;&lt;span&gt;Here I list 10 excellent JavaScript based GitHub resources that will help you to understand the language better and help you to write clean code. This list is based on my personal preference. &lt;/span&gt;&lt;/p&gt;
&lt;span&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://news.google.com/articles/CAIiEHRNZDbK-6L3wLhhd1mvgX8qGQgEKhAIACoHCAow7-ynCzDc978DMKOIlgc?hl=en-US&amp;amp;gl=US&amp;amp;ceid=US%3Aen"&gt;10 Awesome Github Repos Every Web Developer Should Know&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;

</description>
    </item>
    <item>
      <title>Top VSCODE Themes Ruling Whole World</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 08:03:48 +0000</pubDate>
      <link>https://dev.to/coderzzz/top-vscode-themes-ruling-whole-world-4bob</link>
      <guid>https://dev.to/coderzzz/top-vscode-themes-ruling-whole-world-4bob</guid>
      <description>&lt;p&gt;Looking for a new Visual Studio Code theme?&lt;/p&gt;
&lt;span&gt;Developers can be finicky about what themes round out their perfect code editor and IDE setups. Picking the right theme after getting the nuts-and-bolts functionality down pat can top off a customized coding environment. Luckily for Visual Studio Code users, there are some 5,000 options to choose from in the VS Code Marketplace. That's a lot, though, so we are kindly helping you make your decision by presenting the top theme extensions as measured by the number of installations. Here's a summary of the current extensions that have been installed more than 1 million times, of which there are six:&lt;/span&gt;&lt;br&gt;&lt;br&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/top-10-vs-code-themes/&amp;amp;ved=2ahUKEwimjZP13-vyAhUChuYKHRKkBtIQFnoECAYQAQ&amp;amp;usg=AOvVaw3o3mOOtWb6qQgnkASjEGXG"&gt;Top Vscode Themes&lt;/a&gt;&lt;/b&gt;

</description>
    </item>
    <item>
      <title>3 years of blogging - Here's how it all started!</title>
      <author>Gourav Khunger</author>
      <pubDate>Tue, 14 Sep 2021 07:56:42 +0000</pubDate>
      <link>https://dev.to/gouravkhunger/3-years-of-blogging-here-s-how-it-all-started-jcd</link>
      <guid>https://dev.to/gouravkhunger/3-years-of-blogging-here-s-how-it-all-started-jcd</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://genicsblog.com/3-years-of-blogging"&gt;Read this article on my blog&lt;/a&gt; for a better experience!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hello there!&lt;/p&gt;

&lt;p&gt;I am really excited to share my journey in technical writing and how I got into it! First, I am really thankful to &lt;a href="https://hashnode.com"&gt;hashnode&lt;/a&gt; for providing us with an amazing &lt;a href="https://hashnode.com/bootcamp"&gt;bootcamp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Yesterday was the first session of the Bootcamp hosted by &lt;a href="https://hashnode.com/@tanoaksam"&gt;Sam Sycamore&lt;/a&gt;, where &lt;a href="https://hashnode.com/@quincy"&gt;Quincy Larson&lt;/a&gt; and &lt;a href="https://hashnode.com/@didicodes"&gt;Edidiong Asikpo&lt;/a&gt; shared amazing tips on technical writing which really helped a lot!&lt;/p&gt;

&lt;p&gt;Here in this article, I am going to share my background in technical writing - from where it started where it is heading towards and what is my vision. I would also include some tips at the end for you which I learned by hit and trial, the hard way 😂.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flashback-2018"&gt;
  &lt;/a&gt;
  Flashback 2018
&lt;/h2&gt;

&lt;p&gt;I was in 8th grade back then, and I was trying to learn android app development from an amazing book by J. F. Dimarzio titled "&lt;a href="https://amzn.to/3A93YMM"&gt;Beginning Android Programming with Android Studio&lt;/a&gt;".&lt;/p&gt;

&lt;p&gt;&lt;a href="https://amzn.to/3A93YMM"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--X_HdviZ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631599770243/LwI6JWpNE.jpeg" alt="Beginning Android Development with Android Studio Book"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I had also learned basic web dev skills like HTML and CSS. Javascript, or broadly, web dev didn't appeal to me that much so I went to learn native app development. I didn't know about frameworks like Vue or React back then, so that was it.&lt;/p&gt;

&lt;p&gt;At that time, I found out various resources and learned a lot of things from other's blogs, but sometimes, though I could understand the concepts, it just happened that the article wasn't that well written or it was hard to understand all by reading, and some struggle was needed. In short, it wasn't that beginner-friendly.&lt;/p&gt;

&lt;p&gt;I would sometimes also want to document things I learn because teaching someone else makes your own concepts stronger, and that is more powerful than just reading and practicing.&lt;/p&gt;

&lt;p&gt;The above things were accompanied by my thoughts of having my own place on the internet where I could share things I love about, and have the world read them. And that's how I started with blogging.&lt;/p&gt;

&lt;p&gt;At first, I came to know about blogger- Google's service that allows you to make minimal blogs. It was actually a good start for beginners who wished to make a simple blog. &lt;em&gt;But&lt;/em&gt;, it turned out it was not a good fit to make a developer blog.&lt;/p&gt;

&lt;p&gt;From there, I turned to many platforms, from blogger to WordPress, from WordPress to medium and dev community, but none could give the freedom of owning your own content- and having all the SEO juice to your own domain. That's where hashnode came in and I quickly migrated and use it as my daily driver for blogging!&lt;/p&gt;




&lt;p&gt;If you wish to read more on my story of switching between different platforms and choosing hashnode at the end, do read this article: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://genicsblog.com/introductory-first-post"&gt;https://genicsblog.com/introductory-first-post&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;And yeah, it has been 3 years since I started blogging and I have learned a lot through the way! From making an article enjoyable for the readers to improving my English- and even making good friends in the community. I also feel blessed to have the opportunity to help others through my articles!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-motivation"&gt;
  &lt;/a&gt;
  My motivation
&lt;/h2&gt;

&lt;p&gt;Everyone needs some motivation to keep doing a thing, and if they love what they do, the motivation manifests from the passion for the work itself!&lt;/p&gt;

&lt;p&gt;It's similar in my case. I really enjoy programming and I can sit hours coding an app. I really love how what we code actually works in real life- designing the UI and embracing it.&lt;/p&gt;

&lt;p&gt;And this passion for programming motivates me to write about it on this blog. The comments and feedback from the community really help to keep up the spirit.&lt;/p&gt;

&lt;p&gt;Sometimes it's hard to keep writing because there are other things to consider, like schooling and studies, but I do write when I am bored from other work because it gives refreshment from the usual routine!&lt;/p&gt;

&lt;p&gt;There are other ways I keep myself motivated- by challenging myself for each article I write, aiming for at least x views per post, and then sharing it to different platforms, it just feels good even if I get 100 views on an article and I feel it was worth my time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#my-goals"&gt;
  &lt;/a&gt;
  My goals
&lt;/h2&gt;

&lt;p&gt;As far as this blog is concerned, I wish to take it up to 10k views a month, which is 10x to the current scenario. For that, I spend time on on-site and off-site SEO and my small efforts have started to make a difference.&lt;/p&gt;

&lt;p&gt;Here's an image from the Google search console about this blog's analytics for the past one and a half years.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--8-fAD4gx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631601870247/zyuBYbzn7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8-fAD4gx--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631601870247/zyuBYbzn7.png" alt="Genics Blog Analytics From Google Search Console Image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There used to be good traffic earlier because I wrote consistently when I was on WordPress, but then I had left blogging for some months, mostly because studies became dominant.&lt;/p&gt;

&lt;p&gt;But then I started again on hashnode, and I was happy to regain the impressions I generally used to get, all because of hashnode. &lt;/p&gt;

&lt;p&gt;Hashnode is really awesome platform because it allows you to post your content on your blog, but at the same time they circulate the article on their platform, so you'll always have a base audience ready! And since the content remains on your domain, you get all the SEO benefits :)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://hashnode.com/@gouravkhunger/joinme"&gt;Join hashnode now&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Also, on a side note, I am looking forward to learning some new technologies and write about them, so follow me on hashnode to stay updated with what I post.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#some-tips-for-new-writers"&gt;
  &lt;/a&gt;
  Some tips for new writers
&lt;/h2&gt;

&lt;p&gt;Now is the time to share some things I learned over time!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dont-fear-what-others-will-think-about-your-article"&gt;
  &lt;/a&gt;
  Don't fear what others will think about your article
&lt;/h3&gt;

&lt;p&gt;Many people face this! Even I used to be conscious about each word I wrote when I was new to blogging. But with different experiments, I found out the more informal you write a tutorial or any kind of article, the better it is perceived by people.&lt;/p&gt;

&lt;p&gt;It is hard to keep up with formal language- otherwise, what's the need for blogs, documentations would have been enough for the people to understand things 😂.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#avoid-slangs"&gt;
  &lt;/a&gt;
  Avoid slangs
&lt;/h3&gt;

&lt;p&gt;The point just discussed doesn't mean you should be using different internet slangs to make your article informal. That can actually put a bad impact.&lt;/p&gt;

&lt;p&gt;What I do is I speak what I am writing, just as if you are conversing with someone and explaining the tech you are writing about. That helps to write articles that are easy to understand and at the same time write articles that don't bore the reader.&lt;/p&gt;

&lt;p&gt;Here's another thing I usually do, and it was also shared by @&lt;a href="https://dev.to@didicodes"&gt;Edidiong Asikpo&lt;/a&gt; during the Bootcamp session yesterday:&lt;/p&gt;

&lt;p&gt;To improve your writing skills, you can try to write an article and read it as if you don't even know who has written it, that helps to point out parts of the article that are hard to understand and also fix any grammatical issues, speaking of which, I recommend you to use &lt;a href="https://grammarly.com"&gt;grammarly&lt;/a&gt; 😀&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#its-ok-to-make-mistakes"&gt;
  &lt;/a&gt;
  It's ok to make mistakes
&lt;/h3&gt;

&lt;p&gt;Mistakes are how you learn things. Nobody is born perfect =)&lt;/p&gt;

&lt;p&gt;It's ok if you can't write good words, or if your English fluency is a hurdle, just start going with the flow, and over time, you'll become better at the skill.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#focus-on-a-niche-that-you-are-passionate-about"&gt;
  &lt;/a&gt;
  Focus on a niche that you are passionate about
&lt;/h3&gt;

&lt;p&gt;It's hard to come up with article ideas if you start writing about tech that you don't enjoy. Find out what you like because that can help you stay consistent. Also, you yourself will enjoy the researching process when you wish to explore new things about the tech that you didn't know.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#keep-the-interaction-going"&gt;
  &lt;/a&gt;
  Keep the interaction going
&lt;/h3&gt;

&lt;p&gt;You should try to reply to each comment your post gets, because that invokes interaction and builds trust around your blog, and if your blog is an active community- people are likely to come back to read your articles again!&lt;/p&gt;

&lt;p&gt;You can make an email newsletter too- that helps to regain users. You know what? Hashnode blogs get an email newsletter feature completely free! What are you waiting for? &lt;a href="https://hashnode.com/@gouravkhunger/joinme"&gt;Join hashnode&lt;/a&gt; and start blogging in minutes!&lt;/p&gt;

&lt;p&gt;Here's one of my in-depth articles about some of the mistakes I had been making in blogging, which you should stop making right away!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://genicsblog.com/mistakes-that-beginners-do-in-blogging-dont-make-these-yourself"&gt;https://genicsblog.com/mistakes-that-beginners-do-in-blogging-dont-make-these-yourself&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-words"&gt;
  &lt;/a&gt;
  Final words
&lt;/h2&gt;

&lt;p&gt;I hope you enjoyed the article and took away something from it - thanks for reading so far! I would appreciate it if you could take 5 more minutes to write down your opinions and feedback :)&lt;/p&gt;

</description>
      <category>blogging</category>
      <category>tips</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Deploy Django Site on Qovery for free</title>
      <author>Rachit Khurana</author>
      <pubDate>Tue, 14 Sep 2021 07:29:48 +0000</pubDate>
      <link>https://dev.to/dilutewater/deploy-django-site-on-qovery-for-free-2gfk</link>
      <guid>https://dev.to/dilutewater/deploy-django-site-on-qovery-for-free-2gfk</guid>
      <description>&lt;p&gt;Coding a Django website is pretty simple, but deploying it online could be a tedious &amp;amp; a complicated task for beginners(including me). Hence here is a complete guide on how to host your Django site for free on &lt;a href="https://www.qovery.com/"&gt;Qovery&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is basically a guide on how to modify you Django application to make it work on Qovery. For guide on how to make the application &amp;amp; deploy on Qovery check out this guide :&lt;br&gt;
&lt;a href="https://hub.qovery.com/guides/tutorial/deploy-django-with-postgresql/"&gt;https://hub.qovery.com/guides/tutorial/deploy-django-with-postgresql/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I'm assuming you have already made your Django project and made a github/gitlab repository &amp;amp; it is working perfectly on your local machine. I'm also assuming that you have a Qovery account &amp;amp; have created an project as well as an environment for the same. (From github/gitlab repository)&lt;/p&gt;

&lt;p&gt;I will be taking my TriviaQuiz Django Site for reference.&lt;/p&gt;

&lt;p&gt;Here is my initial repository that was working perfectly on my local machine:&lt;br&gt;
&lt;a href="https://gitlab.com/rachitkhurana40/trivia-quiz-initial"&gt;https://gitlab.com/rachitkhurana40/trivia-quiz-initial&lt;/a&gt; &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#setting-up-the-webserver"&gt;
  &lt;/a&gt;
  Setting up the Webserver
&lt;/h2&gt;

&lt;p&gt;Qovery basically hosts your application through a docker container and need a webserver to run on. So we can use &lt;a href="https://pypi.org/project/gunicorn/"&gt;gunicorn&lt;/a&gt;. Its a pretty simple python webserver. &lt;br&gt;
You just need to install it using pip &amp;amp; add it to your requirements.txt file&lt;/p&gt;

&lt;p&gt;Django automatically generates a wsgi.py file that is required by gunicorn to run the server. &lt;br&gt;
Now the startup command will be&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gunicorn &amp;lt;yourprojectname&amp;gt;.wsgi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For mine it will be&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gunicorn triviaquiz.wsgi
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#making-dockerfile"&gt;
  &lt;/a&gt;
  Making Dockerfile
&lt;/h2&gt;

&lt;p&gt;Qovery hosts your application through a docker container. So the next thing we need to do is make a Dockerfile&lt;/p&gt;

&lt;p&gt;A Dockerfile is just a text document with all the commands required to build your application in a docker container. &lt;/p&gt;

&lt;p&gt;Don't worry you won't need to learn Docker just for hosting. &lt;/p&gt;

&lt;p&gt;You can you my Dockerfile for the same. most probably it will work with your Django Project too.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM python:3
WORKDIR /app
COPY . .
RUN pip install -r requirements.txt
RUN python manage.py makemigrations
RUN python manage.py migrate
EXPOSE 8000
CMD ["gunicorn","&amp;lt;yourprojectname&amp;gt;.wsgi","--bind","0.0.0.0:8000"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;For my project it is&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FROM python:3
WORKDIR /app
COPY . .
RUN pip install -r requirements.txt
RUN python manage.py makemigrations
RUN python manage.py migrate
EXPOSE 8000
CMD ["gunicorn","triviaquiz.wsgi","--bind","0.0.0.0:8000"]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Dockerfile is doesn't have an extension&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#static-files"&gt;
  &lt;/a&gt;
  Static Files
&lt;/h2&gt;

&lt;p&gt;Serving static files for the website is important. Otherwise most of your static assets (like css , js files) won't be shown on the site. &lt;/p&gt;

&lt;p&gt;For serving static files we will use &lt;a href="http://whitenoise.evans.io/en/stable/"&gt;whitenoise&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can install it using pip and also add it to your requirements.txt.&lt;/p&gt;

&lt;p&gt;After that you just need to add whitenoise (&lt;code&gt;whitenoise.middleware.WhiteNoiseMiddleware&lt;/code&gt;) to your django middleware in your project's settings.py file. &lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; Add the whitenoise middleware after Django’s SecurityMiddleware( &lt;code&gt;django.middleware.security.SecurityMiddleware&lt;/code&gt;)&lt;br&gt;
. For eg:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;MIDDLEWARE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.security.SecurityMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'whitenoise.middleware.WhiteNoiseMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.sessions.middleware.SessionMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.common.CommonMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.csrf.CsrfViewMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.auth.middleware.AuthenticationMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.contrib.messages.middleware.MessageMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'django.middleware.clickjacking.XFrameOptionsMiddleware'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Notice the whitenoise middleware in 2nd line. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#forevercacheable-files-and-compression-support-optional"&gt;
  &lt;/a&gt;
  Forever-cacheable files and compression support (Optional)
&lt;/h3&gt;

&lt;p&gt;Just add this to your settings.py:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;STATICFILES_STORAGE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;'whitenoise.storage.CompressedManifestStaticFilesStorage'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#database"&gt;
  &lt;/a&gt;
  Database
&lt;/h2&gt;

&lt;p&gt;The next thing we need to do is change the database from sqlite to Either postgres or Mysql on Qovery. &lt;/p&gt;

&lt;p&gt;You might be wondering why should we do that? The simple answer is the sqlite database resets everytime you deploy your site. &lt;br&gt;
Since sqlite is just a file, it gets overwritten everytime you make even a small change in your code &amp;amp; deploy it. &lt;/p&gt;

&lt;p&gt;Hence we will be using Postgres database from Qovery. &lt;/p&gt;

&lt;p&gt;First create a postgres database in Qovery&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xod4W5UO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8thmhm3mdxtewp00nkdt.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xod4W5UO--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8thmhm3mdxtewp00nkdt.png" alt="Make a postgres DB"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After creating, go to its actions and deploy it. &lt;br&gt;
After deploying it, I would recommend you to restart it , it gets optimised by doing that. &lt;/p&gt;

&lt;p&gt;Next we need to use this database in our Django app. &lt;br&gt;
For that we need to make some changes in settings.py file. &lt;/p&gt;

&lt;p&gt;By default Django uses sqlite database &amp;amp; has the following code in settings.py file&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'ENGINE'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'django.db.backends.sqlite3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;'NAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BASE_DIR&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="s"&gt;'db.sqlite3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But we will be using Postgres for our app. Hence will need to install &lt;a href="https://pypi.org/project/psycopg2/"&gt;psycopg2&lt;/a&gt; &amp;amp; also add it to the requirements.txt file.&lt;/p&gt;

&lt;p&gt;After that we need to change the database config in settings.py file to&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;'ENGINE'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'django.db.backends.postgresql_psycopg2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;'NAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;DBNAME&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'postgres'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;'USER'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;DG_LOGIN&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'postgres'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;'PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'PASS'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;'HOST'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;DB_HOST&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;host_url&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;'PORT'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'&amp;lt;DB_PORT&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5432&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;All the things with &amp;lt;&amp;gt; needs to be modified. &lt;br&gt;
 can be found in your qovery's Environment variables and would be something like &lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_DEFAULT_DATABASE_NAME&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Similarly  would be something like &lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_LOGIN&lt;/code&gt;&lt;br&gt;
 would be like &lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_HOST&lt;/code&gt;&lt;br&gt;
 would be like &lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_PORT&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For , go to your database application in Qovery and then click on Host. It will automatically copy the host url. &lt;/p&gt;

&lt;p&gt;After that you need to go to your database application in Qovery. &amp;amp; then click on show config. And copy your master password. &lt;br&gt;
Now come back to your application project on Qovery, and make a new environment variable.&lt;br&gt;
Its name should be &lt;code&gt;PASS&lt;/code&gt; and value should be the password that you copied. &lt;/p&gt;

&lt;p&gt;After replacing all &amp;lt;&amp;gt; with the values, you can push your git code and Qovery will start to deploy your Django applications. And then your website will be up in a few minutes. &lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#creating-superuser"&gt;
  &lt;/a&gt;
  Creating Superuser
&lt;/h2&gt;

&lt;p&gt;And next thing you might need to do is make a superuser. For that you should use your local machine instead. &lt;br&gt;
So you can navigate to your directory in which the project is. Otherwise clone your repository and navigate to that&lt;br&gt;
For that you need to create a &lt;code&gt;.env&lt;/code&gt; file. &lt;br&gt;
&lt;strong&gt;Note:&lt;/strong&gt; It should be &lt;code&gt;.env&lt;/code&gt; file and not &lt;code&gt;.env.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;.env&lt;/code&gt; file should contain the following:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_DEFAULT_DATABASE_NAME="postgres"
QOVERY_POSTGRESQL_XXXXXXXXX_LOGIN="postgres"
PASS="&amp;lt;PASS&amp;gt;"
QOVERY_POSTGRESQL_XXXXXXXXX_HOST="&amp;lt;host_url&amp;gt;"
QOVERY_POSTGRESQL_XXXXXXXXX_PORT=5432
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here you should replace &lt;code&gt;QOVERY_POSTGRESQL_XXXXXXXXX_DEFAULT_DATABASE_NAME&lt;/code&gt; etc with the variable names as described a little above, under Database. &lt;/p&gt;

&lt;p&gt;And also replace  with the database password and  with the host url. &lt;/p&gt;

&lt;p&gt;Now you can open this directory in your terminal/CMD . &lt;br&gt;
and then you can run the command&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;python manage.py createsuperuser
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;either in a virtual environment or directly (as per your preference).&lt;/p&gt;

&lt;p&gt;After that you can access everything from your Django's admin panel. &lt;/p&gt;

&lt;p&gt;Here is the final repository:&lt;br&gt;
&lt;a href="https://github.com/rachit1601/triviaquiz"&gt;https://github.com/rachit1601/triviaquiz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here is my site deployed on Qovery:&lt;br&gt;
&lt;a href="https://triviaquiz.redcrypt.xyz/"&gt;https://triviaquiz.redcrypt.xyz/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any other problems, you can write in the comments or you can contact me on Discord at &lt;code&gt;DiluteWater#3149&lt;/code&gt; &lt;/p&gt;

</description>
      <category>django</category>
      <category>python</category>
      <category>qovery</category>
    </item>
    <item>
      <title>Selecting low power networking — LoraWan,SigFox, Nb-IoT and LTE-M</title>
      <author>TheDailyTechTalk</author>
      <pubDate>Tue, 14 Sep 2021 07:06:32 +0000</pubDate>
      <link>https://dev.to/thedailytechtalk/selecting-low-power-networking-lorawan-sigfox-nb-iot-and-lte-m-2ld3</link>
      <guid>https://dev.to/thedailytechtalk/selecting-low-power-networking-lorawan-sigfox-nb-iot-and-lte-m-2ld3</guid>
      <description>&lt;p&gt;&lt;em&gt;I recently started a new blog &lt;a href="https://thedailytechtalk.com"&gt;TheDailyTechTalk&lt;/a&gt; where I create free content. If you liked this post and would like to read more posts about javascript please check it out 🎉🎉&lt;br&gt;
🥰&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you like what I write and want to support me, please follow me on &lt;a href="https://twitter.com/TheDailyTechTa1"&gt;Twitter&lt;/a&gt; to learn more about programming and similar topics ❤️❤️&lt;/strong&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#selecting-low-power-networking-contrasting-pros-and-cons-of-lorawansigfox-nbiot-and-ltem"&gt;
  &lt;/a&gt;
  Selecting low power networking contrasting pros and cons of LoraWan,SigFox, Nb-IoT and LTE-M
&lt;/h1&gt;

&lt;h2&gt;
  &lt;a href="#what-is-low-power-wide-area-network"&gt;
  &lt;/a&gt;
  What is "Low power wide area network"?
&lt;/h2&gt;

&lt;p&gt;LPWAN is a type of wireless telecommunication designed for long-range communications between IoT devices, sensors etc. Its main purpose is to send small amounts of data over a great distance for a long period of time, even years on a single battery*.* Coverage can range from 1 km up to over 40 km.&lt;/p&gt;

&lt;p&gt;Frequency which LPWAN providers like SigFox or LoraWaN use depends on location (and sometimes even the country). Providers use either unlicensed ISM bands , 868 MHz in Europe, 915 Mhz in North America and 433 MHz in Asia, or licensed LTE frequency bands.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--kt_J_-9t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.thedailytechtalk.com/_nuxt/uploads/63ed0e7-592.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kt_J_-9t--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.thedailytechtalk.com/_nuxt/uploads/63ed0e7-592.jpg" alt="The advantages of Sigfox, LoRaWAN, and NB-IoT."&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;The respective advantages of Sigfox, LoRaWAN, and NB-IoT. Source: The Korean Institute of Communications and Information Sciences (KICS) as published in ICT Express, March 2019.&lt;/em&gt;&lt;/p&gt;

&lt;h1&gt;
  &lt;a href="#sigfox"&gt;
  &lt;/a&gt;
  SigFox
&lt;/h1&gt;

&lt;p&gt;Sigfox was founded in 2009 in France.Today they are available in over 60 countries and their numbers are constantly growing. They offer end-to-end LPWAN solutions. Sigfox network architecture is built using base stations in a star topology, but with their own cloud service acting as a middle man. That kind of architecture offers some great benefits such as data security and data flow via API.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Strong industry support and partners like Texas Instruments, Silicon Labs and Arduino&lt;/li&gt;
&lt;li&gt;Very long range&lt;/li&gt;
&lt;li&gt;Large coverage&lt;/li&gt;
&lt;li&gt;Cost effective&lt;/li&gt;
&lt;li&gt;Cloud service &amp;amp; API&lt;/li&gt;
&lt;li&gt;Easy to integrate with services like AWS, Azure and others&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not an open standard&lt;/li&gt;
&lt;li&gt;Low security (16 bit encryption)&lt;/li&gt;
&lt;li&gt;US design architecture is different from European architecture&lt;/li&gt;
&lt;li&gt;Bad UI/UX in administration interface&lt;/li&gt;
&lt;li&gt;Bad latency performance&lt;/li&gt;
&lt;li&gt;Low maximum payload length&lt;/li&gt;
&lt;li&gt;Limited amount of UL / DL&lt;/li&gt;
&lt;li&gt;No private networks&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#lorawan"&gt;
  &lt;/a&gt;
  LoRaWaN
&lt;/h1&gt;

&lt;p&gt;LoRaWaN network architecture is deployed as a typical star topology, with a gateway in the middle that converts radio signal to IP and vice versa. They are mainly used for telemetric data transfers and object tracking. Messages transmitted by an end device with LoRaWAN are received by all base stations in the range, which increases the ratio of successfully received messages. However, that requires multiple base stations in range, as well as the need to filter duplicated messages, which leads to increased network deployment cost.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Strong industry support and partners such as Cisco, IBM and KPN&lt;/li&gt;
&lt;li&gt;Strong security (128 bit encryption) and authentication (2 layers of security)&lt;/li&gt;
&lt;li&gt;Great for communication with moving devices, since it is resistant to the Doppler effect&lt;/li&gt;
&lt;li&gt;Unlimited uplinks and downlinks&lt;/li&gt;
&lt;li&gt;Multiple classes of end devices for different requirements and situations&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Not an open standard&lt;/li&gt;
&lt;li&gt;The price and availability of the modules&lt;/li&gt;
&lt;li&gt;You can only use vendors approved by Semtech&lt;/li&gt;
&lt;li&gt;Expensive device certification required for most device types&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#nbiot"&gt;
  &lt;/a&gt;
  NB-IoT
&lt;/h1&gt;

&lt;p&gt;NB-IoT , which stands for Narrowband Internet of Things, uses licensed frequency spectrum, unlike SigFox and LoRa. Their communication protocol is based on the LTE protocol and it can coexist with both GSM and LTE protocols. NB-IoT frequency band width is 200 KHz, and because of that there are 3 operation modes possible: stand-alone operation which utilizes GSM frequency bands currently in use, guard-band operation that utilizes unused resource blocks within LTE band and in-band operation which utilizes resource blocks within an LTE carrier.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Big data rate (200 kbps)&lt;/li&gt;
&lt;li&gt;Large maximum payload length (1600) bytes&lt;/li&gt;
&lt;li&gt;LTE encryption&lt;/li&gt;
&lt;li&gt;Scalability&lt;/li&gt;
&lt;li&gt;Latency performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No private networks&lt;/li&gt;
&lt;li&gt;Low coverage&lt;/li&gt;
&lt;li&gt;Cost efficiency&lt;/li&gt;
&lt;li&gt;Lower range than its competitors&lt;/li&gt;
&lt;li&gt;Low interference immunity&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;
  &lt;a href="#ltem"&gt;
  &lt;/a&gt;
  LTE-M
&lt;/h1&gt;

&lt;p&gt;CAT-M, officially known as LTE CAT-M1, is the second generation of LTE chips developed by 3GPP. As well as coexisting with 2G, 3G and 4G mobile networks , LTE-M network benefits from their security, privacy and other features. Unlike the rest of the world where GSM spectra are the norm, US service providers have system architecture for LTE-M.&lt;/p&gt;

&lt;p&gt;Pros:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Compatible with existing LTE network.&lt;/li&gt;
&lt;li&gt;High data rate&lt;/li&gt;
&lt;li&gt;Support of voice functionality via VoLTE&lt;/li&gt;
&lt;li&gt;Low power consumption&lt;/li&gt;
&lt;li&gt;Use of TCP / IP protocols&lt;/li&gt;
&lt;li&gt;Easy to deploy&lt;/li&gt;
&lt;li&gt;Supports mobility, no disconnections while moving between stations&lt;/li&gt;
&lt;li&gt;Low latency&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Firmware upgrades consume power&lt;/li&gt;
&lt;li&gt;High costs&lt;/li&gt;
&lt;li&gt;Bandwidth consumption&lt;/li&gt;
&lt;li&gt;Low support outside USA&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;I recently started a new blog &lt;a href="https://thedailytechtalk.com"&gt;TheDailyTechTalk&lt;/a&gt; where I create free content. If you liked this post and would like to read more posts about javascript please check it out 🎉🎉&lt;br&gt;
🥰&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you like what I write and want to support me, please follow me on &lt;a href="https://twitter.com/TheDailyTechTa1"&gt;Twitter&lt;/a&gt; to learn more about programming and similar topics ❤️❤️&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>programming</category>
      <category>python</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>40+ JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 07:04:32 +0000</pubDate>
      <link>https://dev.to/coderzzz/40-javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-5gl5</link>
      <guid>https://dev.to/coderzzz/40-javascript-projects-for-beginners-easy-ideas-to-get-started-coding-js-5gl5</guid>
      <description>&lt;p&gt;&lt;span&gt;&lt;span&gt;&lt;b&gt;The best way to learn a new programming language is to build projects.

I have created a list of 40 beginner friendly project tutorials in Vanilla JavaScript, React, and TypeScript.

My advice for tutorials would be to watch the video, build the project, break it apart and rebuild it your own way. Experiment with adding new features or using different methods.

That will test if you have really learned the concepts or not.

You can click on any of the projects listed below to jump to that section of the article.

&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/40-javascript-projects-for-beginners/&amp;amp;ved=2ahUKEwiB9tj0rPjyAhUMX30KHZQ5CG0QFnoECAgQAQ&amp;amp;usg=AOvVaw26RDQjHugdhbATVS83LI83"&gt;40 JavaScript Projects for Beginners – Easy Ideas to Get Started Coding JS

&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>3 free Brag Document Templates [Google Docs]</title>
      <author>Kevin Peters</author>
      <pubDate>Tue, 14 Sep 2021 06:53:18 +0000</pubDate>
      <link>https://dev.to/getworkrecognized/3-free-brag-document-templates-google-docs-4nla</link>
      <guid>https://dev.to/getworkrecognized/3-free-brag-document-templates-google-docs-4nla</guid>
      <description>&lt;p&gt;Brag documents are an effective way to get recognized by your manager and peers for your work. It will help you to get promoted or simply get a salary raise. Getting a template and what to write into that is difficult, that is why we have prepared some templates for you. All of the templates are free and can be accessed via Google Docs.&lt;/p&gt;

&lt;p&gt;You might be a startup that is trying to set up their performance evaluation processes to finally create alignment for leveling and ranking within the company, or simply a worker who wants to get a promotion. A brag document can help to convince your manager to get promoted.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-work-with-the-templates"&gt;
  &lt;/a&gt;
  How to work with the templates
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Open the URL of the template, you can find them in the next chapters&lt;/li&gt;
&lt;li&gt;Press on File → Make a copy&lt;/li&gt;
&lt;li&gt;Fill the document with your data&lt;/li&gt;
&lt;li&gt;Send it to your manager, ideally discuss it in a 1-on-1 meeting and see if you can reach for the promotion&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#brag-document-template-1-the-general-one"&gt;
  &lt;/a&gt;
  Brag Document Template #1: The general one
&lt;/h2&gt;

&lt;p&gt;Template Link: "&lt;a href="https://docs.google.com/document/d/1p_zbIdoAY9ctxCebKfo5bXNp0oLyN4hWsFhTW63Ypms/edit?usp=sharing"&gt;Brag Document Template 1: For Everyone&lt;/a&gt;"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--guItwZ-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmrhkqw0ah2fo74y7vfb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--guItwZ-I--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jmrhkqw0ah2fo74y7vfb.png" alt="A preview of the first brag document template"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This brag document is made for every profession. After a short introduction on where you describe yourself in a short profile, you will jump over to defining the goals from past years. If you do not know what goals you had a year ago, feel free to write down what the company’s goals were.&lt;/p&gt;

&lt;p&gt;Once those are written down it is time to think about your past year’s performance. What tasks have you done that impacted the key metrics of the company? Most people struggle with this but think back, month by month what you have done.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getworkrecognized.com/login?utm_source=blog&amp;amp;utm_medium=devto&amp;amp;utm_campaign=3-brag-document-templates-google-docs"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--A7O6pdYH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/kqgz3wp8rgyek1oyenxg.gif" alt="Promotional Banner for getworkrecognized"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then write down what the situation was, without describing what you have done and how the situation was impacted. All that and you will have a good overview of what your performance looked like.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brag-document-template-2-software-engineers-amp-more"&gt;
  &lt;/a&gt;
  Brag Document Template #2: Software Engineers &amp;amp; More
&lt;/h2&gt;

&lt;p&gt;Template Link: "&lt;a href="https://docs.google.com/document/d/1iR9VwwaBp-PHcLwe3L32VVtNoSpCX3GXxXhIqJOKJMA/edit?usp=sharing"&gt;Brag Document Template 2: Software Engineers &amp;amp; Tech&lt;/a&gt;"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LtgAqbSQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xcl1z85q0munxcqce3il.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LtgAqbSQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xcl1z85q0munxcqce3il.png" alt="A preview of the second brag document template made for Software Engineers and Tech"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This brag document is specially made for Software Engineers but can be used for other professions as well. It is also written based on the popular article "&lt;a href="https://jvns.ca/blog/brag-documents/#template"&gt;Get your work recognized: write a brag document&lt;/a&gt;" by Julia Evans. It will go through your Goals, Projects, how you have collaborated with colleagues and how you progressed the company. Overall it is super focused on software engineers that have clear projects on what they work on and surely this cannot be found in every job that is out there, but if you have some structured way of working towards some KPIs this template might be for you.&lt;/p&gt;

&lt;p&gt;The only chapter that does apply to Software Engineers is "Design &amp;amp; documentation". Ideally, you skip this chapter from the template to make it a generic one that works for everyone. But in general, this template is really popular as it was &lt;a href="https://news.ycombinator.com/item?id=20665225"&gt;featured on Hackernews with more than 300 upvotes&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#brag-document-template-3-based-on-leadership-principles"&gt;
  &lt;/a&gt;
  Brag Document Template #3: Based on Leadership Principles
&lt;/h2&gt;

&lt;p&gt;Template Link: "&lt;a href="https://docs.google.com/document/d/11Gk-JTP3hF4ei9EbJjuyO-51EhaOZ9xp34u9PlN3lXo/edit?usp=sharing"&gt;Brag Document Template 3: Leadership Principles&lt;/a&gt;"&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---FO7XO1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hv8f55q47bgfieo26uf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---FO7XO1O--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7hv8f55q47bgfieo26uf.png" alt="A preview of the third brag document template based on leadership principles"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This brag document template is the best if your company works with Leadership Principles, also called operation principles in some companies. You can find a big selection of leadership principles in our free &lt;a href="https://getworkrecognized.com/tools/career-ladders-explorer?utm_source=blog&amp;amp;utm_medium=devto&amp;amp;utm_campaign=3-brag-document-templates-google-docs"&gt;Career Ladders Explorer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The template is structured quite simply. You have three sections that are like the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Good Leadership Principles/Actions&lt;/li&gt;
&lt;li&gt;Room to improve based on Leadership Principles&lt;/li&gt;
&lt;li&gt;Outlook&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The important thing to consider in this template is to overweight the good parts and leave out the bad things. Ideally, you should have started with listing "okish" achievements and getting to the best achievements, then starting with the worst parts where you need to improve and top it off with improvements that are possible for you to reach in the next performance review cycle.&lt;/p&gt;

&lt;p&gt;In the final self-evaluation section try to focus on reasons why you should get promoted. Most of the time the main reason should be that you act on the next level already when it comes to leadership principles. And write as well that you want to get promoted now, because of all your achievements and your output.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#other-brag-docs"&gt;
  &lt;/a&gt;
  Other brag docs
&lt;/h2&gt;

&lt;p&gt;Do you have any other brag documents that you want to share? Feel free to shoot us an email at: &lt;a href="//mailto:getworkrecognized@gmail.com"&gt;getworkrecognized@gmail.com&lt;/a&gt;. We are happy to have your template listed here as well and we are looking to extend this collection of brag documents soon.&lt;/p&gt;

</description>
      <category>career</category>
      <category>productivity</category>
      <category>programming</category>
      <category>help</category>
    </item>
    <item>
      <title>Learning Python- Intermediate course: Day 25, Buttons, Entry and Textboxes </title>
      <author>Aatmaj</author>
      <pubDate>Tue, 14 Sep 2021 06:09:57 +0000</pubDate>
      <link>https://dev.to/aatmaj/learning-python-intermediate-course-day-25-buttons-entry-and-textboxes-2d0n</link>
      <guid>https://dev.to/aatmaj/learning-python-intermediate-course-day-25-buttons-entry-and-textboxes-2d0n</guid>
      <description>&lt;h2&gt;
  &lt;a href="#today-we-will-cover-three-widgets-namely-button-entry-and-textbox"&gt;
  &lt;/a&gt;
  Today we will cover three widgets, namely button, entry and textbox.
&lt;/h2&gt;




&lt;h2&gt;
  &lt;a href="#the-plain-old-button"&gt;
  &lt;/a&gt;
  The plain old button
&lt;/h2&gt;

&lt;p&gt;We have covered check buttons, radio buttons and label in the previous parts. But now we will see how to make a simple clickable button. &lt;/p&gt;

&lt;p&gt;The button widget can be created as shown &lt;code&gt;button=tk.Button(form,text="Press Me",command=cmd)&lt;/code&gt;&lt;br&gt;
'cmd' is the  command to be executed once the button is pressed. The example below will make things clearer.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#making-a-blank-button"&gt;
  &lt;/a&gt;
  Making a blank button
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of Entry widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Press Me"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IbrCmGCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w22b2svmeh2ycai4tqxg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IbrCmGCR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/w22b2svmeh2ycai4tqxg.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--VA5nwwQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/epcakg5pqhf555sthqdg.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--VA5nwwQQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/epcakg5pqhf555sthqdg.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On pressing the button, nothing happens. It is just a blank button. But now we will add a counter to count the number of times the button is pressed.&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#adding-counter-to-the-button"&gt;
  &lt;/a&gt;
  Adding counter to the button.
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of Entry widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntVar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;count&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;&lt;span class="c1"&gt;#don't forget the str()
&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Press Me"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;On pressing the button, the text of the button changes in accordance to the number of times the button is pressed. This is achieved by using the &lt;code&gt;IntVar()&lt;/code&gt; variable.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--7zbapgOH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzrdmqcpibwxh8zcxd3r.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--7zbapgOH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vzrdmqcpibwxh8zcxd3r.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ck4hfTRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/482syg5vj7gzexldbem1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ck4hfTRP--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/482syg5vj7gzexldbem1.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--vMoquqEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrx6tz05d7g4qnmx7f9m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--vMoquqEF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zrx6tz05d7g4qnmx7f9m.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#the-entry-widget"&gt;
  &lt;/a&gt;
  The Entry widget.
&lt;/h2&gt;

&lt;p&gt;The entry widget is a single line textbox. The users can give in a single line input via this widget.&lt;br&gt;
&lt;code&gt;entry = tk.Entry(parent)&lt;/code&gt;&lt;br&gt;
We can also add other parameters to the entry widget like color, etc. Here is an example below which demonstrates a blank entry widget.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#blank-entry-widget"&gt;
  &lt;/a&gt;
  Blank entry widget.
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of Entry widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cxPEFlCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbtpby50gfg5u1qojvfx.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cxPEFlCM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/mbtpby50gfg5u1qojvfx.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#getting-value-from-the-entry"&gt;
  &lt;/a&gt;
  Getting value from the entry.
&lt;/h3&gt;

&lt;p&gt;The value of the text can be obtained using the &lt;code&gt;get()&lt;/code&gt; function.  The below example will make things very clear.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of Entry widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="s"&gt;'''
The TB1.get() method returns the string value of the  text inputted into the entry widget. By using the config() method of the button, we can set the text of the button.
'''&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To process the input data, we will need the help of other widgets. Button for example. In the above example, when the button is pressed, the button text changes according to the value of the entry.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--FiykySH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5oognqdgj9yapvlebo2o.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--FiykySH0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/5oognqdgj9yapvlebo2o.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fD6pSXOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4x0brdbpabmng97ncec.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fD6pSXOw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/y4x0brdbpabmng97ncec.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CFsSu9QZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tx1vrflcvir6gy3iyhc.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CFsSu9QZ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6tx1vrflcvir6gy3iyhc.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--yiNU544A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vp4fyvgntwwzp1ja6zoo.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--yiNU544A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vp4fyvgntwwzp1ja6zoo.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#textbox"&gt;
  &lt;/a&gt;
  Textbox.
&lt;/h2&gt;

&lt;p&gt;Textboxes are just the same as entry widgets, the only difference is that we can add multiple lines to it. Just replace 'Entry' by 'Text' and you are done!&lt;/p&gt;


&lt;h3&gt;
  &lt;a href="#blank-textbox"&gt;
  &lt;/a&gt;
  Blank textbox.
&lt;/h3&gt;


&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of textbox widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--0EQyx3C7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6t7nv5a41xob5juki1ha.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--0EQyx3C7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6t7nv5a41xob5juki1ha.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#setting-the-textspace"&gt;
  &lt;/a&gt;
  Setting the text-space
&lt;/h4&gt;

&lt;p&gt;Using the height and width attributes, we can set the number of input characters in each line.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of textbox widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--TosJIIJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olwmezxtkeovnt97hbt2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--TosJIIJ2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/olwmezxtkeovnt97hbt2.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#getting-input-from-the-textbox"&gt;
  &lt;/a&gt;
  Getting input from the textbox.
&lt;/h3&gt;

&lt;p&gt;We can get the input in the same manner. We need to specify two parameters to the get method. The start and the end parameter. &lt;code&gt;text=TB1.get(1.0, "end-1c")&lt;/code&gt; will give the entire result.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;tkinter&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tk&lt;/span&gt;

&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Tk&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Example of Entry widget"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;geometry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'400x200'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;TB1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"end-1c"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="s"&gt;'''
get(start, [end])
where,
start is starting index of required text in TextBox,
end is ending index of required text in TextBox
'''&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;tk&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;button&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mainloop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UTjiRzki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ka7z6j5nlihj7px5tb0.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UTjiRzki--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8ka7z6j5nlihj7px5tb0.png" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;







&lt;p&gt;So friends, that was all for today. Tomorrow, we will do a password management program! So stay tuned in this course!. Follow me on GitHub for updates.&lt;/p&gt;

</description>
      <category>learningpython</category>
      <category>python</category>
      <category>programming</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>Tips To Become Great Programmer Of All Time</title>
      <author>Coding</author>
      <pubDate>Tue, 14 Sep 2021 05:52:17 +0000</pubDate>
      <link>https://dev.to/coderzzz/tips-to-become-great-programmer-4gcg</link>
      <guid>https://dev.to/coderzzz/tips-to-become-great-programmer-4gcg</guid>
      <description>&lt;p&gt; A good programmer is someone who always looks both ways before crossing a one-way street. ~Doug Linder&lt;/p&gt;

&lt;p&gt;Let me start by saying that I do not consider myself to be a competent coder. I consider my coding abilities to be mediocre, and I am still learning and have a long way to go before I am even remotely satisfied with them.Yes, I am better at programming than a lot of others, but that is just because they are lazy and choose to sit about idle all day instead of programming. Their dreadful abilities make my less dreadful abilities appear fantastic.&lt;/p&gt;

&lt;p&gt;So most of the tips I will mention below are lessons learnt from failed endeavours, they are what I have wanted to be and I am not. So lets dive in. &lt;/p&gt;

&lt;p&gt;Read More: &lt;b&gt;&lt;a href="https://www.codelivly.com/tips-to-become-a-great-programmer/"&gt;Tips to become a great programmer&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Learn about Node.js - Popular JavaScript Framework ⚡</title>
      <author>Rezaul karim</author>
      <pubDate>Tue, 14 Sep 2021 05:48:06 +0000</pubDate>
      <link>https://dev.to/mrezaulkarim/learn-about-node-js-popular-javascript-framework-43en</link>
      <guid>https://dev.to/mrezaulkarim/learn-about-node-js-popular-javascript-framework-43en</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-nodejs-"&gt;
  &lt;/a&gt;
  What is Node.js ?
&lt;/h2&gt;

&lt;p&gt;Node.js is a server-side JavaScript run-time environment that works cross-platform and is open source. Node.js uses event drive and non-blocking models that make this framework light weight and efficient. Node.js package ecosystem - "NPM" is the world's largest ecosystem of open source libraries.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#actually-nodejs-is-"&gt;
  &lt;/a&gt;
  Actually node.js is -
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A platform that allows us to run on a JavaScript computer or server.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Helps to read, delete and update files.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Helps to easily communicate with the database.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#why-is-nodejs-so-popular"&gt;
  &lt;/a&gt;
  Why is Node.js so popular?
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;It uses JavaScript.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very fast (using V7 engine and non-blocking code)&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Open source package has many large ecosystems such as - NPM&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Very good for real time services such as - Chat service.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#lets-know-about-some-features-of-node-js"&gt;
  &lt;/a&gt;
  Let's know about some features of Node JS:
&lt;/h2&gt;

&lt;p&gt;1) Swift: Node that S's library code execution is much faster.&lt;/p&gt;

&lt;p&gt;2) I / 0 Asynchronous and Even-Driven: All APIs are asynchronous which means the server does not wait for the API to back up the data.&lt;/p&gt;

&lt;p&gt;3) Single threaded: Node that uses single threaded model with S event loop.&lt;/p&gt;

&lt;p&gt;4) High Scalable: Node that S uses an event mechanism that allows the server to respond to non-blocking manners that make it scalable.&lt;/p&gt;

&lt;p&gt;5) No buffering: Node that s processing time significantly reduces when uploading audio and video files. So buffering is not.&lt;/p&gt;

&lt;p&gt;6) Open Source: Being open source, Node JS has come up with many amazing models that are used to add better capability to Node JS applications.&lt;/p&gt;

&lt;p&gt;7) License: It is licensed under MIT.&lt;/p&gt;

&lt;p&gt;*Recommended:  &lt;a href="https://mrezaulkarim.com/es6-cheat-sheet/"&gt;JavaScript - ES6 Cheat Sheet | Download PDF&lt;/a&gt; *&lt;/p&gt;

&lt;p&gt;For more exciting tips and tricks about programming and coding please read our  &lt;a href="https://mrezaulkarim.com/blog/"&gt;others articles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find My page on Instagram:  &lt;a href="https://instagram.com/stack.content"&gt;@stack.content&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Find Me on Twitter:   &lt;a href="https://twitter.com/mrezaulkarim_"&gt;@mrezaulkarim_&lt;/a&gt; &lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Complete roadmap: How to get started with Frontend Development?</title>
      <author>ShahiLalit</author>
      <pubDate>Tue, 14 Sep 2021 05:18:52 +0000</pubDate>
      <link>https://dev.to/shahilalit/complete-roadmap-how-to-get-started-with-frontend-development-m9p</link>
      <guid>https://dev.to/shahilalit/complete-roadmap-how-to-get-started-with-frontend-development-m9p</guid>
      <description>&lt;p&gt;Hello World!&lt;/p&gt;

&lt;p&gt;Today we will look into the complete roadmap for becoming a frontend developer step by step.&lt;/p&gt;

&lt;p&gt;In the previous blog, we talked about if getting into  &lt;a href="https://blog.lalitshahi.com/a-career-in-web-development-in-2021"&gt;a web development career in 2021&lt;/a&gt;  is still a good option. We discussed why it can be a good option for people who are interested in it. We also discussed that web development consists of Frontend Development and Backend Development. And what quick steps one can take to get into any of these fields as an absolute beginner.&lt;/p&gt;

&lt;p&gt;Now, in this article, we will dive deep into the complete guide on how one can plan his/her career in front-end development.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-frontend-development"&gt;
  &lt;/a&gt;
  &lt;strong&gt;What is Frontend Development?&lt;/strong&gt;
&lt;/h2&gt;

&lt;p&gt;As an absolute beginner, I am sure you must be asking a question to yourself, what is front-end development? What does a front-end developer do?&lt;/p&gt;

&lt;p&gt;You see as the name suggests, a front-end developer creates everything a user sees on any website or application.&lt;/p&gt;

&lt;p&gt;To make it easier for you to understand and remember, let's make a list of tasks that a frontend developer handles.&lt;/p&gt;

&lt;p&gt;A front-end developer:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Creates the static User Interfaces (UIs) for the website/application.&lt;/li&gt;
&lt;li&gt;Responsible for adding and handling the user interactions, e.g. click of a button, filling out a form, etc.&lt;/li&gt;
&lt;li&gt;Integrates the Application Programming Interfaces (APIs) shared by the backend team with the UI.&lt;/li&gt;
&lt;li&gt;Linking pages together on a website/application for users to move back and forth.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Apart from these, there will be other tasks that you will have to do as a developer in a small team but those tasks can be handled by or delegated to anyone. So, let's not talk about what you don't do and talk about as a front-end developer what you do.&lt;/p&gt;

&lt;p&gt;As a beginner, it is very helpful when you have a clear idea about the processes and paths you need to know to achieve anything in your career. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://roadmap.sh/"&gt;Roadmap.sh&lt;/a&gt;  has done a wonderful job of doing extensive research and created this complete frontend developer roadmap for us and for every beginner who is planning to build a career as a frontend developer.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ga36qOCb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631524436448/ufCCcUG5W.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ga36qOCb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1631524436448/ufCCcUG5W.png" alt="frontend.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#skills-that-you-need-to-learn-to-be-a-frontend-developer"&gt;
  &lt;/a&gt;
  Skills that you need to learn to be a frontend developer
&lt;/h2&gt;

&lt;p&gt;Now, that we have some idea about what you will do as a front-end developer, let's find out the skills that are needed to do all that.&lt;/p&gt;

&lt;p&gt;There are three technologies that you need to start with:-&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#html-hypertext-markup-language"&gt;
  &lt;/a&gt;
  HTML - HyperText Markup Language
&lt;/h3&gt;

&lt;p&gt;HTML is the basic foundation of web development. HTML is not a programming language, it's a markup language but it does not mean that it is any less than any programming language like Python or JavaScript.&lt;/p&gt;

&lt;p&gt;Almost all web pages that you see on the web are written in HTML. We can confidently state that HTML is the A B C of web development.&lt;/p&gt;

&lt;p&gt;HTML consists of elements also called tags. Each tag has its meaning and purpose. With the help of HTML, you would create the basic structure of your website and element should be written in the order they are going to be shown on the website.&lt;br&gt;
Some of the best resources to learn HTML:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://html.com/"&gt;html.com&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://w3schools.com/"&gt;W3Schools&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;
&lt;a href="https://freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#css-cascading-style-sheets"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CSS - Cascading Style Sheets:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;CSS helps to style the webpage when you are done writing your HTML elements. You can target your HTML elements in a CSS file using various selectors, but mostly you would use classes, ids, and tag names. &lt;/p&gt;

&lt;p&gt;In the CSS file, you would define properties like the color, size of the text and background, how big you want your image to be and which font style to use and so many other properties. &lt;/p&gt;

&lt;p&gt;This is where you get to show your creativity and make the website as beautiful you can make, but keeping in mind the performance of the webpage.&lt;/p&gt;

&lt;p&gt;Some of the best resources to learn CSS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://w3schools.com/"&gt;W3Schools&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://css-tricks.com/"&gt;CSS-Tricks&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;
  &lt;a href="#js-javascript"&gt;
  &lt;/a&gt;
  &lt;strong&gt;JS - JavaScript:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;JS is the most popular language out there. According to the StackOverflow survey, also discussed in our previous blog, A career in web development in 2021, JavaScript has been winning this race for 9 years in a row. &lt;/p&gt;

&lt;p&gt;And this is because JavaScript can be used in frontend and backend development. &lt;/p&gt;

&lt;p&gt;But as a beginner, you just have to focus on the fundamental concepts of programming that apply to JavaScript and that would be the stepping stone for you to learn any other language later if you choose to.&lt;/p&gt;

&lt;p&gt;Some of the best resources to learn JavaScript online:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://learnjavascript.online/"&gt;Learn JavaScript Online&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://freecodecamp.org/"&gt;FreeCodeCamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://javascript.info/"&gt;JavaScript Info&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pN6jk0uUrD8&amp;amp;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP"&gt;Namaste JavaScript Playlist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To understand the use of these three, as an absolute beginner, let's take an example.&lt;/p&gt;

&lt;p&gt;Our body is the website or the application that we have to build.&lt;/p&gt;

&lt;p&gt;For creating our body we need to have the elements like bones, skin, all kinds of body organs.&lt;/p&gt;

&lt;p&gt;Now, same as our body organs, we use HTML to create elements for our website. We create them in order we will be using them on our website. As the header of the website will be on top and footer of the website would be at the bottom, and so on.&lt;/p&gt;

&lt;p&gt;We have created elements that are needed now, we need to define how they should look as per the design and where they should be placed.&lt;/p&gt;

&lt;p&gt;Just like our bodies look different and beautiful in their way with all the hairstyle, clothes, etc. To do all that for our website, CSS comes into the picture.&lt;/p&gt;

&lt;p&gt;CSS (Cascading Style Sheets) defines how a user sees our website. We use CSS, to define what size of the image to put, what color of the text and background should be on our website. CSS also helps us define how our website should look when viewed on different screen sizes.&lt;/p&gt;

&lt;p&gt;Till now, we have created our body with all the structure, bones, muscles, and skin, and everything. But we do want a working body, we want to use our feet to work for walking and hands to help us type this blog, that you can see and read with your eyes.&lt;/p&gt;

&lt;p&gt;So, for this interaction, we have our brain and the nervous system to help us understand the world around us and interact with it.&lt;/p&gt;

&lt;p&gt;Likewise, we have JavaScript that does the work of our brain on our website. It tells the website what to open when a user clicks on a login button and what to do when the user clicks on the logout button.&lt;/p&gt;

&lt;p&gt;JavaScript also helps us get the feedback of our users after they read this blog, and post it down below in the comments section.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If this analogy helped you understand even a bit about HTML, CSS, and JavaScript please drop a comment down below and see the JavaScript in action.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After you have done a basic course on the above three, you will have some idea of how these technologies are used in front-end development.&lt;/p&gt;

&lt;p&gt;It's time to move ahead and learn some of the following technologies which a frontend developer should be aware of, and will have to use in his/her day-to-day work.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#understand-how-the-web-works"&gt;
  &lt;/a&gt;
  Understand how the web works?
&lt;/h3&gt;



&lt;p&gt;&lt;code&gt;How the internet works?&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The basic idea is browser sends a request, the server returns a response, that's how we see a webpage on browsers.
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;How do you get the data on hitting a URL in your browser and What is DNS?&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;our browsers and servers talk to each other using numbers and they are called IP Addresses e.g. 255.0.23.3 but we as users can't remember all these IP addresses for all the websites we need, this is where DNS (Domain Name System) comes into the picture and maps our domain names like &lt;code&gt;yourdomain.com&lt;/code&gt; to its IP address.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Understand the difference between client-side and server-side programming.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#dom-document-object-model"&gt;
  &lt;/a&gt;
  &lt;strong&gt;DOM - Document Object Model:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;This represents the page that contains the webpage and all the elements that we created using HTML. Let's understand it this way, DOM is the document that consists of elements as objects which has their properties and methods.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Why do you need to learn DOM? you may ask!&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;so, DOM helps you target and grab any element on your website, and use it or its properties to change it or use it in any way you want in your project. e.g. you want to show a modal that pops up on the screen when you hit a button, so we can use DOM to achieve that.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#css-preprocessors-like-less-scss"&gt;
  &lt;/a&gt;
  &lt;strong&gt;CSS Pre-processors like LESS, SCSS:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Pro-processors like LESS and SCSS help in creating better organized and re-usable CSS snippets. &lt;/p&gt;

&lt;p&gt;The pre-processors contain features like mixins, functions, variables, and the ability to use multiple files and import those into one main file. &lt;/p&gt;

&lt;p&gt;Basic idea is, it helps you write extensible, re-usable, and less code.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#version-control-system"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Version Control System:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;When you start working on a project, you would need to have a way to control the different versions of your project, and have a clear idea about the code changes done by you or any other developer working with you on the same project. &lt;/p&gt;

&lt;p&gt;So, Version Control System helps in handling this by maintaining a history of what changes have happened and who has done it. GIT, CVS, &amp;amp; SVN are few popular open-source version control systems, which you can use to track your changes. &lt;/p&gt;

&lt;p&gt;Most of the companies use GitHub, GitLab, or BitBucket as their version control systems which are based on GIT. Learning GIT can be a bit difficult for a beginner, but when you are working alone on your first few projects, you would only need to remember these commands and you will be good to go.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;git init&lt;/code&gt;- it adds git to your new project and creates a master branch to your repository.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git status&lt;/code&gt; - it checks the new changes to your project&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git add -p&lt;/code&gt; - it shows you changes in small chunks so that you can check and confirm those changes one by one. There is another command (git add .) which adds all changes to git without confirmation and I would not suggest doing it.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git commit -m "write your commit-change msg here"&lt;/code&gt; - commits changes to git with the message written inside quotes about the changes after &lt;strong&gt;-m&lt;/strong&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git push origin remote-branch-name&lt;/code&gt; - it pushes your code to the remote branch which you have mentioned in the command.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git checkout branch-name&lt;/code&gt; - it takes you to the branch you checkout to.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git checkout -b new-branch-name&lt;/code&gt; - it creates a new branch for you with the name provided by you and checks out to that branch.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git pull&lt;/code&gt; - this will pull all the changes from the remote branch to your remote branch.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#ability-to-use-libraries-in-the-project"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Ability to use libraries in the project:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;As a developer, you would have to do some development in your project which could require a lot of time and effort but you can also use libraries created by other developers and graciously open-sourced for other developers to use and take benefit from it. &lt;/p&gt;

&lt;p&gt;You must gain some experience in integrating and using open-sourced libraries. They can be for any use cases, could be for creating UIs, like using a bootstrap library or using an image slider library.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#understand-the-difference-between-static-dynamic-websites-and-spas"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Understand the difference between Static, Dynamic Websites and SPAs:&lt;/strong&gt;
&lt;/h3&gt;



&lt;p&gt;&lt;code&gt;Static Websites&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Static websites&lt;/strong&gt; are the website in which the content of the website does not change very often or does not change at all. &lt;/p&gt;

&lt;p&gt;And it is the same for every user, for the time of the day, and the time zone. &lt;/p&gt;

&lt;p&gt;Static websites don't usually need any database design and are good for cases when there are fewer pages and very few update cycles.  To build a static website you just need to have HTML, CSS, and JavaScript knowledge.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Dynamic Websites&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;On other hand, &lt;strong&gt;dynamic websites&lt;/strong&gt; content can change very often, based on its users, timezone, etc. To develop a dynamic website, you necessarily need to have a backend and a database design, because Dynamic websites are mostly database-driven. &lt;/p&gt;

&lt;p&gt;To build a dynamic website you would need to have a fair amount of backend knowledge as well along with HTML, CSS, and JS because mostly all the content is server-rendered and you have to use some server scripting language like node.js, PHP, .Net, or Python to develop and fill the webpage with the content. It is not very much popular and in use nowadays because of SPAs.&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Single Page Applications&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SPAs&lt;/strong&gt; or &lt;strong&gt;Single Page Applications&lt;/strong&gt; are the modern ways of developing a web application that gives users the app ecosystem kind of feel and it does not load content from the server on each page load. &lt;/p&gt;

&lt;p&gt;SPAs are popular and in high demand, because they have the ability of dynamic websites and are easy to build like static websites. Popular frameworks that help you develop SPAs are React.js, Angular,.js, Vue.js, and Svelte, etc.&lt;/p&gt;

&lt;p&gt;But it should also be noted that static websites are cheaper to build and faster in performance than dynamic websites or SPAs, that's why it is very important to understand the requirement of the project and then decide what kind of approach we should have for our next project. &lt;/p&gt;

&lt;p&gt;As a beginner it can be confusing for you to decide what to choose for your next project, should it be a static website or a dynamic one. &lt;/p&gt;

&lt;p&gt;Now, you can decide it better when you have a clear idea about the requirement of the project. Try to find out the answers to the following questions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Do you need to have login functionality? If Yes: Choose SPA&lt;/li&gt;
&lt;li&gt;Is the data going to change more often? If Yes: Choose SPA.&lt;/li&gt;
&lt;li&gt;Are there chances of adding more pages and functionalities in near future? If Yes: Choose SPA.&lt;/li&gt;
&lt;li&gt;It's going to be just a simple landing page of the company or a portfolio - Choose Static Website.&lt;/li&gt;
&lt;li&gt;You need an e-commerce kind of feature: Choose SPA.
These are some of the scenarios but do give some time before starting your project, and very clearly understand the project requirements.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#popular-javascript-frameworks-and-libraries"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Popular JavaScript Frameworks and Libraries:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;So, you have taken all the requirements and you came to the conclusion that you would have to develop a Single Page Application for your next project then it's time to learn some popular JavaScript frameworks and libraries. &lt;/p&gt;

&lt;p&gt;My personal preference is React.js and of course, you should try and test yourself all the options available and choose the one which you like the most. &lt;/p&gt;

&lt;p&gt;If you want to learn React.js, it's good to have a look at the  &lt;a href="https://reactjs.org/docs/getting-started.html"&gt;React.js official documentation&lt;/a&gt;  once.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#application-programming-interface-api-integrations"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Application Programming Interface (API) Integrations:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;As a frontend developer, you will have to connect with the backend team and get the APIs for your SPA. An API connects your frontend with the backend and the database for the data that the user needs to see and interact with. &lt;/p&gt;

&lt;p&gt;It would be your job role as a frontend developer to integrate different types of APIs to your frontend, e.g. if the user wants to send some details about something maybe his/her profile info, then you need to connect a proper API to do that, and then to show the same data back to the user on the profile page, you would need to connect another API. &lt;/p&gt;

&lt;p&gt;In the same way, you will have to link all the pages and actions of your application with the backend with the help of APIs.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#npm-and-yarn"&gt;
  &lt;/a&gt;
  &lt;strong&gt;NPM and Yarn:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;When you start working on SPAs, there will be a lot of dependencies that your frontend code will require, and to manage all that, you have npm and yarn. &lt;/p&gt;

&lt;p&gt;NPM is short for Node Package Manager, it helps you manage packages used in your project. &lt;/p&gt;

&lt;p&gt;It keeps an eye on the version number of the packages in use and even the dependencies of the packages that you use in your project. &lt;/p&gt;

&lt;p&gt;Both NPM and Yarn have the same purpose, it is debatable which one is better than the other, but basic idea is, you should use only one of the two and you should have a basic understanding of the two. &lt;/p&gt;

&lt;p&gt;To find out which packages are being used by your project, open package.json inside your project and you will see the list of package dependencies and the versions of those packages used in your project.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learn-how-to-use-browser-dev-tools"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Learn how to use browser dev tools:&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;As a frontend developer, regardless of your experience level, you will need to use your browser dev tools, for inspecting your website elements, debugging issues, and fixing UI-related problems. &lt;/p&gt;

&lt;p&gt;Browser dev tools would be your friend in all scenarios. It would be a plus point for you if you learn to use dev tools efficiently.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wrapping-up"&gt;
  &lt;/a&gt;
  Wrapping Up
&lt;/h2&gt;

&lt;p&gt;As a final note, frontend development is a very promising career for a developer and opportunities are endless. Once you get a good hold of the web frontend technologies and have created a couple of projects using JavaScript Frameworks, try learning technologies that help you build the frontend for the mobile applications. &lt;/p&gt;

&lt;p&gt;The web keeps changing with new technologies so, it is essential to keep yourself up-to-date with the latest trends and technologies, and never stop learning. &lt;/p&gt;

&lt;p&gt;It's good to have your fundamentals clear, even when you have gained a bit of experience so that you can grasp any new technology that comes in your way easily.&lt;/p&gt;

&lt;p&gt;That is it for now, until next time.&lt;/p&gt;

&lt;p&gt;Keep learning, keep coding...&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

&lt;p&gt;Lalit&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>career</category>
      <category>development</category>
      <category>frontend</category>
    </item>
    <item>
      <title>Array.forEach() Method  in JavaScript 🚀</title>
      <author>Shubham Jadhav</author>
      <pubDate>Tue, 14 Sep 2021 05:18:39 +0000</pubDate>
      <link>https://dev.to/dev_shubham/array-foreach-method-in-javascript-4k9d</link>
      <guid>https://dev.to/dev_shubham/array-foreach-method-in-javascript-4k9d</guid>
      <description>&lt;p&gt;How can we iterate array items through a loop in JavaScript ?? &lt;/p&gt;

&lt;p&gt;If you know the above question answer then give the answer in comment section. &lt;/p&gt;

&lt;p&gt;Today we are learning the most important method in JavaScript. &lt;/p&gt;

&lt;p&gt;Array.forEach();&lt;/p&gt;

&lt;p&gt;• What is Array.forEach() &lt;br&gt;
   method ?&lt;br&gt;
 =&amp;gt; In which method we can &lt;br&gt;
   iterate array items through &lt;br&gt;
   a loop it's called &lt;br&gt;
   Array.forEach() method. &lt;/p&gt;

&lt;p&gt;• Syntax of Array.forEach()&lt;br&gt;
 =&amp;gt; arr.forEach((item, index) &lt;br&gt;
    =&amp;gt; { // code here.. })&lt;/p&gt;

&lt;p&gt;This method return a callback function.&lt;/p&gt;

&lt;p&gt;• Example &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2eGWGUBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/408p0t55ft6dtm8rrp8z.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2eGWGUBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/408p0t55ft6dtm8rrp8z.jpg" alt="example 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;• Explanation &lt;br&gt;
  (1) Let's create an array and give any name as per you but I gave 'arr' as name. &lt;br&gt;
  (2) Now, I used here in next step arr.forEach() method. &lt;br&gt;
  (3) As we know this method return a callback function and this has two parameters 'item' and 'index'as shown above example. &lt;br&gt;
  (4) The forEach method iterate all items like a for loop one by one. &lt;/p&gt;

&lt;p&gt;• Advantages of forEach() method&lt;br&gt;
  (1) It has a clear syntax. &lt;br&gt;
  (2) the forEach method keeps the variables from the callback function bound to the local scope&lt;br&gt;
  (3) The forEach method is less error prone. &lt;/p&gt;

&lt;p&gt;🙏 Thank you for reading... &lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>beginners</category>
    </item>
  </channel>
</rss>
