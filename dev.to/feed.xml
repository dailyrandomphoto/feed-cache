<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Node.js Express Login example with MySQL database</title>
      <author>Tien Nguyen</author>
      <pubDate>Fri, 25 Dec 2020 08:37:02 +0000</pubDate>
      <link>https://dev.to/tienbku/node-js-express-login-example-with-mysql-database-2n51</link>
      <guid>https://dev.to/tienbku/node-js-express-login-example-with-mysql-database-2n51</guid>
      <description>&lt;p&gt;In this tutorial, we're gonna build a Node.js Express Login &amp;amp; Registration example that supports Token Based Authentication with JWT (JSONWebToken). You'll know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Appropriate Flow for User Signup &amp;amp; User Login with JWT Authentication&lt;/li&gt;
&lt;li&gt;Node.js Express Architecture with CORS, Authenticaton &amp;amp; Authorization middlewares &amp;amp; Sequelize&lt;/li&gt;
&lt;li&gt;How to configure Express routes to work with JWT&lt;/li&gt;
&lt;li&gt;How to define Data Models and association for Authentication and Authorization&lt;/li&gt;
&lt;li&gt;Way to use Sequelize to interact with MySQL Database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Full Article: &lt;a href="https://bezkoder.com/node-js-jwt-authentication-mysql/"&gt;https://bezkoder.com/node-js-jwt-authentication-mysql/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#token-based-authentication" class="anchor"&gt;
  &lt;/a&gt;
  Token Based Authentication
&lt;/h2&gt;

&lt;p&gt;Comparing with Session-based Authentication that need to store Session on Cookie, the big advantage of Token-based Authentication is that we store the JSON Web Token (JWT) on Client side: Local Storage for Browser, Keychain for IOS and SharedPreferences for Android… So we don’t need to build another backend project that supports Native Apps or an additional Authentication module for Native App users.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OuMsGDZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/osy8rwtr9y37vhmlp2za.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OuMsGDZm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/osy8rwtr9y37vhmlp2za.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are three important parts of a JWT: Header, Payload, Signature. Together they are combined to a standard structure: &lt;code&gt;header.payload.signature&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The Client typically attaches JWT in &lt;strong&gt;Authorization&lt;/strong&gt; header with Bearer prefix:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Authorization: Bearer [header].[payload].[signature]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Or only in &lt;strong&gt;x-access-token&lt;/strong&gt; header:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;x-access-token: [header].[payload].[signature]
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;For more details, you can visit:&lt;br&gt;
&lt;a href="https://bezkoder.com/jwt-json-web-token/"&gt;In-depth Introduction to JWT-JSON Web Token&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#overview-of-nodejs-express-login-amp-registration-example" class="anchor"&gt;
  &lt;/a&gt;
  Overview of Node.js Express Login &amp;amp; Registration example
&lt;/h2&gt;

&lt;p&gt;We will build a Node.js Express application in that:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;User can signup new account, or login with username &amp;amp; password.&lt;/li&gt;
&lt;li&gt;By User's role (admin, moderator, user), we authorize the User to access resources&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is our Node.js application demo running with MySQL database and test Rest Apis with Postman.&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/fLcxkyMDW08"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;These are APIs that we need to provide:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;POST  &lt;code&gt;/api/auth/signup&lt;/code&gt;     signup new account&lt;/li&gt;
&lt;li&gt;POST  &lt;code&gt;/api/auth/signin&lt;/code&gt;     login an account&lt;/li&gt;
&lt;li&gt;GET   &lt;code&gt;/api/test/all&lt;/code&gt;    retrieve public content&lt;/li&gt;
&lt;li&gt;GET   &lt;code&gt;/api/test/user&lt;/code&gt;   access User's content&lt;/li&gt;
&lt;li&gt;GET   &lt;code&gt;/api/test/mod&lt;/code&gt;    access Moderator's content&lt;/li&gt;
&lt;li&gt;GET   &lt;code&gt;/api/test/admin&lt;/code&gt;  access Admin's content&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#flow-for-signup-amp-login-with-jwt-authentication" class="anchor"&gt;
  &lt;/a&gt;
  Flow for Signup &amp;amp; Login with JWT Authentication
&lt;/h2&gt;

&lt;p&gt;The diagram shows flow of User Registration, User Login and Authorization process. node-js-jwt-authentication-mysql-flow&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Ng7ODAeF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/crv22c186lcj9spryp44.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Ng7ODAeF--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/crv22c186lcj9spryp44.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A legal JWT must be added to HTTP &lt;strong&gt;x-access-token&lt;/strong&gt; Header if Client accesses protected resources.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#nodejs-express-architecture-with-authentication-amp-authorization" class="anchor"&gt;
  &lt;/a&gt;
  Node.js Express Architecture with Authentication &amp;amp; Authorization
&lt;/h2&gt;

&lt;p&gt;You can have an overview of our Node.js Express App with the diagram below: &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Tf9xbbk0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/t90e850g7799rtvect0i.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Tf9xbbk0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/t90e850g7799rtvect0i.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Via &lt;strong&gt;Express&lt;/strong&gt; routes, &lt;strong&gt;HTTP request&lt;/strong&gt; that matches a route will be checked by &lt;strong&gt;CORS Middleware&lt;/strong&gt; before coming to &lt;strong&gt;Security&lt;/strong&gt; layer.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt; layer includes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JWT Authentication Middleware: verify SignUp, verify token&lt;/li&gt;
&lt;li&gt;Authorization Middleware: check User's roles with record in database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If these middlewares throw any error, a message will be sent as HTTP response.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Controllers&lt;/strong&gt; interact with MySQL Database via &lt;strong&gt;Sequelize&lt;/strong&gt; and send &lt;strong&gt;HTTP response&lt;/strong&gt; (token, user information, data based on roles…) to client.&lt;/p&gt;

&lt;p&gt;For more details, implementation and Github, please visit:&lt;br&gt;
&lt;a href="https://bezkoder.com/node-js-jwt-authentication-mysql/"&gt;https://bezkoder.com/node-js-jwt-authentication-mysql/&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#further-reading" class="anchor"&gt;
  &lt;/a&gt;
  Further Reading
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/node-js-express-sequelize-mysql/"&gt;Node.js Rest APIs example with Express, Sequelize &amp;amp; MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/node-js-mongodb-auth-jwt/"&gt;Node.js + MongoDB: User Authentication &amp;amp; Authorization with JWT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/node-js-jwt-authentication-postgresql/"&gt;Node.js + PostgreSQL: User Authentication &amp;amp; Authorization with JWT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fullstack (JWT Authentication &amp;amp; Authorization example):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/node-express-vue-jwt-auth/"&gt;Node.js Express + Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/node-js-express-angular-jwt-auth/"&gt;Node.js Express + Angular 8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/node-js-express-angular-10-jwt-auth/"&gt;Node.js Express + Angular 10&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/node-js-angular-11-jwt-authentication/"&gt;Node.js Express + Angular 11&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bezkoder.com/react-express-authentication-jwt/"&gt;Node.js Express + React&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Deployment: &lt;a href="https://bezkoder.com/deploy-node-js-app-heroku-cleardb-mysql/"&gt;Deploying/Hosting Node.js app on Heroku with MySQL database&lt;/a&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>javascript</category>
      <category>security</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Boost YouTube's Volume Beyond 100% (without an extension)</title>
      <author>Ankit Singh</author>
      <pubDate>Fri, 25 Dec 2020 02:01:15 +0000</pubDate>
      <link>https://dev.to/dabalyan/boost-youtube-s-volume-beyond-100-without-an-extension-1mf0</link>
      <guid>https://dev.to/dabalyan/boost-youtube-s-volume-beyond-100-without-an-extension-1mf0</guid>
      <description>&lt;p&gt;We've all seen those videos with sound in negative decibels. Sometimes even external-speakers are not enough. (i.e.: 100% YT, 100% PC, 100% Speakers, is still not enough)&lt;/p&gt;

&lt;p&gt;There are browser-extensions out there that can help you with it, but personally, I have trust issues with extensions, so I only use 2 or 3 of the very popular ones, and even those are allowed to only run &lt;strong&gt;OnClick&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We still need an extension like functionality without an extension. And that's exactly what Bookmarklets are for.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Bookmarklets are nothing but special browser-bookmarks that contain JavaScript code instead of a URL, which get executed on click.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let's create a Bookmarklet for our VolumeBooster™.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1" class="anchor"&gt;
  &lt;/a&gt;
  Step #1
&lt;/h3&gt;

&lt;p&gt;The code to boost the volume of YouTube video player.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Boost&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;boosterGainNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;video&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;audioCtx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mediaSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;audioCtx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createMediaElementSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gainNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;audioCtx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createGain&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;mediaSource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;audioCtx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;boosterGainNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;boosterGainNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseFloat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Enter Boost Level. eg: 3 (enter 1 to reset)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-2" class="anchor"&gt;
  &lt;/a&gt;
  Step #2
&lt;/h3&gt;

&lt;p&gt;Minify the code, and make it an IIFE, so that it executes on click.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-3" class="anchor"&gt;
  &lt;/a&gt;
  Step #3
&lt;/h3&gt;

&lt;p&gt;Append &lt;code&gt;javascript:&lt;/code&gt; to the minified IIFE, and voila we've got a Bookmarklet.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="nx"&gt;javascript&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;boosterGainNode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;querySelector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;video&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;audioCtx&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;AudioContext&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;mediaSource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;audioCtx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createMediaElementSource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;video&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gainNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;audioCtx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createGain&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="nx"&gt;mediaSource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;audioCtx&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;destination&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;boosterGainNode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gainNode&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;boosterGainNode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gain&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;parseFloat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;prompt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Enter Boost Level. eg: 3 (enter 1 to reset)&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;??&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;})();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#step-4" class="anchor"&gt;
  &lt;/a&gt;
  Step #4
&lt;/h3&gt;

&lt;p&gt;Go to your browser's bookmarks/favorites manager, and create a new bookmark.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;In the "name" field fill a name like &lt;strong&gt;VolumeBooster&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;In the "URL" field paste the bookmarklet code. (from step #3)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#step-5" class="anchor"&gt;
  &lt;/a&gt;
  Step #5
&lt;/h3&gt;

&lt;p&gt;Make sure that the browser didn't remove &lt;code&gt;javascript:&lt;/code&gt; from the URL/code. Add it back if it got removed. Save the bookmark.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-6-profit" class="anchor"&gt;
  &lt;/a&gt;
  Step #6 Profit 💹
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Play any YouTube video. (the ones that have a really low sound)&lt;/li&gt;
&lt;li&gt;Click on the &lt;strong&gt;VolumeBooster&lt;/strong&gt; bookmark.&lt;/li&gt;
&lt;li&gt;Put in a boost level number (e.g.: 2, 3, 4) in the prompt and hit enter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;0&lt;/code&gt; means mute.&lt;br&gt;
&lt;code&gt;1&lt;/code&gt; means normal. (default level)&lt;br&gt;
You can also put float values.&lt;/p&gt;




&lt;p&gt;Source: &lt;a href="https://stackoverflow.com/a/43794379"&gt;https://stackoverflow.com/a/43794379&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This booster can be used on any website that uses a &lt;code&gt;video&lt;/code&gt; Element for videos.&lt;/p&gt;




&lt;p&gt;Merry Christmas and Happy New Year 🎉🎄🎅&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>PHP vs Node.js</title>
      <author>Nathan Pham</author>
      <pubDate>Fri, 25 Dec 2020 01:04:20 +0000</pubDate>
      <link>https://dev.to/phamn23/php-vs-node-js-5955</link>
      <guid>https://dev.to/phamn23/php-vs-node-js-5955</guid>
      <description>&lt;p&gt;Web development is constantly changing. In order to stay relevant, programmers must analyze trends and learn the next "big" technology stack. The debate between PHP and Node.js is fairly old news. That being said, let's review some of the pros and cons of using either language from a developer standpoint. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#background" class="anchor"&gt;
  &lt;/a&gt;
  Background
&lt;/h2&gt;

&lt;p&gt;Node.js is rapidly growing and was quickly adopted by Netflix and Walmart. By contrast, PHP is slowly declining. However, the language is still being widely used due to the popularity of PHP content manager systems like Drupal and Wordpress. Surveys suggest that nearly 80% of today's websites were created with PHP, whereas a mere 4% were created with Node.js. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#what-is-php" class="anchor"&gt;
  &lt;/a&gt;
  What is PHP?
&lt;/h3&gt;

&lt;p&gt;No, PHP is not a dinosaur that went extinct (although that was a good guess). PHP is a scripting language well suited for web development because you can embed server-side code directly into HTML. PHP features a loose typing system and object-oriented features (classes). Here's what "Hello World" looks like in PHP.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#what-is-nodejs" class="anchor"&gt;
  &lt;/a&gt;
  What is Node.js?
&lt;/h3&gt;

&lt;p&gt;Node.js is a JavaScript runtime environment. Running on Google's high performance V8 engine, Node.js gave client side JavaScript the power of a standalone application capable of running servers. Node.js is single-threaded, asynchronous, and very scalable. Here's what "Hello World" looks like in Node.js.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;http&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;createServer&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;req&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;res&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello World&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;listen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8080&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#comparing-development-environments" class="anchor"&gt;
  &lt;/a&gt;
  Comparing Development Environments
&lt;/h2&gt;

&lt;p&gt;Neither PHP nor Node.js is difficult to set up on a local environment. Both can be integrated with VS Code or another editor. With XAMPP, setting up PHP servers are relatively painless. Just click a few buttons to enable Apache and MySQL and you have a fully featured server running on localhost. Building servers from scratch in Node.js takes far more effort, but half of the language's power comes from frameworks like Express anyways. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-php" class="anchor"&gt;
  &lt;/a&gt;
  Advantages of PHP
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#compatibility" class="anchor"&gt;
  &lt;/a&gt;
  Compatibility
&lt;/h3&gt;

&lt;p&gt;With many different server and platform options to chose from, PHP can literally run on any configuration or operating system necessary for hosting a website.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stability" class="anchor"&gt;
  &lt;/a&gt;
  Stability
&lt;/h3&gt;

&lt;p&gt;PHP has been around for a while and is still actively being developed. Programmers are continuously updating and improving the stability and security of PHP. This is not to say Node.js doesn't have its own community of developers - just that PHP has been around much longer. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#easy-use" class="anchor"&gt;
  &lt;/a&gt;
  Easy Use
&lt;/h3&gt;

&lt;p&gt;Developers without much technical background in PHP could probably make an entire blog or e-commerce websites because of the built-in functions and integration with MySQL. Node.js can make MySQL connections, but production apps often abstract queries behind an API layer (which can take longer to set up). &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-php" class="anchor"&gt;
  &lt;/a&gt;
  Disadvantages of PHP
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#modularity" class="anchor"&gt;
  &lt;/a&gt;
  Modularity
&lt;/h3&gt;

&lt;p&gt;The possibility of integrating HTML with a server makes it difficult to update or extend existing applications. With the help of powerful frameworks, JavaScript programs rarely face these problems.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#obselete-model" class="anchor"&gt;
  &lt;/a&gt;
  Obselete Model
&lt;/h3&gt;

&lt;p&gt;PHP's age is as much as a bonus as it is a disadvantage. Traditional techniques of HTML rendering and creating database connections are slow and rigid. Node.js is pioneering new rendering models, such as the JAM stack with serverless functions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#advantages-of-nodejs" class="anchor"&gt;
  &lt;/a&gt;
  Advantages of Node.js
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#low-learning-curve" class="anchor"&gt;
  &lt;/a&gt;
  Low Learning Curve
&lt;/h3&gt;

&lt;p&gt;JavaScript is an extremely popular programming language and is necessary to provide complex user interactions on web applications. Node.js is essentially an extension of JavaScript. Nearly all features supported by modern browsers (ie: ES6) are also compatible in Node.js. Once you know client side development with JS, it is much easier to become a full-stack engineer by learning Node.js rather than learning an entire set of technologies that can be paired with PHP. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#flexible" class="anchor"&gt;
  &lt;/a&gt;
  Flexible
&lt;/h3&gt;

&lt;p&gt;There is no set programming style that should be used when developing Node.js applications. In addition, the large range of available modules shipped with NPM makes developing applications easier to implement. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#fast" class="anchor"&gt;
  &lt;/a&gt;
  Fast
&lt;/h3&gt;

&lt;p&gt;The V8 engine and asynchronous nature of JS allows Node.js to handle far more requests than PHP can in a shorter amount of time. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#disadvantages-of-nodejs" class="anchor"&gt;
  &lt;/a&gt;
  Disadvantages of Node.js
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#cpu" class="anchor"&gt;
  &lt;/a&gt;
  CPU
&lt;/h3&gt;

&lt;p&gt;Node.js is single threaded, making it less than ideal when handling graphics, audio, or video. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#immature" class="anchor"&gt;
  &lt;/a&gt;
  Immature
&lt;/h3&gt;

&lt;p&gt;Node.js hasn't been exposed to the market for that long in comparison to PHP. In addition, many NPM modules are untested or unstable, creating security loopholes that are difficult to eliminate when developing a production application.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#closing-thoughts" class="anchor"&gt;
  &lt;/a&gt;
  Closing Thoughts
&lt;/h2&gt;

&lt;p&gt;It is difficult to say whether PHP or Node.js is better than the other. In fact, it really depends on the type of application you are trying to build. For example, it would be much easier to build a Single Page Application (SPA) with Node.js because frameworks exist to simplify the process. However, you may find that it is easier to deploy PHP applications simply because it is supported on nearly every server. &lt;/p&gt;

</description>
      <category>programming</category>
      <category>php</category>
      <category>node</category>
    </item>
    <item>
      <title>Step up your Regex game</title>
      <author>blakewood84</author>
      <pubDate>Fri, 25 Dec 2020 00:15:38 +0000</pubDate>
      <link>https://dev.to/blakecodez/step-up-your-regex-game-5689</link>
      <guid>https://dev.to/blakecodez/step-up-your-regex-game-5689</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Learning Regex (Regular Expressions) is not fun or easy at first, but it is a beyond important skill when strategizing solving problems with strings. Here is a brief overview on ways to best learn regex, tutorials on regex, and cheat sheets.&lt;/p&gt;
&lt;/blockquote&gt;




&lt;h2&gt;
  &lt;a href="#" class="anchor"&gt;
  &lt;/a&gt;
  &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nHpN_L51--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/i/r96w4h2zbgzglrh01pm0.jpg" alt="Alt Text"&gt;
&lt;/h2&gt;

&lt;p&gt;When I first saw &lt;strong&gt;Regex&lt;/strong&gt; I immediately said what the heck is this!? I knew right off the bat it required some time and concentration to get it right and wrote it off as a “I’ll try this later” kind of deal. I kept pushing it off and thought, hey I’ll just code my way out of problems, no big deal. Was I ever wrong! In one of my most recent technical interviews, guess what? Regex came up!&lt;/p&gt;

&lt;p&gt;Regex is very important, not only for solving problems that manipulate strings, but are widely used in text-editors, to search for data, filtering results, matching passwords, matching emails, validating forms, etc. You can go from solving a string manipulation problem on &lt;strong&gt;CodeWars&lt;/strong&gt; or &lt;strong&gt;HackerRank&lt;/strong&gt; in &lt;em&gt;n&lt;/em&gt; time to cutting that time in half with Regex! This goes to show you how valuable Regex really is!&lt;/p&gt;

&lt;p&gt;So began my process to understanding &lt;strong&gt;Regex&lt;/strong&gt; completely. I don’t want to strive to just solving problems by brute force, but rather I’d like to be efficient as possible. Hence the quote, “think smarter not harder”.&lt;/p&gt;

&lt;p&gt;Below I felt are the best ways to obtain that &lt;strong&gt;Regex&lt;/strong&gt; knowledge, going from beginner to intermediate, and well advanced? If you want to be advanced you need to practice Regex on the reg, and if you set your mind to it you will achieve it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#first-steps" class="anchor"&gt;
  &lt;/a&gt;
  First Steps:
&lt;/h2&gt;

&lt;p&gt;You understand you need to learn Regex but where do you start??&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#step-1-take-a-tutorial" class="anchor"&gt;
  &lt;/a&gt;
  Step 1 — Take a tutorial:
&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Well praise God for &lt;strong&gt;DuckDuckGo&lt;/strong&gt; (I only use DuckDuckGo) and Google, here are some pretty cool sites that offer a step-by-step learning process that will surely help. I like the fact that a few of these offer quizzes at the end.&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;RegexOne&lt;/strong&gt; —  &lt;a href="https://regexone.com/"&gt;https://regexone.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Learn Regex&lt;/strong&gt; — &lt;a href="https://learn-regex.com/"&gt;https://learn-regex.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;RegularExpressions.Info Tutorial&lt;/strong&gt; —  &lt;a href="https://www.regular-expressions.info/tutorial.html"&gt;https://www.regular-expressions.info/tutorial.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Mozilla Regular Expressions&lt;/strong&gt; (Use this to see how to code with Regex for beginners) — &lt;a href="https://www.regular-expressions.info/tutorial.html"&gt;https://www.regular-expressions.info/tutorial.html&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;W3Schools JS Regex Tutorial&lt;/strong&gt; —  &lt;a href="https://www.w3schools.com/jsref/jsref_obj_regexp.asp"&gt;https://www.w3schools.com/jsref/jsref_obj_regexp.asp&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Javascript.info Regular Expressions&lt;/strong&gt; — &lt;a href="https://javascript.info/regular-expressions"&gt;https://javascript.info/regular-expressions&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#step-2-practice-on-codewars-or-hackerrank" class="anchor"&gt;
  &lt;/a&gt;
  Step 2 — Practice on &lt;strong&gt;CodeWars&lt;/strong&gt; or &lt;strong&gt;HackerRank&lt;/strong&gt;:
&lt;/h3&gt;

&lt;p&gt;Definitely start immediately on using Regex to solve problems when strings are present. The best place to do this is to go to &lt;strong&gt;CodeWars&lt;/strong&gt; and &lt;strong&gt;HackerRank&lt;/strong&gt; and start from the beginning. Whenever I start learning something new or need to refresh, I create a new account on these and start from the beginning and I always learn something new coding.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Another thing to note is it helps to solve these problems first on something familiar and helpful to you uniquely. I often create a new Repl.it and solve the problem there, then paste the solution in the HackerRank or CodeWars editor to solve. Just drag some of the arrays or data their using for the initial tests and run your solution on them. There are other online code editors such as JS Bin, PlayCode, or JS Fiddle that work great as well.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here are a few sample problems that should be simple enough to use Regex on:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;CodeWars&lt;/strong&gt; — &lt;em&gt;Your order, please&lt;/em&gt;: &lt;a href="https://www.codewars.com/kata/your-order-please"&gt;https://www.codewars.com/kata/your-order-please&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CodeWars&lt;/strong&gt; — &lt;em&gt;Jaden Casing&lt;/em&gt;:  &lt;a href="https://www.codewars.com/kata/5390bac347d09b7da40006f6"&gt;https://www.codewars.com/kata/5390bac347d09b7da40006f6&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;CodeWars&lt;/strong&gt; — &lt;em&gt;Collection of Strings&lt;/em&gt; (problems involving strings)_:  &lt;a href="https://preview.codewars.com/collections/strings-130"&gt;https://preview.codewars.com/collections/strings-130&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;HackerRank&lt;/strong&gt; — &lt;em&gt;Solve Regex (list of Regex Problems)&lt;/em&gt;:  &lt;a href="https://www.hackerrank.com/domains/regex"&gt;https://www.hackerrank.com/domains/regex&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#step-3-optional-find-videos-on-youtube-udemy-or-other-sites" class="anchor"&gt;
  &lt;/a&gt;
  Step 3 (optional) — Find videos on YouTube, Udemy, or other sites:
&lt;/h3&gt;

&lt;p&gt;If you want to be good at something and you need a visual kick or walk through just look up some videos to help follow along. This is just a suggestion and everyone has their own unique preference for people they like to follow along with. Get busy and do some searching!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#second-steps" class="anchor"&gt;
  &lt;/a&gt;
  Second Steps:
&lt;/h2&gt;

&lt;p&gt;You’ve learned the regex basics but where to go from here? Start your own projects immediately! The only way to really learn and commit those things to memory is straight up creating or building some projects yourself with 0 help from tutorials or anyone else. This is the only way to learn.&lt;/p&gt;

&lt;p&gt;Here are some ideas for first projects:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Create a Regex Matcher&lt;/strong&gt; — create a project where you can test a regex on a string, highlighting the exact matches on the string with the regex you provided. Give a simple “Success!” or “Failed” somewhere based on strings you’re evaluating to match.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Create a search filter bar&lt;/strong&gt;: return only data sets that match the input given of a string. An example of this would be &lt;strong&gt;Netflix&lt;/strong&gt; or &lt;strong&gt;DisneyPlus&lt;/strong&gt;. Return only the videos that match or similar to what you are searching for in the search bar. There are a million ways to come up with your own version of this.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#useful-tools" class="anchor"&gt;
  &lt;/a&gt;
  Useful Tools:
&lt;/h2&gt;

&lt;p&gt;Keep practicing Regex. Here are some useful tools and cheat sheets to promote your growth!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#cheat-sheets" class="anchor"&gt;
  &lt;/a&gt;
  Cheat Sheets:
&lt;/h3&gt;

&lt;p&gt;Use these when referencing Regex on the go when using in your own projects and &lt;strong&gt;CodeWars&lt;/strong&gt; or &lt;strong&gt;HackerRank&lt;/strong&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Regex Tutorial&lt;/strong&gt; — &lt;em&gt;A quick cheat sheet by example by Johnny Fox&lt;/em&gt;:  &lt;a href="https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285"&gt;https://medium.com/factory-mind/regex-tutorial-a-simple-cheatsheet-by-examples-649dc1c3f285&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Ultimate Regex Cheatsheet&lt;/strong&gt; — &lt;a href="https://www.keycdn.com/support/regex-cheatsheet"&gt;https://www.keycdn.com/support/regex-cheatsheet&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#practicing-your-regex" class="anchor"&gt;
  &lt;/a&gt;
  Practicing your Regex:
&lt;/h3&gt;

&lt;p&gt;Use these Regex engines to practice on. Will come in handy for writing out your Regex before you drop it into code when learning.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Regexr.com&lt;/strong&gt; — &lt;a href="https://regexr.com/"&gt;https://regexr.com/&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Regex101.com&lt;/strong&gt; — &lt;a href="https://regex101.com/"&gt;https://regex101.com/&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I hope you were able to get some value out of everything in this article. Just know that if you are struggling in programming or coding, there is always a solution and you can do it. No matter what never give up and keep growing. Everyone is unique, and the way you learn is to, you just have to make it fun and adapt to what works for you!&lt;/p&gt;

&lt;p&gt;If you are someone who's worked with &lt;strong&gt;Regex&lt;/strong&gt; before or have some knowledge on the subject, I have a few questions for you! What sites helped you grow/learn with &lt;strong&gt;Regex&lt;/strong&gt;? What projects did you work on that helped as well?  Please share below in the comments because I'd definitely like to know and I'm sure others would to!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bless&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>regex</category>
      <category>beginners</category>
      <category>devjournal</category>
    </item>
    <item>
      <title>Make coding a joy with these core VSCode extensions and settings</title>
      <author>Adam Coster</author>
      <pubDate>Thu, 24 Dec 2020 21:58:02 +0000</pubDate>
      <link>https://dev.to/adamcoster/make-coding-a-joy-with-these-core-vscode-extensions-and-settings-5b5b</link>
      <guid>https://dev.to/adamcoster/make-coding-a-joy-with-these-core-vscode-extensions-and-settings-5b5b</guid>
      <description>&lt;p&gt;Visual Studio Code (VSCode) has rapidly become the favored editor/IDE for a huge swath of web developers. This is in no small part due to its robust extensions marketplace and the fact that you can change how pretty much every little aspect works.&lt;/p&gt;

&lt;p&gt;I've been using it for the past few years of webdev work with a myriad of technologies (Node.js, Typescript, vanilla JavaScript, Vue.js, Svelte.js, HTML/CSS, Docker, and on and on), and it's only let me down when I strayed too far from web technologies.&lt;/p&gt;

&lt;p&gt;Below are the core extensions and settings I've settled on for general JavaScript/Node-centered web development, that have collectively made my work an absolute joy.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#vscode-extensions" class="anchor"&gt;
  &lt;/a&gt;
  VSCode Extensions
&lt;/h3&gt;

&lt;p&gt;There are extensions for pretty much everything, and you'll definitely need to track down the best ones for your particular technology stack. For most JavaScript-based stacks, the following extensions form a great core:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;ESLint&lt;/a&gt; is basically required. You'll still have to install ESLint locally (&lt;code&gt;npm i eslint&lt;/code&gt;) or globally (&lt;code&gt;npm i -g eslint&lt;/code&gt;) via npm.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=eg2.vscode-npm-script"&gt;npm&lt;/a&gt; for validating your &lt;code&gt;package.json&lt;/code&gt; file. It'll show you any obvious errors in VSCode when you have your &lt;code&gt;package.json&lt;/code&gt; file open.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=christian-kohler.npm-intellisense"&gt;npm intellisense&lt;/a&gt; for autocompleting import/require statements.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense"&gt;Path Intellisense&lt;/a&gt; for autocompleting things that look like paths, making it much easier to correctly type out file/folder paths.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=aaron-bond.better-comments"&gt;Better Comments&lt;/a&gt; for comment highlighting based on keywords.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=HookyQR.beautify"&gt;Beautify&lt;/a&gt; for cleaning up janky-looking files of various types. Use with &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; → &lt;code&gt;beau&lt;/code&gt; and choose the option you want.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=wmaurer.change-case"&gt;change-case&lt;/a&gt; for toggling between all the classic casing strategies. Particularly great for converting snake-cased JavaScript into kebab-cased HTML. Use with &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; and then starting typing the case name you want to convert to.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://marketplace.visualstudio.com/items?itemName=mohsen1.prettify-json"&gt;Prettify JSON&lt;/a&gt; to make JSON readable. Use with &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; → &lt;code&gt;prett&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#vscode-settings" class="anchor"&gt;
  &lt;/a&gt;
  VSCode Settings
&lt;/h3&gt;

&lt;p&gt;Code environment settings can be very personal, or can be dictated from above for matching across a team. In any event, here are the ones I've settled on over time (to edit yours in VSCode, &lt;code&gt;Ctrl+Shift+P&lt;/code&gt; then &lt;code&gt;Preferences: Open Settings (JSON)&lt;/code&gt; ):&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"editor.fontFamily"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"'Fira Code', Consolas, 'Courier New', monospace"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"editor.fontLigatures"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"js/ts.implicitProjectConfig.checkJs"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"eslint.validate"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"javascript"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"vue"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"typescript"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"git.autofetch"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"terminal.integrated.shell.windows"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"C:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Program Files&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;Git&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;bin&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;bash.exe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"terminal.integrated.shellArgs.windows"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"-l"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If you want to use the &lt;a href="https://github.com/tonsky/FiraCode"&gt;Fira Code font&lt;/a&gt;, you'll need to first install it.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;terminal...&lt;/code&gt; fields are for setting Git Bash as the default terminal, if that's the sort of thing you're into.&lt;/p&gt;

</description>
      <category>vscode</category>
      <category>webdev</category>
      <category>javascript</category>
      <category>node</category>
    </item>
    <item>
      <title>An Introduction to Cybersecurity, Capture the Flag Contests, and Basic Security Concepts</title>
      <author>Siddhant Dubey</author>
      <pubDate>Thu, 24 Dec 2020 20:32:12 +0000</pubDate>
      <link>https://dev.to/siddhantdubey/an-introduction-to-cybersecurity-capture-the-flag-contests-and-basic-security-concepts-5ga2</link>
      <guid>https://dev.to/siddhantdubey/an-introduction-to-cybersecurity-capture-the-flag-contests-and-basic-security-concepts-5ga2</guid>
      <description>&lt;p&gt;Cybersecurity is important, there’s no dodging that fact. It is also nothing like the hacking that is shown in most popular media.&lt;/p&gt;

&lt;p&gt;However, that does not mean it isn’t interesting, it is undoubtedly so. Due to this intrigue, lots of people want to dip their feet into cybersecurity, myself included, and I have found &lt;em&gt;capture the flag events&lt;/em&gt; (CTFs) to be a wonderful way to get a taste of the field.&lt;/p&gt;

&lt;p&gt;Now, by no means are CTFs completely accurate in the day-to-day work of a cybersecurity professional but they are very educational and they do help people develop their cybersecurity skillsets, as well as just being fun to participate in.&lt;/p&gt;

&lt;p&gt;In addition, if you are a programmer, these will give you an insight into the way you should design your programs so that they are not vulnerable to malevolent users. You don’t want to be the person that stored all their passwords in plain text.&lt;/p&gt;

&lt;p&gt;If you gain value from this post consider following me on &lt;a href="https://twitter.com/sidcodes"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.siddcodes.com/"&gt;subscribing to my email newsletter&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-ctf" class="anchor"&gt;
  &lt;/a&gt;
  What Is a CTF?
&lt;/h2&gt;

&lt;p&gt;At this point, you may be asking yourself: “Cool, but what is a CTF?”&lt;/p&gt;

&lt;p&gt;Essentially, it is a team cybersecurity competition of which there are three main types:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Jeopardy:** **These have a collection of tasks in several distinct categories: web exploits, binary exploitation, reverse engineering, forensics, and cryptography. By solving these challenges, you find “flags” which typically follow a standard format like flag{Th1s_1s_a_flag}. Some examples include &lt;a href="https://picoctf.com/"&gt;picoCTF&lt;/a&gt; and &lt;a href="https://www.defcon.org/html/links/dc-ctf.html"&gt;Defcon CTF&lt;/a&gt;’s qualification round.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Attack-Defense: In attack-defense competitions, each team is given their own host or service and is tasked with protecting that host from other teams while also trying to exploit other teams’ hosts. Famously, the Defcon CTF final takes this format.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Mixed:** **As can be inferred by the name of this type of competition, it is some sort of combination of jeopardy and attack-defense competitions.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In this article, I will be mainly focusing on the jeopardy-type CTF. In the future, I may write another article on attack-defense competitions.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-are-all-those-categories" class="anchor"&gt;
  &lt;/a&gt;
  What Are All Those Categories?
&lt;/h2&gt;

&lt;p&gt;Before you get into all of the cool categories in jeopardy contests that I mentioned earlier, you need to learn the basics. Most importantly, you need to familiarize yourself with the Linux terminal.&lt;/p&gt;

&lt;p&gt;Here are a couple of commands that you will use over, and over, and over again:&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ls: This command lists out all the files and subdirectories that you are currently in.

pwd: This prints your current working directory. If you are in the documents directory, this will return documents.

cd: This command changes the directory into any of the subdirectories of the current directory. Eg: If you have an essays folder in your documents folder and your current directory is documents, cd essays, will take you to your essays folder.
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;These are the absolute basics for the Linux terminal and there are a lot more commands that we will cover in the rest of this article.&lt;/p&gt;

&lt;p&gt;To succeed in CTFs, it is also important to know:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A scripting language, most popular of which is &lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt;. There are a lot of cool libraries for cybersecurity in Python, including &lt;a href="http://docs.pwntools.com/en/stable/"&gt;pwn&lt;/a&gt; which has a lot of functions that are helpful for CTFs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Number bases. Having an understanding of how this works is very helpful.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JavaScript: Doing good work in web exploitation needs knowledge of JavaScript as well as some SQL for SQL injections.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is also advisable to have a UNIX-based operating system because of all the amazing tools that are readily available on Linux, this can be done in a virtual box, no changing your main OS necessary. However, you can still participate in CTFs on Windows.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Time to start digging into some heavier stuff.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cryptography" class="anchor"&gt;
  &lt;/a&gt;
  Cryptography
&lt;/h2&gt;

&lt;p&gt;Cryptography challenges consist of exactly what you think they would, codebreaking. Given a ciphertext, can you decode it into the original message? Can you do the opposite?&lt;/p&gt;

&lt;p&gt;These types of problems include an encrypted message that you have to decrypt. To prepare for these, it is best to learn different types of ciphers and how to decrypt them.&lt;/p&gt;

&lt;p&gt;Here are some common methods of encryption in these challenges: Caesar Ciphers, Vigenère Ciphers, and RSA. For more info on how to decrypt these, &lt;a href="https://ctf101.org/cryptography/overview/"&gt;check out this link.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#steganography" class="anchor"&gt;
  &lt;/a&gt;
  Steganography
&lt;/h2&gt;

&lt;p&gt;Steganography is not cryptography by definition but it does involve hiding messages in plain sight. As a result, many CTF organizers will include steganography challenges in the cryptography section.&lt;/p&gt;

&lt;p&gt;Steganography consists of hiding messages in media files, typically audio and images. It is important to note that there aren’t a lot of real applications in the field of cybersecurity with steganography, other than just increasing your knowledge.&lt;/p&gt;

&lt;p&gt;There is a multitude of ways to do this and not enough space in this general-purpose article to cover them all, so here is an in-depth article about steganography:&lt;br&gt;
&lt;a href="https://medium.com/@FourOctets/ctf-tidbits-part-1-steganography-ea76cc526b40"&gt;&lt;strong&gt;CTF Tidbits: Part 1 — Steganography&lt;/strong&gt;&lt;br&gt;
*I have been asked by a few folks what tools I use for CTF’s. What I use all depends on what the CTF is. There are all…*medium.com&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#binary-exploitation" class="anchor"&gt;
  &lt;/a&gt;
  Binary Exploitation
&lt;/h2&gt;

&lt;p&gt;Binary exploitation involves finding vulnerabilities in a program, typically Linux executables, and then exploiting these vulnerabilities to obtain the flag.&lt;/p&gt;

&lt;p&gt;These exploitations usually involve either using the program to gain control of a shell or just modifying the program to yield the flag. This is an extremely broad field and &lt;a href="https://ctf101.org/binary-exploitation/overview/"&gt;some helpful tips can be found here.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#forensics" class="anchor"&gt;
  &lt;/a&gt;
  Forensics
&lt;/h2&gt;

&lt;p&gt;Forensics challenges in CTFs typically have the following aspects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;File format analysis: Given various files that have something wrong with them, can you fix them? Can you fix a corrupt file to produce a flag?&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Memory dump analysis: Taking a look at the memory of the system and seeing if any important information can be learned.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Steganography: Yes, steganography appears in the forensics section as well.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Packet capture analysis: A packet is a segment of data sent from one device to another device over a network. A lot of information can be gleaned from packets and there are a lot of programs for packet analysis and capture out there. Possibly the most popular is &lt;a href="https://www.wireshark.org/"&gt;Wireshark&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is something that goes into a &lt;a href="https://trailofbits.github.io/ctf/forensics/"&gt;lot of detail on this topic&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#web-exploitation" class="anchor"&gt;
  &lt;/a&gt;
  Web Exploitation
&lt;/h2&gt;

&lt;p&gt;Web exploitation challenges have the contestant retrieve the flag from exploiting websites and web apps. There are a couple of ways to do this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SQL injections: Sometimes, the creator of a web app unintentionally makes it so that SQL code can be inputted. This provides a golden opportunity for the exploiter to use SQL to obtain information from the databases of the web app.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Just inspecting element: In the easier stages of contests, event organizers may just hide flags in the HTML of the website. They may also have a JavaScript function that needs to take in a certain input to spit out the flag, these can be done with inspect element and some problem-solving skills.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Directory traversal: If an application takes in a directory as input and this input is not properly checked, the attacker can mess with the directories to their heart’s desire.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;XSS (cross-site scripting): This is when the attacker can send JavaScript that will be executed by the browser of another user of the web app.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Command injection: Sometimes, developers forget to properly check for input that goes into a system’s shell. If not properly checked, the attacker can send whatever system commands they want to the web app.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more in-depth information on the above topics, take a look at this &lt;a href="https://ctf101.org/web-exploitation/overview/"&gt;wonderful resource.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reverse-engineering" class="anchor"&gt;
  &lt;/a&gt;
  Reverse Engineering
&lt;/h2&gt;

&lt;p&gt;As the name suggests, these types of challenges are based around reverse-engineering a program to figure out how to properly exploit it. The product of a successful exploit is the flag, as desired.&lt;/p&gt;

&lt;p&gt;These could be given in many programming languages but the following, especially the first two, tend to show up more than others:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Assembly: Reading this, you may be thinking that nobody codes in Assembly, on the contrary, quite a lot of people do. It is not extremely widespread but it used in the programming of embedded microsystems which are very relevant. This may be a bummer to learn but it is a fairly useful skill to know.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;C: Lots of programs are written in C and its control over memory allocation makes it a valuable programming language. Familiarity with C may help you do well in reverse engineering programs written in C.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Java: Java is a very popular programming language and has easily-readable code. Knowing Java will help you reverse engineer it tremendously so learning it if you don’t already know it is recommended.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is to be noted that there are a lot of times where you are not given the actual source code of the program and are just given the executable.&lt;/p&gt;

&lt;p&gt;To overcome this hurdle, we use *decompilers. *These programs try to convert the executable back into source code.&lt;/p&gt;

&lt;p&gt;A great example of a decompiler is &lt;a href="https://www.nsa.gov/resources/everyone/ghidra/"&gt;Ghidra&lt;/a&gt; which was created by the NSA. It is a very powerful tool and very good at it what it does. It would be advisable to have set this up on your computer.&lt;/p&gt;

&lt;p&gt;For a more in-depth explanation of reverse engineering, take a look at this &lt;a href="https://ctf101.org/reverse-engineering/overview/"&gt;wonderful resource&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#beginnerfriendly-ctfs" class="anchor"&gt;
  &lt;/a&gt;
  Beginner-Friendly CTFs
&lt;/h2&gt;

&lt;p&gt;Alright, these CTF things seem cool, how do I participate in one?&lt;/p&gt;

&lt;p&gt;Well, future pwner, here’s a list of CTFs that are great for beginners. Note, not all of them are available right now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://picoctf.com/"&gt;picoCTF: Run by Carnegie Mellon University, this is geared towards middle and high school students and is available year-round.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://overthewire.org/wargames/"&gt;overthewire: This is great for beginners to learn and test their skills. Starting with the bandit challenge will help you build from zero.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://hsctf.com/"&gt;HSCTF: Another CTF made for high school students.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ctftime.org/event/list/upcoming"&gt;CTFtime: You can find a lot more CTFs here to practice and learn.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, get out there and capture those flags. Trust me, it is an incredible experience.&lt;/p&gt;

&lt;p&gt;If you gained value from this post consider following me on &lt;a href="https://twitter.com/sidcodes"&gt;Twitter&lt;/a&gt; and &lt;a href="https://www.siddcodes.com/"&gt;subscribing to my email newsletter&lt;/a&gt;. Every Sunday, I send out a newsletter that contains the best programming and learning-related content I’ve seen in the past week along with my own thoughts on the events of the week. The main goal of the newsletter is to bring meaningful and thought-provoking ideas to your inbox every Sunday. Consider signing up if you’re interested.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#a-giant-list-of-resources" class="anchor"&gt;
  &lt;/a&gt;
  A Giant List of Resources
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://trailofbits.github.io/ctf/web/exploits.html"&gt;Trail of bits&lt;/a&gt;: Lots of good information on CTFs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ctfs.github.io/resources/"&gt;CTFS Resources: Information on cryptography and forensics.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://ctf101.org/"&gt;CTF 101: A complete beginner’s guide to all things CTF.&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>cybersecurity</category>
      <category>tutorial</category>
      <category>computerscience</category>
      <category>security</category>
    </item>
    <item>
      <title>You don't need classes</title>
      <author>▲ LUKE知る</author>
      <pubDate>Thu, 24 Dec 2020 20:01:30 +0000</pubDate>
      <link>https://dev.to/lukeshiru/you-don-t-need-classes-jk4</link>
      <guid>https://dev.to/lukeshiru/you-don-t-need-classes-jk4</guid>
      <description>&lt;p&gt;A few years back, JavaScript added a long awaited feature to the language: &lt;strong&gt;Classes&lt;/strong&gt;. Developers coming from other languages with the classic object oriented paradigm where happy to find their old friend in JS, even if that old friend is just syntax sugar. So first, let's take a look at how classes actually work, and then we can tackle why you don't need them.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sugar-oh-honey-honey" class="anchor"&gt;
  &lt;/a&gt;
  Sugar, oh honey honey
&lt;/h2&gt;

&lt;p&gt;Let's just write the classic &lt;code&gt;Shape&lt;/code&gt; class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Shape&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shape&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nx"&gt;move&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nx"&gt;Shape&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;move&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This is just syntax sugar for functions and prototypes:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Shape&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shape&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;Shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;move&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Shape&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;constructor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Circle&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;move&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Basically, when you're using classes, you're already using functions, just with extra complexity on top. This might sound great for someone coming from an object oriented language, but if you think about it, now you need to deal with &lt;code&gt;this&lt;/code&gt;, you need to use &lt;code&gt;new&lt;/code&gt; when creating a new instance of that class, and so on.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#clean-instad-of-classy" class="anchor"&gt;
  &lt;/a&gt;
  Clean instad of classy
&lt;/h2&gt;

&lt;p&gt;Instead of trying to think everything as a class first, try to think about stuff as just values and process. So the same Shape example can be something like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createShape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;shape&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;moveShape&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;shape&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;shape&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;createCircle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;circle&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;radius&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="nx"&gt;createShape&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt; &lt;span class="p"&gt;}),&lt;/span&gt;
  &lt;span class="nx"&gt;radius&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createCircle&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="nx"&gt;moveShape&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="na"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt; &lt;span class="p"&gt;})(&lt;/span&gt;&lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;With this approach we have a few advantages over the classes one:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We don't have to think about &lt;code&gt;this&lt;/code&gt;, because we don't use it at all.&lt;/li&gt;
&lt;li&gt;We don't need to use &lt;code&gt;new&lt;/code&gt;, we just call functions that return values.&lt;/li&gt;
&lt;li&gt;We don't worry about mutations, because we never change values, we just take a value and return a new one. This is quite important when testing because state becomes predictable.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#do-you-actually-need-classes" class="anchor"&gt;
  &lt;/a&gt;
  Do you actually need classes?
&lt;/h2&gt;

&lt;p&gt;Now think about it for a minute: Do you really need classes at all, or are you just used to them? Before working in WebDev, I was a fan of C++, so naturally I loved classes, but as time went by I realize that every problem that I used to solve with a class, has a cleaner and simpler solution just using functions.&lt;/p&gt;

&lt;p&gt;Take a look at your code in the places you used classes, and try to think how you'll do that with just functions, and tell me if that solution isn't just better.&lt;/p&gt;

&lt;p&gt;Either way, thanks for reading this and if you don't agree with something said in here, just leave a comment and we can discuss it further.&lt;/p&gt;

&lt;p&gt;See you in the next post of this series!&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>codequality</category>
      <category>functional</category>
    </item>
    <item>
      <title>Getting the user's location with JavaScript</title>
      <author>Jonah Lawrence</author>
      <pubDate>Thu, 24 Dec 2020 17:07:54 +0000</pubDate>
      <link>https://dev.to/denvercoder1/getting-the-user-s-location-with-javascript-47m0</link>
      <guid>https://dev.to/denvercoder1/getting-the-user-s-location-with-javascript-47m0</guid>
      <description>&lt;p&gt;In this tutorial I will show you how to get the user's location with the JavaScript Geolocation API.&lt;/p&gt;

&lt;p&gt;You can use it to redirect them to a site in their language or on sites such as a News or &lt;a href="https://www.youtube.com/watch?v=WZNG8UomjSI"&gt;Weather App&lt;/a&gt; and use their location to adjust the home page to show content relevant for where they are.&lt;/p&gt;

&lt;p&gt;This article was originally a video tutorial, which you can check out here:&lt;/p&gt;

&lt;p&gt;&lt;iframe width="710" height="399" src="https://www.youtube.com/embed/JdJ2VBbYYTQ"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#checking-if-the-navigator-api-is-available" class="anchor"&gt;
  &lt;/a&gt;
  Checking if the navigator API is available
&lt;/h2&gt;

&lt;p&gt;The geolocation functions are part of the &lt;code&gt;window&lt;/code&gt; object can be accessed with &lt;code&gt;window.navigator.geolocation&lt;/code&gt; or simply &lt;code&gt;navigator.geolocation&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Some older browsers may not have support for the geolocation API, so you should use an if statement to check if it exists before using it:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cm"&gt;/* use the API here */&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#getting-the-users-coordinates" class="anchor"&gt;
  &lt;/a&gt;
  Getting the user's coordinates
&lt;/h2&gt;

&lt;p&gt;If your browser supports the API, you can use its methods. The method to get the user's coordinates is &lt;code&gt;navigator.geolocation.getCurrentPosition&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It requires as parameters, a success callback and optionally an error callback and options.&lt;/p&gt;

&lt;p&gt;To test it out, we can use &lt;code&gt;console.log&lt;/code&gt; as the the success callback function and &lt;code&gt;console.error&lt;/code&gt; as the error callback.&lt;/p&gt;

&lt;p&gt;One of these two functions will get called depending on whether the call is successful or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The user will be prompted to allow the site to access their location the first time this is used.&lt;/p&gt;

&lt;p&gt;Once permission is granted, you should see something like this in the JavaScript console:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json-doc"&gt;&lt;code&gt;&lt;span class="c"&gt;/* GeolocationPosition */&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="c"&gt;/* GeolocationCoordinates */&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"coords"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"accuracy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"altitude"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"altitudeAccuracy"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"heading"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"latitude"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;39.7501&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"longitude"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;-104.9957&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"speed"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"timestamp"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1608826371767&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;You will have a &lt;code&gt;GeolocationPosition&lt;/code&gt; object containing a &lt;code&gt;GeolocationCoordinates&lt;/code&gt; object labeled as &lt;code&gt;coords&lt;/code&gt; and a timestamp.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#success-function" class="anchor"&gt;
  &lt;/a&gt;
  Success function
&lt;/h2&gt;

&lt;p&gt;Instead of using &lt;code&gt;console.log&lt;/code&gt;, you can use a custom success callback to do exactly what you need to with the data.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// extracting the latitude and longitude from the data&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;latitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;longitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Your location: &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;latitude&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;, &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;This will tell the &lt;code&gt;getCurrentPosition&lt;/code&gt; function to call &lt;code&gt;success&lt;/code&gt; when it successfully looks up the location and send it the Geolocation Position as the parameter.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;success&lt;/code&gt; function above will extract the latitude and longitude and make a popup telling it to the user.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-if-you-want-to-know-their-city-or-country" class="anchor"&gt;
  &lt;/a&gt;
  What if you want to know their city or country?
&lt;/h2&gt;

&lt;p&gt;If you want to know where your user is located in a more meaningful way, you can look that up using a reverse geocoding API.&lt;/p&gt;

&lt;p&gt;There are many APIs available to do this. For this tutorial, I used the OpenCage API.&lt;/p&gt;

&lt;p&gt;Create a free account at &lt;a href="https://opencagedata.com/api"&gt;opencagedata.com&lt;/a&gt; and get an API key to use with your application.&lt;/p&gt;

&lt;p&gt;You can find a code snippet for reverse geocoding with OpenCage in their &lt;a href="https://opencagedata.com/tutorials/geocode-in-javascript"&gt;JavaScript documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can simplify it using modern JavaScript techniques:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;apikey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;your API key goes here&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;latitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;51.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;longitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;7.0&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.opencagedata.com/geocode/v1/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;key=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;apikey&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;q=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;encodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;pretty=1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;no_annotations=1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;formatted&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Assuming you have a valid API key from OpenCage, the snippet above should make an alert that says "Grüner Kuhweg, 51061 Cologne, Germany". That is the location for the coordinates 51.0, 7.0.&lt;/p&gt;

&lt;p&gt;If you log &lt;code&gt;data.results[0]&lt;/code&gt; in the console, you will see there are a few fields in addition to just the formatted address that you can access:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json-doc"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"bounds"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"northeast"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"lat"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;51.0008597&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"lng"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;7.0042934&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"southwest"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"lat"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;50.9973232&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"lng"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;6.999946&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"components"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ISO_3166-1_alpha-2"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"DE"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"ISO_3166-1_alpha-3"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"DEU"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"_category"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"road"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"_type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"road"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"city"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Cologne"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"city_district"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Mülheim"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"continent"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Europe"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"country"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Germany"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"country_code"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"de"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"political_union"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"European Union"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"postcode"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"51061"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"road"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Grüner Kuhweg"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"road_type"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"service"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"state"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"North Rhine-Westphalia"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"state_code"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"NW"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"suburb"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Flittard"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"confidence"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"formatted"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Grüner Kuhweg, 51061 Cologne, Germany"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"geometry"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lat"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;50.999559&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"lng"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mf"&gt;7.0002524&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#accessing-specific-components" class="anchor"&gt;
  &lt;/a&gt;
  Accessing specific components
&lt;/h2&gt;

&lt;p&gt;You can access any component of the returned JSON object.&lt;/p&gt;

&lt;p&gt;To access the user's city, we can say &lt;code&gt;data.results[0].components.city&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To get their country, we can say &lt;code&gt;data.results[0].components.country&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#reverse-geocoding-the-users-location" class="anchor"&gt;
  &lt;/a&gt;
  Reverse geocoding the user's location
&lt;/h2&gt;

&lt;p&gt;Now that we can access the user's coordinates and reverse geocode coordinates, we can put it all together:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;reverseGeocode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;apikey&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;your API key goes here&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;https://api.opencagedata.com/geocode/v1/json&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;?&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;key=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;apikey&lt;/span&gt;
        &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;q=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;encodeURIComponent&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;,&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;pretty=1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
        &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;&amp;amp;no_annotations=1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;results&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;formatted&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// extracting the latitude and longitude from the data&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;latitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;longitude&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;coords&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;// reverse geocode&lt;/span&gt;
    &lt;span class="nx"&gt;reverseGeocode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;latitude&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;longitude&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geolocation&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;getCurrentPosition&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;success&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The alert function at the end of the &lt;code&gt;reverseGeocode&lt;/code&gt; call can be replaced with any function you need to use the data for.&lt;/p&gt;

&lt;p&gt;In my video, &lt;a href="https://youtu.be/JdJ2VBbYYTQ"&gt;Getting the user's location with JavaScript&lt;/a&gt;, I show how this can be used in a weather app to display weather for the user's current location.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you found this tutorial useful.&lt;/p&gt;

&lt;p&gt;Check out the video for further explanations and be sure to like and subscribe!&lt;/p&gt;

&lt;p&gt;- Jonah Lawrence&lt;/p&gt;

&lt;p&gt;Twitter: &lt;a href="https://twitter.com/DenverCoder1"&gt;@DenverCoder1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;YouTube: &lt;a href="https://youtube.com/c/DevProTips"&gt;Jonah Lawrence - Dev Pro Tips&lt;/a&gt;&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
    </item>
    <item>
      <title>Worker Threads in Node.js</title>
      <author>Abdulhafeez Abdulraheem</author>
      <pubDate>Thu, 24 Dec 2020 16:07:59 +0000</pubDate>
      <link>https://dev.to/feezyhendrix/worker-threads-in-node-js-2ikh</link>
      <guid>https://dev.to/feezyhendrix/worker-threads-in-node-js-2ikh</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction" class="anchor"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Workers threads in Node.js are a way to offload CPU intensive tasks away from the single-threaded process which Node gives you. &lt;/p&gt;

&lt;p&gt;Firstly, we need to understand why you can't put a CPU intensive task in the main process of your Node.js instance. This is because Node.js is single-threaded and you only get one process out of the box, A process is a global object that has the information of what is being executed at the time. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#i-have-but-one-thread-to-give-nodejs" class="anchor"&gt;
  &lt;/a&gt;
  I have but One Thread to give - Node.js
&lt;/h3&gt;

&lt;p&gt;The decision to make Node.js single-threaded came from the decision of not changing the language design itself, Adding a multithread module to Javascript can change the way the language is written itself.&lt;/p&gt;

&lt;p&gt;Node.js has one event loop, this is what gives Node it's asynchronous nature by offloading operations to the system's kernel and getting back results through the use of callbacks, promises and async/await, thus we don't have to worry about concurrency problems. &lt;/p&gt;

&lt;p&gt;This can become an issue when you have a CPU intensive task to be executed. For example, performing synchronous tasks that takes a lot of time to be executed or has complex mathematical calculations that can block the thread while it's being executed, which means all other tasks to be executed at that time has to wait. If it was an API request any other HTTP request that comes in at that time would be blocked, which keeps the end-user waiting, A solution for this is the use of worker threads. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#working-with-worker-threads" class="anchor"&gt;
  &lt;/a&gt;
  Working with Worker Threads
&lt;/h3&gt;

&lt;p&gt;We would be using worker threads to calculate Fibonacci of numbers and also making use of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics"&gt;Atomics&lt;/a&gt; and Shared Buffers to help us handle race conditions between our threads.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Check out this wonderful article about Shared buffers and Atomics &lt;a href="https://www.sitepen.com/blog/the-return-of-sharedarraybuffers-and-atomics"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We can easily use the worker thread module by importing it into our file.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const { Worker } = require('worker_threads');
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#main-process" class="anchor"&gt;
  &lt;/a&gt;
  Main Process
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// main.js
const { Worker } = require("worker_threads");
const runFibonnaci = (nums) =&amp;gt; {
    // get the length of the array
    let length = nums.length;

    // int32 buffer of each element in the array
    let size = Int32Array.BYTES_PER_ELEMENT * length;

    // Create buffer for the size ofthe input array
    let sharedBuffer = new SharedArrayBuffer(size);
    let sharedArray = new Int32Array(sharedBuffer);


    for(let i = 0; i &amp;lt; length; i++ ) {
        // store each value into the shareArray 
        Atomics.store(sharedArray, i, nums[i]);

        // Spin up a new worker thread
        let worker = new Worker('./worker.js');

       // Once calculation is done print out result
        worker.once('message', (message) =&amp;gt; {
            console.log('Result received --- ', message);
        })

        // Send array data and index to worker thread.
        worker.postMessage({data: sharedArray, index: i});
    }
};

runFibonnaci([50, 20, 21, 24, 4 ]);
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;rubFibonnaci&lt;/code&gt; function accepts an array of numbers to be calculated in the worker thread, The &lt;code&gt;sharedBuffer&lt;/code&gt; variable is created using the &lt;code&gt;SharedArrayBuffer&lt;/code&gt; class from the &lt;code&gt;size&lt;/code&gt; variable which creates the size of the sharedArrayBuffer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// get the length of the array
    let length = nums.length;

    // int32 buffer of each element in the array
    let size = Int32Array.BYTES_PER_ELEMENT * length;

    // Create buffer for the size ofthe input array
    let sharedBuffer = new SharedArrayBuffer(size);
    let sharedArray = new Int32Array(sharedBuffer);
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;sharedArray&lt;/code&gt; variable is also created using the &lt;code&gt;int32Array&lt;/code&gt; class to create an array of 32 bit signed integers. We are use Atomics to store our &lt;code&gt;sharedArray&lt;/code&gt; so each worker thread can access the &lt;code&gt;shareArray&lt;/code&gt; variable from a single memory instance, Atomics only works with SharedArrayBuffers and ArrayBuffers. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;When memory is shared, multiple threads can read and write the same data in memory. Atomic operations make sure that predictable values are written and read, that operations are finished before the next operation starts and those operations are not interrupted. According to the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics"&gt;MDN Docs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We proceed to loop through through the &lt;code&gt;nums&lt;/code&gt; array passed into the &lt;code&gt;runFibonnaci&lt;/code&gt; function, then store each value, using the &lt;code&gt;Atomic.store&lt;/code&gt; static function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;for(let i = 0; i &amp;lt; length; i++ ) {
        // store each value into the shareArray 
        Atomics.store(sharedArray, i, nums[i]);

        // Spin up a new worker thread
        let worker = new Worker('./worker.js');

       // Once calculation is done print out result
        worker.once('message', (message) =&amp;gt; {
            console.log('Result received --- ', message);
        })

        // Send array data and index to worker thread.
        worker.postMessage({data: sharedArray, index: i});
   }
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;We then spin up a new worker thread and send the &lt;code&gt;sharedArray&lt;/code&gt; and the &lt;code&gt;index&lt;/code&gt; into the worker thread. The &lt;code&gt;worker.once('message')&lt;/code&gt; function is called once the worker thread has finished executing its task and returns a value, which we would see in the worker file below.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#worker-process" class="anchor"&gt;
  &lt;/a&gt;
  Worker Process
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// worker.js
const { Worker, isMainThread, parentPort } = require('worker_threads');

// Listen for message from main thread
parentPort.once('message', (event) =&amp;gt; {
    const sharedArray = event.data;
    const index = event.index;

    const arrValue = Atomics.load(sharedArray, index);
    const fibonaciValue = calculateFibonacci(arrValue);
    parentPort.postMessage(fibonaciValue);   

});


const calculateFibonacci = (num) =&amp;gt; {
    var a = 1, b = 0, temp;

    while (num &amp;gt;= 0){
      temp = a;
      a = a + b;
      b = temp;
      num--;
    }

    return b;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;The &lt;code&gt;parentPort.once&lt;/code&gt;  function is called once the worker is initialized and data is passed into it, it loads the &lt;code&gt;sharedArray&lt;/code&gt; and index and stores it in a variable. the &lt;code&gt;arrValue&lt;/code&gt; fetch the value from the &lt;code&gt;sharedArray&lt;/code&gt; using the Atomics.load function, then calculates the Fibonacci of the value by calling the &lt;code&gt;calculateFibonacci&lt;/code&gt; function, it then returns the value to the main process to be printed on the console.&lt;/p&gt;

&lt;p&gt;You can run the code by running this command on the console&lt;br&gt;
&lt;br&gt;
 &lt;code&gt;node main.js&lt;/code&gt;&lt;br&gt;
&lt;br&gt;
 .&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// console 
Fibonacci received ---  20365011074
Fibonacci received ---  17711
Fibonacci received ---  75025
Fibonacci received ---  10946
Fibonacci received ---  5
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion" class="anchor"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Using worker threads can help your Node.js application by executing tasks that are CPU intensive in threads, worker threads don't magically make your application faster, but it can help in situations where some particular sets of instructions are blocking the single process and making other tasks fail. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Source code can be found &lt;a href="https://github.com/FeezyHendrix/nodejsworkerthreadarticule"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span&gt;Photo by &lt;a href="https://unsplash.com/@k15photos?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;K15 Photos&lt;/a&gt; on &lt;a href="https://unsplash.com/s/photos/threads?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText"&gt;Unsplash&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>node</category>
      <category>programming</category>
      <category>javascript</category>
      <category>multithreading</category>
    </item>
    <item>
      <title>Using .env Files for Environment Variables in Python Applications</title>
      <author>Jake Witcher</author>
      <pubDate>Thu, 24 Dec 2020 15:25:58 +0000</pubDate>
      <link>https://dev.to/jakewitcher/using-env-files-for-environment-variables-in-python-applications-55a1</link>
      <guid>https://dev.to/jakewitcher/using-env-files-for-environment-variables-in-python-applications-55a1</guid>
      <description>&lt;p&gt;Applications are made to be deployed. At some point during development you will need to think about the environment in which your application will run and the potentially sensitive or environment specific information your application will need to perform its tasks. &lt;/p&gt;

&lt;p&gt;Environment variables are one of the key ways software developers provide an application with this kind of information, however running and testing an application locally that is dependent on environment variables can be a hassle if you are setting those variables on your local machine's environment. &lt;/p&gt;

&lt;p&gt;The process of setting or changing an environment variable is time consuming and over time the number of environment variables you have to manage grows out of control. Eventually naming conflicts becomes an issue and every new variable requires a lengthy prefix to distinguish itself from similar variables.&lt;/p&gt;

&lt;p&gt;Using a &lt;code&gt;.env&lt;/code&gt; file will enable you to use environment variables for local development without polluting the global environment namespace. It will also keep your environment variable names and values isolated to the same project that utilizes them. &lt;/p&gt;

&lt;p&gt;A &lt;code&gt;.env&lt;/code&gt; file is a text file containing key value pairs of all the environment variables required by your application. This file is included with your project locally but not saved to source control so that you aren't putting potentially sensitive information at risk.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="c1"&gt;# environment variables defined inside a .env file
&lt;/span&gt;&lt;span class="n"&gt;GCP_PROJECT_ID&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;
&lt;span class="n"&gt;SERVICE_ACCOUNT_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;serviceAccountCredentials&lt;/span&gt;
&lt;span class="n"&gt;STORAGE_BUCKET_NAME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;important&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Nearly every programming language has a package or library that can be used to read environment variables from the &lt;code&gt;.env&lt;/code&gt; file instead of from your local environment. For Python, that library is &lt;em&gt;python-dotenv&lt;/em&gt;. Once the library is installed, an average use case for &lt;em&gt;python-dotenv&lt;/em&gt; only requires adding two lines of code to your project.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dotenv&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_dotenv&lt;/span&gt;

&lt;span class="n"&gt;load_dotenv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;code&gt;load_dotenv()&lt;/code&gt; will first look for a &lt;code&gt;.env&lt;/code&gt; file and if it finds one, it will load the environment variables from the file and make them accessible to your project like any other environment variable would be.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dotenv&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_dotenv&lt;/span&gt;

&lt;span class="n"&gt;load_dotenv&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="n"&gt;GCP_PROJECT_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'GCP_PROJECT_ID'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SERVICE_ACCOUNT_FILE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'SERVICE_ACCOUNT_FILE'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;STORAGE_BUCKET_NAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'STORAGE_BUCKET_NAME'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;If an environment variable is not found in the &lt;code&gt;.env&lt;/code&gt; file, &lt;code&gt;load_dotenv&lt;/code&gt; will then search for a variable by the given name in the host environment. This means that when your project is running locally and the &lt;code&gt;.env&lt;/code&gt; file is present, the variables defined in the file will be used. When your project is deployed to a host environment like a virtual machine or Docker container where the &lt;code&gt;.env&lt;/code&gt; file is not present, the environment variables defined in the host environment will be used instead.&lt;/p&gt;

&lt;p&gt;By default &lt;code&gt;load_dotenv&lt;/code&gt; will look for the &lt;code&gt;.env&lt;/code&gt; file in the current working directory or any parent directories however you can also specify the path if your particular use case requires it be stored elsewhere.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;dotenv&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;load_dotenv&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pathlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;

&lt;span class="n"&gt;dotenv_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'path/to/.env'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;load_dotenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dotenv_path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;dotenv_path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;For most applications, that's all the information you should need to be productive with &lt;em&gt;python-dotenv&lt;/em&gt; however there are a few additional features which you can read about in the &lt;a href="https://pypi.org/project/python-dotenv/"&gt;&lt;em&gt;python-dotenv&lt;/em&gt; documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One of the benefits of using a &lt;code&gt;.env&lt;/code&gt; file is that it becomes much easier to develop with environment variables in mind early on. Thinking about these things at an earlier stage of the development process will make it easier for you to get your application ready for deployment. &lt;/p&gt;

&lt;p&gt;If you are deploying your application in a Docker container, you can seamlessly transition to running and testing your application in a locally run container by using the flag &lt;code&gt;--env-file .env&lt;/code&gt; with your &lt;code&gt;docker run&lt;/code&gt; command. Docker will then set the same environment variables you've been using through &lt;em&gt;python-dotenv&lt;/em&gt; in the container's environment.&lt;/p&gt;

&lt;p&gt;Without a &lt;code&gt;.env&lt;/code&gt; file, environment variables are a cumbersome albeit necessary part of testing your application locally. By using a &lt;code&gt;.env&lt;/code&gt; file and the &lt;em&gt;python-dotenv&lt;/em&gt; library, working with environment variables becomes much more manageable and will get you developing with deployment in mind right from the start.&lt;/p&gt;

</description>
      <category>python</category>
      <category>programming</category>
      <category>environmentvariables</category>
      <category>docker</category>
    </item>
    <item>
      <title>toast.log, a browser extension to see JS errors right on your page (without opening the console)</title>
      <author>Guilherme Rizzo</author>
      <pubDate>Thu, 24 Dec 2020 14:42:26 +0000</pubDate>
      <link>https://dev.to/guivr/toast-log-a-browser-extension-to-see-js-errors-right-on-your-page-without-opening-the-console-2p4j</link>
      <guid>https://dev.to/guivr/toast-log-a-browser-extension-to-see-js-errors-right-on-your-page-without-opening-the-console-2p4j</guid>
      <description>&lt;p&gt;👋 Hi Devs!&lt;/p&gt;

&lt;p&gt;6 months ago I had an idea to make a browser extension to see the console logs like toasts (temporary pop-up notifications).&lt;/p&gt;

&lt;p&gt;So I made a proof of concept, &lt;a href="https://twitter.com/gvrizzo/status/1259526899996360705"&gt;posted on Twitter&lt;/a&gt;, and BOOM! It had over 1,100 likes and 160 pre-orders! People liked it a lot, so I made it :)&lt;/p&gt;

&lt;p&gt;🚀 Since then, it has grown to 1000+ professional web developers users worldwide and received lots of improvements and new features - while still being easy and fun to use :)&lt;/p&gt;

&lt;p&gt;🍞 &lt;a href="https://toastlog.com"&gt;toast.log&lt;/a&gt; is a browser extension that listens to your console and displays logs, warnings, errors, SEO issues, and network requests in a toast notification format - so you don't need to open your console.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://toastlog.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rir6j5yM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://i.imgur.com/tvjXTxZ.gif" alt="toastlog.com"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;✨ toast.log is especially useful for:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Discovering bugs you didn't know existed;&lt;/li&gt;
&lt;li&gt;Saving your time;&lt;/li&gt;
&lt;li&gt;Having more space on your screen when debugging your console;&lt;/li&gt;
&lt;li&gt;Having some fun seeing the logs of the websites you're browsing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;🔍 What kind of error does it get:&lt;/strong&gt;&lt;br&gt;
Javascript errors, Network requests errors (POST, GET, etc), DOM errors (broken images or resources), console.log, console.info, console.warn, console.error, and SEO issues.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;🌟 What's new on toast.log 2.0:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;SEO issues&lt;/li&gt;
&lt;li&gt;Network Requests&lt;/li&gt;
&lt;li&gt;Expandable arrays/objects/JSON&lt;/li&gt;
&lt;li&gt;Customizable interface&lt;/li&gt;
&lt;li&gt;Search through logs&lt;/li&gt;
&lt;li&gt;404 Errors&lt;/li&gt;
&lt;li&gt;Mouse Events&lt;/li&gt;
&lt;li&gt;Tooltips&lt;/li&gt;
&lt;li&gt;Console.info&lt;/li&gt;
&lt;li&gt;Gets console logs that happen at the very beginning of the page loading&lt;/li&gt;
&lt;li&gt;Major bugfixes (it's much more stable now)&lt;/li&gt;
&lt;li&gt;Other Improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;👉 Check all the 2.0 features on &lt;a href="https://toastlog.com"&gt;the website's new video&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;💖 This is a free update for previous 1.0 customers. If you already had it, the extension will update itself automatically.&lt;/p&gt;

&lt;p&gt;💰 &lt;a href="https://toastlog.com"&gt;toast.log&lt;/a&gt; is a paid extension. Along with &lt;a href="https://getcssscan.com"&gt;CSS Scan&lt;/a&gt; and &lt;a href="https://cssscanpro.com"&gt;CSS Scan Pro&lt;/a&gt;, this is my full-time work, so you'll always receive updates! 🙌&lt;/p&gt;

&lt;p&gt;🙏 I’m excited to share it with you and genuinely interested in hearing what you think about it.&lt;/p&gt;

&lt;p&gt;💌 Thanks to everyone that already bought it and supported my work!&lt;br&gt;
If you have any ideas or suggestions, I'm all ears.&lt;/p&gt;

</description>
      <category>showdev</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>why you shouldn't use arrow functions?</title>
      <author>Hirwa Blessing</author>
      <pubDate>Thu, 24 Dec 2020 13:51:25 +0000</pubDate>
      <link>https://dev.to/blessingartcreator/why-you-shouldn-t-use-arrow-functions-35mc</link>
      <guid>https://dev.to/blessingartcreator/why-you-shouldn-t-use-arrow-functions-35mc</guid>
      <description>&lt;p&gt;Who doesn’t love the simplicity of arrow functions? Introduced as part of the ECMAScript 6, arrow functions went viral. The new syntax to declare functions saves us time and enhancing clarity in many situations, removing all the distracting, unnecessary, chunk that usually came with declaring a JS function 😫. In this article we'll talk more about when we should and not use arrow functions, so hold tight and continue with me until the end to avoid confusion.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Regular funciton declaration&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;holidays&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt; 
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Merry Christmas and a happy new year 😀!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;With Es6 functions&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;holidays&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Merry Christmas and a happy new year 😀!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Isn't it lovely? In any case, we have to be cautious as the difference between them is not only just syntax, so we can't use it in every situation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;So when is using arrow functions not advisable&lt;/em&gt;&lt;/strong&gt; 🙄&lt;strong&gt;&lt;em&gt;?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Object methods&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="na"&gt;likes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="na"&gt;like&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;likes&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In the example above, it would be instinctive to think that every time we call &lt;code&gt;post.like()&lt;/code&gt; the property &lt;code&gt;post.likes&lt;/code&gt; would increase by one, initially from 0 to 1.&lt;br&gt;
Unfortunately, this is not the case, the value of likes will sadly remain the same and this post will never get to be popular.&lt;/p&gt;

&lt;p&gt;Invoking the method like() would simply attempt to increment the property likes on the global window object.&lt;/p&gt;

&lt;p&gt;However, if instead, we use the traditional syntax:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;post&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="na"&gt;likes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="na"&gt;like&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;likes&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;2. Object Prototype&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Similar to the example above, object prototypes will evaluate this as the global window object, like in the following example:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;Post&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shared&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;share&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shared&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;Similarly, in the previous case, the method share() won’t work due to the enclosed scope to the window object. And again the solution will look familiar:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;Post&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;prototype&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;share2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shared&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;div class="highlight__panel js-actions-panel"&gt;
&lt;div class="highlight__panel-action js-fullscreen-code-action"&gt;
    Enter fullscreen mode
    


    Exit fullscreen mode
    


&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;p&gt;In addition to what we saw above here are some limitations of arrow functions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does not have its own binding to this or super&lt;/li&gt;
&lt;li&gt;Should not be used as an event handler, a method of an object, a method of a class, or a prototype method, or when you have a function that uses the arguments object.&lt;/li&gt;
&lt;li&gt;Not suitable for call, apply and bind methods, which generally rely on establishing a scope&lt;/li&gt;
&lt;li&gt;Cannot be used as a constructor&lt;/li&gt;
&lt;li&gt;Cannot use yield within its body&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Taken from&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"&gt;MDN&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To be continued...&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thank you for taking your time and read this post, hope you enjoyed it. Let me know what you think in the comments and don't forget to connect with me or hit me up on &lt;a href="https://twitter.com/graphicblessing"&gt;Twitter&lt;/a&gt;, &lt;a href="https://www.instagram.com/blessingartcreator/"&gt;Instagram&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/hirwa-blessing"&gt;Linkedin&lt;/a&gt;. Once again, Merry Christmas and a happy new year of 2021 🌲.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>webdev</category>
      <category>react</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
