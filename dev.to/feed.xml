<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Deno: The next step in Node.js</title>
      <author>Siddharth</author>
      <pubDate>Wed, 04 Aug 2021 04:30:39 +0000</pubDate>
      <link>https://dev.to/siddharthshyniben/deno-the-next-step-in-node-js-ij1</link>
      <guid>https://dev.to/siddharthshyniben/deno-the-next-step-in-node-js-ij1</guid>
      <description>&lt;p&gt;&lt;a href="https://deno.land"&gt;Deno&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=M3BM9TB-8yA"&gt;introduced&lt;/a&gt; by Ryan Dahl, the creator of &lt;br&gt;
&lt;a href="https://nodejs.org"&gt;Node&lt;/a&gt; during JSConf 2018 has been growing into a major alternative to Node.js. Deno is similar to Node.js – you write your scripts in JavaScript and run them – but Deno get's more powerful once you use it. It has first class TypeScript support, simplifies modules, is more secure, and bridges the gap between browsers and Node, and much more.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#node"&gt;
  &lt;/a&gt;
  Node
&lt;/h2&gt;

&lt;p&gt;Released in 2009, Node took over really quickly. Even though there was initially some skepticism about Node, support from the community was unrivalled.&lt;/p&gt;

&lt;p&gt;Today, Node is one of the most popular tools used for backend development.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#enter-deno"&gt;
  &lt;/a&gt;
  Enter Deno
&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Fun fact: Deno is just node reversed. no + de = node, de + no = deno.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Even though Node was great, there are many design mistake in it. You can check out the &lt;a href="https://www.youtube.com/watch?v=M3BM9TB-8yA"&gt;talk by Ryan Dahl&lt;/a&gt; to learn more, but here's a few:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Node didn't stick with promises.&lt;/strong&gt; Node had added them way back in 2009, but removed them almost a year later in 2010.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Node wasn't secure enough.&lt;/strong&gt; Any node program has access to system calls, http requests, filesystem calls. Your linter shouldn't have complete access to your computer and network.&lt;/li&gt;
&lt;li&gt;more...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Essentially, Node was focused on IO. Modules were an afterthought. To fix all this, Ryan introduced Deno.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#deno-is-secure-by-design"&gt;
  &lt;/a&gt;
  Deno is secure by design
&lt;/h3&gt;

&lt;p&gt;Suppose you want to run a lint script. If you were using node, you would just do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;~$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;node linter.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;But in Deno, you do this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;~$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;deno run &lt;span class="nt"&gt;--allow-read&lt;/span&gt; linter.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;There's a couple of things to note here. First is the &lt;code&gt;run&lt;/code&gt; subcommand. Deno has a bunch of other tools, which we'll get to later. &lt;/p&gt;

&lt;p&gt;Next thing to note is the flag &lt;code&gt;--allow-read&lt;/code&gt;. It, along with a &lt;a href="https://deno.land/manual@v1.11.1/getting_started/permissions"&gt;bunch of other flags&lt;/a&gt; are part of deno's security system. By default, when a script is run using &lt;code&gt;deno run&lt;/code&gt;, it can't use anything more than the console.&lt;/p&gt;

&lt;p&gt;Now, more security is great, but nobody wants to be putting in a bunch of &lt;code&gt;--allow&lt;/code&gt; flags everytime you need to run stuff. Fortunately, deno provides an &lt;code&gt;install&lt;/code&gt; command which can &lt;em&gt;"install"&lt;/em&gt; stuff. Installing as an creating a thin wrapper in a platform-specific directory (&lt;code&gt;~/.deno/bin&lt;/code&gt; on MacOS and Linux, not sure about Windows).&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;~$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;deno &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--allow-read&lt;/span&gt; linter.js
&lt;span class="go"&gt;✅ Successfully installed linter
/Users/APPLE/.deno/bin/linter
&lt;/span&gt;&lt;span class="gp"&gt;~$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;linter
&lt;span class="go"&gt;linter running!
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The file at &lt;code&gt;.deno/bin/linter&lt;/code&gt; is very simple:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="c"&gt;# generated by deno install&lt;/span&gt;
&lt;span class="nb"&gt;exec &lt;/span&gt;deno run &lt;span class="nt"&gt;--allow-read&lt;/span&gt; &lt;span class="s1"&gt;'file:///Users/APPLE/Sites/Projects/deno-test/linter.js'&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#no-package-managers-here"&gt;
  &lt;/a&gt;
  No package managers here
&lt;/h3&gt;

&lt;p&gt;Deno uses ES Modules import syntax, which means that imports must be full or relative paths to files. And unlike Node.js, there's no &lt;code&gt;deno_modules&lt;/code&gt; (thank goodness!), and deno doesn't look anywhere special for modules.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight diff"&gt;&lt;code&gt;&lt;span class="err"&gt;//&lt;/span&gt; These work
&lt;span class="gi"&gt;+ import {lint} from './linter.js';
+ import {lint} from 'absolute/path/to/linter.js';
+ import {WebSocket} from "https://deno.land/std@0.103.0/ws/mod.ts";
&lt;/span&gt;
// But these wont:
&lt;span class="gd"&gt;- import {lint} from './linter'; // Note the extension is missing
- import {WebSocket} from "ws"; // ws who?
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#you-dont-have-to-relearn-most-of-javascript"&gt;
  &lt;/a&gt;
  You don't have to relearn (most of) JavaScript
&lt;/h3&gt;

&lt;p&gt;Deno tries to use web platform APIs (like &lt;code&gt;fetch&lt;/code&gt;) instead of inventing a new API. These APIs generally follow the specifications and should match the implementation in Chrome and Firefox. Deno even uses web standards in it's own APIs, for example Deno's &lt;code&gt;http&lt;/code&gt; API uses the standard Request and response objects. Deno's even got &lt;code&gt;window&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Node.js goes the other way replacing stuff with it's own APIs, usually using callbacks, making us reach for modules. Deno gets to take advantage of all the evolution of JavaScript instead of having to build it all again. Also, it's easier to port stuff to the web if you use Deno (and vice versa).&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#typescript-is-a-first-class-citizen-here"&gt;
  &lt;/a&gt;
  TypeScript is a first class citizen here
&lt;/h3&gt;

&lt;p&gt;Deno has built in &lt;a href="https://deno.land/manual/typescript/overview"&gt;support for TypeScript&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=dQw4w9WgXcQ"&gt;!&lt;/a&gt; This isn't just used as an external modules or anything, no extra flags, not even a &lt;code&gt;tsconfig.json&lt;/code&gt;. There is even interoperability – import JS in TS, import TS in JS&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#simpler-distribution"&gt;
  &lt;/a&gt;
  Simpler distribution
&lt;/h3&gt;

&lt;p&gt;Unlike Node, Deno is just a single binary. This makes installation and deployment a breeze. Deno can even compile programs to binaries, which is absolutely awesome! It can even cross compile!&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#a-simple-demo"&gt;
  &lt;/a&gt;
  A simple demo
&lt;/h3&gt;

&lt;p&gt;Here's a simple &lt;code&gt;cat&lt;/code&gt; implementation in deno:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// mycat.ts&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;expandGlob&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://deno.land/std@0.102.0/fs/expand_glob.ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// no need to remove the path to deno, etc.&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Deno&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;args&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;files&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fileExpansion&lt;/span&gt; &lt;span class="k"&gt;of&lt;/span&gt; &lt;span class="nx"&gt;expandGlob&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;file&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;contents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;Deno&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;readTextFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fileExpansion&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This script takes filenames as arguments and prints them to the console.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight console"&gt;&lt;code&gt;&lt;span class="gp"&gt;~$&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;deno run &lt;span class="nt"&gt;--allow-read&lt;/span&gt; mycat.ts cat.ts
&lt;span class="go"&gt;// cat.ts
&lt;/span&gt;&lt;span class="gp"&gt;import { expandGlob } from "https://deno.land/std@0.102.0/fs/expand_glob.ts";&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="go"&gt;
// no need to remove the path to deno, etc.
&lt;/span&gt;&lt;span class="gp"&gt;const files = Deno.args;&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="c"&gt;...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Note that you don't need to install or configure anything - Deno handles that for you. &lt;/p&gt;

&lt;p&gt;Now, we can &lt;code&gt;install&lt;/code&gt; the script:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;~&lt;span class="nv"&gt;$ &lt;/span&gt;deno &lt;span class="nb"&gt;install&lt;/span&gt; &lt;span class="nt"&gt;--allow-read&lt;/span&gt; mycat.ts
✅ Successfully installed mycat
/Users/APPLE/.deno/bin/mycat
~&lt;span class="err"&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Deno is still new.&lt;/strong&gt; It has a thriving community and a bunch of libraries (many node libraries have been ported to deno). But it's not as popular or as supported as node. But deno's ease of use and simplicity make it useful for writing everyday scripts, and it's url-based system of sharing modules makes distributing programs as easy as putting them on a GitHub repo or personal site.&lt;/p&gt;

</description>
      <category>node</category>
      <category>deno</category>
      <category>javascript</category>
      <category>typescript</category>
    </item>
    <item>
      <title>Hello guys I'm new here and 13 y/o only. Please be kind</title>
      <author>saraansh09</author>
      <pubDate>Wed, 04 Aug 2021 04:13:18 +0000</pubDate>
      <link>https://dev.to/saraansh09/hello-guys-i-m-new-here-and-13-y-o-only-please-be-kind-gj4</link>
      <guid>https://dev.to/saraansh09/hello-guys-i-m-new-here-and-13-y-o-only-please-be-kind-gj4</guid>
      <description>&lt;p&gt;&lt;a href="https://snack.expo.dev/@saraansh09/a-project-well-done"&gt;https://snack.expo.dev/@saraansh09/a-project-well-done&lt;/a&gt;. View it here and leave your feedback please.Thanks&lt;/p&gt;

</description>
      <category>reactnative</category>
      <category>quiz</category>
      <category>beginners</category>
    </item>
    <item>
      <title>6 Ways you can make side-income as a developer</title>
      <author>Shubhra Agarwal</author>
      <pubDate>Wed, 04 Aug 2021 04:10:09 +0000</pubDate>
      <link>https://dev.to/shubhracodes/6-ways-you-can-make-side-income-as-a-developer-4486</link>
      <guid>https://dev.to/shubhracodes/6-ways-you-can-make-side-income-as-a-developer-4486</guid>
      <description>&lt;p&gt;Don’t worry. I’m not going to tell you to start a blog.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-shopify-appthemes"&gt;
  &lt;/a&gt;
  1. Shopify App/Themes
&lt;/h2&gt;

&lt;p&gt;Shopify is a massive market. For many, it can feel saturated. But is it really? Let’s say you price your app at $25 subscription and you have 100 shops using it. That’s a solid $2.5k right in your pocket each month.&lt;/p&gt;

&lt;p&gt;There are online shops opening left, right, and center. If you can come up with an idea that solves a particular pain point for shopkeepers, it can be easy money.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-wordpress-pluginsthemes"&gt;
  &lt;/a&gt;
  2. WordPress Plugins/Themes
&lt;/h2&gt;

&lt;p&gt;For non-developers, WordPress is still one of the main go-to for blogging. Theme development is one of those things that’s been around for so long that you might find it hard to compete and make any actual money.&lt;/p&gt;

&lt;p&gt;Market places like ThemeForest can feel like they’re taking more than the hassle it takes to get a theme past their submission criteria.&lt;/p&gt;

&lt;p&gt;Sell a few dozen or two at $29-$45 per month and you’re set for a good passive income stream.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-a-productivity-tool"&gt;
  &lt;/a&gt;
  3. A productivity tool
&lt;/h2&gt;

&lt;p&gt;Productivity tools are the essence of getting things done. Make something, launch it, set it up with a free trial and then upgrade into a subscription model. It just needs to solve a productivity problem that’s annoying enough to be worth paying for.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-make-something-that-matters-to-you"&gt;
  &lt;/a&gt;
  4. Make something that matters to you
&lt;/h2&gt;

&lt;p&gt;The thing about being a developer is that we solve problems. Surely, there’s something annoying in your life that you can solve for yourself.&lt;/p&gt;

&lt;p&gt;It’s like one of those projects we get back in school — you know the kind that tells you to come up with an idea to solve some major world issue like poverty and hunger.&lt;/p&gt;

&lt;p&gt;Except you’re taking it down a notch and just focusing on yourself.&lt;/p&gt;

&lt;p&gt;If you find a tech-based solution, you can either open-source it and monetize through sponsorship. Or, you can sell it as a once-off or subscription model.&lt;/p&gt;

&lt;p&gt;The possibilities are endless. You just need to stop, figure out what’s annoying in your digital life and solve it. Chances are, you’re not the only one experiencing it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-gumroad-projects"&gt;
  &lt;/a&gt;
  5. Gumroad projects
&lt;/h2&gt;

&lt;p&gt;Digital assets can be traded as commodities. This includes graphics, icons, themes, and plugins.&lt;/p&gt;

&lt;p&gt;Gumroad just saves you the hassle of starting up an online store to sell them. It’s free — unless you want lowered fees.&lt;/p&gt;

&lt;p&gt;Then there’s a small price for a subscription. Even then, the free account fees are still decent in general. You’ll still need to do your own marketing to get the sales. By the end of it all, you’ll pick up a few new skills at the very least.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Externalize your knowledge&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There are platforms out there like Udemy, Skillshare, and Teachable that can help you double-bank on your knowledge if you can commit to externalizing it.&lt;/p&gt;

</description>
      <category>money</category>
      <category>developer</category>
      <category>sideincome</category>
      <category>sideprojects</category>
    </item>
    <item>
      <title>Linux Cheat Sheet For Beginners</title>
      <author>Suhail Kakar</author>
      <pubDate>Wed, 04 Aug 2021 03:56:25 +0000</pubDate>
      <link>https://dev.to/suhailkakar/linux-cheat-sheet-for-beginners-5830</link>
      <guid>https://dev.to/suhailkakar/linux-cheat-sheet-for-beginners-5830</guid>
      <description>&lt;p&gt;If you're not using the terminal, Linux commands may appear scary at first by once you start using them you will understand them very easily On a Linux system, there are numerous commands for executing operations and procedures.&lt;/p&gt;

&lt;p&gt;Having a list of commands on hand is useful whether you are new to Linux or an experienced user.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#file-permission-commands"&gt;
  &lt;/a&gt;
  File Permission commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;ls-l&lt;/td&gt;

&lt;td&gt;to show file type and access permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;r&lt;/td&gt;

&lt;td&gt;read permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;w&lt;/td&gt;

&lt;td&gt;write permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;x&lt;/td&gt;

&lt;td&gt;execute permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;-=&lt;/td&gt;

&lt;td&gt;no permission&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Chown user&lt;/td&gt;

&lt;td&gt;For changing the ownership of a file/directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Chown user:group filename&lt;/td&gt;

&lt;td&gt;change the user as well as group for a file or directory&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#hardware-commands"&gt;
  &lt;/a&gt;
  Hardware commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;
&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;dmesg&lt;/td&gt;

&lt;td&gt;Displays bootup messages&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat /proc/cpuinfo&lt;/td&gt;

&lt;td&gt;Displays more information about CPU e.g model, model name, cores, vendor id&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat /proc/meminfo&lt;/td&gt;

&lt;td&gt;Displays more information about hardware memory e.g. Total and Free memory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lshw&lt;/td&gt;

&lt;td&gt;Displays information about system's hardware configuration&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lsblk&lt;/td&gt;

&lt;td&gt;Displays block devices related information&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;free -m&lt;/td&gt;

&lt;td&gt;Displays free and used memory in the system (-m flag indicates memory in MB)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lspci -tv&lt;/td&gt;

&lt;td&gt;Displays PCI devices in a tree-like diagram&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lsusb -tv&lt;/td&gt;

&lt;td&gt;Displays USB devices in a tree-like diagram&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dmidecode&lt;/td&gt;

&lt;td&gt;Displays hardware information from the BIOS&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;hdparm -i /dev/xda&lt;/td&gt;

&lt;td&gt;Displays information about disk data&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;hdparm -tT /dev/xda &lt;/td&gt;

&lt;td&gt;Conducts a read speed test on device xda&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;badblocks -s /dev/xda&lt;/td&gt;

&lt;td&gt;Tests  for unreadable blocks on disk&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#basic-linux-commands"&gt;
  &lt;/a&gt;
  Basic Linux commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;ls&lt;/td&gt;

&lt;td&gt;Lists all files and directories in the present working directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ls-R&lt;/td&gt;

&lt;td&gt;Lists files in sub-directories as well&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ls-a&lt;/td&gt;

&lt;td&gt;Lists hidden files as well&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ls-al&lt;/td&gt;

&lt;td&gt;Lists files and directories with detailed information like permissions,size, owner, etc.&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd or cd ~&lt;/td&gt;

&lt;td&gt;Navigate to HOME directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd ..&lt;/td&gt;

&lt;td&gt;Move one level up&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd&lt;/td&gt;

&lt;td&gt;To change to a particular directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd /&lt;/td&gt;

&lt;td&gt;Move to the root directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat &amp;gt; filename&lt;/td&gt;

&lt;td&gt;Creates a new file&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat filename&lt;/td&gt;

&lt;td&gt;Displays the file content&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cat file1 file2 &amp;gt; file3&lt;/td&gt;

&lt;td&gt;Joins two files (file1, file2) and stores the output in a new file (file3)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mv file "new file path"&lt;/td&gt;

&lt;td&gt;Moves the files to the new location&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mv filename new_file_name&lt;/td&gt;

&lt;td&gt;Renames the file to a new filename&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo&lt;/td&gt;

&lt;td&gt;Allows regular users to run programs with the security privileges of the superuser or root&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;rm filename&lt;/td&gt;

&lt;td&gt;Deletes a file&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;man&lt;/td&gt;

&lt;td&gt;Gives help information on a command&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;history&lt;/td&gt;

&lt;td&gt;Gives a list of all past commands typed in the current terminal session&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;clear&lt;/td&gt;

&lt;td&gt;Clears the terminal&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mkdir directoryname&lt;/td&gt;

&lt;td&gt;Creates a new directory in the present working directory or a at the specified path&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;rmdir&lt;/td&gt;

&lt;td&gt;Deletes a directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mv&lt;/td&gt;

&lt;td&gt;Renames a directory&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pr -x&lt;/td&gt;

&lt;td&gt;Divides the file into x columns&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pr -h&lt;/td&gt;

&lt;td&gt;Assigns a header to the file&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pr -n&lt;/td&gt;

&lt;td&gt;Denotes the file with Line Numbers&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lp -nc , lpr c&lt;/td&gt;

&lt;td&gt;Prints "c" copies of the File&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt; lp-d lp-P&lt;/td&gt;

&lt;td&gt;Specifies name of the printer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;apt-get&lt;/td&gt;

&lt;td&gt;Command used to install and update packages&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mail -s 'subject' -c 'cc-address' -b 'bcc-address' 'to-address'&lt;/td&gt;

&lt;td&gt;Command to send email&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;mail -s "Subject" to-address &amp;lt; Filename&lt;/td&gt;

&lt;td&gt;Command to send email with attachment&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#environment-variables-command"&gt;
  &lt;/a&gt;
  Environment Variables command
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;echo $VARIABLE&lt;/td&gt;

&lt;td&gt;To display value of a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;env&lt;/td&gt;

&lt;td&gt;Displays all environment variables&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;VARIABLE_NAME= variable_value&lt;/td&gt;

&lt;td&gt;Create a new variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Unset&lt;/td&gt;

&lt;td&gt;Remove a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;export Variable=value&lt;/td&gt;

&lt;td&gt;To set value of an environment variable&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#user-management-commands-of-linux"&gt;
  &lt;/a&gt;
  User management commands of linux
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;sudo adduser username&lt;/td&gt;

&lt;td&gt;To display value of a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo passwd -l 'username'&lt;/td&gt;

&lt;td&gt;Displays all environment variables&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo userdel -r 'username'&lt;/td&gt;

&lt;td&gt;Create a new variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo usermod -a -G GROUPNAME USERNAME&lt;/td&gt;

&lt;td&gt;Remove a variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;sudo deluser USER GROUPNAME&lt;/td&gt;

&lt;td&gt;To set value of an environment variable&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;finger&lt;/td&gt;

&lt;td&gt;Gives information on all logged in user&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;finger username&lt;/td&gt;

&lt;td&gt;Gives information of a particular user&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#network-command"&gt;
  &lt;/a&gt;
  Network command
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;SSH username@ip-address or hostname&lt;/td&gt;

&lt;td&gt;login into a remote Linux machine using SSH&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;Ping hostname="" or =""&lt;/td&gt;

&lt;td&gt;To ping and Analyzing network and host connections&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dir&lt;/td&gt;

&lt;td&gt;Display files in the current directory of a remote computer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cd "dirname"&lt;/td&gt;

&lt;td&gt;change directory to "dirname" on a remote computer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;put file&lt;/td&gt;

&lt;td&gt;upload 'file' from local to remote computer&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;get file&lt;/td&gt;

&lt;td&gt;Download 'file' from remote to local computer&lt;/td&gt;

&lt;/tr&gt;


&lt;tr&gt;

&lt;td&gt;ip addr show                &lt;/td&gt;

&lt;td&gt;Displays IP addresses and all the network interfaces&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ip address add 192.168.0.1/24 dev eth0&lt;/td&gt;

&lt;td&gt;Assigns IP address 192.168.0.1 to interface eth0&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ifconfig                         &lt;/td&gt;

&lt;td&gt;Displays IP addresses of all network interfaces&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ping  host                    &lt;/td&gt;

&lt;td&gt;ping command sends an ICMP echo request to establish a connection to server / PC&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;whois domain              &lt;/td&gt;

&lt;td&gt;Retrieves more information about a domain name&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dig domain                      &lt;/td&gt;

&lt;td&gt;Retrieves DNS information about the domain&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dig -x host                &lt;/td&gt;

&lt;td&gt;Performs reverse lookup on a domain&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;host google.com       &lt;/td&gt;

&lt;td&gt;Performs an IP lookup for the domain name&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;hostname -i                  &lt;/td&gt;

&lt;td&gt;Displays local IP address&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;wget file_name         &lt;/td&gt;

&lt;td&gt;Downloads a file from an online source&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;netstat -pnltu  &lt;/td&gt;

&lt;td&gt;Displays all active listening ports&lt;/td&gt;

&lt;/tr&gt;


&lt;tr&gt;

&lt;td&gt;quit&lt;/td&gt;

&lt;td&gt;Logout&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#process-command"&gt;
  &lt;/a&gt;
  Process command
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;bg&lt;/td&gt;

&lt;td&gt;To send a process to the background&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;fg&lt;/td&gt;

&lt;td&gt;To run a stopped process in the foreground&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;top&lt;/td&gt;

&lt;td&gt;Details on all Active Processes&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ps&lt;/td&gt;

&lt;td&gt;Give the status of processes running for a user&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ps PID&lt;/td&gt;

&lt;td&gt;Gives the status of a particular process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;pidof&lt;/td&gt;

&lt;td&gt;Gives the Process ID (PID) of a process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;kill PID&lt;/td&gt;

&lt;td&gt;Kills a process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;nice&lt;/td&gt;

&lt;td&gt;Starts a process with a given priority&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;renice&lt;/td&gt;

&lt;td&gt;Changes priority of an already running process&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;df&lt;/td&gt;

&lt;td&gt;Gives free hard disk space on your system&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;free&lt;/td&gt;

&lt;td&gt;Gives free RAM on your system&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#system-information"&gt;
  &lt;/a&gt;
  System Information
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;time&lt;/td&gt;

&lt;td&gt;It is a utility that measures the time taken by a program to execute. &lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;/proc&lt;/td&gt;

&lt;td&gt;The files under /proc displays system information. &lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dmseg&lt;/td&gt;

&lt;td&gt;This command is used to print the contents of the bootup messages displayed by the kernel. This is particularly useful in debugging issues.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;df&lt;/td&gt;

&lt;td&gt;Displays the information about the space on the mounted file-systems.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;who&lt;/td&gt;

&lt;td&gt;Displays information about the logged in users including their login time.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;w&lt;/td&gt;

&lt;td&gt;This command displays who are logged in into the system and the processes they are running. &lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;users&lt;/td&gt;

&lt;td&gt;This command prints the name of the currently logged in users.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;last&lt;/td&gt;

&lt;td&gt;This command displays the time of the logged-out users. This also displays the information when the computer was rebooted.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;lastlog&lt;/td&gt;

&lt;td&gt;Displays a list of the users and the time/day of their login.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;whoami&lt;/td&gt;

&lt;td&gt;It tells the username of the logged in user.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;free&lt;/td&gt;

&lt;td&gt;Displays memory status. (Total, Used, Free, cached, Swap)&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;uptime | w&lt;/td&gt;

&lt;td&gt;It displays how long the computer has been up and running. Additionally, it displays the number of users and the processor load.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;uname&lt;/td&gt;

&lt;td&gt;It is used to display system information such as OS type, kernel version, etc.&lt;/td&gt;



&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;xargs&lt;/td&gt;

&lt;td&gt;This command is used to run a command as many times as required. &lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;date&lt;/td&gt;

&lt;td&gt;It is used to display the system. It can also be used to set the date/time.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cal&lt;/td&gt;

&lt;td&gt;This command displays the calendar of the current month.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;acpi&lt;/td&gt;

&lt;td&gt;This command is used to display the battery status and other ACPI(Advanced Configuration and Power Information) related  information.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;acpi_available&lt;/td&gt;

&lt;td&gt;This command is used to test if the ACPI subsystem is available.&lt;/td&gt;


&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;aptitude &lt;/td&gt;


&lt;td&gt; &lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#vi-editing-commands"&gt;
  &lt;/a&gt;
  VI Editing Commands
&lt;/h2&gt;

&lt;div class="table-wrapper-paragraph"&gt;&lt;table&gt;

&lt;thead&gt;

&lt;tr&gt;

&lt;th&gt;Command&lt;/th&gt;

&lt;th&gt;Description&lt;/th&gt;

&lt;/tr&gt;

&lt;/thead&gt;

&lt;tbody&gt;

&lt;tr&gt;

&lt;td&gt;i&lt;/td&gt;

&lt;td&gt;Insert at cursor (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;a&lt;/td&gt;

&lt;td&gt;Write after cursor (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;A&lt;/td&gt;

&lt;td&gt;Write at the end of line (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;ESC&lt;/td&gt;

&lt;td&gt;Terminate insert mode&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;u&lt;/td&gt;

&lt;td&gt;Undo last change&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;U&lt;/td&gt;

&lt;td&gt;Undo all changes to the entire line&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;o&lt;/td&gt;

&lt;td&gt;Open a new line (goes into insert mode)&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dd&lt;/td&gt;

&lt;td&gt;Delete line&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;3dd&lt;/td&gt;

&lt;td&gt;Delete 3 lines&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;D&lt;/td&gt;

&lt;td&gt;Delete contents of line after the cursor&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;C&lt;/td&gt;

&lt;td&gt;Delete contents of a line after the cursor and insert new text. Press ESC key to end insertion.&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;dw&lt;/td&gt;

&lt;td&gt;Delete word&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;4dw&lt;/td&gt;

&lt;td&gt;Delete 4 words&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;cw&lt;/td&gt;

&lt;td&gt;Change word&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;x&lt;/td&gt;

&lt;td&gt;Delete character at the cursor&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;r&lt;/td&gt;

&lt;td&gt;Replace character&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;R&lt;/td&gt;

&lt;td&gt;Overwrite characters from cursor onward&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;s&lt;/td&gt;

&lt;td&gt;Substitute one character under cursor continue to insert&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;S&lt;/td&gt;

&lt;td&gt;Substitute entire line and begin to insert at the beginning of the line&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;

&lt;td&gt;~&lt;/td&gt;

&lt;td&gt;Change case of individual character&lt;/td&gt;

&lt;/tr&gt;

&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;References: Linoxide, Guru 99, Hackr, Loggly, Phoenixnap&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;I hope you found this cheatsheet helpful. If you need any help please let me know in the comment section&lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;👋 Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>linux</category>
      <category>ubuntu</category>
      <category>tutorial</category>
      <category>security</category>
    </item>
    <item>
      <title>Git Command You Should Use Everyday</title>
      <author>Derdw</author>
      <pubDate>Wed, 04 Aug 2021 03:36:31 +0000</pubDate>
      <link>https://dev.to/derdw/git-command-you-should-use-everyday-m8i</link>
      <guid>https://dev.to/derdw/git-command-you-should-use-everyday-m8i</guid>
      <description>&lt;p&gt;&lt;span&gt;When I started my career, I was always afraid of losing my code changes. Sometimes, I would copy the code to text files just to be sure that I won't miss something.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;That's not a great practice. If you know how to use git properly, you won't have these doubts.&lt;/p&gt;
&lt;p&gt;Git has everything you need to make you safe. And much more.&lt;/p&gt;
&lt;p&gt;Let's dive in.&lt;/p&gt;

&lt;p&gt;&lt;span&gt;Read More: &lt;/span&gt;&lt;span&gt;&lt;b&gt;&lt;a href="https://www.codelivly.com/11-git-commands-i-use-every-day/"&gt;20 Git Command i use Everyday&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
      <category>git</category>
    </item>
    <item>
      <title>Best web development-roadmap-2021</title>
      <author>Derdw</author>
      <pubDate>Wed, 04 Aug 2021 03:32:59 +0000</pubDate>
      <link>https://dev.to/derdw/best-web-development-roadmap-2021-2ddl</link>
      <guid>https://dev.to/derdw/best-web-development-roadmap-2021-2ddl</guid>
      <description>&lt;p&gt; &lt;/p&gt;
&lt;p&gt;There has never been a better time to learn to code or make a career change to software engineering. The demand for web developers is at an all-time high, and it’s only increasing. There are both free and premium tutorials online that teach you the skills to get a job as a developer — no CS degree required 🤓.&lt;/p&gt;
&lt;p id="561d"&gt;This article details the needed skills and the corresponding tutorials to learn them effectively. The illustrated guide is provided by &lt;b&gt;&lt;a href="http://www.codelivly.com"&gt;Codelivly&lt;/a&gt;&lt;/b&gt; and can be found on codelivly  — Codelivly work is excellent so be sure to star the repo and subscribe to his newsletter to support his efforts. Don’t be intimidated by the map. It may seem like a lot, but I’ll break it down so you can learn each part step-by-step.&lt;/p&gt;
&lt;p id="dda0"&gt;This article will be divided into the following sections:&lt;/p&gt;
&lt;p id="dda0"&gt;1. &lt;b&gt;&lt;a href="https://www.codelivly.com/web-developer-roadmap-2021/"&gt;Full Stack Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;2. &lt;b&gt;&lt;a href="https://www.codelivly.com/frontend-web-developer-roadmap/"&gt;Frontend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;3. &lt;b&gt;&lt;a href="https://www.codelivly.com/backend-web-developer-roadmap/"&gt;Backend Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;
&lt;p id="dda0"&gt;4. &lt;b&gt;&lt;a href="https://www.codelivly.com/the-best-python-frameworks-for-web-development-in-2021/"&gt;Best Python Framework For Web Development&lt;/a&gt;&lt;/b&gt;&lt;/p&gt;







</description>
      <category>webdev</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Create Custom Captcha in HTML CSS &amp; JavaScript</title>
      <author>Afzal Imam</author>
      <pubDate>Wed, 04 Aug 2021 03:03:58 +0000</pubDate>
      <link>https://dev.to/afzalimamias/create-custom-captcha-in-html-css-javascript-1mim</link>
      <guid>https://dev.to/afzalimamias/create-custom-captcha-in-html-css-javascript-1mim</guid>
      <description>&lt;p&gt;Hey friends, today in this blog, you’ll learn how to create Custom Captcha in HTML CSS &amp;amp; JavaScript. In the earlier blog, I have shared how to Detect User Browser using JavaScript, and it’s time to create a simple captcha program.&lt;/p&gt;

&lt;p&gt;Mostly, Captcha is used on the comment or contact form of the websites to restrict robots (bot) from commenting on a blog post or sending a message to the admin. There can be random images or codes in the captcha, and the users must have to select correct images or match the codes to complete their task.&lt;/p&gt;

&lt;p&gt;In this small project [Custom Captcha in JavaScript], there is an image with the random 6 characters and numbers. You can also refresh the captcha code and get a new one using the reload button.&lt;/p&gt;

&lt;p&gt;In the input field, you have to enter the captcha codes that are shown on the image. If your codes matched with the captcha codes, then there is appears a success message else there appears an error message. If you’ve matched the codes, then after 4 seconds there will be generated a new one captcha code.&lt;/p&gt;

&lt;p&gt;I hope you liked this simple captcha program and want to get source codes but don’t worry I have given codes and source code files at the bottom of this page from where you can copy-paste codes the source code files.&lt;/p&gt;

&lt;p&gt;But before copying codes, let’s understand the basic codes and concepts of this program. At first, in the JavaScript file, I have stored all characters and numbers in the array, then inside for loop, using Math.random() function I got 6 random characters from the given array.&lt;/p&gt;

&lt;p&gt;And passed these codes or characters in the captcha by adding space between each character. After this, I got user-entered values, split them, and joined them with space (‘ ‘) so users don’t need to enter spaces to match the codes.&lt;/p&gt;

&lt;p&gt;Once I joined the user values then I matched this user value with the captcha codes. If the value is not matched I’ve shown an error message, and if the value is matched I’ve shown a success message and generate the new random codes after 4 seconds using the setTimeout() function.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#create-custom-captcha-in-javascript-source-codes"&gt;
  &lt;/a&gt;
  Create Custom Captcha in JavaScript [Source Codes]
&lt;/h2&gt;

&lt;p&gt;To create this program &lt;strong&gt;[Custom Captcha in JavaScript]&lt;/strong&gt;. First, you need to create three Files: &lt;strong&gt;HTML, CSS &amp;amp; JavaScript File&lt;/strong&gt;. After creating these files just paste the following codes into your file.&lt;/p&gt;

&lt;p&gt;First, create an HTML file with the name of &lt;strong&gt;index.html&lt;/strong&gt; and paste the given codes into your HTML file. You’ve to create a file with .html extension and remember the image that is used on this program will not appear.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;!-- Coding By CodingNepal - youtube.com/codingnepal --&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset="UTF-8"&amp;gt;
  &amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;
  &amp;lt;title&amp;gt;Custom Captcha in JavaScript | CodingNepal&amp;lt;/title&amp;gt;
  &amp;lt;link rel="stylesheet" href="style.css"&amp;gt;
  &amp;lt;!-- Font Awesome CDN Link for Icons --&amp;gt;
  &amp;lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;div class="wrapper"&amp;gt;
    &amp;lt;header&amp;gt;Captcha in JavaScript&amp;lt;/header&amp;gt;
    &amp;lt;div class="captcha-area"&amp;gt;
      &amp;lt;div class="captcha-img"&amp;gt;
        &amp;lt;img src="captcha-bg.png" alt="Captch Background"&amp;gt;
        &amp;lt;span class="captcha"&amp;gt;&amp;lt;/span&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;button class="reload-btn"&amp;gt;&amp;lt;i class="fas fa-redo-alt"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;form action="#" class="input-area"&amp;gt;
      &amp;lt;input type="text" placeholder="Enter captcha" maxlength="6" spellcheck="false" required&amp;gt;
      &amp;lt;button class="check-btn"&amp;gt;Check&amp;lt;/button&amp;gt;
    &amp;lt;/form&amp;gt;
    &amp;lt;div class="status-text"&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;script src="script.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Last, create a JavaScript file with the name of script.js and paste the given codes in your JavaScript file. Remember, you’ve to create a file with .js extension.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;const captcha = document.querySelector(".captcha"),
reloadBtn = document.querySelector(".reload-btn"),
inputField = document.querySelector(".input-area input"),
checkBtn = document.querySelector(".check-btn"),
statusTxt = document.querySelector(".status-text");

//storing all captcha characters in array
let allCharacters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',
                     'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd',
                     'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',
                     't', 'u', 'v', 'w', 'x', 'y', 'z', 0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
function getCaptcha(){
  for (let i = 0; i &amp;lt; 6; i++) { //getting 6 random characters from the array
    let randomCharacter = allCharacters[Math.floor(Math.random() * allCharacters.length)];
    captcha.innerText += ` ${randomCharacter}`; //passing 6 random characters inside captcha innerText
  }
}
getCaptcha(); //calling getCaptcha when the page open
//calling getCaptcha &amp;amp; removeContent on the reload btn click
reloadBtn.addEventListener("click", ()=&amp;gt;{
  removeContent();
  getCaptcha();
});

checkBtn.addEventListener("click", e =&amp;gt;{
  e.preventDefault(); //preventing button from it's default behaviour
  statusTxt.style.display = "block";
  //adding space after each character of user entered values because I've added spaces while generating captcha
  let inputVal = inputField.value.split('').join(' ');
  if(inputVal == captcha.innerText){ //if captcha matched
    statusTxt.style.color = "#4db2ec";
    statusTxt.innerText = "Nice! You don't appear to be a robot.";
    setTimeout(()=&amp;gt;{ //calling removeContent &amp;amp; getCaptcha after 2 seconds
      removeContent();
      getCaptcha();
    }, 2000);
  }else{
    statusTxt.style.color = "#ff0000";
    statusTxt.innerText = "Captcha not matched. Please try again!";
  }
});

function removeContent(){
 inputField.value = "";
 captcha.innerText = "";
 statusTxt.style.display = "none";
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That’s all, now you’ve successfully created a Custom Captcha in &lt;strong&gt;HTML CSS &amp;amp; JavaScript&lt;/strong&gt;. So this is all for today. &lt;br&gt;
Thanks!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Also Read&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://dev.to/afzalimamias/6-key-lesson-s-to-learn-from-rich-dad-poor-dad-for-programmers-4knp"&gt;6 Key Lesson’s to Learn From Rich Dad Poor Dad for Programmers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For more details please visit &lt;a href="https://codewithimam.blogspot.com/"&gt;Code With Imam&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>html</category>
      <category>css</category>
      <category>javascript</category>
      <category>captcha</category>
    </item>
    <item>
      <title>Tracking every minute of my day.</title>
      <author>Adarsh TS</author>
      <pubDate>Wed, 04 Aug 2021 03:02:24 +0000</pubDate>
      <link>https://dev.to/tsadarsh/tracking-every-minute-of-my-day-4ad8</link>
      <guid>https://dev.to/tsadarsh/tracking-every-minute-of-my-day-4ad8</guid>
      <description>&lt;p&gt;I became more aware of where I was spending my time. It was like someone watching me from behind. I became my own boss. Here I will be sharing my experience in tracking every minute of day for two weeks.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Even before I started tracking my time I was well aware of the fact that I was spending a lot of time doing unproductive activities. I used to dabble between YouTube, coding, college classes, Instagram whenever I felt like. There was no accountability. &lt;/p&gt;

&lt;p&gt;Every now and then I also used to read blogs on &lt;a href="//dev.to"&gt;Dev&lt;/a&gt;. On July 18 I happen to read a very interesting blog by &lt;a class="mentioned-user" href="https://dev.to/dragosbln"&gt;@dragosbln&lt;/a&gt;
 titled &lt;strong&gt;"I tracked every minute of my time for the last 4 months. Here are 7 totally unexpected results"&lt;/strong&gt;. &lt;a href="https://dev.to/dragosbln/i-tracked-every-minute-of-my-time-for-the-last-4-months-here-are-7-totally-unexpected-results-2dna"&gt;Here&lt;/a&gt; I'm also linking the article. It was an eye opener for me. The desire to track my own time also was very strong that I started tracking my time from that very minute.&lt;/p&gt;

&lt;p&gt;I am grateful to &lt;a class="mentioned-user" href="https://dev.to/dragosbln"&gt;@dragosbln&lt;/a&gt;
 for sharing his experience in a very detailed manner. The Toggl timer application proved to be extremely easy and fun to use. The Toggl timer app also syncs across the devices. Though I use the mobile app mostly to track my time, the web-app gives better analysis and plots of the tracked time.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#about-toggl"&gt;
  &lt;/a&gt;
  About Toggl
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://toggl.com/"&gt;Toggl&lt;/a&gt; timer provides a month of free premium trial after which one need to pay to continue using the &lt;strong&gt;Premium&lt;/strong&gt; plan. The &lt;strong&gt;free plan&lt;/strong&gt; packs enough features for getting most of things done. &lt;/p&gt;

&lt;p&gt;I started by creating some projects: &lt;strong&gt;Leisure, Online class, Sleep, Routines, Fitness, Spiritual and Misc&lt;/strong&gt;. These &lt;strong&gt;projects&lt;/strong&gt; are similar to the concept of &lt;em&gt;class&lt;/em&gt; in Object oriented programming paradigm. Every activity I track falls into one of the above mentioned projects. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s---KDcLujE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw8tix7hgoi4l0bfiqw4.PNG" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---KDcLujE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fw8tix7hgoi4l0bfiqw4.PNG" alt="track"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is definitely a pain to track time in the starting. I often used to forget to start/stop the timer when I move to the next activity. Furthermore, it is not pleasant to know that you have spent more than 40% of the day in &lt;strong&gt;Leisure&lt;/strong&gt; activities on some days.&lt;/p&gt;

&lt;p&gt;But yes, this is where we can seek improvement. I was able to cut down a lot of "switching-between" activities. Checking WhatsApp in between became a strict no-no unless I made an entry in Toggl timer. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;It felt simply great to know that I had control over my time. After two weeks of tracking my time I am now beginning to develop this as a habit. The daily and weekly analysis gives me enough information to know the activities which consume most of my time. &lt;/p&gt;

&lt;p&gt;Though I haven't made any significant changes to my daily activities, I made a point to get comfortable tracking my time by just recording my time and not focusing too much on optimizing it. Some of the comments on the OP mentioned about methods like "time-blocking" to improve the efficiency and productivity. Now that I am able to comfortably track my time I will try to implement these methods in the coming week.&lt;/p&gt;

&lt;p&gt;I now believe that every person needs to have control over his time. Tracking the time spent is probably the best way to get started. &lt;/p&gt;

</description>
      <category>productivity</category>
      <category>career</category>
      <category>motivation</category>
    </item>
    <item>
      <title>Top 20+ vue.js frameworks and libraries for your next project</title>
      <author>oyedeletemitope</author>
      <pubDate>Wed, 04 Aug 2021 01:23:14 +0000</pubDate>
      <link>https://dev.to/oyedeletemitope/top-20-vue-js-frameworks-and-libraries-for-your-next-project-2o4d</link>
      <guid>https://dev.to/oyedeletemitope/top-20-vue-js-frameworks-and-libraries-for-your-next-project-2o4d</guid>
      <description>&lt;p&gt;Vue is a progressive framework for building user interfaces. Unlike other monolithic frameworks, It offers a functionality-driven structure, in-detail documentation, and an easy learning curve to make it a favorable choice for beginners and experienced developers. It is an opportunity to move from other JavaScript frameworks to Vue.js&lt;br&gt;
In this article, we will be exploring over 20 vue frameworks and libraries that you might find useful for your next vue based projects.&lt;br&gt;
And also, each frameworks and libraries are spitted into three categories for easier navigation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;SSR/SPA : In this category, we will be listing vue most popular spa (single page application) and ssr (server side rendered) application generators.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Component-based : From ui library to helpful custom component necessary for the success of your project.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Miscellaneous:  All other important library that does not fall between the two categories above.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here we go!!!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#ssrspa-generator"&gt;
  &lt;/a&gt;
  SSR/SPA Generator
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1nuxt"&gt;
  &lt;/a&gt;
  1.Nuxt
&lt;/h3&gt;

&lt;p&gt;Server-Side Rendering is one of the most popular techniques to render SPAs on the server instead of the browser. It allows the website to have a faster page load time, and that is the key to a good user experience. Nuxt.js is built on SSR features, and with Nuxt, you can create SSR apps, PWAs, and SPAs, or you can use it as a static site generator. To get started &lt;a href="https://nuxtjs.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2vuepress"&gt;
  &lt;/a&gt;
  2.VuePress
&lt;/h3&gt;

&lt;p&gt;In layman’s terms, VuePress is a big player in Vue’s ecosystem that is widely used as a Vue-powered static site generator tool. It was presented for writing technical documentation, however, now it is used as a powerful headless CMS and the significant benefit of VuePress is that it lets you include Vue components into your Markdown files. VuePress provides extra power and flexibility to build your website like a regular Vue app. To get started &lt;a href="https://vuepress.vuejs.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3gridsome"&gt;
  &lt;/a&gt;
  3.Gridsome
&lt;/h3&gt;

&lt;p&gt;Gridsome is a modern website development framework for creating fast and secure websites and deploy it to Netlify or Amazon s3 – CDN. Through it has been lately introduced; however, it has gained immense popularity and followers amongst Vue developers. Gridsome creators were influenced by Gatsby.js – a site generator for React. Gridsome generates SEO-friendly HTML files based on the data source. The data source can be JSON, Markdown, CSV, Drupal, WordPress, MongoDB or Airtable, etc. Once the content is loaded, it turns into a single GraphQL Data Layer for centralized data management, and then you can extract it to build and deploy your Vue application. To get started &lt;a href="https://gridsome.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#componentbased-framework"&gt;
  &lt;/a&gt;
  Component-based framework
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1primevue"&gt;
  &lt;/a&gt;
  1.Primevue
&lt;/h3&gt;

&lt;p&gt;A Vue Component Library for amazing user interface design. Primevue is also available for Angular, Java, and React. To get started&lt;a href="https://madewithvuejs.com/primevue"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2vuestic"&gt;
  &lt;/a&gt;
  2.Vuestic
&lt;/h3&gt;

&lt;p&gt;Vuestic is a Vue component library to build responsive dashboards using the functionality of Material Forms, i18n, Bootstrap 4, Webpack, and Google maps. Vasili Savitski designed this library and Epicmax developed it. To get started&lt;a href="https://vuestic.dev/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3-vee-validate"&gt;
  &lt;/a&gt;
  3. Vee Validate
&lt;/h3&gt;

&lt;p&gt;Another validation library for Vue that keeps a check on input and displaying errors. The PHP Framework Laravel’s validation inspired Vue to come up with this library. It is template-based, has zero dependencies, and has support from 40+ locales. It is one of the vue best practices to include Vue Validation while developing your web application. To get started&lt;a href="https://vee-validate.logaretm.com/v4/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4weex"&gt;
  &lt;/a&gt;
  4.Weex
&lt;/h3&gt;

&lt;p&gt;This one is a UI framework for Vue mobile applications for building modern and lightweight apps. Vue Developers will experience a new and vibrant mobile development experience when using Weex. To get started&lt;a href="http://emas.weex.io/guide/use-vue-in-weex.html#runtime-only-build"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5filepond"&gt;
  &lt;/a&gt;
  5.Filepond
&lt;/h3&gt;

&lt;p&gt;Filepond is a JS component library that is available for Angular, Vue, React, Svelte, and jQuery which can help you upload anything from anywhere. It offers amazing flexibility, easy optimization of images before uploading, and a flawless UX. To get started&lt;a href="https://pqina.nl/filepond/docs/getting-started/installation/vue/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6mint-ui"&gt;
  &lt;/a&gt;
  6.Mint UI
&lt;/h3&gt;

&lt;p&gt;Mint UI is a lightweight library that enables using varied CSS and JS components such that you can build mobile apps and cohesive web pages at a much faster rate. It provides an iOS-like theme for your mobile application components and it is loaded on demand, hence no file-size issues. To get started&lt;a href="https://madewithvuejs.com/mint-ui"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#7vux"&gt;
  &lt;/a&gt;
  7.Vux
&lt;/h3&gt;

&lt;p&gt;Vux is a Vue Component library having Chinese origin and it has various mobile UI components as well as WeUI components from the company WeChat. The Vux workflow + Vue-loader + Webpack are supporting the Vux. Though most of the documentation of this library is in Chinese and very little English translation is available, but you can get help from the community. To get started&lt;a href="https://madewithvuejs.com/vux"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#8iview"&gt;
  &lt;/a&gt;
  8.iView
&lt;/h3&gt;

&lt;p&gt;Based on Vue.js 2, iView is a popular UI toolkit providing several widgets and UI components having a clean and elegant design. The component library comes with its offline documentation and CLI tool to visualize projects. To get started&lt;a href="https://www.iviewui.com"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#9vuelidate"&gt;
  &lt;/a&gt;
  9.Vuelidate
&lt;/h3&gt;

&lt;p&gt;A minimalistic validation component library for Vue, which is lightweight, simple, and is model-based. Vuelidate is decoupled from templates and has support from nested models, function composition, and collection validations. It helps you validate data from varied sources like computed values, Vuex getters, etc.&lt;br&gt;
To get started&lt;a href="https://vuelidate.js.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#10eaglejs"&gt;
  &lt;/a&gt;
  10.Eagle.js
&lt;/h3&gt;

&lt;p&gt;Eagle is a Vue framework that presents a cool web-based slideshow and supports interactive widgets, themes, animations, reusable components, and more. You can easily customize the Eagle API for your Vue project. To get started&lt;a href="https://www.vuescript.com/hackable-slideshow-framework-built-vue-js-eagle-js/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#11bootstrap-vue"&gt;
  &lt;/a&gt;
  11.Bootstrap Vue
&lt;/h3&gt;

&lt;p&gt;Bootstrap Vue is a frontend CSS and Vue component library that simply eliminates the JavaScript in the routine bootstrap components with Vue code. With Bootstrap Vue, you can build mobile-first and responsive, projects making use of frontend CSS library — Bootstrap v4. Bootstrap Vue is one of the fastest ways to build interactive interfaces using Vue and bootstrap as it provides a lot of resources, starter kits, and themes to startup quickly. To get started&lt;a href="https://bootstrap-vue.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#12quasar"&gt;
  &lt;/a&gt;
  12.Quasar
&lt;/h3&gt;

&lt;p&gt;Quasar is a high performance, material design two and feature-complete node.js based collection of tools for building reliable, fast and engaging progressive web-app, developing and publishing a website; a secure way to make native apps for macOS, Linux, and Windows with Electron and a system for building cross-platform apps with Cordova. It’s an innovative solution for web developers derived from innovative ideas and concepts to alleviate the pain of managing the project with babel, eslinet, web pack, and more in a single framework. Quasar eliminates the use of additional libraries like Bootstrap, Hammerjs, or Momentjs as it has got that covered too. To get started&lt;a href="https://quasar.dev/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#13vuetify"&gt;
  &lt;/a&gt;
  13.Vuetify
&lt;/h3&gt;

&lt;p&gt;Vuetify is a large set of 80+ crafted component libraries based on Material Design such as banners, badges, form inputs and controls, buttons, progress widgets, and many more such things that are sufficient for any application’s requirements. Whether you want to start a new application or looking for assistance to add them to the existing app, you can use it to build SSR apps, mobile apps, SPAs, and PWAs. To get started&lt;a href="https://vuetifyjs.com/en/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#14element-ui"&gt;
  &lt;/a&gt;
  14.Element UI
&lt;/h3&gt;

&lt;p&gt;Element UI is a Vue component library with an active set of 500+ maintainers that are widely used by developers, designers, and product managers. Element UI is mostly used to create desktop applications, as its components are not responsive. It is one of the most popular component-based libraries of Vue.js. This library is based on a design system, so it precisely thought out down even the smallest detail. It provides lots of valuable information to assist you with components and several of its valuable resources. So, for the desktop application, without a doubt, it is one of the best libraries to take into consideration. To get started&lt;a href="https://madewithvuejs.com/element-ui"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#15vue-tailwind"&gt;
  &lt;/a&gt;
  15.Vue Tailwind
&lt;/h3&gt;

&lt;p&gt;A Vue component library for lightweight and customizable components for your application. It is based on Tailwind-CSS. To get started&lt;a href="https://madewithvuejs.com/vue-tailwind"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#16vue-multiselect"&gt;
  &lt;/a&gt;
  16.Vue Multiselect
&lt;/h3&gt;

&lt;p&gt;This Vue library component is for using the selections in your application. Multiselect offers no dependencies, single &amp;amp; multiple selections, tagging, filtering, drop-downs, search suggestions, and so much more.  To get started&lt;a href="https://vue-multiselect.js.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#17buefy"&gt;
  &lt;/a&gt;
  17.Buefy
&lt;/h3&gt;

&lt;p&gt;Buefy is another lightweight Vue JS Component library that is based on Bulma. It helps you simplify your app UI by adding a JS layer of the interface created with BulmaCSS. You’ll see your Vue components following Material Design UX and Bulma designs.  To get started&lt;a href="https://buefy.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#18keen-ui"&gt;
  &lt;/a&gt;
  18.Keen UI
&lt;/h3&gt;

&lt;p&gt;Keen UI helps you build interactive javascript components for page layout, CSS framework, and structure. It has a simple API, but it doesn’t support typogra[hy styles or grid-system.  To get started&lt;a href="https://madewithvuejs.com/keen-ui"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#19cube-ui"&gt;
  &lt;/a&gt;
  19.Cube UI
&lt;/h3&gt;

&lt;p&gt;A Vue library for fantastic mobile user-interface design. It offers design scalability, keeps a uniform standard, and an interactive experience. To get started&lt;a href="https://www.vuescript.com/mobile-ui-library-vue-cube-ui/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#miscellaneous"&gt;
  &lt;/a&gt;
  Miscellaneous
&lt;/h2&gt;

&lt;h3&gt;
  &lt;a href="#1vue-cli"&gt;
  &lt;/a&gt;
  1.Vue CLI
&lt;/h3&gt;

&lt;p&gt;Vue CLI is a fully-featured set of tools with installed npm packages that allows you to create project structures and deploy boilerplates rapidly in your terminal. With the use of Vue CLI, you can experiment with new ideas to create instant prototypes to demonstrate new features. Moreover, Vue CLI offers support for web development tools like Babel, ESLint, PostCSS, TypeScript, Unit Testing, PWA Mocha, Cypress, Nightwatch, and end-to-end testing. However, the apple of the eye is Graphical UI – Vue UI that comes along with the CLI that lets you create new projects and manage them accordingly.  To get started&lt;a href="https://cli.vuejs.org/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#2vuerouter"&gt;
  &lt;/a&gt;
  2.Vue-router
&lt;/h3&gt;

&lt;p&gt;If you are already familiar with other JavaScript frameworks, the concept of routing shouldn’t be new to you. The use of a router is to map the applications, and the Vue router supports component-based router configuration. Vue-router also supports wildcards, params, and querying to perform complex routing and the possibility to choose between hash mode or HTML5 history. To get started&lt;a href="https://router.vuejs.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#3vuex"&gt;
  &lt;/a&gt;
  3.VueX
&lt;/h3&gt;

&lt;p&gt;vuex is a state management system that you can use as a centralized store to solve all the state management functions and to make sure that states are mutated predictably. To get started&lt;a href="https://vuex.vuejs.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#4vue-apollo"&gt;
  &lt;/a&gt;
  4.Vue Apollo
&lt;/h3&gt;

&lt;p&gt;You might have heard lots of buzz around GraphQL, and if you are interested in integrating it with Vue.js, then I would like to suggest you try Vue Apollo. The library makes use of Vue in the combination of GraphQL/Apollo for a smooth as well as a pleasant experience. To get started&lt;a href="https://apollo.vuejs.org"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#5vue-resource"&gt;
  &lt;/a&gt;
  5.Vue Resource
&lt;/h3&gt;

&lt;p&gt;Vue Resource is a Vue component library for handling web requests and responses. It either uses JSONP or XMLHttpRequest to undertake the procedure. It supports interceptors, Promise API, and URI templates. Web browsers like IE9+, Chrome, Firefox, Safari, Opera, etc. are supporting this Vue plugin. To get started&lt;a href="https://www.npmjs.com/package/vue-resource"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#6-poi"&gt;
  &lt;/a&gt;
  6. Poi
&lt;/h3&gt;

&lt;p&gt;Poi is a pre-configuration bundler for the web, and is popularly called a zero-config bundler. You can also avail Poi as a plugin so that you can use the extra features and options of the Poi library. To get started&lt;a href="https://poi.js.org/"&gt;Click here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Conclusion&lt;br&gt;
There are tons of vue components out there, and this article has been able to help filter out the noise by listing the ones that are super important for your next project. If you find this useful, you should definitely share with your friends.&lt;/p&gt;

</description>
      <category>javascript</category>
      <category>devops</category>
      <category>100daysofcode</category>
      <category>vue</category>
    </item>
    <item>
      <title>Why NaN === NaN returns false in JavaScript ?!</title>
      <author>Sekab</author>
      <pubDate>Wed, 04 Aug 2021 01:01:06 +0000</pubDate>
      <link>https://dev.to/amrtaher1234/why-nan-nan-returns-false-in-javascript-14o6</link>
      <guid>https://dev.to/amrtaher1234/why-nan-nan-returns-false-in-javascript-14o6</guid>
      <description>&lt;p&gt;When people start exploring topics about JavaScript they get to feel a little weird sometimes and they also start to wonder why the heck do JavaScript act in such a manner, there have been even Github Repos like &lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You Don't Know JS&lt;/a&gt; that explains how JavaScript works and so.&lt;/p&gt;

&lt;p&gt;Today I wanted to explain a gotcha topic that people usually post memes about and hate on JavaScript because of such a topic ( Which I kinda understand why they do so ), I will be explaining why &lt;code&gt;NaN === NaN&lt;/code&gt; results in a &lt;strong&gt;Falsy&lt;/strong&gt; expression. Let us get started with some basics first.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-the-difference-between-raw-endraw-and-raw-endraw-"&gt;
  &lt;/a&gt;
  What is the difference between &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;Whenever we compare two variables using the double equal operator we compare them using only their values, meaning if a variable A contains some value and variable B contains some other value and we did &lt;code&gt;A == B&lt;/code&gt; what will happen is that JavaScript will check their current values and return &lt;code&gt;true&lt;/code&gt; if they are equal.&lt;/p&gt;

&lt;p&gt;but what if we did something like this: &lt;code&gt;"1" == 1&lt;/code&gt;, what would be the result of such expression? &lt;/p&gt;

&lt;p&gt;A normal person with some logical understanding would definitely guess that the output would be &lt;code&gt;false&lt;/code&gt; because we are comparing a string to a number even if they have the same characters.&lt;/p&gt;

&lt;p&gt;What will actually happen is that this output will be expressed as &lt;code&gt;true&lt;/code&gt;. Why is that? When we use the double equal operator JavaScript will attempt to convert and compare operands of different types, meaning that they both would be converted to the same type and in case of comparing a  number to a string JavaScript will try and convert the string to a number type like this: &lt;code&gt;Number("1") == 1&lt;/code&gt; which will output in that case &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What if we have a case in which we actually want to compare the types of the variables we have and then compare their values without attempting any conversion? &lt;br&gt;
In that case, using the triple equal operators or the &lt;strong&gt;Strict equality&lt;/strong&gt; would come in handy, what the strict equality operator simply does is checking if the operands are of the same type and then checks if they have the same value or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// true;&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;// false;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We could simply imagine that JavaScript under the hood does something like this when using the strict equality:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;1&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nx"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;// in case of doing a === b;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-raw-nan-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;NaN&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;According to the MDN documentation &lt;code&gt;NaN&lt;/code&gt; is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;NaN is a property of the global object. In other words, it is a variable in global scope.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So basically &lt;code&gt;NaN&lt;/code&gt; is simply a global object that describes what a not number is or whenever we have a variable that we are attempting to convert to a number and we fail it simply gives us &lt;code&gt;NaN&lt;/code&gt; like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;hello world&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;convertedToNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;convertedToNumber&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// NaN;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#what-is-raw-typeof-endraw-"&gt;
  &lt;/a&gt;
  What is &lt;code&gt;typeof&lt;/code&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;typeof&lt;/code&gt; is simply a JavaScript operator that returns a string that indicates the type of an operand.&lt;/p&gt;

&lt;p&gt;There are basically 9 types in JavaScript:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Undefined "undefined"&lt;/li&gt;
&lt;li&gt;Null  "object" (see below)&lt;/li&gt;
&lt;li&gt;Boolean   "boolean"&lt;/li&gt;
&lt;li&gt;Number    "number"&lt;/li&gt;
&lt;li&gt;BigInt "bigint"&lt;/li&gt;
&lt;li&gt;String    "string"&lt;/li&gt;
&lt;li&gt;Symbol "symbol"&lt;/li&gt;
&lt;li&gt;Function object (implements [[Call]] in ECMA-262 terms)   "function"&lt;/li&gt;
&lt;li&gt;object    "object"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever &lt;code&gt;typeof&lt;/code&gt; is used one of these types would be the result, an example for that would be:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt; &lt;span class="c1"&gt;// string;&lt;/span&gt;
&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="c1"&gt;// number;&lt;/span&gt;
&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt; &lt;span class="c1"&gt;// function;&lt;/span&gt;
&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;// boolean;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#why-raw-nan-nan-endraw-returns-raw-false-endraw-"&gt;
  &lt;/a&gt;
  Why &lt;code&gt;NaN === NaN&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;?
&lt;/h2&gt;

&lt;p&gt;And finally, let us get into the core of this article, why when we explained how strict equality works and what is NaN does this expression provide us with a falsy value?&lt;/p&gt;

&lt;p&gt;let us simplify the answer by looking into the strict equality comparison algorithm:&lt;/p&gt;

&lt;p&gt;let us define the following two operands: x, and y. &lt;/p&gt;

&lt;p&gt;according to the JavaScript documentation ( This is a snippet from the docs ), the comparison algorithm works in the following matter:&lt;/p&gt;

&lt;p&gt;The comparison x === y, where x and y are values, produces true or false. Such a comparison is performed as follows:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If Type(x) is Number, then&lt;br&gt;
If x is NaN, return false.&lt;br&gt;
If y is NaN, return false.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This means that the algorithm first checks if one of the operands is &lt;code&gt;NaN&lt;/code&gt; before even checking their types and if so it will return &lt;code&gt;false&lt;/code&gt; anyways.&lt;/p&gt;

&lt;p&gt;This may be a weird implementation of the comparison algorithm but there are some workarounds for this, we could use built-in functions like &lt;code&gt;Number.isNaN()&lt;/code&gt; to check whether the giving parameter is a &lt;code&gt;NaN&lt;/code&gt; or not instead of comparing it with &lt;code&gt;NaN&lt;/code&gt; directly&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;invalidNumber&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;asdasdasd&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// NaN;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;resultOfNormalComparison&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;invalidNumber&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="kc"&gt;NaN&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// false;&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;resultOfBuiltInComparison&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;isNaN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;invalidNumber&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// true;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You could somehow disagree on the implementation of the comparison algorithm but there are workarounds to check if a given variable or parameter is a &lt;code&gt;NaN&lt;/code&gt; or not as shown above.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://es5.github.io/#x11.9.6"&gt;Comparison algorithm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/typeof"&gt;Typeof guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN"&gt;NaN guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>javascript</category>
      <category>tutorial</category>
      <category>programming</category>
      <category>node</category>
    </item>
    <item>
      <title>Linux Terminal Cheat Sheet (Useful for Beginners)</title>
      <author>Clean Code Studio</author>
      <pubDate>Tue, 03 Aug 2021 23:55:18 +0000</pubDate>
      <link>https://dev.to/cleancodestudio/linux-terminal-cheat-sheet-useful-for-beginners-2e6c</link>
      <guid>https://dev.to/cleancodestudio/linux-terminal-cheat-sheet-useful-for-beginners-2e6c</guid>
      <description>&lt;p&gt;A Linux cheat sheet for beginners (short, sweet, and to the point)&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#linux-useful-commands-terminal-cheat-sheet"&gt;
  &lt;/a&gt;
  Linux (Useful Commands) Terminal Cheat Sheet
&lt;/h2&gt;




&lt;p&gt;&lt;strong&gt;Navigation Commands:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;passwd&lt;/code&gt; - change password&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ls&lt;/code&gt; - list directory (Can point at any point on the machine)

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;-la&lt;/code&gt; a flag that lists all + permissions and hidden files&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pwd&lt;/code&gt; - print working directory - check where you're at&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cd&lt;/code&gt; - change directory (Can address at any point in the machine file system)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;mkdir&lt;/code&gt; - make directory&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rmdir&lt;/code&gt; - remove director&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;rm&lt;/code&gt; - remove files&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;echo&lt;/code&gt; - sends data (if no destination is given than data is sent as output to the terminal)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;cp&lt;/code&gt; copy a file (&lt;code&gt;cp [source] [desintation]&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;mv&lt;/code&gt; - mv a file (&lt;code&gt;mv [source] [desintation]&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;locate&lt;/code&gt; - locate a file on the machine (&lt;code&gt;locate [filename]&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;updatedb&lt;/code&gt; - updates the directory database (must run before running locate)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;man&lt;/code&gt; - manual page of any command&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;grep&lt;/code&gt; - search for the following words (can be used to check if a file contains specific info)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Linux is case sensitive so be aware of your capital letters!&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;./&lt;/code&gt; - your directory right now&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;../&lt;/code&gt; - previous folder&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;~&lt;/code&gt; - the users root folder&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;|&lt;/code&gt; - pipe the output of one command into another&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;gt;&lt;/code&gt; - use command on the following file (overwrite)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; - use command on following file (appends)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Privilege's and user commands:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;cat&lt;/code&gt; - reads a file to the terminal&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;chmod&lt;/code&gt; - changes permissions for a file&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;adduser&lt;/code&gt; - make a new user &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;sudo&lt;/code&gt; - give root permissions for the following command being executed &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;su&lt;/code&gt; - switch user &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Network Commands:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;ifconfig&lt;/code&gt; - print network information&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;iwconfig&lt;/code&gt; - wireless network information&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;ping&lt;/code&gt; - ping an ip address (&lt;code&gt;-c&lt;/code&gt; flag lets you define how many times you wish to ping the given ip address)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;arp -a&lt;/code&gt; - send out an arp request to check for machines on the network&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;netstat -a&lt;/code&gt; - shows all open ports and what is connected to these ports&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;route&lt;/code&gt; - shows a routing table&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Viewing, creating, and editing commands:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;history&lt;/code&gt; - lists the 15 commands you entered (&lt;code&gt;history | grep [command]&lt;/code&gt; shows all the times you run a command on the machine (including specific syntax))&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;touch&lt;/code&gt; - create a file&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;nano&lt;/code&gt; - use the nano text editor&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;apt-get&lt;/code&gt; - install [program name] - install a program on the machine (can be run without the install)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;apt install&lt;/code&gt; - install a file from the system / kali - server&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;apt purge&lt;/code&gt; - program name - (You have to use the * *)&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;pip install&lt;/code&gt; - run an installer for local files&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git clone&lt;/code&gt; - clone a github repository (This is a plugin and does not come preinstalled on most linux distributions!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Webserver Commands:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;service apache2 start&lt;/code&gt; - start a webserver&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;service ssh start&lt;/code&gt; - start an ssh server&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;service postgresql start&lt;/code&gt; - a service that starts with metasploit &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;service apache2 stop&lt;/code&gt; - stops the webserver&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;systemctl enable [program name]&lt;/code&gt; - start the service when the machine turns on&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Important files/directories in Linux:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;code&gt;/etc/passwd&lt;/code&gt; - a file that stores all of the users in the system&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;/etc/shadow&lt;/code&gt; - stores all of the passwords in the system&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;/var/log/auth.log&lt;/code&gt; - authentication reports&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading and feel free to follow Clean Code Studio for more! &lt;/p&gt;


&lt;div class="ltag__user ltag__user__id__386677"&gt;
  
    .ltag__user__id__386677 .follow-action-button {
      background-color: #339d15 !important;
      color: #ffffff !important;
      border-color: #339d15 !important;
    }
  
    &lt;a href="/cleancodestudio" class="ltag__user__link profile-image-link"&gt;
      &lt;div class="ltag__user__pic"&gt;
        &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--iaD-SiIM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--uL9Viyw2--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/386677/50ab5359-8342-4fc0-961a-04bb95957fa1.jpg" alt="cleancodestudio image"&gt;
      &lt;/div&gt;
    &lt;/a&gt;
  &lt;div class="ltag__user__content"&gt;
    &lt;h2&gt;
&lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Studio&lt;/a&gt;Follow
&lt;/h2&gt;
    &lt;div class="ltag__user__summary"&gt;
      &lt;a class="ltag__user__link" href="/cleancodestudio"&gt;Clean Code Clean Life ~ Simplify&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;&lt;a href="https://cleancode.studio"&gt;Clean Code Studio&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/design-patterns"&gt;Java Script Design Patterns&lt;/a&gt;&lt;br&gt;
&lt;a href="https://cleancode.studio/clean-code"&gt;Clean Code&lt;/a&gt;&lt;br&gt;
[JavaScript Algorithm Examples]&lt;/p&gt;

</description>
      <category>linux</category>
      <category>commands</category>
      <category>terminal</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>How to create server files with Flask</title>
      <author>Nelson Adonis Hernandez</author>
      <pubDate>Tue, 03 Aug 2021 23:38:39 +0000</pubDate>
      <link>https://dev.to/nelsoncode/how-to-create-server-files-with-flask-4hdp</link>
      <guid>https://dev.to/nelsoncode/how-to-create-server-files-with-flask-4hdp</guid>
      <description>&lt;p&gt;In this example I will show you how to upload, download, delete and obtain files with Flask&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-upload-multiple-files-by-form-data-using-flask"&gt;
  &lt;/a&gt;
  How to upload multiple files by Form Data using Flask
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/upload"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;upload_image&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;"POST"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="nb"&gt;file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'file'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/images/"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Imagen saved"&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;FileNotFoundError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Folder not found"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-download-files-using-flask"&gt;
  &lt;/a&gt;
  How to download files using Flask
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/download/file/&amp;lt;string:filename&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;download_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;send_from_directory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/images/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;as_attachment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-get-files-using-flask"&gt;
  &lt;/a&gt;
  How to get files using Flask
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/file/&amp;lt;string:filename&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;send_from_directory&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/images/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;as_attachment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#how-to-delete-files-using-flask-with-form-data"&gt;
  &lt;/a&gt;
  How to delete files using Flask with Form Data
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight python"&gt;&lt;code&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'/delete'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;methods&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'POST'&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;remove_image&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'filename'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c1"&gt;# CHECK IF EXISTS FILE
&lt;/span&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isfile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/images/"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Esto no es un archivo"&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;"/images/"&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="nb"&gt;OSError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"Error :(("&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s"&gt;"File deleted"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'__main__'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;8000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"0.0.0.0"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>flask</category>
      <category>backend</category>
      <category>python</category>
      <category>nelsoncode</category>
    </item>
  </channel>
</rss>
