<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>Custom React useFetch() hook for data fetching with revalidation</title>
      <author>damilola jerugba</author>
      <pubDate>Mon, 27 Dec 2021 08:55:34 +0000</pubDate>
      <link>https://dev.to/brimble/custom-react-usefetch-hook-for-data-fetching-with-revalidation-f7k</link>
      <guid>https://dev.to/brimble/custom-react-usefetch-hook-for-data-fetching-with-revalidation-f7k</guid>
      <description>&lt;p&gt;This guide is to show you how to create a simple react hook for data fetching (with revalidation).&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-this-hook"&gt;
  &lt;/a&gt;
  🤨 Why this hook?
&lt;/h2&gt;

&lt;p&gt;When fetching data for your react applications, you'd usually use both &lt;code&gt;useState&lt;/code&gt; and &lt;code&gt;useEffect&lt;/code&gt;, with values like &lt;code&gt;loading&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; e.g &lt;a href="https://github.com/damiisdandy/use-pagination/blob/master/src/App.tsx"&gt;This example&lt;/a&gt;, this hook is to help abstract that functionality into one simple hook that can be used anywhere and multiple times.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#setting-up-the-project"&gt;
  &lt;/a&gt;
  🕺 Setting up the project
&lt;/h2&gt;

&lt;p&gt;We would be using the &lt;code&gt;create-react-app&lt;/code&gt; boiler template for typescript and the only external library we would be using is &lt;code&gt;axios&lt;/code&gt; for data fetching.&lt;/p&gt;

&lt;p&gt;Open up your terminal and type in the following commands.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;yarn create react-app use-fetch --template typescript
# for npm
npx create-react-app use-fetch --template typescript
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Change into the directory and install &lt;code&gt;axios&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd use-fetch
yarn add axios
# for npm
npm install axios
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Within the &lt;code&gt;src&lt;/code&gt; directory delete the following file (because they aren't needed)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;App.css&lt;/li&gt;
&lt;li&gt;App.test.tsx&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;
  &lt;a href="#custom-raw-usefetch-endraw-hook"&gt;
  &lt;/a&gt;
  🎣 Custom &lt;code&gt;useFetch&lt;/code&gt; hook
&lt;/h2&gt;

&lt;p&gt;Within the &lt;code&gt;src&lt;/code&gt; directory create another directory called &lt;code&gt;hooks&lt;/code&gt;, this is where our hook will reside.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd src
mkdir hooks
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Your file structure should look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--z2erQZS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e1l0z0k8qi5nfsfj21m.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z2erQZS---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/3e1l0z0k8qi5nfsfj21m.png" alt="file structure" width="256" height="393"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Within the &lt;code&gt;hooks&lt;/code&gt; directory create a file called &lt;code&gt;useFetch.tsx&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Type in the following inside the &lt;code&gt;useFetch&lt;/code&gt; file.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;axios&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;UseFetchProps&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;UseFetchProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// function to fetch data&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fetchedData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// on first load fetch data&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;The hook takes in a prop &lt;code&gt;url&lt;/code&gt;, which is the API url at which we want to fetch data from. It has two states &lt;code&gt;data&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; which are used to store data gotten from the API and check for errors respectively.&lt;/p&gt;

&lt;p&gt;We created a separate function for fetching the data called &lt;code&gt;fetch&lt;/code&gt; and wrapped it within a &lt;code&gt;useCallback&lt;/code&gt; hook, Visit &lt;a href="https://www.geeksforgeeks.org/react-js-usecallback-hook/#:~:text=The%20useCallback%20hook%20is%20used,of%20the%20dependencies%20has%20changed."&gt;here&lt;/a&gt; to see the reason why we used a &lt;code&gt;useCallback&lt;/code&gt; hook.&lt;/p&gt;

&lt;p&gt;Then we simply used a &lt;code&gt;useEffect&lt;/code&gt; hook to run the &lt;code&gt;fetch&lt;/code&gt; function as soon as the hook is mounted 🙂.&lt;/p&gt;

&lt;p&gt;The hook returns &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;revalidate&lt;/code&gt; which is the &lt;code&gt;fetch&lt;/code&gt; function for when we want to programmatically revalidate the data.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#using-the-hook"&gt;
  &lt;/a&gt;
  😎 Using the hook
&lt;/h2&gt;

&lt;p&gt;To use the hook we simply just import it and extract its values.&lt;br&gt;
Within the &lt;code&gt;App.tsx&lt;/code&gt;&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./hooks/useFetch&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;logo&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./logo.svg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://random-data-api.com/api/users/random_user?size=5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Loading&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nb"&gt;Error&lt;/span&gt; &lt;span class="nx"&gt;fetching&lt;/span&gt; &lt;span class="nx"&gt;users&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h2&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;;
&lt;/span&gt;  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;App&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;logo&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;react logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;title&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;useFetch&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;onClick&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;items&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="na"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;
              &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`https://avatars.dicebear.com/api/big-smile/&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.svg`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; profile`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item__img&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
            &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;item__info&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;name&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;last_name&lt;/span&gt;&lt;span class="p"&gt;}{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;span&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;username&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;(@{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;username&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/span&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;job&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;employment&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;title&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;
                &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;`status &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;
                  &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;active&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;success&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toLowerCase&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;blocked&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;danger&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                    &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;warn&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subscription&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
              &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;          &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="p"&gt;))}&lt;/span&gt;
      &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;  &lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h2&gt;
  &lt;a href="#adding-interval-revalidation"&gt;
  &lt;/a&gt;
  ⏰ Adding Interval revalidation
&lt;/h2&gt;

&lt;p&gt;You might need to fetch data from your API every 5 seconds for revalidation (ensuring your data is up-to-date).&lt;/p&gt;

&lt;p&gt;We need to add some modifications to our &lt;code&gt;useFetch&lt;/code&gt; hook. Lets and more props.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;UseFetchProps&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;&lt;code&gt;revalidate&lt;/code&gt; will be a boolean to check if we want to implement interval revalidation or not, &lt;code&gt;interval&lt;/code&gt; will be the time taken between every revalidation (in seconds).&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;UseFetchProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;We'll create a state called &lt;code&gt;revalidateKey&lt;/code&gt; that we will change on every interval which will be added to our &lt;code&gt;useEffect&lt;/code&gt; dependency array. Adding this to our dependency array will ensure that the function within our &lt;code&gt;useEffect&lt;/code&gt; will run everytime the &lt;code&gt;revalidateKey&lt;/code&gt; changes.&lt;/p&gt;

&lt;p&gt;To change the &lt;code&gt;revalidateKey&lt;/code&gt;, we will create a new &lt;code&gt;useEffect&lt;/code&gt; that has a &lt;code&gt;setInterval&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;revalidateKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setRevalidateKey&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;revalidateInterval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setRevalidateKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="c1"&gt;// if no interval is given, use 3 seconds&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;revalidateInterval&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Our &lt;code&gt;useFetch&lt;/code&gt; hook should then look something like this.&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt; &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;}:&lt;/span&gt; &lt;span class="nx"&gt;UseFetchProps&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;revalidateKey&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setRevalidateKey&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;any&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// function to fetch data&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useCallback&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;try&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;fetchedData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nx"&gt;axios&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="nx"&gt;setData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;fetchedData&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;catch&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nx"&gt;setError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;revalidateInterval&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;setInterval&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;setRevalidateKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;random&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="c1"&gt;// if no interval is given, use 3 seconds&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;interval&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;clearInterval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;revalidateInterval&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="nx"&gt;useEffect&lt;/span&gt;&lt;span class="p"&gt;(()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// on first load fetch data and when revalidateKey changes&lt;/span&gt;
    &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidateKey&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;Using the &lt;code&gt;useFetch&lt;/code&gt; hook ✨&lt;br&gt;
&lt;/p&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;revalidate&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;useFetch&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://random-data-api.com/api/users/random_user?size=5&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;revalidate&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;// fetch every 5 seconds&lt;/span&gt;
    &lt;span class="na"&gt;interval&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h3&gt;
  &lt;a href="#graphql-support"&gt;
  &lt;/a&gt;
  ⚠️ Graphql support
&lt;/h3&gt;

&lt;p&gt;This hook uses only the &lt;code&gt;GET&lt;/code&gt; method, and Graphql uses &lt;code&gt;POST&lt;/code&gt; method for &lt;a href="https://medium.com/@stubailo/how-to-call-a-graphql-server-with-axios-337a94ad6cf9"&gt;data fetching&lt;/a&gt;. To make the hook more dynamic you can add more props like &lt;code&gt;isGraphql&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt;, &lt;code&gt;isGraphql&lt;/code&gt; will be a boolean to check if its Graphql or REST so you can have a condition in your hook to use &lt;code&gt;axios.post()&lt;/code&gt; instead of &lt;code&gt;axios.get()&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt; for the graphql query.&lt;/p&gt;

&lt;p&gt;Thank you for reading 🙏🏾, If you have any questions, additions, or subtractions please comment below.&lt;/p&gt;

&lt;p&gt;The full source code is linked below 👇👇&lt;/p&gt;


&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--566lAguM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-5a155e1f9a670af7944dd5e12375bc76ed542ea80224905ecaf878b9157cdefc.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/brimblehq"&gt;
        brimblehq
      &lt;/a&gt; / &lt;a href="https://github.com/brimblehq/use-fetch"&gt;
        use-fetch
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      data fetching hook with revalidation
    &lt;/h3&gt;
  &lt;/div&gt;
&lt;/div&gt;



</description>
      <category>javascript</category>
      <category>react</category>
      <category>typescript</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>5 Tools That Saves Development Time</title>
      <author>Sk Shoyeb</author>
      <pubDate>Mon, 27 Dec 2021 08:02:03 +0000</pubDate>
      <link>https://dev.to/shoyeb001/5-tools-that-saves-development-time-22c4</link>
      <guid>https://dev.to/shoyeb001/5-tools-that-saves-development-time-22c4</guid>
      <description>&lt;p&gt;If you want to be a good developer, you should be aware about time. Developers use many time saving methods or tools. In this article I will share 5 tools that will help you in &lt;strong&gt;saving development time&lt;/strong&gt;. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#mockflow"&gt;
  &lt;/a&gt;
  MockFlow
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;MockFlow&lt;/strong&gt; is a cloud based mockup design software. Web designers and software developers use this for product design and layout design. You can also say this is a &lt;strong&gt;alternative of Figma&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;MockFlow provides you easy user interface to design your product. You don't have to spend time in learning this tool like photoshop. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#json-formatter"&gt;
  &lt;/a&gt;
  JSON Formatter
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;JSON Formatter&lt;/strong&gt; is an online JSON validator or formatter tool. You can easily validate your JSON code and also format it. It reduce much time in writing JSON. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fingerprintjs"&gt;
  &lt;/a&gt;
  FingerprintJS
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;FingerprintJS&lt;/strong&gt; is a very useful Javascript library which is use to implement fingerprint validator in website. You can easily make fingerprint validation in your application with just some line of codes. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#css-color-picker"&gt;
  &lt;/a&gt;
  CSS Color Picker
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;CSS Color picker&lt;/strong&gt; is a chrome extension. This helps in getting color code of any element in browser just clicking the mouse pointer in the element. Using this tools you can get color code of any design. &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#flaticon"&gt;
  &lt;/a&gt;
  Flaticon
&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Flaticon&lt;/strong&gt; provides you free custom icons that you can use in your website. The icons are very attractive. &lt;/p&gt;

&lt;p&gt;These were the &lt;strong&gt;5 time saving development tools&lt;/strong&gt;. Hope the tools will also help you in saving time. &lt;/p&gt;

</description>
      <category>webdev</category>
      <category>productivity</category>
      <category>beginners</category>
      <category>programming</category>
    </item>
    <item>
      <title>What is API Test Automation?</title>
      <author>Rajat Thakur</author>
      <pubDate>Mon, 27 Dec 2021 07:38:08 +0000</pubDate>
      <link>https://dev.to/digitallyrajat/what-is-api-test-automation-3ibk</link>
      <guid>https://dev.to/digitallyrajat/what-is-api-test-automation-3ibk</guid>
      <description>&lt;h2&gt;
  &lt;a href="#what-is-api"&gt;
  &lt;/a&gt;
  What is API?
&lt;/h2&gt;

&lt;p&gt;API (Application Programming Interface) is a processing interface that enables communication and data exchange between two separate software systems. A software system running an API includes several functions/routines that another software system can perform.&lt;/p&gt;

&lt;p&gt;The API defines the queries that can be made, such as queries, usable data formats, etc. between two software systems. Our team has created a &lt;a href="https://newsdata.io/"&gt;news API&lt;/a&gt; and we also used these points and many tools for testing that.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-api-testing"&gt;
  &lt;/a&gt;
  What is API testing?
&lt;/h2&gt;

&lt;p&gt;TEST API is a type of software test that validates application programming interfaces (APIs). The objective of API testing is to verify the functionality, reliability, performance, and security of programming interfaces.&lt;/p&gt;

&lt;p&gt;In API tests, instead of using standard user input and output (keyboard), you use software to send API calls, get output, and note the system response. API testing is very different from GUI testing and will not focus on the appearance of an application. It mainly focuses on the business logic layer of software architecture.&lt;/p&gt;

&lt;p&gt;API automation Testing requires an application that can be interacted via an API. In order to test an API, you will need to&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use Testing Tool to drive the API&lt;/li&gt;
&lt;li&gt;Write your own code to test the API&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#setup-of-api-test-environment"&gt;
  &lt;/a&gt;
  Set-up of API Test environment
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The test API differs from other types of software testing in that the GUI is not available, but an initial environment must be configured to call the API with a set of required parameters and then examine the test result.&lt;/li&gt;
&lt;li&gt;So setting up a test environment for API automation testing seems a bit complex.&lt;/li&gt;
&lt;li&gt;The database and the server must be configured according to the requirements of the application.&lt;/li&gt;
&lt;li&gt;Once the installation is complete, the API function should be called to check if this API is working.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#types-of-output-of-an-api"&gt;
  &lt;/a&gt;
  Types of Output of an API
&lt;/h2&gt;

&lt;p&gt;An output of API could be&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Any type of data&lt;/li&gt;
&lt;li&gt;Status (say Pass or Fail)&lt;/li&gt;
&lt;li&gt;Call another API function.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#status-say-pass-or-fail"&gt;
  &lt;/a&gt;
  Status (say Pass or Fail)
&lt;/h2&gt;

&lt;p&gt;Consider the below API function –&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Lock()&lt;/li&gt;
&lt;li&gt;Unlock()&lt;/li&gt;
&lt;li&gt;Delete()&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They return any value such as True (in case of success) or false (In case of error) as an output.&lt;/p&gt;

&lt;p&gt;A more accurate Test Case would be, can call the functions in any of the scripts and later check for changes either in the database or the Application GUI.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#calling-of-another-api-event"&gt;
  &lt;/a&gt;
  Calling of another API / Event
&lt;/h2&gt;

&lt;p&gt;In this case, we call one of the API functions which in turn will call another function.&lt;/p&gt;

&lt;p&gt;For example — The first API function can be used for deleting a specified record in the table and this function, in turn, calls another function to REFRESH the database.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#test-cases-for-api-testing"&gt;
  &lt;/a&gt;
  Test Cases for API Testing:
&lt;/h2&gt;

&lt;p&gt;Test cases of API testing are based on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Return value based on input condition: It is relatively easy to test because the input can be set and the results can be authenticated&lt;/li&gt;
&lt;li&gt;Returns nothing: when there is no return value, API behavior on the system to be verified&lt;/li&gt;
&lt;li&gt;Activate another API / event/interrupt: if an output of an API triggers an event or an interrupt, these events and interrupt listeners must be tracked&lt;/li&gt;
&lt;li&gt;Update the data structure: updating the data structure will have a result of an effect on the system, and it must be authenticated&lt;/li&gt;
&lt;li&gt;Modify some resources: if an API call modifies some resources, then it must be validated in accessing the respective resources.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#api-testing-approach"&gt;
  &lt;/a&gt;
  API Testing Approach
&lt;/h2&gt;

&lt;p&gt;The API testing approach is a predefined strategy or method that the QA team will execute to perform API testing after the build is ready. This test does not include source code. The API test approach helps you better understand functionality, technical testing, input parameters, and test case execution.&lt;/p&gt;

&lt;p&gt;The following steps help you perform the API testing approach:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Understand the functionality of the API program and clearly define the scope of the program&lt;/li&gt;
&lt;li&gt;Apply testing techniques such as equivalence classes, analysis of limit values ​​and error assumptions, and write test cases for API&lt;/li&gt;
&lt;li&gt;Input parameters for API must be properly planned and set&lt;/li&gt;
&lt;li&gt;Run test cases and compare expected results to results real.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#difference-between-api-testing-and-unit-testing"&gt;
  &lt;/a&gt;
  Difference between API testing and Unit testing
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3T9349su--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl6087lm209txrye7ppe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3T9349su--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/xl6087lm209txrye7ppe.png" alt="Image description" width="749" height="617"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-test-api"&gt;
  &lt;/a&gt;
  How to Test API
&lt;/h2&gt;

&lt;p&gt;API automation tests should cover at least the following test methods in addition to the usual SDLC process.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Discovery test: The test group should manually run all of the calls documented in the API, for example, to verify that a specific resource exposed by the API can be listed, created, and deleted as needed.&lt;/li&gt;
&lt;li&gt;Usability test: This test checks if the API is functional and easy to use. And does the API also integrate well with another platform?&lt;/li&gt;
&lt;li&gt;Security test: This test includes the type of authentication required and whether sensitive data is encrypted over HTTP or both.&lt;/li&gt;
&lt;li&gt;Automated Tests: API tests should result in the creation of a set of scripts or a tool that can be used to run the API on a regular basis.&lt;/li&gt;
&lt;li&gt;Documentation: The test team should ensure that the documentation is adequate and provides enough information to interact with the API. Documentation should be part of the end result.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#best-practices-of-api-testing"&gt;
  &lt;/a&gt;
  Best Practices of API Testing:
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;API test cases should be grouped by test category.&lt;/li&gt;
&lt;li&gt;At the top of each test, you must include the declarations of the called API.&lt;/li&gt;
&lt;li&gt;The selection of parameters must be explicitly mentioned in the test case itself.&lt;/li&gt;
&lt;li&gt;Prioritize API function calls so that it is easy for testers to test.&lt;/li&gt;
&lt;li&gt;Each test case should be as self-contained and independent of dependencies as possible.&lt;/li&gt;
&lt;li&gt;Avoid “test chaining” in your development.&lt;/li&gt;
&lt;li&gt;Special care should be taken when dealing with occasional call functions such as — Delete, Close window, etc.&lt;/li&gt;
&lt;li&gt;The call sequence should be executed and well planned.&lt;/li&gt;
&lt;li&gt;To ensure complete test coverage, create API test cases for all possible combinations of API inputs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#types-of-bugs-that-api-testing-detects"&gt;
  &lt;/a&gt;
  Types of Bugs that API testing detects
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Cannot properly handle error conditions&lt;/li&gt;
&lt;li&gt;Unused flags&lt;/li&gt;
&lt;li&gt;Missing or duplicate functionality&lt;/li&gt;
&lt;li&gt;Reliability issues. Difficulty logging in and getting a response from the API.&lt;/li&gt;
&lt;li&gt;Security issues&lt;/li&gt;
&lt;li&gt;Multithreading issues&lt;/li&gt;
&lt;li&gt;Performance issues The API response time is very high.&lt;/li&gt;
&lt;li&gt;Incorrect errors/warnings to a caller&lt;/li&gt;
&lt;li&gt;Incorrect handling of valid argument values ​​&lt;/li&gt;
&lt;li&gt;The response data is not structured correctly (JSON or XML)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#challenges-of-api-testing"&gt;
  &lt;/a&gt;
  Challenges of API Testing
&lt;/h2&gt;

&lt;p&gt;API testing challenges include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The main challenges of web API testing are a combination of parameters, parameter selection, and call sequence&lt;/li&gt;
&lt;li&gt;There is no GUI available to test the application, which makes it difficult to provide values ​​&lt;/li&gt;
&lt;li&gt;Validating and verifying the output in a different system is a bit difficult for testers&lt;/li&gt;
&lt;li&gt;Parameter selection and categorization must be known to testers&lt;/li&gt;
&lt;li&gt;Exception handling function must be tested&lt;/li&gt;
&lt;li&gt;For testers, it is necessary to know the coding&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;The API consists of a set of classes/functions/procedures that represent the business logic layer. If the API is not tested correctly, it can cause problems not only for the API application but also for the calling application. It is an essential test in software engineering.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check out the original blog&lt;/strong&gt; — &lt;a href="https://www.guru99.com/api-testing.html"&gt;https://www.guru99.com/api-testing.html&lt;/a&gt;&lt;/p&gt;

</description>
      <category>testing</category>
      <category>webdev</category>
      <category>programming</category>
    </item>
    <item>
      <title>What are the problems of open source on individual programmers (Are we our own victims)?</title>
      <author>bacloud14</author>
      <pubDate>Mon, 27 Dec 2021 07:35:57 +0000</pubDate>
      <link>https://dev.to/bacloud14/what-are-the-problems-of-open-source-on-individual-programmers-professionally-4oln</link>
      <guid>https://dev.to/bacloud14/what-are-the-problems-of-open-source-on-individual-programmers-professionally-4oln</guid>
      <description>&lt;p&gt;Here I explain a little. I’m a software engineer, high graduate in AI in two universities (one is a prestigious European university). After that, I worked for 3 years for a big energy producer where our small group was in a very big expansion (so much money poured in). I resigned because my experience was not fulfilling nor was the salary, far from that I’m now half demotivated and half frustrated. I have a fair knowledge about open source as I’m a generalist, using dozens of technologies and could reuse whatever technology has been produced, this is to say, I know what open source means. Now, what I criticize here in this question is the abused contribution we as individual programmers give to open source. A one century or so of hard working advancing open source for free. As a person who came from a poor family, I don’t have a business mind at all, far from that, I now know I have a wrecked relationship with money. Let me give you an example, At entry level, my salary was the lowest, while I was doing some crucial development to bootstrap our small group, while others from other backgrounds at entry level had a way better salary and worked under way less pressure (this is very important).&lt;/p&gt;

&lt;p&gt;That was the context, let me continue on with context before giving my assumptions of the problem. I was developing in native open source and low level technologies (all I need is Python and JavaScript) to establish a data infrastructure, and do data-mining) so with this formula, my company’s expenses to simplify was personal salary raw, nothing more. At the same time, they have been pushing (rarely suggesting) high level, and expensive technologies, like AWS Sagemaker and licenses of PowerBI and Dataiku. These shiny technologies cost a lot, God know how much. To finally achieve the same results or to my opinion, less performant results. Other colleagues from other backgrounds push everything shiny and don’t put expenses or performance into consideration, it’s like we have the opposite vision and habits on these situations of choose of technology.&lt;/p&gt;

&lt;p&gt;Finally my assumptions: It is not 100% the fault of the employer, or other technical and business background profiles. It is our fault too, we have been contributing to open source with endless hours and endless efforts for free. Is it time to revise this culture ? Some other developer who is already rich by heritage of family or culture/country contribute in his corner with passion for free, I cannot restrict him. I don’t tend to socialism far from that, I like capitalism, I’m a capitalist, although coming from a wrecked and poor culture. And personally I suffered and still suffer from my efforts making it, basically up to 28 years of age, I was going to a school with a heavy backpack, at university I have undergone at least 1 hour go and back with a heavy laptop on my back (+7 hours of study) and this with a humble physic that now at young age suffers the consequences.&lt;/p&gt;

&lt;p&gt;You can argue, that some things were because of my bad personal choices, like I would continue in an academic environment, yes probably part of it, but also as I said, the amount of effort we give for free that later is used against you, is inconceivable. &lt;/p&gt;

&lt;p&gt;But how can we as today's developers, not being subjected to a half century of very hard work, that gave the best, sharpest, open source technologies, that could literally empower other fields for a century coming.&lt;/p&gt;

&lt;p&gt;Finally, I don't want to bring what GAFA brought us to misery. You all know, AWS is a catalogue of renamed open source libraries and technologies. Facebook and Microsoft, now propose very high level VR programming, that any 60 IQ individual can program on, and they are so proud of, so we as low level programmers that come from humble backgrounds, we really can never make it knowing these circumstances.   &lt;/p&gt;

&lt;p&gt;I'm sorry, not everything is rainbow in this world, let's discuss.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>opensource</category>
    </item>
    <item>
      <title>A11y tips: how to manage focus inside modals</title>
      <author>Carlos Espada</author>
      <pubDate>Mon, 27 Dec 2021 07:27:27 +0000</pubDate>
      <link>https://dev.to/carlosespada/a11y-tips-how-to-manage-focus-inside-modals-40fd</link>
      <guid>https://dev.to/carlosespada/a11y-tips-how-to-manage-focus-inside-modals-40fd</guid>
      <description>&lt;p&gt;To handle the focus in a modal in an accessible way, &lt;strong&gt;the same steps must always be followed&lt;/strong&gt;, no matter how complex the modal that we are showing is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;We &lt;strong&gt;show the modal&lt;/strong&gt; when the user activates the button that opens it&lt;/li&gt;
&lt;li&gt;We immediately &lt;strong&gt;bring the focus&lt;/strong&gt; to the button to close the modal, or in case to its first &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; if it had them. &lt;strong&gt;Never&lt;/strong&gt; to an element other than these two.&lt;/li&gt;
&lt;li&gt;From there, the user has to be able to &lt;strong&gt;handle the focus in a circular way through the elements of the modal&lt;/strong&gt; without leaving them. Once you reach the last element, you have to start over with the first one, the focus cannot go to elements that are behind the modal since the user would lose the reference of where they are.&lt;/li&gt;
&lt;li&gt;To &lt;strong&gt;exit the modal&lt;/strong&gt;, the user can click the close button or the Esc key, which we will make it work by hiding the modal.&lt;/li&gt;
&lt;li&gt;Once closed, the &lt;strong&gt;focus must return to the place where the user left the navigation&lt;/strong&gt; before displaying the modal, that is, to the button that opened it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;On the W3C website there are &lt;a href="https://www.w3.org/TR/wai-aria-practices-1.1/examples/dialog-modal/dialog.html"&gt;examples&lt;/a&gt; of how to do this, and &lt;a href="https://www.scottohara.me/"&gt;Scott O'Hara&lt;/a&gt; has written a very good &lt;a href="https://www.smashingmagazine.com/2014/09/making-modal-windows-better-for-everyone/"&gt;article&lt;/a&gt; that explains in detail how to make modals accessible.&lt;/p&gt;

</description>
      <category>a11y</category>
      <category>tips</category>
      <category>html</category>
    </item>
    <item>
      <title>Which CSS framework according to you is most useful?</title>
      <author>Shivali Pandey</author>
      <pubDate>Mon, 27 Dec 2021 07:09:43 +0000</pubDate>
      <link>https://dev.to/ajshivali/which-css-framework-according-to-you-is-most-useful-5da2</link>
      <guid>https://dev.to/ajshivali/which-css-framework-according-to-you-is-most-useful-5da2</guid>
      <description></description>
      <category>programming</category>
      <category>css</category>
      <category>career</category>
      <category>discuss</category>
    </item>
    <item>
      <title>A unique text jumbling animation using css</title>
      <author>Talha Aamir</author>
      <pubDate>Mon, 27 Dec 2021 06:42:12 +0000</pubDate>
      <link>https://dev.to/sarcxd/a-unique-text-jumbling-animation-using-css-1gif</link>
      <guid>https://dev.to/sarcxd/a-unique-text-jumbling-animation-using-css-1gif</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;I made a minimalistic yet clean (as much as I could) portfolio using only html and css a while back, and wanted to highlight two of the animation/designs that I really liked and designed myself (even if they weren't completely unique). I had been thinking of updating my portfolio so before I proceeded with that I wanted to create a few posts highlighting each of the things that I liked the most in the entire project.&lt;br&gt;&lt;br&gt;
&lt;strong&gt;This is part 1&lt;/strong&gt;, the text jumbling animation I stumbled across by pure chance, and some trial and error.  &lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#note"&gt;
  &lt;/a&gt;
  NOTE
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://sarcxd.github.io/#page1"&gt;portfolio site&lt;/a&gt; - If you are interested or just want to see my portfolio site (more posts coming, hopefully)&lt;br&gt;
The animation the post concerns, (in case you did not view it in the cover, is this)&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--2nofEEVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiuwykr356asmc01e2sd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--2nofEEVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qiuwykr356asmc01e2sd.gif" alt="Text Jumbling Animation Demo" width="640" height="360"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#animation-description"&gt;
  &lt;/a&gt;
  Animation Description
&lt;/h2&gt;

&lt;p&gt;I will first mention, that I initially intended this to be a sort of a typewriter effect but because of some styling I made, it came out abit wrong, giving me the idea of trying something new.&lt;br&gt;&lt;br&gt;
Let's go through it, step by step&lt;br&gt;
The code of interest in my &lt;code&gt;index.html&lt;/code&gt; is my intro, where I apply the style &lt;code&gt;intro-txt&lt;/code&gt; to the entire div&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--3LKNpGWr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jpnsym8yfuwhbopx7w6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--3LKNpGWr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0jpnsym8yfuwhbopx7w6.png" alt="Html file image" width="880" height="257"&gt;&lt;/a&gt;&lt;br&gt;
Let's now look at the styling where I will try to explain what I did.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;.intro-txt {
  font-family: emberly;
  font-size: 2em;
  color: #d2b48c;
  letter-spacing: 1px;

  /* The sauce */
  animation: textJumble 1.5s ease-in 0s 1 normal forwards;
  /* 
    This gives us the cut off effect as if, text is appearing on 
    the screen in a jumbled manner. 
  */
  overflow-x: hidden;
  overflow-y: hidden;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The actual animation is extremely simple, which even going back to it now, does surprise me. (yes, I have in fact forgotten a lot of what I did)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;@keyframes textJumble {
  0% {
    width: 0;
    height: 109px;
  }

  100% {
    width: 100%;
    height: 109px;
    white-space: normal;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Basically, it starts off with a width of 0, till a width of 100%, which I have defined in the parent container of my text box as &lt;code&gt;500px&lt;/code&gt;. This allows the text to be populated from the bottom up, as the height never changes. It also makes the text incomprehensible during the animation adding to the jumbling effect that it comes off as.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;You can view the code &lt;a href="https://github.com/sarcXD/sarcXD.github.io"&gt;here&lt;/a&gt; &lt;strong&gt;Spoilers!&lt;/strong&gt; The styling file is well, it might be a bit confusing so I expect a lot of you might not be big fans of it.&lt;/p&gt;

</description>
      <category>css</category>
      <category>webdev</category>
      <category>showdev</category>
      <category>portfolio</category>
    </item>
    <item>
      <title>Git Commands Cheatsheet: Advanced (20+ Git Commands Advanced )
</title>
      <author>aashiya123</author>
      <pubDate>Mon, 27 Dec 2021 06:19:49 +0000</pubDate>
      <link>https://dev.to/aashiya123/git-commands-cheatsheet-advanced-20-git-commands-advanced--35i3</link>
      <guid>https://dev.to/aashiya123/git-commands-cheatsheet-advanced-20-git-commands-advanced--35i3</guid>
      <description>&lt;p&gt;If you are working on a project, whether small or large-scale, you need to track every change made within your team space. You can use any software or applications to keep that track, but we will discuss what Git is, how it works, and some advanced Git commands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Git?&lt;/strong&gt;&lt;br&gt;
Git is an open-source Version Control System that allows you to work within teams in a unique way. You can use a number of commands and functions to work on the project and keep track of the code changes. It will manage all the changed versions of files and directories. As the project expands, the number of tests increases results in changing code with a version number that can be recovered later. It allows the developers and other project members to keep track of- what changes are made, who made those changes, when the changes were made, and why those changes were required. &lt;/p&gt;

&lt;p&gt;Git is a distributed version control system commonly used for commercial software development and complete access to every file, directory, and iteration of the project. With Git, you do not have to be connected to the central repository due to which developers can collaborate with the team from anywhere. The main advantage of using Git is its branching capabilities, which are easy to merge. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Working of Git&lt;/strong&gt;&lt;br&gt;
Git stores everything like files and directories in binary large object forms, which are represented as trees. These trees can contain other trees or large objects along with text files containing information about those files. If a repository transfer contains many files with the same name but different content, it will also get transferred as large objects, which later get expanded to separate files. &lt;/p&gt;

&lt;p&gt;Commit object contains the project’s complete history; any change to the project has to be committed. This commit object file will contain the information about that change. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git Advanced commands&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How to configure the tooling commands&lt;br&gt;
The below command will set the name of your commit transactions.&lt;br&gt;
$ git config –global user.name “[name]”&lt;br&gt;
The below command will set the email to your commit transactions.&lt;br&gt;
$ git config –global user.email “[email address]”&lt;br&gt;
How to create Repositories&lt;br&gt;
The below command will create a new repository with a specified name.&lt;br&gt;
$ git init [project-name]&lt;br&gt;
The below command will allow you to download a project and its complete version.&lt;br&gt;
$ git clone [url]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to refactor the file name&lt;br&gt;
The below command will delete the file from the working directory and stages the deletion.&lt;br&gt;
$ git rm [file]&lt;br&gt;
The below command will allow you to delta the file from the version control but saves it locally.&lt;br&gt;
$ $ git rm –cached [file]&lt;br&gt;
The below command will change the file name and prepare it for commit.&lt;br&gt;
$ git mv [file-original] [file-renamed]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;How to suppress the tracking&lt;br&gt;
The below command will list all the ignored files within the project.&lt;br&gt;
$ git ls-files –others –ignored –exclude-standard&lt;br&gt;
How to shelve and restore incomplete changes&lt;br&gt;
The below command will temporarily store all the modified tracked files.&lt;br&gt;
$ git stash&lt;br&gt;
The below command will restore the most recently stashed file.&lt;br&gt;
$ git stash pop&lt;br&gt;
The below command will list all the stashed changesets.&lt;br&gt;
$ git stash list&lt;br&gt;
The below command will discard the most recently stashed changeset.&lt;br&gt;
$ git stash drop&lt;br&gt;
Commands to erase mistakes&lt;br&gt;
The below command will undo all the commits but preserve the changes locally.&lt;br&gt;
$ git reset [commit]&lt;br&gt;
The below command will discard all the history and changes back to the specific commit.&lt;br&gt;
$ git reset –hard [commit]&lt;br&gt;
Commands for group changes&lt;br&gt;
The below command will display all the local branches in the current repository.&lt;br&gt;
$ git branch&lt;br&gt;
The below command will allow you to create a new branch.&lt;br&gt;
$ git branch [branch-name]&lt;br&gt;
The below command will delete the specified branch.&lt;br&gt;
$ git branch -d [branch-name]&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Miscellaneous commands&lt;br&gt;
The below command will allow you to connect your local repository to the remote server.&lt;br&gt;
$ git remote add [variable name] [Remote Server Link]&lt;br&gt;&lt;br&gt;
To Split a subfolder out in a new repository.&lt;br&gt;
$ git filter-branch --prune-empty --subdirectory-filter  master&lt;br&gt;
To remove untracked files&lt;br&gt;
$ git clean -f&lt;br&gt;&lt;br&gt;
To remove untracked files/directories&lt;br&gt;
$ git clean -fd&lt;br&gt;&lt;br&gt;
list all files/directories that would be removed&lt;br&gt;
$ git clean -nfd&lt;br&gt;&lt;br&gt;
The below command will tar the project files without .git directory.&lt;br&gt;
$ tar cJf .tar.xz / --exclude-vcs&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>git</category>
      <category>github</category>
      <category>devops</category>
    </item>
    <item>
      <title>K3d for Local Kubernetes Development</title>
      <author>Abhinav Dubey</author>
      <pubDate>Mon, 27 Dec 2021 06:19:37 +0000</pubDate>
      <link>https://dev.to/abhinavd26/k3d-for-local-kubernetes-development-5f13</link>
      <guid>https://dev.to/abhinavd26/k3d-for-local-kubernetes-development-5f13</guid>
      <description>&lt;p&gt;Hello folks, back here again with another blog. In this blog, we will discuss k3d and how easily it allows developers to set up Kubernetes developer environments. For this example, we will set up Devtron’s local development environment over k3d. Let me quickly introduce k3d and Devtron if you are not familiar with them.&lt;/p&gt;

&lt;p&gt;K3d, the name itself suggests k3s-in-docker is a wrapper around k3s - Lightweight Kubernetes that runs it in docker. It is widely known for its rapid cluster creation and deletion and is most widely used for local Kubernetes development.&lt;/p&gt;

&lt;p&gt;Now let’s talk a bit about Devtron. It is an open-source software delivery workflow for Kubernetes written in Go. It is known for its slick user interface which allows developers to deploy their microservices over Kubernetes in no time. Not only application deployment, but also it helps in monitoring and logging just through the Devtron dashboard itself. Moreover, it allows developers to integrate their existing open-source systems like ArgoCD, Jenkins, Clair, and others.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#k3d-k3s-in-docker"&gt;
  &lt;/a&gt;
  K3d - K3s in Docker
&lt;/h2&gt;

&lt;p&gt;K3d has the capability to run &lt;a href="https://dev.to/abhinavd26/all-about-k3s-lightweight-kubernetes-3ell"&gt;k3s - lightweight Kubernetes&lt;/a&gt; inside docker within a few seconds. It has been highly recognised by the community and is widely used for Kubernetes local development.&lt;/p&gt;

&lt;p&gt;Let’s quickly start with k3d and spin up a cluster.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Note: Docker must be installed as a prerequisite for k3d installation]&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h3&gt;

&lt;p&gt;K3d provides a rich installation method for different operating systems. For details about k3d installation please &lt;a href="https://k3d.io/v4.4.8/#installation"&gt;visit their documentation&lt;/a&gt;. I will continue with the installation script.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Note: I will be using MacOS for the demonstration. You can use any OS and install k3d from their documentation as per your requirements]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Please execute the following command to install k3d in your system.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wget &lt;span class="nt"&gt;-q&lt;/span&gt; &lt;span class="nt"&gt;-O&lt;/span&gt; - https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now let’s check whether it is installed correctly or not. Please execute the following command. It will print the k3d version installed in your system. Ideally, if you are installing from the above command, it will install the latest version.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;k3d version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--d2P6_Ev4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wa3z15rthpr9cylxxxu4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d2P6_Ev4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wa3z15rthpr9cylxxxu4.png" alt="k3d version" width="880" height="213"&gt;&lt;/a&gt;&lt;br&gt;
Congratulations! That’s it for the installation. If you can see the version, k3d has been installed and now we are ready to spin up a cluster and set up our local development environment.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#k3d-playaround"&gt;
  &lt;/a&gt;
  K3d Playaround
&lt;/h3&gt;

&lt;p&gt;Now that we have successfully installed k3d, let's create a k3d cluster and playaround k3d a bit. Please execute the following commands.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I) Creating a cluster&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;k3d cluster create demo-cluster
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Xj7YqVGz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zc6639xf68884eaehota.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Xj7YqVGz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zc6639xf68884eaehota.png" alt="k3d-cluster-create" width="880" height="422"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It will create a cluster named demo-cluster in your system and run k3s inside docker containers. To verify whether containers are running or not, please execute &lt;code&gt;$ docker ps&lt;/code&gt;,it will list down the container running k3s.&lt;/p&gt;

&lt;p&gt;If you have multiple clusters created, then you can switch context to the newly created cluster to work on that specific cluster.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ kubectl config use-context k3d-demo-cluster&lt;/code&gt;, you can also see this command when a new cluster is being created as you can see in the above image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;II) Listing down nodes&lt;/strong&gt;&lt;br&gt;
The below command lists down the nodes available only in the demo cluster, as we have used grep command. If you don't provide the grep command, it will list down all the nodes available for all the clusters created using k3d.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;k3d node list | &lt;span class="nb"&gt;grep &lt;/span&gt;demo-cluster
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--BpZrOV4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gqvtzuik7qnqwsl89gb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BpZrOV4r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7gqvtzuik7qnqwsl89gb.png" alt="node-list" width="880" height="137"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;III) Listing down cluster&lt;/strong&gt;&lt;br&gt;
The below command is used to list down all clusters created using k3d but you can always use grep to find out specific clusters if you have several clusters installed.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;k3d cluster list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--CroN12Gc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8rctc48qn7dclfuycb4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--CroN12Gc--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/x8rctc48qn7dclfuycb4.png" alt="cluster-list" width="880" height="124"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IV) Stop &amp;amp; start your cluster&lt;/strong&gt;&lt;br&gt;
K3d also provides this exciting feature to stop your cluster and again start it where you stopped within seconds. The below command shows how easily you can stop and start your cluster in no time.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;k3d cluster stop demo-cluster
k3d cluster start demo-cluster
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wNjqKvPU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw88d5yktekj1layznm9.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wNjqKvPU--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/lw88d5yktekj1layznm9.png" alt="cluster-stop-start" width="880" height="230"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;V) Deleting the cluster&lt;/strong&gt;&lt;br&gt;
As with other commands, it's also very simple to delete the entire cluster within seconds.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;k3d cluster delete demo-cluster
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QDep8zZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22vobeahntjssyythl31.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QDep8zZ6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/22vobeahntjssyythl31.png" alt="delete-cluster" width="880" height="337"&gt;&lt;/a&gt;&lt;br&gt;
So this is how easily we can start working with k3d. For more detailed information about k3d and its commands, please refer to &lt;a href="https://k3d.io/v4.4.8/usage/commands/k3d/"&gt;this documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#local-dev-setup"&gt;
  &lt;/a&gt;
  Local Dev Setup
&lt;/h2&gt;

&lt;p&gt;Now as we have understood k3d and its commands, we are ready to set up our development environment with k3d and play around with it.&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#k3d-cluster-setup"&gt;
  &lt;/a&gt;
  k3d Cluster Setup
&lt;/h3&gt;

&lt;p&gt;For any Kubernetes development, the basic requirement is to have a Kubernetes cluster be it k3s or k8s. Here the role of k3d comes in. As we have already discussed above it can spin up a cluster in seconds and that’s why it's widely used for local k8s development. Let’s create a cluster.&lt;/p&gt;

&lt;p&gt;The below command will create a cluster and expose host port 8082 with 30080 port of the agent which we are creating. Here we need to expose the port  because we want to access the application running over k3s inside the docker container.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;k3d cluster create devtron-local-dev &lt;span class="nt"&gt;-p&lt;/span&gt; &lt;span class="s2"&gt;"8082:30080@agent[0]"&lt;/span&gt; &lt;span class="nt"&gt;--agents&lt;/span&gt; 1
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After the cluster is being created, switch context to the newly created cluster as specified above by using the command -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl config use-context k3d-devtron-local-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now the cluster has been created and we have switched to the newly created cluster. You can verify the weather cluster by listing down nodes and by listing down the containers running in your system as we discussed above in the K3d Playaround section.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#devtron-local-setup"&gt;
  &lt;/a&gt;
  Devtron Local Setup
&lt;/h2&gt;

&lt;p&gt;Now we need to set up Devtron locally over the k3d cluster which we created. If you are using MacOS or Windows, make sure you have given the minimum resources required for Devtron installation through Docker Desktop as k3d runs k3s inside docker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[NOTE: k3d doesn’t have any resource limitations, it takes up all the resources specified in Docker Desktop or Docker-cli if using linux]&lt;/strong&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#minimum-requirements"&gt;
  &lt;/a&gt;
  Minimum Requirements
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;2+ cores CPU&lt;/li&gt;
&lt;li&gt;4 GB Memory&lt;/li&gt;
&lt;li&gt;20+ GB Storage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my case, I have given 4 CPU and 6 Memory to Docker Desktop as you can see in the image below.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--b9ASbYCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqiepn096qqv6feshpfb.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--b9ASbYCz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dqiepn096qqv6feshpfb.png" alt="docker-desktop" width="880" height="500"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#devtron-installation"&gt;
  &lt;/a&gt;
  Devtron Installation
&lt;/h2&gt;

&lt;p&gt;After setting up the minimum resources and creating a cluster, we are ready to install devtron locally over the k3s cluster. Please execute the following steps to set up Devtron locally. I will be using helm3 as it is the recommended way as per their &lt;a href="https://docs.devtron.ai/setup/install"&gt;official docs&lt;/a&gt;. You can also use other methods provided in the documentation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step-1:&lt;/strong&gt; Add Devton helm repo. If the helm is not installed, you can refer to their installation guide.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm repo add devtron https://helm.devtron.ai
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can check if it’s installed or not by using the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm repo list
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4TASEuC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vn3gmta5f6dr2szbih71.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4TASEuC---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/vn3gmta5f6dr2szbih71.png" alt="repo-list" width="880" height="110"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step-2:&lt;/strong&gt; Install Devtron using helm3.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;helm &lt;span class="nb"&gt;install &lt;/span&gt;devtron devtron/devtron-operator &lt;span class="nt"&gt;--create-namespace&lt;/span&gt; &lt;span class="nt"&gt;--namespace&lt;/span&gt; devtroncd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The install command will take up around 15-20 minutes to spin up all the Devtron micro-services required for installation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step-3:&lt;/strong&gt; Check Installation status.&lt;br&gt;
You can also check the installation status by using the following command. If it is installed successfully it will print &lt;code&gt;Applied&lt;/code&gt; else it will print &lt;code&gt;Downloaded&lt;/code&gt; as you can see in the below image.&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OZ0ZxaCX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z22ri1bfufc2z6ut1kic.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OZ0ZxaCX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/z22ri1bfufc2z6ut1kic.png" alt="installation-status" width="880" height="113"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step-4:&lt;/strong&gt; Change the &lt;code&gt;devtron-service&lt;/code&gt; to &lt;code&gt;NodePort&lt;/code&gt; with port number assigned while creating the cluster. It will allow us to access the dashboard using &lt;code&gt;localhost:8082&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Use the command - &lt;code&gt;$ kubectl edit svc devtron-service -n devtroncd&lt;/code&gt; to edit the service and change the service type to NodePort and NodePort port number to 30080 which you assigned while creating the cluster.&lt;br&gt;
After editing the service, you can check the changes by using the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl get svc &lt;span class="nt"&gt;-n&lt;/span&gt; devtroncd
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RQYxQ02r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdwijyqa4rgiqh9ae7zh.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RQYxQ02r--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qdwijyqa4rgiqh9ae7zh.png" alt="get-service" width="880" height="349"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step-5:&lt;/strong&gt; Access the dashboard locally.&lt;br&gt;
To access the dashboard use &lt;code&gt;localhost:8082&lt;/code&gt;  in your browser. For admin credentials use username as admin and for password run the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;kubectl &lt;span class="nt"&gt;-n&lt;/span&gt; devtroncd get secret devtron-secret &lt;span class="nt"&gt;-o&lt;/span&gt; &lt;span class="nv"&gt;jsonpath&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'{.data.ACD_PASSWORD}'&lt;/span&gt; | &lt;span class="nb"&gt;base64&lt;/span&gt; &lt;span class="nt"&gt;-d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now you can easily login in your dashboard and start using Devtron.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--4sw-HZLr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urmupu84j94ayosc47am.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--4sw-HZLr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/urmupu84j94ayosc47am.png" alt="Devtron-Dashboard" width="880" height="525"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For detailed information about Devtron and deploying your application over it, please refer to their well-maintained &lt;a href="https://docs.devtron.ai/"&gt;documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#devtron-local-development-setup"&gt;
  &lt;/a&gt;
  Devtron Local Development Setup
&lt;/h2&gt;

&lt;p&gt;Following  the installation of Devtron over the k3s cluster, now we need to set up the local development environment so that developers can start building and contributing to the open-source project. For building any features or fixing bugs, we need to have the source code of the project in the very first place. Let’s clone the project and run it. Please execute the following steps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Note: Please make sure wire module is installed in your system]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step-1:&lt;/strong&gt; Clone the project.&lt;br&gt;
The below command will clone the Devtron repo in your system. If you haven’t installed git, please &lt;a href="https://git-scm.com/downloads"&gt;install it from here&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git clone https://github.com/devtron-labs/devtron.git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step-2:&lt;/strong&gt; Build the project.&lt;br&gt;
Go to the Devtron directory which you cloned, using the command  &lt;code&gt;$ cd devtron&lt;/code&gt; and build the Devtron source code into an executable file using the following command.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;make build
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step-3:&lt;/strong&gt; Port Forwarding the Services.&lt;br&gt;
Now we need to port forward a few services to establish a connection between Devtron running with the binary we will execute in the next step. Execute the following commands in different terminals which can help you to check the logs and debug if any connection issues occurs and also do not close the terminal or stop these commands until the work is done.&lt;/p&gt;

&lt;p&gt;If any commands are stopped, then please execute them again to maintain the connection with the local setup.&lt;/p&gt;

&lt;p&gt;1)&lt;code&gt;kubectl -n devtroncd port-forward svc/argocd-server 8000:80&lt;/code&gt;&lt;br&gt;
2)&lt;code&gt;kubectl -n devtroncd port-forward svc/argocd-dex-server 5556:5556&lt;/code&gt;&lt;br&gt;
3)&lt;code&gt;kubectl -n devtroncd port-forward svc/postgresql-postgresql 5432:5432&lt;/code&gt;&lt;br&gt;
4)&lt;code&gt;kubectl -n devtroncd port-forward svc/devtron-nats 4222:4222&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step-4:&lt;/strong&gt; Setting up Environment Variables and executing Binary&lt;br&gt;
Now we need to set up a few environment variables to connect the source code with the Devtron which we installed initially. Please run the following commands from the root directory where you build the project. It will set up the environment variable and execute the binary as well. Do not stop the command until the work is not done.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Note: python3 must be installed in the system]&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;wget https://raw.githubusercontent.com/devtron-labs/devtron/main/developers-guide/scripts/exporter.py
python3 exporter.py
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Yayy! We have successfully set up the Devtron locally in our system and now we can start building features, fixing bugs, etc and start contributing to the project.&lt;/p&gt;

</description>
      <category>devops</category>
      <category>kubernetes</category>
      <category>opensource</category>
      <category>beginners</category>
    </item>
    <item>
      <title>Why You Should Use VueJS</title>
      <author>Adyaksa W</author>
      <pubDate>Mon, 27 Dec 2021 06:04:14 +0000</pubDate>
      <link>https://dev.to/adyaksa_w/why-you-should-use-vuejs-49il</link>
      <guid>https://dev.to/adyaksa_w/why-you-should-use-vuejs-49il</guid>
      <description>&lt;p&gt;In the current framework trend for frontend, there is 3 mainstream that we commonly know: React, Vue, and Angular. In my recent projects, when there is a need to write frontend applications, I always used Vue. I just love using Vue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--rR_-_Kkz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb8hwzozeobgivvvqu98.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--rR_-_Kkz--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fb8hwzozeobgivvvqu98.png" alt="VueJS Logo" width="400" height="400"&gt;&lt;/a&gt;&lt;br&gt;
From &lt;a href="https://docs.vuejs.id/"&gt;VueJS Official Site&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Why? Well, first of all, I'm not hardcore enough to learn many things just for a simple project. I want simplicity. So for this reason, I excluded Angular. Now it comes down to React and Vue. Here comes my second reason: &lt;strong&gt;I love Vue syntax&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;First of all, the file structure is quite simple yet separated beautifully. If you never touched Vue before, here is a snippet of basic Vue syntax&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;**&amp;lt;template&amp;gt;**
  &amp;lt;h1&amp;gt;Hello {{name}}&amp;lt;/h1&amp;gt;
**&amp;lt;/template&amp;gt;
&amp;lt;script&amp;gt;**
export default {
  data() {
    return {
      name: 'Adyaksa',
    }
  }
}
**&amp;lt;/script&amp;gt;
&amp;lt;style&amp;gt;**
h1 {
  color: red;
}
**&amp;lt;/style&amp;gt;**
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;So Vue file structure is divided into 3 sections: &lt;strong&gt;template&lt;/strong&gt;, &lt;strong&gt;script&lt;/strong&gt;, and &lt;strong&gt;style&lt;/strong&gt;. The combination will form a &lt;strong&gt;Vue Component&lt;/strong&gt;. The template is where the HTML structure is described. All heavy lifting is placed in the script section, where we can put all normal frontend scripts here in addition to Vue-specific scripts such as &lt;a href="https://docs.vuejs.id/"&gt;component lifecycle&lt;/a&gt;. And then the last section is where we put our CSS for the code.&lt;/p&gt;

&lt;p&gt;One thing that I have experienced when using React is that when your team doesn't have a clear formatting guideline, it's harder to find specific code that you need. Moreover, when you have many components with their own specific styling, you will have an enormous number of files that you have. But when we're using Vue, all the HTML, CSS, and JS are combined in 1 class with a specific order that is already defined. Because of this, we know where each section is located in the file and we have an easier time finding what we need. This is also described in Vue docs: "&lt;a href="https://vuejs.org/v2/guide/single-file-components.html#What-About-Separation-of-Concerns"&gt;What About Separation of Concerns?&lt;/a&gt;"&lt;/p&gt;

&lt;p&gt;And then the second one is what makes creating HTML in Vue fun: Directives. Imagine that you want to create a list based on value from array &lt;code&gt;arrayList &lt;/code&gt;. You can easily do it by adding &lt;code&gt;v-for&lt;/code&gt; directives like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;li **v-for="item in arrayList"**&amp;gt; {{ item }} &amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Hey, what's so fun about it? Well, imagine that you want to create something more complex such as displaying the ranking of an item with its attributes. By using this, we can just add &lt;code&gt;v-for&lt;/code&gt; directives to easily access all the attributes of the item. And there are many more neat directives such as &lt;code&gt;v-if&lt;/code&gt;, &lt;code&gt;v-show&lt;/code&gt;, &lt;code&gt;v-model&lt;/code&gt; etc.&lt;/p&gt;

&lt;p&gt;But it's not all fun and game. Like all languages, VueJS readability would suffer at a more complex project. Its code structure also doesn't help, with every bit of code stuffed in a file. But still, I think this is a small price to use this fun language.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Hello, I'm Adyaksa, and I write about software development and my language learning experience. I'm planning to release a weekly blog about something that I find interesting while working on my side projects. If you're interested, you can follow me to keep updated about it!&lt;/em&gt;&lt;/p&gt;

</description>
      <category>vue</category>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
    </item>
    <item>
      <title>5 Best Online Courses to learn React.js with Hooks in 2022</title>
      <author>javinpaul</author>
      <pubDate>Mon, 27 Dec 2021 05:58:21 +0000</pubDate>
      <link>https://dev.to/javinpaul/5-best-online-courses-to-learn-react-with-hooks-in-2022-26lf</link>
      <guid>https://dev.to/javinpaul/5-best-online-courses-to-learn-react-with-hooks-in-2022-26lf</guid>
      <description>&lt;p&gt;&lt;em&gt;Disclosure: This post includes affiliate links; I may receive compensation if you purchase products or services from the different links provided in this article.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.educative.io/courses/a-deep-dive-into-react-hooks?affiliate_id=5073518643380224"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xOqk1P0A--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.educative.io/v2api/collection/4689062322503680/4508623498641408/image/5343254589997056" alt="A Deep Dive into React Hooks - Learn Interactively" width="880" height="440"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hello Devs, if you want to learn React hooks and looking for the best React hooks courses then you cha come to the right place. Earlier, I have shared &lt;a href="https://www.java67.com/2018/02/5-free-react-courses-for-web-developers.html"&gt;free React courses&lt;/a&gt;, &lt;a href="https://www.java67.com/2020/03/top-5-books-to-learn-reactjs-for-beginners.html"&gt;books&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2020/10/top-5-websites-to-learn-react-for-free.html"&gt;websites&lt;/a&gt; to learn and master React.js.&lt;/p&gt;

&lt;p&gt;Today, I am going to share the best React Hooks courses to deep dive and learn hooks in depth. React is a revolutionary front-end JavaScript library. &lt;/p&gt;

&lt;p&gt;It is free, Open-source and can be used for building user interfaces and other UI components. Most software developers use React as a base for developing mobile applications.&lt;/p&gt;

&lt;p&gt;React is currently maintained by Facebook and several other developers. But creating React applications requires several other libraries or some level of client-side functionality as it can only be used for rendering states to DOM.&lt;/p&gt;

&lt;p&gt;Hooks are a new feature that was introduced in the React 16.8 version. Hooks allow you to use different React features like state without writing a class. &lt;/p&gt;

&lt;p&gt;This essentially means that Hooks are functions that 'hook' into &lt;a href="https://javarevisited.blogspot.com/2021/09/how-to-use-state-in-react-example.html"&gt;React state&lt;/a&gt; and &lt;a href="https://www.java67.com/2021/09/ow-to-use-lifecycle-methods-in-functinal.html"&gt;lifecycle features&lt;/a&gt; from inside the function components.&lt;/p&gt;

&lt;p&gt;Hooks are also backward-compatible, which means that there are no breaking changes. Hooks can be used when you want to add a state into a function component. Previously, you had to do this by converting it into a class. But now, you can just use a Hook inside the existing function component.&lt;/p&gt;

&lt;p&gt;Hooks are very similar to other &lt;a href="https://javarevisited.blogspot.com/2021/09/top-5-modern-javascript-features-you.html"&gt;JavaScript functions&lt;/a&gt; and can only be called from the highest level. This ensures that all the stateful logic in a component is visible in the source code.&lt;/p&gt;

&lt;p&gt;For installing Hooks, you need to have a Node version 6 or above. The NPM version should be 5.2 or above and you should have a create-react app for running the React App.&lt;/p&gt;

&lt;p&gt;React Hooks are functions that let you hook into the React lifecycle features from function components themselves. Another major feature of Hooks is that they let you use React without classes.&lt;/p&gt;

&lt;p&gt;There are also many Hooks like Effect Hook, State Hook, etc. Developers can also create their hooks for specific functions.&lt;/p&gt;

&lt;p&gt;By the way, if you're new to React.js then I also recommend you to join a comprehensive React course like &lt;strong&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-the-complete-guide-incl-redux%2F"&gt;React - The Complete Guide (incl Hooks, React Router, Redux)&lt;/a&gt;&lt;/strong&gt; by AcadMind and Maximilian Schwarzmuller, before deep diving on hooks. This course covers everything you need to master React.js including hooks. After going through this course you can have a basic idea of React hooks and then you can deep dive into the following courses.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-the-complete-guide-incl-redux%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--8uiEYWx8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://www.filepicker.io/api/file/7BVwsHlgQzC4Fq1fLVq8" alt="best React - The Complete Guide (incl Hooks, React Router, Redux) | Academind" width="880" height="495"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6-best-reactjs-with-hooks-online-courses-for-beginners"&gt;
  &lt;/a&gt;
  6 Best React.js with Hooks Online Courses for Beginners
&lt;/h2&gt;

&lt;p&gt;Here, we look at the top courses that you can use to familiarize yourselves with React Hooks.&lt;/p&gt;

&lt;p&gt;These are the best online courses you can join to learn React Hooks in 2022. They are created from the best online learning platforms and websites like Udemy and Pluralsight and are trusted by many web developers around the world.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#1-react-hooks"&gt;
  &lt;/a&gt;
  1. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-hooks%2F"&gt;React Hooks&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This is one of the best React with Hook Udemy course for beginners. This course is created by Reed Barger, who is a professional Mobile and Web Developer. In this course, you will learn how to develop practical, real-world applications with React Hooks.&lt;/p&gt;

&lt;p&gt;The only pre-requirement for this course is a basic understanding of the React library and some understanding of the ES6 JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration:&lt;/strong&gt; 3-4 hours&lt;br&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 4.5 stars out of 5&lt;br&gt;
&lt;strong&gt;Platform - Udemy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this course, you will use React Hooks instead of other libraries like Redux or Higher-Order Components. You will also gain an in-depth understanding of how React Hooks work.&lt;/p&gt;

&lt;p&gt;Here is the link to join this course - &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-hooks%2F"&gt;React Hooks&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-hooks%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cVWHx9wH--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-7l4GGysb-uQ/YZyZOmpK0JI/AAAAAAAAqR0/NF9pPBt7I4APQky74HR7hRBMXGuL8xgxgCLcBGAsYHQ/w448-h252/2051705_0d82_4.jpg" alt="Top 6 Courses to learn React Hooks Online" width="448" height="252"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#2-complete-react-hooks-course-2022-az-scratch-to-react"&gt;
  &lt;/a&gt;
  2. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-hooks-course%2F"&gt;Complete React Hooks Course 2022: A-Z ( Scratch to React)&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This course is designed by Hemil Patel, who is a front-end UI developer and one of the most popular instructors on Udemy. In this course, you will get lifetime access to 8 hours of on-demand video lectures as well as other educational resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration:&lt;/strong&gt; 8-9 hours&lt;br&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 4.6 stars out of 5&lt;br&gt;
&lt;strong&gt;Platform - Udemy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The course is divided into 10 sections and consists of 57 lectures. Some basic knowledge of JavaScript is needed for joining this course, but the instructor will guide you through the core theory behind React Hooks from scratch to an advanced level.&lt;/p&gt;

&lt;p&gt;Here is the link to join this course - &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-hooks-course%2F"&gt;Complete React Hooks Course 2022: A-Z ( Scratch to React)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-hooks-course%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ddY-vpQV--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEgYRG5TOFntUENbyHA_O8XUwvDOLhtCOoEcRYgZaBGg4XxyuvCGoTGEjfvEhowbVvTIf-RwqV9s6ZVAKLBKQgKF2-cRKAVlxHIHRvtk1SCbSRBF7_eFg9ltTCUvX3wUqVuHnzsQNwENOpMlvNa-f2UmkCrf8y8Nh3xP4tEbSk2dk3QKGPcnnEPJTYTc%3Dw390-h220" alt="Best Udemy course to learn React Hooks" width="240" height="135"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#3-using-react-hooks"&gt;
  &lt;/a&gt;
  3. &lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fusing-react-hooks"&gt;Using React Hooks&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This course is created by Peter Kellner, who is an independent software consultant specializing in .NET development. In this course, you will learn about the six most commonly used React Hooks that are built into the React Core library.&lt;/p&gt;

&lt;p&gt;You will also explore how to consume and author your own re-usable custom React Hooks. Finally, you will understand how to combine React Context with react Hooks State Management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration:&lt;/strong&gt; 3 hours 20 minutes&lt;br&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 4 stars out of 5&lt;br&gt;
&lt;strong&gt;Platform - Pluralsight&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You will become a confident developer able to build fully capable and functional components that use React Hooks.&lt;/p&gt;

&lt;p&gt;By the way, you would need a Pluralsight membership to join this course which costs around $29 per month or $299 per year (14% discount). I highly recommend this subscription to all programmers as it provides instant access to more than 7000+ online courses to learn any tech skill. Alternatively, you can also use their &lt;strong&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fpricing%2Ffree-trial"&gt;10-day-free-pass&lt;/a&gt;&lt;/strong&gt; to watch this course for FREE.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pluralsight.pxf.io/c/1193463/424552/7490?u=https%3A%2F%2Fwww.pluralsight.com%2Fcourses%2Fusing-react-hooks"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZvUSVzdX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://lh3.googleusercontent.com/-T52V6_TEgOs/YZyULJGIBwI/AAAAAAAAqRs/3u9sKjLGUxozSqvacuxoo_m1WnIB_y5jQCLcBGAsYHQ/w400-h225/using-react-hooks-v1.png" alt="Best Pluralsight course to learn React Hooks" width="400" height="225"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#4-react-native-with-react-hooks-and-react-query-high-performance"&gt;
  &lt;/a&gt;
  4. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-native-with-react-hooks-react-queryhigh-performance%2F"&gt;React Native with React Hooks and React Query: High Performance&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This course is designed by Mohamed Adel, who is a Senior Mobile Application Developer. Taking this course will help you improve your React Native application with the help of React Hooks and React Query.&lt;/p&gt;

&lt;p&gt;You will be able to create real-world apps using React Native. You will also learn about the React Query API as well as the basics of creating a custom React Hook.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration:&lt;/strong&gt; 3 hours&lt;br&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 2.7 stars out of 5&lt;br&gt;
&lt;strong&gt;Platform - Udemy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The instructor will guide you through the process of Expo installation and also teach you how to cache your data in React Native. In addition, you will also learn about several React Hooks functions like &lt;a href="https://javarevisited.blogspot.com/2021/09/how-to-use-state-in-react-example.html"&gt;useState,&lt;/a&gt; &lt;a href="https://javarevisited.blogspot.com/2021/09/usedispatch-and-use.html"&gt;useEffect&lt;/a&gt;, and &lt;a href="https://javarevisited.blogspot.com/2021/09/what-are-react-and-redux-hooks-example.html#axzz7D1K8JL8x"&gt;useReducer&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The entire course is broken up into 5 modules and 22 lectures. You will need a basic understanding of React Native for this course.&lt;/p&gt;

&lt;p&gt;Here is the link to join this course - &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-native-with-react-hooks-react-queryhigh-performance%2F"&gt;React Native with React Hooks and React Query: High Performance&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-native-with-react-hooks-react-queryhigh-performance%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zl8Ijf2n--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEjIPgOwbFomqezEzHKTtq4Cu9G1jlZO2n5U9iC4rK5rbVDlEGBbxHYwHxuSR5zbl4aO4lStxq4EL1xCeC3O4Go2YuwDfoZDX0n80a_23gmzUKOlmqf0O6f9TZmqkBL7DIELBuf0hFPbVGxw0e4dvMPHM3B0Lu7L8r43KnSOLLU2fxE1JSTtbS8X6m1y%3Dw372-h209" alt="Best Online course to learn React Hooks" width="240" height="135"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#5-react-hooks-tutorial-master-react-hooks-development"&gt;
  &lt;/a&gt;
  5. &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-hooks-tutorial%2F"&gt;React Hooks Tutorial: Master React Hooks Development&lt;/a&gt;
&lt;/h3&gt;

&lt;p&gt;This course is led by David Joseph Katz, who is a software engineer at Zendesk and has a Bachelor of Computer Science degree from the University of San Francisco. This course promises to help you master React Hooks the right way.&lt;/p&gt;

&lt;p&gt;You will gain hands-on experience by coding with React Hooks like useStat, useEffect, and useContext. You will also find out about the real reason React Hooks were introduced into the React library and why it has been a revolutionary addition.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration:&lt;/strong&gt; 6 hours&lt;br&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 4.6 stars out of 5&lt;/p&gt;

&lt;p&gt;You will also gain an understanding of the workings of the React engine and the Runtime layer. You will be able to set up data fetching using the React Hooks pattern. This course consists of 46 lectures, which are divided into 7 sections.&lt;/p&gt;

&lt;p&gt;You will also get lifetime access to 5 hours of on-demand video lectures, 6 articles, and 1 downloadable resource. You will also be eligible for a certificate upon completion of the course.&lt;/p&gt;

&lt;p&gt;Here is the link to join this course - &lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-hooks-tutorial%2F"&gt;React Hooks Tutorial: Master React Hooks Development&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=JVFxdTr9V80&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Freact-hooks-tutorial%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BVYWjdhT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEjjCp9lxNu2DXkjZmPFupsI3nEwPC2VUWek3aukfx6OttHKpszHmCQwdvRWWpgtcqfVREDkNMMLah2VatN1kjN3b81xZgWsiF8CfquBJzkprkQbHrgax-13UPJUVeizSs5RmPaFnEiGkrw7HhNC-yvKENa62kOJwcC71gDxKWy0NmhuR6BV0cFuq-Bj%3Dw408-h230" alt="Best Hands-on course to learn React Hooks" width="240" height="135"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#6-build-a-realtime-app-with-react-hooks-and-graphql-udemy"&gt;
  &lt;/a&gt;
  6. &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fbuild-a-realtime-app-with-react-hooks-and-graphql%2F"&gt;Build a Real-time App with React Hooks and GraphQL&lt;/a&gt; [Udemy]
&lt;/h3&gt;

&lt;p&gt;The creator of this course is Reed Barger, who is a professional Mobile App and Web Developer. This course will enable you to master the revolutionary React Hooks within the context of a full-stack, real-world app.&lt;/p&gt;

&lt;p&gt;You will learn how to build practical and feature-rich apps with React Hooks and GraphQL. You will also gain an understanding of managing state in real-world apps with React Hooks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Course Duration:&lt;/strong&gt; 4.5 hours&lt;br&gt;
&lt;strong&gt;Rating:&lt;/strong&gt; 4.1 stars out of 5&lt;/p&gt;

&lt;p&gt;This course will focus your attention on integrating GraphQL client/server libraries with React Hooks. This course is divided into 21 sections and 36 lectures. You will gain lifetime access to 4.5 hours of on-demand video lectures as well as other educational resources which can be downloaded for offline access.&lt;/p&gt;

&lt;p&gt;In this course, you will build a live geolocation app called GeoPins, where users can pin different locations on the map.&lt;/p&gt;

&lt;p&gt;Here is the link to join this course - &lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fbuild-a-realtime-app-with-react-hooks-and-graphql%2F"&gt;Build a Real-time App with React Hooks and GraphQL&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://click.linksynergy.com/deeplink?id=CuIbQrBnhiw&amp;amp;mid=39197&amp;amp;murl=https%3A%2F%2Fwww.udemy.com%2Fcourse%2Fbuild-a-realtime-app-with-react-hooks-and-graphql%2F"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--sECCUOL6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://blogger.googleusercontent.com/img/a/AVvXsEju2b_UyI5s-Y0g6bP-PyjQgM6Qv8x77hllBVtub1Y_o7Zjf_tcm5fY_7qV7CmQqoRNExzIS54e9-vmjoPHSD4dnKKMD9TaQmQmQrQH2RRJoTl_7YMkoB0N952IfrPyYZ1-9jUqdU3_VKuR4f6iZ7XWeTue9VkFmN_QXrfYJSaFHbv3CKiMsujsrccX%3Dw393-h221" alt="Best Project based course to learn React Hooks" width="240" height="135"&gt;&lt;/a&gt;&lt;/p&gt;




&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;React Hooks is on the cutting-edge of the technological evolution, and it is important to stay on top of the changing technological landscape, especially if you want to succeed in the job market. Mastering Hooks will give you a solid platform upon which you can build your journey as a software engineer.&lt;/p&gt;

&lt;p&gt;Hooks are easier to read, write, and easier to maintain.  Hooks are essentially the future of React, and it will be a  huge boost for your career.&lt;/p&gt;

&lt;p&gt;Other **Web development Articles and Resources **you may like&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/02/the-2019-web-developer-roadmap.html"&gt;The 2022 Web Developer RoadMap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/10-courses-to-learn-angular-for-web-development-6da1bd2856dc"&gt;Top 10 Course to learn Angular in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/01/10-frameworks-java-and-web-developers-should-learn.html"&gt;10 Frameworks Java and Web Developer should learn&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2018/08/top-10-free-java-courses-for-beginners-experienced-developers.html"&gt;10 Free Java Courses for Experienced Developers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://hackernoon.com/the-2018-react-js-roadmap-4d0a43814c02"&gt;The 2022 React JS Developer RoadMap&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2019/01/top-5-free-kubernetes-courses-for-DevOps-Engineer.html#axzz5d2bEyYmv"&gt;Top 5 Free Kubernetes course for DevOps Engineers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-free-courses-to-learn-react-js-c14edbd3b35f"&gt;My favorite free courses to learn React Hooks&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2017/11/top-5-free-core-spring-mvc-courses-learn-online.html"&gt;5 Free Courses to learn Core Spring and Spring Boot&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-5-graphql-tutorials-and-courses-for-beginners-fb5543506fc2"&gt;My favorite courses to learn GraphQL&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2018/02/5-free-docker-courses-for-java-and-DevOps-engineers.html"&gt;10 Free Courses to Learn Docker in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2018/02/6-free-maven-and-jenkins-online-courses-for-java-developers.html"&gt;5 Free Courses to learn Maven and Jenkins in 2022&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://javarevisited.blogspot.com/2018/09/the-2018-devops-roadmap-your-guide-to-become-DevOps-Engineer.html"&gt;The 2022 DevOps RoadMap for Programmers&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="http://www.java67.com/2019/01/top-10-javascript-frameworks-and-libraries-for-web-developers.html"&gt;10 JavaScript Frameworks Web Developer Should Know&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;  &lt;a href="https://medium.com/javarevisited/top-10-free-typescript-courses-to-learn-online-best-of-lot-44bce9da41d1"&gt;10 Free TypeScript Online Courses for Beginners&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading this article so far. If you liked this list of &lt;em&gt;Top 6 React Hooks courses&lt;/em&gt;, feel free to share it with your family and friends. If you have any questions or doubts, feel free to drop them in the comments.&lt;/p&gt;

</description>
      <category>react</category>
      <category>javascript</category>
      <category>webdev</category>
      <category>development</category>
    </item>
    <item>
      <title>6 Design Tips That Will Make Your Website Stand Out</title>
      <author>Imia Hazel</author>
      <pubDate>Mon, 27 Dec 2021 05:46:18 +0000</pubDate>
      <link>https://dev.to/imiahazel/6-design-tips-that-will-make-your-website-stand-out-1hop</link>
      <guid>https://dev.to/imiahazel/6-design-tips-that-will-make-your-website-stand-out-1hop</guid>
      <description>&lt;p&gt;Internet is full of competition, and you presumably already know this. When it comes to where they may spend their time online, your consumers have an almost infinite number of possibilities. Finding a means to stand out in such a crowded field might seem hard.&lt;/p&gt;

&lt;p&gt;Fortunately, a little ingenuity in the design department and understanding the &lt;a href="https://dev.to/imiahazel/10-top-ui-ux-design-trends-for-2021-dl9"&gt;latest design trends&lt;/a&gt; may go a long way in making a big difference. You can make your website a must-see destination for your target audience by mastering a few top-tier methods.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#1-fullscreen-video"&gt;
  &lt;/a&gt;
  1. Full-Screen Video
&lt;/h2&gt;

&lt;p&gt;Large, full-screen videos or &lt;a href="https://devbeep.com/css-animated-backgrounds/"&gt;CSS animated backgrounds&lt;/a&gt; on the homepage and landing pages of more and more corporations are becoming more commonplace. It's easy to understand why.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--k_rCoOyG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8epldmv95auz3nqy6fsi.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--k_rCoOyG--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8epldmv95auz3nqy6fsi.gif" alt="Fuzeshapes" width="800" height="449"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image credit &lt;a href="https://www.fuzeshapes.com/"&gt;Fuzeshapes&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Conversion rates jump to 80 percent with the appropriate video content on the correct landing page, argue proponents of visual web design.&lt;/p&gt;

&lt;p&gt;It's not just any video that will do. Think about how you're going to put things up. If you want to see the video, will you have to click on it? What is the best location for your video call to action? To keep visitors engaged, what is the ideal duration of a video? This decision is merely the beginning of the process of testing, refining, and optimizing your video.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-fantastic-typography"&gt;
  &lt;/a&gt;
  2. Fantastic Typography
&lt;/h2&gt;

&lt;p&gt;Maximalism is observed everywhere as an offshoot of this movement, yet it stands as a new one. It's time for brands to break out of the confines of paint-by-numbers websites and experiment with bold typeface, outrageous themes, and massive text blocks.&lt;/p&gt;

&lt;p&gt;Check out DNA, a &lt;a href="https://htmlcssfreebies.com/dna-one-page-html-template/"&gt;one page website template&lt;/a&gt;. Instead of sticking to minimalism's typical web design logic, the template uses a solid font to generate new and eye-catching designs that depart from the norm.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Fcr4CCS7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v43gep6az5x0uoilcsim.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Fcr4CCS7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/v43gep6az5x0uoilcsim.jpg" alt="DNA - One Page HTML Template" width="880" height="587"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we said before, you'll have to be careful not to overdo it with these styles. Typefaces may affect your website's usability. Investing your time in comprehending &lt;a href="https://tealfeed.com/6-tips-typography-good-web-design-zfasq"&gt;web design typography&lt;/a&gt; can be a terrific method to differentiate yourself from the competition and make your website shinning from the crowd when done correctly.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-stunning-images-and-videos"&gt;
  &lt;/a&gt;
  3. Stunning Images and Videos
&lt;/h2&gt;

&lt;p&gt;Websites shine with the inclusion of eye-catching images and videos. To ensure that your website plan succeeds, don't forget to consider the correct placement of photographs.&lt;/p&gt;

&lt;p&gt;If you can entice people to remain longer on your website by using unique photography or amusing films, don't be scared to be yourself in your images and videos. You can genuinely radiate here.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--pL2T5MD3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ov5orq75q6071bcrlyxd.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--pL2T5MD3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ov5orq75q6071bcrlyxd.gif" alt="Asian Legacy Library" width="800" height="394"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image credit &lt;a href="https://asianlegacylibrary.org/"&gt;Asian Legacy Library&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For example, if you want to convey the soul of your brand to potential customers, you should take and post unconventional headshots. If you must use stock photographs, that's OK, but if you have the resources to create your own, it will better reflect the character of your brand. Play around with animation, have a good time, and then share your amazing photos and movies with the world.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-visual-hierarchy"&gt;
  &lt;/a&gt;
  4. Visual Hierarchy
&lt;/h2&gt;

&lt;p&gt;Hierarchy is a fundamental aspect of design that aids in presenting your material. To direct site users' attention to various page parts in order of importance, you may employ the proper hierarchy usage, starting with the essential item.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ec0E1Kst--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsmaxa0xo2k44ywfq5ft.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ec0E1Kst--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/fsmaxa0xo2k44ywfq5ft.gif" alt="P9 Moscow" width="800" height="395"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image credit &lt;a href="https://p9.moscow/en/"&gt;P9 Moscow&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In terms of &lt;a href="https://xd.adobe.com/ideas/process/information-architecture/visual-hierarchy-principles-examples/"&gt;visual hierarchy&lt;/a&gt;, the following are the essential elements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;By making your most important assets, such as your business official logo, more prominent and more visually visible, you will be able to convey your message better. Readers tend to start with vast and robust headlines, then move on to smaller paragraphs later in the document.&lt;/li&gt;
&lt;li&gt;Use the correct website layout to focus your visitors' attention in the right places—for example, a prominent call-to-action button on the hero image.&lt;/li&gt;
&lt;li&gt;Readers can't help but follow the breadcrumbs you leave for them after establishing a clear hierarchy for your material. To further emphasize a point, use color, contrast, and space, considering what is grabbing the most attention.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#5-use-delay-transitions"&gt;
  &lt;/a&gt;
  5. Use Delay Transitions
&lt;/h2&gt;

&lt;p&gt;We all know that seamless transitions are critical to the success of a project. It's a bit but an essential component of the user's experience to easily navigate your site. Your design may be less pleasurable if these adjustments are jittery.&lt;/p&gt;

&lt;p&gt;Let experiment and don't have to limit yourself to smooth transitions alone. Delays in your element's changes lead to incredible animations.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--LOTRUGoI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6r83yvwqmvn8fwoxzr5h.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--LOTRUGoI--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6r83yvwqmvn8fwoxzr5h.gif" alt="Pienso" width="756" height="500"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Image credit &lt;a href="https://p9.moscow/en/"&gt;Pienso&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;These modifications may go unnoticed by the user. But the cascading effect makes browsing appear more refined. In addition, it may show how effectively the site's various components operate together.&lt;/p&gt;

&lt;p&gt;Employ them across your site if you want to use delayed transitions. More minor actions don't necessarily need a delay, but larger ones usually should. In that manner, your website's design will be consistent throughout.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#6-convincing-copy"&gt;
  &lt;/a&gt;
  6. Convincing Copy
&lt;/h2&gt;

&lt;p&gt;In addition to making your website stand out, &lt;a href="https://www.forbes.com/sites/allbusiness/2019/07/02/copywriting-tips-boost-website-conversions/?sh=ebd7a5dd2441"&gt;captivating writing&lt;/a&gt; may significantly improve sales. Most websites utilize generic material that fails to pique the interest of potential customers. Brainstorm the copy to sell the reader smartly.&lt;/p&gt;

&lt;p&gt;It is a fact that informational websites don't exist without attempting to sell something, even if it's only the fact that you're an excellent company. So, we need to make our headlines eye-catching from the rest of the text by using attention-grabbing material.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Creating a great website is all about focusing on your customers' needs, and creating a functional and visually attractive design sparks the neurons like a firework. Don't pause to research different &lt;a href="https://designorbital.com/tools/best-ux-design-tools/"&gt;UX design tools&lt;/a&gt; to gloss your knacks. &lt;/p&gt;

&lt;p&gt;Your website design will stand out from the crowd if you can meet the demands of your customers. Get started by following these guidelines, and don't settle for anything less than the finest!&lt;/p&gt;

</description>
      <category>design</category>
      <category>ux</category>
    </item>
  </channel>
</rss>
