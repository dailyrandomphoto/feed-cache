<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>How to Create Multilingual Website in Laravel 8</title>
      <author>avani-trivedi</author>
      <pubDate>Fri, 27 Aug 2021 10:47:09 +0000</pubDate>
      <link>https://dev.to/avanitrivedi/how-to-create-multilingual-website-in-laravel-8-2ef8</link>
      <guid>https://dev.to/avanitrivedi/how-to-create-multilingual-website-in-laravel-8-2ef8</guid>
      <description>&lt;p&gt;Hi Dev,&lt;/p&gt;

&lt;p&gt;In this tutorial I will share with you how to create a multilingual website in laravel 8 application, I will show an example of laravel 8 multiple languages.&lt;/p&gt;

&lt;p&gt;Here, I will give you a full example of how to laravel 8 multilanguage with language dropdown or laravel 8 multiple language websites as below so follow my all steps.&lt;/p&gt;

</description>
      <category>laravel</category>
    </item>
    <item>
      <title>Software development for portable gadgets</title>
      <author>Victor Quan Lam</author>
      <pubDate>Fri, 27 Aug 2021 10:25:10 +0000</pubDate>
      <link>https://dev.to/victorquanlam/software-development-for-portable-gadgets-lib</link>
      <guid>https://dev.to/victorquanlam/software-development-for-portable-gadgets-lib</guid>
      <description>&lt;p&gt;A portable communication device is a pocket-sized gadget that a person carries with them. They usually have a touch-screen display or a small keyboard. The input and output of a personal digital assistant (PDA) are merged into a touchscreen device. Cellphones and PDAs are popular among folks who need the aid and conveniences of a traditional computer but cannot take one with them. &lt;br&gt;
We want to think that the humanity has always been forward-thinking. However, for the majority of the twentieth century, innovation was a slow and steady process. It was the result of individual brilliance or think tanks. For the most part, clever people innovate, and the general public gradually adopted the concept. With the development of the computer, the mainstream's love affair with innovation began. It gained traction with the invention of the Internet.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Smart Gadgets:&lt;/strong&gt;&lt;br&gt;
A smart gadget is an electronic device that communicates with other networks or devices via wireless protocols such as Wi-Fi, Bluetooth, NFC, 3G, and so on. They have the ability to work autonomously as well as collaboratively. Modern technology has transformed previous technology and has had a significant impact on everyone's lives. In our daily lives, we use smart devices in a variety of ways. Smart key chains, smart bands, smart watches, smartphones, tablets, and phablets are some common examples of smart electronics.&lt;br&gt;
It is also capable of artificial intelligence. Smart gadgets are known to function in a variety of ways in a given setting. They have many qualities and may be adapted to the computing environment, the human environment, and the physical world. A smartphone is one of the suggested gadgets that everyone should have in today's environment. Smartphone technology has radically altered the global landscape.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Impact of Technology on Human:&lt;/strong&gt;&lt;br&gt;
The way humans connect with one another has been transformed by technology. Various forms of human communication, helped by technology, have been interwoven into people's life. This has an impact on how individuals and groups interact and communicate with one another. Technology has both positive and harmful effects on people in society. &lt;br&gt;
How we can improve performance of Gadget with Software?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cleaning Gadget:&lt;/strong&gt;&lt;br&gt;
Dirt accumulates on technological devices over time. Dirt is not only ugly, but it may also render gadgets inefficient and dangerous. For example, dust in a computer chassis can cause it to overheat. This causes fans to work faster to disperse heat, requiring more electricity. Most gadget makers provide detailed instructions on how to clean their products. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Deleting Unnecessary Files:&lt;/strong&gt;&lt;br&gt;
We wind up acquiring a large number of unneeded files on our storage devices over time. This has the disadvantage of making computing systems slower and files more jumbled. You can manually sort through files and delete those that are no longer needed. You can also use third-party software to sort files based on factors such as frequency of use or date of update. This will give you a good indication of which files you rarely use and can safely delete.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Scanning for Malware:&lt;/strong&gt;&lt;br&gt;
Despite our best efforts to keep systems safe, dangerous software occasionally finds its way into our computing devices. This demands regular scans to detect and remove viruses and malware. Most anti-virus and/or anti-malware products allow users to schedule complete scans at regular intervals. Even if you are confident that your system is secure, enable this setting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updating Software:&lt;/strong&gt;&lt;br&gt;
Because developers are always adding new features such as security and performance, the software we use in computers, cellphones, and other devices is incredibly dynamic. The quick evolution is advantageous in that it improves user experience and protects against malicious entities. This necessitates that you keep the software on your devices up to date.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Accelerometers in Smartphones:&lt;/strong&gt;&lt;br&gt;
The twenty-first century ushers in a new era of technological advancement. Many engineers and scientists' technological creations have benefitted the globe in important ways, such as smartphones, cameras, laptop computers, and many more electrical gadgets that are incredibly valuable to humans and are used in large quantities around the world. The accelerometer is made up of several separate elements that work in a variety of ways.&lt;br&gt;
It is utilized not just in cellphones, but also in many other vital items including as planes, computers, iPhones, tablets, and televisions, all of which are basic human requirements in today's society. Accelerometers are also employed to guarantee that images are shown properly - portrait or landscape - depending on how the phone is held. Accelerometers are increasingly being employed as a form of user input, most notably in current games where tilting and rotating the handset can direct onscreen action. Not only do accelerometers have several applications in business and science that benefit society.&lt;/p&gt;

</description>
      <category>research</category>
      <category>portablegadgets</category>
    </item>
    <item>
      <title>Presetter - The easiest way to reuse your config files and build scripts over npm projects</title>
      <author>Alvis Tang</author>
      <pubDate>Fri, 27 Aug 2021 10:14:22 +0000</pubDate>
      <link>https://dev.to/alvis/presetter-the-easiest-way-to-reuse-your-config-files-and-build-scripts-over-npm-projects-4kl1</link>
      <guid>https://dev.to/alvis/presetter-the-easiest-way-to-reuse-your-config-files-and-build-scripts-over-npm-projects-4kl1</guid>
      <description>&lt;p&gt;Nowadays, as the JS/TS ecosystem continues to mature, developers are writing more and more build scripts and configuration files for their projects. How many times you've copied identical configs for babel, eslint, jest, typescript and the life cycle scripts in package.json?&lt;/p&gt;

&lt;p&gt;For me, I've 40 common devDependencies, 24 scripts and 7 config files across my npm projects. Putting the need to copy and paste these things to bootstrap a new project aside, updating these tools across existing projects is just horrible pain. ü§¶‚Äç‚ôÇÔ∏è&lt;/p&gt;

&lt;p&gt;So I spent my spare time making &lt;strong&gt;presetter&lt;/strong&gt;, a utility tool you'd love to use for easily and quickly reusing build scripts/configs across different npm projects. Now, instead of these countless devDependencies, build scripts, and config files, I can reduce them into just 2 devDependencies (or just 1 if you use npm 7+ which auto install peer dependencies automatically) and 1 config file (for presetter to determine which preset to use)!&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--r4vhDDjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h9pqxp0f27va7nodj50b.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--r4vhDDjr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/h9pqxp0f27va7nodj50b.jpg" alt="Before and After"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#sounds-good-what-is-presetter-and-a-preset-then"&gt;
  &lt;/a&gt;
  üòÄ Sounds good. What is presetter and a preset then?
&lt;/h2&gt;

&lt;p&gt;Presetter is a new open-source project that simplifies workflow for js/ts developers by providing a utility tool to enable us to store all common developmental configurations in one place, not a copy of those on each repo. This allows not only for the reuse of configurations but also reduces time spent on setup and maintaining the build systems across projects. Presetter is written in typescript but compatible with all js packages, backend, or frontend, as long as you use a package.json.&lt;/p&gt;

&lt;p&gt;In a nutshell, &lt;strong&gt;presetter&lt;/strong&gt; is a utility tool that set up and manage common devDependencies specified by a &lt;strong&gt;preset&lt;/strong&gt;, which provides 3 types of common building configurations: devDependencies, build scripts, and config files. With presetter, you can replace many of your common devDependencies like eslint plugins etc and its config files and scripts into only two dev packages and a config file, namely &lt;em&gt;presetter&lt;/em&gt;, your preset choice, and a &lt;code&gt;.presetterrc&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;By pairing them up, you no longer need to spend hours on maintaining the build systems across projects. Instead, simply pick (and customise) a predefined preset either off-the-shelf from the community or an unpublished private package living in your git repository. What's more? You get version control on the build system for free due to the way how a preset is packaged. Life is much simpler since then!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#wow-tell-me-how-to-use-it"&gt;
  &lt;/a&gt;
  üòª Wow. Tell me how to use it
&lt;/h2&gt;

&lt;p&gt;To setup presetter for managing your build system, you can easily achieve it via the &lt;code&gt;presetter use&lt;/code&gt; command:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx presetter use &amp;lt;preset package name e.g. presetter-preset&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;which would perform the following few things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install presetter and your choice of preset as devDependencies,&lt;/li&gt;
&lt;li&gt;Patch the &lt;code&gt;scripts&lt;/code&gt; field in your &lt;code&gt;package.json&lt;/code&gt; to enable automatic bootstraping via the &lt;code&gt;prepare&lt;/code&gt; life cycle script,&lt;/li&gt;
&lt;li&gt;Bootstrap the preset by installing all the peerDependencies provided by the preset and create symlinks pointing to the generated config files on your project root, and&lt;/li&gt;
&lt;li&gt;Create a &lt;code&gt;.presetterrc&lt;/code&gt; file on the project root with the following content
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"preset"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;lt;preset package name&amp;gt;"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ww8Pox2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36m9ul90iw67t6h2tig9.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ww8Pox2G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/36m9ul90iw67t6h2tig9.gif" alt="Bootstrap Presetter"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After starting the project through bootstrapping, you have reached a point where it normally takes 5-10 minutes to duplicate all configuration settings from another repository. Now, you can achieve it by just &lt;strong&gt;ONE COMMAND&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;To apply the preset scripts, you can execute a script by using the &lt;code&gt;presetter run &amp;lt;script name&amp;gt;&lt;/code&gt; or shorthanded &lt;code&gt;run &amp;lt;script name&amp;gt;&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;Using &lt;strong&gt;presenter-preset&lt;/strong&gt; for example, when you invoke &lt;code&gt;run build&lt;/code&gt;, presetter will merge the custom scripts defined in your package.json and the &lt;a href="https://github.com/alvis/presetter/blob/master/packages/preset/templates/scripts.yaml"&gt;templated defined here&lt;/a&gt;, then invoke &lt;code&gt;run-s clean build:*&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tips&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can also use &lt;code&gt;run &amp;lt;script name&amp;gt;&lt;/code&gt; as part of your life cycle scripts to make your build experience identical to what you have before. For example,&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="nl"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"build"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run build"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"coverage"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run coverage"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"lint"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run lint"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"prepare"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"presetter bootstrap &amp;amp;&amp;amp; run prepare"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"prepublishOnly"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run prepublishOnly"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"release"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run release --"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run test --"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"watch"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"run watch"&lt;/span&gt;&lt;span class="w"&gt;
 &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#but-can-i-customise-it"&gt;
  &lt;/a&gt;
  üëª BUT. Can I customise it?
&lt;/h2&gt;

&lt;p&gt;Short answer, SURE! You may be just 99% satisfied with the preset and want to change a little thing like turning on/off a lint rule, presetter just get you covered!&lt;/p&gt;

&lt;p&gt;To do this, you just need to pass your customised config in the &lt;code&gt;config&lt;/code&gt; field in &lt;code&gt;.presetterrc.json&lt;/code&gt;. This config will be passed to the preset's configurator to achieve customisation. After adding your config, run &lt;code&gt;npx presetter bootstrap&lt;/code&gt; again to regenerate the config files.&lt;/p&gt;

&lt;p&gt;For example, to add &lt;code&gt;DOM&lt;/code&gt; as a library in tsconfig.json provided by &lt;strong&gt;presetter-preset&lt;/strong&gt;, simply add these lines in your &lt;code&gt;presetterrc.json&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"preset"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"presetter-preset"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nl"&gt;"config"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"tsconfig"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="nl"&gt;"compilerOptions"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
        &lt;/span&gt;&lt;span class="nl"&gt;"lib"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"DOM"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
      &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Each preset can have its own set of customizable features. So check the preset's  documentation for a full list of customisable elements.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#cool-whats-the-magic-behind-it"&gt;
  &lt;/a&gt;
  üé© Cool! What's the magic behind it?
&lt;/h2&gt;

&lt;p&gt;Presetter may sound too good to be true. Now you don't need to copy and paste all the time. But you may wonder how does it work?&lt;/p&gt;

&lt;p&gt;Well, it's actually pretty simple. Presetter basically does the following few things.&lt;/p&gt;

&lt;p&gt;When you run &lt;code&gt;presetter bootstrap&lt;/code&gt;, it&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;generates config files provided from the preset's template with your customisation applied and create symlinks on your project root, and&lt;/li&gt;
&lt;li&gt;uses npm's arborist to install all peer dependencies defined in the preset's package.json, so that it works even with npm &amp;lt;7.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you run &lt;code&gt;presetter run &amp;lt;command&amp;gt;&lt;/code&gt;, it&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;merges your project's package.json with the script template provided by the preset and invoke the command.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That's basically all about how preset works. Now, let's see what kinds of presets are available and how to contribute one!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#alright-what-presets-can-i-try-today"&gt;
  &lt;/a&gt;
  üê£ Alright. What presets can I try today?
&lt;/h2&gt;

&lt;p&gt;A preset is a collection of common development configurations that can be applied to a project. It provides 3 groups of common building tools&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;devDependencies,&lt;/li&gt;
&lt;li&gt;build scripts, and&lt;/li&gt;
&lt;li&gt;config files&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Today, we have 4 offical presets for different kinds of projects:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;a href="https://github.com/alvis/presetter/tree/master/packages/preset"&gt;presetter-preset&lt;/a&gt;: The starter kit for your typescript project, including settings for typescript, eslint, jest, prettier, standard-version and many others&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alvis/presetter/tree/master/packages/preset-esm"&gt;presetter-preset-esm&lt;/a&gt;:  An extension of presetter-preset with dual CJS/ESM export support.&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alvis/presetter/tree/master/packages/preset-web"&gt;presetter-preset-web&lt;/a&gt;: A preset for a modern web project&lt;/li&gt;
&lt;li&gt;
&lt;a href="https://github.com/alvis/presetter/tree/master/packages/preset-react"&gt;presetter-preset-react&lt;/a&gt;: A preset for a react project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each preset is a single npm package. You can publish yours to share it with the community or just make it as a github repo without publishing it. Both works.&lt;/p&gt;

&lt;p&gt;Another thing is that you can also contribute to the official presets. See &lt;a href="https://github.com/alvis/presetter/blob/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for all things related to preset's development and contribution!&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#to-conclude"&gt;
  &lt;/a&gt;
  üëæ To Conclude...
&lt;/h2&gt;

&lt;p&gt;Now you can stop worrying about managing devDependencies, scripts and config files. Presetter is a tool that reduces the complexity of your build system. &lt;/p&gt;

&lt;p&gt;We all know that duplication of code is a bad thing, and there are many tools to eliminate it, but we don't have a tool for avoiding copying build configuration.&lt;/p&gt;

&lt;p&gt;It's time to put the messy build configs aside. Try &lt;strong&gt;presetter&lt;/strong&gt; today and visit &lt;a href="https://github.com/alvis/presetter"&gt;the repository on Github&lt;/a&gt; for detailed documentation.&lt;/p&gt;

&lt;p&gt;Don't forget to star or watch this repo if you like it! And don't forget to leave your comments below too. üëá&lt;/p&gt;

</description>
      <category>npm</category>
      <category>productivity</category>
      <category>tooling</category>
      <category>showdev</category>
    </item>
    <item>
      <title>Free Resources for Developers</title>
      <author>Abhiraj Bhowmick</author>
      <pubDate>Fri, 27 Aug 2021 09:56:43 +0000</pubDate>
      <link>https://dev.to/rainboestrykr/free-resources-for-developers-meg</link>
      <guid>https://dev.to/rainboestrykr/free-resources-for-developers-meg</guid>
      <description>&lt;h3&gt;
  &lt;a href="#who-doesnt-love-free-things"&gt;
  &lt;/a&gt;
  Who doesn't love free things?
&lt;/h3&gt;

&lt;h3&gt;
  &lt;a href="#nobody"&gt;
  &lt;/a&gt;
  nobody
&lt;/h3&gt;

&lt;p&gt;Henceforth, I present before you a curated list of design and UI resources, from stock photos, web templates, CSS frameworks, UI tools, libraries and much more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;&lt;a href="https://devresources.gitbook.io"&gt;Dev Resources&lt;/a&gt;&lt;/em&gt;&lt;/strong&gt; is a compilation of the most important resources for developers compiled and stacked into one website for you to access. If you use this product, please do like this post and follow my socials.&lt;/p&gt;

&lt;p&gt;Below listed are some of the popular listings.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://uidesigndaily.com/"&gt;UI Design Daily&lt;/a&gt;‚Äã - Awesome UI Components of all types &lt;/p&gt;

&lt;p&gt;&lt;a href="https://freetypography.com/"&gt;Free Typography&lt;/a&gt; - A list of high quality fonts&lt;/p&gt;

&lt;p&gt;&lt;a href="https://bootstrapmade.com/"&gt;BootstrapMade&lt;/a&gt; - Elegant, clean and beautiful free &lt;br&gt;
templates using Bootstrap.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://html5up.net/"&gt;HTML5Up&lt;/a&gt; - Very modern, unique responsive HTML5/CSS3 themes&lt;/p&gt;

&lt;p&gt;&lt;a href="https://chrome.google.com/webstore/detail/whatruns/cmkdbmfndkfgebldhnkbfhlneefdaaip?hl=en"&gt;WhatRuns&lt;/a&gt; - Discover what runs a website. Frameworks, Analytics Tools, Wordpress Plugins, Fonts - you name it.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vectr.com/"&gt;Vectr&lt;/a&gt; - Free vector graphics software&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getwaves.io/"&gt;Get Waves&lt;/a&gt; - A free SVG wave generator to make unique SVG waves for web design&lt;/p&gt;

&lt;p&gt;&lt;a href="http://freebbble.com/"&gt;Freeble&lt;/a&gt; - Vectors, patterns, mockups and more&lt;/p&gt;

&lt;p&gt;&lt;a href="https://lukaszadam.com/"&gt;Lukaszadam&lt;/a&gt; - Free Vector artworks&lt;/p&gt;

&lt;p&gt;&lt;a href="https://illlustrations.co/"&gt;Illlustrations&lt;/a&gt; - Beautiful 100 Illustrations - png, svg&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.pexels.com/"&gt;Pexels&lt;/a&gt; - Free stock photos shared by talented creators&lt;/p&gt;

&lt;p&gt;&lt;a href="https://unsplash.com/"&gt;Unsplash&lt;/a&gt; - The internet‚Äôs source of freely usable image&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mixkit.co/"&gt;Mix Kit&lt;/a&gt; - Stock video clips &amp;amp; music&lt;/p&gt;

&lt;p&gt;&lt;a href="https://favicon.io/"&gt;Favicon.io&lt;/a&gt; - Generate a favicon from text, from an image, or from an emoji. Download in .ico and .png formats&lt;/p&gt;

&lt;p&gt;&lt;a href="https://logosear.ch/search.html"&gt;LogoSear.ch&lt;/a&gt; - Search engine with over 200,000 SVG logos indexed&lt;/p&gt;

&lt;p&gt;&lt;a href="https://svgporn.com/"&gt;SVGPorn&lt;/a&gt; - 1000+ high-quality SVG logos&lt;/p&gt;

&lt;p&gt;&lt;a href="https://remixicon.com/"&gt;Remix Icon&lt;/a&gt; - Simply Delightful Icon System&lt;/p&gt;

&lt;p&gt;&lt;a href="https://iconmonstr.com/"&gt;Iconmonstr&lt;/a&gt; - Discover 4496+ free icons in 313 collections&lt;/p&gt;

&lt;p&gt;&lt;a href="https://angrytools.com/"&gt;Angry Tools&lt;/a&gt; - Free web tools for speed up your development.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://rapidapi.com/hub"&gt;Rapid API&lt;/a&gt; - Discover and connect to thousands of APIs.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://devresources.gitbook.io"&gt;Read More...&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;If you wish for a category or listing to be added, you can comment here below or shoot me an &lt;a href="//mailto:abhirajbhowmick27@gmail.com"&gt;email&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>programming</category>
      <category>news</category>
      <category>javascript</category>
    </item>
    <item>
      <title>Best CSS Shorthand properties For Every Front-end Developer</title>
      <author>Tips and Tricks</author>
      <pubDate>Fri, 27 Aug 2021 09:55:34 +0000</pubDate>
      <link>https://dev.to/tips_tricks/best-css-shorthand-properties-for-every-front-end-developer-36oh</link>
      <guid>https://dev.to/tips_tricks/best-css-shorthand-properties-for-every-front-end-developer-36oh</guid>
      <description>&lt;h1&gt;Shorthand properties&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;Shorthand properties&lt;/em&gt;&lt;/strong&gt;¬†are CSS properties that let you set the values of multiple other CSS properties simultaneously. Using a shorthand property, you can write more concise (and often more readable) style sheets, saving time and energy.&lt;/p&gt;
&lt;p&gt;The CSS specification defines shorthand properties to group the definition of common properties acting on the same theme. For instance, the CSS¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background"&gt;&lt;code&gt;background&lt;/code&gt;&lt;/a&gt;¬†property is a shorthand property that's able to define the values of¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-color"&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt;,¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-image"&gt;&lt;code&gt;background-image&lt;/code&gt;&lt;/a&gt;,¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-repeat"&gt;&lt;code&gt;background-repeat&lt;/code&gt;&lt;/a&gt;, and¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-position"&gt;&lt;code&gt;background-position&lt;/code&gt;&lt;/a&gt;. Similarly, the most common font-related properties can be defined using the shorthand¬†&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font"&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt;, and the different margins around a box can be defined using¬†&lt;span&gt;¬†the&lt;/span&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/margin"&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt;&lt;span&gt;¬†&lt;/span&gt;&lt;span&gt;shorthand.¬†¬†&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;Read More: &lt;b&gt;&lt;a href="https://www.google.com/url?sa=t&amp;amp;source=web&amp;amp;rct=j&amp;amp;url=https://www.codelivly.com/best-css-shorthand-properties/&amp;amp;ved=2ahUKEwjIoPCc99DyAhU7-nMBHUxQDrYQFnoECEAQAQ&amp;amp;usg=AOvVaw23jKjWtvmnvAtDmQi7vhZp&amp;amp;cshid=1630058051965"&gt;CSS Shorthand properties for Web Developer&lt;/a&gt;&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;

</description>
    </item>
    <item>
      <title>Start your Cryptocurrency Exchange with White label Cryptocurrency Exchange Software</title>
      <author>joewalshblog</author>
      <pubDate>Fri, 27 Aug 2021 09:50:29 +0000</pubDate>
      <link>https://dev.to/joewalshblog/start-your-cryptocurrency-exchange-with-white-label-cryptocurrency-exchange-software-p1b</link>
      <guid>https://dev.to/joewalshblog/start-your-cryptocurrency-exchange-with-white-label-cryptocurrency-exchange-software-p1b</guid>
      <description>&lt;h1&gt;
  &lt;a href="#all-about-the-white-label-cryptocurrency-exchange-software-you-need-to-know-before-starting-your-crypto-business"&gt;
  &lt;/a&gt;
  All about the White label cryptocurrency exchange software you need to know before starting your crypto business
&lt;/h1&gt;

&lt;p&gt;Cryptocurrency is the center of talk in digital finance. It is even getting hot, as the price of bitcoin and other cryptocurrencies are rising in their value. The entrepreneurs lack some prior knowledge about the software and its development. As it is an emerging technology, it is gaining traction right now. Without worrying about unnecessary laurels, it is best important to know about digital finance in a 360-degree fashion to have a clear picture of the &lt;a href="https://www.coinsclone.com/whitelabel-crypto-exchange?utm_source=Dev.to+TOP&amp;amp;utm_medium=joewalshblog&amp;amp;utm_campaign=White+label+crypto+exchange+software+top+post&amp;amp;utm_term=white+label+crypto+exchange+software"&gt;&lt;strong&gt;white label cryptocurrency exchange software&lt;/strong&gt;&lt;/a&gt;. &lt;br&gt;
In this blog, let us have a complete knowledge sharing of the so-called white label crypto exchange, its benefits, types, features, and services related to the marketing and legal solutions. Let us jump into the article.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#what-is-a-white-label-cryptocurrency-exchange"&gt;
  &lt;/a&gt;
  What is a white label cryptocurrency exchange?
&lt;/h2&gt;

&lt;p&gt;White label crypto exchange is a readymade, instant, and off-the-rack cryptocurrency exchange software. It is different from those clone script-based software that resembles the similarity of any popular exchanges. White label cryptocurrency exchange is a common template with all the basic cryptocurrency exchange essentialities equipped with it. It comes up with customization features along with some additional security features. &lt;/p&gt;

&lt;p&gt;It is best if you start your white label crypto exchange If you are an entrepreneur or a startup. It is because of its immediate market entry and successful business strategy development. I am not saying that being an entrepreneur, you cannot build your cryptocurrency exchange from scratch. It involves a huge pile of coding techniques and multiple varieties of technology tools to develop them. In that sense, white-label draws you to the market on an immediate basis.&lt;/p&gt;

&lt;p&gt;You should know why you should choose the white label cryptocurrency exchange over the clone script software and why would you need it?&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#why-should-you-prefer-white-label-cryptocurrency-exchange-over-a-clone-script"&gt;
  &lt;/a&gt;
  Why should you prefer White label cryptocurrency exchange over a clone script?
&lt;/h2&gt;

&lt;p&gt;The specialty of the white-label crypto exchange is that they have a unique script language and design that does not show any kind of plagiarism. The only similarity between the white label and the clone script exchange software is their customization techniques.&lt;br&gt;
Below given are some of the indicated points that showcase why you must pick the White label crypto exchange software other than the clones.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Configuration&lt;/strong&gt; - It is based on the configuration of the software that makes the white label one comfortable other than the clone scripts. They arrive with various customizations in order to prevent any imitation mechanism. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;The unidentified interest of blend of variables&lt;/strong&gt; - Entrepreneurs become energized when they talk about clone contents and they frequently produce some ill-conceived demonstration of blending the uncommon highlights of various clone scripts that make their trade exchanging awkward. A white label doesn't do that.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;No uniqueness&lt;/strong&gt; - There is no uniqueness in starting a clone script exchange software with a different name on it. Despite the user feels very easy to operate, they would easily identify the similarity which would be the greatest defect in user management. But, in the case of the White label, it is a unique built customizable exchange software that does not resemble any kind of popular exchange software. &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;
  &lt;a href="#types-of-cryptocurrency-trading-platform"&gt;
  &lt;/a&gt;
  Types of Cryptocurrency trading platform
&lt;/h3&gt;

&lt;p&gt;Let us see the types of cryptocurrency exchange trading types below:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;Margin Trading&lt;/strong&gt; - Assuming your customer is coming up short on holds, you can give this decision to the customer with the objective that he can utilize saves either from the executive himself or from a private ally or fence monetary sponsor to place assets into cryptocurrency. This is to help a wide range of monetary supporters who should place assets into computerized cash and procure gigantic advantages in the near end. Impact trading helps your customer with contributing past what he can have the option to do. This is a money-related request that your customers can use. To be short, it is the impact trading that can uphold the customer responsible for your crypto exchange platform and inclination the customers to place assets into advanced types of cash paying little mind to their financial limit. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Perpetual contract&lt;/strong&gt; - The whole exchange happens dependent on the propagation of the client. The client can either pull out the exchange or store for an exchange at whatever point he needs as it doesn't convey a specific timetable. It is a crypto to a crypto medium where you can execute or trade any of the significant digital forms of money to another. Here, resources are not permitted and don't convey a course of events for the exchange. Its capacities are like the fates contract as the two of them have a place with the subsidiaries exchanging classification. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Copy Trading&lt;/strong&gt; - Either your client is an amateur in the crypto market or a veteran, the duplicate exchanging highlights will assist him with getting by in this unstable market. Duplicate exchanging is the element that assists the new broker with mastering a few abilities in the crypto market so he can gain proficiency for certain new methods that the veteran does during the market vacillations. You can utilize this element in your digital currency exchange platform to improve client commitment. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Spot Trading&lt;/strong&gt; - If you need your cryptocurrency exchange platform to perform like mainstream trades like Binance or Coinbase, at that point you ought to incorporate a spot exchanging highlight your foundation. It has a high TPS and high liquidity that various exchanges can be flown over surprisingly fast. Furthermore, envision the exchange charge for such exchanges. It can really make your business a beneficial one in a short span. Spot exchanging does exclude different types of income age from your site. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Over-the-counter Trading&lt;/strong&gt; - Trading income can be duplicated utilizing the OTC component. Ridiculous exchanging assists you with creating exchange quickly with effective exchange charges, and productive P2P installments. OTC exchanging is one of the best income age hotspots for both the clients and the trading platform proprietor. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Peer-to-peer Trading&lt;/strong&gt; - This is a decentralized exchange include where the client can execute without the impedance of the trading platform proprietor. It doesn't imply that the administrator is total without obstruction except if there is an issue in the exchange and it needs a goal. Possibly you are building a brought together or a decentralized platform. Adding the shared element in exchanges will assist you with creating more income than you do in any case. &lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#features-of-white-label-crypto-exchange-software"&gt;
  &lt;/a&gt;
  Features of white label crypto exchange software
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;strong&gt;High amount of transactions per second&lt;/strong&gt; - In request to upgrade the exchanging experience for the clients, the white label crypto trade exchanging assists you with boosting client commitment through quicker transactions. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Immaculate exchanging motor&lt;/strong&gt; - If your client's exchanges are coordinated impeccably with a vigorous exchanging motor that can support the exchanging experience of the client. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Wallet coordination&lt;/strong&gt; - Apart from the white label cryptocurency trade programming the digital currency wallet would be incorporated so the exchanges would be put away in the crypto wallet in that specific coins address. A multi-cryptocurrency wallet would be incredible for the functioning crypto exchanging platform as there would be a progression of exchanges in a brief time.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Liquidity&lt;/strong&gt; - White label digital currency trades are exceptionally fluid to help crypto exchanges and execute them right away. The higher the liquidity, the higher will be the scope of the white label crypto trading platform among the clients. It will likewise upgrade client commitment and successive exchanges prompting higher ROI for the trade proprietor. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Security highlights&lt;/strong&gt; - Apart from the blockchain innovation, there are extra security includes that even the mainstream clone contents would not be having. This sort of multi-security highlight will keep the site from being hacked and give encryption to a wide range of advances and correspondences. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Exchange of advanced resources&lt;/strong&gt; - If your client needs to trade or exchange, the white label crypto trading platform helps him in like manner. In this, you can either change the fiat to crypto or the other way around or even crypto to crypto. Likewise, in the event that you need to decentralize your exchange without the impedance of the administrator, at that point you can favor the p2p trade alternative in your foundation. However, ensure that there is no issue in regards to the exchange trade. As when the question emerges, the administrator meddles and settles the issue right away.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;KYC and AML&lt;/strong&gt; - This is an exchanging platform and not a tax evasion site. Along these lines, it is critical to set your KYC standards and permit clients to exchange just on the off chance that they have fulfilled the administrator dependent on the KYC and AML subtleties. Plan appropriate AML rules with the goal that you and your foundation can make any future disasters. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Trading Bot&lt;/strong&gt; - As difficult work is finished with, it is the period of exchanging bot that can accurately bring you ideal exchanges for your clients dependent on their capitalization limit. They cautiously break down the market changes and bring out viable exchanges for your clients that draw in them with your digital currency trade platform. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Intelligent analytic outlines&lt;/strong&gt; - It is totally founded on charts. The whole exchanging universe goes to a choice to purchase or sell dependent on what the diagrams say. What's more, we furnish them with refreshed data consistently that reflects in the client's dashboard. This assists the clients withdrawing in with the platform and do exchanges dependent on the graphs and their market varieties and effect. The dealers can investigate the continuous diagrams and direct exchanges in like manner. 
10 &lt;strong&gt;Forgery prevention and protection&lt;/strong&gt; - This is one of the security includes that would be enlisted into the white label crypto trade. With the acceptance of CSRF (Cross-Site imitation assurance) and falsification avoidance component, there is no accessible method of directing deceitful exercises in the platform. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Admin panel&lt;/strong&gt; - With a shocking administrator board on the white name crypto platform, the administrator can investigate the client's exchanges, the exchanges that he directed and the bank articulations and different subtleties, and so on &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Customer support&lt;/strong&gt; - To address client inquiries, you can give all day, everyday client care to your clients. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Referral program&lt;/strong&gt; - Through a reference program, you can profit from your clients to grow your crypto trade platform to more individuals. A commitment in the referral exchange or a prize will urge the client to go for referral sign-ins.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Crypto payment gateway integration&lt;/strong&gt; - Mix of crypto payment gateway with the white name bitcoin trade stage for cross-segment exchanges. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;IEO module&lt;/strong&gt; - This is a symbolic deal where your client can sell the token and create the capital for his business. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Staking&lt;/strong&gt; - The white name stage in the digital money trade stage gives a chance to the clients to stake cryptographic forms of money for a specific lock-in period where one can pull out the assets after the lock-in period is finished. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Escrow&lt;/strong&gt; - It is help where a confided-in outsider ( for this situation - the administrator) should deal with the exchange or trade of assets between the executing parties.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;
  &lt;a href="#benefits-of-white-label-cryptocurrency-exchange-platform"&gt;
  &lt;/a&gt;
  Benefits of white label cryptocurrency exchange platform:
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;strong&gt;Time saver&lt;/strong&gt; - Making a white label trade programming and sending it requires some investment than redoing a clone content and carrying it to live. Around there, a white-name cryptographic money trade stage takes insignificant time underway, customization, and sending and you can rejuvenate it in a flash. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Financially savvy&lt;/strong&gt; - White label bitcoin trade stages are effectively reasonable and accompanied low speculation. It is a direct result of the readymade trade programming that the white name item gives. A client who needs to start a white imprint crypto programming improvement can spend close to no and add on some other security and additional features to make it uncommon and feasible. It is essentially established on the business necessities of the clients. Nevertheless, to be unequivocal, regardless of those customizations, white-mark programming goes with an insignificant exertion stood out from programming without any planning.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Customizing the prerequisites&lt;/strong&gt; - In the white mark cryptographic money trade programming, you can customize the necessities dependent on the business needs. You can examine the fundamental highlights that embrace your nation's guidelines and set in your white name crypto programming to make your foundation remarkable and powerful from others. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;No specialized aptitude required&lt;/strong&gt; - For making a white mark digital money trade programming, you needn't bother with any sort of specialized information. It is instant programming with refreshed highlights alongside customizations.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multiple payment methods&lt;/strong&gt; - This is one such advantage of the white name bitcoin trade programming where the client can exchange or trade on the stage with the best accessible installment alternative with no limitations. This has made both the dealers and trade proprietors more joyful as the brokers can exchange with no issues and the trade proprietors get the income for each exchange that is occurring on the stage. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Multiple device access&lt;/strong&gt; - Be you are utilizing a cell phone or on your pc, the UI adjusts to make your client experience more solid and compelling. The white name cryptographic money trade programming can work on different gadgets with no specialized glitch.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#how-much-does-it-cost-to-create-a-white-label-cryptocurrency-exchange-software"&gt;
  &lt;/a&gt;
  How much does it cost to create a white label cryptocurrency exchange software:
&lt;/h2&gt;

&lt;p&gt;It is a great question by the way as the charge varies according to the additional features that you want to induct. If to be said approximately, the range relies on between $8k - $15k. Make sure that you reach the best &lt;a href="https://www.coinsclone.com/whitelabel-crypto-exchange?utm_source=Dev.to+BTM&amp;amp;utm_medium=joewalshblog&amp;amp;utm_campaign=White+label+crypto+exchange+software+post&amp;amp;utm_term=white+label+crypto+exchange+software+provider"&gt;&lt;strong&gt;white label crypto exchange software service provider&lt;/strong&gt;&lt;/a&gt; to get the perfect platform for your cryptocurrency business. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Final words:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kickstarting a white label cryptocurrency exchange software is the best crypto business option right now. Make sure that you have reached the best white label crypto exchange solutions provider to create your exchange platform. Through this blog, you would have known about white label crypto exchange, its features, and benefits. So, why waiting. Initiate your crypto business with white label software.&lt;/p&gt;

</description>
      <category>startup</category>
      <category>blockchain</category>
      <category>devops</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Getting Started with Svelte by building a landing page</title>
      <author>Eternal Dev</author>
      <pubDate>Fri, 27 Aug 2021 09:09:48 +0000</pubDate>
      <link>https://dev.to/eternaldev/getting-started-with-svelte-by-building-a-landing-page-nog</link>
      <guid>https://dev.to/eternaldev/getting-started-with-svelte-by-building-a-landing-page-nog</guid>
      <description>&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Svelte helps in building web applications using HTML, CSS and Javascript. Unlike React, Svelte doesn't have Virtual DOM or any other abstraction on top. It acts as a compiler that spits out vanilla Javascript. This means that Svelte is added as a dev dependency and results in faster execution speed of the application&lt;/p&gt;

&lt;p&gt;Originally published at (&lt;a href="https://www.eternaldev.com/blog/getting-started-with-svelte-by-building-a-landing-page/"&gt;https://www.eternaldev.com/blog/getting-started-with-svelte-by-building-a-landing-page/&lt;/a&gt;)&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#getting-started-with-svelte"&gt;
  &lt;/a&gt;
  Getting started with Svelte
&lt;/h2&gt;

&lt;p&gt;You can use the following command provided to get a copy of the template and start working&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npx degit sveltejs/template comapny-landing-page
&lt;span class="nb"&gt;cd &lt;/span&gt;comapny-landing-page

&lt;span class="c"&gt;# to use TypeScript run:&lt;/span&gt;
&lt;span class="c"&gt;# OPTIONAL to run the following command&lt;/span&gt;
node scripts/setupTypeScript.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;It is optional to run the setupTypeScript.js file which will set up the project to use TypeScript instead of Javascript. If you are not familiar with TypeScript, you can skip this step.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I feel like it is easier to start with Svelte after learning the basics of HTML, CSS, and Javascript.&lt;/p&gt;

&lt;p&gt;Install the dependencies and start the project&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;npm &lt;span class="nb"&gt;install
&lt;/span&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#prerequisites"&gt;
  &lt;/a&gt;
  Prerequisites
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Basic understanding of HTML, CSS, Javascript&lt;/li&gt;
&lt;li&gt;Familiarity working with Node ecosystem&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;In this article, we don't discuss in-depth about the CSS properties used to make the design. If you are not familiar with any of the CSS properties, you can reach out to me&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#landing-page-design"&gt;
  &lt;/a&gt;
  Landing page design
&lt;/h2&gt;

&lt;p&gt;Building a landing page for your personal website can be a good way to start your dev journey. It mostly has static content and the focus will be on building the layout and styles&lt;/p&gt;

&lt;p&gt;&lt;a href="///static/e2ddb07b674d168daaf2aae382dfa4a4/40601/design1.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s---MJIYtI6--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eternaldev.com/static/e2ddb07b674d168daaf2aae382dfa4a4/40601/design1.png" alt="Design1.PNG" title="Landing page design 1"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Simple landing screen showcasing a product with a call to action button&lt;/p&gt;

&lt;p&gt;&lt;a href="///static/31e24571668d132ba1b32d32a9968fe6/40601/design2.png"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sy8Iwyn7--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://eternaldev.com/static/31e24571668d132ba1b32d32a9968fe6/40601/design2.png" alt="Design2.PNG" title="Landing page design 2"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding a footer at the bottom of the design&lt;/p&gt;

&lt;p&gt;We can divide the design into four component&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Top Menu bar&lt;/li&gt;
&lt;li&gt;Call to Action Content&lt;/li&gt;
&lt;li&gt;Features List&lt;/li&gt;
&lt;li&gt;Footer&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#first-svelte-component"&gt;
  &lt;/a&gt;
  First Svelte component
&lt;/h2&gt;

&lt;p&gt;From the template, we will have a couple of files which are of interest.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;main.ts - The starting point of the app&lt;/li&gt;
&lt;li&gt;App.svelte - First Svelte component
&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./App.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;App&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;props&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;world&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;app&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Inside the main.ts file, we are importing the Svelte component and exporting it as a default. It is getting added to the &lt;code&gt;document.body&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#breakdown-of-svelte-component"&gt;
  &lt;/a&gt;
  Breakdown of Svelte component
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Hello&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;!&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Visit&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;https://svelte.dev/tutorial&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Svelte&lt;/span&gt; &lt;span class="nx"&gt;tutorial&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&amp;gt; to learn how to build Svelte apps.&amp;lt;/&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nx"&gt;auto&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;ff3e00&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nx"&gt;em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;640&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;A component is divided into three parts&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;HTML markup&lt;/li&gt;
&lt;li&gt;Script&lt;/li&gt;
&lt;li&gt;Styles&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You can directly start typing the HTML markup on the file and svelte will render that in the DOM&lt;/p&gt;

&lt;p&gt;Scripts are added inside the &lt;strong&gt;&lt;/strong&gt;. You can have Javascript code that controls the component here.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Note: Svelte has native support with Typescript as well and running the script at the start of the template makes all the &lt;em&gt;.js files to&lt;/em&gt; .ts files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Finally, CSS are added into the &lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This feels very familiar for anyone who has worked with HTML&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;index.html and global CSS styles are present inside the build folder from the template&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#building-the-top-menu"&gt;
  &lt;/a&gt;
  Building the top menu
&lt;/h2&gt;

&lt;p&gt;After learning the basics of Svelte, let's start by building the Top Menu component. It is easy to split your codebase into multiple small components.&lt;/p&gt;

&lt;p&gt;We will create a new file and import that file into the App.svelte&lt;/p&gt;

&lt;p&gt;Create a new folder called &lt;code&gt;components&lt;/code&gt; and create a file called &lt;code&gt;Menu.svelte&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Convention is to use a Capitalized name for your component names to differentiate it with HTML Elements&lt;br&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;nav&lt;/span&gt; &lt;span class="nx"&gt;role&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;navigation&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;left_div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Company&lt;/span&gt; &lt;span class="nx"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;right_div&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Blog&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Pricing&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="nx"&gt;Us&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/a&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/nav&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;nav&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;363062&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;nav&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;nav&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;decoration&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;none&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;nav&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right_div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;right&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;827397&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#css-scopes"&gt;
  &lt;/a&gt;
  CSS Scopes
&lt;/h3&gt;

&lt;p&gt;If you are already familiar with using CSS in other frameworks, you might look at the above styles and think, adding styles directly to div is not the best way as it would affect your other components. Although I will agree with your point, Svelte helps in keeping these styles only specific to the component.&lt;/p&gt;

&lt;p&gt;One of the nice features of Svelte is that the CSS inside the component is scoped to only affect that component. This means that your styles are not leaked outside the component.&lt;/p&gt;

&lt;p&gt;This makes it very easy for writing styles inside the component and not to think about how it will affect the rest of the application.&lt;/p&gt;

&lt;p&gt;Let's add the component to the App.svelte&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Menu.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Code is very simple to import the Svelte component and then add it as part of the HTML markup&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#main-content-with-image"&gt;
  &lt;/a&gt;
  Main content with Image
&lt;/h2&gt;

&lt;p&gt;Adding the main content to the page as per the design will follow the same steps as above. Creating a new file and importing it into the App.svelte&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;CTA_Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Click Here&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;main&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Landing&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h1&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Lorem&lt;/span&gt; &lt;span class="nx"&gt;ipsum&lt;/span&gt; &lt;span class="nx"&gt;dolor&lt;/span&gt; &lt;span class="nx"&gt;sit&lt;/span&gt; &lt;span class="nx"&gt;amet&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;consectetur&lt;/span&gt; &lt;span class="nx"&gt;adipiscing&lt;/span&gt; &lt;span class="nx"&gt;elit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;Vivamus&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt; &lt;span class="nx"&gt;dui&lt;/span&gt; &lt;span class="nx"&gt;iaculis&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;condimentum&lt;/span&gt; &lt;span class="nx"&gt;sapien&lt;/span&gt; &lt;span class="nx"&gt;ac&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;interdum&lt;/span&gt; &lt;span class="nx"&gt;libero&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;CTA_Name&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;right_side&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;images/mobile_cover.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;100%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mobile diplay&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/main&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;main&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;row&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;363062&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;right_side&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;827397&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;333&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;827397&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;box&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;shadow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="nx"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#passing-props-to-the-component"&gt;
  &lt;/a&gt;
  Passing props to the component
&lt;/h2&gt;

&lt;p&gt;Most of the components will require data to be passed in from a higher-level component. We can achieve this by using the props in the component. It is very simple to create props. Just add it as a variable in the scripts like the example below&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;CTA_Name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Click Here&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Here we are exporting the variable CTA_Name which will act as a prop. We can also assign a default value for the prop if it is not provided.&lt;/p&gt;

&lt;p&gt;To send data to the prop, you can update the App.svelte to pass the variable&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Menu.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Main.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="nx"&gt;CTA_Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Get Started&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#creating-the-features-component"&gt;
  &lt;/a&gt;
  Creating the features component
&lt;/h2&gt;

&lt;p&gt;For the Features, we have created a TypeScript type call &lt;code&gt;FeatureType&lt;/code&gt; and added the model inside it.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="kd"&gt;type&lt;/span&gt; &lt;span class="nx"&gt;FeatureType&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;FeatureType&lt;/span&gt;&lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus ac dui iaculis, condimentum sapien ac, interdum libero.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;High Resolution Camera&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;images/mobile_cover.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus ac dui iaculis, condimentum sapien ac, interdum libero.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Blazing Fast Processor&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;images/mobile_cover.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus ac dui iaculis, condimentum sapien ac, interdum libero.&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Long Lasting Battery&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="na"&gt;img&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;images/mobile_cover.jpg&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;features&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;article&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;feature&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;heading&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;60%&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="nx"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;img&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Mobile content logo&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;            &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;article&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/p&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="sr"&gt;/each&lt;/span&gt;&lt;span class="err"&gt;}
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;features&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;justify&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;gap&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;align&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="nx"&gt;img&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;clip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;circle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;feature&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#handling-callback-from-the-component"&gt;
  &lt;/a&gt;
  Handling callback from the component
&lt;/h2&gt;

&lt;p&gt;Components can provide events to the parent. This can be achieved using &lt;code&gt;createEventDispatcher&lt;/code&gt; and passing the custom event needed from the child component.&lt;/p&gt;

&lt;p&gt;In this example, we will have a button "Scroll to Top" in the footer which will pass the event to the parent. The parent component can handle the function of how to scroll the page.&lt;/p&gt;

&lt;p&gt;We are not passing any extra data in the event, but that can also be done easily by passing an object when calling the dispatch method.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;createEventDispatcher&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;dispatch&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;createEventDispatcher&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;onBackToTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;dispatch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;scrollToTop&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;footer&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;About&lt;/span&gt; &lt;span class="nx"&gt;Us&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Blog&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Pricing&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Social&lt;/span&gt; &lt;span class="nx"&gt;Links&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Facebook&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Twitter&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Blog&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h3&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;How&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;select&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="nx"&gt;phone&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Why&lt;/span&gt; &lt;span class="k"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;our&lt;/span&gt; &lt;span class="nx"&gt;company&lt;/span&gt; &lt;span class="nx"&gt;phone&lt;/span&gt; &lt;span class="nx"&gt;better&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Top&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="nx"&gt;budget&lt;/span&gt; &lt;span class="nx"&gt;phones&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;buy&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mi"&gt;2021&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/h5&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;click&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;onBackToTop&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="nx"&gt;Scroll&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;Top&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/button&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;    &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/div&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/footer&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;footer&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;display&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;flex&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;justify&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;space&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;around&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;363062&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;footer&lt;/span&gt; &lt;span class="nx"&gt;h3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;transform&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;uppercase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;footer&lt;/span&gt; &lt;span class="nx"&gt;div&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="nx"&gt;footer&lt;/span&gt; &lt;span class="nx"&gt;button&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;margin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;border&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="nx"&gt;rem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nx"&gt;background&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;827397&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;white&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="nx"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Once the child component has defined the custom event, the parent component can listen to the event and perform any action needed.&lt;/p&gt;

&lt;p&gt;Here on the Footer component, we have &lt;code&gt;on:scrollToTop&lt;/code&gt; event which will call the &lt;code&gt;scrollToTop&lt;/code&gt; function.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;script&lt;/span&gt; &lt;span class="nx"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;ts&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Menu.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Main.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Features&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Features.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Footer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./components/Footer.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;scrollToTop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;scrollTo&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;top&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/script&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Menu&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Main&lt;/span&gt; &lt;span class="nx"&gt;CTA_Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Get Started&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Features&lt;/span&gt; &lt;span class="o"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;Footer&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;scrollToTop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;scrollToTop&lt;/span&gt;&lt;span class="p"&gt;()}&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;root&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sans&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;serif&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/style&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#summary"&gt;
  &lt;/a&gt;
  Summary
&lt;/h2&gt;

&lt;p&gt;This article covers building a quick landing page using Svelte. If you have any questions or feedback feel free to reach out on our Discord server.&lt;/p&gt;

&lt;p&gt;Stay tuned by subscribing to our mailing list and joining our Discord community&lt;/p&gt;

&lt;p&gt;&lt;a href="https://discord.gg/AUjrcK6eep"&gt;Discord&lt;/a&gt;&lt;/p&gt;

</description>
      <category>beginners</category>
      <category>svelte</category>
    </item>
    <item>
      <title>The web does not exists - what would you do differently?</title>
      <author>Keff</author>
      <pubDate>Fri, 27 Aug 2021 08:59:16 +0000</pubDate>
      <link>https://dev.to/nombrekeff/the-web-does-not-exists-what-would-you-do-differently-4cl6</link>
      <guid>https://dev.to/nombrekeff/the-web-does-not-exists-what-would-you-do-differently-4cl6</guid>
      <description>&lt;p&gt;After checking this post:&lt;/p&gt;


&lt;div class="ltag__link"&gt;
  &lt;a href="/siddharthshyniben" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__pic"&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Sfh5RaoM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://res.cloudinary.com/practicaldev/image/fetch/s--72D9ZbiM--/c_fill%2Cf_auto%2Cfl_progressive%2Ch_150%2Cq_auto%2Cw_150/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/606915/21f22584-400f-41ab-bdf5-50f6435905fa.jpeg" alt="siddharthshyniben"&gt;
    &lt;/div&gt;
  &lt;/a&gt;
  &lt;a href="/siddharthshyniben/what-would-the-ideal-web-framework-look-like-p5m" class="ltag__link__link"&gt;
    &lt;div class="ltag__link__content"&gt;
      &lt;h2&gt;What would the ideal web framework look like?&lt;/h2&gt;
      &lt;h3&gt;Siddharth „Éª Aug 26 „Éª 1 min read&lt;/h3&gt;
      &lt;div class="ltag__link__taglist"&gt;
        &lt;span class="ltag__link__tag"&gt;#discuss&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#webdev&lt;/span&gt;
        &lt;span class="ltag__link__tag"&gt;#javascript&lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/a&gt;
&lt;/div&gt;


&lt;p&gt;This got me thinking about what the web would look like if it was re-done today. Would it look anything similar? Or would a completely new approach be taken?&lt;/p&gt;

&lt;p&gt;What's your take on this?&lt;/p&gt;

</description>
      <category>watercooler</category>
      <category>discuss</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Why you should consider having a brand colour</title>
      <author>Andrew Baisden</author>
      <pubDate>Fri, 27 Aug 2021 08:44:38 +0000</pubDate>
      <link>https://dev.to/andrewbaisden/why-you-should-consider-having-a-brand-colour-528i</link>
      <guid>https://dev.to/andrewbaisden/why-you-should-consider-having-a-brand-colour-528i</guid>
      <description>&lt;p&gt;Everybody has a brand it does not matter who you are you have a brand. It is your personal uniqueness that separates you from everyone else. The words that you speak the clothes you wear, your interests everything. Having a personal brand makes it easy for people to recognise you. &lt;/p&gt;

&lt;p&gt;Brand recognition is extremely important if you are a business or if you are trying to promote a product. Top brands have brand colours that are immediately recognisable. If you think about companies like Apple, Amazon, Twitter, YouTube, Instagram, Facebook, McDonalds and Coca Cola for example. We have become so accustomed to them you don't even need to look them up you can pull out their brand colour scheme from memory.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#choosing-a-brand-colour"&gt;
  &lt;/a&gt;
  Choosing a brand colour
&lt;/h2&gt;

&lt;p&gt;Associating a colour with yourself and your brand is a fantastic way to become memorable fast. Whenever anyone thinks or sees that colour you will come to mind. The more they see that colour the more they will associate it with you and all the work that you do. It becomes your presence and your theme. At the moment the brand colour that I am using is purple. Funny story I just kept seeing the colour purple everywhere and there were subliminal references too. I took it as a sign and started to use the colour Purple.&lt;/p&gt;

&lt;p&gt;I did some research and apparently the colour purple is associated with nobility, luxury, power, ambition, independence, wisdom, devotion, extravagance, pride, and creativity. It resonates with me a lot so it just reinforced me using it. You can see some really good examples for companies and the brand colours that they use on &lt;a href="https://brandcolors.net/"&gt;brandcolors.net&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#design-tools-for-creating-a-brand-colour-theme"&gt;
  &lt;/a&gt;
  Design tools for creating a brand colour theme
&lt;/h2&gt;

&lt;p&gt;Creating a brand theme or colour palette can be quite a fun process. The following tools are great for creating colour schemes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.figma.com/"&gt;Figma&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.canva.com/"&gt;Canva&lt;/a&gt;&lt;br&gt;
&lt;a href="https://color.adobe.com/create/color-wheel"&gt;Adobe Color&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.adobe.com/uk/products/xd.html"&gt;Adobe XD&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.adobe.com/uk/products/photoshop.html"&gt;Adobe Photoshop&lt;/a&gt;&lt;br&gt;
&lt;a href="https://www.adobe.com/uk/products/illustrator.html"&gt;Adobe Ilustrator&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#developers-using-brand-colours-on-twitter"&gt;
  &lt;/a&gt;
  Developers using brand colours on Twitter
&lt;/h2&gt;

&lt;p&gt;I put together a quick list of a few developers on social media who are using brand colours. Of course there are plenty more out there these are just the ones that I could find at the time.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#purple"&gt;
  &lt;/a&gt;
  Purple
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/andrewbaisden"&gt;@andrewbaiden&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/florinpop1705"&gt;@florinpop1705&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/ania_kubow"&gt;@ania_kubow&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/danielcranney"&gt;@danielcranney&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/MrAhmadAwais"&gt;@MrAhmadAwais&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/james_a_rob"&gt;@james_a_rob&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/RonanCodes"&gt;@RonanCodes&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/johndsaunders"&gt;@johndsaunders&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#yellow"&gt;
  &lt;/a&gt;
  Yellow
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/heyOnuoha"&gt;@heyOnuoha&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/koladev32"&gt;@koladev32&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/IrinaMariaMocan"&gt;@IrinaMariaMocan&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/xodewriter"&gt;@xodewriter&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#orange"&gt;
  &lt;/a&gt;
  Orange
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/natterstefan"&gt;@natterstefan&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/mmgondran"&gt;@mmgondran&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/LauraToddCodes"&gt;@LauraToddCodes&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#pink"&gt;
  &lt;/a&gt;
  Pink
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/ewainy"&gt;@ewainy&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/heybereket"&gt;@heybereket&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#blue"&gt;
  &lt;/a&gt;
  Blue
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/VladPasca5"&gt;@VladPasca5&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/lo_victoria2666"&gt;@lo_victoria2666&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/dadaCoding"&gt;@dadaCoding&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/mkhundmiri"&gt;@mkhundmiri&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Nichovski"&gt;@Nichovski&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/lilly_code"&gt;@lilly_code&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/CosmasDevelegas"&gt;@CosmasDevelegas&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/Dev_suite"&gt;@Dev_suite&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#green"&gt;
  &lt;/a&gt;
  Green
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/MemRook"&gt;@MemRook&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/CK0d3r"&gt;@CK0d3r&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/koladechris"&gt;@koladechris&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/ZoCodes"&gt;@ZoCodes&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/sunilc_"&gt;@sunilc_&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#teal"&gt;
  &lt;/a&gt;
  Teal
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/IAmElijas"&gt;@IAmElijas&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/HemSays"&gt;@HemSays&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#red"&gt;
  &lt;/a&gt;
  Red
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://twitter.com/iamsegunajibola"&gt;@iamsegunajibola&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/emernichiobhain"&gt;@emernichiobhain&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#final-thoughts"&gt;
  &lt;/a&gt;
  Final Thoughts
&lt;/h2&gt;

&lt;p&gt;I really hope that you enjoyed reading this article and learned something from it. As a content creator and technical writer I am passionate about sharing my knowledge and helping other people reach their goals. Let's connect across social media you can find all of my social media profiles and blogs on &lt;a href="https://linktr.ee/andrewbaisden"&gt;linktree&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Peace ‚úåÔ∏è&lt;/p&gt;

</description>
      <category>webdev</category>
      <category>javascript</category>
      <category>career</category>
      <category>codenewbie</category>
    </item>
    <item>
      <title>Containers: Why is Docker preferred more?</title>
      <author>TAFF Inc | #WeMakeITHappen</author>
      <pubDate>Fri, 27 Aug 2021 08:43:47 +0000</pubDate>
      <link>https://dev.to/taffinc/containers-why-is-docker-preferred-more-1o5l</link>
      <guid>https://dev.to/taffinc/containers-why-is-docker-preferred-more-1o5l</guid>
      <description>&lt;p&gt;Containers are critical to application development. They are needed to maintain consistency across all platforms within the app development life cycle and thus, are gaining more popularity among modern-day developers. Over the years, Docker‚Äôs popularity has soared in cloud and containerized application packaging and distribution. An application developed in Docker will work on any machine and thus is highly compatible.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#growth-of-docker"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Growth of Docker&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Before the launch of containers, developers were using virtual machines to develop applications. The application used to work fine in their environment but it faced many problems when it reached the production environment. This prevented large companies from using micro services architecture and this is where Docker came to the rescue.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--owS-Ay6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mhq8x9gqq4dih6l63xe.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--owS-Ay6X--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/6mhq8x9gqq4dih6l63xe.png" alt="Docker"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Docker proved to be a real game changer since the applications worked the same in both development and production environments. &lt;/p&gt;

&lt;p&gt;Docker has witnessed fast growth as more and more businesses migrated to Docker for their software development. &lt;/p&gt;

&lt;p&gt;According to the Stack overflow 2020 survey, Docker was the 2nd most loved platform after Linux. Survey also showed that Docker was the most preferred technology that developers wanted to learn in 2020. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#why-docker-is-the-preferred-choice"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Why Docker is the preferred choice?&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;Docker is hotter than hot because it makes it possible to get far more apps running on the same old servers and it also makes it very easy to package and ship programs. Here‚Äôs what you need to know why docker is the preferred choice.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#compatibility"&gt;
  &lt;/a&gt;
  &lt;strong&gt;Compatibility&lt;/strong&gt;
&lt;/h3&gt;

&lt;p&gt;One of the biggest advantages of Docker containers is compatibility or portability. A Docker container image can easily run on any platform like AWS, Google Cloud or any other platform with the same performance. The only requirement is that the platform should support Docker. Since all the libraries and dependencies are packed together in the docker image it will run at the same speed whether deployed in Amazon EC2 or Google Cloud.&lt;/p&gt;

&lt;p&gt;Read More (&lt;a href="https://www.taffinc.com/blog/containers-why-is-docker-preferred-more/"&gt;https://www.taffinc.com/blog/containers-why-is-docker-preferred-more/&lt;/a&gt;&lt;/p&gt;

</description>
      <category>benefitsofdocker</category>
      <category>docker</category>
      <category>webdev</category>
    </item>
    <item>
      <title>AWS open source news and updates #79</title>
      <author>Ricardo Sueiras</author>
      <pubDate>Fri, 27 Aug 2021 08:34:37 +0000</pubDate>
      <link>https://dev.to/aws/aws-open-source-news-and-updates-79-318</link>
      <guid>https://dev.to/aws/aws-open-source-news-and-updates-79-318</guid>
      <description>&lt;h2&gt;
  &lt;a href="#august-27th-2021-instalment-79"&gt;
  &lt;/a&gt;
  August 27th, 2021 - Instalment #79
&lt;/h2&gt;

&lt;p&gt;Newsletter #79.&lt;/p&gt;

&lt;p&gt;The combination of having been away on PTO for the past few weeks, and this coming Monday being a national holiday in the UK, I thought I would post the newsletter today. Covering nearly three weeks, a lot has happened so there is a lot to cover. &lt;/p&gt;

&lt;p&gt;We have 17 new open source projects and solutions, including EventBridge Canon, an essential project if you are working with event driven architectures on AWS, kics a security scanning tool for your IaC,  open source solutions such as aws-security-analytics-bootstrap and amazon-msk-with-apache-kafka-streams-api, and other new projects like aws-python-utilities, snap-xcompile, riFT,  rds_iamauth_proxy, aws-simple-websocket, ecs-external-instance-network-sentry and more.&lt;/p&gt;

&lt;p&gt;We have a wide selection of great blog posts/tutorials too, with Apache Airflow, Redis, OpenTelemetry having several great posts and walk throughs. Other topics covered this week include Amundsen, Prometheus, AWS CDK, OpenSearch, Apache ActiveMQ, Apache Jena, Apache Spark, Suricata, Spring Boot, PostgreSQL, and for folks interested in all things containers, we have Bottlerocket, Docker and Kubernetes updates and posts.&lt;/p&gt;

&lt;p&gt;We will resume with the Monday releases next time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Feedback&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Please let me know how you found this newsletter - how could I improve it or what would you like to see that is not currently covered? It will take you all of 60 seconds, so &lt;a href="https://eventbox.dev/survey/6JGUUJK"&gt;Take the Survey&lt;/a&gt; (the first 20 will get $25 AWS credit codes too!)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Job of the Week&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/tz"&gt;Principal Technical Product Manager, Amazon Corretto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Amazon Corretto is a public distribution of OpenJDK as well as the primary Java distribution used by Amazon's own developers. Many of AWS's and Amazon's signature service run on the Java runtime, you will have a direct opportunity to influence them in this role.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#celebrating-open-source-contributors"&gt;
  &lt;/a&gt;
  Celebrating open source contributors
&lt;/h3&gt;

&lt;p&gt;The articles posted in this series are only possible thanks to contributors and project maintainers and so I would like to shout out and thank those folks who really do power open source and enable us all to build on top of what they have created. &lt;/p&gt;

&lt;p&gt;So thank you to the following open source heroes: David Boyne, Nomaan Butt, Seth Miller, Harinder Seera, Gus Verdun, Peter Hanssens, Don Simpson, Evan Diewald, Arun Donti, Jeroen Reijn, Aleksandr Filichkin, Shiva Vaidyanathan, Rashpal Kler, Matt Cline, Ulili Nhaga, Hendrik Schoeneberg, Junjie Tang, Adam Andrews, Chris Smith, Eli Fisher, Carl Meadows, Jules Graybill, Kyle Davis, Mehul Shah, Virendhar Sivaraman, Kishan Desai, Zach Gardner, Danilo Poccia, Qu Chen, Asaf Porat Stoler, Jim Gallagher, Nathaniel Braun, Hrvoje Grgic, Mart Noten, Aru Petchimuthu, Laura Dawson, Maish Saidel-Keesing, Adi Singh, Alex Pulver, Srikanth Kodali, Drew Dennis, Olly Pomeroy, Jesus Escudero Lopez, Javier Martin, Pinglei Guo, Min Xia, Karen Xu, Kelvin Lo, Mike George, Seth Dobson, Paul Ramsey, Sheetal Joshi, Shibo Wang, Avnish Jain, Melody Yang, Shiva Achari, Daniel Maldonado, Igor Izotov, Dipankar Kushari, Gaurav Gundal, Naveen Madhire, Ashok Padmanabhan, Aubrey Oosthuizen and Gary Stafford.&lt;/p&gt;

&lt;p&gt;Make sure you find and follow these builders and keep up to date with their open source projects and contributions.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#latest-open-source-projects"&gt;
  &lt;/a&gt;
  Latest open source projects
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;eventbridge-canon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/u7"&gt;eventbridge-canon&lt;/a&gt; David Boyne has put together another great open source tool, EventBridge Canon. This tool helps you manage and publish events into EventBridge. You can create Events and publish them into EventBridge and reuse previous events too. Make sure you read the launch post, &lt;a href="https://aws-oss.beachgeek.co.uk/ua"&gt;Introducing EventBridge Canon&lt;/a&gt;. This weeks project of the week, so make sure you check it out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ecs-external-instance-network-sentry&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/tv"&gt;ecs-external-instance-network-sentry&lt;/a&gt; this open source tool is something that I will be looking at having experimented with ECS Anywhere recently. eINS provides an additional layer of resilience for ECS external instances in deployment scenarios where connectivity to the on-region ECS control-plane may be unreliable or intermittent.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xzDOGgHa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/aws-samples/ecs-external-instance-network-sentry/main/images/eins-no-connectivity-v0.01.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xzDOGgHa--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/aws-samples/ecs-external-instance-network-sentry/main/images/eins-no-connectivity-v0.01.png" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;kics&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/tw"&gt;kics&lt;/a&gt; this open source tool from Checkmarx will help you to find security vulnerabilities, compliance issues, and infrastructure misconfigurations early in the development cycle of your infrastructure-as-code. KICS stands for Keeping Infrastructure as Code Secure, and supports AWS CloudFormation, Terraform, Kubernetes and more. This should definitley be on your "check out"/"to do" list.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;nitro-enclave-tensorflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/sq"&gt;nitro-enclave-tensorflow&lt;/a&gt; This open source repository from Evan Diewald is a great sample/demo to show you how you can use the power of AWS Nitro Enclaves to run confidential machine learning inference. To help you get this project up and running, make sure you read the post, &lt;a href="https://aws-oss.beachgeek.co.uk/sr"&gt;Privacy Preserving Deep Learning with AWS Nitro Enclaves&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;amazon-api-gateway-cors-configurator&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/t8"&gt;amazon-api-gateway-cors-configurator&lt;/a&gt; this open source project  helps you properly configure CORS for Amazon API Gateway and HTTP APIs. The CORS configurator assumes you are using AWS SAM to build an API Gateway endpoint with a proxy integration to an AWS Lambda function. Eric Johnson has put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/t7"&gt;Configuring CORS on Amazon API Gateway APIs&lt;/a&gt; to help walk you through how this works.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--wSak7pFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/16/Screen-Shot-2021-08-16-at-1.23.51-PM.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wSak7pFD--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/1b6453892473a467d07372d45eb05abc2031647a/2021/08/16/Screen-Shot-2021-08-16-at-1.23.51-PM.png" alt="cors"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;snap-xcompile&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/t9"&gt;snap-xcompile&lt;/a&gt; this new open source tool enables you to cross-compile snaps for x86_64 and arm64 machines using remote AWS buildfarms. The ability to cross-compile deployable assets is key to development workflows in IoT, robotics, and other embedded systems. In this post from Adi Singh, &lt;a href="https://aws-oss.beachgeek.co.uk/ta"&gt;Snap xCompile: An AWS tool for cross-compiling snaps privately&lt;/a&gt; you can explore this tool in more detail, walking through how to xCompile an example project. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-security-analytics-bootstrap&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/tb"&gt;aws-security-analytics-bootstrap&lt;/a&gt; this new open source solution enables customers to perform security investigations on AWS service logs by providing an Amazon Athena analysis environment that's quick to deploy, ready to use, and easy to maintain. To find out more, including use cases and a walk through of how to get started, check out the blog post from Ryan Smith and Mohit Gadkari, &lt;a href="https://aws-oss.beachgeek.co.uk/tc"&gt;Introducing AWS Security Analytics Bootstrap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ehsSr1Ab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/11/smthyym_security_analytics_bootstrap_f1-1024x874.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ehsSr1Ab--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/11/smthyym_security_analytics_bootstrap_f1-1024x874.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;amazon-msk-with-apache-kafka-streams-api&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/te"&gt;amazon-msk-with-apache-kafka-streams-api&lt;/a&gt; this is an open source solution that shows you how you can build a real-time stream processing application using Amazon MSK, AWS Fargate and the Apache Kafka Streams API. To help you, follow along in the blog post &lt;a href="https://aws-oss.beachgeek.co.uk/tf"&gt;Power your Kafka Streams application with Amazon MSK and AWS Fargate&lt;/a&gt; by Karen Grygoryan&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;print&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/tu"&gt;print&lt;/a&gt; Gus Verdun has put together this open source project to help simplify how you can deploy static files to AWS S3 and CloudFront. This tool keeps track of the file time stamps that have been uploaded and only uploads files that have been touched since the last time the tool was run.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;awsboilerplate&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/u9"&gt;awsboilerplate&lt;/a&gt; if you are looking for a quick way to set up a starter environment, then check this project out. It provides a complete starter kit to get your project live on AWS in minutes and a CICD pipeline to allow you to move quickly. From getting started and running locally to being able to deploy this to AWS using an automated pipeline, well worth checking this out.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--cm11BwZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/geod/awsboilerplate/master/documentation/AWS-Boilerplate-Architecture.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--cm11BwZl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://raw.githubusercontent.com/geod/awsboilerplate/master/documentation/AWS-Boilerplate-Architecture.jpg" alt="arch"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-simple-websocket&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/u8"&gt;aws-simple-websocket&lt;/a&gt; if you are looking for a quick sample project to use as a baseline for experimenting with websockets on AWS, this project from &lt;br&gt;
Seth Miller uses AWS's API Gateway + Lambda to run a simple websocket application. &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JKhCAYTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/four43/aws-simple-websocket/blob/master/docs/example.gif%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JKhCAYTB--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://github.com/four43/aws-simple-websocket/blob/master/docs/example.gif%3Fraw%3Dtrue" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;riFT&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/tx"&gt;riFT&lt;/a&gt; - in my experience, many open source projects are born out of past experiences, putting together something to fix/improve/address a gap. Nomaan Butt has created riFT, an open source tool that provides elastic EC2 instance monitoring tool that put cost first. It has some nice integration with Microsoft Teams that allows you to send notifications/reports directly, or email if you prefer that.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--70ZEM3jr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/buttnomaan9/riFT/blob/main/backend/images/dynamic_ec2_monitor.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--70ZEM3jr--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/buttnomaan9/riFT/blob/main/backend/images/dynamic_ec2_monitor.png%3Fraw%3Dtrue" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;rds_iamauth_proxy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/u0"&gt;rds_iamauth_proxy&lt;/a&gt; if you work with Amazon RDS then this open source tool is going to be of interest to you. This project from Gold Fig Labs developed in Rust provides a Postgres proxy which allows tools that don't natively supports IAM auth to connect to AWS RDS instances.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;serverless-rds-proxy-demo&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/uh"&gt;serverless-rds-proxy-demo&lt;/a&gt; this project demos the benefits of using RDS proxy with serverless workloads that depend on relational database like RDS Aurora. It shows end to end automated setup of RDS Aurora(Mysql) with RDS proxy. Basic serverless architecture is set up using API gateway HTTP API and Lambda Functions.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--JBEZpS04--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/serverless-rds-proxy-demo/blob/main/images/architecture.png%3Fraw%3Dtrue" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--JBEZpS04--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://github.com/aws-samples/serverless-rds-proxy-demo/blob/main/images/architecture.png%3Fraw%3Dtrue" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Diggie&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/u6"&gt;Diggie&lt;/a&gt; if you have begun using/experimenting with OpenSearch, this project will be of interest. Diggie is a GUI client for OpenSearch, providing a desktop app for Mac / Windows environments that makes operating with OpenSearch easier. This project is currently a developer preview version.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--V_7oUHtd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/DiggieApp/Diggie/master/diggie.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--V_7oUHtd--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/DiggieApp/Diggie/master/diggie.gif" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;cdk-pipelines-github&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/u4"&gt;cdk-pipelines-github&lt;/a&gt; this is an experimental library, that will help you to deploy CDK applications through GitHub workflows. An overview of how this works and how you can use it is provided in the docs, as well as a list of what does and does not currently work.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;aws-python-utilities&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/u3"&gt;aws-python-utilities&lt;/a&gt; I only discovered this GitHub repo from &lt;br&gt;
Harinder Seera this week, and it is his collection of Python utilities for AWS. These utilities help save time with different facets (RCA/reporting/cost saving) of performance testing. You can use these stand alone, or as part of your automated developer workflows.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#aws-and-community-blog-posts"&gt;
  &lt;/a&gt;
  AWS and Community blog posts
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Amundsen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amundsen is an open source metadata and data lineage tool that helps you easily trace data lineage from source to dashboard. I was very happy to see this post, &lt;a href="https://aws-oss.beachgeek.co.uk/ti"&gt;Building a data discovery solution with Amundsen and Amazon Neptune&lt;/a&gt; from AWS Hero Peter Hanssens and Don Simpson from AWS, showing you how you can deploy this and provides a sample walkthrough taking some data from a number of AWS services and then exploring them in the Amundsen dashboard. This is a must read post this week for Data nerds. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--mqz_oqWf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/08/05/DBBLOG-1499-image003.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--mqz_oqWf--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/08/05/DBBLOG-1499-image003.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GraalVM&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Aleksandr Filichkin takes AWS Lambda cold start challenges in his post, &lt;a href="https://aws-oss.beachgeek.co.uk/ub"&gt;GraalVM + AWS Lambda or solving Java cold start problem&lt;/a&gt;. In this study, Aleksandr benchmarks a sample book microservice, and provides source code so you can try this for yourself. To find out more, read the post. This graph should tempt you.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ONfzi4Qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2Aj-Su8oeM-tr6du1c1HjeMw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ONfzi4Qm--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/1400/1%2Aj-Su8oeM-tr6du1c1HjeMw.png" alt="graph"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenSearch&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/sx"&gt;Keeping clients of OpenSearch and Elasticsearch compatible with open source&lt;/a&gt; the OpenSearch crew, Eli Fisher, Carl Meadows, Jules Graybill, Kyle Davis, and Mehul Shah share an important update for developers who use any number of the clients to work with OpenSearch or Elasticsearch. With some recent changes to some of the client libraries, this could impact your applications ability to interact with OpenSearch or Elasticsearch so make sure you read this post and check out the new forks of some of the client libraries.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Airflow&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;We had a number of Apache Airflow posts over the past few weeks (and some really nice ones coming soon as well, so keep a look out for them too).&lt;/p&gt;

&lt;p&gt;First up we have, &lt;a href="https://aws-oss.beachgeek.co.uk/su"&gt;Field Notes: Deploying Autonomous Driving and ADAS Workloads at Scale with Amazon Managed Workflows for Apache Airflow&lt;/a&gt; where Hendrik Schoeneberg, Junjie Tang, and Adam Andrews share a sample solution of how Apache Airflow is used to help orchestrate the image data collection and processing you see in autonomous driving workloads. This is a deep dive with resources provided so you can try this out for yourself/ [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--bNHGmDMv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2021/07/22/Architecture-for-Deploying-Autonomous-Driving-ADAS-workloads-at-scale.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--bNHGmDMv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2021/07/22/Architecture-for-Deploying-Autonomous-Driving-ADAS-workloads-at-scale.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up we have a great post from Virendhar Sivaraman and Kishan Desai, &lt;a href="https://aws-oss.beachgeek.co.uk/sy"&gt;Bolster security with role-based access control in Amazon MWAA&lt;/a&gt; that takes a deep dive on how you can ensure that the tasks you create in Apache Airflow use role based access controls and fine-grained IAM task roles to support least privilege access for your tasks. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R6sj_OZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/07/29/BDB-1448-image002-1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R6sj_OZS--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/07/29/BDB-1448-image002-1.jpg" alt="explain"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Jena&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/sv"&gt;Introducing Graph Store Protocol support for Amazon Neptune&lt;/a&gt; Chris Smith takes a look at how you can use the built in support of Graph Store Protocol within &lt;a href="https://aws-oss.beachgeek.co.uk/sw"&gt;Apache Jena&lt;/a&gt;, when creating applications that work on highly connected datasets on Amazon Neptune. Graph Store Protocol support in Amazon Neptune provides efficient methods to interact with complete named graphs within a Resource Description Framework (RDF) dataset. Apache Jena is a popular open-source Java framework for building RDF graph applications that makes extensive use of Graph Store Protocol behind the scenes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache Spark&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Following from a &lt;a href="https://dev.to/aws/aws-open-source-news-and-updates-77-3bog"&gt;previous post&lt;/a&gt; I covered in the last newsletter, we have Melody Yang, Shiva Achari, Daniel Maldonado, and Igor Izotov who collaborated on, &lt;a href="https://aws-oss.beachgeek.co.uk/tq"&gt;Run a Spark SQL-based ETL pipeline with Amazon EMR on Amazon EKS&lt;/a&gt; building on the first post, show you how you can use Arc, an open source  framework for defining predictable, repeatable and manageable data transformation pipelines, to managed your Spark applications declaratively, a widely accepted best practice. Using Amazon EMR on EKS, running your applications that are built upon that declarative framework maximises data process productivity, performance, reliability, and availability at scale. This pattern abstracts Spark technology away from you, and helps you to focus on deliverables that optimise business outcomes. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--AKo92Aqu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/07/08/bdb1267-new-solution-diag.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--AKo92Aqu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/07/08/bdb1267-new-solution-diag.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We also had this post, &lt;a href="https://aws-oss.beachgeek.co.uk/u1"&gt;Run and debug Apache Spark applications on AWS with Amazon EMR on Amazon EKS&lt;/a&gt; from Dipankar Kushari, Gaurav Gundal, Naveen Madhire, and Ashok Padmanabhan which is a really great introduction in how you can get started with Apache Spark  on Amazon EMR when using Amazon EKS. It walks you through setting up an EMR cluster on EKS, using a sample application using the NOAA weather data set - all resources are available in the GitHub repo so you can try this yourself and use this as a baseline for your own projects. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--dDHBJqwi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/08/13/BDB-1277-image002.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--dDHBJqwi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/b6692ea5df920cad691c20319a6fffd7a4a766b8/2021/08/13/BDB-1277-image002.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Big Data - Debezium/Apicurio and Apache Kafka&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When it comes to Big Data blog posts, I always enjoy working through Gary Staffords posts. In his latest, &lt;a href="https://aws-oss.beachgeek.co.uk/uc"&gt;Hydrating a Data Lake using Log-based Change Data Capture (CDC) with Debezium, Apicurio, and Kafka Connect on AWS&lt;/a&gt;, building on from an earlier post (that you should also check out) this post dives deep into log-based CDC as a marked improvement over query-based CDC to continuously stream changes from the PostgreSQL database to your data lake.  Gary explores a number of open source technologies, performing log-based CDC using Debezium, storing messages as Apache Avro, with Avro message schemas stored in Apicurio Registry. This is what you will build following this post:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--fsnuFhd4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ATpXpTlb8Y_Z6PIhdkl52Pw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--fsnuFhd4--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://miro.medium.com/max/700/1%2ATpXpTlb8Y_Z6PIhdkl52Pw.png" alt="arc"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apache ActiveMQ&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Dominic Gagn√© and Mithun Mallick have come together to create this post, &lt;a href="https://aws-oss.beachgeek.co.uk/tg"&gt;Authenticating and authorizing Amazon MQ users with Lightweight Directory Access Protocol&lt;/a&gt;. Read on to find out more on Amazon MQ‚Äôs authentication and authorisation model. It covers the steps you need in order to set up Microsoft Active Directory as they authenticated user store for Amazon MQ. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Redis&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Over the last week or so, we announced a new AWS service called Amazon MemoryDB. This is a new Redis compatible, durable, in-memory database. In the launch post, &lt;a href="https://aws-oss.beachgeek.co.uk/sz"&gt;Introducing Amazon MemoryDB for Redis ‚Äì A Redis-Compatible, Durable, In-Memory Database Service&lt;/a&gt; colleague Danilo Poccia shares details about this new service, including how it compares with other Redis services such as Amazon ElastiCache for Redis. &lt;/p&gt;

&lt;p&gt;Zach Gardner followed that post with, &lt;a href="https://aws-oss.beachgeek.co.uk/t0"&gt;Build with Redis data structures for microservices using Amazon MemoryDB for Redis and Amazon ECS&lt;/a&gt; which provides a practical application and example of how you might use this to increase the performance of your applications (in this instance, using a sample container application running on Amazon ECS.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--5g13H_hM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/08/20/dbblog-1828-image005-1.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--5g13H_hM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/887309d048beef83ad3eabf2a79a64a389ab1c9f/2021/08/20/dbblog-1828-image005-1.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you find yourself wanting to access your Amazon ElastiCache Redis clusters in private subnets, then Hrvoje Grgic and Mart Noten have you covered in the post, &lt;a href="https://aws-oss.beachgeek.co.uk/t2"&gt;Use AWS Systems Manager Session Manager for port forwarding to Amazon ElastiCache for Redis inside a private subnet&lt;/a&gt;. Using AWS Systems Manager as well as HAProxy, to seamlessly forward ports from a local development machine to a provisioned bastion host. In this way, you obtain access to reach all other private resources in your VPC without exposing any surface in your cloud infrastructure to attack. This post provides source code which you can use to implement or change to suit your needs. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--UiDJeyIt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/08/02/SSMBlog_Architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--UiDJeyIt--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/972a67c48192728a34979d9a35164c1295401b71/2021/08/02/SSMBlog_Architecture.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To finish up the Redis posts this week we have a great post from Qu Chen, Asaf Porat Stoler, Jim Gallagher, and Nathaniel Braun, &lt;a href="https://aws-oss.beachgeek.co.uk/t1"&gt;Best practices: Redis clients and Amazon ElastiCache for Redis&lt;/a&gt;. In this post, they cover best practices for interacting with Amazon ElastiCache for Redis resources with commonly used open-source Redis client libraries. Make sure you read it to avoid some of the pitfalls, and ensure you make the best use of Redis within your applications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Suricata&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Suricata is an open source threat detection engine that provides capabilities including intrusion detection, intrusion prevention and network security monitoring. AWS Network Firewall uses Suricata  to provide network protections for all of your Amazon Virtual Private Clouds (VPCs). Another open source project, Squid Proxy can also be used to provide some of the capabilities. In the post, &lt;a href="https://aws-oss.beachgeek.co.uk/st"&gt;Migrating from Squid Web Proxy to AWS Network Firewall&lt;/a&gt; Shiva Vaidyanathan and Rashpal Kler share some of the common architectures that use Squid Proxy, and how you might move/migrate these to AWS Network Firewall.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--j0bGVCLi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/5b384ce32d8cdef02bc3a139d4cac0a22bb029e8/2021/08/19/Picture1-7.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--j0bGVCLi--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/5b384ce32d8cdef02bc3a139d4cac0a22bb029e8/2021/08/19/Picture1-7.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bottlerocket&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bottlerocket is a free and open-source Linux-based operating system meant for hosting containers. In this post, &lt;a href="https://aws-oss.beachgeek.co.uk/td"&gt;A deep dive into Bottlerocket ECS Updater&lt;/a&gt; by Maish Saidel-Keesing, you will find out more how the service works, and how updates are applied in Bottlerocket. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ruUHZagM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/08/09/image-2021-08-09T105533.028.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ruUHZagM--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fe2ef495a1152561572949784c16bf23abb28057/2021/08/09/image-2021-08-09T105533.028.png" alt="demo"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A couple of Docker related posts that I found interesting. First up, we have &lt;a href="https://aws-oss.beachgeek.co.uk/tj"&gt;Deploy a Docker application on AWS Elastic Beanstalk with GitLab&lt;/a&gt; a blog post from Srikanth Kodali and Drew Dennis that shows you how to deploy a Docker-based Node.js application on Elastic Beanstalk with GitLab‚Äôs DevOps platform. Source code provided so you can follow along and use as a base for your own projects. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--RrY1GBwT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/7719a1c782a1ba91c031a682a0a2f8658209adbf/2021/08/09/Picture1-3.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--RrY1GBwT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/7719a1c782a1ba91c031a682a0a2f8658209adbf/2021/08/09/Picture1-3.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Up next we have &lt;a href="https://aws-oss.beachgeek.co.uk/tk"&gt;Migrating from Docker Swarm to Amazon ECS with Docker Compose&lt;/a&gt; from Olly Pomeroy and Jesus Escudero Lopez who show you how to use Docker Compose as a migration tool, moving a workload from Docker Swarm to Amazon ECS. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;gRPC&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;gRPC is an open-source framework designed to efficiently connect services, sending messages via a compact binary format called Protocol Buffers, or protobuf. It is often used to improve speed and efficiency of how microservices communicate. In this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/ss"&gt;Build Next-Generation Microservices with .NET 5 and gRPC on AWS&lt;/a&gt; Matt Cline and Ulili Nhaga share how AWS supports gRPC through building a sample .NET micro service running on AWS Graviton2 instances. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--Y86V05nv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/7719a1c782a1ba91c031a682a0a2f8658209adbf/2021/08/17/next-generation-microservices-dotnet-grpc-grpc-architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Y86V05nv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/7719a1c782a1ba91c031a682a0a2f8658209adbf/2021/08/17/next-generation-microservices-dotnet-grpc-grpc-architecture.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Spring Boot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Jeroen Reijn has put together this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/ui"&gt;Deploying Spring Boot applications to AWS App Runner with AWS CodePipeline&lt;/a&gt; that walks you through how you can take a Spring Boot application and deploy it via AWS App Runner, a container service that lets deploy your application in minutes without setting up any infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prometheus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another excellent post from John Preston, in his latest post titled &lt;a href="https://aws-oss.beachgeek.co.uk/tt"&gt;AWS ECS &amp;amp; CloudWatch with Prometheus&lt;/a&gt; he dives deep and shares how to funnel your Prometheus captured metrics into AWS CloudWatch metrics. John has put together some great open source projects to make your life easy, and in this post he shows how you can use one of those tools (ECS Compose-X) to configure this and reduce the complexity. In the blog post he shows you how to set this up with Apache Kafka, exporting the Java JMX metrics so you can then access them in CloudWatch. Very nice! [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--p4ACP6-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://labs.compose-x.io/_images/ECSCWInsightsPrometheus.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--p4ACP6-F--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://labs.compose-x.io/_images/ECSCWInsightsPrometheus.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;OpenTelemetry&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Over the past couple of weeks there have been a number of OpenTelemetry posts. AWS Distro for OpenTelemetry (ADOT) is a secure and supported distribution of the APIs, libraries, agents, and collectors defined in the OpenTelemetry Specification.&lt;/p&gt;

&lt;p&gt;In &lt;a href="https://aws-oss.beachgeek.co.uk/tl"&gt;Introducing CloudWatch Container Insights Prometheus Support with AWS Distro for OpenTelemetry on Amazon ECS and Amazon EKS&lt;/a&gt;, Javier Martin, Pinglei Guo, and Min Xia how to setup and use AWS Distro for OpenTelemetry (ADOT) to monitor Prometheus metrics for Amazon ECS and Amazon EKS on CloudWatch Container Insights. &lt;/p&gt;

&lt;p&gt;In &lt;a href="https://aws-oss.beachgeek.co.uk/tn"&gt;Deployment patterns for the AWS Distro for OpenTelemetry Collector with Amazon Elastic Container Service&lt;/a&gt;, Mike George takes a look at two patterns for deploying ADOT and the AWS OpenTelemetry Collector and the implications and considerations you need to think about.&lt;/p&gt;

&lt;p&gt;Following that we have a collaboration between Seth Dobson (Southwest Airlines) and Paul Ramsey and Sheetal Joshi from AWS with &lt;a href="https://aws-oss.beachgeek.co.uk/to"&gt;Implementing CloudWatch-centric observability for Kubernetes-native developers in Amazon Elastic Kubernetes Service&lt;/a&gt; where they show how to build an end-to-end, CloudWatch-centric observability solution using a number of open source tools such as the OpenTelemetery collector and Fluent Bit. They provide a GitHub repo with code so you can try this out for yourself. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--OaaERGVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/13/sheetjos_cloudwatch_eks_f1_x700.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--OaaERGVR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/13/sheetjos_cloudwatch_eks_f1_x700.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next up we have &lt;a href="https://aws-oss.beachgeek.co.uk/tm"&gt;Adding security workflows to OpenTelemetry&lt;/a&gt; from Karen Xu and Kelvin Lo, who share their experiences working in the OpenTelemetry project, in this case to apply/reinforce security best practices - in this case specifically looking at some security workflows and how to implement status badges for the project.&lt;/p&gt;

&lt;p&gt;If you are a PHP developer, no need to feel left out. Oliver Hamuy shared his experience of enhancing the OpenTelemetry PHP SDK to support AWS X-Ray in &lt;a href="https://aws-oss.beachgeek.co.uk/u2"&gt;Adding AWS X-Ray support to the OpenTelemetry PHP library&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--aw8K4RPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/24/hamuy_aws_xray_opentelemetry_php_f4.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--aw8K4RPR--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/24/hamuy_aws_xray_opentelemetry_php_f4.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The final OpenTelemetry post is &lt;a href="https://aws-oss.beachgeek.co.uk/tp"&gt;Building a Helm chart for deploying the OpenTelemetry Operator&lt;/a&gt; from Shibo Wang who shares his experience of designing and building the OpenTelemetry Operator Helm chart and integrating the OpenTelemetry Operator into the AWS Distro for OpenTelemetry (ADOT). This open source Helm chart allows you to install the OpenTelemetry Operator to an on-premises or managed Kubernetes cluster with a one-line Helm command, and provides increased flexibility in configuring the Operator. This post walks through the design and implementation of the components and the challenges addressed along the way.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--R3mboj1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/13/alolitas_shibw_helm-telemetry_f6_x1000.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--R3mboj1m--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/ca3512f4dfa95a03169c5a670a4c91a19b3077b4/2021/08/13/alolitas_shibw_helm-telemetry_f6_x1000.png" alt="design"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS CDK&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Alex Pulver gets my "must read post of the week" award for his blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/th"&gt;Recommended AWS CDK project structure for Python applications&lt;/a&gt;. As someone who has been working with AWS CDK for the past 12 months, I have learned a lot about how to structure my CDK apps when working with Python. This post puts together lots of great practical advice for Python developers, and will help supercharge your CDK applications. [hands on]&lt;/p&gt;

&lt;p&gt;A community post from Luciano Mammino, &lt;a href="https://aws-oss.beachgeek.co.uk/ty"&gt;Provision an Ubuntu-based EC2 instance with CDK&lt;/a&gt; provides a very nice walkthrough of how to provision Ubuntu based ECS instances (which happens to be my preferred instance type, so I will defo be using this). I really love the style of this post, including showing up issues and how he fixed them - this is something I try and do as I find that you often learn more when you need to fix things, than when things work  first time. Great stuff. [hands on]&lt;/p&gt;

&lt;p&gt;The final AWS CDK related post this week is from Arun Donti, who writes in &lt;a href="https://aws-oss.beachgeek.co.uk/ug"&gt;Virus scan S3 buckets with a serverless ClamAV based CDK construct&lt;/a&gt; on how to leverage an aws-cdk construct that uses the open source ClamAV¬Æ antivirus engine to scan new objects in Amazon S3 for viruses. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZUWrNQBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/0716d9708d321ffb6a00818614779e779925365c/2021/08/23/cdk-serverless-clamscan-architecture.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZUWrNQBK--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/0716d9708d321ffb6a00818614779e779925365c/2021/08/23/cdk-serverless-clamscan-architecture.png" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are looking at or thinking about migrating your PostgreSQL database, then make sure you check out this series of posts - &lt;a href="https://aws-oss.beachgeek.co.uk/t4"&gt;Upgrade your Amazon RDS for PostgreSQL database, Part 1: Comparing upgrade approaches&lt;/a&gt;. In these posts, Aru Petchimuthu dives deep into in-place and out-of-place upgrade options, weighing up their pro's and cons, and showing you how you can minimise your downtime if you have critical workloads that just cannot have downtime.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ROS&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Aubrey Oosthuizen and Junjie Tang have put this post, &lt;a href="https://aws-oss.beachgeek.co.uk/uf"&gt;Field Notes: Deploy and Visualize ROS Bag Data on AWS using rviz and Webviz for Autonomous Driving&lt;/a&gt; to illustrate how to deploy common tools used to visualise ROS bag files. In this particular post, they focus on one particular use case, data collected from drive data from test vehicles configured with cameras, LIDAR, GPS, and other input devices. The data for each device is stored as a topic in the ROS bag file. Developers and engineers need to visualize and inspect the contents of ROS bag files to identify issues or replay the drive data. [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--egWHpcxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2021/08/23/figure-2-1.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--egWHpcxT--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/fc074d501302eb2b93e2554793fcaf50b3bf7291/2021/08/23/figure-2-1.jpg" alt="example"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#case-studies"&gt;
  &lt;/a&gt;
  Case studies
&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://aws-oss.beachgeek.co.uk/t3"&gt;How governments can benefit from open source solutions to solve common challenges&lt;/a&gt; Laura Dawson provides a round the world update on how governments are able to use open source to tackle a wide range of problems. As the post says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;"‚ÄúOpen source tools allow governments to gain access to the best thinking and tools that are available and then quickly customize them to meet the needs of citizens,‚Äù &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Read the post to find out more.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#quick-updates"&gt;
  &lt;/a&gt;
  Quick updates
&lt;/h3&gt;

&lt;p&gt;Lots of quick updates this week, given that a lot has happened over the past three weeks.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PostgreSQL&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Aurora PostgreSQL-Compatible Edition now supports the oracle_fdw extension, which allows your PostgreSQL database to connect to and retrieve data stored in Oracle databases. Foreign Data Wrappers are libraries for PostgreSQL databases that can communicate with an external data source, abstracting the details of connecting to the data source and obtaining data from it. oracle_fdw is a PostgreSQL extension that provides a Foreign Data Wrapper for easy and efficient access to Oracle databases. Oracle_fdw is supported for PostgreSQL 12.7 or higher. To read more, check out the &lt;a href="https://aws-oss.beachgeek.co.uk/tr"&gt;full announcement&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Parquet, Avro, ORC in Amazon Athena&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Athena now lets you store results in the format that best fits your analytics use case. Using Athena's new UNLOAD statement, you can format results in your choice of Parquet, Avro, ORC, JSON or delimited text. Athena's SQL-based interface and support for open formats are well suited for creating extract, transform, and load (ETL) pipelines that prepare your data for downstream analytics processing.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TensorFlow 2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS Neuron, the SDK for running machine learning inference on AWS Inferentia-based Amazon EC2 Inf1 instances now supports TensorFlow 2. Starting with Neuron 1.15.0 you can execute your TensorFlow 2 BERT based models on Inf1 instances with support for additional models coming soon.&lt;/p&gt;

&lt;p&gt;We have also updated our resources with new documentation including a tutorial that help you get started with TensorFlow 2, a tutorial that will guide you on how to deploy a HuggingFace BERT model container on Inferentia using AWS Sagemaker hosting, the inference performance page to help you compare and replicate our results and a new application note to help you discover the types of deep learning architectures that will perform well out of the box on Inferentia.&lt;/p&gt;

&lt;p&gt;Read more &lt;a href="https://aws-oss.beachgeek.co.uk/ts"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Amazon SageMaker / Amazon Linux 2&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You can now choose Amazon Linux 2 for your new SageMaker notebook instance to take advantage of the latest update and support provided by Amazon Linux 2. To find out more, read the blog post &lt;a href="https://aws-oss.beachgeek.co.uk/t5"&gt;Amazon SageMaker notebook instances now support Amazon Linux&lt;/a&gt; from Michael Hsieh, Jun Lyu, and Sam Liu. You can then read this blog post, &lt;a href="https://aws-oss.beachgeek.co.uk/t6"&gt;Migrate your work to an Amazon SageMaker notebook instance with Amazon Linux 2&lt;/a&gt; that describes an approach to migrate your work from an existing notebook instance to a new notebook instance (as well as providing the resources/code you need to help) [hands on]&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--GWeMR7wh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/08/18/ML-4924-image001.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--GWeMR7wh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://d2908q01vomqb2.cloudfront.net/f1f836cb4ea6efb2a0b1b99f41ad8b103eff4b59/2021/08/18/ML-4924-image001.jpg" alt="arch"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kubernetes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Amazon Elastic Kubernetes Service (EKS) now supports the Multus Container Networking Interface (CNI) plugin, enabling pods running in EKS clusters to attach multiple network interfaces in support of advanced networking configurations.&lt;/p&gt;

&lt;p&gt;Multus is an open source CNI plugin for Kubernetes that enables attaching multiple network interfaces to pods. Multus acts as a meta plugin, invoking additional CNI plugins that can operate on multiple network interfaces attached to pods. Use cases that commonly require pods with multiple interfaces include running 5G and streaming networks on Kubernetes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Copilot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS Copilot announced the release of version 1.9. With this release, AWS Copilot now allows you to configure a friendly DNS name for your request driven web services deployed with AWS App Runner. This feature was already available for load balanced web services deployed with Amazon Elastic Container Service (Amazon ECS). Customers using AWS App Runner can now provide a friendly DNS name, such as api.example.com, directly in the manifest file and AWS Copilot will provision and manage the necessary infrastructure to associate the domain name with the customer‚Äôs service deployed with App Runner.&lt;/p&gt;

&lt;p&gt;AWS Copilot v1.9 also adds support for creating multiple environments in the same Amazon Virtual Private Cloud (VPC). This enables customers to save costs during development stages by sharing a single VPC across multiple AWS Copilot environments. By default, AWS Copilot will continue to to create separate VPCs for each environment. Furthermore, with this release, AWS Copilot now automatically sets the Docker default platform to be linux/amd64 to improve compatibility with customers‚Äô ARM-based machines.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Next.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;AWS Amplify Hosting now supports deploying and hosting server-side rendered (SSR) apps built with version 11 of Next.js with zero configuration. Amplify Hosting supports all the latest Next.js features including incremental static regeneration, automatic image optimisation, and script optimisation.&lt;/p&gt;

&lt;p&gt;Next.js is a React framework that combines build-time static site generation (SSG) and dynamic server-side rendering (SSR) to enable developers to build performant, SEO-friendly web apps. Next.js developers can leverage all of Amplify‚Äôs build and hosting capabilities such as PR previews, easy custom domains, pattern-based branch deployments, password protection, redirects, and custom headers.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#events-for-your-diary"&gt;
  &lt;/a&gt;
  Events for your diary
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Cloud DevSecOps with Bridgecrew and Terraform&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;8th September, 9am PST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;From scanning infrastructure as code (IaC) for security misconfigurations to implementing automated DevSecOps workflows, this workshop will provide a hands-on experience to automate your cloud security. Find out more and &lt;a href="https://aws-oss.beachgeek.co.uk/ud"&gt;register via this link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cloud Native Day&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;23rd September, Bern Switzerland&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;What is this, an in person event returning? A stellar line up including our own Michael Hausenblas, an event looking at CNCF projects and the future of IT. Find out more and to view prices/register, by clicking &lt;a href="https://cloudnativeday.ch/en/#speakers"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GraphQL API security best practices with AWS AppSync and AWS Amplify&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;14th October, 11am AEST&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As a developer, the most important parts of managing your applications should always include enhancing performance while strengthening security. In this webinar, we take you through security best practices for your GraphQL API‚Äôs with AWS AppSync and AWS Amplify, providing you with an understanding of how these can be applied to your applications. In this session, you will learn about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GraphQL Protocol and how to configure a schema&lt;/li&gt;
&lt;li&gt;Possible ways to authenticate and authorise access to GraphQL APIs&lt;/li&gt;
&lt;li&gt;How to configure network security for your API&lt;/li&gt;
&lt;li&gt;How to enable observability for your API with logging, tracing or auditing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To &lt;a href="https://aws-oss.beachgeek.co.uk/ue"&gt;register for this event, use this link&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#stay-in-touch-with-open-source-at-aws"&gt;
  &lt;/a&gt;
  Stay in touch with open source at AWS
&lt;/h3&gt;

&lt;p&gt;I hope this summary has been useful. Remember to check out the &lt;a href="https://aws.amazon.com/opensource/?opensource-all.sort-by=item.additionalFields.startDate&amp;amp;opensource-all.sort-order=asc"&gt;Open Source homepage&lt;/a&gt; to keep up to date with all our activity in open source by following us on &lt;a href="https://twitter.com/AWSOpen"&gt;@AWSOpen&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>aws</category>
    </item>
    <item>
      <title>An Ultimate Guide to Git and Github</title>
      <author>Suhail Kakar</author>
      <pubDate>Fri, 27 Aug 2021 08:33:10 +0000</pubDate>
      <link>https://dev.to/suhailkakar/an-ultimate-guide-to-git-and-github-20j</link>
      <guid>https://dev.to/suhailkakar/an-ultimate-guide-to-git-and-github-20j</guid>
      <description>&lt;p&gt;As a developer, we all know a little about Git and GitHub but there are some developers who still have doubt and question about Git and GitHub. Therefore in this article, I am going to break everything down regarding Git and GitHub, so that you can understand it clearly. &lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#table-of-contents"&gt;
  &lt;/a&gt;
  Table of contents
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href="#installation"&gt;Installation&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#linux"&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#windows"&gt;Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#mac"&gt;Mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;/li&gt;
&lt;li&gt;&lt;a href="#basic-github-terms"&gt;Basic GitHub terms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#basic-git-command"&gt;Basic Git Command&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demonstration"&gt;Demonstration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github-special-repository"&gt;GitHub special repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#conclusion"&gt;Conclusion &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;
  &lt;a href="#introduction"&gt;
  &lt;/a&gt;
  Introduction
&lt;/h2&gt;

&lt;p&gt;Git is a source code management technology used by DevOps. It is a free and open-source version control system that is used to efficiently manage small to extremely big projects.&lt;/p&gt;

&lt;p&gt;Git is a version control system. Version control is a file manager that maintains track of changes to your projects over time and keeps a complete history of whatever you're working on. It allows many developers around the globe to work together on the same project at the same time&lt;/p&gt;

&lt;p&gt;GitHub is a site that hosts Git repositories, but it also has a lot of its own features. It is a web-based graphical interface for Git, which is a command-line application. Each project has access control and numerous collaborative capabilities, such as wikis and rudimentary task management tools.&lt;/p&gt;

&lt;p&gt;It is the home of 56 million ( September 2020 ) developers around the globe which is currently owned by Microsoft&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#installation"&gt;
  &lt;/a&gt;
  Installation
&lt;/h2&gt;

&lt;p&gt;Every operating system has its own steps to install Git, In this article, I will cover Linux, Windows, and Mac ( Which are the most popular ones )&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#linux"&gt;
  &lt;/a&gt;
  Linux
&lt;/h3&gt;

&lt;p&gt;If you are a Linux user ( like me ), you will probably know that the Linux family is very big and It has many distros such as Ubuntu, Fedora, Arch and etc.&lt;br&gt;
However, in this article, I will cover Debian ( Ubuntu ) and Fedora&lt;/p&gt;
&lt;h4&gt;
  &lt;a href="#debian-ubuntu-aptget"&gt;
  &lt;/a&gt;
  Debian / Ubuntu (apt-get)
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt; From your shell, install Git using apt-get:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Verify the installation was successful by typing git --version:
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Configure your Git username and email using the following commands. These details will be associated with any commits that you create.
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Suhail Kakar"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &lt;span class="s2"&gt;"suhail.zahed@gmail.com
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;

&lt;h4&gt;
  &lt;a href="#fedora-dnfyum"&gt;
  &lt;/a&gt;
  Fedora (dnf/yum)
&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;From your shell, you can install Git using dnf or yum
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo dnf install git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;


&lt;p&gt;or&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;sudo yum install git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Verify the installation was successful by typing git --version:
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Configure your Git username and email using the following commands. These details will be associated with any commits that you create.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Suhail Kakar"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &lt;span class="s2"&gt;"suhail.zahed@gmail.com
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#windows"&gt;
  &lt;/a&gt;
  Windows
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Download the latest  &lt;a href="https://gitforwindows.org/"&gt;Git for Windows setup&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;You should see the Git Setup wizard screen after you've successfully run the installer. Complete the installation by following the Next and Finish prompts. For most people, the default parameters are adequate.&lt;/li&gt;
&lt;li&gt;Open a Command Prompt or Git Bash and run the below command to configure your Git username and email. These details will be associated with any commits that you create.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Suhail Kakar"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &lt;span class="s2"&gt;"suhail.zahed@gmail.com
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#mac"&gt;
  &lt;/a&gt;
  Mac
&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Download the latest  &lt;a href="https://sourceforge.net/projects/git-osx-installer/files/"&gt;Git for mac installer&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;Follow the prompts to install Git.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or, install Homebrew and run the following to install an up to date version of Git on your Mac:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;brew install git
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Open a terminal and verify the installation was successful by typing the below command.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git --version
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Configure your Git username and email using the following commands. These details will be associated with any commits that you create.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.name &lt;span class="s2"&gt;"Suhail Kakar"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;





&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;git config &lt;span class="nt"&gt;--global&lt;/span&gt; user.email &lt;span class="s2"&gt;"suhail.zahed@gmail.com
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#basic-github-terms"&gt;
  &lt;/a&gt;
  Basic GitHub terms
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt; &lt;strong&gt;Fork&lt;/strong&gt;: Fork is a copy of another user's repository that lives on your personal Github account. The major reason for this is to adapt other people's repositories to meet your needs.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Main&lt;/strong&gt;: When you create a new repository, it comes with a default development branch. &lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Readme&lt;/strong&gt;: It is a text file that contains information about other files in a repository. It is usually a basic plain text file called Read Me that serves as documentation.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Repository&lt;/strong&gt;: A Repository is a place where tour work will be stored in a directory or storage space. This is sometimes abbreviated as "repo" by GitHub users.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;License&lt;/strong&gt;: If you want your repository to be genuinely open source, you'll need to license it so that others can use, modify, and distribute it.&lt;/li&gt;
&lt;li&gt;
&lt;strong&gt;Pull request&lt;/strong&gt;: It allows you to announce a change made by you in the branch. It is a way for a developer to let the rest of the team know when they've finished a feature.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#basic-git-command"&gt;
  &lt;/a&gt;
  Basic Git Command
&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;code&gt;git init&lt;/code&gt;: The git init command creates a new Git repository. Executing this command creates a &lt;code&gt;.git&lt;/code&gt; subdirectory in the current working directory, which contains all of the necessary Git metadata for the new repository. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git clone&lt;/code&gt;: The git clone command is used to create a copy of a specific repository or branch within a repository.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git branch &amp;lt;branch-name&amp;gt;&lt;/code&gt;: This git command is used to create a new branch for a specific repository. &lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git checkout &amp;lt;branch-name&amp;gt;&lt;/code&gt;: The git checkout command lets you navigate between the branches created by the git branch.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git add&lt;/code&gt;: It is the first command in a chain of operations that directs Git to "save" a snapshot of the current project state, into the commit history. It is used to tracks your file and changes in Git&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git commit&lt;/code&gt;: The git commit command takes a snapshot of the current state of the project's changes.&lt;/li&gt;
&lt;li&gt;
&lt;code&gt;git push&lt;/code&gt; : This command is used to upload git commits to a remote repository like Github&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;The power of Open Source is the power of the people. The people rule. ~ Philippe Kahn&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#demonstration"&gt;
  &lt;/a&gt;
  Demonstration
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;To create a new folder, you need to use the below command.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;mkdir demo-folder
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To navigate to your newly created folder, use the below command.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cd demo-folder
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To create a new file, you need to the below command.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;touch index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;Use the below command to see untracked changes in the &lt;code&gt;index.js&lt;/code&gt; file.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To add &lt;code&gt;index.js&lt;/code&gt;, use the command below.
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git add index.js
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To commit your changes use the below command
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git commit -m "added index.js file"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To add your remote origin link, use the command below
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git remote add origin main https://github.com/suhailkakar/demo
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;ul&gt;
&lt;li&gt;To push your code to GitHub, you can use the below command
&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git push -u origin
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#github-special-repository"&gt;
  &lt;/a&gt;
  GitHub special repository
&lt;/h2&gt;

&lt;p&gt;GitHub offers a special repository by your username, which should contain a &lt;code&gt;readme.md&lt;/code&gt; and it will show in your GitHub profile, just like mine&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--oxl9nN9V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630052128766/HuXKWYkZf.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--oxl9nN9V--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1630052128766/HuXKWYkZf.png" alt="screely-1630052122124.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want a similar look, you can fork my repository  &lt;a href="https://github.com/suhailkakar/suhailkakar"&gt;here&lt;/a&gt; &lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion ‚åõ
&lt;/h2&gt;

&lt;p&gt;I hope you found this article helpful. If you need any help please let me know in the comment section. &lt;/p&gt;

&lt;p&gt;Let's connect on  &lt;a href="https://twitter.com/suhailkakar"&gt;Twitter&lt;/a&gt;  and  &lt;a href="https://www.linkedin.com/in/suhailkakar/"&gt;LinkedIn&lt;/a&gt;  &lt;/p&gt;

&lt;p&gt;üëã Thanks for reading, See you next time&lt;/p&gt;

</description>
      <category>github</category>
      <category>javascript</category>
      <category>git</category>
      <category>programming</category>
    </item>
  </channel>
</rss>
