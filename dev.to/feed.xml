<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>DEV Community</title>
    <author>DEV Community</author>
    <description>A constructive and inclusive social network for software developers. With you every step of your journey.</description>
    <link>https://dev.to</link>
    <language>en</language>
    <item>
      <title>GirlScript Summer Of Code 2021 !! First Open Source Program !! ü§©ü§©</title>
      <author>Rohan Kulkarni</author>
      <pubDate>Tue, 01 Jun 2021 07:09:37 +0000</pubDate>
      <link>https://dev.to/rohank_2502/girlscript-summer-of-code-2021-first-open-source-program-1hgl</link>
      <guid>https://dev.to/rohank_2502/girlscript-summer-of-code-2021-first-open-source-program-1hgl</guid>
      <description>&lt;h3&gt;
  &lt;a href="#what-is-gssoc"&gt;
  &lt;/a&gt;
  What is GSSOC?
&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;GirlScript Summer of Code&lt;/strong&gt; is the 3 month-long &lt;strong&gt;Open Source Program&lt;/strong&gt; during summers conducted by &lt;strong&gt;GirlScript Foundation,&lt;/strong&gt; with an aim to help beginners get started with &lt;strong&gt;Open Source Development&lt;/strong&gt; while encouraging &lt;strong&gt;diversity.&lt;/strong&gt; Throughout the program, participants contribute to different projects under the guidance of experienced mentors.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#how-to-get-enrolled"&gt;
  &lt;/a&gt;
  How to Get Enrolled?
&lt;/h3&gt;

&lt;p&gt;You have to register as a Participant or as Mentor. &lt;/p&gt;

&lt;p&gt;I have registered as a &lt;strong&gt;Participant.&lt;/strong&gt; After getting selected I was informed by an &lt;strong&gt;Email&lt;/strong&gt; and was asked to join &lt;strong&gt;Discord Server!&lt;/strong&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1TZIfpTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufhrc34u7z1vjfnf0430.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--1TZIfpTe--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ufhrc34u7z1vjfnf0430.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#project-"&gt;
  &lt;/a&gt;
  Project !!
&lt;/h3&gt;

&lt;p&gt;There were 100+ Projects which were open for contribution with different tech stacks!! My major contribution was in Single Project  &lt;strong&gt;SFC-Foundations Website.&lt;/strong&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SFC - Foundation&lt;/strong&gt; is an NGO that is active in Northern India. The project was to create a new website from Scratch. I was having basic knowledge of &lt;strong&gt;Front-end Development&lt;/strong&gt; so I selected this project to work on !!&lt;/p&gt;
&lt;h3&gt;
  &lt;a href="#contribution-statistics-till-1st-june-2021-"&gt;
  &lt;/a&gt;
  Contribution Statistics ( Till 1st June 2021 )
&lt;/h3&gt;

&lt;p&gt;Project :-   &lt;/p&gt;
&lt;div class="ltag-github-readme-tag"&gt;
  &lt;div class="readme-overview"&gt;
    &lt;h2&gt;
      &lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i3JOwpme--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev.to/assets/github-logo-ba8488d21cd8ee1fee097b8410db9deaa41d0ca30b004c0c63de0a479114156f.svg" alt="GitHub logo"&gt;
      &lt;a href="https://github.com/himanshu007-creator"&gt;
        himanshu007-creator
      &lt;/a&gt; / &lt;a href="https://github.com/himanshu007-creator/SFC-foundations"&gt;
        SFC-foundations
      &lt;/a&gt;
    &lt;/h2&gt;
    &lt;h3&gt;
      SFC bringing change to the society. Drop a ‚≠ê
    &lt;/h3&gt;
  &lt;/div&gt;
  &lt;div class="ltag-github-body"&gt;
    
&lt;div id="readme" class="md"&gt;
&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://raw.githubusercontent.com/himanshu007-creator/SFC-foundations/master/Assets/bnr.gif"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--nt78ebhg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://raw.githubusercontent.com/himanshu007-creator/SFC-foundations/master/Assets/bnr.gif"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div&gt;&lt;h1&gt;
SFC FOUNDATIONS&lt;/h1&gt;&lt;/div&gt;
&lt;p&gt;
The SFC is a Youth NGO that has its roots in Tricity and Delhi. SFC inspires the younger generation to come forward to serve Mother Earth by igniting a spark in them. SFC is established to launch and nurture activities and programs which will reach the most impecunious and vulnerable people from our community. The motive is that Youth is the beaming future of our country and they are the ONLY ones who can change trite plots into buoyant podiums
Hence our projects are designed keeping in mind the barbaric surroundings of our Society. With the help of our stalwart volunteers, we can focus on capacity-building activities rather than the traditional gap-filling initiatives. SFC is an organization of dedicated and staunch amateurs who are dead set at uplifting the unfortunate lots in our society and sheltering our Country
SFC has set up two more units (JALANDHAR,MUMBAI)‚ú®
&lt;/p&gt;

&lt;p&gt;&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f2e066a3469c10ced3308f0601e60fdc9d02b818476d786e2dddb3458c73df67/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73"&gt;&lt;img src="https://camo.githubusercontent.com/f2e066a3469c10ced3308f0601e60fdc9d02b818476d786e2dddb3458c73df67/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="Issues"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/907d2be4d78a30667d674c7e4035b97209fc053259cdb82f628825a018e1b6e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73"&gt;&lt;img src="https://camo.githubusercontent.com/907d2be4d78a30667d674c7e4035b97209fc053259cdb82f628825a018e1b6e2/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="Pull Requests"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/c5b816080bca896c251b317a28e4f48d7ded5627a92cc13d529b338c06854a89/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73"&gt;&lt;img src="https://camo.githubusercontent.com/c5b816080bca896c251b317a28e4f48d7ded5627a92cc13d529b338c06854a89/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="Forks"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/9157f4f680f4c8d8108d859b5f98289536fc6d96ae2cdc786ec3e763fab524e8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73"&gt;&lt;img src="https://camo.githubusercontent.com/9157f4f680f4c8d8108d859b5f98289536fc6d96ae2cdc786ec3e763fab524e8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="Stars"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/f2e066a3469c10ced3308f0601e60fdc9d02b818476d786e2dddb3458c73df67/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73"&gt;&lt;img src="https://camo.githubusercontent.com/f2e066a3469c10ced3308f0601e60fdc9d02b818476d786e2dddb3458c73df67/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="Issues"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/5478d1b27b935353569a8c4a74f50513ef154e0909cbdcb61f433abe70453d05/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e733f7374796c653d736f6369616c"&gt;&lt;img src="https://camo.githubusercontent.com/5478d1b27b935353569a8c4a74f50513ef154e0909cbdcb61f433abe70453d05/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e733f7374796c653d736f6369616c" alt="Forks"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/daa18a63b53f483a2f443ed12ff14518f9159982abc045957dbd4ba4ff9f4b78/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e733f7374796c653d736f6369616c"&gt;&lt;img src="https://camo.githubusercontent.com/daa18a63b53f483a2f443ed12ff14518f9159982abc045957dbd4ba4ff9f4b78/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e733f7374796c653d736f6369616c" alt="Stars"&gt;&lt;/a&gt;
&lt;a href="https://github.com/himanshu007-creator/SFC-foundations/blob/master/LICENSE"&gt;&lt;img src="https://camo.githubusercontent.com/3c2ed01cbccf4d5cc87abd9d43790e76bfd9905e4a2abfbe5f89d4b63a0693bd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e73" alt="License"&gt;&lt;/a&gt;
&lt;a rel="noopener noreferrer" href="https://camo.githubusercontent.com/38d143abbfa66ea4ada152d1ea75e58ce6fea8a2102a4443dc4e899c89243b65/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e732e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265"&gt;&lt;img src="https://camo.githubusercontent.com/38d143abbfa66ea4ada152d1ea75e58ce6fea8a2102a4443dc4e899c89243b65/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f7265706f2d73697a652f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e732e7376673f6c6162656c3d5265706f25323073697a65267374796c653d666c61742d737175617265" alt=""&gt;&lt;/a&gt;
&lt;a href="https://img.shields.io/codecov/c/github/himanshu007-creator/SFC-foundations" rel="nofollow"&gt;&lt;img src="https://camo.githubusercontent.com/fcde78929eac55f501efdd092d9220910a82d60fe9694a7e0ea21fb704990760/68747470733a2f2f636f6465636f762e696f2f67682f68696d616e7368753030372d63726561746f722f5346432d666f756e646174696f6e732f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"&gt;&lt;/a&gt;¬†&lt;/p&gt;

&lt;h1&gt;
GitHub&lt;/h1&gt;‚Ä¶&lt;/div&gt;
  &lt;/div&gt;
  &lt;div class="gh-btn-container"&gt;&lt;a class="gh-btn" href="https://github.com/himanshu007-creator/SFC-foundations"&gt;View on GitHub&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;


&lt;p&gt;Commits:- 206 ( On 1st June ) &lt;/p&gt;

&lt;p&gt;Addition :- 44,311 ++&lt;/p&gt;

&lt;p&gt;Deletions :- 15,429 --&lt;/p&gt;

&lt;p&gt;Issues Created :- 81&lt;/p&gt;

&lt;p&gt;Pull Requests Created :- 72 ( 70 Merged ) &lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--gkpYREx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0pbtk36guc7u3re1ipr.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--gkpYREx3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/g0pbtk36guc7u3re1ipr.png" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#learnings"&gt;
  &lt;/a&gt;
  Learnings:-
&lt;/h3&gt;

&lt;p&gt;-&amp;gt; Got Experience in Real-World Development &lt;br&gt;
-&amp;gt; Learned to work with the group.&lt;br&gt;
-&amp;gt; Workflow of Git-hub &lt;br&gt;
-&amp;gt; Learned how to set up a particular Project on &lt;code&gt;Local System&lt;/code&gt;&lt;br&gt;
-&amp;gt; Had a great Networking with Amazing Peoples! &lt;br&gt;
-&amp;gt; Brushed Up My Skills of Front-end Web Development! &lt;/p&gt;

&lt;p&gt;Get Connected with Me üôÇ&lt;br&gt;
&lt;a href="https://www.linkedin.com/in/rohan-k-2502/"&gt;LinkedIn&lt;/a&gt;&lt;br&gt;
&lt;a href="https://github.com/rohan-kulkarni-25"&gt;Git-Hub&lt;/a&gt;&lt;br&gt;
&lt;a href="https://twitter.com/rohan_2502"&gt;Twitter&lt;/a&gt;&lt;/p&gt;

</description>
      <category>opensource</category>
      <category>webdev</category>
      <category>firstpost</category>
      <category>github</category>
    </item>
    <item>
      <title>Premium Search Engine Optimization tool </title>
      <author>GoOnlineTools</author>
      <pubDate>Tue, 01 Jun 2021 06:33:55 +0000</pubDate>
      <link>https://dev.to/goonlinetools/premium-search-engine-optimization-tool-1o9d</link>
      <guid>https://dev.to/goonlinetools/premium-search-engine-optimization-tool-1o9d</guid>
      <description>&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I am back with a new tool that might be suitable for you if you have a blog or website.&lt;/p&gt;

&lt;p&gt;Today in this article I will introduce &lt;a href="https://semrush.sjv.io/c/1929920/1017039/13053"&gt;Semrush&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Semrush?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Semrush is an all-in-one tool suite for improving online visibility and discovering marketing insights. Our tools and reports are able to help marketers that work in the following services: SEO, PPC, SMM, Keyword Research, Competitive Research, PR, Content Marketing, Marketing Insights, Campaign Management.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Semrush is a premium tool but after following this article you will get pro access for free&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--QD6ORqLh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sekr4j710bo53dsdmtg.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--QD6ORqLh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/4sekr4j710bo53dsdmtg.jpg" alt="Semrush"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#here-is-how-to-get-semrush-pro-for-free"&gt;
  &lt;/a&gt;
  Here is How to get Semrush Pro for free?
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Go to Semrush offer page &lt;a href="https://semrush.sjv.io/c/1929920/1017039/13053"&gt;from here&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;Click on start your free trial button&lt;/li&gt;
&lt;li&gt;Now create your account&lt;/li&gt;
&lt;li&gt;Choose a Trial plan and then click on the get free trial button.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;That's it :)&lt;/p&gt;

&lt;p&gt;Enjoy &lt;/p&gt;

</description>
      <category>offers</category>
      <category>beginners</category>
      <category>webdev</category>
    </item>
    <item>
      <title>Forensic Face Sketch Construction and Recognition</title>
      <author>Akash Sahu</author>
      <pubDate>Tue, 01 Jun 2021 06:18:08 +0000</pubDate>
      <link>https://dev.to/imakashsahu/forensic-face-sketch-construction-and-recognition-18kh</link>
      <guid>https://dev.to/imakashsahu/forensic-face-sketch-construction-and-recognition-18kh</guid>
      <description>&lt;p&gt;In forensic science, it is seen that hand-drawn face sketches are still very limited and time-consuming when it comes to using them with the latest technologies used for recognition and identification of criminals. In this paper, we present a standalone application which would allow users to create composites face sketch of the suspect without the help of forensic artists using drag and drop feature in the application and can automatically match the drawn composite face sketch with the police database much faster and efficiently using deep learning and cloud infrastructure.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;GitHub Repo :&lt;br&gt;
&lt;a href="https://github.com/imakashsahu/Third-Eye-Final-Year-Project"&gt;https://github.com/imakashsahu/Third-Eye-Final-Year-Project&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;
  &lt;a href="#steps-to-deploy-the-project-"&gt;
  &lt;/a&gt;
  Steps to Deploy the Project :
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. Download the Source Code from the Repo (https://github.com/imakashsahu/Third-Eye-Final-Year-Project)
2. Download and Install the Java JDK 8 (https://www.oracle.com/in/java/technologies/javase/javase-jdk8-downloads.html)
3. Download the latest NetBeans Installer (https://netbeans.apache.org/download/index.html)
3. Install and Open NetBeans
4. GoTo Tools &amp;gt; Plugin &amp;gt; Available Plugin 
5. Search for "Java FX" and check "Gluon Plugin" &amp;amp; "JavaFx implementation for Windows" then click on Install
6. Now search for "Maven" and check "Gradle" then click on Install
7. Restart NetBeans
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#part-1-thirdeye-v2face-sketch-construction"&gt;
  &lt;/a&gt;
  PART 1 [ThirdEye v2]--Face Sketch Construction
&lt;/h3&gt;

&lt;p&gt;DEMO : (&lt;a href="https://www.youtube.com/watch?v=wGEEOh1bA2s&amp;amp;ab_channel=AkashSahu"&gt;https://www.youtube.com/watch?v=wGEEOh1bA2s&amp;amp;ab_channel=AkashSahu&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. This part 1 of the project is been build using JAVA FX
2. Download Scene Builder (https://gluonhq.com/products/scene-builder/)
3. GoTo tools &amp;gt; options &amp;gt; Java &amp;gt; JavaFx
4. Browse for the Scene Builder Directory and select the directory from C:\ProgramFiles
5. Now GoTo File &amp;gt; Open Project &amp;gt; ThirdEye v2
6. Now under projects click on "ThirdEye v2 &amp;gt; Libraries" Right Click and select "Add Jar"
7. Browse to "ThirdEye v2 &amp;gt; lib" and select all and open
8. Download and Install SQLite Browser (https://sqlitebrowser.org/dl/)
9. Open the "login.sqlite" file from the "ThirdEye v2" Folder
10. Add your Own Creds this is Important to get the OTP to login
11. Turn On Less secure for you Gmail (https://myaccount.google.com/lesssecureapps)
12. Now go to NetBeans, under projects click on "ThirdEye v2 &amp;gt; Source Package &amp;gt; thirdeye.v2" Double click on Login_screenController.java
13. On Line 144, Enter your GMail Creds to send OTP
14. Run the Project (F6)
15. Enter the Credential from DB Lite
16. Enter the OTP received to the email 
17. Select Create Sketch and your are good to go 
18. Change the File Directory on line 508 of file "dashboard_controller.java"!!!!!
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#part-2-thirdeyefacematchface-sketch-recognition"&gt;
  &lt;/a&gt;
  PART 2 [ThirdEye_FaceMatch]--Face Sketch Recognition
&lt;/h3&gt;

&lt;p&gt;DEMO : (&lt;a href="https://www.youtube.com/watch?v=FzLebHWGhnE&amp;amp;ab_channel=AkashSahu"&gt;https://www.youtube.com/watch?v=FzLebHWGhnE&amp;amp;ab_channel=AkashSahu&lt;/a&gt;)&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;1. This part 2 of the project is been build using JAVA Maven and AWS for Deep learning
2. This part requires you to have AWS account with Credit Card been added to be activated
3. Create a AWS Free Tier account by adding in your Credit Card
4. Create a IAM user profile for the JAVA (https://docs.aws.amazon.com/sdk-for-java/latest/developer-guide/get-started.html)
5. Add S3 and Rekognition Full Access
4. Install AWS CLI on Windows (https://docs.aws.amazon.com/cli/latest/userguide/install-windows.html)
5. Run "aws configure" in CMD
5. Create a s3 Bucket 
6. Now GoTo File &amp;gt; Open Project &amp;gt; ThirdEye_FaceMatch
7. Create a S3 Bucket on the AWS console
8. Create a collection in s3 using the "collection_create.java" file
9. Add images to the collection using the "collection_add_image.java" file
10. Enter the S3 Bucket name and collection details in the "collection_search_face.java" file
11. Run the Project (F6)
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#published-technical-paper"&gt;
  &lt;/a&gt;
  PUBLISHED TECHNICAL PAPER
&lt;/h2&gt;

&lt;p&gt;Read the Technical Paper : &lt;a href="http://www.ijitjournal.org/volume-6/issue-4/IJIT-V6I4P2.pdf"&gt;http://www.ijitjournal.org/volume-6/issue-4/IJIT-V6I4P2.pdf&lt;/a&gt;&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--_uHgw50N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1x56d6zt0s3ppjibifr0.jpg" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--_uHgw50N--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/1x56d6zt0s3ppjibifr0.jpg" alt="Alt Text"&gt;&lt;/a&gt;&lt;/p&gt;

</description>
      <category>machinelearning</category>
      <category>java</category>
      <category>aws</category>
      <category>deeplearning</category>
    </item>
    <item>
      <title>Top 1 way to not mess up your project </title>
      <author>rinas</author>
      <pubDate>Tue, 01 Jun 2021 05:41:07 +0000</pubDate>
      <link>https://dev.to/onerinas/top-1-way-to-not-mess-up-your-project-29mk</link>
      <guid>https://dev.to/onerinas/top-1-way-to-not-mess-up-your-project-29mk</guid>
      <description>&lt;p&gt;If you are a web developer, maker or an entrepreneur who is trying to build a sustainable businesses, &lt;/p&gt;

&lt;p&gt;Here is the Top 1 (yes, it's not a yet another Top 10 article) way to not mess up your project. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Don't be a perfectionist&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you really want to be a perfectionist, change the definition üòÇ&lt;/p&gt;

&lt;p&gt;Perfectionist - someone who takes the perfect next logical step for the project. &lt;/p&gt;

&lt;p&gt;And not someone who keeps tweaking that 1px off margin ü§£&lt;/p&gt;

&lt;p&gt;Not convinced yet? Sorry I didn't try to perfect this post ü§∑&lt;/p&gt;




&lt;p&gt;Original Tweet - &lt;a href="https://twitter.com/onerinas/status/1399596072318640128"&gt;https://twitter.com/onerinas/status/1399596072318640128&lt;/a&gt;&lt;/p&gt;

</description>
      <category>sideprojects</category>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Highlight text in paragraphs with a simple directive in Angular</title>
      <author>Adithya Sreyaj</author>
      <pubDate>Tue, 01 Jun 2021 04:44:44 +0000</pubDate>
      <link>https://dev.to/angular/highlight-text-in-paragraphs-with-a-simple-directive-in-angular-2da</link>
      <guid>https://dev.to/angular/highlight-text-in-paragraphs-with-a-simple-directive-in-angular-2da</guid>
      <description>&lt;p&gt;How to highlight text in a paragraph with the help of directives in Angular. Especially helpful in highlighting text matching the search term. You could have come across this in your browser or IDE when you search for something, the matching items will be highlighted to point you to the exact place of occurrence.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#text-highlighting"&gt;
  &lt;/a&gt;
  Text Highlighting
&lt;/h2&gt;

&lt;p&gt;Here is what we are going to build in this post. A very simple and straightforward highlight directive in Angular. We see something similar in chrome dev tools.&lt;/p&gt;

&lt;p&gt;The idea is pretty simple. We just have to match the searched term and somehow wrap the matched text in a &lt;code&gt;span&lt;/code&gt; or &lt;code&gt;mark&lt;/code&gt; (&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark"&gt;ref&lt;/a&gt;) tag so that we can style them later according to our needs.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-highlight-matched-text"&gt;
  &lt;/a&gt;
  How to highlight matched text?
&lt;/h2&gt;

&lt;p&gt;We are going to use &lt;code&gt;Regex&lt;/code&gt; to find matches in our paragraph. Regex makes it very simple to do operations like this on strings. The directive should be ideally added only to elements with text in it.&lt;br&gt;
This is what we are building:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--np4rmiS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwnk0edw49mhfspfn2wu.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--np4rmiS0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/qwnk0edw49mhfspfn2wu.png" alt="Highlight text directive"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So let's plan out our directive.&lt;br&gt;
The main input to the directive is the term that needs to be highlighted. So yeah, we will use &lt;code&gt;@Input()&lt;/code&gt; to pass the term to our directive. I think that is pretty much what we need inside the directive.&lt;/p&gt;

&lt;p&gt;So now we need to get hold of the actual paragraph to search in. So there is an easy way to get the text from an &lt;code&gt;HTMLElement&lt;/code&gt;. We can use the &lt;code&gt;textContent&lt;/code&gt;(&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent"&gt;ref&lt;/a&gt;) which should give us the text to search in.&lt;/p&gt;
&lt;h2&gt;
  &lt;a href="#building-the-highlight-directive"&gt;
  &lt;/a&gt;
  Building the Highlight directive
&lt;/h2&gt;

&lt;p&gt;As always, I would recommend you create a new module only for the directive. And If you really properly manage your code base, you can consider creating it as a library within the project as well.&lt;/p&gt;

&lt;p&gt;To keep things simple, we put our code in a &lt;code&gt;lib&lt;/code&gt; folder:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight markdown"&gt;&lt;code&gt;lib/
‚îú‚îÄ‚îÄ highlight/
‚îÇ   ‚îú‚îÄ‚îÄ highlight.module.ts
‚îÇ   ‚îú‚îÄ‚îÄ highlight.directive.ts
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#highlight-module"&gt;
  &lt;/a&gt;
  Highlight Module
&lt;/h3&gt;

&lt;p&gt;This module would be simply declaring our directive and exporting it. Nothing much is needed here.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;CommonModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/common&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;NgModule&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;HighlightDirective&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;./highligh.directive&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;NgModule&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;declarations&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;HighlightDirective&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;imports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;CommonModule&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="na"&gt;exports&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;HighlightDirective&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HighlightModule&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#highlight-directive"&gt;
  &lt;/a&gt;
  Highlight Directive
&lt;/h3&gt;

&lt;p&gt;Now that our setup is complete, we can start creating our directive where all our magic is going to happen.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;Directive&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;ElementRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;HostBinding&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;OnChanges&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;SecurityContext&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;SimpleChanges&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/core&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;DomSanitizer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;SafeHtml&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@angular/platform-browser&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Directive&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;selector&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;[highlight]&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;HighlightDirective&lt;/span&gt; &lt;span class="k"&gt;implements&lt;/span&gt; &lt;span class="nx"&gt;OnChanges&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;highlight&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;searchTerm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;caseSensitive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;customClasses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;HostBinding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;innerHtml&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;ElementRef&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="nx"&gt;sanitizer&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;DomSanitizer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

  &lt;span class="nx"&gt;ngOnChanges&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;SimpleChanges&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;?.&lt;/span&gt;&lt;span class="nx"&gt;nativeElement&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;searchTerm&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;caseSensitive&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;changes&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nativeElement&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nx"&gt;HTMLElement&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;textContent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;searchTerm&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;searchTerm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;caseSensitive&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;g&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
          &lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="na"&gt;match&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;mark class="highlight &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customClasses&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/mark&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
          &lt;span class="p"&gt;});&lt;/span&gt;
          &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sanitzed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sanitizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sanitize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="nx"&gt;SecurityContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HTML&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="nx"&gt;newText&lt;/span&gt;
          &lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sanitzed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Let's do a code breakdown.&lt;/p&gt;

&lt;p&gt;The first thing that we need is the Inputs in our directive. We only actually need the search term, but I have added some extra functionalities to our directive. We have an option to provide &lt;code&gt;customClasses&lt;/code&gt; for the highlighted text, and another flag &lt;code&gt;caseSensitive&lt;/code&gt; which will decide whether we have to match the case or not.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;highlight&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;searchTerm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;caseSensitive&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;Input&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="nx"&gt;customClasses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next up we add a &lt;code&gt;HostBinding&lt;/code&gt; (&lt;a href="https://angular.io/api/core/HostBinding"&gt;ref&lt;/a&gt;) which can be used to add value to a property on the host element.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="nd"&gt;HostBinding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;innerHtml&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
 &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;We bind to the &lt;code&gt;innerHtml&lt;/code&gt; (&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML"&gt;ref&lt;/a&gt;) property of the host element. We can also do it in this way:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nativeElement&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;innerHtml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;some text&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To get access to the host element, we inject &lt;code&gt;ElementRef&lt;/code&gt; in the constructor, and also since we are going to be playing around with direct HTML manipulation, I have also injected &lt;code&gt;DomSanitizer&lt;/code&gt; (&lt;a href="https://angular.io/api/platform-browser/DomSanitizer"&gt;ref&lt;/a&gt;) to sanitize the HTML before we inject it into the element.&lt;/p&gt;

&lt;p&gt;So now we move on to the actual logic which we can write in the &lt;code&gt;ngOnChanges&lt;/code&gt; (&lt;a href="https://angular.io/api/core/OnChanges"&gt;ref&lt;/a&gt;) lifecycle hook. So when our search term changes, we can update the highlights. The interesting part is:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;regex&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;RegExp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;searchTerm&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;caseSensitive&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;g&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;gi&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;mark class="highlight &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customClasses&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/mark&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sanitzed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sanitizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sanitize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;SecurityContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HTML&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;newText&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;sanitzed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;First, we set up the regex to help us find the matches. based on the &lt;code&gt;caseSensitive&lt;/code&gt; condition we just add different Regex Flags:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;g - search for all matches.&lt;/li&gt;
&lt;li&gt;gi -search for all matches while ignoring case.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We just wrap the matches with &lt;code&gt;mark&lt;/code&gt; tag using the &lt;code&gt;replace&lt;/code&gt; (&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace"&gt;ref&lt;/a&gt;) method on the string.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;newText&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;regex&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`&amp;lt;mark class="highlight &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;customClasses&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;/mark&amp;gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;After that the newText, which is a HTML string needs to be sanitized before we can bind it to the innerHTML. We use the &lt;code&gt;sanitize&lt;/code&gt; (&lt;a href="https://angular.io/api/platform-browser/DomSanitizer#sanitize"&gt;ref&lt;/a&gt;) method on the &lt;code&gt;DomSanitizer&lt;/code&gt; class:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;sanitzed&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sanitizer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;sanitize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="nx"&gt;SecurityContext&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;HTML&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="nx"&gt;newText&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now we just assign the sanitized value to our &lt;code&gt;content&lt;/code&gt; property which gets added to the &lt;code&gt;innerHTML&lt;/code&gt; via &lt;code&gt;HostBinding&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#usage"&gt;
  &lt;/a&gt;
  Usage
&lt;/h2&gt;

&lt;p&gt;This is how we can use it in our component. Make sure to import our &lt;code&gt;HighlightModule&lt;/code&gt; to make our directive available for use in the component.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;[highlight]=&lt;/span&gt;&lt;span class="s"&gt;"searchTerm"&lt;/span&gt; &lt;span class="na"&gt;[caseSensitive]=&lt;/span&gt;&lt;span class="s"&gt;"true"&lt;/span&gt; &lt;span class="na"&gt;customClasses=&lt;/span&gt;&lt;span class="s"&gt;"my-highlight-class"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      Lorem Ipsum has been the industry's standard dummy text ever since the
      1500s, when an unknown printer took a galley of type and scrambled it to
      make a type specimen book.
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;That's all! We've successfully created a very simple text highlighter in Angular using directives. As always, please don't directly reuse the code above, try to optimize it and you can always add or remove features to it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#demo-and-code"&gt;
  &lt;/a&gt;
  Demo and Code
&lt;/h2&gt;

&lt;p&gt;&lt;iframe src="https://codesandbox.io/embed/11hii"&gt;
&lt;/iframe&gt;
&lt;/p&gt;

&lt;p&gt;CodeSandbox: &lt;a href="https://codesandbox.io/s/ng-highlight-11hii"&gt;https://codesandbox.io/s/ng-highlight-11hii&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#connect-with-me"&gt;
  &lt;/a&gt;
  Connect with me
&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/AdiSreyaj"&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/adisreyaj"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Do add your thoughts in the comments section.&lt;br&gt;
Stay Safe ‚ù§Ô∏è&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>webdev</category>
      <category>tutorial</category>
    </item>
    <item>
      <title>10 Productivity Hacks for  Developers</title>
      <author>bhupendra</author>
      <pubDate>Tue, 01 Jun 2021 04:15:02 +0000</pubDate>
      <link>https://dev.to/bhupendra1011/10-productivity-hacks-for-developers-4f9g</link>
      <guid>https://dev.to/bhupendra1011/10-productivity-hacks-for-developers-4f9g</guid>
      <description>&lt;p&gt;These hacks (quick tips) would help in getting Efficient at work and plan our day to achieve maximum productivity without increasing the amount of time spent on work.&lt;/p&gt;

&lt;p&gt;1) &lt;a href="https://chrome.google.com/webstore/detail/momentum/laookkfknpbbblfpciffpaejjkokdgca?hl=en"&gt;Momentum&lt;/a&gt; - Eliminate Distraction &amp;amp; beat Procrastination&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--IZchG8oo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jckb0zgc4eqh4asuquqp.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--IZchG8oo--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/jckb0zgc4eqh4asuquqp.png" alt="image"&gt;&lt;/a&gt; This is my favorite chrome extension as it enables to focus on important tasks of the day. We no longer get distracted on opening new tab but are focused to complete our priority tasks. Best Part is its &lt;em&gt;FREE&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;2) &lt;a href="https://chrome.google.com/webstore/detail/session-buddy/edacconmaakjimmfgnblocblbcdcpbko?hl=en"&gt;Session Buddy&lt;/a&gt; - Brower Tabs Manager &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--i4ZRh6WE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/asgv5s86h6xlmvy8ufh8.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--i4ZRh6WE--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/asgv5s86h6xlmvy8ufh8.png" alt="image"&gt;&lt;/a&gt;Developers often have multiple tabs open when searching solutions , and if by mistake browser window gets closed then all that effort is gone . Session Buddy will save our important chrome session.&lt;/p&gt;

&lt;p&gt;3) &lt;a href="https://marketplace.visualstudio.com/items?itemName=steoates.autoimport"&gt;Auto Import&lt;/a&gt; - Imports made easy&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--HzrscJGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g4ds6dp6jpejvwcysr4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--HzrscJGu--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/0g4ds6dp6jpejvwcysr4.png" alt="image"&gt;&lt;/a&gt; Often we have to struggle with relative path (../..) of files , while importing them in other files , Auto Import VS code extension completes the import statements for us.&lt;/p&gt;

&lt;p&gt;4) &lt;a href="https://www.screentogif.com/"&gt;ScreenToGif&lt;/a&gt; - Record demos in a breeze&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--unB_Zrpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmtoiqh7vb7fst0z13fd.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--unB_Zrpl--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/hmtoiqh7vb7fst0z13fd.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Windows does not have a inbuilt way to Record GIFs. Often for recording demos we don't prefer videos as its too heavy for simple tasks. After experimenting with many solutions to record GIFs, finally ScreenToGif worked well. Thankyou &lt;a href="https://twitter.com/NickeManarin?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1225829874453094401%7Ctwgr%5E%7Ctwcon%5Es1_&amp;amp;ref_url=https%3A%2F%2Fwww.screentogif.com%2F"&gt;@NickeManarin&lt;/a&gt; for this amazing software. And Best Part is that its &lt;em&gt;FREE&lt;/em&gt;   &lt;/p&gt;

&lt;p&gt;5) &lt;a href="http://www.spadixbd.com/freetools/jruler.htm"&gt;JR Screen Ruler&lt;/a&gt; - Pixel Perfect Spacing Issues&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--9-ASDMlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gi2homksqn8akyl9jr2.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--9-ASDMlX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/8gi2homksqn8akyl9jr2.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
This Virtual Ruler accurately measures anything on screen.&lt;/p&gt;

&lt;p&gt;6) &lt;a href="https://chrome.google.com/webstore/detail/save-to-pocket/niloccemoadcdkdjlinkgdfekeahmflj?hl=en"&gt;Pocket&lt;/a&gt; - Put Knowledge in your Pocket&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--q8Xfzfby--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wiu6ldsv2yk7jqu5hl74.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--q8Xfzfby--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/wiu6ldsv2yk7jqu5hl74.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Often while reading about articles or watching videos , we want to save it for future reference and continue reading it from mobile. The content collected appears across all your devices in a clean, distraction-free space‚Äîthere to read when you‚Äôre ready, whether at home, at work, or on the go.&lt;/p&gt;

&lt;p&gt;7) &lt;a href="https://codeimg.io/"&gt;CodeImg.io&lt;/a&gt; - Share Images of Source Code&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--jKWtnI5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqlux1mhhiyaoclem9sw.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--jKWtnI5l--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/zqlux1mhhiyaoclem9sw.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
This a great tool to create code snippets to be shared on blogs or any social media. Various Light &amp;amp; Dark mode themes are available to create images of code snippets in different formats.&lt;/p&gt;

&lt;p&gt;8) &lt;a href="https://coderadio.freecodecamp.org/"&gt;Code Radio&lt;/a&gt; : 24*7 Music Station for Coders&lt;br&gt;
 &lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--ZahU35vg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/08cu47e7kqqt4h7zvsk6.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ZahU35vg--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/08cu47e7kqqt4h7zvsk6.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Listen to curated, non-vocal and distraction-free music to increase your productivity and focus while coding. There are no commercials to interrupt your flow and its FREE.&lt;/p&gt;

&lt;p&gt;9) &lt;a href="https://learngitbranching.js.org/"&gt;Visualize Git&lt;/a&gt; : Understand Git with Visualization &lt;br&gt;
&lt;a href="https://i.giphy.com/media/bk13qEK9RG9Mlh0V8W/giphy.gif" class="article-body-image-wrapper"&gt;&lt;img src="https://i.giphy.com/media/bk13qEK9RG9Mlh0V8W/giphy.gif" alt="image"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Whenever I am stuck with a git issue , &lt;a href="https://learngitbranching.js.org/?demo"&gt;this&lt;/a&gt; visualizer helps me in understanding git through power of visualization.  This is achieved through a game with different levels to get acquainted with the different git commands.&lt;/p&gt;

&lt;p&gt;10) &lt;a href="https://chrome.google.com/webstore/detail/pomodoro-work-%20-stretch/mbimichnnpdkniapbjenpkdenmmaokcd"&gt;Pomodoro Work &amp;amp; Stretch&lt;/a&gt; - Secret to Effective Time Management&lt;br&gt;
&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--xNW2u4b2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrrwo14rzk12sj094as4.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xNW2u4b2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/nrrwo14rzk12sj094as4.png" alt="image"&gt;&lt;/a&gt;&lt;br&gt;
Thinking in terms of tomatoes (Pomodoro is Italian for tomato üçÖ) rather than hours has really helped me to have focused work sessions with short break to stretch. Now a days this is extremely important not have mental fatigue with sustained concentration. Learn more how &lt;a href="https://francescocirillo.com/pages/pomodoro-technique"&gt;Pomodoro Technique&lt;/a&gt; can make us  productive, more focused and even smarter.&lt;/p&gt;




</description>
      <category>webdev</category>
      <category>programming</category>
      <category>productivity</category>
    </item>
    <item>
      <title>Angular : How to automate angular deployment for AWS S3 Angular Website??</title>
      <author>Rajesh Kumar Yadav</author>
      <pubDate>Tue, 01 Jun 2021 03:31:38 +0000</pubDate>
      <link>https://dev.to/rajeshkumaryadavdotcom/angular-how-to-automate-angular-deployment-for-aws-s3-angular-website-4g2d</link>
      <guid>https://dev.to/rajeshkumaryadavdotcom/angular-how-to-automate-angular-deployment-for-aws-s3-angular-website-4g2d</guid>
      <description>&lt;p&gt;If you have hosted your angular app to AWS S3 then you can automate your ng build -prod and drag and drop to S3 bucket by simply following below steps -  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 1 - Add &lt;a class="mentioned-user" href="https://dev.to/jefiozie"&gt;@jefiozie&lt;/a&gt;
/ngx-aws-deploy to your project and for this run below command (your angular CLI should be up-to-date)&lt;/strong&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ng add @jefiozie/ngx-aws-deploy
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;&lt;strong&gt;Step 2 - Provide necessary details to the terminal while step 1 is in progress.&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
You will be prompted for a couple of questions:&lt;br&gt;&lt;br&gt;
Your AWS Region&lt;br&gt;&lt;br&gt;
The bucket you would like the files to be uploaded.&lt;br&gt;&lt;br&gt;
The Secret Access Key&lt;br&gt;&lt;br&gt;
The Access key Id&lt;br&gt;&lt;br&gt;
The folder where the files should be uploaded (optional)  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 3 - Verify the details you have provided is correct, open angular.json and search for deploy and should be able to see below code&lt;/strong&gt; -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;angular&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;update&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;builder&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;

&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;deploy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;builder&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;@jefiozie/ngx-aws-deploy:deploy&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;options&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;region&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR REGION&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;bucket&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR BUCKET&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;secretAccessKey&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR SECRET ACCESSKEY&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;accessKeyId&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;YOUR ACCESS KEY ID&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can get your access key id and secret access key in your AWS console. Region you can see in your S3 url and bucket name you already know but if you can see it in your url.  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Step 4 - Run ng deploy command and it will build and deploy your app to S3&lt;/strong&gt;.  &lt;/p&gt;

&lt;p&gt;All Done  &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extra Bits-&lt;/strong&gt;&lt;br&gt;&lt;br&gt;
If after following all above steps you run into trouble and get below error -&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="mi"&gt;403&lt;/span&gt; &lt;span class="nx"&gt;Forbidden&lt;/span&gt;
&lt;span class="nx"&gt;Code&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;AccessDenied&lt;/span&gt;
&lt;span class="nx"&gt;Message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Access&lt;/span&gt; &lt;span class="nx"&gt;Denied&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Then the solution is to specify bucket policy, for this go to S3 and then your bucket and then permission, there you will find bucket policy, just paste below code and click save.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Version&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;2012-10-17&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Statement&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Sid&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;PublicReadGetObject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Effect&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Allow&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Principal&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Action&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;s3:GetObject&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Resource&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;arn:aws:s3:::your-bucket-name-here/*&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;In above code replace the word your-bucket-name-here with your bucket name and click on save.  &lt;/p&gt;

&lt;p&gt;All done, refresh the page and your app will up and running.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/rkycom"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--Rb9xKs4G--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With all that being said, I highly recommend you keep learning!&lt;/p&gt;

&lt;p&gt;Thank you for reading this article. Please feel free to connect with me on &lt;a href="https://www.linkedin.com/in/www-rajeshkumaryadav-com/"&gt;LinkedIn&lt;/a&gt; and &lt;a href="https://twitter.com/rky_com"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>angular</category>
      <category>typescript</category>
      <category>programming</category>
      <category>webdev</category>
    </item>
    <item>
      <title>The 10 Important Full-Stack Web Development Tools in 2021</title>
      <author>Elijah Trillionz</author>
      <pubDate>Tue, 01 Jun 2021 02:26:28 +0000</pubDate>
      <link>https://dev.to/elijahtrillionz/the-10-important-full-stack-web-development-tools-in-2021-1d77</link>
      <guid>https://dev.to/elijahtrillionz/the-10-important-full-stack-web-development-tools-in-2021-1d77</guid>
      <description>&lt;p&gt;There is a saying "as a full-stack developer, you need to learn everything" - pirple.&lt;/p&gt;

&lt;p&gt;As it is true for you to learn everything as a full-stack web developer, you also need to be familiar with a lot of tools that will make your job easier and faster.&lt;/p&gt;

&lt;p&gt;Full-Stack web development covers both front-end and back-end web development. So this article spans across front-end and back-end web development tools.&lt;/p&gt;

&lt;p&gt;For each of the tools I outline, I will not fail to tell you what specific part of web development that tool belongs to.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#tools"&gt;
  &lt;/a&gt;
  Tools
&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#vscode"&gt;VSCode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#github"&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#postman"&gt;Postman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#chrome"&gt;Chrome DevTools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bootstrap"&gt;Bootstrap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#react"&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vue"&gt;Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#figma"&gt;Figma&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#npm"&gt;NPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sass"&gt;Sass&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;
  &lt;a href="#1-vscode-text-editor"&gt;
  &lt;/a&gt;
  1. &lt;a&gt;VSCode - Text Editor&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--kIssoTzJ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/vscode-web-development-tools.png" alt="web development tools - vscode" title="web development tools - vscode"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://code.visualstudio.com/"&gt;&lt;strong&gt;VSCode (Visual Studio Code)&lt;/strong&gt;&lt;/a&gt; is a &lt;strong&gt;text editor&lt;/strong&gt; that is used to write and manage code. A text editor falls into both a front-end and back-end tool.&lt;/p&gt;

&lt;p&gt;VSCode is the most popular text editor so far, is the most used text editor according to the &lt;a href="https://insights.stackoverflow.com/survey/2019#technology-_-most-popular-development-environments"&gt;2019 Stack Overflow Developer Survey&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is most popular because of its unending extensions that just keep getting better. Its UX is no different as it is very customizable.&lt;/p&gt;

&lt;p&gt;VSCode enables &lt;a href="https://code.visualstudio.com/docs/editor/intellisense"&gt;intellisense&lt;/a&gt;. Intellisense provides smart completions, code hints and suggestions, snippets.&lt;/p&gt;

&lt;p&gt;VScode also enables a &lt;a href="https://code.visualstudio.com/docs/editor/debugging"&gt;built-in debugger&lt;/a&gt;, built-in &lt;a href="https://code.visualstudio.com/docs/editor/versioncontrol"&gt;Git management&lt;/a&gt; (Git management is discussed below), &lt;a href="https://code.visualstudio.com/docs/editor/integrated-terminal"&gt;Integrated Terminal&lt;/a&gt; with multiple terminal support.&lt;/p&gt;

&lt;p&gt;Other text editors are &lt;a href="https://atom.io/"&gt;Atom&lt;/a&gt;, &lt;a href="https://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt;. &lt;a href="https://geekflare.com/code-text-editors/"&gt;Geekflare has an extensive list of the best text editors in 2021&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#2-github-git-repository-manager"&gt;
  &lt;/a&gt;
  2. &lt;a&gt;GitHub - Git repository manager&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://github.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--YGmQsR6B--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/githuboauth.jpg" alt="web development tools - github" title="web development tools - github"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="http://github.com"&gt;&lt;strong&gt;GitHub&lt;/strong&gt;&lt;/a&gt; is the most popular and most used &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt; repository manager. It is so because of its numerous features and its accessibilities.&lt;/p&gt;

&lt;p&gt;GitHub is where big companies like Facebook, Google, Twitter, Microsoft, etc host their source codes, build, ship, and maintain their software.&lt;/p&gt;

&lt;p&gt;It was voted as the most used collaboration tool in the &lt;a href="https://insights.stackoverflow.com/survey/2020#technology-collaboration-tools"&gt;2020 Stack Overflow Developer Survery&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;GitHub has tools for issue tracking, code review, collaboration, continuous integration, and general code management.&lt;/p&gt;

&lt;p&gt;GitHub is for both front-end and back-end web development.&lt;/p&gt;

&lt;p&gt;As we have said, GitHub is a Git repository manager. And Git is a distributive &lt;a href="https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control"&gt;version control system&lt;/a&gt;. A &lt;strong&gt;version control system also called source code management&lt;/strong&gt; is a software utility that manages and tracks changes to your source code.&lt;/p&gt;

&lt;p&gt;Git is the most used version control system. A lot of developers are so used to it that they don't even know that there are others. I didn't know before doing this research.&lt;/p&gt;

&lt;p&gt;Other Git repository managers are &lt;a href="https://about.gitlab.com"&gt;GitLab&lt;/a&gt;, &lt;a href="https://bitbucket.org/product"&gt;BitBucket&lt;/a&gt;. &lt;a href="https://www.cyberciti.biz/open-source/github-alternatives-open-source-seflt-hosted/"&gt;See a list of others&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#3-postman-api-testing"&gt;
  &lt;/a&gt;
  3. &lt;a&gt;Postman - API Testing&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.postman.com/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--xuQlPJ3Q--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/web-development-tools-postman.png" alt="web development tools - postman" title="web development tools - postman"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.postman.com/"&gt;&lt;strong&gt;Postman&lt;/strong&gt;&lt;/a&gt; is an API testing tool used to test if APIs meet expectations.&lt;/p&gt;

&lt;p&gt;Postman is beyond a testing tool, with Postman you can collaborate to build APIs. This really benefits teams who are building an API.&lt;/p&gt;

&lt;p&gt;With tools like this, you do not need to build a front-end interface to test if your APIs are as expected.&lt;/p&gt;

&lt;p&gt;An API testing tool is a back-end tool. &lt;a href="https://nordicapis.com/top-25-api-testing-tools/"&gt;Nordic APIs has a good list with pros and cons of API testing tools&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are some APIs like &lt;a href="https://developers.facebook.com/tools/explorer/"&gt;Facebook API&lt;/a&gt; and &lt;a href="https://webdeverguide.com/api-to-spice-up-your-clients-website"&gt;Spurwing API&lt;/a&gt; that enables testing in their API documentation. That can save you the stress of getting an API testing tool to test their APIs.&lt;/p&gt;

&lt;p&gt;Also, there is some very good API testing tool available as extensions in the VSCode text editor like &lt;a href="https://marketplace.visualstudio.com/items?itemName=rangav.vscode-thunder-client"&gt;Thunder Client&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#4-chrome-devtools-browser-devtools"&gt;
  &lt;/a&gt;
  4. &lt;a&gt;Chrome DevTools - Browser DevTools&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.chrome.com/docs/devtools/"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--wb-_zhHb--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/web-development-tools-chrome-devtools.jpg" alt="web development tools - chrome devtools" title="web development tools - chrome devtools"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.chrome.com/docs/devtools/"&gt;Chrome DevTools&lt;/a&gt; is a set of web development tools built into the &lt;a href="https://www.google.com/chrome/"&gt;Google Chrome browser&lt;/a&gt;. It is common amongst all other browsers, but the features in that of Chrome are exceptional.&lt;/p&gt;

&lt;p&gt;With these tools, you can&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;View and change the DOM,&lt;/li&gt;
&lt;li&gt;View and change a page's style,&lt;/li&gt;
&lt;li&gt;Debug JavaScript in the console,&lt;/li&gt;
&lt;li&gt;Debug JavaScript with the built-in debugger&lt;/li&gt;
&lt;li&gt;Run and see messages JavaScript in the console,&lt;/li&gt;
&lt;li&gt;Optimize website speed,&lt;/li&gt;
&lt;li&gt;View and change web storage and cookies.&lt;/li&gt;
&lt;li&gt;Inspect network activity,&lt;/li&gt;
&lt;li&gt;Optimize websites for different devices.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Other web browsers with the DevTools are &lt;a href="https://developer.mozilla.org/en-US/docs/Tools"&gt;Mozilla Firefox&lt;/a&gt;, &lt;a href="https://docs.microsoft.com/en-us/microsoft-edge/devtools-guide-chromium/beginners/html"&gt;Edge&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Chrome DevTools is a front-end tool.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#5-bootstrap-css-frameworks"&gt;
  &lt;/a&gt;
  5. &lt;a&gt;Bootstrap - CSS Frameworks&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://getbootstrap.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--z56NYEOv--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/web-development-tools-bootsrap.png" alt="web development tools - bootsrap" title="web development tools - bootsrap"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A &lt;a href="https://geekflare.com/best-css-frameworks/"&gt;&lt;strong&gt;CSS framework&lt;/strong&gt;&lt;/a&gt; is a library that eases and speeds up design with the CSS language.&lt;/p&gt;

&lt;p&gt;Center aligning a div in CSS has being a pain in the ass for many developers and/or designers. But with CSS frameworks you can do that within a split second.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt; is one of the most popular CSS frameworks developed by Twitter, Bootstrap has a large community that you can run to for help if there be a need for that.&lt;/p&gt;

&lt;p&gt;One beautiful thing about Bootstrap and other CSS frameworks is that it is easy to learn and to adapt to.&lt;/p&gt;

&lt;p&gt;Other notable CSS frameworks are &lt;a href="https://tailwindcss.com/"&gt;TailWind&lt;/a&gt;, &lt;a href="https://get.foundation/"&gt;Foundation&lt;/a&gt;. &lt;a href="https://geekflare.com/best-css-frameworks/"&gt;Geekflare has an insightful list of CSS frameworks with pros and cons&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Bootstrap is a front-end tool.&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;You might be interested in &lt;a href="https://webdeverguide.com/20-places-to-learn-programming-for-free"&gt;20+ Places to Learn Programming for Free&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#6-react-javascript-libraries"&gt;
  &lt;/a&gt;
  6. &lt;a&gt;React - JavaScript Libraries&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://reactjs.org"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--ALmxs6FQ--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/web-development-tools-react.png" alt="web development tools - react" title="web development tools - react"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://reactjs.org/"&gt;&lt;strong&gt;React&lt;/strong&gt;&lt;/a&gt; is a popular &lt;a href="https://generalassemb.ly/blog/what-is-a-javascript-library/"&gt;JavaScript library&lt;/a&gt; that is used to build user interfaces (both web and mobile) and single-page applications.&lt;/p&gt;

&lt;p&gt;With React a collection of prewritten code snippets can be used and reused to perform common JavaScript functions.&lt;/p&gt;

&lt;p&gt;Specifically and elaborately, React allows us to create reusable UI components. These components are what make up our website.&lt;/p&gt;

&lt;p&gt;There are maintained supporting packages and libraries that make building complex applications with React possible.&lt;/p&gt;

&lt;p&gt;These packages can be accessed with NPM and/or yarn - discussed in this article.&lt;/p&gt;

&lt;p&gt;Other JavaScript Libraries are &lt;a href="https://jquery.com/"&gt;jQuery&lt;/a&gt;, &lt;a href="https://alvarotrigo.com/fullPage/"&gt;fullPageJS&lt;/a&gt;. &lt;a href="https://www.freecodecamp.org/news/10-javascript-libraries-you-should-try/"&gt;Here are others you would find useful&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;React is a front-end tool.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#7-vuejs-javascript-frameworks"&gt;
  &lt;/a&gt;
  7. &lt;a&gt;Vue.js - JavaScript Frameworks&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://vuejs.org"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--x7eyrra3--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/web-development-tools-vuejs.png" alt="web development tools - vuejs" title="web development tools - vuejs"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://vuejs.org/"&gt;&lt;strong&gt;Vue.js&lt;/strong&gt;&lt;/a&gt; is a popular &lt;a href="https://skillcrush.com/blog/what-is-a-javascript-framework/"&gt;JavaScript framework&lt;/a&gt; for building user interfaces (web, mobile and desktop) and single-page applications.&lt;/p&gt;

&lt;p&gt;Vue.js is a very light framework that has a positive impact on your SEO. Altexspot has an outlined pros and cons of VueJS.&lt;/p&gt;

&lt;p&gt;Vue.js may be for one-page applications, but complex applications that will require routing, state management, and building tooling are offered through officially maintained supporting libraries and packages.&lt;/p&gt;

&lt;p&gt;Other frameworks are &lt;a href="https://angular.io/"&gt;Angular&lt;/a&gt;, &lt;a href="https://svelte.dev/"&gt;Svelte&lt;/a&gt;. You can find a list of some others &lt;a href="https://hackr.io/blog/best-javascript-frameworks"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Vue.js is a front-end tool.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#8-figma-design-tools"&gt;
  &lt;/a&gt;
  8. &lt;a&gt;Figma - Design Tools&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://figma.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--zVc-H-v8--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/web-development-tools-figma.jpg" alt="web development tools - figma" title="web development tools - figma"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://figma.com"&gt;Figma&lt;/a&gt; is a design tool that helps with mockups, prototyping, and testing. While Figma may not be the best design tool out there, but it is the best option to start with.&lt;/p&gt;

&lt;p&gt;Apart from personal use, Figma is reliable because of its enabled real-time collaboration. As a team of designers, you can make use of Figma to collaborate and design great things.&lt;/p&gt;

&lt;p&gt;Other design tools that may be best options for personal and professional use are &lt;a href="https://www.adobe.com/products/xd.html"&gt;Adobe XD&lt;/a&gt;, &lt;a href="https://www.invisionapp.com/studio"&gt;InVision Studio&lt;/a&gt;, &lt;a href="https://www.sketch.com/"&gt;Sketch&lt;/a&gt;. &lt;a href="https://www.creativebloq.com/features/best-web-design-tools"&gt;Creativeblog has listed 22 web design tools in this article.&lt;/a&gt;&lt;/p&gt;




&lt;p&gt;&lt;strong&gt;You might be interested in &lt;a href="https://webdeverguide.com/how-to-become-a-web-developer-in-2021"&gt;How to Become a Web Developer in 2021&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;




&lt;h2&gt;
  &lt;a href="#9-npm-package-managers"&gt;
  &lt;/a&gt;
  9. &lt;a&gt;NPM - Package Managers&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://npmjs.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--d4cJQETh--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/05/web-development-tools-npm.png" alt="web development tools - npm" title="web development tools - npm"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://npmjs.com"&gt;NPM&lt;/a&gt; which stands for Node Package Manager is a package manager for JavaScript and NodeJS (a JavaScript run-time environment).&lt;/p&gt;

&lt;p&gt;NodeJs is a JavaScript runtime environment that basically extends JavaScript into a server-side scripting language (&lt;a href="https://en.wikipedia.org/wiki/Server-side_scripting"&gt;https://en.wikipedia.org/wiki/Server-side_scripting&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;With NodeJS, we can execute JavaScript outside of the browser. And with that, we can build awesome servers for our websites using JavaScript.&lt;/p&gt;

&lt;p&gt;NPM is where we can find packages to use for our apps, both front-end, and back-end. These packages can also be installed into our projects via NPM CLI.&lt;/p&gt;

&lt;p&gt;Other package managers for JavaScript and NodeJs are &lt;a href="https://yarnpkg.com/"&gt;yarn&lt;/a&gt;, and &lt;a href="https://pnpm.io/"&gt;pnpm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Yarn is also a very popular package manager, and developers often find it difficult to decide which to use between NPM and yarn. &lt;a href="https://blog.logrocket.com/javascript-package-managers-compared/"&gt;Logrocket has made a comparison between these two package managers.&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#10-sass-css-preprocessors"&gt;
  &lt;/a&gt;
  10. &lt;a&gt;Sass - CSS PreProcessors&lt;/a&gt;
&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://sass-lang.com"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--BLl_XAlw--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://webdeverguide.com/wp-content/uploads/2021/06/web-development-tools-sass.png" alt="web development tools - sass" title="web development tools - sass"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With tools like &lt;a href="https://sass-lang.com/"&gt;Sass (Syntactically Awesome Style Sheet)&lt;/a&gt;, CSS has had an increase in its simplicity and readability. Sass is a &lt;a href="https://raygun.com/blog/css-preprocessors-examples/"&gt;CSS preprocessor&lt;/a&gt; which enable us to use logic in CSS.&lt;/p&gt;

&lt;p&gt;CSS preprocessors are programs that add new features in CSS such as variables, nesting, mixins, inheritance selector, functions, and mathematical operations.&lt;/p&gt;

&lt;p&gt;Other CSS Preprocessors are &lt;a href="https://lesscss.org/"&gt;Less&lt;/a&gt; and &lt;a href="https://stylus-lang.com/"&gt;Stylus&lt;/a&gt;. See a comparison &lt;a href="https://raygun.com/blog/css-preprocessors-examples/"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sass is a front-end tool.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h3&gt;

&lt;p&gt;A farmer without his tools is just another man. But a farmer with his tools but has no idea how it works is yet another dumb man. As a developer you are no different, get acquainted with the tools you &lt;strong&gt;NEED&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Alright, have a nice time trying these tools out and sticking with the needed ones. Until next time, if you find this article useful and would love to see more of this, you can support me by becoming a &lt;a href="https://www.patreon.com/elijahtrillionz"&gt;Patron&lt;/a&gt;. Or you can &lt;a href="https://www.buymeacoffee.com/dashboard"&gt;buy me a coffee&lt;/a&gt;.&lt;/p&gt;

</description>
      <category>discuss</category>
      <category>javascript</category>
      <category>beginners</category>
      <category>productivity</category>
    </item>
    <item>
      <title>LeetCode 146. LRU Cache (javascript solution)
</title>
      <author>codingpineapple</author>
      <pubDate>Tue, 01 Jun 2021 02:19:46 +0000</pubDate>
      <link>https://dev.to/cod3pineapple/leetcode-146-lru-cache-javascript-solution-5a24</link>
      <guid>https://dev.to/cod3pineapple/leetcode-146-lru-cache-javascript-solution-5a24</guid>
      <description>&lt;h3&gt;
  &lt;a href="#description"&gt;
  &lt;/a&gt;
  Description:
&lt;/h3&gt;

&lt;p&gt;Design a data structure that follows the constraints of a Least Recently Used (LRU) cache.&lt;/p&gt;

&lt;p&gt;Implement the LRUCache class:&lt;/p&gt;

&lt;p&gt;LRUCache(int capacity) Initialize the LRU cache with positive size capacity.&lt;br&gt;
int get(int key) Return the value of the key if the key exists, otherwise return -1.&lt;br&gt;
void put(int key, int value) Update the value of the key if the key exists. Otherwise, add the key-value pair to the cache. If the number of keys exceeds the capacity from this operation, evict the least recently used key.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#solution"&gt;
  &lt;/a&gt;
  Solution:
&lt;/h3&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nx"&gt;LRUCache&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;constructor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Map&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;capacity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;v&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

  &lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;has&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kd"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;capacity&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;next&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;value&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// keys().next().value returns first item's key&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



</description>
      <category>algorithms</category>
      <category>javascript</category>
    </item>
    <item>
      <title>CS Data Structures: Fixed¬†Array</title>
      <author>Andrew Lundy</author>
      <pubDate>Tue, 01 Jun 2021 02:02:56 +0000</pubDate>
      <link>https://dev.to/andrewlundydev/cs-data-structures-fixed-array-53c5</link>
      <guid>https://dev.to/andrewlundydev/cs-data-structures-fixed-array-53c5</guid>
      <description>&lt;h2&gt;
  &lt;a href="#exordium"&gt;
  &lt;/a&gt;
  Exordium
&lt;/h2&gt;

&lt;p&gt;A fixed (or fixed-size, fixed-length) array is an array that has a max amount of items. Such arrays are used when the programmer knows how many elements an array should hold‚Ää-‚Ääsuch as the number of enemy spaceships a game should display on-screen at once or the value of an 8-bit character.&lt;/p&gt;

&lt;p&gt;Some languages, such as C, Objective-C, and C++, use fixed arrays, while more modern languages use arrays that aren't set in size. In a language that uses fixed arrays, once you set the size of the array‚Ää-‚Ää&lt;em&gt;it does not change&lt;/em&gt;. For example, if a fixed array is initialized with 15 elements, the array can not store 16 elements. Though the array is incapable of growth, it is capable of mutation. With the first 15 elements, if the 14th element needed to be changed, it could be. If an element needs to be deleted, it can be; the fixed-size of 15 can hold less than 15 elements; it just can't hold more.&lt;/p&gt;

&lt;p&gt;Below is an array in C++ that holds 15 integers. The elements of the array are placed in a contiguous block of memory:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;int foo [15];
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When working with fixed arrays, it's important to be precise and understand &lt;em&gt;why&lt;/em&gt; you're using this type of array. They leave room for overflow errors and are generally not a flexible data structure. That said, the good thing about these types of arrays is that they are predictable and fast. You know what to expect regarding the number of elements stored in the array and how large the array is in memory.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#fixed-array-operations"&gt;
  &lt;/a&gt;
  Fixed Array Operations
&lt;/h2&gt;

&lt;p&gt;Fixed arrays should be able to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Append new elements to the end&lt;/li&gt;
&lt;li&gt;Insert new elements at the beginning and in the middle&lt;/li&gt;
&lt;li&gt;Delete elements&lt;/li&gt;
&lt;li&gt;Look up elements by index&lt;/li&gt;
&lt;li&gt;Count the size of the array&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Appending an element to the end of a fixed array is easy as long as the array isn't full. Again, the size of a fixed array does not change after it is set. This operation has a time complexity of &lt;strong&gt;&lt;em&gt;O(1)&lt;/em&gt;&lt;/strong&gt;. Another quick operation is finding an element by the index, also a &lt;strong&gt;constant time complexity&lt;/strong&gt;. To continue on the topic of time complexity, inserting and deleting are expensive with a fixed array. If an element is being inserted in the middle or beginning of a fixed array, all the elements to the right of the new element must be moved up a position in memory by 1.&lt;/p&gt;

&lt;p&gt;To add the number 5 to a fixed array:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--K23BPdt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622508708588/11N9Xt8VQ.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--K23BPdt---/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622508708588/11N9Xt8VQ.png" alt="Fixed Array Insert.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Something to note;&lt;/strong&gt; if there is code that references an object of the array using an index, and a new element is added into the middle of the array, the indexes no longer reference the correct objects.&lt;/p&gt;

&lt;p&gt;Furthermore, deleting an element from the array is the same process, but reversed. The elements are moved one position to the left instead of the right.&lt;/p&gt;

&lt;p&gt;To delete the number 5 from the same array:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://res.cloudinary.com/practicaldev/image/fetch/s--eOIYc3n0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622508729566/d47nw7ocm.png" class="article-body-image-wrapper"&gt;&lt;img src="https://res.cloudinary.com/practicaldev/image/fetch/s--eOIYc3n0--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://cdn.hashnode.com/res/hashnode/image/upload/v1622508729566/d47nw7ocm.png" alt="Fixed Array Delete.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Both inserting and deleting elements from a fixed array results in linear time complexity‚Ää-‚Ää&lt;strong&gt;&lt;em&gt;O(n)&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-build-a-fixed%C2%A0array"&gt;
  &lt;/a&gt;
  How to Build a Fixed¬†Array
&lt;/h2&gt;

&lt;p&gt;Here, Swift is used to build a fixed array, though the concept can be used in any language.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#the-fundamental-properties"&gt;
  &lt;/a&gt;
  The Fundamental Properties
&lt;/h3&gt;

&lt;p&gt;The first thing to do is create the fixed array, its basic properties, and an initializer. The array needs the following properties:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;A max size to ensure it doesn't grow past what the use case needs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;A default value (this will be used to add an item to the array when needed).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An internal array (in this case, it's a &lt;a href="https://developer.apple.com/documentation/swift/array"&gt;Swift array&lt;/a&gt; ).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The count (which is updated each time an element is removed or added to the array).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Two public properties that return information. The first being the elements within the array, and the second being the length of the array. &lt;code&gt;count&lt;/code&gt; is not directly used to return the array's length (e.g., &lt;code&gt;fixedArray.count&lt;/code&gt;) because it is private. It is private because in this use case, tracking the amount of elements in an array with a counter and then reading the &lt;code&gt;count&lt;/code&gt; property is faster than directly calling the internal &lt;code&gt;count&lt;/code&gt; method on the array; which traverses through each element, then returns the number of elements in the array.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;A Fixed Array in Swift:&lt;/em&gt;&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;struct FixedArray&amp;lt;T&amp;gt; {
    private var maxSize: Int
    private var defaultValue: T
    private var array = [T]()
    private var count = 0

    public var elements: [T] {
        return array
    }

    public var length: Int {
        return count
    }

    public init(maxSize: Int, defaultValue: T) {
        self.maxSize = maxSize
        self.defaultValue = defaultValue
        array = .init()
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The initializer sets the max amount of elements to be allowed in the array, along with the 'default value' of the array. &lt;code&gt;defaultValue&lt;/code&gt; is used to add a default object to the array when appending new objects. This will be seen in the &lt;code&gt;insert&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;The other thing to add in the Swift implementation of a Fixed Array is a custom subscript. In Swift, you can add  &lt;a href="https://docs.swift.org/swift-book/LanguageGuide/Subscripts.html"&gt;custom subscripts&lt;/a&gt; to Structs, Classes, and Enumerations in order to access the elements of a collection, list, or sequence.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;struct FixedArray&amp;lt;T&amp;gt; {
    private var maxSize: Int
    private var defaultValue: T
    private var array = [T]()
    private var count = 0

    public var elements: [T] {
        return array
    }

    public var length: Int {
        return count
    }

    public init(maxSize: Int, defaultValue: T) {
        self.maxSize = maxSize
        self.defaultValue = defaultValue
        array = .init()
    }

    subscript(index: Int) -&amp;gt; T {
        assert(index &amp;gt;= 0)
        assert(index &amp;lt; count)
        return array[index]
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;When a fixed array is initialized, it is empty. This can be seen by using the &lt;code&gt;elements&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; properties.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;var array = FixedArray&amp;lt;Int&amp;gt;(maxSize: 6, defaultValue: 0)
array.elements
// []
array.length
// 0
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#adding-functionality-to-the%C2%A0array"&gt;
  &lt;/a&gt;
  Adding Functionality to the¬†Array
&lt;/h3&gt;

&lt;p&gt;As noted in the &lt;strong&gt;Fixed Array Operations&lt;/strong&gt; section of this article, fixed arrays should be able to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Append new elements to the end.&lt;/li&gt;
&lt;li&gt;Insert new elements at the beginning and in the middle.&lt;/li&gt;
&lt;li&gt;Delete elements.&lt;/li&gt;
&lt;li&gt;Look up elements by index.&lt;/li&gt;
&lt;li&gt;Count the size of the array.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is important to note that any time an element is added or removed, the count variable must be updated in accordance with this action.&lt;/p&gt;

&lt;p&gt;The first custom method will be named &lt;code&gt;appendToEnd()&lt;/code&gt; and it will do just that‚Ää-‚Ääadd an element to the end of the array. Before the method adds the element, it uses assert to make sure &lt;code&gt;count&lt;/code&gt; is less than &lt;code&gt;maxSize&lt;/code&gt;¬†. If &lt;code&gt;count&lt;/code&gt; is greater than the total amount of allowed elements, no more elements can be added to the array. To learn more about using assert in Swift, &lt;a href="https://developer.apple.com/documentation/swift/1541112-assert"&gt;check out the official Apple Documentation&lt;/a&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Append to end of array
public mutating func appendToEnd(element: T) {
    assert(count &amp;lt; maxSize)
    array.append(element)
    count += 1
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Next, inserting elements in the middle and beginning of the array. There are a few things to keep in mind when writing this method.&lt;/p&gt;

&lt;p&gt;The array has the chance to hold different variations when adding new elements. It may be empty; it may be full; it may be half full, etc. Also, the index where an element needs to be added may be different each time the method is used.&lt;/p&gt;

&lt;p&gt;In this instance, the method checks for the following cases then proceeds to handle the insertion accordingly:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;index&lt;/code&gt; is 0, and the &lt;code&gt;count&lt;/code&gt; property is 0. The array is empty, and the element needs to be inserted at the beginning, as the very first element in the array.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;count&lt;/code&gt; is equal to &lt;code&gt;maxSize&lt;/code&gt; and the &lt;code&gt;index&lt;/code&gt; is 0 OR the &lt;code&gt;count&lt;/code&gt; is equal to &lt;code&gt;maxSize&lt;/code&gt; and the &lt;code&gt;index&lt;/code&gt; is not equal to 0. The array is full, and the element needs to be inserted at the beginning, or somewhere in the middle or end. This ensure that no new elements are added to the array when trying to insert them when the array is full.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The &lt;code&gt;index&lt;/code&gt; is 0, and &lt;code&gt;count&lt;/code&gt; is not equal to &lt;code&gt;maxSize&lt;/code&gt;. In this case, the requested element needs to be inserted at the beginning, shifting the current elements to the right in order to make room for the new element. This is accomplished by appending a new default element to the end of the array, traversing through the elements starting at index 1, moving through the reversed version of the elements in the array, and moving them one space to the right. Remember that the value of &lt;code&gt;index&lt;/code&gt; in this instance is 0, which ensures that the loop starts with the second element; leaving the new element in place at the 0th index of the array.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In all other cases, the array will do the same thing as case 3 above, except the loop doesn't start at index 0. In this case, the loop starts at the given value of &lt;code&gt;index&lt;/code&gt;. A visualization of this can be seen earlier in this article; under the &lt;strong&gt;Fixed Array Operations&lt;/strong&gt; section.&lt;br&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Insert at index of array
public mutating func insert(element: T, at index: Int) {
    assert(index &amp;gt;= 0)
    assert(index &amp;lt; maxSize)

    if index == 0 &amp;amp;&amp;amp; count == 0 {
        array.append(element)
        count += 1
    } else if count == maxSize &amp;amp;&amp;amp; index == 0 || count == maxSize &amp;amp;&amp;amp; index != 0 {
        array[index] = element
    } else if index == 0 &amp;amp;&amp;amp; count != maxSize {
        array.append(defaultValue)
        count += 1

        for i in (index+1..&amp;lt;count).reversed() {
            array[i] = array[i - 1]
        }

        array[index] = element
    } else {
        array.append(defaultValue)
        count += 1

        for i in (index..&amp;lt;count).reversed() {
            array[i] = array[i - 1]
        }

        array[index] = element

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The Fixed Array now looks like this:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;struct FixedArray&amp;lt;T&amp;gt; {
    private var maxSize: Int
    private var defaultValue: T
    private var array = [T]()
    private var count = 0

    public var elements: [T] {
        return array
    }

    public var length: Int {
        return count
    }

    public init(maxSize: Int, defaultValue: T) {
        self.maxSize = maxSize
        self.defaultValue = defaultValue
        array = .init()
    }

    // Append to end of array
    public mutating func appendToEnd(element: T) {
        assert(count &amp;lt; maxSize)
        array.append(element)
        count += 1
    }

    // Insert at index of array
    public mutating func insert(element: T, at index: Int) {
        assert(index &amp;gt;= 0)
        assert(index &amp;lt; maxSize)

        if index == 0 &amp;amp;&amp;amp; count == 0 {
            array.append(element)
            count += 1
        } else if count == maxSize &amp;amp;&amp;amp; index == 0 || count == maxSize &amp;amp;&amp;amp; index != 0 {
            array[index] = element
        } else if index == 0 &amp;amp;&amp;amp; count != maxSize {
            array.append(defaultValue)
            count += 1

            for i in (index+1..&amp;lt;count).reversed() {
                array[i] = array[i - 1]
            }

            array[index] = element
        } else {
            array.append(defaultValue)
            count += 1

            for i in (index..&amp;lt;count).reversed() {
                array[i] = array[i - 1]
            }

            array[index] = element

        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;To start adding elements to the array, use either the &lt;code&gt;appendToEnd&lt;/code&gt; or &lt;code&gt;insert&lt;/code&gt; methods. Here, the integers &lt;strong&gt;1&lt;/strong&gt;, &lt;strong&gt;2&lt;/strong&gt;, and &lt;strong&gt;3&lt;/strong&gt; are added to the end of the array. Then, &lt;strong&gt;5&lt;/strong&gt; is inserted at the 3rd index, &lt;strong&gt;6&lt;/strong&gt; is inserted at the 4th index, and &lt;strong&gt;4&lt;/strong&gt; is inserted at the 3rd index. The array ends up holding &lt;code&gt;[1, 2, 3, 4, 5, 6]&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array.appendToEnd(element: 1)
array.appendToEnd(element: 2)
array.appendToEnd(element: 3)
array.elements
// [1, 2, 3]

array.insert(element: 5, at: 3)
array.elements
// [1, 2, 3, 5]

array.insert(element: 6, at: 4)
array.elements
// [1, 2, 3, 5, 6]

array.insert(element: 4, at: 3)
array.elements
// [1, 2, 3, 4, 5, 6]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Now that the array can have elements added to it, there needs to be a way to remove these elements. There are three ways to remove items in a fixed array:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Remove the element at the end of the array.&lt;/li&gt;
&lt;li&gt;Remove the item based on a given index.&lt;/li&gt;
&lt;li&gt;Remove all of the items in the array.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To delete an item from the end, simply make sure that &lt;code&gt;count&lt;/code&gt; is greater than 0, use the &lt;code&gt;removeLast&lt;/code&gt; method on the array, and decrement 1 from &lt;code&gt;count&lt;/code&gt;.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Delete from end of array
public mutating func deleteFromEnd() {
    assert(count &amp;gt; 0)
    array.removeLast()
    count -= 1
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Removing an element based on a given index is a bit trickier. The &lt;code&gt;index&lt;/code&gt; must be less than or equal to 0, and it must also be less than the value of &lt;code&gt;count&lt;/code&gt;. After these assertions pass, &lt;code&gt;count&lt;/code&gt; is decremented by 1, the element at the given index is obtained in &lt;code&gt;result&lt;/code&gt; and the &lt;code&gt;remove&lt;/code&gt; function of the Swift array is called with &lt;code&gt;index&lt;/code&gt; as its parameter. Finally, the element that is stored in &lt;code&gt;result&lt;/code&gt; is returned.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Delete at index of array
public mutating func removeAt(index: Int) -&amp;gt; T {
    assert(index &amp;gt;= 0)
    assert(index &amp;lt; count)
    count -= 1
    let result = array[index]
    array.remove(at: index)
    return result
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Below is the usage of these two methods. The &lt;code&gt;deleteFromEnd&lt;/code&gt; method does not return the element that is removed, but the &lt;code&gt;removeAt&lt;/code&gt; method does. How they are used is up to the programmer.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array.deleteFromEnd()
array.elements
// [1, 2, 3, 4, 5]

array.removeAt(index: 1)
// Returns 2

array.elements
// [1, 3, 4, 5]
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The final 'delete' method is one that removes all of the elements from the array. The method loops through the value of &lt;code&gt;count&lt;/code&gt;, removes the last element, and decrements &lt;code&gt;count&lt;/code&gt; by 1. Once it processes the array, it then sets &lt;code&gt;count&lt;/code&gt; to 0.&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;// Remove all elements
public mutating func removeAll() {
    for _ in 0..&amp;lt;count {
        array.removeLast()
        count -= 1
    }
    count = 0
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Again, the usage of this method:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;array.removeAll()
array.elements
// []
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;The methods seen here can be changed to whatever use-case the programmer may have, but they perform the basic actions that a Fixed Array should be able to perform.&lt;/p&gt;

&lt;p&gt;One thing that needs to be seen is the usage of the subscripts. It was mentioned earlier, but hasn't been used in code yet.&lt;/p&gt;

&lt;h3&gt;
  &lt;a href="#custom-subscript-in-a-fixed%C2%A0array"&gt;
  &lt;/a&gt;
  Custom Subscript in a Fixed¬†Array
&lt;/h3&gt;

&lt;p&gt;Custom subscripts work the same way as regular subscripts. The difference is that you define what is returned when using the subscript. When an element needs to be accessed in a Fixed Array, (or other custom data type), it's accessed by using brackets‚Ää-‚Ää&lt;code&gt;array[element]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When defining a custom  &lt;a href="https://docs.swift.org/swift-book/LanguageGuide/Subscripts.html"&gt;subscript in Swift&lt;/a&gt;, a return type must be defined. This is expected, as subscripts return elements. Here is the subscript again:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;subscript(index: Int) -&amp;gt; T {
    assert(index &amp;gt;= 0)
    assert(index &amp;lt; count)
    return array[index]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Imagine that &lt;code&gt;array&lt;/code&gt; holds &lt;code&gt;[1, 2, 3, 4, 5, 6]&lt;/code&gt;. Here is how an element would be accessed:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;print(array.element)
// [1, 2, 3, 4, 5, 6]
let firstElement = array[0]
let fourthElement = array[3]

print(firstElement)
// 1
print(fourthElement)
// 4
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#the-complete-fixed-array-in%C2%A0swift"&gt;
  &lt;/a&gt;
  The Complete Fixed Array in¬†Swift
&lt;/h2&gt;

&lt;p&gt;That is it for the Fixed Array. This data structure can be implemented in any language, and the use case is up to the programmer. A Fixed Array can be used for situations such as tracking the number of enemies on screen in a game, creating a representation of a byte (&lt;a href="https://www.tutorialsmate.com/2020/12/memory-units-of-computer.html"&gt;bytes are a storage unit in computing&lt;/a&gt; and are made up of 8 bits. Bits are the smallest unit used for storage on a computer), or limiting the number of family members that a user can add to their family account of a subscription.&lt;/p&gt;

&lt;p&gt;Below is the complete Fixed Array in Swift, using a &lt;a href="https://docs.swift.org/swift-book/LanguageGuide/Generics.html"&gt;generic type&lt;/a&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;struct FixedArray&amp;lt;T&amp;gt; {
    private var maxSize: Int
    private var defaultValue: T
    private var array = [T]()
    private var count = 0

    public var elements: [T] {
        return array
    }

    public var length: Int {
        return count
    }

    public init(maxSize: Int, defaultValue: T) {
        self.maxSize = maxSize
        self.defaultValue = defaultValue
        array = .init()
    }

    // Append to end of array
    public mutating func appendToEnd(element: T) {
        assert(count &amp;lt; maxSize)
        array.append(element)
        count += 1
    }

    // Insert at index of array
    public mutating func insert(element: T, at index: Int) {
        assert(index &amp;gt;= 0)
        assert(index &amp;lt; maxSize)

        if index == 0 &amp;amp;&amp;amp; count == 0 {
            array.append(element)
            count += 1
        } else if count == maxSize &amp;amp;&amp;amp; index == 0 || count == maxSize &amp;amp;&amp;amp; index != 0 {
            array[index] = element
        } else if index == 0 &amp;amp;&amp;amp; count != maxSize {
            array.append(defaultValue)
            count += 1

            for i in (index+1..&amp;lt;count).reversed() {
                array[i] = array[i - 1]
            }

            array[index] = element
        } else {
            array.append(defaultValue)
            count += 1

            for i in (index..&amp;lt;count).reversed() {
                array[i] = array[i - 1]
            }

            array[index] = element

        }
    }

    // Delete from end of array
    public mutating func deleteFromEnd() {
        assert(count &amp;gt; 0)
        array.removeLast()
        count -= 1
    }

    // Delete at index of array
    public mutating func removeAt(index: Int) -&amp;gt; T {
        assert(index &amp;gt;= 0)
        assert(index &amp;lt; count)
        count -= 1
        let result = array[index]
        array.remove(at: index)
        return result
    }

    // Remove all elements
    public mutating func removeAll() {
        for _ in 0..&amp;lt;count {
            array.removeLast()
            count -= 1
        }
        count = 0
    }

    subscript(index: Int) -&amp;gt; T {
        assert(index &amp;gt;= 0)
        assert(index &amp;lt; count)
        return array[index]
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#conclusion"&gt;
  &lt;/a&gt;
  Conclusion
&lt;/h2&gt;

&lt;p&gt;Thank you for reading. If you're looking for more articles about computer science and software engineering, give these a read:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; &lt;a href="https://medium.com/swift-coding/rotate-arrays-in-swift-7f223007ad6f"&gt;Rotate Arrays in Swift&lt;/a&gt;  &lt;em&gt;by Steven Curtis&lt;/em&gt;
&lt;/li&gt;
&lt;li&gt; &lt;a href="https://andrew-lundy.medium.com/cs-data-structures-2d-array-c041032de4a7"&gt;CS Data Structures: 2D Array&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://andrew-lundy.medium.com/computer-science-recursion-6495e33144b7"&gt;Computer Science: Recursion&lt;/a&gt; &lt;/li&gt;
&lt;li&gt; &lt;a href="https://medium.com/swlh/the-concept-of-coupling-a5e910d852ae"&gt;The Concept of Coupling&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>computerscience</category>
    </item>
    <item>
      <title>add phpinsights in your laravel project</title>
      <author>Ariel Mejia</author>
      <pubDate>Tue, 01 Jun 2021 01:51:58 +0000</pubDate>
      <link>https://dev.to/arielmejiadev/add-phpinsights-in-your-laravel-project-269l</link>
      <guid>https://dev.to/arielmejiadev/add-phpinsights-in-your-laravel-project-269l</guid>
      <description>&lt;p&gt;phpinsights is a helpful package to add code quality analysis, it measure the code in four areas:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Code (code reliable, loosely coupled, simple, and clean).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Complexity (check the statements and methods complexity).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Architecture (check the patterns and directories that you add, traits, interfaces, etc).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Style (check how you follow PSR-4 or PSR-12).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So it makes sense right?, lets install it.&lt;/p&gt;

&lt;h2&gt;
  &lt;a href="#how-to-install-it"&gt;
  &lt;/a&gt;
  How to install it
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;composer require nunomaduro/phpinsights --dev
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#publish-config-file"&gt;
  &lt;/a&gt;
  Publish config file
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php artisan vendor:publish --provider="NunoMaduro\PhpInsights\Application\Adapters\Laravel\InsightsServiceProvider"
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h2&gt;
  &lt;a href="#execute-phpinsights"&gt;
  &lt;/a&gt;
  Execute PHPinsights
&lt;/h2&gt;



&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="n"&gt;php&lt;/span&gt; &lt;span class="n"&gt;artisan&lt;/span&gt; &lt;span class="n"&gt;insights&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;h3&gt;
  &lt;a href="#customize-it"&gt;
  &lt;/a&gt;
  Customize it
&lt;/h3&gt;

&lt;p&gt;On Laravel there are some code standards that could mismatch on how PHPInsights works, so you can edit the config file to adjust to your project/needs/packages etc.&lt;/p&gt;

&lt;h4&gt;
  &lt;a href="#here-an-example-of-how-i-use-it-with-a-laravel-project-with-jetstream"&gt;
  &lt;/a&gt;
  Here an example of how I use it with a Laravel project with Jetstream.
&lt;/h4&gt;

&lt;p&gt;You can exclude files by typing the full path name, as an array item.&lt;/p&gt;

&lt;p&gt;On &lt;code&gt;config/insights.php&lt;/code&gt;:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="s1"&gt;'exclude'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="s1"&gt;'app/Actions/Jetstream'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'HandleInertiaRequests.php'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'_ide_macros.php'&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can add custom rules:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="s1"&gt;'add'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="nc"&gt;Classes&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="nc"&gt;ForbiddenFinalClasses&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;You can even remove rules that does not make sense, you can customize it as you need:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="s1"&gt;'remove'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
        &lt;span class="nc"&gt;AlphabeticallySortedUsesSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;DeclareStrictTypesSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;DisallowMixedTypeHintSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;ForbiddenDefineFunctions&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;ForbiddenNormalClasses&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;ForbiddenTraits&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;ParameterTypeHintSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;PropertyTypeHintSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;ReturnTypeHintSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;UselessFunctionDocCommentSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;UnusedParameterSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;LineLengthSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;DocCommentSpacingSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;ClassInstantiationSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;NewWithBracesFixer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;NullableTypeForNullDefaultValueSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;DisallowArrayTypeHintSyntaxSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;NoEmptyCommentFixer&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;DisallowShortTernaryOperatorSniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;ForbiddenPublicPropertySniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nc"&gt;DisallowEmptySniff&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;

    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;Another cool feature that you can customize is the "level" of qualification to print it as "green", "yellow" for example, you can customize it on &lt;code&gt;requirements&lt;/code&gt; key, but if you comment, all the content it will work as it is designed by default:&lt;br&gt;
&lt;/p&gt;

&lt;div class="highlight js-code-highlight"&gt;
&lt;pre class="highlight php"&gt;&lt;code&gt;    &lt;span class="s1"&gt;'requirements'&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="c1"&gt;//        'min-quality' =&amp;gt; 0,&lt;/span&gt;
&lt;span class="c1"&gt;//        'min-complexity' =&amp;gt; 0,&lt;/span&gt;
&lt;span class="c1"&gt;//        'min-architecture' =&amp;gt; 0,&lt;/span&gt;
&lt;span class="c1"&gt;//        'min-style' =&amp;gt; 0,&lt;/span&gt;
&lt;span class="c1"&gt;//        'disable-security-check' =&amp;gt; false,&lt;/span&gt;
    &lt;span class="p"&gt;],&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;/div&gt;



&lt;p&gt;This are some useful customizations, if you want to run automatically &lt;code&gt;PHPInsights&lt;/code&gt; on every commit or push you can install husky and configure it to run PHPInsights on the husky hooks, is just a cool idea to make your work easier.&lt;/p&gt;

&lt;p&gt;That is all for this post, thanks for reading!&lt;/p&gt;

</description>
      <category>php</category>
      <category>laravel</category>
    </item>
    <item>
      <title>this</title>
      <author>Amritanshu Dev Rawat</author>
      <pubDate>Tue, 01 Jun 2021 01:44:42 +0000</pubDate>
      <link>https://dev.to/amritanshu/this-51dn</link>
      <guid>https://dev.to/amritanshu/this-51dn</guid>
      <description>&lt;ul&gt;
&lt;li&gt;
There is a Car class -&amp;gt; Car{this.something}&lt;/li&gt;
&lt;li&gt;
There is 2 objects of Car class -&amp;gt; car1, car2&lt;/li&gt;
&lt;li&gt;
When I access Car with car1 -&amp;gt; 
[this == car1][this.something == car1.something]&lt;/li&gt;
&lt;li&gt;
When I access Car with car2 -&amp;gt; 
[this == car2] [this.something == car2.something]&lt;/li&gt;
&lt;/ul&gt;

</description>
      <category>techtalks</category>
      <category>java</category>
      <category>javascript</category>
      <category>python</category>
    </item>
  </channel>
</rss>
